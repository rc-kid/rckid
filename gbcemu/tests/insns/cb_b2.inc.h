    TEST(gbcemu, opcode_cb_b2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B2 0000
        gbc.setState(0x94f, 0x261d, 0x34f0, 0xa130, 0x6d84, 0x9372, 0x1, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x261d);
        EXPECT(gbc.pc(), 0x951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0001
        gbc.setState(0xbdc4, 0x4754, 0x9530, 0xd992, 0x5062, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4754);
        EXPECT(gbc.pc(), 0xbdc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc4), 0xcb);
        EXPECT(gbc.readMem(0xbdc5), 0xb2);
        // CB B2 0002
        gbc.setState(0x9cdb, 0x2316, 0xb9e0, 0x62fc, 0x5c6e, 0xa153, 0x1, 0x0);
        gbc.writeMem(0x9cdb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2316);
        EXPECT(gbc.pc(), 0x9cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdb), 0xcb);
        EXPECT(gbc.readMem(0x9cdc), 0xb2);
        // CB B2 0003
        gbc.setState(0x6a81, 0x4f66, 0x3a80, 0xdb6d, 0xc17e, 0xeba4, 0x1, 0x0);
        gbc.writeMem(0x6a81, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4f66);
        EXPECT(gbc.pc(), 0x6a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0004
        gbc.setState(0x8dc8, 0xcfb7, 0x1060, 0x32f4, 0x43e4, 0x12f4, 0x1, 0x0);
        gbc.writeMem(0x8dc8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcfb7);
        EXPECT(gbc.pc(), 0x8dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc8), 0xcb);
        EXPECT(gbc.readMem(0x8dc9), 0xb2);
        // CB B2 0005
        gbc.setState(0x6fc4, 0xd40, 0x4d40, 0xe53c, 0xe5de, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x6fc4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd40);
        EXPECT(gbc.pc(), 0x6fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0006
        gbc.setState(0xc317, 0xadc5, 0x5f20, 0x6e76, 0xda08, 0x47f3, 0x1, 0x1);
        gbc.writeMem(0xc317, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0xc319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc317), 0xcb);
        EXPECT(gbc.readMem(0xc318), 0xb2);
        // CB B2 0007
        gbc.setState(0x58ca, 0x2f1c, 0xf640, 0x643e, 0x3afe, 0xcaa, 0x0, 0x1);
        gbc.writeMem(0x58ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2f1c);
        EXPECT(gbc.pc(), 0x58cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0008
        gbc.setState(0xb431, 0x6d5c, 0xf0c0, 0x473c, 0xa2b, 0x5bfa, 0x1, 0x1);
        gbc.writeMem(0xb431, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6d5c);
        EXPECT(gbc.pc(), 0xb433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb431), 0xcb);
        EXPECT(gbc.readMem(0xb432), 0xb2);
        // CB B2 0009
        gbc.setState(0xecbd, 0xb5bd, 0xc770, 0x89b0, 0x6e13, 0x39fa, 0x0, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb5bd);
        EXPECT(gbc.pc(), 0xecbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbd), 0xcb);
        EXPECT(gbc.readMem(0xecbe), 0xb2);
        // CB B2 000A
        gbc.setState(0x26d5, 0x92b2, 0x57d0, 0x56c1, 0x342, 0x33b6, 0x0, 0x0);
        gbc.writeMem(0x26d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x92b2);
        EXPECT(gbc.pc(), 0x26d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 000B
        gbc.setState(0xb979, 0x376e, 0xdbf0, 0x3214, 0xb3e, 0x47cc, 0x1, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x376e);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb979), 0xcb);
        EXPECT(gbc.readMem(0xb97a), 0xb2);
        // CB B2 000C
        gbc.setState(0xb165, 0x6254, 0xe400, 0x2b6, 0xbfd3, 0x2ccc, 0x1, 0x0);
        gbc.writeMem(0xb165, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6254);
        EXPECT(gbc.pc(), 0xb167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb165), 0xcb);
        EXPECT(gbc.readMem(0xb166), 0xb2);
        // CB B2 000D
        gbc.setState(0x1d2a, 0x7654, 0xd730, 0xded9, 0x212e, 0x771f, 0x1, 0x1);
        gbc.writeMem(0x1d2a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7654);
        EXPECT(gbc.pc(), 0x1d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 000E
        gbc.setState(0x9cd7, 0xd484, 0xb180, 0x3931, 0x2df6, 0xd239, 0x1, 0x0);
        gbc.writeMem(0x9cd7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd484);
        EXPECT(gbc.pc(), 0x9cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd7), 0xcb);
        EXPECT(gbc.readMem(0x9cd8), 0xb2);
        // CB B2 000F
        gbc.setState(0x24cb, 0x35c7, 0x24e0, 0xea0a, 0x5d40, 0xed26, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x35c7);
        EXPECT(gbc.pc(), 0x24cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0010
        gbc.setState(0x8b22, 0xbf4f, 0x8620, 0xbeb1, 0x7833, 0x37f8, 0x0, 0x1);
        gbc.writeMem(0x8b22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0x8b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b22), 0xcb);
        EXPECT(gbc.readMem(0x8b23), 0xb2);
        // CB B2 0011
        gbc.setState(0xa20e, 0x9339, 0x5380, 0x87ba, 0x625b, 0xf961, 0x0, 0x0);
        gbc.writeMem(0xa20e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9339);
        EXPECT(gbc.pc(), 0xa210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20e), 0xcb);
        EXPECT(gbc.readMem(0xa20f), 0xb2);
        // CB B2 0012
        gbc.setState(0x2829, 0x8b91, 0xf130, 0x2563, 0x62ba, 0x1b7f, 0x0, 0x1);
        gbc.writeMem(0x2829, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0x282b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0013
        gbc.setState(0x92a0, 0xbfe9, 0x3890, 0x7a29, 0x3d3c, 0x2fd4, 0x0, 0x0);
        gbc.writeMem(0x92a0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbfe9);
        EXPECT(gbc.pc(), 0x92a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a0), 0xcb);
        EXPECT(gbc.readMem(0x92a1), 0xb2);
        // CB B2 0014
        gbc.setState(0x10bd, 0xcd0d, 0x8a60, 0xe3f7, 0x10d4, 0xfe6, 0x0, 0x0);
        gbc.writeMem(0x10bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcd0d);
        EXPECT(gbc.pc(), 0x10bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0015
        gbc.setState(0xd710, 0xd3d8, 0xbf30, 0xd71d, 0xf4ab, 0x4060, 0x0, 0x1);
        gbc.writeMem(0xd710, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd3d8);
        EXPECT(gbc.pc(), 0xd712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd710), 0xcb);
        EXPECT(gbc.readMem(0xd711), 0xb2);
        // CB B2 0016
        gbc.setState(0x411b, 0x4dc5, 0xef00, 0xb7cc, 0x89bd, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0x411b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4dc5);
        EXPECT(gbc.pc(), 0x411d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0017
        gbc.setState(0x1673, 0x5d65, 0xdca0, 0xf992, 0xd014, 0xdb8a, 0x0, 0x1);
        gbc.writeMem(0x1673, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5d65);
        EXPECT(gbc.pc(), 0x1675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0018
        gbc.setState(0x7cdf, 0x8159, 0x7140, 0xaa2a, 0x6605, 0x831b, 0x0, 0x0);
        gbc.writeMem(0x7cdf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8159);
        EXPECT(gbc.pc(), 0x7ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0019
        gbc.setState(0x71f1, 0xc40e, 0xc120, 0x33b4, 0x8ddc, 0x92ac, 0x0, 0x1);
        gbc.writeMem(0x71f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc40e);
        EXPECT(gbc.pc(), 0x71f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 001A
        gbc.setState(0xa627, 0x5e10, 0x6750, 0x2ba6, 0x5fe0, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0xa627, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5e10);
        EXPECT(gbc.pc(), 0xa629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa627), 0xcb);
        EXPECT(gbc.readMem(0xa628), 0xb2);
        // CB B2 001C
        gbc.setState(0xc752, 0xee98, 0x2c20, 0x5a2d, 0x29d8, 0x1291, 0x1, 0x1);
        gbc.writeMem(0xc752, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xee98);
        EXPECT(gbc.pc(), 0xc754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc752), 0xcb);
        EXPECT(gbc.readMem(0xc753), 0xb2);
        // CB B2 001D
        gbc.setState(0xc018, 0x2448, 0xfd40, 0x3d85, 0x9f4e, 0xee69, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2448);
        EXPECT(gbc.pc(), 0xc01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc018), 0xcb);
        EXPECT(gbc.readMem(0xc019), 0xb2);
        // CB B2 001E
        gbc.setState(0x4c6, 0xaf7c, 0x4100, 0x1fda, 0x6ded, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0x4c6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaf7c);
        EXPECT(gbc.pc(), 0x4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 001F
        gbc.setState(0x822f, 0xc3ba, 0x1790, 0xc6b2, 0x1dd2, 0x14a6, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc3ba);
        EXPECT(gbc.pc(), 0x8231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822f), 0xcb);
        EXPECT(gbc.readMem(0x8230), 0xb2);
        // CB B2 0020
        gbc.setState(0x6cc6, 0xa8f5, 0xe530, 0xad7e, 0x4531, 0x1d01, 0x0, 0x0);
        gbc.writeMem(0x6cc6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa8f5);
        EXPECT(gbc.pc(), 0x6cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0021
        gbc.setState(0x60fb, 0xd3ec, 0x8c0, 0xf751, 0x9cff, 0x6d47, 0x0, 0x0);
        gbc.writeMem(0x60fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd3ec);
        EXPECT(gbc.pc(), 0x60fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0022
        gbc.setState(0x39ba, 0x822f, 0x2fd0, 0x649f, 0x105, 0x567, 0x1, 0x1);
        gbc.writeMem(0x39ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x822f);
        EXPECT(gbc.pc(), 0x39bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0024
        gbc.setState(0x566a, 0x2c4b, 0x7d50, 0xa4da, 0x5f13, 0x5a0, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2c4b);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0025
        gbc.setState(0xa7aa, 0xdbb6, 0x1d70, 0x5e5e, 0xc7f, 0x9f0d, 0x1, 0x0);
        gbc.writeMem(0xa7aa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdbb6);
        EXPECT(gbc.pc(), 0xa7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7aa), 0xcb);
        EXPECT(gbc.readMem(0xa7ab), 0xb2);
        // CB B2 0026
        gbc.setState(0x2555, 0x42bb, 0x28a0, 0x77e0, 0xd44d, 0x352d, 0x1, 0x0);
        gbc.writeMem(0x2555, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x42bb);
        EXPECT(gbc.pc(), 0x2557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0027
        gbc.setState(0x8be0, 0xa7c3, 0x8f00, 0x491a, 0x693a, 0xda32, 0x0, 0x1);
        gbc.writeMem(0x8be0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0x8be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be0), 0xcb);
        EXPECT(gbc.readMem(0x8be1), 0xb2);
        // CB B2 0028
        gbc.setState(0xed8, 0xab13, 0x3680, 0x6096, 0xb38e, 0xf70, 0x0, 0x0);
        gbc.writeMem(0xed8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0xeda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0029
        gbc.setState(0x161c, 0xf90d, 0x9210, 0x2a2f, 0xf18e, 0x40d, 0x1, 0x0);
        gbc.writeMem(0x161c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf90d);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 002A
        gbc.setState(0x1b83, 0xf868, 0xfe00, 0x65c9, 0xa865, 0xea, 0x0, 0x1);
        gbc.writeMem(0x1b83, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf868);
        EXPECT(gbc.pc(), 0x1b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 002B
        gbc.setState(0xbb41, 0x2bad, 0x6f40, 0xe2a9, 0x651c, 0xf411, 0x0, 0x1);
        gbc.writeMem(0xbb41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2bad);
        EXPECT(gbc.pc(), 0xbb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb41), 0xcb);
        EXPECT(gbc.readMem(0xbb42), 0xb2);
        // CB B2 002C
        gbc.setState(0xda0f, 0xa02f, 0x9af0, 0x5b6f, 0xe93f, 0xe98e, 0x0, 0x0);
        gbc.writeMem(0xda0f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa02f);
        EXPECT(gbc.pc(), 0xda11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0f), 0xcb);
        EXPECT(gbc.readMem(0xda10), 0xb2);
        // CB B2 002D
        gbc.setState(0x564d, 0x5438, 0x9170, 0xea22, 0x23c5, 0xd3f9, 0x1, 0x1);
        gbc.writeMem(0x564d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5438);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 002E
        gbc.setState(0x4a06, 0xd36e, 0x7b40, 0x70c5, 0x586d, 0xbdc7, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd36e);
        EXPECT(gbc.pc(), 0x4a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 002F
        gbc.setState(0x35e9, 0x11f5, 0x7490, 0x382b, 0x215, 0x9b6e, 0x1, 0x0);
        gbc.writeMem(0x35e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x11f5);
        EXPECT(gbc.pc(), 0x35eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0030
        gbc.setState(0xd05b, 0x4c12, 0x480, 0xe872, 0xe875, 0x7e4, 0x1, 0x1);
        gbc.writeMem(0xd05b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4c12);
        EXPECT(gbc.pc(), 0xd05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05b), 0xcb);
        EXPECT(gbc.readMem(0xd05c), 0xb2);
        // CB B2 0031
        gbc.setState(0xbd07, 0x88e8, 0xb060, 0x3e8a, 0x188, 0xb855, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x88e8);
        EXPECT(gbc.pc(), 0xbd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd07), 0xcb);
        EXPECT(gbc.readMem(0xbd08), 0xb2);
        // CB B2 0032
        gbc.setState(0xc7f9, 0xad77, 0xc340, 0x3284, 0x921d, 0x5054, 0x1, 0x0);
        gbc.writeMem(0xc7f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xad77);
        EXPECT(gbc.pc(), 0xc7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f9), 0xcb);
        EXPECT(gbc.readMem(0xc7fa), 0xb2);
        // CB B2 0033
        gbc.setState(0x93be, 0x3e23, 0x2c30, 0x80dc, 0xf27a, 0x125d, 0x1, 0x1);
        gbc.writeMem(0x93be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0x93c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93be), 0xcb);
        EXPECT(gbc.readMem(0x93bf), 0xb2);
        // CB B2 0034
        gbc.setState(0x926c, 0x6b0b, 0x2f00, 0x53ea, 0x8adc, 0x5168, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6b0b);
        EXPECT(gbc.pc(), 0x926e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926c), 0xcb);
        EXPECT(gbc.readMem(0x926d), 0xb2);
        // CB B2 0035
        gbc.setState(0x29c2, 0x2f78, 0xe060, 0x300c, 0xee93, 0x587d, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2f78);
        EXPECT(gbc.pc(), 0x29c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0036
        gbc.setState(0xd817, 0xcecf, 0x22c0, 0x17d7, 0xd5be, 0x7681, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0xd819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd817), 0xcb);
        EXPECT(gbc.readMem(0xd818), 0xb2);
        // CB B2 0037
        gbc.setState(0xefc5, 0x189d, 0xae40, 0x6d0e, 0xd0a6, 0xae3c, 0x0, 0x1);
        gbc.writeMem(0xefc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x189d);
        EXPECT(gbc.pc(), 0xefc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc5), 0xcb);
        EXPECT(gbc.readMem(0xefc6), 0xb2);
        // CB B2 0038
        gbc.setState(0xe7ba, 0x8080, 0x36a0, 0x3c88, 0xbd43, 0xae02, 0x0, 0x0);
        gbc.writeMem(0xe7ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8080);
        EXPECT(gbc.pc(), 0xe7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ba), 0xcb);
        EXPECT(gbc.readMem(0xe7bb), 0xb2);
        // CB B2 0039
        gbc.setState(0x4f3c, 0x4a49, 0xb270, 0x1536, 0x3574, 0x7e5b, 0x0, 0x0);
        gbc.writeMem(0x4f3c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4a49);
        EXPECT(gbc.pc(), 0x4f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 003A
        gbc.setState(0x2b29, 0x7bea, 0xe140, 0x9bc6, 0x2e38, 0x3df6, 0x0, 0x0);
        gbc.writeMem(0x2b29, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7bea);
        EXPECT(gbc.pc(), 0x2b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 003B
        gbc.setState(0xbd84, 0x3f1a, 0x6450, 0x2d07, 0x7d40, 0x74a, 0x0, 0x1);
        gbc.writeMem(0xbd84, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3f1a);
        EXPECT(gbc.pc(), 0xbd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd84), 0xcb);
        EXPECT(gbc.readMem(0xbd85), 0xb2);
        // CB B2 003C
        gbc.setState(0x4a17, 0x698b, 0x55d0, 0x4104, 0xc9f7, 0x13eb, 0x1, 0x0);
        gbc.writeMem(0x4a17, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x698b);
        EXPECT(gbc.pc(), 0x4a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 003D
        gbc.setState(0xe8d5, 0x33fc, 0x3cc0, 0x25d4, 0x9225, 0x2e00, 0x0, 0x0);
        gbc.writeMem(0xe8d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x33fc);
        EXPECT(gbc.pc(), 0xe8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d5), 0xcb);
        EXPECT(gbc.readMem(0xe8d6), 0xb2);
        // CB B2 003E
        gbc.setState(0xa01, 0x41f0, 0x7640, 0x51f8, 0xb7a9, 0xf4db, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x41f0);
        EXPECT(gbc.pc(), 0xa03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 003F
        gbc.setState(0x4d37, 0x710b, 0x2c90, 0xc991, 0xf68, 0x76e5, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0x4d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0040
        gbc.setState(0x6c28, 0x32e7, 0xaa20, 0xd366, 0xad43, 0x5a28, 0x0, 0x0);
        gbc.writeMem(0x6c28, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x32e7);
        EXPECT(gbc.pc(), 0x6c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0041
        gbc.setState(0x5515, 0xfb96, 0x4410, 0x8146, 0x870b, 0xf6fa, 0x0, 0x1);
        gbc.writeMem(0x5515, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfb96);
        EXPECT(gbc.pc(), 0x5517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0042
        gbc.setState(0xaba1, 0x2e5c, 0x7f10, 0x6827, 0x2535, 0xf524, 0x1, 0x1);
        gbc.writeMem(0xaba1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2e5c);
        EXPECT(gbc.pc(), 0xaba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba1), 0xcb);
        EXPECT(gbc.readMem(0xaba2), 0xb2);
        // CB B2 0043
        gbc.setState(0x986e, 0xff9b, 0x7e0, 0x5865, 0x4128, 0x8485, 0x0, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xff9b);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986e), 0xcb);
        EXPECT(gbc.readMem(0x986f), 0xb2);
        // CB B2 0044
        gbc.setState(0xa7a7, 0xbb13, 0x6ec0, 0xc558, 0x94ce, 0xc6b6, 0x1, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbb13);
        EXPECT(gbc.pc(), 0xa7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a7), 0xcb);
        EXPECT(gbc.readMem(0xa7a8), 0xb2);
        // CB B2 0046
        gbc.setState(0x206d, 0x74e2, 0x21a0, 0x45dd, 0x7550, 0xb746, 0x1, 0x1);
        gbc.writeMem(0x206d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x74e2);
        EXPECT(gbc.pc(), 0x206f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0047
        gbc.setState(0xbd5e, 0xb91c, 0x8cf0, 0xdbb6, 0x3dde, 0x48b6, 0x0, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb91c);
        EXPECT(gbc.pc(), 0xbd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5e), 0xcb);
        EXPECT(gbc.readMem(0xbd5f), 0xb2);
        // CB B2 0048
        gbc.setState(0xe8de, 0xcbac, 0xfa40, 0xfdf5, 0x4fd1, 0x8199, 0x1, 0x0);
        gbc.writeMem(0xe8de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcbac);
        EXPECT(gbc.pc(), 0xe8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8de), 0xcb);
        EXPECT(gbc.readMem(0xe8df), 0xb2);
        // CB B2 0049
        gbc.setState(0xb506, 0x77bf, 0xe1f0, 0x5a39, 0xa09f, 0x1ce, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x77bf);
        EXPECT(gbc.pc(), 0xb508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb506), 0xcb);
        EXPECT(gbc.readMem(0xb507), 0xb2);
        // CB B2 004A
        gbc.setState(0xba64, 0xfbeb, 0x7910, 0xc407, 0x4504, 0xc743, 0x1, 0x0);
        gbc.writeMem(0xba64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfbeb);
        EXPECT(gbc.pc(), 0xba66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba64), 0xcb);
        EXPECT(gbc.readMem(0xba65), 0xb2);
        // CB B2 004B
        gbc.setState(0xe4cb, 0xdbd9, 0x2950, 0x9103, 0xa9e, 0x984f, 0x1, 0x1);
        gbc.writeMem(0xe4cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdbd9);
        EXPECT(gbc.pc(), 0xe4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4cb), 0xcb);
        EXPECT(gbc.readMem(0xe4cc), 0xb2);
        // CB B2 004D
        gbc.setState(0x28d4, 0x4ef2, 0xb6f0, 0x140b, 0xb262, 0x7623, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4ef2);
        EXPECT(gbc.pc(), 0x28d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 004E
        gbc.setState(0x16a8, 0xf4ff, 0x3c40, 0x2515, 0x34df, 0xbdae, 0x1, 0x1);
        gbc.writeMem(0x16a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x16aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 004F
        gbc.setState(0x448c, 0x37b3, 0x3e50, 0xdf23, 0xdb0a, 0x4ea1, 0x0, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x37b3);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0050
        gbc.setState(0x47ca, 0xde69, 0xd090, 0x2e1e, 0xb9a8, 0xee2, 0x0, 0x0);
        gbc.writeMem(0x47ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xde69);
        EXPECT(gbc.pc(), 0x47cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0052
        gbc.setState(0xd894, 0xd5d, 0x5350, 0x546a, 0xfe88, 0x3cf1, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd5d);
        EXPECT(gbc.pc(), 0xd896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd894), 0xcb);
        EXPECT(gbc.readMem(0xd895), 0xb2);
        // CB B2 0053
        gbc.setState(0x9551, 0xa0c4, 0xdcd0, 0xf24f, 0xf0b3, 0x1908, 0x0, 0x1);
        gbc.writeMem(0x9551, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa0c4);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9551), 0xcb);
        EXPECT(gbc.readMem(0x9552), 0xb2);
        // CB B2 0054
        gbc.setState(0x3ed1, 0xc524, 0x9d90, 0x8117, 0xa14a, 0xa811, 0x0, 0x0);
        gbc.writeMem(0x3ed1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc524);
        EXPECT(gbc.pc(), 0x3ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0055
        gbc.setState(0x14a9, 0xc921, 0x3ca0, 0xc74e, 0x4b2f, 0xe6a2, 0x1, 0x0);
        gbc.writeMem(0x14a9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc921);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0056
        gbc.setState(0x77e6, 0x76f8, 0xb730, 0xd316, 0xd2d8, 0x2d4d, 0x0, 0x1);
        gbc.writeMem(0x77e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0x77e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0057
        gbc.setState(0xa623, 0x3151, 0x7f30, 0x7717, 0x5b45, 0xd34d, 0x1, 0x1);
        gbc.writeMem(0xa623, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3151);
        EXPECT(gbc.pc(), 0xa625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa623), 0xcb);
        EXPECT(gbc.readMem(0xa624), 0xb2);
        // CB B2 0058
        gbc.setState(0xd7c7, 0x8828, 0x8e20, 0x401f, 0xc5a, 0xa8c4, 0x0, 0x1);
        gbc.writeMem(0xd7c7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8828);
        EXPECT(gbc.pc(), 0xd7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c7), 0xcb);
        EXPECT(gbc.readMem(0xd7c8), 0xb2);
        // CB B2 0059
        gbc.setState(0x535e, 0xb8b6, 0xbe20, 0xeb1e, 0xcb84, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0x535e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb8b6);
        EXPECT(gbc.pc(), 0x5360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 005A
        gbc.setState(0x2341, 0xd1e5, 0x6bf0, 0xaf95, 0x76a5, 0xa427, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd1e5);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 005B
        gbc.setState(0xb1c8, 0xbd4f, 0x9dc0, 0xb29f, 0x767e, 0x369b, 0x0, 0x0);
        gbc.writeMem(0xb1c8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0xb1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c8), 0xcb);
        EXPECT(gbc.readMem(0xb1c9), 0xb2);
        // CB B2 005C
        gbc.setState(0x7245, 0x9cb9, 0x7d20, 0x362a, 0xe77c, 0x689e, 0x0, 0x1);
        gbc.writeMem(0x7245, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9cb9);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 005D
        gbc.setState(0x56ae, 0xfde2, 0xfa80, 0xf89, 0xeb21, 0x94f1, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfde2);
        EXPECT(gbc.pc(), 0x56b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 005E
        gbc.setState(0xec45, 0x25d9, 0x36d0, 0x7205, 0x2baf, 0x5a68, 0x1, 0x0);
        gbc.writeMem(0xec45, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x25d9);
        EXPECT(gbc.pc(), 0xec47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec45), 0xcb);
        EXPECT(gbc.readMem(0xec46), 0xb2);
        // CB B2 005F
        gbc.setState(0xce7, 0x58e9, 0x5c40, 0x8301, 0xaafc, 0x664f, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x58e9);
        EXPECT(gbc.pc(), 0xce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0060
        gbc.setState(0x58a9, 0x294c, 0x1160, 0xa6f8, 0xed42, 0x2f3c, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x294c);
        EXPECT(gbc.pc(), 0x58ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0061
        gbc.setState(0x4fcf, 0xefa2, 0xbe70, 0xc583, 0x653e, 0xd29f, 0x1, 0x0);
        gbc.writeMem(0x4fcf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xefa2);
        EXPECT(gbc.pc(), 0x4fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0062
        gbc.setState(0x9bff, 0x164f, 0xfd80, 0xcbfe, 0xcc4d, 0x2eab, 0x0, 0x0);
        gbc.writeMem(0x9bff, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0x9c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bff), 0xcb);
        EXPECT(gbc.readMem(0x9c00), 0xb2);
        // CB B2 0063
        gbc.setState(0x32eb, 0x1393, 0x98e0, 0x65b, 0xf728, 0xfe1c, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0064
        gbc.setState(0x62cd, 0x28d8, 0xfdb0, 0xa8c0, 0xdce4, 0xc09a, 0x0, 0x0);
        gbc.writeMem(0x62cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x28d8);
        EXPECT(gbc.pc(), 0x62cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0065
        gbc.setState(0x5dca, 0x256d, 0x1b70, 0xa1c3, 0xe89b, 0xa1fb, 0x0, 0x0);
        gbc.writeMem(0x5dca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x256d);
        EXPECT(gbc.pc(), 0x5dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0066
        gbc.setState(0xda70, 0x1880, 0x4e90, 0x7c40, 0x5d01, 0xa5f9, 0x1, 0x0);
        gbc.writeMem(0xda70, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1880);
        EXPECT(gbc.pc(), 0xda72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda70), 0xcb);
        EXPECT(gbc.readMem(0xda71), 0xb2);
        // CB B2 0067
        gbc.setState(0x9040, 0x6d8, 0xa0b0, 0xa9ae, 0xf796, 0xde1e, 0x1, 0x1);
        gbc.writeMem(0x9040, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0x9042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9040), 0xcb);
        EXPECT(gbc.readMem(0x9041), 0xb2);
        // CB B2 0068
        gbc.setState(0x4cd4, 0xb9bf, 0x14b0, 0xac75, 0xcc9f, 0x3094, 0x1, 0x0);
        gbc.writeMem(0x4cd4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb9bf);
        EXPECT(gbc.pc(), 0x4cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0069
        gbc.setState(0x7f75, 0x6f65, 0x7990, 0xa242, 0x99c9, 0xbcf0, 0x0, 0x1);
        gbc.writeMem(0x7f75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6f65);
        EXPECT(gbc.pc(), 0x7f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 006A
        gbc.setState(0x2710, 0x2c3e, 0x5bb0, 0xb745, 0xa636, 0x343, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2c3e);
        EXPECT(gbc.pc(), 0x2712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 006B
        gbc.setState(0xdfd5, 0xea61, 0xf930, 0x145b, 0x265b, 0x6b32, 0x0, 0x0);
        gbc.writeMem(0xdfd5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xea61);
        EXPECT(gbc.pc(), 0xdfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd5), 0xcb);
        EXPECT(gbc.readMem(0xdfd6), 0xb2);
        // CB B2 006C
        gbc.setState(0xdc40, 0xb90a, 0x2130, 0x6805, 0xd675, 0xc6bb, 0x0, 0x1);
        gbc.writeMem(0xdc40, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb90a);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc40), 0xcb);
        EXPECT(gbc.readMem(0xdc41), 0xb2);
        // CB B2 006D
        gbc.setState(0xdd59, 0xd48f, 0xa5a0, 0x624b, 0xb685, 0x9c21, 0x0, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0xdd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd59), 0xcb);
        EXPECT(gbc.readMem(0xdd5a), 0xb2);
        // CB B2 006E
        gbc.setState(0x9b23, 0x7df0, 0x370, 0xe2b5, 0x22a9, 0xac00, 0x1, 0x1);
        gbc.writeMem(0x9b23, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0x9b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b23), 0xcb);
        EXPECT(gbc.readMem(0x9b24), 0xb2);
        // CB B2 006F
        gbc.setState(0x9923, 0x226f, 0xb480, 0xbf3f, 0x5e6d, 0xde4f, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x226f);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9923), 0xcb);
        EXPECT(gbc.readMem(0x9924), 0xb2);
        // CB B2 0070
        gbc.setState(0xda8b, 0x474e, 0x77d0, 0x1af1, 0x2851, 0x7581, 0x1, 0x1);
        gbc.writeMem(0xda8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x474e);
        EXPECT(gbc.pc(), 0xda8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8b), 0xcb);
        EXPECT(gbc.readMem(0xda8c), 0xb2);
        // CB B2 0071
        gbc.setState(0xef4a, 0xb7f1, 0x380, 0x40e0, 0xce4f, 0x20c7, 0x1, 0x0);
        gbc.writeMem(0xef4a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb7f1);
        EXPECT(gbc.pc(), 0xef4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4a), 0xcb);
        EXPECT(gbc.readMem(0xef4b), 0xb2);
        // CB B2 0072
        gbc.setState(0x202a, 0x4fc0, 0x7920, 0xae39, 0x2b46, 0xf88, 0x1, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4fc0);
        EXPECT(gbc.pc(), 0x202c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0073
        gbc.setState(0x8048, 0xf113, 0x5d60, 0x2450, 0x8460, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0x8048, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf113);
        EXPECT(gbc.pc(), 0x804a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8048), 0xcb);
        EXPECT(gbc.readMem(0x8049), 0xb2);
        // CB B2 0074
        gbc.setState(0x2990, 0xbed4, 0x8650, 0x518e, 0x484b, 0x8c36, 0x1, 0x1);
        gbc.writeMem(0x2990, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0x2992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0075
        gbc.setState(0x9043, 0xb0d3, 0x2cf0, 0xc14e, 0x4627, 0x3f91, 0x1, 0x0);
        gbc.writeMem(0x9043, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb0d3);
        EXPECT(gbc.pc(), 0x9045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9043), 0xcb);
        EXPECT(gbc.readMem(0x9044), 0xb2);
        // CB B2 0076
        gbc.setState(0x3bfa, 0x18d7, 0x5f10, 0x8a87, 0xbe5a, 0xd08f, 0x1, 0x1);
        gbc.writeMem(0x3bfa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0x3bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0077
        gbc.setState(0x768c, 0xe5c2, 0x46b0, 0xb097, 0x8d99, 0x97b, 0x1, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe5c2);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0078
        gbc.setState(0xaa98, 0x7c6b, 0x3250, 0xd9f3, 0x10eb, 0x2189, 0x1, 0x0);
        gbc.writeMem(0xaa98, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7c6b);
        EXPECT(gbc.pc(), 0xaa9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa98), 0xcb);
        EXPECT(gbc.readMem(0xaa99), 0xb2);
        // CB B2 0079
        gbc.setState(0x5c6d, 0xe7bc, 0xb0b0, 0x2bbc, 0xe4c5, 0xedd6, 0x1, 0x0);
        gbc.writeMem(0x5c6d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe7bc);
        EXPECT(gbc.pc(), 0x5c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 007A
        gbc.setState(0x25fc, 0xecaa, 0x45f0, 0xed37, 0xe32c, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0x25fc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xecaa);
        EXPECT(gbc.pc(), 0x25fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 007B
        gbc.setState(0x46b0, 0x1b1, 0xed60, 0x9e5b, 0xf1db, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x46b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1b1);
        EXPECT(gbc.pc(), 0x46b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 007C
        gbc.setState(0xdc8d, 0xe19d, 0xf920, 0xc6f8, 0x3152, 0x698e, 0x0, 0x0);
        gbc.writeMem(0xdc8d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe19d);
        EXPECT(gbc.pc(), 0xdc8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8d), 0xcb);
        EXPECT(gbc.readMem(0xdc8e), 0xb2);
        // CB B2 007D
        gbc.setState(0x30fb, 0x7fbf, 0xd9e0, 0x8b27, 0x569, 0x56f, 0x0, 0x0);
        gbc.writeMem(0x30fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7fbf);
        EXPECT(gbc.pc(), 0x30fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0080
        gbc.setState(0x1879, 0x5117, 0xd0b0, 0x25f7, 0xe892, 0x7564, 0x0, 0x1);
        gbc.writeMem(0x1879, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5117);
        EXPECT(gbc.pc(), 0x187b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0081
        gbc.setState(0x7484, 0x6785, 0x2760, 0xfe79, 0xb2d0, 0x106d, 0x0, 0x0);
        gbc.writeMem(0x7484, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6785);
        EXPECT(gbc.pc(), 0x7486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0082
        gbc.setState(0x8f80, 0x6c70, 0x4d20, 0xa13b, 0x1765, 0xdb6d, 0x1, 0x0);
        gbc.writeMem(0x8f80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6c70);
        EXPECT(gbc.pc(), 0x8f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f80), 0xcb);
        EXPECT(gbc.readMem(0x8f81), 0xb2);
        // CB B2 0083
        gbc.setState(0xe9ed, 0xefad, 0x8820, 0xafb2, 0xdc57, 0xf37a, 0x0, 0x1);
        gbc.writeMem(0xe9ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xefad);
        EXPECT(gbc.pc(), 0xe9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0xcb);
        EXPECT(gbc.readMem(0xe9ee), 0xb2);
        // CB B2 0084
        gbc.setState(0x3b9c, 0x73d3, 0x5990, 0x7332, 0xc87, 0xb99d, 0x0, 0x0);
        gbc.writeMem(0x3b9c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x73d3);
        EXPECT(gbc.pc(), 0x3b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0085
        gbc.setState(0x76f1, 0x12d4, 0x8ee0, 0xa978, 0x90dc, 0xb0d4, 0x0, 0x0);
        gbc.writeMem(0x76f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x12d4);
        EXPECT(gbc.pc(), 0x76f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0087
        gbc.setState(0x9, 0xa5ec, 0x6240, 0xa543, 0x8448, 0x96cb, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa5ec);
        EXPECT(gbc.pc(), 0xb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0088
        gbc.setState(0x68f0, 0x692a, 0x730, 0x8c07, 0x1e, 0xf7c0, 0x1, 0x1);
        gbc.writeMem(0x68f0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x692a);
        EXPECT(gbc.pc(), 0x68f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0089
        gbc.setState(0xcf95, 0x9102, 0xa620, 0xf8d6, 0x6bb0, 0x75fd, 0x1, 0x1);
        gbc.writeMem(0xcf95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9102);
        EXPECT(gbc.pc(), 0xcf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf95), 0xcb);
        EXPECT(gbc.readMem(0xcf96), 0xb2);
        // CB B2 008A
        gbc.setState(0x6736, 0x809d, 0x8b10, 0x7211, 0x2c54, 0x8ca4, 0x1, 0x1);
        gbc.writeMem(0x6736, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x809d);
        EXPECT(gbc.pc(), 0x6738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 008B
        gbc.setState(0x67d0, 0xc20f, 0x7ff0, 0x5dee, 0x7c8e, 0xabf4, 0x1, 0x0);
        gbc.writeMem(0x67d0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc20f);
        EXPECT(gbc.pc(), 0x67d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 008C
        gbc.setState(0xecce, 0xa6f2, 0xcc60, 0x919e, 0x7aaf, 0xd6f9, 0x0, 0x1);
        gbc.writeMem(0xecce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa6f2);
        EXPECT(gbc.pc(), 0xecd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecce), 0xcb);
        EXPECT(gbc.readMem(0xeccf), 0xb2);
        // CB B2 008D
        gbc.setState(0xe166, 0x13db, 0xbd0, 0x9be2, 0x755, 0x9bea, 0x0, 0x0);
        gbc.writeMem(0xe166, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x13db);
        EXPECT(gbc.pc(), 0xe168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe166), 0xcb);
        EXPECT(gbc.readMem(0xe167), 0xb2);
        // CB B2 008F
        gbc.setState(0x419b, 0xff7a, 0x6380, 0x725, 0xae63, 0x9245, 0x1, 0x0);
        gbc.writeMem(0x419b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xff7a);
        EXPECT(gbc.pc(), 0x419d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0090
        gbc.setState(0x2e74, 0xbf72, 0x6dc0, 0x3fa4, 0x66ac, 0xe09c, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbf72);
        EXPECT(gbc.pc(), 0x2e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0091
        gbc.setState(0x2484, 0x77c1, 0x6020, 0x32d5, 0xeac0, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x2484, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x77c1);
        EXPECT(gbc.pc(), 0x2486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0092
        gbc.setState(0x48dd, 0x644f, 0x4bc0, 0x7449, 0x905e, 0x6275, 0x0, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x644f);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0093
        gbc.setState(0xc2d4, 0x7602, 0xce0, 0x2809, 0x99b1, 0x8e00, 0x0, 0x0);
        gbc.writeMem(0xc2d4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7602);
        EXPECT(gbc.pc(), 0xc2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d4), 0xcb);
        EXPECT(gbc.readMem(0xc2d5), 0xb2);
        // CB B2 0094
        gbc.setState(0x7d72, 0x1578, 0xc530, 0xe4dd, 0x1e9f, 0x2dda, 0x0, 0x1);
        gbc.writeMem(0x7d72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1578);
        EXPECT(gbc.pc(), 0x7d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0095
        gbc.setState(0x8e85, 0xd842, 0x8c20, 0xa269, 0x1bef, 0x6c9b, 0x0, 0x0);
        gbc.writeMem(0x8e85, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd842);
        EXPECT(gbc.pc(), 0x8e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e85), 0xcb);
        EXPECT(gbc.readMem(0x8e86), 0xb2);
        // CB B2 0096
        gbc.setState(0x557f, 0x268d, 0x3930, 0x9bb0, 0x9676, 0x2d7c, 0x0, 0x0);
        gbc.writeMem(0x557f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x268d);
        EXPECT(gbc.pc(), 0x5581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0098
        gbc.setState(0xcf09, 0x5403, 0xf70, 0x5b80, 0x8e44, 0xd393, 0x0, 0x0);
        gbc.writeMem(0xcf09, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5403);
        EXPECT(gbc.pc(), 0xcf0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf09), 0xcb);
        EXPECT(gbc.readMem(0xcf0a), 0xb2);
        // CB B2 0099
        gbc.setState(0xba14, 0xdb1a, 0x89f0, 0x9dea, 0xba, 0x8f53, 0x0, 0x1);
        gbc.writeMem(0xba14, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdb1a);
        EXPECT(gbc.pc(), 0xba16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba14), 0xcb);
        EXPECT(gbc.readMem(0xba15), 0xb2);
        // CB B2 009A
        gbc.setState(0x92e6, 0x53d5, 0x5b0, 0x9b9a, 0x1a37, 0x2b3a, 0x1, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0x92e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e6), 0xcb);
        EXPECT(gbc.readMem(0x92e7), 0xb2);
        // CB B2 009B
        gbc.setState(0x1998, 0xf821, 0xd280, 0xe2e8, 0xd235, 0x759, 0x0, 0x0);
        gbc.writeMem(0x1998, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf821);
        EXPECT(gbc.pc(), 0x199a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 009C
        gbc.setState(0x20f9, 0xe317, 0xec0, 0xa228, 0x8f89, 0x96c3, 0x0, 0x0);
        gbc.writeMem(0x20f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe317);
        EXPECT(gbc.pc(), 0x20fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 009D
        gbc.setState(0xa986, 0xbec6, 0x3ce0, 0x5402, 0x4bbf, 0xdc20, 0x0, 0x0);
        gbc.writeMem(0xa986, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbec6);
        EXPECT(gbc.pc(), 0xa988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa986), 0xcb);
        EXPECT(gbc.readMem(0xa987), 0xb2);
        // CB B2 009E
        gbc.setState(0x8630, 0xb419, 0xde80, 0x7acb, 0xf87f, 0x265f, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb419);
        EXPECT(gbc.pc(), 0x8632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8630), 0xcb);
        EXPECT(gbc.readMem(0x8631), 0xb2);
        // CB B2 009F
        gbc.setState(0xd05d, 0xc7c0, 0xfdc0, 0xff8, 0x93ad, 0xce9b, 0x1, 0x0);
        gbc.writeMem(0xd05d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc7c0);
        EXPECT(gbc.pc(), 0xd05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05d), 0xcb);
        EXPECT(gbc.readMem(0xd05e), 0xb2);
        // CB B2 00A0
        gbc.setState(0x49e3, 0x21c0, 0xac30, 0xe554, 0xbbc8, 0x5526, 0x0, 0x0);
        gbc.writeMem(0x49e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x21c0);
        EXPECT(gbc.pc(), 0x49e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00A1
        gbc.setState(0x3247, 0x92c3, 0xba40, 0xd13c, 0x40ec, 0x1c8, 0x0, 0x1);
        gbc.writeMem(0x3247, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x92c3);
        EXPECT(gbc.pc(), 0x3249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00A3
        gbc.setState(0x182, 0x5a8f, 0xf630, 0xf2a7, 0x1754, 0x4327, 0x0, 0x0);
        gbc.writeMem(0x182, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5a8f);
        EXPECT(gbc.pc(), 0x184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00A4
        gbc.setState(0xb5d2, 0x72f7, 0xeb30, 0xaefb, 0x8378, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0xb5d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x72f7);
        EXPECT(gbc.pc(), 0xb5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d2), 0xcb);
        EXPECT(gbc.readMem(0xb5d3), 0xb2);
        // CB B2 00A6
        gbc.setState(0x48eb, 0xd48e, 0x4030, 0xb1ea, 0xd7a2, 0x52f4, 0x1, 0x0);
        gbc.writeMem(0x48eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd48e);
        EXPECT(gbc.pc(), 0x48ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00A8
        gbc.setState(0xdd9b, 0x2ccb, 0xc70, 0x5bbc, 0xda39, 0x1d46, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2ccb);
        EXPECT(gbc.pc(), 0xdd9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9b), 0xcb);
        EXPECT(gbc.readMem(0xdd9c), 0xb2);
        // CB B2 00A9
        gbc.setState(0xa6bd, 0xc45c, 0x87e0, 0xa676, 0x715d, 0x59c0, 0x1, 0x0);
        gbc.writeMem(0xa6bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc45c);
        EXPECT(gbc.pc(), 0xa6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6bd), 0xcb);
        EXPECT(gbc.readMem(0xa6be), 0xb2);
        // CB B2 00AA
        gbc.setState(0xd022, 0x3a3e, 0xc960, 0xb2e2, 0xb399, 0xc978, 0x0, 0x0);
        gbc.writeMem(0xd022, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3a3e);
        EXPECT(gbc.pc(), 0xd024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd022), 0xcb);
        EXPECT(gbc.readMem(0xd023), 0xb2);
        // CB B2 00AB
        gbc.setState(0x96cd, 0x1527, 0x2ce0, 0x76aa, 0x3a39, 0x4d04, 0x0, 0x1);
        gbc.writeMem(0x96cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1527);
        EXPECT(gbc.pc(), 0x96cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cd), 0xcb);
        EXPECT(gbc.readMem(0x96ce), 0xb2);
        // CB B2 00AC
        gbc.setState(0xb166, 0x509e, 0xdf80, 0x2af9, 0x151f, 0x6485, 0x0, 0x1);
        gbc.writeMem(0xb166, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x509e);
        EXPECT(gbc.pc(), 0xb168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb166), 0xcb);
        EXPECT(gbc.readMem(0xb167), 0xb2);
        // CB B2 00AD
        gbc.setState(0xab17, 0x7575, 0xf4d0, 0x83ec, 0xa49d, 0x3260, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7575);
        EXPECT(gbc.pc(), 0xab19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab17), 0xcb);
        EXPECT(gbc.readMem(0xab18), 0xb2);
        // CB B2 00AE
        gbc.setState(0x3f3c, 0xf366, 0x36d0, 0x3ca, 0x1903, 0x4f99, 0x1, 0x1);
        gbc.writeMem(0x3f3c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf366);
        EXPECT(gbc.pc(), 0x3f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00AF
        gbc.setState(0x8aae, 0x347, 0x9f10, 0x8e15, 0xf4cf, 0xf21, 0x1, 0x0);
        gbc.writeMem(0x8aae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x347);
        EXPECT(gbc.pc(), 0x8ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aae), 0xcb);
        EXPECT(gbc.readMem(0x8aaf), 0xb2);
        // CB B2 00B0
        gbc.setState(0x3ba4, 0xcac6, 0x7560, 0x8419, 0x7491, 0x68eb, 0x1, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x3ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00B1
        gbc.setState(0xb776, 0xf2a6, 0xaf0, 0xbc93, 0x35a7, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0xb776, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf2a6);
        EXPECT(gbc.pc(), 0xb778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb776), 0xcb);
        EXPECT(gbc.readMem(0xb777), 0xb2);
        // CB B2 00B2
        gbc.setState(0x19fb, 0x2c1a, 0x5050, 0x1031, 0xeb87, 0x26b3, 0x1, 0x1);
        gbc.writeMem(0x19fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2c1a);
        EXPECT(gbc.pc(), 0x19fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00B3
        gbc.setState(0x9f1a, 0x8d66, 0xc9c0, 0xde20, 0xdd1b, 0xc6c9, 0x1, 0x1);
        gbc.writeMem(0x9f1a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8d66);
        EXPECT(gbc.pc(), 0x9f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1a), 0xcb);
        EXPECT(gbc.readMem(0x9f1b), 0xb2);
        // CB B2 00B4
        gbc.setState(0xefd, 0x8178, 0xb9a0, 0xec17, 0xe085, 0x1e08, 0x1, 0x0);
        gbc.writeMem(0xefd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8178);
        EXPECT(gbc.pc(), 0xeff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00B5
        gbc.setState(0xb6e2, 0xe3aa, 0xf630, 0x74b0, 0x7d4c, 0x49a5, 0x0, 0x0);
        gbc.writeMem(0xb6e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe3aa);
        EXPECT(gbc.pc(), 0xb6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e2), 0xcb);
        EXPECT(gbc.readMem(0xb6e3), 0xb2);
        // CB B2 00B6
        gbc.setState(0xf5, 0xc55b, 0x76b0, 0x63ef, 0xc727, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0xf5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc55b);
        EXPECT(gbc.pc(), 0xf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00B7
        gbc.setState(0xec73, 0x6a17, 0xebe0, 0x5298, 0x8eaf, 0x5b25, 0x0, 0x1);
        gbc.writeMem(0xec73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6a17);
        EXPECT(gbc.pc(), 0xec75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec73), 0xcb);
        EXPECT(gbc.readMem(0xec74), 0xb2);
        // CB B2 00B8
        gbc.setState(0x6a05, 0xd9d8, 0xcdc0, 0xf829, 0x2c3, 0x9b80, 0x1, 0x1);
        gbc.writeMem(0x6a05, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0x6a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00B9
        gbc.setState(0xcf64, 0xc912, 0xe160, 0xdd1a, 0xd91f, 0xa6e3, 0x0, 0x1);
        gbc.writeMem(0xcf64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc912);
        EXPECT(gbc.pc(), 0xcf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf64), 0xcb);
        EXPECT(gbc.readMem(0xcf65), 0xb2);
        // CB B2 00BA
        gbc.setState(0x55de, 0x6bef, 0xed40, 0x667e, 0xe5f3, 0xfb59, 0x1, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6bef);
        EXPECT(gbc.pc(), 0x55e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00BB
        gbc.setState(0x742e, 0xf4a, 0x9c60, 0x606f, 0xd2a8, 0x1098, 0x1, 0x1);
        gbc.writeMem(0x742e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf4a);
        EXPECT(gbc.pc(), 0x7430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00BC
        gbc.setState(0xd4f9, 0x70c4, 0xf7a0, 0x74ed, 0x5fae, 0x64e4, 0x0, 0x0);
        gbc.writeMem(0xd4f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x70c4);
        EXPECT(gbc.pc(), 0xd4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f9), 0xcb);
        EXPECT(gbc.readMem(0xd4fa), 0xb2);
        // CB B2 00BD
        gbc.setState(0x3ce0, 0xac8f, 0x7d20, 0x73b0, 0x771f, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xac8f);
        EXPECT(gbc.pc(), 0x3ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00BE
        gbc.setState(0xad3d, 0x9617, 0x7380, 0xe3eb, 0x50f, 0x2af7, 0x0, 0x0);
        gbc.writeMem(0xad3d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9617);
        EXPECT(gbc.pc(), 0xad3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3d), 0xcb);
        EXPECT(gbc.readMem(0xad3e), 0xb2);
        // CB B2 00BF
        gbc.setState(0x2f30, 0xc4a2, 0x57a0, 0x1291, 0x980, 0x9d3c, 0x0, 0x0);
        gbc.writeMem(0x2f30, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc4a2);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00C0
        gbc.setState(0x2b8, 0xde38, 0x8c70, 0x3303, 0xb011, 0x45ad, 0x1, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xde38);
        EXPECT(gbc.pc(), 0x2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00C1
        gbc.setState(0x70bb, 0xab67, 0x8a40, 0x939, 0x39be, 0xec06, 0x1, 0x1);
        gbc.writeMem(0x70bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xab67);
        EXPECT(gbc.pc(), 0x70bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00C2
        gbc.setState(0x2f13, 0x9cd7, 0x4480, 0x89f1, 0x394, 0xcb, 0x0, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9cd7);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00C3
        gbc.setState(0x4cb6, 0x2f39, 0x25f0, 0x307a, 0x1e55, 0x91db, 0x0, 0x0);
        gbc.writeMem(0x4cb6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2f39);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00C4
        gbc.setState(0x58a4, 0x9ade, 0x7be0, 0x6158, 0x7e35, 0x427e, 0x1, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9ade);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00C5
        gbc.setState(0x73c3, 0x2329, 0x6ee0, 0xfdeb, 0x8192, 0xfafa, 0x1, 0x0);
        gbc.writeMem(0x73c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2329);
        EXPECT(gbc.pc(), 0x73c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00C6
        gbc.setState(0x10d9, 0x5599, 0xad10, 0xa21d, 0x1d9, 0x8fad, 0x0, 0x0);
        gbc.writeMem(0x10d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5599);
        EXPECT(gbc.pc(), 0x10db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00C7
        gbc.setState(0x9ea7, 0x8944, 0xf9c0, 0xb363, 0xbdda, 0x1454, 0x1, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8944);
        EXPECT(gbc.pc(), 0x9ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea7), 0xcb);
        EXPECT(gbc.readMem(0x9ea8), 0xb2);
        // CB B2 00C8
        gbc.setState(0xed78, 0x77b3, 0xc700, 0x70aa, 0xc71c, 0xf3c5, 0x1, 0x1);
        gbc.writeMem(0xed78, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x77b3);
        EXPECT(gbc.pc(), 0xed7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed78), 0xcb);
        EXPECT(gbc.readMem(0xed79), 0xb2);
        // CB B2 00C9
        gbc.setState(0x9cb0, 0x32c2, 0x6220, 0x8b9e, 0x5cb8, 0xf982, 0x1, 0x0);
        gbc.writeMem(0x9cb0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x32c2);
        EXPECT(gbc.pc(), 0x9cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb0), 0xcb);
        EXPECT(gbc.readMem(0x9cb1), 0xb2);
        // CB B2 00CA
        gbc.setState(0x76ef, 0x55bc, 0xa280, 0x7d96, 0xfbd9, 0x8b55, 0x0, 0x0);
        gbc.writeMem(0x76ef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x55bc);
        EXPECT(gbc.pc(), 0x76f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00CB
        gbc.setState(0x7afe, 0xcd7, 0xfd10, 0x46ff, 0xe99e, 0x5953, 0x0, 0x1);
        gbc.writeMem(0x7afe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcd7);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00CC
        gbc.setState(0x61f4, 0x4a1f, 0x52b0, 0xd1cb, 0x1bb1, 0x21bf, 0x0, 0x0);
        gbc.writeMem(0x61f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0x61f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00CD
        gbc.setState(0x6b9d, 0x1f7c, 0xe390, 0x2383, 0xd3bf, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1f7c);
        EXPECT(gbc.pc(), 0x6b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00CE
        gbc.setState(0x5c4e, 0xbdac, 0x2190, 0x4832, 0xef1f, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x5c4e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbdac);
        EXPECT(gbc.pc(), 0x5c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00CF
        gbc.setState(0xa3e4, 0xbbdc, 0x72c0, 0x90f3, 0xe2ff, 0xfd2d, 0x0, 0x0);
        gbc.writeMem(0xa3e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbbdc);
        EXPECT(gbc.pc(), 0xa3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e4), 0xcb);
        EXPECT(gbc.readMem(0xa3e5), 0xb2);
        // CB B2 00D0
        gbc.setState(0x7b71, 0xdd4d, 0x41a0, 0xabf5, 0xc9a9, 0xf233, 0x0, 0x1);
        gbc.writeMem(0x7b71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0x7b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00D1
        gbc.setState(0x2dce, 0x52ad, 0x8880, 0xce5d, 0x45e8, 0x8f54, 0x0, 0x1);
        gbc.writeMem(0x2dce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x52ad);
        EXPECT(gbc.pc(), 0x2dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00D2
        gbc.setState(0x6a22, 0x5342, 0x8860, 0x2ae1, 0xd2a0, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x6a22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5342);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00D3
        gbc.setState(0x1eea, 0x5d4, 0xde10, 0xd20f, 0x5b77, 0x6d6d, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x1eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00D4
        gbc.setState(0x253d, 0xa02c, 0xfac0, 0x5abe, 0x954a, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x253d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa02c);
        EXPECT(gbc.pc(), 0x253f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00D5
        gbc.setState(0x63da, 0xf27a, 0x69f0, 0x37c0, 0xd5a7, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x63da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf27a);
        EXPECT(gbc.pc(), 0x63dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00D6
        gbc.setState(0x9603, 0xb8cc, 0xe690, 0x6957, 0xb870, 0x93ba, 0x1, 0x0);
        gbc.writeMem(0x9603, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb8cc);
        EXPECT(gbc.pc(), 0x9605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9603), 0xcb);
        EXPECT(gbc.readMem(0x9604), 0xb2);
        // CB B2 00D7
        gbc.setState(0xc95d, 0x83ef, 0x4970, 0x4e81, 0x8bd3, 0x4bb1, 0x0, 0x0);
        gbc.writeMem(0xc95d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x83ef);
        EXPECT(gbc.pc(), 0xc95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95d), 0xcb);
        EXPECT(gbc.readMem(0xc95e), 0xb2);
        // CB B2 00D8
        gbc.setState(0x9200, 0xd375, 0x9940, 0xfa00, 0x2837, 0x5f97, 0x1, 0x0);
        gbc.writeMem(0x9200, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd375);
        EXPECT(gbc.pc(), 0x9202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9200), 0xcb);
        EXPECT(gbc.readMem(0x9201), 0xb2);
        // CB B2 00D9
        gbc.setState(0x7786, 0xadf0, 0x320, 0x2400, 0xb05a, 0xe1e2, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xadf0);
        EXPECT(gbc.pc(), 0x7788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00DA
        gbc.setState(0x62df, 0xbe1f, 0x73a0, 0x2000, 0x9df9, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x62df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbe1f);
        EXPECT(gbc.pc(), 0x62e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00DC
        gbc.setState(0xb5ee, 0x605e, 0xa860, 0xa59b, 0x1f0d, 0x9f4c, 0x1, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x605e);
        EXPECT(gbc.pc(), 0xb5f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ee), 0xcb);
        EXPECT(gbc.readMem(0xb5ef), 0xb2);
        // CB B2 00DD
        gbc.setState(0xc51d, 0xe827, 0xa870, 0x9052, 0x354, 0xb2fd, 0x1, 0x0);
        gbc.writeMem(0xc51d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe827);
        EXPECT(gbc.pc(), 0xc51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc51d), 0xcb);
        EXPECT(gbc.readMem(0xc51e), 0xb2);
        // CB B2 00DE
        gbc.setState(0xd72, 0xbba9, 0xac0, 0x5942, 0x9053, 0x981a, 0x0, 0x1);
        gbc.writeMem(0xd72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbba9);
        EXPECT(gbc.pc(), 0xd74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00DF
        gbc.setState(0x1b62, 0x794b, 0xda00, 0x5e35, 0x3bfd, 0x6f48, 0x1, 0x1);
        gbc.writeMem(0x1b62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x794b);
        EXPECT(gbc.pc(), 0x1b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00E0
        gbc.setState(0xd72e, 0x5937, 0x2ce0, 0x4e89, 0xa478, 0xc686, 0x1, 0x0);
        gbc.writeMem(0xd72e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5937);
        EXPECT(gbc.pc(), 0xd730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72e), 0xcb);
        EXPECT(gbc.readMem(0xd72f), 0xb2);
        // CB B2 00E1
        gbc.setState(0xad30, 0x82ee, 0xb650, 0x6284, 0xc3ab, 0xcfda, 0x0, 0x1);
        gbc.writeMem(0xad30, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x82ee);
        EXPECT(gbc.pc(), 0xad32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad30), 0xcb);
        EXPECT(gbc.readMem(0xad31), 0xb2);
        // CB B2 00E2
        gbc.setState(0xc2f3, 0x5c4f, 0xc460, 0x9c4c, 0xde33, 0xef56, 0x0, 0x1);
        gbc.writeMem(0xc2f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5c4f);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        EXPECT(gbc.readMem(0xc2f4), 0xb2);
        // CB B2 00E3
        gbc.setState(0x8df9, 0xdc25, 0x4ba0, 0x4de9, 0x9d38, 0x4f9e, 0x0, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdc25);
        EXPECT(gbc.pc(), 0x8dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df9), 0xcb);
        EXPECT(gbc.readMem(0x8dfa), 0xb2);
        // CB B2 00E4
        gbc.setState(0xbfda, 0x9df1, 0xd1e0, 0x9f6a, 0x7719, 0x330f, 0x0, 0x0);
        gbc.writeMem(0xbfda, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9df1);
        EXPECT(gbc.pc(), 0xbfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfda), 0xcb);
        EXPECT(gbc.readMem(0xbfdb), 0xb2);
        // CB B2 00E5
        gbc.setState(0x30e6, 0xb699, 0x8160, 0x4459, 0x9c6b, 0x383, 0x0, 0x1);
        gbc.writeMem(0x30e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb699);
        EXPECT(gbc.pc(), 0x30e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00E6
        gbc.setState(0x5a64, 0xa9cd, 0x8970, 0x8aef, 0xc02c, 0xf9ef, 0x1, 0x1);
        gbc.writeMem(0x5a64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa9cd);
        EXPECT(gbc.pc(), 0x5a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00E7
        gbc.setState(0x918, 0x3bb3, 0x5730, 0x4186, 0x8ba5, 0x899a, 0x1, 0x0);
        gbc.writeMem(0x918, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3bb3);
        EXPECT(gbc.pc(), 0x91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00E8
        gbc.setState(0x9849, 0x6020, 0xe460, 0xc087, 0xd5cc, 0x77a5, 0x1, 0x1);
        gbc.writeMem(0x9849, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6020);
        EXPECT(gbc.pc(), 0x984b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9849), 0xcb);
        EXPECT(gbc.readMem(0x984a), 0xb2);
        // CB B2 00E9
        gbc.setState(0xee57, 0x753d, 0x15b0, 0x5901, 0x6ecc, 0xe2a0, 0x1, 0x1);
        gbc.writeMem(0xee57, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x753d);
        EXPECT(gbc.pc(), 0xee59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee57), 0xcb);
        EXPECT(gbc.readMem(0xee58), 0xb2);
        // CB B2 00EA
        gbc.setState(0xd590, 0x59e1, 0xc2f0, 0x8492, 0x1e50, 0x4e0f, 0x0, 0x0);
        gbc.writeMem(0xd590, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0xd592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd590), 0xcb);
        EXPECT(gbc.readMem(0xd591), 0xb2);
        // CB B2 00EC
        gbc.setState(0x7c12, 0x8b4c, 0x9320, 0x8adb, 0xdcee, 0x5ac9, 0x0, 0x1);
        gbc.writeMem(0x7c12, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8b4c);
        EXPECT(gbc.pc(), 0x7c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00ED
        gbc.setState(0xbad2, 0x5006, 0x5480, 0xa684, 0x5555, 0x5a84, 0x0, 0x1);
        gbc.writeMem(0xbad2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5006);
        EXPECT(gbc.pc(), 0xbad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad2), 0xcb);
        EXPECT(gbc.readMem(0xbad3), 0xb2);
        // CB B2 00EE
        gbc.setState(0xbc2c, 0x73c3, 0xdb50, 0xb8c7, 0x206c, 0x804, 0x1, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x73c3);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2c), 0xcb);
        EXPECT(gbc.readMem(0xbc2d), 0xb2);
        // CB B2 00EF
        gbc.setState(0xbbbc, 0x14b8, 0x5860, 0x5225, 0xc27c, 0x595, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x14b8);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbc), 0xcb);
        EXPECT(gbc.readMem(0xbbbd), 0xb2);
        // CB B2 00F0
        gbc.setState(0xb42e, 0x183a, 0x2960, 0xae02, 0x4677, 0x8152, 0x0, 0x1);
        gbc.writeMem(0xb42e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x183a);
        EXPECT(gbc.pc(), 0xb430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42e), 0xcb);
        EXPECT(gbc.readMem(0xb42f), 0xb2);
        // CB B2 00F1
        gbc.setState(0xcca5, 0xd575, 0x9e70, 0xe3ad, 0x38c0, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0xcca5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd575);
        EXPECT(gbc.pc(), 0xcca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca5), 0xcb);
        EXPECT(gbc.readMem(0xcca6), 0xb2);
        // CB B2 00F2
        gbc.setState(0x3986, 0xd71f, 0x53c0, 0x21c2, 0x3bf7, 0xa9c8, 0x0, 0x1);
        gbc.writeMem(0x3986, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd71f);
        EXPECT(gbc.pc(), 0x3988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00F3
        gbc.setState(0x62a1, 0x307, 0x7810, 0xb1c3, 0x878a, 0x1b7c, 0x1, 0x1);
        gbc.writeMem(0x62a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x307);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00F4
        gbc.setState(0xbfac, 0xc451, 0x89e0, 0x7b71, 0x1664, 0xee3a, 0x1, 0x1);
        gbc.writeMem(0xbfac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc451);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfac), 0xcb);
        EXPECT(gbc.readMem(0xbfad), 0xb2);
        // CB B2 00F5
        gbc.setState(0x8162, 0x6f2a, 0xce90, 0x4618, 0x5af2, 0x5e8b, 0x1, 0x0);
        gbc.writeMem(0x8162, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6f2a);
        EXPECT(gbc.pc(), 0x8164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8162), 0xcb);
        EXPECT(gbc.readMem(0x8163), 0xb2);
        // CB B2 00F6
        gbc.setState(0x8445, 0x4868, 0xa500, 0xb1c9, 0x701, 0x228d, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x8447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8445), 0xcb);
        EXPECT(gbc.readMem(0x8446), 0xb2);
        // CB B2 00F7
        gbc.setState(0x8992, 0xe158, 0xfed0, 0x8db0, 0xce2, 0x7fbc, 0x1, 0x1);
        gbc.writeMem(0x8992, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe158);
        EXPECT(gbc.pc(), 0x8994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8992), 0xcb);
        EXPECT(gbc.readMem(0x8993), 0xb2);
        // CB B2 00F8
        gbc.setState(0xcc95, 0x7823, 0xbc90, 0xfa22, 0xa699, 0xb284, 0x0, 0x1);
        gbc.writeMem(0xcc95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7823);
        EXPECT(gbc.pc(), 0xcc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc95), 0xcb);
        EXPECT(gbc.readMem(0xcc96), 0xb2);
        // CB B2 00F9
        gbc.setState(0xc9ba, 0x7973, 0xd0f0, 0xb9e7, 0x2d7e, 0xebfc, 0x1, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7973);
        EXPECT(gbc.pc(), 0xc9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ba), 0xcb);
        EXPECT(gbc.readMem(0xc9bb), 0xb2);
        // CB B2 00FA
        gbc.setState(0xa975, 0x6132, 0x3ce0, 0x31c6, 0xd36f, 0xc4d8, 0x1, 0x1);
        gbc.writeMem(0xa975, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6132);
        EXPECT(gbc.pc(), 0xa977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa975), 0xcb);
        EXPECT(gbc.readMem(0xa976), 0xb2);
        // CB B2 00FB
        gbc.setState(0xe85a, 0xe594, 0x67f0, 0xa6c3, 0x299d, 0x47df, 0x1, 0x1);
        gbc.writeMem(0xe85a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe594);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85a), 0xcb);
        EXPECT(gbc.readMem(0xe85b), 0xb2);
        // CB B2 00FC
        gbc.setState(0x5ef0, 0x7582, 0xf7b0, 0xd531, 0x19bd, 0x2bc, 0x0, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7582);
        EXPECT(gbc.pc(), 0x5ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 00FD
        gbc.setState(0x3b36, 0xd201, 0x8fc0, 0x45da, 0xa065, 0x5a4f, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd201);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 00FE
        gbc.setState(0xd868, 0x6cc1, 0x2ba0, 0x4f22, 0x179d, 0x2fc, 0x0, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6cc1);
        EXPECT(gbc.pc(), 0xd86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd868), 0xcb);
        EXPECT(gbc.readMem(0xd869), 0xb2);
        // CB B2 00FF
        gbc.setState(0x3e66, 0x6f40, 0x3cd0, 0xd772, 0xdea7, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x3e66, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6f40);
        EXPECT(gbc.pc(), 0x3e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0100
        gbc.setState(0xb2ce, 0x27fc, 0x62c0, 0xc8fe, 0x8b6e, 0x9ffc, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x27fc);
        EXPECT(gbc.pc(), 0xb2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ce), 0xcb);
        EXPECT(gbc.readMem(0xb2cf), 0xb2);
        // CB B2 0101
        gbc.setState(0x778c, 0x1458, 0xc8a0, 0xc62c, 0xd3c8, 0x5002, 0x1, 0x0);
        gbc.writeMem(0x778c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1458);
        EXPECT(gbc.pc(), 0x778e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0103
        gbc.setState(0x9990, 0xae6c, 0x6910, 0x9075, 0x523f, 0x86d5, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xae6c);
        EXPECT(gbc.pc(), 0x9992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9990), 0xcb);
        EXPECT(gbc.readMem(0x9991), 0xb2);
        // CB B2 0105
        gbc.setState(0x3a86, 0x1f5c, 0x5d70, 0xf97b, 0xfffa, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x3a86, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1f5c);
        EXPECT(gbc.pc(), 0x3a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0106
        gbc.setState(0xcd9, 0x5f43, 0x8eb0, 0x4b1c, 0x29e0, 0x1af1, 0x1, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5f43);
        EXPECT(gbc.pc(), 0xcdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0107
        gbc.setState(0xe1cd, 0xcec6, 0xf1c0, 0xe2d0, 0x6bfb, 0x7aed, 0x1, 0x1);
        gbc.writeMem(0xe1cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcec6);
        EXPECT(gbc.pc(), 0xe1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1cd), 0xcb);
        EXPECT(gbc.readMem(0xe1ce), 0xb2);
        // CB B2 0108
        gbc.setState(0xe984, 0xc39f, 0x5d10, 0xc2d, 0x6eca, 0xedb4, 0x1, 0x0);
        gbc.writeMem(0xe984, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc39f);
        EXPECT(gbc.pc(), 0xe986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe984), 0xcb);
        EXPECT(gbc.readMem(0xe985), 0xb2);
        // CB B2 0109
        gbc.setState(0x5c12, 0xfe43, 0xf380, 0x6fa7, 0x2cd8, 0xdfa7, 0x1, 0x1);
        gbc.writeMem(0x5c12, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0x5c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 010A
        gbc.setState(0x9269, 0x4c40, 0x5100, 0x3fb4, 0x1e16, 0xa58c, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4c40);
        EXPECT(gbc.pc(), 0x926b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9269), 0xcb);
        EXPECT(gbc.readMem(0x926a), 0xb2);
        // CB B2 010B
        gbc.setState(0x49f4, 0x89f1, 0x5230, 0x6ceb, 0x2740, 0x68b1, 0x0, 0x0);
        gbc.writeMem(0x49f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0x49f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 010C
        gbc.setState(0xdff8, 0xa14b, 0x96b0, 0x9d2e, 0xde7a, 0xec91, 0x1, 0x0);
        gbc.writeMem(0xdff8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa14b);
        EXPECT(gbc.pc(), 0xdffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff8), 0xcb);
        EXPECT(gbc.readMem(0xdff9), 0xb2);
        // CB B2 010D
        gbc.setState(0x9225, 0xc87b, 0xd3d0, 0x37e, 0x6393, 0xe8df, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc87b);
        EXPECT(gbc.pc(), 0x9227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9225), 0xcb);
        EXPECT(gbc.readMem(0x9226), 0xb2);
        // CB B2 010E
        gbc.setState(0x6e2, 0xbfb6, 0x5050, 0xc023, 0x85cd, 0xaf5e, 0x1, 0x0);
        gbc.writeMem(0x6e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbfb6);
        EXPECT(gbc.pc(), 0x6e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 010F
        gbc.setState(0xe1d, 0xecf, 0xeac0, 0xd93b, 0xb5d4, 0x8f57, 0x0, 0x1);
        gbc.writeMem(0xe1d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xecf);
        EXPECT(gbc.pc(), 0xe1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0110
        gbc.setState(0x3df2, 0x57f8, 0x63e0, 0x4e75, 0xa3dc, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0x3df2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x57f8);
        EXPECT(gbc.pc(), 0x3df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0111
        gbc.setState(0x6c7b, 0xe7aa, 0x9ba0, 0x9c73, 0x393e, 0x4cc4, 0x1, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe7aa);
        EXPECT(gbc.pc(), 0x6c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0112
        gbc.setState(0x58b9, 0x2b16, 0x8820, 0x731e, 0xd2f0, 0x8c41, 0x1, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2b16);
        EXPECT(gbc.pc(), 0x58bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0113
        gbc.setState(0x3c72, 0x1893, 0x1110, 0xfdb8, 0x1469, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x3c72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1893);
        EXPECT(gbc.pc(), 0x3c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0114
        gbc.setState(0xc175, 0xd591, 0x2800, 0x3454, 0x8436, 0x8d81, 0x0, 0x1);
        gbc.writeMem(0xc175, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd591);
        EXPECT(gbc.pc(), 0xc177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc175), 0xcb);
        EXPECT(gbc.readMem(0xc176), 0xb2);
        // CB B2 0115
        gbc.setState(0x600b, 0xfbf9, 0xb000, 0xf598, 0x7d0, 0x566f, 0x1, 0x0);
        gbc.writeMem(0x600b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfbf9);
        EXPECT(gbc.pc(), 0x600d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0116
        gbc.setState(0x5b59, 0xe1a2, 0xc0, 0x39bf, 0x5fbb, 0xeaad, 0x1, 0x0);
        gbc.writeMem(0x5b59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe1a2);
        EXPECT(gbc.pc(), 0x5b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0117
        gbc.setState(0x66bf, 0x22d3, 0x2820, 0xc215, 0x4df2, 0xb110, 0x0, 0x1);
        gbc.writeMem(0x66bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x22d3);
        EXPECT(gbc.pc(), 0x66c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0118
        gbc.setState(0xccae, 0xb948, 0x2830, 0xcbb, 0x24c4, 0x3c94, 0x1, 0x1);
        gbc.writeMem(0xccae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb948);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0xcb);
        EXPECT(gbc.readMem(0xccaf), 0xb2);
        // CB B2 0119
        gbc.setState(0x440d, 0xf163, 0xa480, 0x27b8, 0x4f59, 0xde1a, 0x1, 0x1);
        gbc.writeMem(0x440d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf163);
        EXPECT(gbc.pc(), 0x440f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 011A
        gbc.setState(0xdea6, 0xbcdd, 0x8520, 0xfcf2, 0x57fa, 0x5cf1, 0x0, 0x0);
        gbc.writeMem(0xdea6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbcdd);
        EXPECT(gbc.pc(), 0xdea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea6), 0xcb);
        EXPECT(gbc.readMem(0xdea7), 0xb2);
        // CB B2 011B
        gbc.setState(0x4f69, 0xefc5, 0x5bd0, 0xbf46, 0x6b3c, 0xeeaf, 0x0, 0x1);
        gbc.writeMem(0x4f69, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xefc5);
        EXPECT(gbc.pc(), 0x4f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 011C
        gbc.setState(0xa394, 0xf05f, 0xe640, 0x4b90, 0x5e39, 0xad3c, 0x0, 0x0);
        gbc.writeMem(0xa394, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf05f);
        EXPECT(gbc.pc(), 0xa396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa394), 0xcb);
        EXPECT(gbc.readMem(0xa395), 0xb2);
        // CB B2 011D
        gbc.setState(0xaf90, 0x3089, 0x8270, 0x5fa6, 0xd6c8, 0xbbbc, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3089);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf90), 0xcb);
        EXPECT(gbc.readMem(0xaf91), 0xb2);
        // CB B2 011E
        gbc.setState(0x4c21, 0xf6e1, 0x2f90, 0x5be4, 0xc79d, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0x4c21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf6e1);
        EXPECT(gbc.pc(), 0x4c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 011F
        gbc.setState(0x3f16, 0x3a23, 0x66b0, 0x41a3, 0x7c2c, 0xa583, 0x1, 0x1);
        gbc.writeMem(0x3f16, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3a23);
        EXPECT(gbc.pc(), 0x3f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0120
        gbc.setState(0x900f, 0xf21e, 0x8040, 0x5877, 0x21c6, 0x6155, 0x1, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf21e);
        EXPECT(gbc.pc(), 0x9011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900f), 0xcb);
        EXPECT(gbc.readMem(0x9010), 0xb2);
        // CB B2 0121
        gbc.setState(0xe4ce, 0x6d4f, 0x7fe0, 0x90a, 0x2592, 0x165e, 0x0, 0x1);
        gbc.writeMem(0xe4ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6d4f);
        EXPECT(gbc.pc(), 0xe4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ce), 0xcb);
        EXPECT(gbc.readMem(0xe4cf), 0xb2);
        // CB B2 0122
        gbc.setState(0x817b, 0x9973, 0x9eb0, 0xea1b, 0x6d55, 0x381a, 0x1, 0x1);
        gbc.writeMem(0x817b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9973);
        EXPECT(gbc.pc(), 0x817d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817b), 0xcb);
        EXPECT(gbc.readMem(0x817c), 0xb2);
        // CB B2 0123
        gbc.setState(0x4dea, 0xfeca, 0x2420, 0x22af, 0xc255, 0xf60c, 0x0, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfeca);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0124
        gbc.setState(0xd4d7, 0xf9a2, 0x38f0, 0x633a, 0xaa23, 0x8cd0, 0x0, 0x1);
        gbc.writeMem(0xd4d7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf9a2);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d7), 0xcb);
        EXPECT(gbc.readMem(0xd4d8), 0xb2);
        // CB B2 0125
        gbc.setState(0x9fce, 0xc722, 0xb450, 0xe1b8, 0x801e, 0xffec, 0x0, 0x0);
        gbc.writeMem(0x9fce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc722);
        EXPECT(gbc.pc(), 0x9fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fce), 0xcb);
        EXPECT(gbc.readMem(0x9fcf), 0xb2);
        // CB B2 0126
        gbc.setState(0xd6f5, 0xba10, 0xcd40, 0x6734, 0xddaa, 0x92f4, 0x1, 0x1);
        gbc.writeMem(0xd6f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xba10);
        EXPECT(gbc.pc(), 0xd6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f5), 0xcb);
        EXPECT(gbc.readMem(0xd6f6), 0xb2);
        // CB B2 0127
        gbc.setState(0x7feb, 0x45e1, 0x6320, 0x8f10, 0x4964, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x45e1);
        EXPECT(gbc.pc(), 0x7fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0128
        gbc.setState(0x656b, 0x2099, 0xeb50, 0x29f4, 0x708f, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2099);
        EXPECT(gbc.pc(), 0x656d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0129
        gbc.setState(0x4c10, 0x500a, 0xa9d0, 0x368e, 0x41ee, 0xa584, 0x0, 0x1);
        gbc.writeMem(0x4c10, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x500a);
        EXPECT(gbc.pc(), 0x4c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 012A
        gbc.setState(0x6089, 0xc99c, 0x1100, 0xaa10, 0x7005, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x6089, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc99c);
        EXPECT(gbc.pc(), 0x608b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 012B
        gbc.setState(0xbff3, 0x74e4, 0x2250, 0x395a, 0x44f8, 0x6c19, 0x1, 0x0);
        gbc.writeMem(0xbff3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x74e4);
        EXPECT(gbc.pc(), 0xbff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff3), 0xcb);
        EXPECT(gbc.readMem(0xbff4), 0xb2);
        // CB B2 012C
        gbc.setState(0xe79c, 0x58b9, 0x6610, 0x9dd1, 0xe4be, 0x34c2, 0x0, 0x1);
        gbc.writeMem(0xe79c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x58b9);
        EXPECT(gbc.pc(), 0xe79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79c), 0xcb);
        EXPECT(gbc.readMem(0xe79d), 0xb2);
        // CB B2 012D
        gbc.setState(0xd0b0, 0xb63c, 0xb940, 0xb6c8, 0xf750, 0x964b, 0x1, 0x1);
        gbc.writeMem(0xd0b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb63c);
        EXPECT(gbc.pc(), 0xd0b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b0), 0xcb);
        EXPECT(gbc.readMem(0xd0b1), 0xb2);
        // CB B2 012E
        gbc.setState(0xdebf, 0xefd2, 0x3020, 0x97b9, 0xcf46, 0x3a96, 0x1, 0x0);
        gbc.writeMem(0xdebf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xefd2);
        EXPECT(gbc.pc(), 0xdec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebf), 0xcb);
        EXPECT(gbc.readMem(0xdec0), 0xb2);
        // CB B2 012F
        gbc.setState(0x8064, 0xb2b8, 0x8710, 0x1ac0, 0x543c, 0xc072, 0x1, 0x1);
        gbc.writeMem(0x8064, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb2b8);
        EXPECT(gbc.pc(), 0x8066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8064), 0xcb);
        EXPECT(gbc.readMem(0x8065), 0xb2);
        // CB B2 0130
        gbc.setState(0x4127, 0xeaa7, 0x9570, 0x8ff4, 0xc144, 0x80d0, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0x4129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0131
        gbc.setState(0x94f4, 0x3e30, 0xf900, 0x2ef5, 0x9195, 0x5b2c, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3e30);
        EXPECT(gbc.pc(), 0x94f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0xcb);
        EXPECT(gbc.readMem(0x94f5), 0xb2);
        // CB B2 0132
        gbc.setState(0xd3da, 0x5a3, 0x9ad0, 0xe2d5, 0xa4ce, 0x889e, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5a3);
        EXPECT(gbc.pc(), 0xd3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3da), 0xcb);
        EXPECT(gbc.readMem(0xd3db), 0xb2);
        // CB B2 0133
        gbc.setState(0xd7a3, 0xd926, 0x9790, 0x96fb, 0x794b, 0xc68b, 0x0, 0x0);
        gbc.writeMem(0xd7a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd926);
        EXPECT(gbc.pc(), 0xd7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a3), 0xcb);
        EXPECT(gbc.readMem(0xd7a4), 0xb2);
        // CB B2 0134
        gbc.setState(0xde53, 0xf32d, 0x9a00, 0x8f65, 0xc849, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0xde53, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf32d);
        EXPECT(gbc.pc(), 0xde55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde53), 0xcb);
        EXPECT(gbc.readMem(0xde54), 0xb2);
        // CB B2 0135
        gbc.setState(0xedf7, 0x90c3, 0x8130, 0x5106, 0xa6e7, 0xc1cd, 0x0, 0x1);
        gbc.writeMem(0xedf7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x90c3);
        EXPECT(gbc.pc(), 0xedf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf7), 0xcb);
        EXPECT(gbc.readMem(0xedf8), 0xb2);
        // CB B2 0136
        gbc.setState(0xb41a, 0xf699, 0xca70, 0xcec0, 0x785a, 0x7715, 0x0, 0x1);
        gbc.writeMem(0xb41a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf699);
        EXPECT(gbc.pc(), 0xb41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb41a), 0xcb);
        EXPECT(gbc.readMem(0xb41b), 0xb2);
        // CB B2 0137
        gbc.setState(0xc94c, 0xd24f, 0x9430, 0x4bf2, 0x6b31, 0xb608, 0x1, 0x1);
        gbc.writeMem(0xc94c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd24f);
        EXPECT(gbc.pc(), 0xc94e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94c), 0xcb);
        EXPECT(gbc.readMem(0xc94d), 0xb2);
        // CB B2 0138
        gbc.setState(0x7a8e, 0xd4fd, 0x7720, 0xafd9, 0x61d6, 0xecad, 0x0, 0x1);
        gbc.writeMem(0x7a8e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd4fd);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0139
        gbc.setState(0xb325, 0x9adb, 0x9b30, 0x744, 0x1c8d, 0xec6, 0x1, 0x1);
        gbc.writeMem(0xb325, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9adb);
        EXPECT(gbc.pc(), 0xb327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb325), 0xcb);
        EXPECT(gbc.readMem(0xb326), 0xb2);
        // CB B2 013A
        gbc.setState(0x63c3, 0xe9e0, 0xeda0, 0xbb7d, 0x2463, 0x2c73, 0x1, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe9e0);
        EXPECT(gbc.pc(), 0x63c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 013B
        gbc.setState(0x985f, 0x21e0, 0xae90, 0x9e5a, 0xbf53, 0x8e59, 0x1, 0x1);
        gbc.writeMem(0x985f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x21e0);
        EXPECT(gbc.pc(), 0x9861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985f), 0xcb);
        EXPECT(gbc.readMem(0x9860), 0xb2);
        // CB B2 013D
        gbc.setState(0x13c3, 0xa4b7, 0x5b40, 0xb398, 0x4dc8, 0x981, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa4b7);
        EXPECT(gbc.pc(), 0x13c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 013E
        gbc.setState(0x64a6, 0x5937, 0x4840, 0x5f37, 0x75a6, 0x182f, 0x0, 0x0);
        gbc.writeMem(0x64a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5937);
        EXPECT(gbc.pc(), 0x64a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 013F
        gbc.setState(0x79c2, 0x3bed, 0xcc20, 0x75ca, 0xe325, 0x176a, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3bed);
        EXPECT(gbc.pc(), 0x79c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0140
        gbc.setState(0x134b, 0xbd36, 0xfee0, 0x49dd, 0xfa48, 0xa7ad, 0x1, 0x0);
        gbc.writeMem(0x134b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbd36);
        EXPECT(gbc.pc(), 0x134d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0141
        gbc.setState(0x3f59, 0x7649, 0xae50, 0xea28, 0x14aa, 0x583d, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7649);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0142
        gbc.setState(0xdf41, 0x4a90, 0xe410, 0xdc5a, 0xfa04, 0x31db, 0x1, 0x0);
        gbc.writeMem(0xdf41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4a90);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf41), 0xcb);
        EXPECT(gbc.readMem(0xdf42), 0xb2);
        // CB B2 0143
        gbc.setState(0x5098, 0xf21b, 0xf9c0, 0xda9, 0x8b24, 0xf1fa, 0x1, 0x1);
        gbc.writeMem(0x5098, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf21b);
        EXPECT(gbc.pc(), 0x509a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0144
        gbc.setState(0xbeeb, 0xea58, 0x63c0, 0xba5b, 0x1540, 0xdeeb, 0x1, 0x1);
        gbc.writeMem(0xbeeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xea58);
        EXPECT(gbc.pc(), 0xbeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeeb), 0xcb);
        EXPECT(gbc.readMem(0xbeec), 0xb2);
        // CB B2 0145
        gbc.setState(0x3433, 0xc49b, 0x4650, 0xb3df, 0xbefa, 0x7a10, 0x0, 0x1);
        gbc.writeMem(0x3433, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc49b);
        EXPECT(gbc.pc(), 0x3435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0146
        gbc.setState(0x937, 0x61, 0xa880, 0xb767, 0x5d13, 0xe7a8, 0x0, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x61);
        EXPECT(gbc.pc(), 0x939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0147
        gbc.setState(0xb6c4, 0xe44e, 0x59c0, 0x5d66, 0x23da, 0xccad, 0x0, 0x1);
        gbc.writeMem(0xb6c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe44e);
        EXPECT(gbc.pc(), 0xb6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c4), 0xcb);
        EXPECT(gbc.readMem(0xb6c5), 0xb2);
        // CB B2 0148
        gbc.setState(0x5d65, 0xfe87, 0x9550, 0xfba6, 0x9c8b, 0xdccf, 0x1, 0x0);
        gbc.writeMem(0x5d65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfe87);
        EXPECT(gbc.pc(), 0x5d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0149
        gbc.setState(0x37da, 0xf0e0, 0x7dd0, 0xed26, 0x9bed, 0x1927, 0x0, 0x1);
        gbc.writeMem(0x37da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf0e0);
        EXPECT(gbc.pc(), 0x37dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 014A
        gbc.setState(0x9b08, 0xab2d, 0xebe0, 0xde1, 0x8487, 0x3d09, 0x0, 0x1);
        gbc.writeMem(0x9b08, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xab2d);
        EXPECT(gbc.pc(), 0x9b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b08), 0xcb);
        EXPECT(gbc.readMem(0x9b09), 0xb2);
        // CB B2 014B
        gbc.setState(0x803d, 0x98b4, 0x4130, 0xcf46, 0xc70e, 0xc79c, 0x0, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x98b4);
        EXPECT(gbc.pc(), 0x803f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803d), 0xcb);
        EXPECT(gbc.readMem(0x803e), 0xb2);
        // CB B2 014C
        gbc.setState(0x3209, 0xf93, 0xee90, 0x9f3b, 0x7fa0, 0x414b, 0x0, 0x0);
        gbc.writeMem(0x3209, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf93);
        EXPECT(gbc.pc(), 0x320b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 014D
        gbc.setState(0xe61a, 0x8316, 0xea20, 0x1f63, 0xa74, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0xe61a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0xe61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61a), 0xcb);
        EXPECT(gbc.readMem(0xe61b), 0xb2);
        // CB B2 014F
        gbc.setState(0x3067, 0xa78e, 0xd1b0, 0x4d48, 0xd9a9, 0x57ad, 0x1, 0x1);
        gbc.writeMem(0x3067, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa78e);
        EXPECT(gbc.pc(), 0x3069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0150
        gbc.setState(0xcaa7, 0x3416, 0x7c20, 0x52ac, 0x4f56, 0x338b, 0x1, 0x1);
        gbc.writeMem(0xcaa7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3416);
        EXPECT(gbc.pc(), 0xcaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa7), 0xcb);
        EXPECT(gbc.readMem(0xcaa8), 0xb2);
        // CB B2 0151
        gbc.setState(0x161c, 0x3253, 0x7e80, 0x7e66, 0x7a17, 0xd82b, 0x0, 0x1);
        gbc.writeMem(0x161c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3253);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0152
        gbc.setState(0x3517, 0xf05c, 0x47a0, 0x3746, 0x89bd, 0xb192, 0x0, 0x1);
        gbc.writeMem(0x3517, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf05c);
        EXPECT(gbc.pc(), 0x3519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0153
        gbc.setState(0x998b, 0x92de, 0x7090, 0xc22e, 0x5a1e, 0x8955, 0x0, 0x1);
        gbc.writeMem(0x998b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x92de);
        EXPECT(gbc.pc(), 0x998d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998b), 0xcb);
        EXPECT(gbc.readMem(0x998c), 0xb2);
        // CB B2 0154
        gbc.setState(0x2b47, 0x59b4, 0x57d0, 0xe34b, 0x2d55, 0xcbec, 0x1, 0x1);
        gbc.writeMem(0x2b47, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x59b4);
        EXPECT(gbc.pc(), 0x2b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0155
        gbc.setState(0xc950, 0xce0b, 0x2580, 0x38db, 0x7, 0xb68d, 0x0, 0x0);
        gbc.writeMem(0xc950, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce0b);
        EXPECT(gbc.pc(), 0xc952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc950), 0xcb);
        EXPECT(gbc.readMem(0xc951), 0xb2);
        // CB B2 0156
        gbc.setState(0x485a, 0x73c0, 0xb9b0, 0x461, 0xa46f, 0xd996, 0x1, 0x1);
        gbc.writeMem(0x485a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x73c0);
        EXPECT(gbc.pc(), 0x485c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0157
        gbc.setState(0x7125, 0x7f41, 0xa6b0, 0x6a3b, 0x9b85, 0xe6d7, 0x1, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7f41);
        EXPECT(gbc.pc(), 0x7127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0158
        gbc.setState(0xb330, 0xb207, 0x4390, 0x29d2, 0xf62a, 0xd7c7, 0x0, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb207);
        EXPECT(gbc.pc(), 0xb332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb330), 0xcb);
        EXPECT(gbc.readMem(0xb331), 0xb2);
        // CB B2 0159
        gbc.setState(0x21e6, 0xb213, 0x6530, 0xbdfe, 0x44e1, 0x4ce4, 0x0, 0x0);
        gbc.writeMem(0x21e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb213);
        EXPECT(gbc.pc(), 0x21e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 015A
        gbc.setState(0x607e, 0xf102, 0x3d80, 0xa1d0, 0x525c, 0x814e, 0x1, 0x1);
        gbc.writeMem(0x607e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf102);
        EXPECT(gbc.pc(), 0x6080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 015B
        gbc.setState(0xc918, 0x511f, 0xf6d0, 0x23fe, 0x883a, 0x9302, 0x0, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0xc91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc918), 0xcb);
        EXPECT(gbc.readMem(0xc919), 0xb2);
        // CB B2 015C
        gbc.setState(0x4e63, 0x9ca1, 0x6e50, 0x2074, 0x87e0, 0x1673, 0x0, 0x1);
        gbc.writeMem(0x4e63, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9ca1);
        EXPECT(gbc.pc(), 0x4e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 015D
        gbc.setState(0xa57e, 0xcf66, 0x6f30, 0xe024, 0x3343, 0x9783, 0x1, 0x1);
        gbc.writeMem(0xa57e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0xa580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57e), 0xcb);
        EXPECT(gbc.readMem(0xa57f), 0xb2);
        // CB B2 015E
        gbc.setState(0xdf5b, 0x9e6c, 0x4350, 0xa56a, 0x1f06, 0x4e4, 0x0, 0x0);
        gbc.writeMem(0xdf5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9e6c);
        EXPECT(gbc.pc(), 0xdf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5b), 0xcb);
        EXPECT(gbc.readMem(0xdf5c), 0xb2);
        // CB B2 015F
        gbc.setState(0xb5a5, 0x600, 0x67b0, 0xed2b, 0xc1ee, 0xe651, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x600);
        EXPECT(gbc.pc(), 0xb5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a5), 0xcb);
        EXPECT(gbc.readMem(0xb5a6), 0xb2);
        // CB B2 0160
        gbc.setState(0xc8c9, 0x80e7, 0x7590, 0x7433, 0xd3f4, 0xcbd2, 0x0, 0x0);
        gbc.writeMem(0xc8c9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0xc8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c9), 0xcb);
        EXPECT(gbc.readMem(0xc8ca), 0xb2);
        // CB B2 0161
        gbc.setState(0x5133, 0xff15, 0x9f00, 0x640f, 0xa346, 0x26c6, 0x0, 0x0);
        gbc.writeMem(0x5133, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xff15);
        EXPECT(gbc.pc(), 0x5135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0162
        gbc.setState(0x5c07, 0xaca2, 0x93e0, 0x944c, 0x7a02, 0xb20a, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaca2);
        EXPECT(gbc.pc(), 0x5c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0163
        gbc.setState(0x23cd, 0xc786, 0x5d40, 0xe183, 0xeae6, 0xad75, 0x1, 0x1);
        gbc.writeMem(0x23cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc786);
        EXPECT(gbc.pc(), 0x23cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0164
        gbc.setState(0xc597, 0x51e3, 0xfc10, 0x5272, 0x7b5f, 0xb19f, 0x1, 0x1);
        gbc.writeMem(0xc597, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x51e3);
        EXPECT(gbc.pc(), 0xc599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc597), 0xcb);
        EXPECT(gbc.readMem(0xc598), 0xb2);
        // CB B2 0166
        gbc.setState(0x5f3f, 0x324b, 0xe400, 0x1666, 0x920d, 0x681d, 0x1, 0x0);
        gbc.writeMem(0x5f3f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x324b);
        EXPECT(gbc.pc(), 0x5f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0167
        gbc.setState(0x54f, 0x61be, 0xf9e0, 0x57f3, 0x989, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0x54f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x61be);
        EXPECT(gbc.pc(), 0x551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0168
        gbc.setState(0xadbb, 0x9311, 0x7c10, 0x7906, 0x789c, 0x4afd, 0x1, 0x1);
        gbc.writeMem(0xadbb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9311);
        EXPECT(gbc.pc(), 0xadbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbb), 0xcb);
        EXPECT(gbc.readMem(0xadbc), 0xb2);
        // CB B2 0169
        gbc.setState(0x8051, 0x619, 0x3140, 0x949, 0x8a51, 0xd5ef, 0x1, 0x1);
        gbc.writeMem(0x8051, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x619);
        EXPECT(gbc.pc(), 0x8053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8051), 0xcb);
        EXPECT(gbc.readMem(0x8052), 0xb2);
        // CB B2 016A
        gbc.setState(0x2cb1, 0x8784, 0x930, 0xbdf3, 0x1873, 0x8452, 0x0, 0x1);
        gbc.writeMem(0x2cb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8784);
        EXPECT(gbc.pc(), 0x2cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 016B
        gbc.setState(0x27a4, 0x11d5, 0x47e0, 0xaf59, 0x8729, 0x90cf, 0x1, 0x1);
        gbc.writeMem(0x27a4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x11d5);
        EXPECT(gbc.pc(), 0x27a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 016C
        gbc.setState(0xc1ed, 0xc7fe, 0x960, 0x6cad, 0xee4, 0xa624, 0x0, 0x0);
        gbc.writeMem(0xc1ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc7fe);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ed), 0xcb);
        EXPECT(gbc.readMem(0xc1ee), 0xb2);
        // CB B2 016D
        gbc.setState(0xcd94, 0xc04b, 0xabc0, 0x5172, 0xb756, 0x840c, 0x1, 0x1);
        gbc.writeMem(0xcd94, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc04b);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd94), 0xcb);
        EXPECT(gbc.readMem(0xcd95), 0xb2);
        // CB B2 016E
        gbc.setState(0x5ead, 0xfe4, 0xad90, 0x9ce8, 0x2917, 0x1f85, 0x1, 0x0);
        gbc.writeMem(0x5ead, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfe4);
        EXPECT(gbc.pc(), 0x5eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 016F
        gbc.setState(0x1054, 0xf1d8, 0x61c0, 0x17ac, 0x7e9a, 0xe0e3, 0x1, 0x0);
        gbc.writeMem(0x1054, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf1d8);
        EXPECT(gbc.pc(), 0x1056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0170
        gbc.setState(0xd711, 0xb4cb, 0xe4c0, 0x29f4, 0x2ce1, 0x54f6, 0x0, 0x0);
        gbc.writeMem(0xd711, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb4cb);
        EXPECT(gbc.pc(), 0xd713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd711), 0xcb);
        EXPECT(gbc.readMem(0xd712), 0xb2);
        // CB B2 0171
        gbc.setState(0x6c74, 0x57a4, 0xd360, 0x55fb, 0x5695, 0x244b, 0x0, 0x0);
        gbc.writeMem(0x6c74, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x57a4);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0172
        gbc.setState(0xde1c, 0xcb03, 0x200, 0x8dfe, 0xb113, 0xbcbd, 0x0, 0x1);
        gbc.writeMem(0xde1c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1c), 0xcb);
        EXPECT(gbc.readMem(0xde1d), 0xb2);
        // CB B2 0173
        gbc.setState(0xb6b1, 0x6a9e, 0x5820, 0xe0eb, 0xd901, 0x34af, 0x0, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6a9e);
        EXPECT(gbc.pc(), 0xb6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b1), 0xcb);
        EXPECT(gbc.readMem(0xb6b2), 0xb2);
        // CB B2 0174
        gbc.setState(0xa5b6, 0x67ef, 0xfb40, 0xa8d0, 0xff3a, 0x64b9, 0x1, 0x0);
        gbc.writeMem(0xa5b6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0xa5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b6), 0xcb);
        EXPECT(gbc.readMem(0xa5b7), 0xb2);
        // CB B2 0175
        gbc.setState(0x3186, 0x7df0, 0x6900, 0x511, 0x5b5f, 0x218f, 0x0, 0x1);
        gbc.writeMem(0x3186, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0x3188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0176
        gbc.setState(0x12bf, 0xd306, 0xee20, 0x6752, 0xe031, 0xd3bf, 0x0, 0x0);
        gbc.writeMem(0x12bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd306);
        EXPECT(gbc.pc(), 0x12c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0177
        gbc.setState(0x536, 0xd339, 0xe1b0, 0x3256, 0xcf3f, 0xe45c, 0x0, 0x1);
        gbc.writeMem(0x536, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd339);
        EXPECT(gbc.pc(), 0x538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0178
        gbc.setState(0xcc1a, 0xda55, 0xc7e0, 0x6a4b, 0x9d9c, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xda55);
        EXPECT(gbc.pc(), 0xcc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1a), 0xcb);
        EXPECT(gbc.readMem(0xcc1b), 0xb2);
        // CB B2 0179
        gbc.setState(0x2c8b, 0x8b, 0x42d0, 0x2b1f, 0x44dc, 0x357b, 0x1, 0x0);
        gbc.writeMem(0x2c8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8b);
        EXPECT(gbc.pc(), 0x2c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 017A
        gbc.setState(0x90c9, 0xdb31, 0x9e70, 0x2114, 0x8f83, 0x39b3, 0x1, 0x0);
        gbc.writeMem(0x90c9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdb31);
        EXPECT(gbc.pc(), 0x90cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c9), 0xcb);
        EXPECT(gbc.readMem(0x90ca), 0xb2);
        // CB B2 017B
        gbc.setState(0xc249, 0xf05f, 0xaec0, 0xfecb, 0x85dc, 0x61c7, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf05f);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc249), 0xcb);
        EXPECT(gbc.readMem(0xc24a), 0xb2);
        // CB B2 017C
        gbc.setState(0x66d5, 0x24ca, 0xf230, 0x41fb, 0x9c94, 0xb274, 0x1, 0x1);
        gbc.writeMem(0x66d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x24ca);
        EXPECT(gbc.pc(), 0x66d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 017D
        gbc.setState(0x77bb, 0x69db, 0x2f80, 0xe0f2, 0xd1b3, 0x2ecd, 0x1, 0x0);
        gbc.writeMem(0x77bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x69db);
        EXPECT(gbc.pc(), 0x77bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 017E
        gbc.setState(0xaf0e, 0xdb4c, 0x7130, 0x6fa9, 0xe85, 0xb5b6, 0x1, 0x1);
        gbc.writeMem(0xaf0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0xaf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0e), 0xcb);
        EXPECT(gbc.readMem(0xaf0f), 0xb2);
        // CB B2 017F
        gbc.setState(0x4403, 0xf4a1, 0xbe00, 0xf9dd, 0xb536, 0x6e6b, 0x1, 0x0);
        gbc.writeMem(0x4403, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf4a1);
        EXPECT(gbc.pc(), 0x4405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0180
        gbc.setState(0xedb2, 0xcee3, 0x1220, 0x42b7, 0x59b, 0xccb9, 0x0, 0x0);
        gbc.writeMem(0xedb2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcee3);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0xb2);
        // CB B2 0181
        gbc.setState(0xa0f3, 0xb28b, 0xd620, 0x1c30, 0x32e, 0x8b11, 0x0, 0x0);
        gbc.writeMem(0xa0f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb28b);
        EXPECT(gbc.pc(), 0xa0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f3), 0xcb);
        EXPECT(gbc.readMem(0xa0f4), 0xb2);
        // CB B2 0182
        gbc.setState(0xc817, 0x1b10, 0xbc20, 0x364e, 0xb35, 0xa777, 0x1, 0x1);
        gbc.writeMem(0xc817, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1b10);
        EXPECT(gbc.pc(), 0xc819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc817), 0xcb);
        EXPECT(gbc.readMem(0xc818), 0xb2);
        // CB B2 0183
        gbc.setState(0xdde9, 0xe483, 0xf060, 0xffaf, 0xe151, 0x47d5, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe483);
        EXPECT(gbc.pc(), 0xddeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde9), 0xcb);
        EXPECT(gbc.readMem(0xddea), 0xb2);
        // CB B2 0184
        gbc.setState(0x13fe, 0x63c7, 0x3390, 0xf5f5, 0x1aaf, 0x21f0, 0x0, 0x1);
        gbc.writeMem(0x13fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x63c7);
        EXPECT(gbc.pc(), 0x1400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0185
        gbc.setState(0x5164, 0x29af, 0x2370, 0x49cc, 0xd3da, 0x7f1, 0x0, 0x1);
        gbc.writeMem(0x5164, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x29af);
        EXPECT(gbc.pc(), 0x5166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0186
        gbc.setState(0xa4d2, 0x3dbe, 0x29c0, 0x4003, 0x276c, 0xc0c3, 0x0, 0x0);
        gbc.writeMem(0xa4d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0xa4d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d2), 0xcb);
        EXPECT(gbc.readMem(0xa4d3), 0xb2);
        // CB B2 0187
        gbc.setState(0x66bd, 0x2c5f, 0x3c60, 0xc28c, 0xb9e3, 0x273f, 0x1, 0x1);
        gbc.writeMem(0x66bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2c5f);
        EXPECT(gbc.pc(), 0x66bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0188
        gbc.setState(0xc173, 0x7d4a, 0xd6c0, 0xa2b1, 0x9138, 0x64df, 0x1, 0x1);
        gbc.writeMem(0xc173, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7d4a);
        EXPECT(gbc.pc(), 0xc175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc173), 0xcb);
        EXPECT(gbc.readMem(0xc174), 0xb2);
        // CB B2 0189
        gbc.setState(0x2dfe, 0x9e72, 0x7340, 0x31dc, 0x3700, 0x40f0, 0x0, 0x0);
        gbc.writeMem(0x2dfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9e72);
        EXPECT(gbc.pc(), 0x2e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 018A
        gbc.setState(0x5c4b, 0xa61b, 0xbf30, 0x24b4, 0xad60, 0x906c, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa61b);
        EXPECT(gbc.pc(), 0x5c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 018B
        gbc.setState(0xc1e9, 0x2be, 0x8870, 0xe22f, 0x6822, 0xfa4, 0x1, 0x0);
        gbc.writeMem(0xc1e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2be);
        EXPECT(gbc.pc(), 0xc1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e9), 0xcb);
        EXPECT(gbc.readMem(0xc1ea), 0xb2);
        // CB B2 018C
        gbc.setState(0xe36, 0x7cf8, 0xd750, 0xaa7f, 0xdf7f, 0xd355, 0x0, 0x0);
        gbc.writeMem(0xe36, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7cf8);
        EXPECT(gbc.pc(), 0xe38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 018D
        gbc.setState(0x1e60, 0xa365, 0x8440, 0x4ff9, 0x925b, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x1e60, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa365);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 018E
        gbc.setState(0x2121, 0xda04, 0x5060, 0x6d10, 0xf824, 0xf80c, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 018F
        gbc.setState(0xe2df, 0xdb0f, 0x5290, 0x4fcd, 0x4e02, 0x57bc, 0x1, 0x0);
        gbc.writeMem(0xe2df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdb0f);
        EXPECT(gbc.pc(), 0xe2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2df), 0xcb);
        EXPECT(gbc.readMem(0xe2e0), 0xb2);
        // CB B2 0190
        gbc.setState(0x9c5d, 0xd15a, 0xb310, 0x3e23, 0xe0d9, 0x26e0, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd15a);
        EXPECT(gbc.pc(), 0x9c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c5d), 0xcb);
        EXPECT(gbc.readMem(0x9c5e), 0xb2);
        // CB B2 0191
        gbc.setState(0x9abe, 0x651e, 0xbda0, 0x5bf9, 0x30, 0xb40e, 0x1, 0x1);
        gbc.writeMem(0x9abe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x651e);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abe), 0xcb);
        EXPECT(gbc.readMem(0x9abf), 0xb2);
        // CB B2 0192
        gbc.setState(0xe5f5, 0x4376, 0x3a10, 0xef9a, 0x90, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4376);
        EXPECT(gbc.pc(), 0xe5f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f5), 0xcb);
        EXPECT(gbc.readMem(0xe5f6), 0xb2);
        // CB B2 0193
        gbc.setState(0x1924, 0x905, 0xc470, 0x7451, 0x70b5, 0x98b0, 0x1, 0x1);
        gbc.writeMem(0x1924, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x905);
        EXPECT(gbc.pc(), 0x1926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0194
        gbc.setState(0x6f75, 0x5447, 0xd10, 0x3dff, 0x1603, 0x1ca5, 0x1, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5447);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0198
        gbc.setState(0x211b, 0x182e, 0x18a0, 0x2220, 0x882d, 0xafb2, 0x0, 0x0);
        gbc.writeMem(0x211b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x182e);
        EXPECT(gbc.pc(), 0x211d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0199
        gbc.setState(0x6c62, 0xf8e2, 0x7c70, 0x96db, 0xf7dc, 0x2251, 0x0, 0x1);
        gbc.writeMem(0x6c62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf8e2);
        EXPECT(gbc.pc(), 0x6c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 019A
        gbc.setState(0xdb71, 0xe389, 0x1820, 0x3ce4, 0xa3d0, 0x71cb, 0x0, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe389);
        EXPECT(gbc.pc(), 0xdb73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb71), 0xcb);
        EXPECT(gbc.readMem(0xdb72), 0xb2);
        // CB B2 019B
        gbc.setState(0x1a01, 0x9262, 0x5f50, 0x39fa, 0xfc82, 0x1c0, 0x0, 0x1);
        gbc.writeMem(0x1a01, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9262);
        EXPECT(gbc.pc(), 0x1a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 019C
        gbc.setState(0xca20, 0xc804, 0xb60, 0x47c3, 0x8f3f, 0xf7b8, 0x0, 0x0);
        gbc.writeMem(0xca20, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc804);
        EXPECT(gbc.pc(), 0xca22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca20), 0xcb);
        EXPECT(gbc.readMem(0xca21), 0xb2);
        // CB B2 019D
        gbc.setState(0xe5d8, 0x29dc, 0xf260, 0xfd9f, 0xbb6f, 0x4363, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x29dc);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d8), 0xcb);
        EXPECT(gbc.readMem(0xe5d9), 0xb2);
        // CB B2 019E
        gbc.setState(0xa162, 0x2f51, 0xef80, 0xe7c3, 0xc2c1, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0xa162, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2f51);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0xb2);
        // CB B2 019F
        gbc.setState(0x24ff, 0x9533, 0x64a0, 0x381b, 0x9c35, 0xb067, 0x0, 0x0);
        gbc.writeMem(0x24ff, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9533);
        EXPECT(gbc.pc(), 0x2501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01A0
        gbc.setState(0xe5a1, 0x9e90, 0x2bd0, 0xfaa8, 0xa8bc, 0x287d, 0x1, 0x0);
        gbc.writeMem(0xe5a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9e90);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a1), 0xcb);
        EXPECT(gbc.readMem(0xe5a2), 0xb2);
        // CB B2 01A2
        gbc.setState(0xef4b, 0xf40f, 0x7100, 0xf632, 0xe1e5, 0x3f99, 0x0, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf40f);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4b), 0xcb);
        EXPECT(gbc.readMem(0xef4c), 0xb2);
        // CB B2 01A3
        gbc.setState(0x9cba, 0x52e9, 0x9560, 0x9650, 0x51cf, 0x8d4d, 0x1, 0x1);
        gbc.writeMem(0x9cba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x52e9);
        EXPECT(gbc.pc(), 0x9cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cba), 0xcb);
        EXPECT(gbc.readMem(0x9cbb), 0xb2);
        // CB B2 01A4
        gbc.setState(0x5d69, 0xc558, 0xed70, 0xadcb, 0x163b, 0xc459, 0x1, 0x1);
        gbc.writeMem(0x5d69, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc558);
        EXPECT(gbc.pc(), 0x5d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01A5
        gbc.setState(0x55d, 0x9570, 0x6930, 0xa75d, 0xe524, 0x905c, 0x0, 0x0);
        gbc.writeMem(0x55d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9570);
        EXPECT(gbc.pc(), 0x55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01A9
        gbc.setState(0x2c0a, 0x7ebc, 0xb230, 0xc248, 0xc473, 0xf209, 0x0, 0x0);
        gbc.writeMem(0x2c0a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0x2c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01AA
        gbc.setState(0xd58c, 0x7e32, 0xc780, 0xbd0e, 0xa849, 0x8ff6, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7e32);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58c), 0xcb);
        EXPECT(gbc.readMem(0xd58d), 0xb2);
        // CB B2 01AB
        gbc.setState(0xd68f, 0x2f33, 0x6d30, 0xf007, 0x4491, 0x8578, 0x1, 0x0);
        gbc.writeMem(0xd68f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2f33);
        EXPECT(gbc.pc(), 0xd691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0xcb);
        EXPECT(gbc.readMem(0xd690), 0xb2);
        // CB B2 01AC
        gbc.setState(0x3a5c, 0x3971, 0x1140, 0xd6d6, 0xf8e4, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3971);
        EXPECT(gbc.pc(), 0x3a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01AD
        gbc.setState(0x9c77, 0x3b1a, 0x6b50, 0xc37f, 0xead5, 0xf289, 0x1, 0x0);
        gbc.writeMem(0x9c77, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b1a);
        EXPECT(gbc.pc(), 0x9c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c77), 0xcb);
        EXPECT(gbc.readMem(0x9c78), 0xb2);
        // CB B2 01AE
        gbc.setState(0x3fc2, 0x46f3, 0xb140, 0x27e9, 0x51e9, 0xe720, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x46f3);
        EXPECT(gbc.pc(), 0x3fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01AF
        gbc.setState(0xe33f, 0x3479, 0x8000, 0x871d, 0xc783, 0xee1c, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3479);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33f), 0xcb);
        EXPECT(gbc.readMem(0xe340), 0xb2);
        // CB B2 01B0
        gbc.setState(0x5bb, 0xadbe, 0x8620, 0xc27b, 0x7106, 0x4db4, 0x0, 0x1);
        gbc.writeMem(0x5bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xadbe);
        EXPECT(gbc.pc(), 0x5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01B2
        gbc.setState(0x3402, 0xf6c1, 0xfe10, 0xd1c5, 0xf550, 0x273c, 0x0, 0x0);
        gbc.writeMem(0x3402, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf6c1);
        EXPECT(gbc.pc(), 0x3404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01B3
        gbc.setState(0x80ec, 0xf596, 0xa50, 0xe43f, 0x3156, 0xff2e, 0x0, 0x0);
        gbc.writeMem(0x80ec, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf596);
        EXPECT(gbc.pc(), 0x80ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ec), 0xcb);
        EXPECT(gbc.readMem(0x80ed), 0xb2);
        // CB B2 01B5
        gbc.setState(0x920b, 0x9ac6, 0x5e0, 0xd7eb, 0xa440, 0xa5a2, 0x1, 0x0);
        gbc.writeMem(0x920b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9ac6);
        EXPECT(gbc.pc(), 0x920d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920b), 0xcb);
        EXPECT(gbc.readMem(0x920c), 0xb2);
        // CB B2 01B6
        gbc.setState(0xb711, 0x2b35, 0x5f90, 0x4a75, 0x6a62, 0x1afb, 0x1, 0x0);
        gbc.writeMem(0xb711, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2b35);
        EXPECT(gbc.pc(), 0xb713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb711), 0xcb);
        EXPECT(gbc.readMem(0xb712), 0xb2);
        // CB B2 01B7
        gbc.setState(0x28b3, 0x289d, 0x51c0, 0x1b21, 0x39c5, 0xb9e0, 0x0, 0x1);
        gbc.writeMem(0x28b3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x289d);
        EXPECT(gbc.pc(), 0x28b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01B8
        gbc.setState(0x3871, 0x8b25, 0xf850, 0x4fa7, 0x9000, 0xdc82, 0x1, 0x1);
        gbc.writeMem(0x3871, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8b25);
        EXPECT(gbc.pc(), 0x3873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01B9
        gbc.setState(0x8a7, 0x3978, 0x4bc0, 0xa242, 0xe132, 0xe663, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3978);
        EXPECT(gbc.pc(), 0x8a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01BA
        gbc.setState(0x53cb, 0xeb6a, 0x4530, 0x1543, 0xb860, 0x2fc8, 0x1, 0x1);
        gbc.writeMem(0x53cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xeb6a);
        EXPECT(gbc.pc(), 0x53cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01BB
        gbc.setState(0x32a6, 0x8a82, 0xe020, 0x695c, 0xa567, 0x3718, 0x1, 0x1);
        gbc.writeMem(0x32a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8a82);
        EXPECT(gbc.pc(), 0x32a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01BC
        gbc.setState(0x8077, 0x6b3f, 0x24d0, 0xf9a2, 0x9435, 0xe376, 0x1, 0x0);
        gbc.writeMem(0x8077, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6b3f);
        EXPECT(gbc.pc(), 0x8079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8077), 0xcb);
        EXPECT(gbc.readMem(0x8078), 0xb2);
        // CB B2 01BD
        gbc.setState(0x476f, 0x1da8, 0xbf40, 0xaa4f, 0xb688, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x476f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1da8);
        EXPECT(gbc.pc(), 0x4771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01BE
        gbc.setState(0x2523, 0x201, 0xa020, 0x38d5, 0xe968, 0x1e72, 0x1, 0x1);
        gbc.writeMem(0x2523, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0x2525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01BF
        gbc.setState(0xa95c, 0xab79, 0x5330, 0x61fa, 0x5bb7, 0x40c1, 0x0, 0x1);
        gbc.writeMem(0xa95c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xab79);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95c), 0xcb);
        EXPECT(gbc.readMem(0xa95d), 0xb2);
        // CB B2 01C0
        gbc.setState(0x2039, 0xe69, 0x4f0, 0x68ff, 0x4bce, 0x1a7c, 0x0, 0x1);
        gbc.writeMem(0x2039, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0x203b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01C1
        gbc.setState(0x2269, 0x4f48, 0x9350, 0x8bda, 0x2060, 0x1b8e, 0x1, 0x1);
        gbc.writeMem(0x2269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4f48);
        EXPECT(gbc.pc(), 0x226b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01C2
        gbc.setState(0x170e, 0x1e87, 0x7c90, 0xdf13, 0x2e99, 0x9fdd, 0x1, 0x1);
        gbc.writeMem(0x170e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1e87);
        EXPECT(gbc.pc(), 0x1710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01C4
        gbc.setState(0x396f, 0x7e55, 0xc890, 0xeff8, 0xa82f, 0x96c1, 0x0, 0x1);
        gbc.writeMem(0x396f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7e55);
        EXPECT(gbc.pc(), 0x3971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01C5
        gbc.setState(0x32d, 0xf57, 0xe940, 0xcb3a, 0x8bed, 0xd8fe, 0x1, 0x0);
        gbc.writeMem(0x32d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf57);
        EXPECT(gbc.pc(), 0x32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01C6
        gbc.setState(0x1118, 0xb7c1, 0x69d0, 0x1e1f, 0xdadc, 0x4a2d, 0x1, 0x0);
        gbc.writeMem(0x1118, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb7c1);
        EXPECT(gbc.pc(), 0x111a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01C7
        gbc.setState(0xd3ed, 0x6418, 0x4060, 0xf599, 0x5806, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0xd3ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6418);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ed), 0xcb);
        EXPECT(gbc.readMem(0xd3ee), 0xb2);
        // CB B2 01C8
        gbc.setState(0x61ce, 0x9e2c, 0xfe80, 0x67f, 0x32f4, 0x1bbc, 0x0, 0x1);
        gbc.writeMem(0x61ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9e2c);
        EXPECT(gbc.pc(), 0x61d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01C9
        gbc.setState(0xcede, 0x2729, 0xaaa0, 0x6c90, 0x9a83, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0xcede, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2729);
        EXPECT(gbc.pc(), 0xcee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcede), 0xcb);
        EXPECT(gbc.readMem(0xcedf), 0xb2);
        // CB B2 01CA
        gbc.setState(0x55ae, 0x8f68, 0x69d0, 0x2f98, 0x7138, 0xea6c, 0x0, 0x0);
        gbc.writeMem(0x55ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8f68);
        EXPECT(gbc.pc(), 0x55b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01CC
        gbc.setState(0xde06, 0xc3f, 0x8020, 0x88c6, 0x16ca, 0x35fb, 0x0, 0x1);
        gbc.writeMem(0xde06, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc3f);
        EXPECT(gbc.pc(), 0xde08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde06), 0xcb);
        EXPECT(gbc.readMem(0xde07), 0xb2);
        // CB B2 01CD
        gbc.setState(0xe9d6, 0xf36c, 0x7bd0, 0x98c3, 0x5341, 0x6f1b, 0x0, 0x1);
        gbc.writeMem(0xe9d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf36c);
        EXPECT(gbc.pc(), 0xe9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d6), 0xcb);
        EXPECT(gbc.readMem(0xe9d7), 0xb2);
        // CB B2 01CE
        gbc.setState(0x14ac, 0xcc8d, 0xb940, 0x30af, 0xd71b, 0xf630, 0x1, 0x0);
        gbc.writeMem(0x14ac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcc8d);
        EXPECT(gbc.pc(), 0x14ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01CF
        gbc.setState(0x7af9, 0x7022, 0x4310, 0xfc6d, 0x7c47, 0xa4af, 0x0, 0x1);
        gbc.writeMem(0x7af9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7022);
        EXPECT(gbc.pc(), 0x7afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01D0
        gbc.setState(0xa7d2, 0xc318, 0xa710, 0x97c6, 0x8e6a, 0xa791, 0x0, 0x1);
        gbc.writeMem(0xa7d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc318);
        EXPECT(gbc.pc(), 0xa7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d2), 0xcb);
        EXPECT(gbc.readMem(0xa7d3), 0xb2);
        // CB B2 01D1
        gbc.setState(0x2eef, 0xb565, 0xcfa0, 0x7ba2, 0x8b78, 0x5fe3, 0x1, 0x1);
        gbc.writeMem(0x2eef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb565);
        EXPECT(gbc.pc(), 0x2ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01D2
        gbc.setState(0x2479, 0x4922, 0xc3c0, 0xbaeb, 0x7bbc, 0xe3b5, 0x1, 0x0);
        gbc.writeMem(0x2479, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4922);
        EXPECT(gbc.pc(), 0x247b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01D3
        gbc.setState(0xb887, 0x7256, 0x9dd0, 0x3edb, 0xd5bd, 0xd29f, 0x0, 0x0);
        gbc.writeMem(0xb887, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7256);
        EXPECT(gbc.pc(), 0xb889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb887), 0xcb);
        EXPECT(gbc.readMem(0xb888), 0xb2);
        // CB B2 01D5
        gbc.setState(0x991d, 0x7cfd, 0xecb0, 0x142b, 0x2dc2, 0xe945, 0x0, 0x0);
        gbc.writeMem(0x991d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7cfd);
        EXPECT(gbc.pc(), 0x991f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991d), 0xcb);
        EXPECT(gbc.readMem(0x991e), 0xb2);
        // CB B2 01D6
        gbc.setState(0xddde, 0xa2dc, 0x3230, 0xa39, 0x7da8, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0xddde, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa2dc);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddde), 0xcb);
        EXPECT(gbc.readMem(0xdddf), 0xb2);
        // CB B2 01D7
        gbc.setState(0xae34, 0x4563, 0xa760, 0xd345, 0x77a0, 0xab3b, 0x1, 0x1);
        gbc.writeMem(0xae34, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4563);
        EXPECT(gbc.pc(), 0xae36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae34), 0xcb);
        EXPECT(gbc.readMem(0xae35), 0xb2);
        // CB B2 01D8
        gbc.setState(0xdde5, 0x32d9, 0x1740, 0x71c8, 0x25ec, 0x2fde, 0x0, 0x1);
        gbc.writeMem(0xdde5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x32d9);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde5), 0xcb);
        EXPECT(gbc.readMem(0xdde6), 0xb2);
        // CB B2 01D9
        gbc.setState(0x924e, 0xe51c, 0x2a40, 0xf342, 0x44b1, 0x90d0, 0x1, 0x1);
        gbc.writeMem(0x924e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe51c);
        EXPECT(gbc.pc(), 0x9250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924e), 0xcb);
        EXPECT(gbc.readMem(0x924f), 0xb2);
        // CB B2 01DA
        gbc.setState(0x4844, 0x4f4d, 0x7700, 0x8fae, 0xca88, 0x1d23, 0x1, 0x0);
        gbc.writeMem(0x4844, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4f4d);
        EXPECT(gbc.pc(), 0x4846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01DB
        gbc.setState(0x7aae, 0x2818, 0xbc40, 0xa19e, 0xb195, 0x849e, 0x0, 0x1);
        gbc.writeMem(0x7aae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2818);
        EXPECT(gbc.pc(), 0x7ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01DC
        gbc.setState(0x9f2b, 0xd25c, 0xd3c0, 0x1aab, 0x144c, 0xa166, 0x0, 0x1);
        gbc.writeMem(0x9f2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd25c);
        EXPECT(gbc.pc(), 0x9f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2b), 0xcb);
        EXPECT(gbc.readMem(0x9f2c), 0xb2);
        // CB B2 01DD
        gbc.setState(0x4949, 0x20a7, 0xd5f0, 0x5eba, 0x50d0, 0x97b9, 0x1, 0x0);
        gbc.writeMem(0x4949, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0x494b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01DE
        gbc.setState(0x4a44, 0xceb8, 0xd7b0, 0x6c58, 0x243c, 0xee07, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xceb8);
        EXPECT(gbc.pc(), 0x4a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01DF
        gbc.setState(0xd0a6, 0xa345, 0xeb10, 0xc32d, 0x9aff, 0x4033, 0x0, 0x0);
        gbc.writeMem(0xd0a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa345);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a6), 0xcb);
        EXPECT(gbc.readMem(0xd0a7), 0xb2);
        // CB B2 01E0
        gbc.setState(0xcaef, 0xc186, 0xffe0, 0x55a2, 0xb200, 0x23ba, 0x0, 0x1);
        gbc.writeMem(0xcaef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc186);
        EXPECT(gbc.pc(), 0xcaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaef), 0xcb);
        EXPECT(gbc.readMem(0xcaf0), 0xb2);
        // CB B2 01E1
        gbc.setState(0xe35f, 0xd584, 0x6890, 0xd231, 0x5868, 0x4770, 0x0, 0x1);
        gbc.writeMem(0xe35f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd584);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0xb2);
        // CB B2 01E2
        gbc.setState(0x6d2d, 0x5208, 0xb150, 0xb1a4, 0x95d1, 0xc83c, 0x0, 0x0);
        gbc.writeMem(0x6d2d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5208);
        EXPECT(gbc.pc(), 0x6d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01E3
        gbc.setState(0xc52f, 0x9ede, 0x3140, 0x6ed1, 0x4f52, 0xafe0, 0x1, 0x1);
        gbc.writeMem(0xc52f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9ede);
        EXPECT(gbc.pc(), 0xc531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52f), 0xcb);
        EXPECT(gbc.readMem(0xc530), 0xb2);
        // CB B2 01E4
        gbc.setState(0x259a, 0x8eaa, 0x2f60, 0x330f, 0x8f67, 0x56a7, 0x0, 0x0);
        gbc.writeMem(0x259a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8eaa);
        EXPECT(gbc.pc(), 0x259c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01E5
        gbc.setState(0x9578, 0xcd42, 0x3f30, 0xfd39, 0xa0dc, 0xb6d9, 0x0, 0x0);
        gbc.writeMem(0x9578, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xcd42);
        EXPECT(gbc.pc(), 0x957a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9578), 0xcb);
        EXPECT(gbc.readMem(0x9579), 0xb2);
        // CB B2 01E6
        gbc.setState(0x8e2a, 0xf684, 0xcc40, 0x2c04, 0x7492, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0x8e2a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf684);
        EXPECT(gbc.pc(), 0x8e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2a), 0xcb);
        EXPECT(gbc.readMem(0x8e2b), 0xb2);
        // CB B2 01E7
        gbc.setState(0xb2bd, 0x6394, 0xcf70, 0x532, 0xd4e6, 0x3ae9, 0x0, 0x0);
        gbc.writeMem(0xb2bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6394);
        EXPECT(gbc.pc(), 0xb2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2bd), 0xcb);
        EXPECT(gbc.readMem(0xb2be), 0xb2);
        // CB B2 01E8
        gbc.setState(0xb972, 0x87d7, 0x3a20, 0xab1c, 0xc3a2, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0xb972, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x87d7);
        EXPECT(gbc.pc(), 0xb974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb972), 0xcb);
        EXPECT(gbc.readMem(0xb973), 0xb2);
        // CB B2 01E9
        gbc.setState(0x190b, 0xfef0, 0x13a0, 0x54da, 0x84c3, 0x56c0, 0x0, 0x0);
        gbc.writeMem(0x190b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfef0);
        EXPECT(gbc.pc(), 0x190d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01EA
        gbc.setState(0x1edc, 0x21fc, 0x6d70, 0xe431, 0x7c93, 0x2d62, 0x1, 0x0);
        gbc.writeMem(0x1edc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x21fc);
        EXPECT(gbc.pc(), 0x1ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01EB
        gbc.setState(0x5b64, 0x4dd0, 0x7de0, 0xcf49, 0x4f5f, 0xed9f, 0x0, 0x0);
        gbc.writeMem(0x5b64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4dd0);
        EXPECT(gbc.pc(), 0x5b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01EC
        gbc.setState(0x6658, 0x3544, 0x7c80, 0x3870, 0xc11f, 0x2a87, 0x0, 0x0);
        gbc.writeMem(0x6658, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3544);
        EXPECT(gbc.pc(), 0x665a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01EE
        gbc.setState(0xcf7e, 0x8260, 0x8d0, 0x8ef6, 0xabd6, 0x68c0, 0x0, 0x0);
        gbc.writeMem(0xcf7e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8260);
        EXPECT(gbc.pc(), 0xcf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7e), 0xcb);
        EXPECT(gbc.readMem(0xcf7f), 0xb2);
        // CB B2 01EF
        gbc.setState(0x5b29, 0x6601, 0x58a0, 0x25af, 0x563b, 0xac56, 0x0, 0x0);
        gbc.writeMem(0x5b29, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6601);
        EXPECT(gbc.pc(), 0x5b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01F0
        gbc.setState(0x5175, 0xf2dd, 0xb670, 0xd013, 0x66c5, 0xe95b, 0x0, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf2dd);
        EXPECT(gbc.pc(), 0x5177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01F1
        gbc.setState(0xad65, 0x4362, 0x4ff0, 0xc44a, 0xd92d, 0xdd05, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4362);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad65), 0xcb);
        EXPECT(gbc.readMem(0xad66), 0xb2);
        // CB B2 01F2
        gbc.setState(0x948d, 0x9b58, 0x33c0, 0x124e, 0x716c, 0x1e7, 0x1, 0x0);
        gbc.writeMem(0x948d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9b58);
        EXPECT(gbc.pc(), 0x948f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948d), 0xcb);
        EXPECT(gbc.readMem(0x948e), 0xb2);
        // CB B2 01F3
        gbc.setState(0xd85b, 0xc884, 0x8120, 0x4c8e, 0xdc24, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0xd85b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc884);
        EXPECT(gbc.pc(), 0xd85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd85b), 0xcb);
        EXPECT(gbc.readMem(0xd85c), 0xb2);
        // CB B2 01F4
        gbc.setState(0x46ea, 0x5f34, 0x33a0, 0xec88, 0xe183, 0x5de4, 0x1, 0x1);
        gbc.writeMem(0x46ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5f34);
        EXPECT(gbc.pc(), 0x46ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01F5
        gbc.setState(0x8421, 0xee4a, 0x9d0, 0x1fcf, 0xc291, 0xdb65, 0x1, 0x0);
        gbc.writeMem(0x8421, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0x8423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8421), 0xcb);
        EXPECT(gbc.readMem(0x8422), 0xb2);
        // CB B2 01F6
        gbc.setState(0x9da5, 0x396f, 0xb920, 0xe4b, 0x5d4b, 0x3c9, 0x0, 0x0);
        gbc.writeMem(0x9da5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x396f);
        EXPECT(gbc.pc(), 0x9da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da5), 0xcb);
        EXPECT(gbc.readMem(0x9da6), 0xb2);
        // CB B2 01F7
        gbc.setState(0x3200, 0xa7e3, 0x3fe0, 0x4b3d, 0x16e9, 0x3589, 0x0, 0x0);
        gbc.writeMem(0x3200, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa7e3);
        EXPECT(gbc.pc(), 0x3202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01F8
        gbc.setState(0x8a8f, 0x9d08, 0x62c0, 0x6a2a, 0x215a, 0x6211, 0x0, 0x0);
        gbc.writeMem(0x8a8f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9d08);
        EXPECT(gbc.pc(), 0x8a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8f), 0xcb);
        EXPECT(gbc.readMem(0x8a90), 0xb2);
        // CB B2 01F9
        gbc.setState(0xcdb1, 0x758c, 0x5c80, 0x26fd, 0x4364, 0x1118, 0x0, 0x1);
        gbc.writeMem(0xcdb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x758c);
        EXPECT(gbc.pc(), 0xcdb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb1), 0xcb);
        EXPECT(gbc.readMem(0xcdb2), 0xb2);
        // CB B2 01FA
        gbc.setState(0x1a33, 0xe158, 0x7fe0, 0xa226, 0xb2ed, 0x2af9, 0x0, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe158);
        EXPECT(gbc.pc(), 0x1a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 01FB
        gbc.setState(0xe481, 0x487f, 0x6c50, 0x58, 0xfb0, 0x2daf, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe481), 0xcb);
        EXPECT(gbc.readMem(0xe482), 0xb2);
        // CB B2 01FC
        gbc.setState(0x480, 0x1cd5, 0x4270, 0x39c4, 0xe5c2, 0xab21, 0x0, 0x1);
        gbc.writeMem(0x480, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1cd5);
        EXPECT(gbc.pc(), 0x482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01FD
        gbc.setState(0x7e8b, 0xe539, 0x99d0, 0x5683, 0xd791, 0x16af, 0x0, 0x1);
        gbc.writeMem(0x7e8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe539);
        EXPECT(gbc.pc(), 0x7e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 01FE
        gbc.setState(0x9057, 0xa145, 0x87f0, 0xbd5f, 0x85af, 0x3c88, 0x0, 0x1);
        gbc.writeMem(0x9057, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa145);
        EXPECT(gbc.pc(), 0x9059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9057), 0xcb);
        EXPECT(gbc.readMem(0x9058), 0xb2);
        // CB B2 01FF
        gbc.setState(0xd7d6, 0xfd39, 0xc130, 0xed44, 0x786f, 0x8911, 0x1, 0x1);
        gbc.writeMem(0xd7d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfd39);
        EXPECT(gbc.pc(), 0xd7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d6), 0xcb);
        EXPECT(gbc.readMem(0xd7d7), 0xb2);
        // CB B2 0200
        gbc.setState(0x327f, 0x4890, 0x61f0, 0x9c74, 0x2b98, 0x1cb3, 0x1, 0x0);
        gbc.writeMem(0x327f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4890);
        EXPECT(gbc.pc(), 0x3281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0201
        gbc.setState(0x2650, 0x3abe, 0x20e0, 0x5ef0, 0x4d80, 0x984, 0x1, 0x1);
        gbc.writeMem(0x2650, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3abe);
        EXPECT(gbc.pc(), 0x2652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0202
        gbc.setState(0x1bfd, 0x56cb, 0x5fe0, 0x1088, 0xc4f4, 0x97e6, 0x0, 0x1);
        gbc.writeMem(0x1bfd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0x1bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0203
        gbc.setState(0x5968, 0x983c, 0x9cb0, 0xb685, 0xf9cc, 0xb40c, 0x1, 0x1);
        gbc.writeMem(0x5968, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x983c);
        EXPECT(gbc.pc(), 0x596a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0204
        gbc.setState(0x5518, 0xd9de, 0xaa60, 0x76b0, 0x1b73, 0xd371, 0x1, 0x1);
        gbc.writeMem(0x5518, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd9de);
        EXPECT(gbc.pc(), 0x551a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0206
        gbc.setState(0x7fdf, 0xce60, 0xdb50, 0x3bef, 0xc4d5, 0x5032, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xce60);
        EXPECT(gbc.pc(), 0x7fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0207
        gbc.setState(0x6946, 0xe73c, 0x1ed0, 0x2444, 0xcab2, 0xaa6c, 0x1, 0x1);
        gbc.writeMem(0x6946, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe73c);
        EXPECT(gbc.pc(), 0x6948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0208
        gbc.setState(0x7a6f, 0x3b61, 0xa1c0, 0xdae7, 0x7772, 0xbabd, 0x1, 0x0);
        gbc.writeMem(0x7a6f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3b61);
        EXPECT(gbc.pc(), 0x7a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0209
        gbc.setState(0xa6f2, 0xd8b2, 0x5a80, 0x7ed, 0xfd44, 0xd291, 0x1, 0x0);
        gbc.writeMem(0xa6f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd8b2);
        EXPECT(gbc.pc(), 0xa6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0xcb);
        EXPECT(gbc.readMem(0xa6f3), 0xb2);
        // CB B2 020A
        gbc.setState(0xc9bb, 0x98d1, 0x19f0, 0x33b2, 0x36ac, 0xb8d4, 0x0, 0x1);
        gbc.writeMem(0xc9bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x98d1);
        EXPECT(gbc.pc(), 0xc9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9bb), 0xcb);
        EXPECT(gbc.readMem(0xc9bc), 0xb2);
        // CB B2 020B
        gbc.setState(0x4de9, 0x1854, 0x3d70, 0x35be, 0x5574, 0xd147, 0x1, 0x1);
        gbc.writeMem(0x4de9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1854);
        EXPECT(gbc.pc(), 0x4deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 020C
        gbc.setState(0x6d22, 0x1ddd, 0x3680, 0xaa7b, 0xc1ce, 0x6a18, 0x1, 0x1);
        gbc.writeMem(0x6d22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1ddd);
        EXPECT(gbc.pc(), 0x6d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 020D
        gbc.setState(0x98f2, 0x3097, 0x7890, 0x8e09, 0x2948, 0xab97, 0x1, 0x1);
        gbc.writeMem(0x98f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3097);
        EXPECT(gbc.pc(), 0x98f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f2), 0xcb);
        EXPECT(gbc.readMem(0x98f3), 0xb2);
        // CB B2 020E
        gbc.setState(0xdbb3, 0x808d, 0xdf30, 0x272d, 0x789d, 0x667f, 0x0, 0x1);
        gbc.writeMem(0xdbb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x808d);
        EXPECT(gbc.pc(), 0xdbb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb3), 0xcb);
        EXPECT(gbc.readMem(0xdbb4), 0xb2);
        // CB B2 020F
        gbc.setState(0xe1c, 0xe318, 0x7e00, 0x926, 0x2fd0, 0x5649, 0x1, 0x1);
        gbc.writeMem(0xe1c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe318);
        EXPECT(gbc.pc(), 0xe1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0210
        gbc.setState(0x90d9, 0x5df, 0x6540, 0xbf6, 0xad6e, 0xb54f, 0x1, 0x1);
        gbc.writeMem(0x90d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5df);
        EXPECT(gbc.pc(), 0x90db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d9), 0xcb);
        EXPECT(gbc.readMem(0x90da), 0xb2);
        // CB B2 0211
        gbc.setState(0xd25c, 0xae86, 0xa830, 0xc6b, 0x60c4, 0x5bb9, 0x0, 0x1);
        gbc.writeMem(0xd25c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xae86);
        EXPECT(gbc.pc(), 0xd25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25c), 0xcb);
        EXPECT(gbc.readMem(0xd25d), 0xb2);
        // CB B2 0212
        gbc.setState(0xefd3, 0x4fc3, 0x1740, 0xfa08, 0x54fa, 0xf7ce, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0xefd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd3), 0xcb);
        EXPECT(gbc.readMem(0xefd4), 0xb2);
        // CB B2 0213
        gbc.setState(0x851d, 0xce18, 0x49b0, 0x3e05, 0xf085, 0x7787, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xce18);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0xb2);
        // CB B2 0214
        gbc.setState(0x5b6d, 0xddf1, 0x7a10, 0xb8db, 0xb075, 0xcd9e, 0x1, 0x1);
        gbc.writeMem(0x5b6d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xddf1);
        EXPECT(gbc.pc(), 0x5b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0215
        gbc.setState(0x8d0e, 0x1819, 0xf710, 0xd4d9, 0x61d, 0x2fd, 0x1, 0x0);
        gbc.writeMem(0x8d0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1819);
        EXPECT(gbc.pc(), 0x8d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d0e), 0xcb);
        EXPECT(gbc.readMem(0x8d0f), 0xb2);
        // CB B2 0216
        gbc.setState(0x8842, 0x62df, 0xdbd0, 0x2512, 0xaa84, 0xe94, 0x0, 0x0);
        gbc.writeMem(0x8842, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x62df);
        EXPECT(gbc.pc(), 0x8844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8842), 0xcb);
        EXPECT(gbc.readMem(0x8843), 0xb2);
        // CB B2 0217
        gbc.setState(0x33bb, 0x2caa, 0x1490, 0xa17b, 0x2c9e, 0x13bf, 0x0, 0x1);
        gbc.writeMem(0x33bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2caa);
        EXPECT(gbc.pc(), 0x33bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0218
        gbc.setState(0x6a45, 0x6c4c, 0xe680, 0x78d9, 0x6c73, 0xfbf4, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6c4c);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0219
        gbc.setState(0x1ea5, 0x5d89, 0x9e0, 0x7807, 0x8bc, 0x9bac, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5d89);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 021A
        gbc.setState(0x18a3, 0xc67, 0xdb0, 0x39cc, 0x2c85, 0x2e03, 0x1, 0x0);
        gbc.writeMem(0x18a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc67);
        EXPECT(gbc.pc(), 0x18a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 021B
        gbc.setState(0x710f, 0xe4a, 0x9350, 0x4d94, 0x6003, 0xca80, 0x1, 0x1);
        gbc.writeMem(0x710f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe4a);
        EXPECT(gbc.pc(), 0x7111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 021C
        gbc.setState(0x9ba, 0x4911, 0xffd0, 0xf635, 0xdf79, 0xeba1, 0x1, 0x1);
        gbc.writeMem(0x9ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4911);
        EXPECT(gbc.pc(), 0x9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 021D
        gbc.setState(0x6de5, 0xc7ea, 0xe860, 0x921, 0x5c22, 0x50d4, 0x0, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc7ea);
        EXPECT(gbc.pc(), 0x6de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 021E
        gbc.setState(0x5ecf, 0x8cda, 0xeac0, 0x46a0, 0x8966, 0xe34b, 0x0, 0x0);
        gbc.writeMem(0x5ecf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8cda);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 021F
        gbc.setState(0xc8a8, 0x5489, 0x30c0, 0x2fe2, 0x227a, 0xd4a2, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0xc8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a8), 0xcb);
        EXPECT(gbc.readMem(0xc8a9), 0xb2);
        // CB B2 0220
        gbc.setState(0x59bf, 0x51f6, 0xd9a0, 0xfed6, 0x907b, 0x4f33, 0x1, 0x1);
        gbc.writeMem(0x59bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x51f6);
        EXPECT(gbc.pc(), 0x59c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0221
        gbc.setState(0x601d, 0xc24, 0xa170, 0x3303, 0xf551, 0xde29, 0x1, 0x1);
        gbc.writeMem(0x601d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc24);
        EXPECT(gbc.pc(), 0x601f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0222
        gbc.setState(0xbbd0, 0x9d9c, 0x2ca0, 0x23c8, 0x874d, 0xe030, 0x1, 0x0);
        gbc.writeMem(0xbbd0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9d9c);
        EXPECT(gbc.pc(), 0xbbd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd0), 0xcb);
        EXPECT(gbc.readMem(0xbbd1), 0xb2);
        // CB B2 0223
        gbc.setState(0xbe7a, 0x8fae, 0x5760, 0xcc6b, 0x1972, 0x9f8e, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8fae);
        EXPECT(gbc.pc(), 0xbe7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7a), 0xcb);
        EXPECT(gbc.readMem(0xbe7b), 0xb2);
        // CB B2 0224
        gbc.setState(0x74cb, 0xfa78, 0x5b40, 0xad48, 0x5cfd, 0x60d6, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfa78);
        EXPECT(gbc.pc(), 0x74cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0225
        gbc.setState(0xc74f, 0x938b, 0x700, 0x7329, 0x5892, 0xf146, 0x0, 0x0);
        gbc.writeMem(0xc74f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x938b);
        EXPECT(gbc.pc(), 0xc751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0xcb);
        EXPECT(gbc.readMem(0xc750), 0xb2);
        // CB B2 0226
        gbc.setState(0x6d8b, 0x13fb, 0xf810, 0xc587, 0x870b, 0xbf32, 0x0, 0x0);
        gbc.writeMem(0x6d8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x13fb);
        EXPECT(gbc.pc(), 0x6d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0227
        gbc.setState(0x1fe4, 0x74f8, 0x1a00, 0xf38d, 0x1f42, 0x99bf, 0x0, 0x1);
        gbc.writeMem(0x1fe4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x74f8);
        EXPECT(gbc.pc(), 0x1fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0228
        gbc.setState(0x914e, 0xc8f1, 0x4ce0, 0x9dd2, 0x28aa, 0xc1ff, 0x0, 0x0);
        gbc.writeMem(0x914e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc8f1);
        EXPECT(gbc.pc(), 0x9150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914e), 0xcb);
        EXPECT(gbc.readMem(0x914f), 0xb2);
        // CB B2 0229
        gbc.setState(0xd505, 0xc98c, 0x97c0, 0x4dfe, 0xd193, 0x3a58, 0x0, 0x1);
        gbc.writeMem(0xd505, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc98c);
        EXPECT(gbc.pc(), 0xd507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd505), 0xcb);
        EXPECT(gbc.readMem(0xd506), 0xb2);
        // CB B2 022A
        gbc.setState(0x72db, 0xd35c, 0x38d0, 0xb915, 0xaeb4, 0x1c61, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd35c);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 022B
        gbc.setState(0x49ca, 0x6b6b, 0x5890, 0xec2, 0xb4c3, 0xc2e, 0x1, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6b6b);
        EXPECT(gbc.pc(), 0x49cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 022C
        gbc.setState(0xeffb, 0xbd43, 0x7f00, 0x56bd, 0xef7c, 0xe824, 0x0, 0x0);
        gbc.writeMem(0xeffb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbd43);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffb), 0xcb);
        EXPECT(gbc.readMem(0xeffc), 0xb2);
        // CB B2 022D
        gbc.setState(0xb03c, 0x1f2d, 0xa7f0, 0xa613, 0x9347, 0xca6c, 0x1, 0x1);
        gbc.writeMem(0xb03c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1f2d);
        EXPECT(gbc.pc(), 0xb03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03c), 0xcb);
        EXPECT(gbc.readMem(0xb03d), 0xb2);
        // CB B2 022E
        gbc.setState(0x6f59, 0x3f56, 0x9220, 0x986b, 0xc55d, 0x5927, 0x1, 0x1);
        gbc.writeMem(0x6f59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3f56);
        EXPECT(gbc.pc(), 0x6f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 022F
        gbc.setState(0x1831, 0x62f8, 0x7950, 0xaa27, 0x2fd, 0x999e, 0x1, 0x0);
        gbc.writeMem(0x1831, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x62f8);
        EXPECT(gbc.pc(), 0x1833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0230
        gbc.setState(0x33d9, 0xd985, 0x8a10, 0xf9ec, 0x205f, 0x75ff, 0x0, 0x0);
        gbc.writeMem(0x33d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd985);
        EXPECT(gbc.pc(), 0x33db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0231
        gbc.setState(0x5999, 0x7789, 0x3df0, 0x655d, 0xa4df, 0x4ec5, 0x1, 0x1);
        gbc.writeMem(0x5999, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7789);
        EXPECT(gbc.pc(), 0x599b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0232
        gbc.setState(0x165a, 0x2be1, 0x300, 0xe6f4, 0x46e6, 0xe6ce, 0x0, 0x1);
        gbc.writeMem(0x165a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2be1);
        EXPECT(gbc.pc(), 0x165c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0234
        gbc.setState(0x25d6, 0xe505, 0xf230, 0xc82d, 0xb14, 0x14e3, 0x0, 0x0);
        gbc.writeMem(0x25d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe505);
        EXPECT(gbc.pc(), 0x25d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0235
        gbc.setState(0x3554, 0x3bbf, 0x3910, 0x1ca6, 0x5c3c, 0xd3b9, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3bbf);
        EXPECT(gbc.pc(), 0x3556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0236
        gbc.setState(0xbf55, 0xc8cd, 0x7a70, 0xabf3, 0x4f51, 0xdad1, 0x1, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc8cd);
        EXPECT(gbc.pc(), 0xbf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf55), 0xcb);
        EXPECT(gbc.readMem(0xbf56), 0xb2);
        // CB B2 0237
        gbc.setState(0x7300, 0xc3cc, 0x27d0, 0x409e, 0x5e99, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0x7300, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc3cc);
        EXPECT(gbc.pc(), 0x7302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0238
        gbc.setState(0xced2, 0x186b, 0x5690, 0x3c75, 0x532a, 0x74b5, 0x1, 0x1);
        gbc.writeMem(0xced2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x186b);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced2), 0xcb);
        EXPECT(gbc.readMem(0xced3), 0xb2);
        // CB B2 0239
        gbc.setState(0x2369, 0x1acd, 0xb410, 0x947, 0xc512, 0x87bb, 0x1, 0x0);
        gbc.writeMem(0x2369, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1acd);
        EXPECT(gbc.pc(), 0x236b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 023A
        gbc.setState(0x7f89, 0xf1a0, 0x7810, 0x7c5b, 0x45e7, 0x2655, 0x1, 0x0);
        gbc.writeMem(0x7f89, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf1a0);
        EXPECT(gbc.pc(), 0x7f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 023B
        gbc.setState(0x4445, 0x2de1, 0x8610, 0xb301, 0xb38d, 0x610a, 0x0, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0x4447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 023C
        gbc.setState(0x2ddb, 0x876f, 0xcf00, 0xa1fe, 0x6f64, 0x422b, 0x1, 0x1);
        gbc.writeMem(0x2ddb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x876f);
        EXPECT(gbc.pc(), 0x2ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 023D
        gbc.setState(0xcd81, 0xeaa8, 0x6470, 0x568d, 0xf6fd, 0x807, 0x1, 0x1);
        gbc.writeMem(0xcd81, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xeaa8);
        EXPECT(gbc.pc(), 0xcd83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd81), 0xcb);
        EXPECT(gbc.readMem(0xcd82), 0xb2);
        // CB B2 023E
        gbc.setState(0x1e50, 0x66c2, 0xb640, 0x1174, 0x3d22, 0xba55, 0x0, 0x0);
        gbc.writeMem(0x1e50, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x66c2);
        EXPECT(gbc.pc(), 0x1e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0240
        gbc.setState(0x6294, 0x8a3b, 0x8700, 0x6643, 0xe0fc, 0x1eab, 0x1, 0x0);
        gbc.writeMem(0x6294, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8a3b);
        EXPECT(gbc.pc(), 0x6296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0241
        gbc.setState(0x1505, 0xd887, 0xbd90, 0xc493, 0xb905, 0xaa82, 0x1, 0x1);
        gbc.writeMem(0x1505, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd887);
        EXPECT(gbc.pc(), 0x1507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0242
        gbc.setState(0xc5a2, 0x6dd9, 0xd280, 0xb83e, 0x36bb, 0xac4a, 0x0, 0x0);
        gbc.writeMem(0xc5a2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6dd9);
        EXPECT(gbc.pc(), 0xc5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a2), 0xcb);
        EXPECT(gbc.readMem(0xc5a3), 0xb2);
        // CB B2 0243
        gbc.setState(0xc9ab, 0xb41c, 0xb420, 0xbc31, 0xc20b, 0x2822, 0x0, 0x1);
        gbc.writeMem(0xc9ab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0xc9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ab), 0xcb);
        EXPECT(gbc.readMem(0xc9ac), 0xb2);
        // CB B2 0244
        gbc.setState(0x161, 0xf28e, 0x4720, 0x4a0d, 0x4b86, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x161, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf28e);
        EXPECT(gbc.pc(), 0x163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0245
        gbc.setState(0xb8ea, 0x6682, 0xd870, 0xe04f, 0xc5f3, 0xec4b, 0x1, 0x1);
        gbc.writeMem(0xb8ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6682);
        EXPECT(gbc.pc(), 0xb8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ea), 0xcb);
        EXPECT(gbc.readMem(0xb8eb), 0xb2);
        // CB B2 0246
        gbc.setState(0x5a91, 0x107c, 0x2cb0, 0x3b5f, 0xc4fb, 0x8d1e, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x107c);
        EXPECT(gbc.pc(), 0x5a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0247
        gbc.setState(0x859, 0xa2b8, 0x8d60, 0xbfca, 0xa6a7, 0x9fd, 0x0, 0x0);
        gbc.writeMem(0x859, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa2b8);
        EXPECT(gbc.pc(), 0x85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0248
        gbc.setState(0x3bbd, 0xf5df, 0xd2c0, 0xf737, 0x2cb2, 0x1e2, 0x1, 0x0);
        gbc.writeMem(0x3bbd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf5df);
        EXPECT(gbc.pc(), 0x3bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0249
        gbc.setState(0x49de, 0xcf86, 0x2c0, 0xa95, 0x7eb3, 0x232d, 0x0, 0x1);
        gbc.writeMem(0x49de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcf86);
        EXPECT(gbc.pc(), 0x49e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 024A
        gbc.setState(0xc270, 0xfb20, 0xebf0, 0x764b, 0x4f55, 0xca45, 0x1, 0x1);
        gbc.writeMem(0xc270, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfb20);
        EXPECT(gbc.pc(), 0xc272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc270), 0xcb);
        EXPECT(gbc.readMem(0xc271), 0xb2);
        // CB B2 024B
        gbc.setState(0x3527, 0x2184, 0x4240, 0x417, 0xd936, 0x8484, 0x1, 0x0);
        gbc.writeMem(0x3527, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2184);
        EXPECT(gbc.pc(), 0x3529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 024C
        gbc.setState(0x1c8, 0xbd3e, 0xc6a0, 0x89, 0xdcbf, 0x6a29, 0x0, 0x0);
        gbc.writeMem(0x1c8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbd3e);
        EXPECT(gbc.pc(), 0x1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 024D
        gbc.setState(0x9cb7, 0x8628, 0x1c60, 0x66b, 0xad15, 0x4c3e, 0x0, 0x1);
        gbc.writeMem(0x9cb7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8628);
        EXPECT(gbc.pc(), 0x9cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb7), 0xcb);
        EXPECT(gbc.readMem(0x9cb8), 0xb2);
        // CB B2 024E
        gbc.setState(0x7420, 0xd7f0, 0xa350, 0xe486, 0xba3b, 0xe4db, 0x0, 0x0);
        gbc.writeMem(0x7420, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd7f0);
        EXPECT(gbc.pc(), 0x7422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 024F
        gbc.setState(0x8df, 0x6ab5, 0x3620, 0xf9e7, 0xf4bd, 0x6334, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6ab5);
        EXPECT(gbc.pc(), 0x8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0250
        gbc.setState(0x5409, 0x9275, 0x9d0, 0x339b, 0x3e98, 0x8828, 0x0, 0x1);
        gbc.writeMem(0x5409, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9275);
        EXPECT(gbc.pc(), 0x540b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0251
        gbc.setState(0x2acc, 0xcd7a, 0x3970, 0xea56, 0x51f2, 0x1d86, 0x1, 0x0);
        gbc.writeMem(0x2acc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcd7a);
        EXPECT(gbc.pc(), 0x2ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0252
        gbc.setState(0x999c, 0x6012, 0x4590, 0xc1db, 0xd955, 0xb789, 0x1, 0x1);
        gbc.writeMem(0x999c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6012);
        EXPECT(gbc.pc(), 0x999e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999c), 0xcb);
        EXPECT(gbc.readMem(0x999d), 0xb2);
        // CB B2 0253
        gbc.setState(0x7e9e, 0x48d3, 0x9ae0, 0x9c0b, 0x7a9, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0x7e9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x48d3);
        EXPECT(gbc.pc(), 0x7ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0254
        gbc.setState(0x2a96, 0x51b3, 0x13c0, 0xb909, 0x10a8, 0x9d3b, 0x0, 0x1);
        gbc.writeMem(0x2a96, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0x2a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0255
        gbc.setState(0xe1df, 0x3ef3, 0x24c0, 0x10c4, 0x6b61, 0xc4c5, 0x1, 0x0);
        gbc.writeMem(0xe1df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3ef3);
        EXPECT(gbc.pc(), 0xe1e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1df), 0xcb);
        EXPECT(gbc.readMem(0xe1e0), 0xb2);
        // CB B2 0257
        gbc.setState(0x20b5, 0x2e94, 0xb770, 0xc631, 0x938d, 0x6776, 0x0, 0x0);
        gbc.writeMem(0x20b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2e94);
        EXPECT(gbc.pc(), 0x20b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0258
        gbc.setState(0xeb4d, 0x2aec, 0x2e10, 0x4f25, 0xcf16, 0xb562, 0x1, 0x1);
        gbc.writeMem(0xeb4d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2aec);
        EXPECT(gbc.pc(), 0xeb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4d), 0xcb);
        EXPECT(gbc.readMem(0xeb4e), 0xb2);
        // CB B2 0259
        gbc.setState(0xbef1, 0x3ed7, 0x4d0, 0x875e, 0x8bc3, 0xccd0, 0x1, 0x1);
        gbc.writeMem(0xbef1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3ed7);
        EXPECT(gbc.pc(), 0xbef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef1), 0xcb);
        EXPECT(gbc.readMem(0xbef2), 0xb2);
        // CB B2 025A
        gbc.setState(0x21f3, 0xab0f, 0x6120, 0x6cf9, 0xbdac, 0x84c1, 0x1, 0x1);
        gbc.writeMem(0x21f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xab0f);
        EXPECT(gbc.pc(), 0x21f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 025B
        gbc.setState(0x2138, 0x6054, 0xc610, 0x42c8, 0x8956, 0x5bb9, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6054);
        EXPECT(gbc.pc(), 0x213a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 025C
        gbc.setState(0xc5b, 0xb376, 0x3120, 0x3320, 0x5979, 0xd370, 0x1, 0x1);
        gbc.writeMem(0xc5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb376);
        EXPECT(gbc.pc(), 0xc5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 025D
        gbc.setState(0x40c0, 0xdd50, 0xad80, 0x342a, 0xbf86, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0x40c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdd50);
        EXPECT(gbc.pc(), 0x40c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 025E
        gbc.setState(0x3d61, 0xe615, 0x6920, 0x8e0b, 0x9102, 0x78e6, 0x1, 0x0);
        gbc.writeMem(0x3d61, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe615);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 025F
        gbc.setState(0xe088, 0x18a6, 0x8030, 0x49fb, 0x8c7b, 0xe587, 0x0, 0x0);
        gbc.writeMem(0xe088, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x18a6);
        EXPECT(gbc.pc(), 0xe08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe088), 0xcb);
        EXPECT(gbc.readMem(0xe089), 0xb2);
        // CB B2 0260
        gbc.setState(0x8da0, 0xd188, 0xeaa0, 0x49ae, 0xd1b0, 0x1847, 0x0, 0x1);
        gbc.writeMem(0x8da0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd188);
        EXPECT(gbc.pc(), 0x8da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da0), 0xcb);
        EXPECT(gbc.readMem(0x8da1), 0xb2);
        // CB B2 0261
        gbc.setState(0xac65, 0xedca, 0xf8e0, 0x5001, 0x770c, 0xcf2, 0x0, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xedca);
        EXPECT(gbc.pc(), 0xac67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac65), 0xcb);
        EXPECT(gbc.readMem(0xac66), 0xb2);
        // CB B2 0262
        gbc.setState(0x4ea9, 0x3856, 0x5400, 0x3dee, 0x1180, 0x9c40, 0x0, 0x1);
        gbc.writeMem(0x4ea9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3856);
        EXPECT(gbc.pc(), 0x4eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0264
        gbc.setState(0xafba, 0x686, 0x26e0, 0xd05a, 0x21f6, 0x8b8c, 0x1, 0x0);
        gbc.writeMem(0xafba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x686);
        EXPECT(gbc.pc(), 0xafbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafba), 0xcb);
        EXPECT(gbc.readMem(0xafbb), 0xb2);
        // CB B2 0265
        gbc.setState(0x24ce, 0x3b29, 0xebb0, 0x8246, 0xa552, 0x5f2e, 0x0, 0x1);
        gbc.writeMem(0x24ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3b29);
        EXPECT(gbc.pc(), 0x24d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0267
        gbc.setState(0xa0d, 0x6c23, 0x9f0, 0xed7a, 0x783d, 0xcb83, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6c23);
        EXPECT(gbc.pc(), 0xa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0268
        gbc.setState(0x6469, 0xd495, 0x53d0, 0xe734, 0xd6a9, 0x9a9, 0x0, 0x1);
        gbc.writeMem(0x6469, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd495);
        EXPECT(gbc.pc(), 0x646b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0269
        gbc.setState(0xc5f4, 0xac5f, 0x7000, 0x4259, 0xb5b3, 0x110e, 0x1, 0x0);
        gbc.writeMem(0xc5f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xac5f);
        EXPECT(gbc.pc(), 0xc5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f4), 0xcb);
        EXPECT(gbc.readMem(0xc5f5), 0xb2);
        // CB B2 026A
        gbc.setState(0x2f35, 0x4e5e, 0x86c0, 0x63f6, 0x44df, 0xd4ea, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4e5e);
        EXPECT(gbc.pc(), 0x2f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 026B
        gbc.setState(0xa252, 0x5c1a, 0xfcb0, 0xce3, 0x8027, 0xf8f1, 0x0, 0x1);
        gbc.writeMem(0xa252, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5c1a);
        EXPECT(gbc.pc(), 0xa254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa252), 0xcb);
        EXPECT(gbc.readMem(0xa253), 0xb2);
        // CB B2 026D
        gbc.setState(0x76bf, 0x3f1d, 0x61e0, 0x7910, 0xd325, 0x7967, 0x0, 0x0);
        gbc.writeMem(0x76bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3f1d);
        EXPECT(gbc.pc(), 0x76c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 026E
        gbc.setState(0xdf80, 0x7e81, 0x3760, 0x5a14, 0x42f4, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0xdf80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7e81);
        EXPECT(gbc.pc(), 0xdf82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf80), 0xcb);
        EXPECT(gbc.readMem(0xdf81), 0xb2);
        // CB B2 026F
        gbc.setState(0x8c3, 0x7cb2, 0x58a0, 0xd2b2, 0xb855, 0xff48, 0x1, 0x0);
        gbc.writeMem(0x8c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7cb2);
        EXPECT(gbc.pc(), 0x8c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0270
        gbc.setState(0xc9cb, 0x89c, 0xf770, 0xa408, 0x6c02, 0xc44f, 0x0, 0x1);
        gbc.writeMem(0xc9cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x89c);
        EXPECT(gbc.pc(), 0xc9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9cb), 0xcb);
        EXPECT(gbc.readMem(0xc9cc), 0xb2);
        // CB B2 0271
        gbc.setState(0xcbc5, 0xfeeb, 0x2f70, 0xf38e, 0x66d7, 0xf9f, 0x0, 0x1);
        gbc.writeMem(0xcbc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc5), 0xcb);
        EXPECT(gbc.readMem(0xcbc6), 0xb2);
        // CB B2 0273
        gbc.setState(0x8b87, 0xb955, 0xf770, 0x580b, 0x871, 0x42a4, 0x1, 0x1);
        gbc.writeMem(0x8b87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb955);
        EXPECT(gbc.pc(), 0x8b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b87), 0xcb);
        EXPECT(gbc.readMem(0x8b88), 0xb2);
        // CB B2 0274
        gbc.setState(0x350, 0x6cf6, 0x39a0, 0x2bb3, 0xdc4f, 0x7889, 0x1, 0x1);
        gbc.writeMem(0x350, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6cf6);
        EXPECT(gbc.pc(), 0x352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0275
        gbc.setState(0x3b93, 0xba32, 0xe7d0, 0xdd8c, 0x7f10, 0x836b, 0x1, 0x0);
        gbc.writeMem(0x3b93, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xba32);
        EXPECT(gbc.pc(), 0x3b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0276
        gbc.setState(0xd905, 0xa1b8, 0x3070, 0xab69, 0x9c3c, 0x1050, 0x0, 0x1);
        gbc.writeMem(0xd905, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa1b8);
        EXPECT(gbc.pc(), 0xd907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd905), 0xcb);
        EXPECT(gbc.readMem(0xd906), 0xb2);
        // CB B2 0277
        gbc.setState(0xe0b8, 0xc858, 0x5a20, 0xdbaa, 0x1a2e, 0xe380, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc858);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b8), 0xcb);
        EXPECT(gbc.readMem(0xe0b9), 0xb2);
        // CB B2 0278
        gbc.setState(0x4f2e, 0x17e1, 0xa600, 0xdea2, 0x31cd, 0x13f, 0x1, 0x1);
        gbc.writeMem(0x4f2e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x17e1);
        EXPECT(gbc.pc(), 0x4f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0279
        gbc.setState(0x41c1, 0x7662, 0x2af0, 0x18e2, 0x4d83, 0x90f0, 0x1, 0x1);
        gbc.writeMem(0x41c1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7662);
        EXPECT(gbc.pc(), 0x41c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 027A
        gbc.setState(0xa40c, 0x9d40, 0x8260, 0x9e8a, 0x71b8, 0xb0cb, 0x0, 0x0);
        gbc.writeMem(0xa40c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9d40);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40c), 0xcb);
        EXPECT(gbc.readMem(0xa40d), 0xb2);
        // CB B2 027B
        gbc.setState(0x5176, 0x326d, 0x4e50, 0x971b, 0x2d1c, 0x7c7b, 0x1, 0x1);
        gbc.writeMem(0x5176, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x326d);
        EXPECT(gbc.pc(), 0x5178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 027C
        gbc.setState(0xc55f, 0x7c0b, 0x12c0, 0xf117, 0xd6b7, 0xd84b, 0x0, 0x0);
        gbc.writeMem(0xc55f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7c0b);
        EXPECT(gbc.pc(), 0xc561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55f), 0xcb);
        EXPECT(gbc.readMem(0xc560), 0xb2);
        // CB B2 027D
        gbc.setState(0xa125, 0x4f30, 0xde10, 0xeb5d, 0xdee4, 0x909, 0x1, 0x1);
        gbc.writeMem(0xa125, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4f30);
        EXPECT(gbc.pc(), 0xa127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa125), 0xcb);
        EXPECT(gbc.readMem(0xa126), 0xb2);
        // CB B2 027E
        gbc.setState(0x2b00, 0xb123, 0x1040, 0xa5bb, 0xd7bf, 0xf2a3, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb123);
        EXPECT(gbc.pc(), 0x2b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 027F
        gbc.setState(0x421, 0x5962, 0x9ef0, 0x92dd, 0x48c4, 0xa81, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5962);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0280
        gbc.setState(0x5c61, 0xd84a, 0xd8c0, 0x9136, 0xa813, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd84a);
        EXPECT(gbc.pc(), 0x5c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0282
        gbc.setState(0xafd2, 0x3eb6, 0x6100, 0xa66e, 0x46c6, 0x7d6b, 0x0, 0x0);
        gbc.writeMem(0xafd2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3eb6);
        EXPECT(gbc.pc(), 0xafd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd2), 0xcb);
        EXPECT(gbc.readMem(0xafd3), 0xb2);
        // CB B2 0283
        gbc.setState(0x6fea, 0x3d87, 0x1cf0, 0x848d, 0xe715, 0x6b58, 0x1, 0x1);
        gbc.writeMem(0x6fea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3d87);
        EXPECT(gbc.pc(), 0x6fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0284
        gbc.setState(0xc013, 0xf90a, 0x5940, 0x4be6, 0x4a1f, 0x751f, 0x0, 0x0);
        gbc.writeMem(0xc013, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf90a);
        EXPECT(gbc.pc(), 0xc015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc013), 0xcb);
        EXPECT(gbc.readMem(0xc014), 0xb2);
        // CB B2 0285
        gbc.setState(0xb7e7, 0x5a82, 0xe350, 0x2d94, 0xad29, 0xa927, 0x0, 0x1);
        gbc.writeMem(0xb7e7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0xb7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e7), 0xcb);
        EXPECT(gbc.readMem(0xb7e8), 0xb2);
        // CB B2 0286
        gbc.setState(0x9cb3, 0xc6ec, 0xa360, 0x30e0, 0xf1a9, 0xb486, 0x1, 0x0);
        gbc.writeMem(0x9cb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc6ec);
        EXPECT(gbc.pc(), 0x9cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb3), 0xcb);
        EXPECT(gbc.readMem(0x9cb4), 0xb2);
        // CB B2 0287
        gbc.setState(0x5816, 0x6b91, 0x9130, 0x2a9e, 0xf2cc, 0x5f29, 0x0, 0x0);
        gbc.writeMem(0x5816, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6b91);
        EXPECT(gbc.pc(), 0x5818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0288
        gbc.setState(0x60c7, 0x7e58, 0xf6d0, 0xdb9f, 0x237f, 0x1a67, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7e58);
        EXPECT(gbc.pc(), 0x60c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0289
        gbc.setState(0x3106, 0x480b, 0xf00, 0xc5c9, 0x531, 0x8948, 0x1, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x480b);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 028A
        gbc.setState(0x8608, 0x1ae7, 0x6160, 0x33c1, 0x4536, 0x3ce2, 0x1, 0x1);
        gbc.writeMem(0x8608, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1ae7);
        EXPECT(gbc.pc(), 0x860a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8608), 0xcb);
        EXPECT(gbc.readMem(0x8609), 0xb2);
        // CB B2 028B
        gbc.setState(0x8df9, 0x5537, 0xb6b0, 0xfad6, 0xae17, 0x6a5c, 0x1, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0x8dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df9), 0xcb);
        EXPECT(gbc.readMem(0x8dfa), 0xb2);
        // CB B2 028C
        gbc.setState(0x2424, 0xde32, 0x3f90, 0xb71b, 0x86be, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0x2424, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xde32);
        EXPECT(gbc.pc(), 0x2426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 028D
        gbc.setState(0x3f32, 0x632a, 0xe90, 0xd5a1, 0x1c, 0xbb95, 0x1, 0x0);
        gbc.writeMem(0x3f32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x632a);
        EXPECT(gbc.pc(), 0x3f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 028E
        gbc.setState(0x29e8, 0xffc4, 0x2e00, 0x9b89, 0xf5bc, 0x8517, 0x0, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xffc4);
        EXPECT(gbc.pc(), 0x29ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 028F
        gbc.setState(0x6bb3, 0x9af3, 0x34a0, 0x2adb, 0x4525, 0x2279, 0x0, 0x1);
        gbc.writeMem(0x6bb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9af3);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0290
        gbc.setState(0x12ad, 0x9db8, 0x7720, 0x50d9, 0x7ece, 0x3523, 0x1, 0x1);
        gbc.writeMem(0x12ad, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9db8);
        EXPECT(gbc.pc(), 0x12af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0292
        gbc.setState(0x1523, 0xbb28, 0x4660, 0x3233, 0x9171, 0x5f88, 0x1, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbb28);
        EXPECT(gbc.pc(), 0x1525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0293
        gbc.setState(0xd28b, 0x39ef, 0x4a20, 0xee9c, 0x955b, 0xa682, 0x0, 0x1);
        gbc.writeMem(0xd28b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x39ef);
        EXPECT(gbc.pc(), 0xd28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28b), 0xcb);
        EXPECT(gbc.readMem(0xd28c), 0xb2);
        // CB B2 0294
        gbc.setState(0x6cd2, 0x2482, 0x4c90, 0x53bd, 0xff0e, 0x490a, 0x0, 0x1);
        gbc.writeMem(0x6cd2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2482);
        EXPECT(gbc.pc(), 0x6cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0295
        gbc.setState(0xcddb, 0xb15, 0x9950, 0xbab1, 0xc4a8, 0x2249, 0x0, 0x1);
        gbc.writeMem(0xcddb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb15);
        EXPECT(gbc.pc(), 0xcddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcddb), 0xcb);
        EXPECT(gbc.readMem(0xcddc), 0xb2);
        // CB B2 0296
        gbc.setState(0x9fee, 0x96f2, 0xda40, 0xf899, 0x3748, 0x5741, 0x1, 0x1);
        gbc.writeMem(0x9fee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x96f2);
        EXPECT(gbc.pc(), 0x9ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fee), 0xcb);
        EXPECT(gbc.readMem(0x9fef), 0xb2);
        // CB B2 0297
        gbc.setState(0x3af8, 0x25b5, 0xb80, 0x52e3, 0xa032, 0x164e, 0x0, 0x0);
        gbc.writeMem(0x3af8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x25b5);
        EXPECT(gbc.pc(), 0x3afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0298
        gbc.setState(0xd264, 0xd26d, 0x93e0, 0x1c6f, 0xc800, 0x62f1, 0x0, 0x1);
        gbc.writeMem(0xd264, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd26d);
        EXPECT(gbc.pc(), 0xd266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd264), 0xcb);
        EXPECT(gbc.readMem(0xd265), 0xb2);
        // CB B2 0299
        gbc.setState(0xb4de, 0x2e85, 0x49d0, 0xc701, 0x8b4a, 0x5fd0, 0x0, 0x0);
        gbc.writeMem(0xb4de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2e85);
        EXPECT(gbc.pc(), 0xb4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4de), 0xcb);
        EXPECT(gbc.readMem(0xb4df), 0xb2);
        // CB B2 029B
        gbc.setState(0x2bbe, 0xb790, 0x4c70, 0x560, 0xe347, 0x81c4, 0x1, 0x0);
        gbc.writeMem(0x2bbe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb790);
        EXPECT(gbc.pc(), 0x2bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 029C
        gbc.setState(0xa613, 0x3b40, 0xd840, 0xccda, 0x3055, 0xbffe, 0x1, 0x0);
        gbc.writeMem(0xa613, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3b40);
        EXPECT(gbc.pc(), 0xa615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa613), 0xcb);
        EXPECT(gbc.readMem(0xa614), 0xb2);
        // CB B2 029D
        gbc.setState(0x669c, 0x8b7a, 0x9020, 0x6e13, 0x7e6d, 0x76d2, 0x0, 0x1);
        gbc.writeMem(0x669c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8b7a);
        EXPECT(gbc.pc(), 0x669e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 029E
        gbc.setState(0xcd07, 0xe0df, 0x58e0, 0xc9c8, 0xc6e5, 0x33ef, 0x0, 0x1);
        gbc.writeMem(0xcd07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe0df);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0xb2);
        // CB B2 029F
        gbc.setState(0x218d, 0x5812, 0x34f0, 0xa5a5, 0xc455, 0xa015, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5812);
        EXPECT(gbc.pc(), 0x218f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02A0
        gbc.setState(0x1833, 0x198b, 0x5b70, 0x34bb, 0x743, 0x40f, 0x0, 0x0);
        gbc.writeMem(0x1833, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x198b);
        EXPECT(gbc.pc(), 0x1835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02A1
        gbc.setState(0xc27c, 0xd6b7, 0x1f00, 0x5690, 0x7f32, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0xc27c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd6b7);
        EXPECT(gbc.pc(), 0xc27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27c), 0xcb);
        EXPECT(gbc.readMem(0xc27d), 0xb2);
        // CB B2 02A2
        gbc.setState(0x6751, 0xb2a7, 0x7fc0, 0xac2, 0x5ad5, 0xf43a, 0x0, 0x0);
        gbc.writeMem(0x6751, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb2a7);
        EXPECT(gbc.pc(), 0x6753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02A4
        gbc.setState(0xbc7e, 0x8f9b, 0x3090, 0x954b, 0xb30, 0x7007, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8f9b);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7e), 0xcb);
        EXPECT(gbc.readMem(0xbc7f), 0xb2);
        // CB B2 02A5
        gbc.setState(0x9eaf, 0x6f28, 0xd4b0, 0xc741, 0x7351, 0xa9d, 0x0, 0x1);
        gbc.writeMem(0x9eaf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6f28);
        EXPECT(gbc.pc(), 0x9eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eaf), 0xcb);
        EXPECT(gbc.readMem(0x9eb0), 0xb2);
        // CB B2 02A6
        gbc.setState(0x7bac, 0x49c1, 0xe400, 0x68d8, 0xea7a, 0x99dc, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x49c1);
        EXPECT(gbc.pc(), 0x7bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02A8
        gbc.setState(0x5f80, 0x43c9, 0x3340, 0xcfd1, 0xf53c, 0x2d9a, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x43c9);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02A9
        gbc.setState(0x309b, 0xeba0, 0x1040, 0x6ef0, 0xcabe, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x309b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xeba0);
        EXPECT(gbc.pc(), 0x309d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02AA
        gbc.setState(0xd7e4, 0xd2f2, 0x43b0, 0x7886, 0x6f7a, 0xfa56, 0x0, 0x0);
        gbc.writeMem(0xd7e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd2f2);
        EXPECT(gbc.pc(), 0xd7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e4), 0xcb);
        EXPECT(gbc.readMem(0xd7e5), 0xb2);
        // CB B2 02AB
        gbc.setState(0x3c82, 0xc085, 0xd260, 0xfee3, 0x1885, 0x907b, 0x1, 0x1);
        gbc.writeMem(0x3c82, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc085);
        EXPECT(gbc.pc(), 0x3c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02AD
        gbc.setState(0x10cb, 0x2df5, 0x5f00, 0xfab1, 0x29c4, 0xe3bb, 0x1, 0x0);
        gbc.writeMem(0x10cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2df5);
        EXPECT(gbc.pc(), 0x10cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02AE
        gbc.setState(0x4e46, 0x2121, 0xb3b0, 0xe7dd, 0x13cc, 0xf68c, 0x0, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0x4e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02AF
        gbc.setState(0x6e96, 0x265e, 0xcd50, 0xa9cd, 0x6bba, 0x4e81, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x265e);
        EXPECT(gbc.pc(), 0x6e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02B0
        gbc.setState(0x8688, 0x860e, 0xeef0, 0x9a06, 0x6f21, 0xa31d, 0x0, 0x0);
        gbc.writeMem(0x8688, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x860e);
        EXPECT(gbc.pc(), 0x868a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8688), 0xcb);
        EXPECT(gbc.readMem(0x8689), 0xb2);
        // CB B2 02B1
        gbc.setState(0xd6d6, 0x16b7, 0x5cc0, 0xf9a9, 0x46, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0xd6d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0xd6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d6), 0xcb);
        EXPECT(gbc.readMem(0xd6d7), 0xb2);
        // CB B2 02B2
        gbc.setState(0x3eab, 0xedeb, 0xb360, 0xee0e, 0xc569, 0x6eb7, 0x1, 0x0);
        gbc.writeMem(0x3eab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xedeb);
        EXPECT(gbc.pc(), 0x3ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02B3
        gbc.setState(0xde87, 0xb835, 0xefa0, 0xcb7f, 0x1b2b, 0xd86a, 0x0, 0x1);
        gbc.writeMem(0xde87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb835);
        EXPECT(gbc.pc(), 0xde89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde87), 0xcb);
        EXPECT(gbc.readMem(0xde88), 0xb2);
        // CB B2 02B4
        gbc.setState(0xd33d, 0xf329, 0x7850, 0xa78, 0x1b2, 0x58a5, 0x1, 0x1);
        gbc.writeMem(0xd33d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf329);
        EXPECT(gbc.pc(), 0xd33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd33d), 0xcb);
        EXPECT(gbc.readMem(0xd33e), 0xb2);
        // CB B2 02B5
        gbc.setState(0x9228, 0xf60c, 0xe30, 0x72b5, 0x24d9, 0xdbf3, 0x1, 0x1);
        gbc.writeMem(0x9228, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0x922a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9228), 0xcb);
        EXPECT(gbc.readMem(0x9229), 0xb2);
        // CB B2 02B6
        gbc.setState(0x38ea, 0x64a7, 0x5d40, 0x9e48, 0xe187, 0x15b2, 0x1, 0x1);
        gbc.writeMem(0x38ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x64a7);
        EXPECT(gbc.pc(), 0x38ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02B7
        gbc.setState(0x2f13, 0x204f, 0x4e40, 0xa866, 0x90d2, 0x88d2, 0x0, 0x1);
        gbc.writeMem(0x2f13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x204f);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02B8
        gbc.setState(0x253e, 0x41ae, 0x9610, 0x400b, 0x7939, 0xeec6, 0x0, 0x0);
        gbc.writeMem(0x253e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x41ae);
        EXPECT(gbc.pc(), 0x2540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02B9
        gbc.setState(0x591, 0xf365, 0x9200, 0x3642, 0xc99c, 0x7b08, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf365);
        EXPECT(gbc.pc(), 0x593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02BA
        gbc.setState(0x80fb, 0xba73, 0x55e0, 0x67c2, 0xe6b2, 0x41d4, 0x1, 0x0);
        gbc.writeMem(0x80fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xba73);
        EXPECT(gbc.pc(), 0x80fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fb), 0xcb);
        EXPECT(gbc.readMem(0x80fc), 0xb2);
        // CB B2 02BB
        gbc.setState(0xa2c0, 0xfeb8, 0xbdd0, 0x9ae2, 0x1bc4, 0xa9aa, 0x0, 0x1);
        gbc.writeMem(0xa2c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfeb8);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c0), 0xcb);
        EXPECT(gbc.readMem(0xa2c1), 0xb2);
        // CB B2 02BC
        gbc.setState(0x17aa, 0x5ab, 0x9c80, 0x2c3b, 0x9a67, 0xcd8b, 0x1, 0x1);
        gbc.writeMem(0x17aa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5ab);
        EXPECT(gbc.pc(), 0x17ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02BD
        gbc.setState(0x6e91, 0xf7da, 0x9780, 0x89dd, 0x5b3a, 0x2b15, 0x1, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf7da);
        EXPECT(gbc.pc(), 0x6e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02BE
        gbc.setState(0x26ca, 0x5c92, 0x4060, 0x846e, 0xd257, 0x106a, 0x1, 0x1);
        gbc.writeMem(0x26ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5c92);
        EXPECT(gbc.pc(), 0x26cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02BF
        gbc.setState(0xa6fe, 0xe5ba, 0xad00, 0xf911, 0x41b7, 0xcc3b, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0xa700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fe), 0xcb);
        EXPECT(gbc.readMem(0xa6ff), 0xb2);
        // CB B2 02C0
        gbc.setState(0xe269, 0xfac2, 0x8c0, 0xd5a0, 0x9a5f, 0xa654, 0x1, 0x0);
        gbc.writeMem(0xe269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0xe26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe269), 0xcb);
        EXPECT(gbc.readMem(0xe26a), 0xb2);
        // CB B2 02C1
        gbc.setState(0xb050, 0x14b5, 0x5d30, 0x681b, 0xc50b, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0xb050, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0xb052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb050), 0xcb);
        EXPECT(gbc.readMem(0xb051), 0xb2);
        // CB B2 02C2
        gbc.setState(0x8f1d, 0x2bf9, 0xe850, 0xc45c, 0x6c2e, 0x7c38, 0x1, 0x1);
        gbc.writeMem(0x8f1d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2bf9);
        EXPECT(gbc.pc(), 0x8f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1d), 0xcb);
        EXPECT(gbc.readMem(0x8f1e), 0xb2);
        // CB B2 02C3
        gbc.setState(0xcdc9, 0x9bb, 0xd380, 0x924d, 0xbfdd, 0x4b4a, 0x1, 0x1);
        gbc.writeMem(0xcdc9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9bb);
        EXPECT(gbc.pc(), 0xcdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc9), 0xcb);
        EXPECT(gbc.readMem(0xcdca), 0xb2);
        // CB B2 02C4
        gbc.setState(0x39fd, 0xefae, 0xafa0, 0x4ce3, 0x1efd, 0x16b3, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xefae);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02C5
        gbc.setState(0x94af, 0x655f, 0xf240, 0x5ed7, 0xdf62, 0xfd23, 0x0, 0x0);
        gbc.writeMem(0x94af, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x655f);
        EXPECT(gbc.pc(), 0x94b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94af), 0xcb);
        EXPECT(gbc.readMem(0x94b0), 0xb2);
        // CB B2 02C6
        gbc.setState(0x1ca0, 0xe49, 0xb6f0, 0xa800, 0x2026, 0x44cf, 0x1, 0x1);
        gbc.writeMem(0x1ca0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe49);
        EXPECT(gbc.pc(), 0x1ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02C7
        gbc.setState(0x8245, 0xcee0, 0x5190, 0x5105, 0x6833, 0xf2ac, 0x0, 0x0);
        gbc.writeMem(0x8245, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcee0);
        EXPECT(gbc.pc(), 0x8247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8245), 0xcb);
        EXPECT(gbc.readMem(0x8246), 0xb2);
        // CB B2 02C8
        gbc.setState(0x32ca, 0xba08, 0xee30, 0xca30, 0x3545, 0xeff6, 0x0, 0x0);
        gbc.writeMem(0x32ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xba08);
        EXPECT(gbc.pc(), 0x32cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02C9
        gbc.setState(0x8ccb, 0x8d87, 0xab00, 0x5bd9, 0x83ba, 0xd7da, 0x0, 0x0);
        gbc.writeMem(0x8ccb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8d87);
        EXPECT(gbc.pc(), 0x8ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccb), 0xcb);
        EXPECT(gbc.readMem(0x8ccc), 0xb2);
        // CB B2 02CA
        gbc.setState(0x3bb9, 0x2f5, 0x7d0, 0x72e2, 0xffd, 0x5a27, 0x0, 0x1);
        gbc.writeMem(0x3bb9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2f5);
        EXPECT(gbc.pc(), 0x3bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02CB
        gbc.setState(0xe6be, 0x9eef, 0x4370, 0xd4d3, 0xc206, 0xa225, 0x0, 0x0);
        gbc.writeMem(0xe6be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9eef);
        EXPECT(gbc.pc(), 0xe6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6be), 0xcb);
        EXPECT(gbc.readMem(0xe6bf), 0xb2);
        // CB B2 02CC
        gbc.setState(0xd7be, 0x9320, 0x8e80, 0x8582, 0x9f11, 0x61a9, 0x0, 0x1);
        gbc.writeMem(0xd7be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9320);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0xb2);
        // CB B2 02CD
        gbc.setState(0x8c62, 0x125a, 0x5fa0, 0xb84e, 0x397b, 0xaf42, 0x0, 0x0);
        gbc.writeMem(0x8c62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x125a);
        EXPECT(gbc.pc(), 0x8c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c62), 0xcb);
        EXPECT(gbc.readMem(0x8c63), 0xb2);
        // CB B2 02CF
        gbc.setState(0x1ba8, 0xdc19, 0xc980, 0xdb30, 0x682b, 0xa58c, 0x1, 0x1);
        gbc.writeMem(0x1ba8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdc19);
        EXPECT(gbc.pc(), 0x1baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02D0
        gbc.setState(0x4ca5, 0xc5d, 0x90c0, 0xfdf3, 0x6d7d, 0xe7ae, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc5d);
        EXPECT(gbc.pc(), 0x4ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02D1
        gbc.setState(0xc532, 0x279, 0x6940, 0xf70c, 0x1a57, 0x37e, 0x0, 0x1);
        gbc.writeMem(0xc532, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x279);
        EXPECT(gbc.pc(), 0xc534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc532), 0xcb);
        EXPECT(gbc.readMem(0xc533), 0xb2);
        // CB B2 02D2
        gbc.setState(0x8f2b, 0x77e6, 0x7440, 0x4075, 0x7c9b, 0xf0e2, 0x0, 0x0);
        gbc.writeMem(0x8f2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x77e6);
        EXPECT(gbc.pc(), 0x8f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2b), 0xcb);
        EXPECT(gbc.readMem(0x8f2c), 0xb2);
        // CB B2 02D3
        gbc.setState(0xe45a, 0xd449, 0x5850, 0x832, 0x7407, 0x5efe, 0x0, 0x0);
        gbc.writeMem(0xe45a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd449);
        EXPECT(gbc.pc(), 0xe45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45a), 0xcb);
        EXPECT(gbc.readMem(0xe45b), 0xb2);
        // CB B2 02D4
        gbc.setState(0xb0c0, 0xa3b7, 0xf9f0, 0xb7cd, 0xdbb8, 0x200b, 0x0, 0x1);
        gbc.writeMem(0xb0c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa3b7);
        EXPECT(gbc.pc(), 0xb0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c0), 0xcb);
        EXPECT(gbc.readMem(0xb0c1), 0xb2);
        // CB B2 02D5
        gbc.setState(0x64ab, 0x31, 0x20e0, 0x4d6c, 0xea15, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x64ab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0x64ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02D6
        gbc.setState(0x5f67, 0xb316, 0xdc40, 0xb2b2, 0x3e89, 0x1ca5, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb316);
        EXPECT(gbc.pc(), 0x5f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02D7
        gbc.setState(0x8c8a, 0xc27, 0xa220, 0xbc96, 0x3c83, 0x3160, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc27);
        EXPECT(gbc.pc(), 0x8c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8a), 0xcb);
        EXPECT(gbc.readMem(0x8c8b), 0xb2);
        // CB B2 02D8
        gbc.setState(0x5015, 0xaf11, 0xf560, 0x6d5c, 0xff38, 0xa670, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaf11);
        EXPECT(gbc.pc(), 0x5017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02D9
        gbc.setState(0x54cf, 0x48ab, 0x3f50, 0x5839, 0xa601, 0x70c9, 0x1, 0x1);
        gbc.writeMem(0x54cf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x48ab);
        EXPECT(gbc.pc(), 0x54d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02DA
        gbc.setState(0xcb0, 0xcd, 0xbc00, 0xa3dc, 0x15ce, 0xe098, 0x1, 0x1);
        gbc.writeMem(0xcb0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcd);
        EXPECT(gbc.pc(), 0xcb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02DB
        gbc.setState(0xe304, 0xa614, 0xc9a0, 0xb245, 0x6ffe, 0x31a7, 0x0, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa614);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe304), 0xcb);
        EXPECT(gbc.readMem(0xe305), 0xb2);
        // CB B2 02DC
        gbc.setState(0xe68, 0xcf3f, 0xd530, 0xc58a, 0x69a9, 0x6451, 0x0, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcf3f);
        EXPECT(gbc.pc(), 0xe6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02DD
        gbc.setState(0xa40b, 0x6bba, 0xdfd0, 0x12d4, 0xb87c, 0x1f9d, 0x1, 0x0);
        gbc.writeMem(0xa40b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6bba);
        EXPECT(gbc.pc(), 0xa40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40b), 0xcb);
        EXPECT(gbc.readMem(0xa40c), 0xb2);
        // CB B2 02DE
        gbc.setState(0x4862, 0x8bbf, 0xee50, 0x606e, 0x583, 0x17c3, 0x1, 0x1);
        gbc.writeMem(0x4862, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x4864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02DF
        gbc.setState(0x5f28, 0xe5a8, 0x8e0, 0x2cc4, 0x7c79, 0x9c6d, 0x0, 0x1);
        gbc.writeMem(0x5f28, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe5a8);
        EXPECT(gbc.pc(), 0x5f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02E1
        gbc.setState(0xa52f, 0x32dc, 0xa900, 0x8a9b, 0x1a0f, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x32dc);
        EXPECT(gbc.pc(), 0xa531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52f), 0xcb);
        EXPECT(gbc.readMem(0xa530), 0xb2);
        // CB B2 02E2
        gbc.setState(0xad60, 0x8166, 0x2e70, 0xe723, 0xb398, 0xe8b0, 0x1, 0x0);
        gbc.writeMem(0xad60, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8166);
        EXPECT(gbc.pc(), 0xad62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad60), 0xcb);
        EXPECT(gbc.readMem(0xad61), 0xb2);
        // CB B2 02E3
        gbc.setState(0x7fd6, 0x25dd, 0xce80, 0xa220, 0xe7f1, 0x495c, 0x0, 0x1);
        gbc.writeMem(0x7fd6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x25dd);
        EXPECT(gbc.pc(), 0x7fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02E4
        gbc.setState(0x2c80, 0x61bc, 0xf300, 0xafa2, 0x1bc3, 0xf6c3, 0x0, 0x1);
        gbc.writeMem(0x2c80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0x2c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02E5
        gbc.setState(0xad92, 0x2537, 0xaf70, 0x89d, 0xa739, 0x56e5, 0x1, 0x1);
        gbc.writeMem(0xad92, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2537);
        EXPECT(gbc.pc(), 0xad94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad92), 0xcb);
        EXPECT(gbc.readMem(0xad93), 0xb2);
        // CB B2 02E7
        gbc.setState(0xe692, 0x5a04, 0x2750, 0x1fcd, 0xeac, 0x508, 0x0, 0x0);
        gbc.writeMem(0xe692, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5a04);
        EXPECT(gbc.pc(), 0xe694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe692), 0xcb);
        EXPECT(gbc.readMem(0xe693), 0xb2);
        // CB B2 02E8
        gbc.setState(0x5f6e, 0xc20d, 0xbc90, 0x3321, 0x44a6, 0x3c68, 0x1, 0x0);
        gbc.writeMem(0x5f6e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc20d);
        EXPECT(gbc.pc(), 0x5f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02EA
        gbc.setState(0x5f57, 0xc5d5, 0xe820, 0x5de1, 0x2379, 0x2a2d, 0x1, 0x1);
        gbc.writeMem(0x5f57, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc5d5);
        EXPECT(gbc.pc(), 0x5f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02EB
        gbc.setState(0x408d, 0x32a7, 0x5790, 0x525, 0xef3f, 0xea27, 0x0, 0x1);
        gbc.writeMem(0x408d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x32a7);
        EXPECT(gbc.pc(), 0x408f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02EC
        gbc.setState(0x840f, 0x3506, 0x4d20, 0x8f0c, 0xf477, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x840f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3506);
        EXPECT(gbc.pc(), 0x8411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840f), 0xcb);
        EXPECT(gbc.readMem(0x8410), 0xb2);
        // CB B2 02ED
        gbc.setState(0xaa3d, 0x7eb7, 0x9b70, 0xbce8, 0x3c5e, 0xc674, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7eb7);
        EXPECT(gbc.pc(), 0xaa3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3d), 0xcb);
        EXPECT(gbc.readMem(0xaa3e), 0xb2);
        // CB B2 02EE
        gbc.setState(0x17f2, 0x4d5b, 0xb0d0, 0x45a5, 0xba12, 0xae2c, 0x0, 0x0);
        gbc.writeMem(0x17f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4d5b);
        EXPECT(gbc.pc(), 0x17f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02EF
        gbc.setState(0xd1f1, 0xdcf7, 0x8470, 0x2c78, 0xeb5e, 0x4cf0, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0xd1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f1), 0xcb);
        EXPECT(gbc.readMem(0xd1f2), 0xb2);
        // CB B2 02F0
        gbc.setState(0xa50a, 0x6e1b, 0x6e40, 0xa4ff, 0xd19a, 0xc175, 0x0, 0x0);
        gbc.writeMem(0xa50a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6e1b);
        EXPECT(gbc.pc(), 0xa50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50a), 0xcb);
        EXPECT(gbc.readMem(0xa50b), 0xb2);
        // CB B2 02F1
        gbc.setState(0xdfe2, 0x2c1c, 0xbcd0, 0x197d, 0xc69e, 0x16c9, 0x1, 0x0);
        gbc.writeMem(0xdfe2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2c1c);
        EXPECT(gbc.pc(), 0xdfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe2), 0xcb);
        EXPECT(gbc.readMem(0xdfe3), 0xb2);
        // CB B2 02F2
        gbc.setState(0x5722, 0xcebf, 0x8c80, 0x182, 0x4ff9, 0x1389, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcebf);
        EXPECT(gbc.pc(), 0x5724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02F3
        gbc.setState(0xce6c, 0x5704, 0x4550, 0x694d, 0xd80c, 0xf556, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5704);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0xb2);
        // CB B2 02F4
        gbc.setState(0xe298, 0xbb3f, 0xb4d0, 0x4b1e, 0xc45, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0xe298, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbb3f);
        EXPECT(gbc.pc(), 0xe29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe298), 0xcb);
        EXPECT(gbc.readMem(0xe299), 0xb2);
        // CB B2 02F5
        gbc.setState(0xcd39, 0x2d1e, 0xfb20, 0xc526, 0xe620, 0xcb09, 0x0, 0x1);
        gbc.writeMem(0xcd39, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2d1e);
        EXPECT(gbc.pc(), 0xcd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd39), 0xcb);
        EXPECT(gbc.readMem(0xcd3a), 0xb2);
        // CB B2 02F6
        gbc.setState(0xaef1, 0x8abd, 0x6d90, 0x7178, 0x5a8a, 0x18c4, 0x0, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8abd);
        EXPECT(gbc.pc(), 0xaef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef1), 0xcb);
        EXPECT(gbc.readMem(0xaef2), 0xb2);
        // CB B2 02F7
        gbc.setState(0x9f58, 0xb1f9, 0xc350, 0xcd24, 0xc202, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0x9f58, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb1f9);
        EXPECT(gbc.pc(), 0x9f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f58), 0xcb);
        EXPECT(gbc.readMem(0x9f59), 0xb2);
        // CB B2 02F9
        gbc.setState(0x154b, 0x288, 0xd480, 0x28eb, 0x6ef3, 0xc4f1, 0x0, 0x0);
        gbc.writeMem(0x154b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x288);
        EXPECT(gbc.pc(), 0x154d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 02FA
        gbc.setState(0x5112, 0x4bc2, 0xd1f0, 0x8b58, 0xbb6, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x5112, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4bc2);
        EXPECT(gbc.pc(), 0x5114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02FC
        gbc.setState(0x7859, 0xbaad, 0xd010, 0x59b3, 0xd79a, 0x659e, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbaad);
        EXPECT(gbc.pc(), 0x785b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 02FD
        gbc.setState(0x9804, 0x5f37, 0x560, 0xc301, 0xf21, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5f37);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9804), 0xcb);
        EXPECT(gbc.readMem(0x9805), 0xb2);
        // CB B2 02FE
        gbc.setState(0x8824, 0xf5d2, 0xa120, 0x68a2, 0x984b, 0x2e6a, 0x1, 0x0);
        gbc.writeMem(0x8824, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf5d2);
        EXPECT(gbc.pc(), 0x8826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8824), 0xcb);
        EXPECT(gbc.readMem(0x8825), 0xb2);
        // CB B2 0300
        gbc.setState(0x74fe, 0xbc8c, 0xf2f0, 0x59ad, 0xaa2b, 0x98e9, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbc8c);
        EXPECT(gbc.pc(), 0x7500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0301
        gbc.setState(0x255d, 0x3fe8, 0xa0, 0x783c, 0xfa96, 0x16e1, 0x0, 0x0);
        gbc.writeMem(0x255d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3fe8);
        EXPECT(gbc.pc(), 0x255f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0302
        gbc.setState(0xded2, 0x40f3, 0x29f0, 0x228a, 0xd41f, 0x8126, 0x1, 0x1);
        gbc.writeMem(0xded2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x40f3);
        EXPECT(gbc.pc(), 0xded4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded2), 0xcb);
        EXPECT(gbc.readMem(0xded3), 0xb2);
        // CB B2 0303
        gbc.setState(0xaaea, 0x1273, 0x4330, 0x75a6, 0x483f, 0x3a6f, 0x1, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1273);
        EXPECT(gbc.pc(), 0xaaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaea), 0xcb);
        EXPECT(gbc.readMem(0xaaeb), 0xb2);
        // CB B2 0304
        gbc.setState(0x67e4, 0xb465, 0xbae0, 0xae38, 0xfea0, 0x5dce, 0x1, 0x0);
        gbc.writeMem(0x67e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb465);
        EXPECT(gbc.pc(), 0x67e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0305
        gbc.setState(0x8c00, 0x6087, 0x6f80, 0x7eb1, 0xc3b9, 0x40bc, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6087);
        EXPECT(gbc.pc(), 0x8c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c00), 0xcb);
        EXPECT(gbc.readMem(0x8c01), 0xb2);
        // CB B2 0306
        gbc.setState(0x5833, 0xf320, 0xc710, 0x7275, 0x8070, 0xe891, 0x1, 0x1);
        gbc.writeMem(0x5833, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf320);
        EXPECT(gbc.pc(), 0x5835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0307
        gbc.setState(0x425d, 0x36dd, 0x1620, 0x3e8f, 0x7160, 0x443f, 0x0, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x36dd);
        EXPECT(gbc.pc(), 0x425f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0308
        gbc.setState(0x18ec, 0xa663, 0x5a00, 0xb0e3, 0xd0bc, 0xac94, 0x1, 0x0);
        gbc.writeMem(0x18ec, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa663);
        EXPECT(gbc.pc(), 0x18ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0309
        gbc.setState(0x2d08, 0x29d5, 0x52d0, 0xd71d, 0xa2a6, 0xa1fe, 0x0, 0x0);
        gbc.writeMem(0x2d08, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x29d5);
        EXPECT(gbc.pc(), 0x2d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 030A
        gbc.setState(0xeb4e, 0xed7e, 0xe640, 0xc331, 0x412a, 0xeec6, 0x0, 0x0);
        gbc.writeMem(0xeb4e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xed7e);
        EXPECT(gbc.pc(), 0xeb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4e), 0xcb);
        EXPECT(gbc.readMem(0xeb4f), 0xb2);
        // CB B2 030B
        gbc.setState(0xe732, 0x30c3, 0xdd00, 0x57e7, 0x4d1d, 0x7e98, 0x1, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x30c3);
        EXPECT(gbc.pc(), 0xe734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe732), 0xcb);
        EXPECT(gbc.readMem(0xe733), 0xb2);
        // CB B2 030C
        gbc.setState(0xef7d, 0xb747, 0x3200, 0xe2a3, 0x2171, 0x914a, 0x0, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb747);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7d), 0xcb);
        EXPECT(gbc.readMem(0xef7e), 0xb2);
        // CB B2 030D
        gbc.setState(0x6745, 0x23d4, 0xf0b0, 0x9ce3, 0xe9a2, 0x93bb, 0x0, 0x0);
        gbc.writeMem(0x6745, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x23d4);
        EXPECT(gbc.pc(), 0x6747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 030E
        gbc.setState(0x304b, 0xb693, 0x4220, 0xf270, 0xee45, 0xd66f, 0x0, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb693);
        EXPECT(gbc.pc(), 0x304d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 030F
        gbc.setState(0x9170, 0xaef0, 0x2440, 0xf3d5, 0x8f56, 0x765f, 0x0, 0x0);
        gbc.writeMem(0x9170, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaef0);
        EXPECT(gbc.pc(), 0x9172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9170), 0xcb);
        EXPECT(gbc.readMem(0x9171), 0xb2);
        // CB B2 0310
        gbc.setState(0x72db, 0xc07a, 0x100, 0xa4a7, 0xd407, 0x2c7c, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc07a);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0311
        gbc.setState(0xb3cc, 0xe855, 0x2660, 0xdca7, 0x5dc1, 0xbcde, 0x1, 0x1);
        gbc.writeMem(0xb3cc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe855);
        EXPECT(gbc.pc(), 0xb3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cc), 0xcb);
        EXPECT(gbc.readMem(0xb3cd), 0xb2);
        // CB B2 0312
        gbc.setState(0xcfef, 0xdc73, 0xf470, 0x51c2, 0x12c9, 0x8d0a, 0x0, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdc73);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfef), 0xcb);
        EXPECT(gbc.readMem(0xcff0), 0xb2);
        // CB B2 0313
        gbc.setState(0xdd3, 0x9a3c, 0xb260, 0x7574, 0xaa4e, 0x16a5, 0x0, 0x0);
        gbc.writeMem(0xdd3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9a3c);
        EXPECT(gbc.pc(), 0xdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0314
        gbc.setState(0xb713, 0x4dfd, 0x8310, 0xe383, 0xe2b1, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xb713, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4dfd);
        EXPECT(gbc.pc(), 0xb715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb713), 0xcb);
        EXPECT(gbc.readMem(0xb714), 0xb2);
        // CB B2 0315
        gbc.setState(0x2dfe, 0xe9db, 0x6330, 0x2561, 0xf4da, 0x37c1, 0x1, 0x1);
        gbc.writeMem(0x2dfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe9db);
        EXPECT(gbc.pc(), 0x2e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0316
        gbc.setState(0xceaf, 0x7cab, 0xd490, 0x90a9, 0x51ee, 0x5bf3, 0x1, 0x0);
        gbc.writeMem(0xceaf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7cab);
        EXPECT(gbc.pc(), 0xceb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceaf), 0xcb);
        EXPECT(gbc.readMem(0xceb0), 0xb2);
        // CB B2 0317
        gbc.setState(0x8a41, 0x748d, 0x1590, 0x6477, 0xcb89, 0x3542, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x748d);
        EXPECT(gbc.pc(), 0x8a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a41), 0xcb);
        EXPECT(gbc.readMem(0x8a42), 0xb2);
        // CB B2 0318
        gbc.setState(0x10cb, 0xbd8f, 0x7040, 0x20a8, 0xa538, 0xca33, 0x1, 0x1);
        gbc.writeMem(0x10cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0x10cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0319
        gbc.setState(0x3b2b, 0x5959, 0xc990, 0x5348, 0xadd, 0x2334, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5959);
        EXPECT(gbc.pc(), 0x3b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 031A
        gbc.setState(0x5d32, 0xe210, 0x4960, 0x7485, 0xce4e, 0x8b73, 0x0, 0x0);
        gbc.writeMem(0x5d32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe210);
        EXPECT(gbc.pc(), 0x5d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 031B
        gbc.setState(0x73f0, 0x1fde, 0x25e0, 0xb0c7, 0xe603, 0xba7d, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1fde);
        EXPECT(gbc.pc(), 0x73f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 031C
        gbc.setState(0x3485, 0x5cc6, 0x47c0, 0x219, 0xf882, 0xb9e2, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0x3487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 031D
        gbc.setState(0x5474, 0x7670, 0x3ee0, 0xfd2a, 0x74b7, 0x8c2e, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x5476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 031E
        gbc.setState(0xbe03, 0xe40d, 0x5ea0, 0x19e0, 0xd2b0, 0x9ae3, 0x1, 0x1);
        gbc.writeMem(0xbe03, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe40d);
        EXPECT(gbc.pc(), 0xbe05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe03), 0xcb);
        EXPECT(gbc.readMem(0xbe04), 0xb2);
        // CB B2 031F
        gbc.setState(0x4c73, 0x65b2, 0x1340, 0x89a1, 0x3e64, 0x4ca3, 0x1, 0x1);
        gbc.writeMem(0x4c73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x65b2);
        EXPECT(gbc.pc(), 0x4c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0320
        gbc.setState(0xcb38, 0xdb1a, 0x7770, 0xc077, 0x16f2, 0xc708, 0x1, 0x1);
        gbc.writeMem(0xcb38, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdb1a);
        EXPECT(gbc.pc(), 0xcb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb38), 0xcb);
        EXPECT(gbc.readMem(0xcb39), 0xb2);
        // CB B2 0321
        gbc.setState(0xc92b, 0xf83f, 0xc730, 0xd431, 0x137e, 0xa341, 0x0, 0x1);
        gbc.writeMem(0xc92b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf83f);
        EXPECT(gbc.pc(), 0xc92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92b), 0xcb);
        EXPECT(gbc.readMem(0xc92c), 0xb2);
        // CB B2 0322
        gbc.setState(0x6e75, 0x8182, 0x2f90, 0x6cd2, 0xf5b4, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x6e75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8182);
        EXPECT(gbc.pc(), 0x6e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0323
        gbc.setState(0x2ee, 0xa26a, 0xcce0, 0xf139, 0xb7, 0x7887, 0x0, 0x0);
        gbc.writeMem(0x2ee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa26a);
        EXPECT(gbc.pc(), 0x2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0324
        gbc.setState(0x1867, 0x2bef, 0x13b0, 0x6cc1, 0xce15, 0xc78c, 0x0, 0x0);
        gbc.writeMem(0x1867, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2bef);
        EXPECT(gbc.pc(), 0x1869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0325
        gbc.setState(0x70dc, 0x3049, 0x8720, 0x6d52, 0x798, 0x3fb3, 0x0, 0x0);
        gbc.writeMem(0x70dc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3049);
        EXPECT(gbc.pc(), 0x70de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0326
        gbc.setState(0xb2d, 0x7f7e, 0x50b0, 0xcea4, 0xac47, 0x1b5c, 0x0, 0x1);
        gbc.writeMem(0xb2d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7f7e);
        EXPECT(gbc.pc(), 0xb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0327
        gbc.setState(0xa8d8, 0x1d9b, 0x3eb0, 0x97bc, 0x5c49, 0xd47f, 0x0, 0x1);
        gbc.writeMem(0xa8d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1d9b);
        EXPECT(gbc.pc(), 0xa8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d8), 0xcb);
        EXPECT(gbc.readMem(0xa8d9), 0xb2);
        // CB B2 0328
        gbc.setState(0xdf3, 0x117b, 0xf790, 0x238b, 0xb21f, 0x3a16, 0x1, 0x1);
        gbc.writeMem(0xdf3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x117b);
        EXPECT(gbc.pc(), 0xdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0329
        gbc.setState(0x9d62, 0xe2b1, 0x2f90, 0xc0fa, 0x4c7c, 0x9248, 0x1, 0x0);
        gbc.writeMem(0x9d62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe2b1);
        EXPECT(gbc.pc(), 0x9d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d62), 0xcb);
        EXPECT(gbc.readMem(0x9d63), 0xb2);
        // CB B2 032B
        gbc.setState(0xea95, 0x4d4a, 0x9160, 0x4026, 0x983e, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0xea95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4d4a);
        EXPECT(gbc.pc(), 0xea97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea95), 0xcb);
        EXPECT(gbc.readMem(0xea96), 0xb2);
        // CB B2 032C
        gbc.setState(0x2096, 0x9377, 0xd6d0, 0x1ffc, 0xff27, 0xe56, 0x0, 0x1);
        gbc.writeMem(0x2096, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9377);
        EXPECT(gbc.pc(), 0x2098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 032D
        gbc.setState(0x4603, 0x15c9, 0x1d90, 0x6e8f, 0x41fd, 0xad1b, 0x1, 0x0);
        gbc.writeMem(0x4603, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x15c9);
        EXPECT(gbc.pc(), 0x4605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 032F
        gbc.setState(0xa59d, 0xaa6f, 0x350, 0x221, 0x430d, 0x44e8, 0x0, 0x0);
        gbc.writeMem(0xa59d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaa6f);
        EXPECT(gbc.pc(), 0xa59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59d), 0xcb);
        EXPECT(gbc.readMem(0xa59e), 0xb2);
        // CB B2 0331
        gbc.setState(0x15f2, 0xdc5f, 0x3730, 0xd729, 0x927, 0x83ae, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdc5f);
        EXPECT(gbc.pc(), 0x15f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0332
        gbc.setState(0x2b13, 0x4383, 0x4720, 0xcc1d, 0x1787, 0xd5ec, 0x0, 0x0);
        gbc.writeMem(0x2b13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4383);
        EXPECT(gbc.pc(), 0x2b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0333
        gbc.setState(0xa721, 0x6d03, 0x75c0, 0x50de, 0x9ac0, 0x9683, 0x1, 0x1);
        gbc.writeMem(0xa721, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6d03);
        EXPECT(gbc.pc(), 0xa723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa721), 0xcb);
        EXPECT(gbc.readMem(0xa722), 0xb2);
        // CB B2 0334
        gbc.setState(0x35f7, 0xdcc5, 0x6660, 0x60b3, 0x466e, 0x14ef, 0x0, 0x0);
        gbc.writeMem(0x35f7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x35f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0335
        gbc.setState(0x1386, 0x66f0, 0xe6a0, 0xfcec, 0x4db9, 0xedc8, 0x1, 0x1);
        gbc.writeMem(0x1386, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x66f0);
        EXPECT(gbc.pc(), 0x1388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0336
        gbc.setState(0x39a3, 0xab78, 0x2e90, 0x7aa9, 0x954, 0x65d1, 0x1, 0x1);
        gbc.writeMem(0x39a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0x39a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0337
        gbc.setState(0xaa9e, 0x78d1, 0xa5d0, 0xb808, 0xa942, 0xf2d7, 0x0, 0x1);
        gbc.writeMem(0xaa9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x78d1);
        EXPECT(gbc.pc(), 0xaaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9e), 0xcb);
        EXPECT(gbc.readMem(0xaa9f), 0xb2);
        // CB B2 0338
        gbc.setState(0x14e5, 0x3cfd, 0x9af0, 0xb28a, 0x895d, 0x5131, 0x1, 0x0);
        gbc.writeMem(0x14e5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3cfd);
        EXPECT(gbc.pc(), 0x14e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0339
        gbc.setState(0x758a, 0xf5a0, 0xed60, 0x8614, 0x9b5c, 0x9df6, 0x1, 0x0);
        gbc.writeMem(0x758a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf5a0);
        EXPECT(gbc.pc(), 0x758c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 033A
        gbc.setState(0x4d5e, 0x9f9, 0x6150, 0x8325, 0xd0a2, 0xc0b5, 0x0, 0x1);
        gbc.writeMem(0x4d5e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x4d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 033B
        gbc.setState(0x25d2, 0x47ef, 0xc3f0, 0xf3be, 0xd7f5, 0xedc1, 0x1, 0x1);
        gbc.writeMem(0x25d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x47ef);
        EXPECT(gbc.pc(), 0x25d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 033C
        gbc.setState(0x50e3, 0x441e, 0x7170, 0x3a86, 0x5343, 0xee5, 0x0, 0x0);
        gbc.writeMem(0x50e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x441e);
        EXPECT(gbc.pc(), 0x50e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 033D
        gbc.setState(0xe95, 0x6cc, 0x3cf0, 0x33a2, 0x4c88, 0x132f, 0x1, 0x1);
        gbc.writeMem(0xe95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6cc);
        EXPECT(gbc.pc(), 0xe97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 033E
        gbc.setState(0x60e3, 0x7cb8, 0xa790, 0xba89, 0xc36d, 0x69d1, 0x1, 0x0);
        gbc.writeMem(0x60e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7cb8);
        EXPECT(gbc.pc(), 0x60e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 033F
        gbc.setState(0x6662, 0xdaa8, 0x3750, 0xa66b, 0x620c, 0xeb03, 0x0, 0x0);
        gbc.writeMem(0x6662, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdaa8);
        EXPECT(gbc.pc(), 0x6664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0340
        gbc.setState(0xc2b4, 0x8fa0, 0xc230, 0x5d72, 0x4447, 0xe48c, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8fa0);
        EXPECT(gbc.pc(), 0xc2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b4), 0xcb);
        EXPECT(gbc.readMem(0xc2b5), 0xb2);
        // CB B2 0341
        gbc.setState(0x8ce5, 0x59ca, 0x1580, 0xd403, 0xc082, 0xfb35, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x59ca);
        EXPECT(gbc.pc(), 0x8ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce5), 0xcb);
        EXPECT(gbc.readMem(0x8ce6), 0xb2);
        // CB B2 0342
        gbc.setState(0x65de, 0x389f, 0x5ed0, 0xfc92, 0x8c51, 0x41c6, 0x0, 0x0);
        gbc.writeMem(0x65de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x389f);
        EXPECT(gbc.pc(), 0x65e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0343
        gbc.setState(0xa6ae, 0x6c56, 0x1870, 0xdf4, 0x174b, 0xf9c3, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6c56);
        EXPECT(gbc.pc(), 0xa6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ae), 0xcb);
        EXPECT(gbc.readMem(0xa6af), 0xb2);
        // CB B2 0344
        gbc.setState(0x41db, 0x4c9e, 0xfa90, 0x7e92, 0xd569, 0x4ec4, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4c9e);
        EXPECT(gbc.pc(), 0x41dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0345
        gbc.setState(0x18c5, 0x1306, 0x4730, 0xdcba, 0xe557, 0x3efc, 0x0, 0x1);
        gbc.writeMem(0x18c5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1306);
        EXPECT(gbc.pc(), 0x18c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0346
        gbc.setState(0x17fb, 0x1675, 0xdb60, 0xe44e, 0x3eeb, 0xe0c4, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1675);
        EXPECT(gbc.pc(), 0x17fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0347
        gbc.setState(0xc8a8, 0x2838, 0xf7a0, 0x1412, 0x7729, 0x65f, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2838);
        EXPECT(gbc.pc(), 0xc8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a8), 0xcb);
        EXPECT(gbc.readMem(0xc8a9), 0xb2);
        // CB B2 0348
        gbc.setState(0x7c3b, 0xc6ec, 0x2980, 0x7630, 0x53ec, 0xae5c, 0x0, 0x0);
        gbc.writeMem(0x7c3b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc6ec);
        EXPECT(gbc.pc(), 0x7c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0349
        gbc.setState(0xd6e7, 0x5e4b, 0x33a0, 0x3eca, 0x35d7, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5e4b);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e7), 0xcb);
        EXPECT(gbc.readMem(0xd6e8), 0xb2);
        // CB B2 034A
        gbc.setState(0xc4f5, 0xc8fe, 0x9420, 0xb4c8, 0xef00, 0xe7e4, 0x1, 0x0);
        gbc.writeMem(0xc4f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc8fe);
        EXPECT(gbc.pc(), 0xc4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f5), 0xcb);
        EXPECT(gbc.readMem(0xc4f6), 0xb2);
        // CB B2 034B
        gbc.setState(0xa2de, 0x9c1d, 0xa920, 0x4f87, 0x6ab0, 0x91aa, 0x0, 0x1);
        gbc.writeMem(0xa2de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0xa2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2de), 0xcb);
        EXPECT(gbc.readMem(0xa2df), 0xb2);
        // CB B2 034C
        gbc.setState(0x22e9, 0x823c, 0x97a0, 0x83e1, 0x4cd7, 0x2b53, 0x0, 0x0);
        gbc.writeMem(0x22e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x823c);
        EXPECT(gbc.pc(), 0x22eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 034D
        gbc.setState(0x5660, 0xa322, 0x1210, 0xac05, 0x2ead, 0xdf77, 0x0, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa322);
        EXPECT(gbc.pc(), 0x5662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 034E
        gbc.setState(0x7edd, 0xc09b, 0xcc30, 0x12c3, 0xe797, 0xd63a, 0x1, 0x0);
        gbc.writeMem(0x7edd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0x7edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 034F
        gbc.setState(0x3558, 0x3f71, 0x95c0, 0x326a, 0x357c, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x3558, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3f71);
        EXPECT(gbc.pc(), 0x355a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0350
        gbc.setState(0xc8ad, 0x4b50, 0x4fe0, 0xa36b, 0x11a, 0x6e13, 0x1, 0x0);
        gbc.writeMem(0xc8ad, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4b50);
        EXPECT(gbc.pc(), 0xc8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ad), 0xcb);
        EXPECT(gbc.readMem(0xc8ae), 0xb2);
        // CB B2 0351
        gbc.setState(0x9ea1, 0xab06, 0x4070, 0x20eb, 0xc47a, 0x48bb, 0x0, 0x0);
        gbc.writeMem(0x9ea1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xab06);
        EXPECT(gbc.pc(), 0x9ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea1), 0xcb);
        EXPECT(gbc.readMem(0x9ea2), 0xb2);
        // CB B2 0352
        gbc.setState(0xadeb, 0xc3c3, 0xf460, 0x3ae1, 0x6377, 0x4646, 0x0, 0x1);
        gbc.writeMem(0xadeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc3c3);
        EXPECT(gbc.pc(), 0xaded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadeb), 0xcb);
        EXPECT(gbc.readMem(0xadec), 0xb2);
        // CB B2 0353
        gbc.setState(0x39c2, 0x5e38, 0xfa10, 0xd1f2, 0x3b4, 0x1633, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5e38);
        EXPECT(gbc.pc(), 0x39c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0354
        gbc.setState(0x5af, 0x33a9, 0x71c0, 0xf9a2, 0xb5bd, 0xfc69, 0x1, 0x1);
        gbc.writeMem(0x5af, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x33a9);
        EXPECT(gbc.pc(), 0x5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0355
        gbc.setState(0xecbf, 0xb566, 0x5e40, 0xf1d2, 0x97d5, 0x9d2, 0x1, 0x1);
        gbc.writeMem(0xecbf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb566);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbf), 0xcb);
        EXPECT(gbc.readMem(0xecc0), 0xb2);
        // CB B2 0356
        gbc.setState(0x12f5, 0x89ee, 0x51c0, 0xfd51, 0x57a9, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x89ee);
        EXPECT(gbc.pc(), 0x12f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0357
        gbc.setState(0xed0e, 0xa731, 0x86e0, 0x912d, 0xe723, 0xd8ad, 0x1, 0x0);
        gbc.writeMem(0xed0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa731);
        EXPECT(gbc.pc(), 0xed10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0e), 0xcb);
        EXPECT(gbc.readMem(0xed0f), 0xb2);
        // CB B2 0358
        gbc.setState(0x9b0c, 0x630d, 0x81d0, 0x7c24, 0x3da7, 0x567d, 0x1, 0x1);
        gbc.writeMem(0x9b0c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x630d);
        EXPECT(gbc.pc(), 0x9b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0c), 0xcb);
        EXPECT(gbc.readMem(0x9b0d), 0xb2);
        // CB B2 0359
        gbc.setState(0xb1, 0xa181, 0x1a40, 0x90e7, 0x79ba, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0xb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa181);
        EXPECT(gbc.pc(), 0xb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 035A
        gbc.setState(0x5e7d, 0x5ced, 0x9210, 0x9fd2, 0x89a7, 0x1794, 0x1, 0x1);
        gbc.writeMem(0x5e7d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5ced);
        EXPECT(gbc.pc(), 0x5e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 035B
        gbc.setState(0x98eb, 0x5466, 0xfd50, 0x1fb7, 0xdf7b, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x98eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5466);
        EXPECT(gbc.pc(), 0x98ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98eb), 0xcb);
        EXPECT(gbc.readMem(0x98ec), 0xb2);
        // CB B2 035C
        gbc.setState(0xe714, 0x8338, 0x7a00, 0xcf30, 0xa1a8, 0xd02d, 0x1, 0x1);
        gbc.writeMem(0xe714, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8338);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe714), 0xcb);
        EXPECT(gbc.readMem(0xe715), 0xb2);
        // CB B2 035D
        gbc.setState(0x11fb, 0x6bd4, 0x5880, 0xd5a4, 0xc4d9, 0x131f, 0x1, 0x0);
        gbc.writeMem(0x11fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6bd4);
        EXPECT(gbc.pc(), 0x11fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 035E
        gbc.setState(0x3157, 0x999d, 0xf9e0, 0xf683, 0x50b1, 0x426d, 0x1, 0x1);
        gbc.writeMem(0x3157, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x999d);
        EXPECT(gbc.pc(), 0x3159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 035F
        gbc.setState(0x7670, 0xa7a0, 0xfd40, 0x9fb2, 0xe661, 0xe538, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa7a0);
        EXPECT(gbc.pc(), 0x7672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0360
        gbc.setState(0x4258, 0x40d0, 0x5960, 0x69d0, 0x6429, 0x338d, 0x1, 0x0);
        gbc.writeMem(0x4258, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x40d0);
        EXPECT(gbc.pc(), 0x425a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0361
        gbc.setState(0xa803, 0xb87c, 0xe000, 0x26ac, 0x79c7, 0x8dd4, 0x1, 0x0);
        gbc.writeMem(0xa803, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb87c);
        EXPECT(gbc.pc(), 0xa805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa803), 0xcb);
        EXPECT(gbc.readMem(0xa804), 0xb2);
        // CB B2 0362
        gbc.setState(0xe3a1, 0x5684, 0xcfa0, 0x5ab4, 0x838b, 0x1d7c, 0x1, 0x1);
        gbc.writeMem(0xe3a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5684);
        EXPECT(gbc.pc(), 0xe3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a1), 0xcb);
        EXPECT(gbc.readMem(0xe3a2), 0xb2);
        // CB B2 0363
        gbc.setState(0x2570, 0x7499, 0xb520, 0xb876, 0xe2b9, 0x8f63, 0x0, 0x0);
        gbc.writeMem(0x2570, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0364
        gbc.setState(0x726d, 0xb104, 0x26b0, 0xa21b, 0xa1e1, 0x133f, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb104);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0365
        gbc.setState(0xac7f, 0xe2cc, 0x9800, 0x70a5, 0xeae6, 0x5669, 0x0, 0x0);
        gbc.writeMem(0xac7f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe2cc);
        EXPECT(gbc.pc(), 0xac81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7f), 0xcb);
        EXPECT(gbc.readMem(0xac80), 0xb2);
        // CB B2 0366
        gbc.setState(0xa2d5, 0x7d15, 0x580, 0x3deb, 0x4013, 0xb6b7, 0x1, 0x0);
        gbc.writeMem(0xa2d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0xa2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d5), 0xcb);
        EXPECT(gbc.readMem(0xa2d6), 0xb2);
        // CB B2 0367
        gbc.setState(0x487b, 0x473, 0x10b0, 0xfc2b, 0xb5a, 0xc2b2, 0x1, 0x1);
        gbc.writeMem(0x487b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x487d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0368
        gbc.setState(0x5867, 0x9304, 0x5a50, 0xfcbd, 0x565a, 0xf817, 0x1, 0x1);
        gbc.writeMem(0x5867, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9304);
        EXPECT(gbc.pc(), 0x5869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0369
        gbc.setState(0xa37f, 0xa8bb, 0xccf0, 0xf8a, 0xdee2, 0x92d2, 0x1, 0x0);
        gbc.writeMem(0xa37f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa8bb);
        EXPECT(gbc.pc(), 0xa381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37f), 0xcb);
        EXPECT(gbc.readMem(0xa380), 0xb2);
        // CB B2 036A
        gbc.setState(0xd9c0, 0xa5f2, 0xb760, 0x772c, 0xa3d9, 0x47e0, 0x0, 0x1);
        gbc.writeMem(0xd9c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa5f2);
        EXPECT(gbc.pc(), 0xd9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c0), 0xcb);
        EXPECT(gbc.readMem(0xd9c1), 0xb2);
        // CB B2 036B
        gbc.setState(0x94e9, 0x76b0, 0xc970, 0xfe67, 0xfcbb, 0x36a5, 0x1, 0x0);
        gbc.writeMem(0x94e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0x94eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e9), 0xcb);
        EXPECT(gbc.readMem(0x94ea), 0xb2);
        // CB B2 036C
        gbc.setState(0xac6c, 0x29bd, 0x3940, 0x7eeb, 0xde0a, 0x888e, 0x1, 0x1);
        gbc.writeMem(0xac6c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x29bd);
        EXPECT(gbc.pc(), 0xac6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac6c), 0xcb);
        EXPECT(gbc.readMem(0xac6d), 0xb2);
        // CB B2 036D
        gbc.setState(0xd906, 0xa4b9, 0xaf10, 0x1a1f, 0x9d88, 0x8067, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa4b9);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd906), 0xcb);
        EXPECT(gbc.readMem(0xd907), 0xb2);
        // CB B2 036E
        gbc.setState(0x54c5, 0xc20a, 0x5030, 0x4410, 0xd3c3, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x54c5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc20a);
        EXPECT(gbc.pc(), 0x54c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 036F
        gbc.setState(0xafb7, 0x915e, 0x8f0, 0x67d3, 0x460e, 0x672f, 0x1, 0x1);
        gbc.writeMem(0xafb7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x915e);
        EXPECT(gbc.pc(), 0xafb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb7), 0xcb);
        EXPECT(gbc.readMem(0xafb8), 0xb2);
        // CB B2 0370
        gbc.setState(0x6191, 0xf232, 0xc070, 0x3237, 0xea51, 0x890c, 0x1, 0x0);
        gbc.writeMem(0x6191, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf232);
        EXPECT(gbc.pc(), 0x6193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0371
        gbc.setState(0xc4b0, 0x8a87, 0x7880, 0x825e, 0x710f, 0x1807, 0x0, 0x1);
        gbc.writeMem(0xc4b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8a87);
        EXPECT(gbc.pc(), 0xc4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b0), 0xcb);
        EXPECT(gbc.readMem(0xc4b1), 0xb2);
        // CB B2 0372
        gbc.setState(0xc047, 0x350a, 0x570, 0x7a1c, 0x80d7, 0xf9e8, 0x1, 0x0);
        gbc.writeMem(0xc047, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x350a);
        EXPECT(gbc.pc(), 0xc049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc047), 0xcb);
        EXPECT(gbc.readMem(0xc048), 0xb2);
        // CB B2 0373
        gbc.setState(0xfe, 0xeb5c, 0xef80, 0xbf77, 0xd31e, 0x5a16, 0x0, 0x0);
        gbc.writeMem(0xfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeb5c);
        EXPECT(gbc.pc(), 0x100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0374
        gbc.setState(0x5236, 0x1f0, 0xa2a0, 0x7236, 0x4589, 0x3345, 0x1, 0x1);
        gbc.writeMem(0x5236, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1f0);
        EXPECT(gbc.pc(), 0x5238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0375
        gbc.setState(0x3394, 0x63ba, 0x4970, 0xc0e1, 0xff38, 0xd586, 0x0, 0x1);
        gbc.writeMem(0x3394, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x63ba);
        EXPECT(gbc.pc(), 0x3396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0377
        gbc.setState(0x7a90, 0x3ac9, 0xcfe0, 0xaa3a, 0x41f8, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x7a90, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3ac9);
        EXPECT(gbc.pc(), 0x7a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0378
        gbc.setState(0x867c, 0x39f4, 0xdb60, 0x6c63, 0xf68d, 0xfa9f, 0x1, 0x1);
        gbc.writeMem(0x867c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x39f4);
        EXPECT(gbc.pc(), 0x867e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867c), 0xcb);
        EXPECT(gbc.readMem(0x867d), 0xb2);
        // CB B2 0379
        gbc.setState(0xcc9e, 0x52fd, 0xd9f0, 0x6b2e, 0x2f7e, 0x9177, 0x0, 0x0);
        gbc.writeMem(0xcc9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x52fd);
        EXPECT(gbc.pc(), 0xcca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9e), 0xcb);
        EXPECT(gbc.readMem(0xcc9f), 0xb2);
        // CB B2 037A
        gbc.setState(0xae4b, 0xe30a, 0x1c70, 0xc83c, 0x60e6, 0x9169, 0x0, 0x0);
        gbc.writeMem(0xae4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe30a);
        EXPECT(gbc.pc(), 0xae4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4b), 0xcb);
        EXPECT(gbc.readMem(0xae4c), 0xb2);
        // CB B2 037B
        gbc.setState(0x8a0a, 0x3825, 0x70d0, 0xbddc, 0x4fc, 0xf21d, 0x0, 0x1);
        gbc.writeMem(0x8a0a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3825);
        EXPECT(gbc.pc(), 0x8a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0a), 0xcb);
        EXPECT(gbc.readMem(0x8a0b), 0xb2);
        // CB B2 037D
        gbc.setState(0xdf91, 0x4b9d, 0xb810, 0x783, 0x1c7a, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0xdf91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4b9d);
        EXPECT(gbc.pc(), 0xdf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf91), 0xcb);
        EXPECT(gbc.readMem(0xdf92), 0xb2);
        // CB B2 037F
        gbc.setState(0x16c, 0x6db0, 0x99d0, 0x6768, 0xec73, 0x595e, 0x1, 0x1);
        gbc.writeMem(0x16c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6db0);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0380
        gbc.setState(0xcaf4, 0xb46d, 0x2c90, 0x50d6, 0xb620, 0x3d34, 0x1, 0x1);
        gbc.writeMem(0xcaf4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb46d);
        EXPECT(gbc.pc(), 0xcaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf4), 0xcb);
        EXPECT(gbc.readMem(0xcaf5), 0xb2);
        // CB B2 0381
        gbc.setState(0x127f, 0x8e0d, 0x8b30, 0x72bc, 0xe53, 0xc913, 0x1, 0x0);
        gbc.writeMem(0x127f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8e0d);
        EXPECT(gbc.pc(), 0x1281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0382
        gbc.setState(0x3f6a, 0x615a, 0x3400, 0xee27, 0x163f, 0x49be, 0x1, 0x1);
        gbc.writeMem(0x3f6a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x615a);
        EXPECT(gbc.pc(), 0x3f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0383
        gbc.setState(0xa3e2, 0xe13f, 0x4580, 0x15f2, 0x73c8, 0xa779, 0x1, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe13f);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e2), 0xcb);
        EXPECT(gbc.readMem(0xa3e3), 0xb2);
        // CB B2 0384
        gbc.setState(0x7602, 0xca4b, 0x3b90, 0x7eb0, 0xc31, 0xc495, 0x1, 0x0);
        gbc.writeMem(0x7602, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xca4b);
        EXPECT(gbc.pc(), 0x7604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0385
        gbc.setState(0x907d, 0xa102, 0x3f00, 0x598a, 0x8d, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0x907d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa102);
        EXPECT(gbc.pc(), 0x907f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907d), 0xcb);
        EXPECT(gbc.readMem(0x907e), 0xb2);
        // CB B2 0386
        gbc.setState(0xda58, 0x529d, 0x3b0, 0xe2e3, 0x7f43, 0x6d74, 0x1, 0x1);
        gbc.writeMem(0xda58, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x529d);
        EXPECT(gbc.pc(), 0xda5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda58), 0xcb);
        EXPECT(gbc.readMem(0xda59), 0xb2);
        // CB B2 0387
        gbc.setState(0x99bb, 0x26da, 0x4e10, 0xfc45, 0x9765, 0x5f0a, 0x1, 0x0);
        gbc.writeMem(0x99bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0x99bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bb), 0xcb);
        EXPECT(gbc.readMem(0x99bc), 0xb2);
        // CB B2 0388
        gbc.setState(0xe5b, 0x8f33, 0xce40, 0xd180, 0x5af1, 0x4d62, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8f33);
        EXPECT(gbc.pc(), 0xe5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0389
        gbc.setState(0xdb32, 0x4053, 0x2fd0, 0x4221, 0xdc6f, 0xcc4, 0x0, 0x1);
        gbc.writeMem(0xdb32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4053);
        EXPECT(gbc.pc(), 0xdb34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb32), 0xcb);
        EXPECT(gbc.readMem(0xdb33), 0xb2);
        // CB B2 038A
        gbc.setState(0x65d8, 0x1358, 0x28d0, 0xf60e, 0xb421, 0x7e76, 0x1, 0x0);
        gbc.writeMem(0x65d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0x65da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 038B
        gbc.setState(0x6332, 0xf994, 0x510, 0xd4a, 0x7616, 0xe032, 0x0, 0x1);
        gbc.writeMem(0x6332, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf994);
        EXPECT(gbc.pc(), 0x6334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 038C
        gbc.setState(0x4b46, 0x5dca, 0xf640, 0x8799, 0xc889, 0x171e, 0x1, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5dca);
        EXPECT(gbc.pc(), 0x4b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 038D
        gbc.setState(0x9866, 0x6da7, 0x21c0, 0x71f0, 0xf30d, 0xbf38, 0x1, 0x0);
        gbc.writeMem(0x9866, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6da7);
        EXPECT(gbc.pc(), 0x9868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9866), 0xcb);
        EXPECT(gbc.readMem(0x9867), 0xb2);
        // CB B2 038E
        gbc.setState(0xca63, 0x97ea, 0x7d40, 0xeb05, 0xcc9f, 0xde0a, 0x0, 0x1);
        gbc.writeMem(0xca63, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x97ea);
        EXPECT(gbc.pc(), 0xca65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca63), 0xcb);
        EXPECT(gbc.readMem(0xca64), 0xb2);
        // CB B2 038F
        gbc.setState(0x75ba, 0x9a80, 0x4f30, 0xa26f, 0x952e, 0x38c, 0x0, 0x1);
        gbc.writeMem(0x75ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9a80);
        EXPECT(gbc.pc(), 0x75bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0390
        gbc.setState(0x770d, 0x688d, 0x3630, 0x801a, 0x45dd, 0xcf5e, 0x0, 0x0);
        gbc.writeMem(0x770d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x688d);
        EXPECT(gbc.pc(), 0x770f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0391
        gbc.setState(0x9c20, 0x29fa, 0xe3d0, 0xeb9e, 0xfe3d, 0x3b37, 0x1, 0x1);
        gbc.writeMem(0x9c20, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x29fa);
        EXPECT(gbc.pc(), 0x9c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c20), 0xcb);
        EXPECT(gbc.readMem(0x9c21), 0xb2);
        // CB B2 0392
        gbc.setState(0x160a, 0x9fa1, 0xacb0, 0x59fa, 0xb381, 0x83ea, 0x0, 0x0);
        gbc.writeMem(0x160a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9fa1);
        EXPECT(gbc.pc(), 0x160c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0393
        gbc.setState(0x8fc5, 0x53c7, 0x9960, 0xf200, 0x50d3, 0xaf6, 0x0, 0x0);
        gbc.writeMem(0x8fc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x53c7);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc5), 0xcb);
        EXPECT(gbc.readMem(0x8fc6), 0xb2);
        // CB B2 0395
        gbc.setState(0xb808, 0xea8a, 0xe5c0, 0xe6c1, 0x68b1, 0x5d83, 0x1, 0x1);
        gbc.writeMem(0xb808, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xea8a);
        EXPECT(gbc.pc(), 0xb80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb808), 0xcb);
        EXPECT(gbc.readMem(0xb809), 0xb2);
        // CB B2 0396
        gbc.setState(0x3569, 0x8ea3, 0xf2f0, 0xa4b3, 0x6bb, 0xade8, 0x1, 0x1);
        gbc.writeMem(0x3569, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8ea3);
        EXPECT(gbc.pc(), 0x356b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0397
        gbc.setState(0x44fe, 0x54d6, 0x75d0, 0xe779, 0xea8d, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x44fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x54d6);
        EXPECT(gbc.pc(), 0x4500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 0398
        gbc.setState(0x1a21, 0xe87f, 0xa180, 0x41ea, 0x62e6, 0xb0f9, 0x0, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe87f);
        EXPECT(gbc.pc(), 0x1a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 0399
        gbc.setState(0xc079, 0xd1c8, 0x94c0, 0x840, 0xc140, 0xafd, 0x1, 0x0);
        gbc.writeMem(0xc079, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd1c8);
        EXPECT(gbc.pc(), 0xc07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc079), 0xcb);
        EXPECT(gbc.readMem(0xc07a), 0xb2);
        // CB B2 039A
        gbc.setState(0xafb2, 0x3d16, 0x8220, 0x51d7, 0x13f2, 0xc5ff, 0x0, 0x1);
        gbc.writeMem(0xafb2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3d16);
        EXPECT(gbc.pc(), 0xafb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb2), 0xcb);
        EXPECT(gbc.readMem(0xafb3), 0xb2);
        // CB B2 039B
        gbc.setState(0x1e0, 0x393, 0xa560, 0x1af7, 0x38ad, 0xb55a, 0x1, 0x0);
        gbc.writeMem(0x1e0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x393);
        EXPECT(gbc.pc(), 0x1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 039C
        gbc.setState(0xd4d2, 0x1e4b, 0x8950, 0x174a, 0x2a33, 0x4b24, 0x1, 0x0);
        gbc.writeMem(0xd4d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1e4b);
        EXPECT(gbc.pc(), 0xd4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d2), 0xcb);
        EXPECT(gbc.readMem(0xd4d3), 0xb2);
        // CB B2 039D
        gbc.setState(0xe1b5, 0xd2d6, 0xfc30, 0x4f92, 0x4ade, 0x59f2, 0x1, 0x0);
        gbc.writeMem(0xe1b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd2d6);
        EXPECT(gbc.pc(), 0xe1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b5), 0xcb);
        EXPECT(gbc.readMem(0xe1b6), 0xb2);
        // CB B2 039E
        gbc.setState(0xd88e, 0xe50d, 0x7260, 0x490a, 0xe5b9, 0xa91a, 0x0, 0x1);
        gbc.writeMem(0xd88e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0xd890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88e), 0xcb);
        EXPECT(gbc.readMem(0xd88f), 0xb2);
        // CB B2 039F
        gbc.setState(0x4b21, 0x16ed, 0x25e0, 0x2b92, 0xb6a7, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0x4b21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x16ed);
        EXPECT(gbc.pc(), 0x4b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03A0
        gbc.setState(0x3f46, 0xe0e5, 0xc120, 0xde4a, 0xbbea, 0x5a0e, 0x1, 0x0);
        gbc.writeMem(0x3f46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe0e5);
        EXPECT(gbc.pc(), 0x3f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03A1
        gbc.setState(0x6c5f, 0x7386, 0xb810, 0x9961, 0x5c55, 0xe15a, 0x0, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7386);
        EXPECT(gbc.pc(), 0x6c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03A2
        gbc.setState(0xaecf, 0x5139, 0x6700, 0xf5c8, 0xc07, 0xb8d, 0x0, 0x0);
        gbc.writeMem(0xaecf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0xaed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecf), 0xcb);
        EXPECT(gbc.readMem(0xaed0), 0xb2);
        // CB B2 03A3
        gbc.setState(0x67de, 0x6fbe, 0xc540, 0xb48c, 0x5be5, 0xdde1, 0x0, 0x1);
        gbc.writeMem(0x67de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6fbe);
        EXPECT(gbc.pc(), 0x67e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03A4
        gbc.setState(0x244f, 0x606b, 0xd4a0, 0xfce4, 0xdae0, 0x9965, 0x0, 0x0);
        gbc.writeMem(0x244f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0x2451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03A5
        gbc.setState(0xdfc9, 0xcdb6, 0xd560, 0x465, 0xf881, 0x561a, 0x1, 0x0);
        gbc.writeMem(0xdfc9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcdb6);
        EXPECT(gbc.pc(), 0xdfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc9), 0xcb);
        EXPECT(gbc.readMem(0xdfca), 0xb2);
        // CB B2 03A6
        gbc.setState(0x2e0d, 0x64d3, 0xcd10, 0xcc6a, 0x544d, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x64d3);
        EXPECT(gbc.pc(), 0x2e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03A7
        gbc.setState(0x9142, 0x6154, 0x56f0, 0x2867, 0x2852, 0xe20b, 0x1, 0x0);
        gbc.writeMem(0x9142, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6154);
        EXPECT(gbc.pc(), 0x9144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9142), 0xcb);
        EXPECT(gbc.readMem(0x9143), 0xb2);
        // CB B2 03A8
        gbc.setState(0xd07e, 0x8f08, 0x5930, 0xb2ee, 0xc249, 0x1a58, 0x0, 0x1);
        gbc.writeMem(0xd07e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8f08);
        EXPECT(gbc.pc(), 0xd080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07e), 0xcb);
        EXPECT(gbc.readMem(0xd07f), 0xb2);
        // CB B2 03A9
        gbc.setState(0xefd, 0xfc54, 0xa3f0, 0x3891, 0x3da0, 0xa59a, 0x1, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0xeff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03AA
        gbc.setState(0x5d73, 0xabe5, 0x8350, 0x6978, 0x1120, 0xc60b, 0x0, 0x0);
        gbc.writeMem(0x5d73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xabe5);
        EXPECT(gbc.pc(), 0x5d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03AB
        gbc.setState(0x5718, 0x7cf, 0xd750, 0xdec9, 0x478, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x5718, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7cf);
        EXPECT(gbc.pc(), 0x571a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03AC
        gbc.setState(0xb40c, 0xc0c1, 0x5040, 0x926b, 0x6327, 0x21bc, 0x1, 0x0);
        gbc.writeMem(0xb40c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc0c1);
        EXPECT(gbc.pc(), 0xb40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40c), 0xcb);
        EXPECT(gbc.readMem(0xb40d), 0xb2);
        // CB B2 03AD
        gbc.setState(0xe08b, 0x3d28, 0x2e90, 0x5526, 0x1b1e, 0xed6d, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3d28);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08b), 0xcb);
        EXPECT(gbc.readMem(0xe08c), 0xb2);
        // CB B2 03AE
        gbc.setState(0xdd89, 0xcbc, 0x78c0, 0xda7e, 0x8202, 0xe4ef, 0x0, 0x0);
        gbc.writeMem(0xdd89, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcbc);
        EXPECT(gbc.pc(), 0xdd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd89), 0xcb);
        EXPECT(gbc.readMem(0xdd8a), 0xb2);
        // CB B2 03AF
        gbc.setState(0x98da, 0xa71e, 0xebb0, 0x480c, 0x8d77, 0x78e3, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa71e);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98da), 0xcb);
        EXPECT(gbc.readMem(0x98db), 0xb2);
        // CB B2 03B0
        gbc.setState(0xa3ca, 0xae3e, 0x7ef0, 0x67a7, 0x664e, 0xda2, 0x0, 0x0);
        gbc.writeMem(0xa3ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xae3e);
        EXPECT(gbc.pc(), 0xa3cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ca), 0xcb);
        EXPECT(gbc.readMem(0xa3cb), 0xb2);
        // CB B2 03B1
        gbc.setState(0x2f04, 0xc743, 0x9710, 0xe173, 0xffe, 0xfb9, 0x1, 0x0);
        gbc.writeMem(0x2f04, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc743);
        EXPECT(gbc.pc(), 0x2f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03B2
        gbc.setState(0x7da2, 0x503a, 0xa90, 0x51e2, 0xb3e8, 0x8fac, 0x0, 0x0);
        gbc.writeMem(0x7da2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x503a);
        EXPECT(gbc.pc(), 0x7da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03B3
        gbc.setState(0x59b7, 0x8185, 0xcf40, 0x24f5, 0x48cf, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x59b7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8185);
        EXPECT(gbc.pc(), 0x59b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03B4
        gbc.setState(0x8ddf, 0x5c33, 0x4c80, 0xe756, 0xea0e, 0xb726, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0x8de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddf), 0xcb);
        EXPECT(gbc.readMem(0x8de0), 0xb2);
        // CB B2 03B5
        gbc.setState(0xb772, 0x4fd4, 0xcd0, 0xc53, 0xbd5e, 0xfb39, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4fd4);
        EXPECT(gbc.pc(), 0xb774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb772), 0xcb);
        EXPECT(gbc.readMem(0xb773), 0xb2);
        // CB B2 03B6
        gbc.setState(0x69c6, 0xf0d1, 0x6430, 0xa292, 0xeb6d, 0x4b8e, 0x1, 0x1);
        gbc.writeMem(0x69c6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf0d1);
        EXPECT(gbc.pc(), 0x69c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03B8
        gbc.setState(0x8e0f, 0x87bd, 0x5550, 0xa580, 0xcbd1, 0x3739, 0x0, 0x0);
        gbc.writeMem(0x8e0f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x87bd);
        EXPECT(gbc.pc(), 0x8e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0f), 0xcb);
        EXPECT(gbc.readMem(0x8e10), 0xb2);
        // CB B2 03BA
        gbc.setState(0xb743, 0x4944, 0x8ec0, 0x4357, 0xfbda, 0x309b, 0x1, 0x0);
        gbc.writeMem(0xb743, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4944);
        EXPECT(gbc.pc(), 0xb745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb743), 0xcb);
        EXPECT(gbc.readMem(0xb744), 0xb2);
        // CB B2 03BB
        gbc.setState(0xe9ce, 0x8ba, 0x22f0, 0xc05d, 0x9fe2, 0x6a18, 0x0, 0x0);
        gbc.writeMem(0xe9ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8ba);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0xb2);
        // CB B2 03BC
        gbc.setState(0xee9e, 0xe902, 0x7fd0, 0xf15, 0xe683, 0xddef, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9e), 0xcb);
        EXPECT(gbc.readMem(0xee9f), 0xb2);
        // CB B2 03BD
        gbc.setState(0x556e, 0xa696, 0x39d0, 0xed36, 0x3f63, 0xcfd7, 0x1, 0x1);
        gbc.writeMem(0x556e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa696);
        EXPECT(gbc.pc(), 0x5570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03BE
        gbc.setState(0x8e16, 0x9c05, 0x7fe0, 0x7b96, 0xbc39, 0x756d, 0x1, 0x0);
        gbc.writeMem(0x8e16, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9c05);
        EXPECT(gbc.pc(), 0x8e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e16), 0xcb);
        EXPECT(gbc.readMem(0x8e17), 0xb2);
        // CB B2 03BF
        gbc.setState(0xe7cd, 0xd264, 0x10a0, 0x8298, 0xd4e3, 0x12ff, 0x1, 0x1);
        gbc.writeMem(0xe7cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd264);
        EXPECT(gbc.pc(), 0xe7cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7cd), 0xcb);
        EXPECT(gbc.readMem(0xe7ce), 0xb2);
        // CB B2 03C0
        gbc.setState(0xb412, 0xe6ea, 0x4f20, 0xec5f, 0x4932, 0xfe96, 0x0, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe6ea);
        EXPECT(gbc.pc(), 0xb414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb412), 0xcb);
        EXPECT(gbc.readMem(0xb413), 0xb2);
        // CB B2 03C1
        gbc.setState(0x5d8f, 0xf99b, 0x5170, 0xa4, 0x5205, 0xfa93, 0x0, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03C2
        gbc.setState(0xbe50, 0xd841, 0x4330, 0x8e33, 0x6486, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0xbe50, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd841);
        EXPECT(gbc.pc(), 0xbe52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe50), 0xcb);
        EXPECT(gbc.readMem(0xbe51), 0xb2);
        // CB B2 03C3
        gbc.setState(0x5eeb, 0x5bfe, 0xa6c0, 0xfb05, 0x84c3, 0x66d5, 0x1, 0x0);
        gbc.writeMem(0x5eeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5bfe);
        EXPECT(gbc.pc(), 0x5eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03C4
        gbc.setState(0xc117, 0x7d8, 0x5c40, 0x33d0, 0xe55e, 0x14fb, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7d8);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc117), 0xcb);
        EXPECT(gbc.readMem(0xc118), 0xb2);
        // CB B2 03C5
        gbc.setState(0xdf71, 0x3e4e, 0x7df0, 0x8e1c, 0x9cf, 0xf24e, 0x0, 0x1);
        gbc.writeMem(0xdf71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3e4e);
        EXPECT(gbc.pc(), 0xdf73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf71), 0xcb);
        EXPECT(gbc.readMem(0xdf72), 0xb2);
        // CB B2 03C6
        gbc.setState(0xa0fb, 0xe4c, 0x91f0, 0xe1aa, 0x3418, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe4c);
        EXPECT(gbc.pc(), 0xa0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fb), 0xcb);
        EXPECT(gbc.readMem(0xa0fc), 0xb2);
        // CB B2 03C7
        gbc.setState(0x6846, 0x251, 0x1870, 0x5286, 0x4b9d, 0x380c, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x251);
        EXPECT(gbc.pc(), 0x6848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03C9
        gbc.setState(0xdccd, 0x4347, 0x3800, 0x6667, 0x4d2, 0x89bf, 0x1, 0x0);
        gbc.writeMem(0xdccd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4347);
        EXPECT(gbc.pc(), 0xdccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccd), 0xcb);
        EXPECT(gbc.readMem(0xdcce), 0xb2);
        // CB B2 03CA
        gbc.setState(0x34e4, 0xb91f, 0x7fb0, 0x6b95, 0x678f, 0x315f, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb91f);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03CB
        gbc.setState(0xaca4, 0xf056, 0x9b50, 0x1e78, 0xb988, 0xf85, 0x1, 0x0);
        gbc.writeMem(0xaca4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf056);
        EXPECT(gbc.pc(), 0xaca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca4), 0xcb);
        EXPECT(gbc.readMem(0xaca5), 0xb2);
        // CB B2 03CC
        gbc.setState(0x58b5, 0x98ed, 0x6c40, 0xcad2, 0x7456, 0xf4e7, 0x1, 0x1);
        gbc.writeMem(0x58b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0x58b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03CD
        gbc.setState(0xbc8c, 0x963, 0xa390, 0x560d, 0x4470, 0xf2af, 0x1, 0x1);
        gbc.writeMem(0xbc8c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x963);
        EXPECT(gbc.pc(), 0xbc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8c), 0xcb);
        EXPECT(gbc.readMem(0xbc8d), 0xb2);
        // CB B2 03CE
        gbc.setState(0x534d, 0x4992, 0x92a0, 0x7bf0, 0xabec, 0x78fc, 0x1, 0x1);
        gbc.writeMem(0x534d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x534f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03CF
        gbc.setState(0x4ef4, 0xf1b1, 0xadf0, 0xe54c, 0x8162, 0xb80e, 0x0, 0x0);
        gbc.writeMem(0x4ef4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf1b1);
        EXPECT(gbc.pc(), 0x4ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03D0
        gbc.setState(0x6307, 0x93c2, 0x9700, 0xfcfa, 0x83c4, 0xd770, 0x0, 0x1);
        gbc.writeMem(0x6307, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x93c2);
        EXPECT(gbc.pc(), 0x6309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03D1
        gbc.setState(0xae51, 0xbf8a, 0x96b0, 0x6c0b, 0xab39, 0xc3f1, 0x0, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbf8a);
        EXPECT(gbc.pc(), 0xae53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae51), 0xcb);
        EXPECT(gbc.readMem(0xae52), 0xb2);
        // CB B2 03D2
        gbc.setState(0x4738, 0xeb51, 0x7290, 0xb7cd, 0xf304, 0xba7e, 0x0, 0x1);
        gbc.writeMem(0x4738, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xeb51);
        EXPECT(gbc.pc(), 0x473a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B2 03D3
        gbc.setState(0x973b, 0x6571, 0xe300, 0x51b5, 0x7c09, 0x50b5, 0x1, 0x0);
        gbc.writeMem(0x973b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973b), 0xcb);
        EXPECT(gbc.readMem(0x973c), 0xb2);
        // CB B2 03D4
        gbc.setState(0x836c, 0x4aa2, 0x79e0, 0xeb4a, 0xe9e0, 0xe179, 0x1, 0x0);
        gbc.writeMem(0x836c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4aa2);
        EXPECT(gbc.pc(), 0x836e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836c), 0xcb);
        EXPECT(gbc.readMem(0x836d), 0xb2);
        // CB B2 03D5
        gbc.setState(0x7443, 0x7ddc, 0xa1e0, 0x5288, 0x8241, 0xcdd8, 0x0, 0x0);
        gbc.writeMem(0x7443, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7ddc);
        EXPECT(gbc.pc(), 0x7445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03D6
        gbc.setState(0xda04, 0x7664, 0x9eb0, 0x1046, 0x800b, 0xbc86, 0x0, 0x0);
        gbc.writeMem(0xda04, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7664);
        EXPECT(gbc.pc(), 0xda06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda04), 0xcb);
        EXPECT(gbc.readMem(0xda05), 0xb2);
        // CB B2 03D7
        gbc.setState(0xb5, 0x5e1f, 0x52c0, 0x3105, 0xf645, 0x1428, 0x0, 0x1);
        gbc.writeMem(0xb5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5e1f);
        EXPECT(gbc.pc(), 0xb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03D9
        gbc.setState(0x24c1, 0x4b07, 0x6860, 0xb021, 0xc88, 0xa070, 0x1, 0x1);
        gbc.writeMem(0x24c1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4b07);
        EXPECT(gbc.pc(), 0x24c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03DA
        gbc.setState(0x65dc, 0x361c, 0xf940, 0x37da, 0xdd70, 0xf88f, 0x1, 0x1);
        gbc.writeMem(0x65dc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x361c);
        EXPECT(gbc.pc(), 0x65de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03DB
        gbc.setState(0x82c4, 0x5301, 0xacf0, 0x55f0, 0x6c7a, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5301);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c4), 0xcb);
        EXPECT(gbc.readMem(0x82c5), 0xb2);
        // CB B2 03DC
        gbc.setState(0x2966, 0xea0, 0x2720, 0xe5e, 0xc59e, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x2966, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xea0);
        EXPECT(gbc.pc(), 0x2968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03DD
        gbc.setState(0x557d, 0x1a6c, 0x2d20, 0x4758, 0x28bf, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0x557d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1a6c);
        EXPECT(gbc.pc(), 0x557f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03DE
        gbc.setState(0xc089, 0x869a, 0xec80, 0x4da5, 0xd933, 0x40f, 0x0, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0xc08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc089), 0xcb);
        EXPECT(gbc.readMem(0xc08a), 0xb2);
        // CB B2 03DF
        gbc.setState(0x6da5, 0x70ee, 0x5640, 0x3d88, 0x4657, 0xa7d1, 0x0, 0x1);
        gbc.writeMem(0x6da5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x70ee);
        EXPECT(gbc.pc(), 0x6da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03E0
        gbc.setState(0xd680, 0x7ae1, 0xed50, 0x657c, 0xf6f7, 0x7193, 0x1, 0x1);
        gbc.writeMem(0xd680, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0xd682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd680), 0xcb);
        EXPECT(gbc.readMem(0xd681), 0xb2);
        // CB B2 03E1
        gbc.setState(0xd127, 0x25bc, 0x9eb0, 0x7962, 0x6aac, 0xd4be, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x25bc);
        EXPECT(gbc.pc(), 0xd129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd127), 0xcb);
        EXPECT(gbc.readMem(0xd128), 0xb2);
        // CB B2 03E2
        gbc.setState(0x9a87, 0x15e9, 0x2590, 0x75a6, 0xa1e8, 0xcbb3, 0x0, 0x1);
        gbc.writeMem(0x9a87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x15e9);
        EXPECT(gbc.pc(), 0x9a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a87), 0xcb);
        EXPECT(gbc.readMem(0x9a88), 0xb2);
        // CB B2 03E3
        gbc.setState(0x940, 0xe306, 0x6b40, 0x38a9, 0x3006, 0x406b, 0x1, 0x0);
        gbc.writeMem(0x940, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe306);
        EXPECT(gbc.pc(), 0x942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03E4
        gbc.setState(0x73c4, 0x1a6e, 0xcb20, 0x95f8, 0xf6d8, 0x5e03, 0x1, 0x0);
        gbc.writeMem(0x73c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1a6e);
        EXPECT(gbc.pc(), 0x73c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B2 03E5
        gbc.setState(0xc6f2, 0x3626, 0x4660, 0x714f, 0xdf3c, 0x81d8, 0x1, 0x0);
        gbc.writeMem(0xc6f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3626);
        EXPECT(gbc.pc(), 0xc6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f2), 0xcb);
        EXPECT(gbc.readMem(0xc6f3), 0xb2);
        // CB B2 03E6
        gbc.setState(0x8c67, 0xe97, 0x11a0, 0xa256, 0xe0a0, 0x6054, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe97);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0xb2);
    }
