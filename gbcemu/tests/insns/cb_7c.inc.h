    TEST(gbcemu, opcode_cb_7c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7C 0000
        gbc.setState(0x4f7d, 0x3b8a, 0xe2d0, 0x7a15, 0x2d9c, 0xaf43, 0x0, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3b8a, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0001
        gbc.setState(0x8169, 0x3131, 0xaa0, 0x9147, 0x42d, 0x528c, 0x0, 0x1);
        gbc.writeMem(0x8169, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8169));
        EXPECT(0x7c, gbc.readMem(0x816a));
        // CB 7C 0002
        gbc.setState(0xd652, 0xac66, 0x8940, 0x354c, 0xbd75, 0x7435, 0x0, 0x1);
        gbc.writeMem(0xd652, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0xd654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd652));
        EXPECT(0x7c, gbc.readMem(0xd653));
        // CB 7C 0003
        gbc.setState(0xb603, 0x1a79, 0xa820, 0x1270, 0xe03d, 0xcfec, 0x1, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb603));
        EXPECT(0x7c, gbc.readMem(0xb604));
        // CB 7C 0004
        gbc.setState(0xb4cf, 0x66dc, 0x3fd0, 0x9c1b, 0x970b, 0xfa47, 0x0, 0x1);
        gbc.writeMem(0xb4cf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x66dc, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4cf));
        EXPECT(0x7c, gbc.readMem(0xb4d0));
        // CB 7C 0006
        gbc.setState(0x2e66, 0x996b, 0x8470, 0x6e24, 0xf049, 0xc9ef, 0x1, 0x1);
        gbc.writeMem(0x2e66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x996b, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0007
        gbc.setState(0x4dc6, 0x2521, 0x9200, 0x449c, 0x7420, 0x16b3, 0x0, 0x0);
        gbc.writeMem(0x4dc6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0x4dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0008
        gbc.setState(0xbf89, 0x67fa, 0x8500, 0x8650, 0x1edb, 0xd4ab, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf89));
        EXPECT(0x7c, gbc.readMem(0xbf8a));
        // CB 7C 0009
        gbc.setState(0x1e03, 0x807d, 0x45e0, 0x9dfa, 0x529c, 0x90c1, 0x1, 0x0);
        gbc.writeMem(0x1e03, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x807d, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 000A
        gbc.setState(0x14e2, 0x71de, 0x9410, 0xed20, 0x27c7, 0xc73, 0x1, 0x0);
        gbc.writeMem(0x14e2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x14e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 000B
        gbc.setState(0x2690, 0xb495, 0x57e0, 0x8619, 0xdf38, 0xd826, 0x1, 0x0);
        gbc.writeMem(0x2690, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0x2692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 000C
        gbc.setState(0xa164, 0x38d4, 0xa900, 0xd0e5, 0x8f60, 0x8756, 0x0, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x38d4, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa164));
        EXPECT(0x7c, gbc.readMem(0xa165));
        // CB 7C 000D
        gbc.setState(0x20d0, 0x4ad2, 0xb5b0, 0xc1a1, 0x5457, 0xc9e3, 0x0, 0x1);
        gbc.writeMem(0x20d0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4ad2, gbc.sp());
        EXPECT(0x20d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 000E
        gbc.setState(0x68fb, 0x96c3, 0xa020, 0xfa04, 0xeb71, 0x6d0b, 0x1, 0x1);
        gbc.writeMem(0x68fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x96c3, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 000F
        gbc.setState(0xdaa8, 0x892c, 0x4a60, 0x945, 0xa3ca, 0x6515, 0x0, 0x1);
        gbc.writeMem(0xdaa8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x892c, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa8));
        EXPECT(0x7c, gbc.readMem(0xdaa9));
        // CB 7C 0011
        gbc.setState(0x14f1, 0x8677, 0x2720, 0x4de3, 0xbeb3, 0x5cb8, 0x1, 0x1);
        gbc.writeMem(0x14f1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0x14f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0012
        gbc.setState(0xe947, 0x9f15, 0xd540, 0x3246, 0xa123, 0x43e9, 0x0, 0x0);
        gbc.writeMem(0xe947, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f15, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe947));
        EXPECT(0x7c, gbc.readMem(0xe948));
        // CB 7C 0013
        gbc.setState(0xed20, 0x8bd8, 0x4830, 0xa826, 0x5d2c, 0xd3ea, 0x0, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8bd8, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x7c, gbc.readMem(0xed21));
        // CB 7C 0014
        gbc.setState(0x8d25, 0xf91c, 0x2c00, 0xa9b9, 0x658b, 0x25b8, 0x1, 0x1);
        gbc.writeMem(0x8d25, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d25));
        EXPECT(0x7c, gbc.readMem(0x8d26));
        // CB 7C 0015
        gbc.setState(0x51b, 0x6a36, 0xceb0, 0xdb26, 0x14b3, 0xc848, 0x1, 0x0);
        gbc.writeMem(0x51b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6a36, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0016
        gbc.setState(0xb1f6, 0x639d, 0x7290, 0x160d, 0x1357, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xb1f6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x639d, gbc.sp());
        EXPECT(0xb1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f6));
        EXPECT(0x7c, gbc.readMem(0xb1f7));
        // CB 7C 0017
        gbc.setState(0x9180, 0xf9ab, 0x8680, 0xa6c5, 0x8a54, 0x99d8, 0x0, 0x0);
        gbc.writeMem(0x9180, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9180));
        EXPECT(0x7c, gbc.readMem(0x9181));
        // CB 7C 0018
        gbc.setState(0xc1be, 0xe714, 0xcaf0, 0xfc68, 0x40e7, 0x818, 0x1, 0x0);
        gbc.writeMem(0xc1be, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe714, gbc.sp());
        EXPECT(0xc1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1be));
        EXPECT(0x7c, gbc.readMem(0xc1bf));
        // CB 7C 0019
        gbc.setState(0xdf32, 0x8cce, 0xd080, 0xf15e, 0xd952, 0xdcd5, 0x1, 0x0);
        gbc.writeMem(0xdf32, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8cce, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf32));
        EXPECT(0x7c, gbc.readMem(0xdf33));
        // CB 7C 001A
        gbc.setState(0xc391, 0xe6ea, 0x7610, 0xc628, 0xc83f, 0x4fcf, 0x0, 0x1);
        gbc.writeMem(0xc391, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0xc393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc391));
        EXPECT(0x7c, gbc.readMem(0xc392));
        // CB 7C 001B
        gbc.setState(0x1501, 0xd0dc, 0x3dd0, 0xe2d5, 0x3546, 0x3101, 0x1, 0x1);
        gbc.writeMem(0x1501, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 001C
        gbc.setState(0xb77, 0x1c37, 0x8720, 0x20ed, 0x8d1b, 0xddfb, 0x1, 0x1);
        gbc.writeMem(0xb77, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1c37, gbc.sp());
        EXPECT(0xb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 001D
        gbc.setState(0x8f97, 0xe8b6, 0x470, 0x5cb3, 0xfeb1, 0x12f0, 0x1, 0x1);
        gbc.writeMem(0x8f97, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f97));
        EXPECT(0x7c, gbc.readMem(0x8f98));
        // CB 7C 001E
        gbc.setState(0x6e98, 0x11cc, 0xd020, 0xe630, 0x4902, 0xc26d, 0x1, 0x1);
        gbc.writeMem(0x6e98, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 001F
        gbc.setState(0xca75, 0x98b9, 0xdb60, 0x24e, 0x15c3, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0xca75, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0x7c, gbc.readMem(0xca76));
        // CB 7C 0020
        gbc.setState(0xaaf8, 0x6897, 0x6d0, 0xf1e2, 0x5ac6, 0xd674, 0x0, 0x0);
        gbc.writeMem(0xaaf8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6897, gbc.sp());
        EXPECT(0xaafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf8));
        EXPECT(0x7c, gbc.readMem(0xaaf9));
        // CB 7C 0021
        gbc.setState(0x1784, 0xe388, 0x3ad0, 0xcd8, 0x9d80, 0xb33c, 0x0, 0x1);
        gbc.writeMem(0x1784, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe388, gbc.sp());
        EXPECT(0x1786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0022
        gbc.setState(0x1c8b, 0x4f0b, 0xa910, 0x5fac, 0x2927, 0xa9bc, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x1c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0023
        gbc.setState(0x8a9f, 0x4657, 0x5860, 0x51e7, 0x38fb, 0xf3ef, 0x1, 0x1);
        gbc.writeMem(0x8a9f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0x8aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9f));
        EXPECT(0x7c, gbc.readMem(0x8aa0));
        // CB 7C 0024
        gbc.setState(0x2c7f, 0x84f6, 0x9c80, 0xa97c, 0x869, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x84f6, gbc.sp());
        EXPECT(0x2c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0025
        gbc.setState(0xb9a8, 0x3690, 0xd380, 0xd2c7, 0x2fc1, 0xdf80, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0xb9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a8));
        EXPECT(0x7c, gbc.readMem(0xb9a9));
        // CB 7C 0026
        gbc.setState(0x9a7e, 0x8286, 0x90c0, 0xc5eb, 0x67c9, 0x8846, 0x0, 0x1);
        gbc.writeMem(0x9a7e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0x9a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7e));
        EXPECT(0x7c, gbc.readMem(0x9a7f));
        // CB 7C 0027
        gbc.setState(0x6981, 0x83fb, 0xdcd0, 0xc002, 0xb05b, 0x2269, 0x0, 0x0);
        gbc.writeMem(0x6981, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0x6983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0028
        gbc.setState(0xacf9, 0x5e43, 0xc290, 0xd4b9, 0xb538, 0x8cb6, 0x0, 0x0);
        gbc.writeMem(0xacf9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0xacfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf9));
        EXPECT(0x7c, gbc.readMem(0xacfa));
        // CB 7C 0029
        gbc.setState(0xe508, 0x1360, 0xc1d0, 0x4bd0, 0x9bed, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0xe508, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1360, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe508));
        EXPECT(0x7c, gbc.readMem(0xe509));
        // CB 7C 002A
        gbc.setState(0x185a, 0xe85c, 0xd830, 0x9234, 0x1828, 0x77e6, 0x0, 0x1);
        gbc.writeMem(0x185a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe85c, gbc.sp());
        EXPECT(0x185c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 002B
        gbc.setState(0xa664, 0xa24d, 0x3540, 0x5854, 0xd2b4, 0xb5f0, 0x1, 0x0);
        gbc.writeMem(0xa664, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa24d, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa664));
        EXPECT(0x7c, gbc.readMem(0xa665));
        // CB 7C 002C
        gbc.setState(0x3b56, 0x9596, 0x4530, 0xfc3e, 0xcca8, 0xb398, 0x1, 0x1);
        gbc.writeMem(0x3b56, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 002D
        gbc.setState(0x25da, 0xc36c, 0xebd0, 0xced1, 0xb805, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0x25da, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 002E
        gbc.setState(0x7d86, 0xa307, 0x3d20, 0xc5ca, 0x9996, 0xbdd0, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 002F
        gbc.setState(0x4bd, 0x15ec, 0xa3c0, 0xdf04, 0x2da5, 0xd772, 0x1, 0x1);
        gbc.writeMem(0x4bd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x15ec, gbc.sp());
        EXPECT(0x4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0030
        gbc.setState(0x7f6d, 0x1427, 0x3600, 0xbe9c, 0x627d, 0x7ee3, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1427, gbc.sp());
        EXPECT(0x7f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0031
        gbc.setState(0x70d, 0x83e8, 0xea0, 0x892d, 0xa93b, 0x9412, 0x1, 0x1);
        gbc.writeMem(0x70d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0x70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0032
        gbc.setState(0xe0d4, 0x5c75, 0xc3d0, 0x2ede, 0x30e6, 0xacd, 0x0, 0x0);
        gbc.writeMem(0xe0d4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0xe0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d4));
        EXPECT(0x7c, gbc.readMem(0xe0d5));
        // CB 7C 0033
        gbc.setState(0x2ab3, 0xb47, 0x8770, 0xcdbd, 0xef51, 0x450f, 0x0, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb47, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0034
        gbc.setState(0x7c99, 0x33cc, 0x8b00, 0x5a45, 0x719a, 0xa970, 0x1, 0x0);
        gbc.writeMem(0x7c99, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x33cc, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0035
        gbc.setState(0xad2, 0x248f, 0x15f0, 0xf082, 0x448, 0x5142, 0x0, 0x0);
        gbc.writeMem(0xad2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x248f, gbc.sp());
        EXPECT(0xad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0036
        gbc.setState(0x2d2b, 0x8804, 0xf240, 0x12c, 0x653e, 0x6cbb, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8804, gbc.sp());
        EXPECT(0x2d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0037
        gbc.setState(0xa9be, 0x7b93, 0x6150, 0x3d4, 0xc8b1, 0x98d7, 0x1, 0x1);
        gbc.writeMem(0xa9be, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9be));
        EXPECT(0x7c, gbc.readMem(0xa9bf));
        // CB 7C 0038
        gbc.setState(0xec47, 0x5e68, 0xad60, 0xba9c, 0xc1f3, 0xf7ee, 0x1, 0x0);
        gbc.writeMem(0xec47, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5e68, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec47));
        EXPECT(0x7c, gbc.readMem(0xec48));
        // CB 7C 0039
        gbc.setState(0x2780, 0x7867, 0x8b20, 0x5bf2, 0x4285, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x2780, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0x2782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 003A
        gbc.setState(0x66db, 0x8ff8, 0x1140, 0xad6, 0x5bfe, 0x7bc7, 0x0, 0x0);
        gbc.writeMem(0x66db, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8ff8, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 003B
        gbc.setState(0x9dff, 0xf5be, 0x8e70, 0x171f, 0x38dd, 0x949d, 0x1, 0x0);
        gbc.writeMem(0x9dff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0x9e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dff));
        EXPECT(0x7c, gbc.readMem(0x9e00));
        // CB 7C 003C
        gbc.setState(0xbd3, 0x7996, 0xcde0, 0xbf06, 0xe5b4, 0x3b9, 0x0, 0x0);
        gbc.writeMem(0xbd3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 003D
        gbc.setState(0xa911, 0xdb8b, 0x5c70, 0x2586, 0xcf46, 0x2012, 0x0, 0x0);
        gbc.writeMem(0xa911, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0xa913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa911));
        EXPECT(0x7c, gbc.readMem(0xa912));
        // CB 7C 003E
        gbc.setState(0x7c9f, 0x15c0, 0x30f0, 0xae82, 0x5f59, 0x5290, 0x1, 0x1);
        gbc.writeMem(0x7c9f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x15c0, gbc.sp());
        EXPECT(0x7ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 003F
        gbc.setState(0xe75e, 0xba51, 0xdf70, 0x36e2, 0x1706, 0xc623, 0x1, 0x0);
        gbc.writeMem(0xe75e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xba51, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75e));
        EXPECT(0x7c, gbc.readMem(0xe75f));
        // CB 7C 0040
        gbc.setState(0x994, 0x2b50, 0x50, 0xfa29, 0xe4aa, 0xb187, 0x0, 0x0);
        gbc.writeMem(0x994, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2b50, gbc.sp());
        EXPECT(0x996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0041
        gbc.setState(0x546a, 0x6b7c, 0x7180, 0x14c, 0xbc2e, 0x32e1, 0x0, 0x0);
        gbc.writeMem(0x546a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6b7c, gbc.sp());
        EXPECT(0x546c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0042
        gbc.setState(0x1aae, 0x304, 0x4c20, 0xf2e7, 0x881f, 0xd691, 0x0, 0x1);
        gbc.writeMem(0x1aae, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x304, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0043
        gbc.setState(0x242e, 0x5a03, 0xede0, 0x8425, 0xde8d, 0x4692, 0x1, 0x0);
        gbc.writeMem(0x242e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0044
        gbc.setState(0x4b39, 0xff57, 0x38e0, 0x6678, 0x2fb8, 0x4f2e, 0x0, 0x1);
        gbc.writeMem(0x4b39, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0x4b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0045
        gbc.setState(0x5e1f, 0xf5a3, 0xe040, 0x4c70, 0x1675, 0x8ea8, 0x1, 0x0);
        gbc.writeMem(0x5e1f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0046
        gbc.setState(0xc12e, 0x3e27, 0x6aa0, 0x74ca, 0x2af0, 0x7786, 0x0, 0x1);
        gbc.writeMem(0xc12e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0xc130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12e));
        EXPECT(0x7c, gbc.readMem(0xc12f));
        // CB 7C 0047
        gbc.setState(0x7103, 0xe8f8, 0x5c90, 0x1f5a, 0x4d59, 0x800, 0x1, 0x0);
        gbc.writeMem(0x7103, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8f8, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0049
        gbc.setState(0xc491, 0x1a41, 0xdfd0, 0x86f0, 0xcc15, 0x66b5, 0x1, 0x1);
        gbc.writeMem(0xc491, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1a41, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc491));
        EXPECT(0x7c, gbc.readMem(0xc492));
        // CB 7C 004A
        gbc.setState(0xbfeb, 0xddec, 0x7c80, 0xf4fe, 0x594f, 0x1bc, 0x1, 0x1);
        gbc.writeMem(0xbfeb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xddec, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfeb));
        EXPECT(0x7c, gbc.readMem(0xbfec));
        // CB 7C 004B
        gbc.setState(0x792e, 0x299e, 0xcc90, 0xc744, 0xfb98, 0x2937, 0x0, 0x1);
        gbc.writeMem(0x792e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 004C
        gbc.setState(0xa9cc, 0xca66, 0x4460, 0x8ecc, 0x4698, 0x9f5, 0x0, 0x1);
        gbc.writeMem(0xa9cc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0xa9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cc));
        EXPECT(0x7c, gbc.readMem(0xa9cd));
        // CB 7C 004D
        gbc.setState(0xb262, 0x8179, 0x9150, 0xb924, 0xbf03, 0xf666, 0x1, 0x1);
        gbc.writeMem(0xb262, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8179, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0x7c, gbc.readMem(0xb263));
        // CB 7C 004E
        gbc.setState(0x8c9d, 0x223f, 0x1870, 0xd97e, 0x1f49, 0xacac, 0x0, 0x0);
        gbc.writeMem(0x8c9d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9d));
        EXPECT(0x7c, gbc.readMem(0x8c9e));
        // CB 7C 004F
        gbc.setState(0x76cd, 0x5ead, 0x6f00, 0x72cf, 0x39f7, 0x6651, 0x0, 0x1);
        gbc.writeMem(0x76cd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ead, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0050
        gbc.setState(0x6027, 0x1066, 0xff30, 0x6605, 0x4987, 0xb883, 0x1, 0x0);
        gbc.writeMem(0x6027, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1066, gbc.sp());
        EXPECT(0x6029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0051
        gbc.setState(0x21ba, 0x1b68, 0xa400, 0xc7be, 0x9cd0, 0x6f79, 0x1, 0x1);
        gbc.writeMem(0x21ba, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1b68, gbc.sp());
        EXPECT(0x21bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0052
        gbc.setState(0x5c59, 0x8687, 0x6350, 0x73e8, 0x7862, 0x6707, 0x0, 0x0);
        gbc.writeMem(0x5c59, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8687, gbc.sp());
        EXPECT(0x5c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0053
        gbc.setState(0x7d28, 0x4287, 0x83a0, 0x5704, 0x3650, 0x89c4, 0x0, 0x0);
        gbc.writeMem(0x7d28, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4287, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0054
        gbc.setState(0x230a, 0xa12c, 0x6f60, 0x88df, 0x1cb1, 0xf68, 0x1, 0x0);
        gbc.writeMem(0x230a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0055
        gbc.setState(0xe188, 0x542, 0x5fe0, 0x4910, 0xfa87, 0x4664, 0x1, 0x0);
        gbc.writeMem(0xe188, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x542, gbc.sp());
        EXPECT(0xe18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe188));
        EXPECT(0x7c, gbc.readMem(0xe189));
        // CB 7C 0056
        gbc.setState(0x5c62, 0xeaa5, 0x8dd0, 0xcbef, 0x60f4, 0xeda2, 0x1, 0x1);
        gbc.writeMem(0x5c62, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0x5c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0057
        gbc.setState(0x132b, 0xd107, 0xab80, 0x17e0, 0xd068, 0x478c, 0x1, 0x1);
        gbc.writeMem(0x132b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0x132d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0058
        gbc.setState(0xddb3, 0xd966, 0xb370, 0x7123, 0x7518, 0x7fc, 0x1, 0x1);
        gbc.writeMem(0xddb3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0xddb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb3));
        EXPECT(0x7c, gbc.readMem(0xddb4));
        // CB 7C 0059
        gbc.setState(0xd73, 0xb558, 0xa8d0, 0x3c15, 0x6906, 0x5980, 0x0, 0x0);
        gbc.writeMem(0xd73, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0xd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 005A
        gbc.setState(0x47dc, 0x38fd, 0x3da0, 0x5e4c, 0x2030, 0x4491, 0x0, 0x1);
        gbc.writeMem(0x47dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x38fd, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 005B
        gbc.setState(0xc8e6, 0x7f9b, 0x6840, 0x2ec6, 0x1036, 0xd7ab, 0x0, 0x1);
        gbc.writeMem(0xc8e6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f9b, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e6));
        EXPECT(0x7c, gbc.readMem(0xc8e7));
        // CB 7C 005C
        gbc.setState(0x3adb, 0x4f1d, 0xba40, 0xef5b, 0xcf57, 0x6918, 0x1, 0x0);
        gbc.writeMem(0x3adb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 005D
        gbc.setState(0x2f62, 0x41b5, 0x2b20, 0xbb89, 0x9e75, 0x584f, 0x0, 0x1);
        gbc.writeMem(0x2f62, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x2f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 005E
        gbc.setState(0xb6bd, 0x7316, 0xfbc0, 0x6dc5, 0x2159, 0xe886, 0x0, 0x1);
        gbc.writeMem(0xb6bd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bd));
        EXPECT(0x7c, gbc.readMem(0xb6be));
        // CB 7C 005F
        gbc.setState(0xcfa7, 0x7b67, 0x88a0, 0xcb7, 0x810, 0x4829, 0x1, 0x0);
        gbc.writeMem(0xcfa7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b67, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa7));
        EXPECT(0x7c, gbc.readMem(0xcfa8));
        // CB 7C 0061
        gbc.setState(0x7ec3, 0xe889, 0x1840, 0x748c, 0xc6b1, 0xd916, 0x1, 0x0);
        gbc.writeMem(0x7ec3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe889, gbc.sp());
        EXPECT(0x7ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0062
        gbc.setState(0x2e81, 0xad34, 0x9560, 0x623d, 0xd41a, 0x13d3, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0063
        gbc.setState(0xeaf1, 0xcac9, 0xeb0, 0x7b2, 0xd6dd, 0x2474, 0x0, 0x1);
        gbc.writeMem(0xeaf1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xeaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf1));
        EXPECT(0x7c, gbc.readMem(0xeaf2));
        // CB 7C 0064
        gbc.setState(0x302e, 0x8ec8, 0xf610, 0x53b0, 0x15f3, 0x61d4, 0x0, 0x0);
        gbc.writeMem(0x302e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8ec8, gbc.sp());
        EXPECT(0x3030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0065
        gbc.setState(0x559c, 0x2250, 0xc540, 0xdc6, 0xe54, 0x46d0, 0x0, 0x1);
        gbc.writeMem(0x559c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0066
        gbc.setState(0x6fc9, 0x34c5, 0x290, 0x346a, 0x15df, 0xca2b, 0x1, 0x1);
        gbc.writeMem(0x6fc9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x34c5, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0067
        gbc.setState(0x69c2, 0x6e77, 0x8c40, 0xa492, 0x2bd4, 0x136e, 0x1, 0x0);
        gbc.writeMem(0x69c2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0068
        gbc.setState(0x5169, 0xd42a, 0xae90, 0xf18d, 0xca69, 0x6f57, 0x1, 0x0);
        gbc.writeMem(0x5169, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0x516b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0069
        gbc.setState(0x3587, 0xf761, 0x39c0, 0xeee9, 0xcb15, 0xb9fb, 0x0, 0x1);
        gbc.writeMem(0x3587, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0x3589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 006A
        gbc.setState(0xc8af, 0xafb, 0x6520, 0xbd67, 0x55f0, 0x5a8a, 0x1, 0x0);
        gbc.writeMem(0xc8af, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0xc8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8af));
        EXPECT(0x7c, gbc.readMem(0xc8b0));
        // CB 7C 006B
        gbc.setState(0x6d26, 0x8fb3, 0x5980, 0xd0d5, 0xd4d8, 0x4d8e, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8fb3, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 006C
        gbc.setState(0x1f78, 0x98a9, 0xb4b0, 0xcb4e, 0x5710, 0x8e9f, 0x0, 0x0);
        gbc.writeMem(0x1f78, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x1f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 006D
        gbc.setState(0x517e, 0x2f84, 0x67f0, 0xf112, 0x8f1a, 0xf340, 0x1, 0x0);
        gbc.writeMem(0x517e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2f84, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 006E
        gbc.setState(0xc996, 0x7182, 0x2290, 0xb801, 0xd186, 0x6089, 0x0, 0x0);
        gbc.writeMem(0xc996, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc996));
        EXPECT(0x7c, gbc.readMem(0xc997));
        // CB 7C 006F
        gbc.setState(0xdc3b, 0x3691, 0xf800, 0xa740, 0xae13, 0x9ec4, 0x0, 0x1);
        gbc.writeMem(0xdc3b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3691, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3b));
        EXPECT(0x7c, gbc.readMem(0xdc3c));
        // CB 7C 0070
        gbc.setState(0xb048, 0xc462, 0x5fc0, 0x51d8, 0xaeed, 0xefc4, 0x1, 0x1);
        gbc.writeMem(0xb048, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc462, gbc.sp());
        EXPECT(0xb04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb048));
        EXPECT(0x7c, gbc.readMem(0xb049));
        // CB 7C 0071
        gbc.setState(0xe1bc, 0xafb0, 0xede0, 0xa8b5, 0x8b91, 0x93e7, 0x0, 0x0);
        gbc.writeMem(0xe1bc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xafb0, gbc.sp());
        EXPECT(0xe1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1bc));
        EXPECT(0x7c, gbc.readMem(0xe1bd));
        // CB 7C 0072
        gbc.setState(0xeb73, 0xefb7, 0x6660, 0x9f1b, 0x139, 0xf102, 0x0, 0x1);
        gbc.writeMem(0xeb73, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xefb7, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb73));
        EXPECT(0x7c, gbc.readMem(0xeb74));
        // CB 7C 0073
        gbc.setState(0xaabd, 0x8c3e, 0x7b60, 0xc525, 0xf7, 0xa2c8, 0x0, 0x1);
        gbc.writeMem(0xaabd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8c3e, gbc.sp());
        EXPECT(0xaabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabd));
        EXPECT(0x7c, gbc.readMem(0xaabe));
        // CB 7C 0074
        gbc.setState(0xafc9, 0x5b67, 0x7440, 0xec4a, 0x779c, 0x60f4, 0x1, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0x7c, gbc.readMem(0xafca));
        // CB 7C 0075
        gbc.setState(0x5c6e, 0x6ab, 0x7570, 0x6b09, 0xabd0, 0x15d4, 0x0, 0x0);
        gbc.writeMem(0x5c6e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0x5c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0076
        gbc.setState(0xe7c3, 0xbc32, 0x1030, 0x2a72, 0x8814, 0xb6c9, 0x0, 0x0);
        gbc.writeMem(0xe7c3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbc32, gbc.sp());
        EXPECT(0xe7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c3));
        EXPECT(0x7c, gbc.readMem(0xe7c4));
        // CB 7C 0077
        gbc.setState(0x44c3, 0xc2d5, 0xe730, 0x77b2, 0xbbf9, 0x9e8d, 0x1, 0x1);
        gbc.writeMem(0x44c3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0078
        gbc.setState(0xb820, 0x383a, 0xb50, 0x15fa, 0x504b, 0xc285, 0x0, 0x0);
        gbc.writeMem(0xb820, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0xb822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb820));
        EXPECT(0x7c, gbc.readMem(0xb821));
        // CB 7C 0079
        gbc.setState(0x6387, 0x3f0, 0xe160, 0x8c0f, 0xd06, 0xd4c2, 0x0, 0x1);
        gbc.writeMem(0x6387, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3f0, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 007A
        gbc.setState(0x27c5, 0xaeda, 0x70a0, 0x4ee2, 0x3c55, 0x9c57, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaeda, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 007B
        gbc.setState(0x7c7c, 0xd9bb, 0x5a60, 0x5eca, 0x9321, 0x9b41, 0x1, 0x0);
        gbc.writeMem(0x7c7c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd9bb, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 007C
        gbc.setState(0xe957, 0xbcdb, 0x6760, 0x654d, 0x7691, 0xd801, 0x1, 0x0);
        gbc.writeMem(0xe957, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbcdb, gbc.sp());
        EXPECT(0xe959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe957));
        EXPECT(0x7c, gbc.readMem(0xe958));
        // CB 7C 007D
        gbc.setState(0xa8e5, 0x2d5a, 0x6eb0, 0xdc18, 0x7be0, 0x38f, 0x1, 0x1);
        gbc.writeMem(0xa8e5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0xa8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e5));
        EXPECT(0x7c, gbc.readMem(0xa8e6));
        // CB 7C 007E
        gbc.setState(0x1ffd, 0x6eaf, 0xba10, 0x9fe2, 0x3afb, 0x135, 0x1, 0x0);
        gbc.writeMem(0x1ffd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6eaf, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 007F
        gbc.setState(0x3f8e, 0xdb3a, 0xe270, 0x5170, 0xd666, 0x9392, 0x0, 0x1);
        gbc.writeMem(0x3f8e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0x3f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0080
        gbc.setState(0x446f, 0xe288, 0x8e50, 0xf96c, 0x41c1, 0x7040, 0x0, 0x0);
        gbc.writeMem(0x446f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe288, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0081
        gbc.setState(0x9751, 0x4a02, 0x7be0, 0x46e0, 0xee, 0x1cec, 0x0, 0x1);
        gbc.writeMem(0x9751, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4a02, gbc.sp());
        EXPECT(0x9753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9751));
        EXPECT(0x7c, gbc.readMem(0x9752));
        // CB 7C 0083
        gbc.setState(0x2f32, 0xe79e, 0xe730, 0xf884, 0x3d9, 0xad50, 0x0, 0x0);
        gbc.writeMem(0x2f32, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x2f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0084
        gbc.setState(0xb78d, 0xc1a5, 0x7500, 0x6c67, 0xa6ea, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0xb78d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc1a5, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78d));
        EXPECT(0x7c, gbc.readMem(0xb78e));
        // CB 7C 0085
        gbc.setState(0x40ec, 0xa399, 0xea30, 0x38bf, 0xe45f, 0x8257, 0x1, 0x1);
        gbc.writeMem(0x40ec, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0086
        gbc.setState(0x56d5, 0xf502, 0x3d90, 0x5f5, 0x2032, 0xb255, 0x0, 0x1);
        gbc.writeMem(0x56d5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0x56d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0087
        gbc.setState(0x2086, 0x3f3c, 0x7e30, 0xa165, 0x2a90, 0x8e1, 0x0, 0x0);
        gbc.writeMem(0x2086, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x2088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0088
        gbc.setState(0x3e8d, 0x6738, 0x8830, 0xe7bf, 0xe8ec, 0x4884, 0x0, 0x0);
        gbc.writeMem(0x3e8d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6738, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0089
        gbc.setState(0x64, 0xbd4b, 0x1330, 0x37a, 0xade4, 0x1457, 0x1, 0x1);
        gbc.writeMem(0x64, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 008A
        gbc.setState(0xc170, 0xb5f0, 0xb780, 0x59f9, 0x761e, 0x6ef0, 0x1, 0x0);
        gbc.writeMem(0xc170, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb5f0, gbc.sp());
        EXPECT(0xc172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc170));
        EXPECT(0x7c, gbc.readMem(0xc171));
        // CB 7C 008B
        gbc.setState(0xe491, 0x9bd, 0x5f50, 0x2725, 0x7bfb, 0x8aea, 0x0, 0x0);
        gbc.writeMem(0xe491, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0x7c, gbc.readMem(0xe492));
        // CB 7C 008C
        gbc.setState(0x3a0a, 0x8fc7, 0xd3f0, 0x9d0b, 0x7ce2, 0xe493, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8fc7, gbc.sp());
        EXPECT(0x3a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 008D
        gbc.setState(0xd679, 0x6023, 0xee40, 0xb2e4, 0xd21b, 0xa218, 0x0, 0x1);
        gbc.writeMem(0xd679, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd679));
        EXPECT(0x7c, gbc.readMem(0xd67a));
        // CB 7C 008E
        gbc.setState(0xe762, 0x111f, 0x3840, 0xbfab, 0x836, 0x74ef, 0x1, 0x0);
        gbc.writeMem(0xe762, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x111f, gbc.sp());
        EXPECT(0xe764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe762));
        EXPECT(0x7c, gbc.readMem(0xe763));
        // CB 7C 008F
        gbc.setState(0x89b3, 0x23d7, 0x50c0, 0x734c, 0xce6e, 0xe981, 0x0, 0x0);
        gbc.writeMem(0x89b3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b3));
        EXPECT(0x7c, gbc.readMem(0x89b4));
        // CB 7C 0090
        gbc.setState(0xdf9, 0xbaa, 0x3180, 0xf910, 0x99ba, 0x1949, 0x1, 0x1);
        gbc.writeMem(0xdf9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0xdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0091
        gbc.setState(0xdf3d, 0x93b4, 0x9cd0, 0x1ec4, 0xf66c, 0x3502, 0x0, 0x0);
        gbc.writeMem(0xdf3d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0xdf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3d));
        EXPECT(0x7c, gbc.readMem(0xdf3e));
        // CB 7C 0092
        gbc.setState(0xba41, 0xa71, 0x4870, 0x91fc, 0xf5b1, 0x6d06, 0x0, 0x0);
        gbc.writeMem(0xba41, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa71, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba41));
        EXPECT(0x7c, gbc.readMem(0xba42));
        // CB 7C 0094
        gbc.setState(0xafc0, 0x361f, 0x9b50, 0x4e8, 0x9b3e, 0x26cd, 0x1, 0x1);
        gbc.writeMem(0xafc0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc0));
        EXPECT(0x7c, gbc.readMem(0xafc1));
        // CB 7C 0095
        gbc.setState(0xab90, 0x673e, 0xdff0, 0x982a, 0xb0e8, 0x58a0, 0x1, 0x1);
        gbc.writeMem(0xab90, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0xab92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab90));
        EXPECT(0x7c, gbc.readMem(0xab91));
        // CB 7C 0096
        gbc.setState(0x3e18, 0xcc3c, 0x7990, 0x752, 0xe91b, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x3e18, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0x3e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0097
        gbc.setState(0x40bf, 0x4174, 0xc5d0, 0x48a7, 0x73c8, 0x3891, 0x0, 0x1);
        gbc.writeMem(0x40bf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4174, gbc.sp());
        EXPECT(0x40c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0098
        gbc.setState(0x8c8b, 0x2098, 0x5270, 0x4c1a, 0xb3e0, 0xfaa1, 0x1, 0x1);
        gbc.writeMem(0x8c8b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2098, gbc.sp());
        EXPECT(0x8c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8b));
        EXPECT(0x7c, gbc.readMem(0x8c8c));
        // CB 7C 0099
        gbc.setState(0xe3f6, 0x5874, 0x4370, 0x1789, 0xa28d, 0x138e, 0x0, 0x0);
        gbc.writeMem(0xe3f6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5874, gbc.sp());
        EXPECT(0xe3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f6));
        EXPECT(0x7c, gbc.readMem(0xe3f7));
        // CB 7C 009A
        gbc.setState(0xa25, 0x41a3, 0x3df0, 0x98fa, 0x943e, 0x3362, 0x0, 0x0);
        gbc.writeMem(0xa25, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x41a3, gbc.sp());
        EXPECT(0xa27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 009B
        gbc.setState(0xccfb, 0xeebd, 0xfca0, 0xcc97, 0x3028, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0xccfb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeebd, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0x7c, gbc.readMem(0xccfc));
        // CB 7C 009C
        gbc.setState(0x1196, 0x4439, 0x9a90, 0x987e, 0x8bbe, 0x408, 0x0, 0x0);
        gbc.writeMem(0x1196, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0x1198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 009D
        gbc.setState(0xbc09, 0x6cac, 0x920, 0xbddc, 0xb379, 0x9051, 0x0, 0x1);
        gbc.writeMem(0xbc09, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc09));
        EXPECT(0x7c, gbc.readMem(0xbc0a));
        // CB 7C 009E
        gbc.setState(0x3779, 0xa03c, 0x83c0, 0x8f35, 0x428e, 0xa9bc, 0x0, 0x1);
        gbc.writeMem(0x3779, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 009F
        gbc.setState(0x9e9, 0x38f0, 0xecf0, 0x27, 0x2717, 0x2c4f, 0x0, 0x0);
        gbc.writeMem(0x9e9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x38f0, gbc.sp());
        EXPECT(0x9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00A0
        gbc.setState(0x9f91, 0x4bee, 0x98b0, 0x5a0b, 0x5ed9, 0xb029, 0x0, 0x0);
        gbc.writeMem(0x9f91, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4bee, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f91));
        EXPECT(0x7c, gbc.readMem(0x9f92));
        // CB 7C 00A1
        gbc.setState(0xd31d, 0xde83, 0xc660, 0xe8ac, 0xbdb9, 0x4c64, 0x1, 0x0);
        gbc.writeMem(0xd31d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0xd31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31d));
        EXPECT(0x7c, gbc.readMem(0xd31e));
        // CB 7C 00A2
        gbc.setState(0x62fb, 0x347b, 0xbee0, 0xfd8b, 0x8034, 0xa208, 0x1, 0x1);
        gbc.writeMem(0x62fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x347b, gbc.sp());
        EXPECT(0x62fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00A4
        gbc.setState(0x7447, 0x2cff, 0xa610, 0xff30, 0xc447, 0x2bf4, 0x1, 0x0);
        gbc.writeMem(0x7447, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0x7449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00A5
        gbc.setState(0x2680, 0x6a7b, 0x2450, 0x13c9, 0x8ea3, 0x8d98, 0x1, 0x1);
        gbc.writeMem(0x2680, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6a7b, gbc.sp());
        EXPECT(0x2682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00A6
        gbc.setState(0x194, 0x33c0, 0x740, 0x9c79, 0xc2bf, 0x3701, 0x1, 0x0);
        gbc.writeMem(0x194, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x33c0, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00A7
        gbc.setState(0x6523, 0x51c9, 0xa6c0, 0x4e7d, 0xdd07, 0x4b84, 0x0, 0x1);
        gbc.writeMem(0x6523, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x51c9, gbc.sp());
        EXPECT(0x6525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00A8
        gbc.setState(0x55f2, 0xd14c, 0x4010, 0x44dc, 0x9935, 0xaa95, 0x0, 0x0);
        gbc.writeMem(0x55f2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd14c, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00A9
        gbc.setState(0x8115, 0x969d, 0xfb80, 0xaa05, 0x193c, 0x9996, 0x0, 0x0);
        gbc.writeMem(0x8115, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x969d, gbc.sp());
        EXPECT(0x8117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8115));
        EXPECT(0x7c, gbc.readMem(0x8116));
        // CB 7C 00AA
        gbc.setState(0x58bc, 0x5f0f, 0x9da0, 0x11a1, 0xe0de, 0x7df2, 0x0, 0x0);
        gbc.writeMem(0x58bc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5f0f, gbc.sp());
        EXPECT(0x58be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00AB
        gbc.setState(0x91e7, 0x7200, 0x1c50, 0x8362, 0x22e0, 0xbce5, 0x1, 0x1);
        gbc.writeMem(0x91e7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7200, gbc.sp());
        EXPECT(0x91e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e7));
        EXPECT(0x7c, gbc.readMem(0x91e8));
        // CB 7C 00AC
        gbc.setState(0x2adb, 0xad50, 0x3c00, 0xbe74, 0x2788, 0x22a, 0x1, 0x0);
        gbc.writeMem(0x2adb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x2add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00AE
        gbc.setState(0x96bc, 0x56ed, 0x9d50, 0x9375, 0xd645, 0xf7e6, 0x0, 0x1);
        gbc.writeMem(0x96bc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bc));
        EXPECT(0x7c, gbc.readMem(0x96bd));
        // CB 7C 00AF
        gbc.setState(0xed1e, 0x621b, 0x86a0, 0xe0d2, 0xe380, 0x3241, 0x0, 0x0);
        gbc.writeMem(0xed1e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x621b, gbc.sp());
        EXPECT(0xed20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1e));
        EXPECT(0x7c, gbc.readMem(0xed1f));
        // CB 7C 00B0
        gbc.setState(0x7f1f, 0x494a, 0x8a80, 0xe261, 0xd1d1, 0x70c8, 0x1, 0x0);
        gbc.writeMem(0x7f1f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x494a, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00B1
        gbc.setState(0x95ce, 0xb709, 0x67a0, 0x91bc, 0x5057, 0x18b5, 0x0, 0x0);
        gbc.writeMem(0x95ce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0x7c, gbc.readMem(0x95cf));
        // CB 7C 00B2
        gbc.setState(0x9bb6, 0x83fa, 0x8730, 0xae10, 0x3167, 0x5425, 0x0, 0x0);
        gbc.writeMem(0x9bb6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb6));
        EXPECT(0x7c, gbc.readMem(0x9bb7));
        // CB 7C 00B3
        gbc.setState(0xafff, 0x9692, 0x1ad0, 0xab, 0x9479, 0xf1c5, 0x0, 0x1);
        gbc.writeMem(0xafff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafff));
        EXPECT(0x7c, gbc.readMem(0xb000));
        // CB 7C 00B4
        gbc.setState(0x2645, 0xada3, 0xc300, 0x1511, 0x9eee, 0xd41, 0x0, 0x1);
        gbc.writeMem(0x2645, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xada3, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00B5
        gbc.setState(0x3e0f, 0xe8e5, 0x6f0, 0xd63, 0x5fea, 0x4ff5, 0x0, 0x0);
        gbc.writeMem(0x3e0f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00B6
        gbc.setState(0xd0ad, 0xf074, 0xc6d0, 0xe193, 0xe919, 0xc367, 0x0, 0x0);
        gbc.writeMem(0xd0ad, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf074, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ad));
        EXPECT(0x7c, gbc.readMem(0xd0ae));
        // CB 7C 00B7
        gbc.setState(0x3074, 0x5ad7, 0xea60, 0x7466, 0x76fd, 0x4c77, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5ad7, gbc.sp());
        EXPECT(0x3076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00B8
        gbc.setState(0x8d67, 0xe0a1, 0xf8c0, 0xaf69, 0x8945, 0xf2fe, 0x1, 0x1);
        gbc.writeMem(0x8d67, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x8d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d67));
        EXPECT(0x7c, gbc.readMem(0x8d68));
        // CB 7C 00B9
        gbc.setState(0x8435, 0xa8f9, 0xda20, 0x14a, 0x75a5, 0x76ba, 0x0, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8435));
        EXPECT(0x7c, gbc.readMem(0x8436));
        // CB 7C 00BA
        gbc.setState(0x7975, 0x26d8, 0x160, 0xadb8, 0x2b7f, 0x2d4a, 0x1, 0x0);
        gbc.writeMem(0x7975, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0x7977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00BB
        gbc.setState(0x4239, 0x21da, 0xff70, 0xfaed, 0x5a74, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0x4239, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x21da, gbc.sp());
        EXPECT(0x423b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00BC
        gbc.setState(0x721b, 0x578, 0x5af0, 0xdc57, 0x7441, 0xc15, 0x0, 0x1);
        gbc.writeMem(0x721b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x578, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00BD
        gbc.setState(0xeda8, 0x8233, 0x4d20, 0xb00b, 0xe54f, 0xba7a, 0x1, 0x1);
        gbc.writeMem(0xeda8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda8));
        EXPECT(0x7c, gbc.readMem(0xeda9));
        // CB 7C 00BE
        gbc.setState(0x956e, 0x274a, 0x9010, 0x722b, 0x232f, 0x4cdd, 0x1, 0x1);
        gbc.writeMem(0x956e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x274a, gbc.sp());
        EXPECT(0x9570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956e));
        EXPECT(0x7c, gbc.readMem(0x956f));
        // CB 7C 00BF
        gbc.setState(0x9726, 0xf708, 0xdf50, 0x8037, 0x3b41, 0xf0e0, 0x1, 0x1);
        gbc.writeMem(0x9726, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf708, gbc.sp());
        EXPECT(0x9728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9726));
        EXPECT(0x7c, gbc.readMem(0x9727));
        // CB 7C 00C0
        gbc.setState(0x8640, 0x6756, 0x5980, 0xc5da, 0xa59, 0x49ad, 0x1, 0x1);
        gbc.writeMem(0x8640, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6756, gbc.sp());
        EXPECT(0x8642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8640));
        EXPECT(0x7c, gbc.readMem(0x8641));
        // CB 7C 00C1
        gbc.setState(0x8b6b, 0xa12f, 0xf230, 0x7c67, 0x80ae, 0x7058, 0x1, 0x0);
        gbc.writeMem(0x8b6b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa12f, gbc.sp());
        EXPECT(0x8b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6b));
        EXPECT(0x7c, gbc.readMem(0x8b6c));
        // CB 7C 00C2
        gbc.setState(0x666b, 0x341e, 0xd8d0, 0xf381, 0xd217, 0x48d1, 0x0, 0x0);
        gbc.writeMem(0x666b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x341e, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00C3
        gbc.setState(0xabe5, 0x61c5, 0xd330, 0xe1d0, 0x12ed, 0xcd45, 0x1, 0x1);
        gbc.writeMem(0xabe5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0xabe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe5));
        EXPECT(0x7c, gbc.readMem(0xabe6));
        // CB 7C 00C4
        gbc.setState(0x792a, 0x8737, 0xa3c0, 0xddc3, 0xac9a, 0x3a5e, 0x0, 0x1);
        gbc.writeMem(0x792a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8737, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00C5
        gbc.setState(0x4c0e, 0xf73f, 0xaf20, 0xc9ec, 0xe8cd, 0x45d6, 0x1, 0x1);
        gbc.writeMem(0x4c0e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0x4c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00C6
        gbc.setState(0x7fc9, 0x1c2a, 0x9760, 0xe19, 0xd2fd, 0x8c0f, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0x7fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00C7
        gbc.setState(0x9429, 0x428, 0x9700, 0xe492, 0xa34e, 0xae71, 0x0, 0x1);
        gbc.writeMem(0x9429, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0x942b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9429));
        EXPECT(0x7c, gbc.readMem(0x942a));
        // CB 7C 00C8
        gbc.setState(0x5698, 0xefa9, 0xaf50, 0x1939, 0xac9, 0x7997, 0x0, 0x0);
        gbc.writeMem(0x5698, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xefa9, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00C9
        gbc.setState(0x5de1, 0x4da1, 0x4750, 0x7b8b, 0x8abe, 0x9b1f, 0x1, 0x0);
        gbc.writeMem(0x5de1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0x5de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00CA
        gbc.setState(0xa2c7, 0xab8f, 0x1ad0, 0xc9ee, 0x9393, 0x27c9, 0x0, 0x1);
        gbc.writeMem(0xa2c7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xab8f, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c7));
        EXPECT(0x7c, gbc.readMem(0xa2c8));
        // CB 7C 00CB
        gbc.setState(0x5c79, 0xe60, 0x250, 0x4baf, 0xe422, 0x8072, 0x1, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00CC
        gbc.setState(0x3460, 0x607b, 0x7720, 0x6f58, 0xaba0, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x3460, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x607b, gbc.sp());
        EXPECT(0x3462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00CD
        gbc.setState(0xb2af, 0xf8b, 0x660, 0x32d7, 0xbabc, 0x8a8b, 0x0, 0x0);
        gbc.writeMem(0xb2af, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0xb2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2af));
        EXPECT(0x7c, gbc.readMem(0xb2b0));
        // CB 7C 00CE
        gbc.setState(0x27b7, 0xe4a2, 0xa420, 0x86d4, 0xf1f8, 0x9fc6, 0x1, 0x1);
        gbc.writeMem(0x27b7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0x27b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00CF
        gbc.setState(0x60e6, 0x6fff, 0xebf0, 0x9d67, 0xedc6, 0x9f78, 0x1, 0x1);
        gbc.writeMem(0x60e6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6fff, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00D0
        gbc.setState(0xaebd, 0x776f, 0xcac0, 0x59a0, 0x1111, 0xfca9, 0x1, 0x0);
        gbc.writeMem(0xaebd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x776f, gbc.sp());
        EXPECT(0xaebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebd));
        EXPECT(0x7c, gbc.readMem(0xaebe));
        // CB 7C 00D1
        gbc.setState(0xdc, 0x8557, 0x9880, 0x1b2d, 0x7c08, 0x122b, 0x1, 0x1);
        gbc.writeMem(0xdc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0xde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00D2
        gbc.setState(0x2d7, 0x6a77, 0xdef0, 0x8b2d, 0x9967, 0x36a, 0x1, 0x1);
        gbc.writeMem(0x2d7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0x2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00D3
        gbc.setState(0xd821, 0xb406, 0xa980, 0xc210, 0xee96, 0xf126, 0x1, 0x0);
        gbc.writeMem(0xd821, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0xd823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd821));
        EXPECT(0x7c, gbc.readMem(0xd822));
        // CB 7C 00D4
        gbc.setState(0x4fe3, 0x2389, 0xcff0, 0x5eef, 0xfc32, 0xf3e8, 0x0, 0x0);
        gbc.writeMem(0x4fe3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2389, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00D5
        gbc.setState(0x7636, 0xb493, 0x32a0, 0x35e7, 0x46a8, 0xb29e, 0x1, 0x1);
        gbc.writeMem(0x7636, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb493, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00D6
        gbc.setState(0x6560, 0x3a4a, 0x3f10, 0xeee0, 0x7bb9, 0x9fdb, 0x0, 0x1);
        gbc.writeMem(0x6560, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3a4a, gbc.sp());
        EXPECT(0x6562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00D7
        gbc.setState(0x7f1f, 0x40aa, 0x5980, 0x9fb2, 0x1742, 0x36cc, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00D8
        gbc.setState(0x5f77, 0x72b4, 0xebb0, 0x17cc, 0xad7f, 0x4c5d, 0x0, 0x0);
        gbc.writeMem(0x5f77, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00D9
        gbc.setState(0xdb4a, 0xf2cb, 0x5d60, 0x90dc, 0xe3fd, 0x28d0, 0x1, 0x1);
        gbc.writeMem(0xdb4a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf2cb, gbc.sp());
        EXPECT(0xdb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4a));
        EXPECT(0x7c, gbc.readMem(0xdb4b));
        // CB 7C 00DA
        gbc.setState(0x827b, 0x174c, 0x9ef0, 0x8d39, 0xa0b9, 0x401c, 0x1, 0x0);
        gbc.writeMem(0x827b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x174c, gbc.sp());
        EXPECT(0x827d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827b));
        EXPECT(0x7c, gbc.readMem(0x827c));
        // CB 7C 00DB
        gbc.setState(0xd8e9, 0x877c, 0x9720, 0x82c3, 0xdbf4, 0x5cf7, 0x0, 0x0);
        gbc.writeMem(0xd8e9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x877c, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e9));
        EXPECT(0x7c, gbc.readMem(0xd8ea));
        // CB 7C 00DC
        gbc.setState(0x6e83, 0xe776, 0x8330, 0x3d28, 0xd9d5, 0x91fa, 0x0, 0x1);
        gbc.writeMem(0x6e83, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00DD
        gbc.setState(0xad66, 0x1667, 0xeb80, 0xc38c, 0x390a, 0xa823, 0x1, 0x0);
        gbc.writeMem(0xad66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0xad68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad66));
        EXPECT(0x7c, gbc.readMem(0xad67));
        // CB 7C 00DE
        gbc.setState(0x7bc, 0x6fff, 0x2360, 0x4822, 0xb339, 0x1741, 0x1, 0x1);
        gbc.writeMem(0x7bc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6fff, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00DF
        gbc.setState(0xafd1, 0x9d28, 0x7f80, 0xd040, 0x9ab1, 0x9bc4, 0x0, 0x0);
        gbc.writeMem(0xafd1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0xafd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd1));
        EXPECT(0x7c, gbc.readMem(0xafd2));
        // CB 7C 00E0
        gbc.setState(0xd911, 0x8ea7, 0xa3e0, 0xd863, 0x2eec, 0xbaaa, 0x1, 0x0);
        gbc.writeMem(0xd911, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0xd913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd911));
        EXPECT(0x7c, gbc.readMem(0xd912));
        // CB 7C 00E1
        gbc.setState(0x36dc, 0x9418, 0x3f60, 0xb711, 0xbbf7, 0xf01e, 0x0, 0x0);
        gbc.writeMem(0x36dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00E2
        gbc.setState(0x62fa, 0xa4e, 0x3d10, 0xca59, 0xfd3b, 0x6a85, 0x0, 0x0);
        gbc.writeMem(0x62fa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00E4
        gbc.setState(0x36eb, 0xddd8, 0xcba0, 0x8d6, 0x9b28, 0x19eb, 0x1, 0x0);
        gbc.writeMem(0x36eb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xddd8, gbc.sp());
        EXPECT(0x36ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00E5
        gbc.setState(0x16f2, 0x74f1, 0xbd00, 0xc0a2, 0x7c6b, 0x2584, 0x1, 0x1);
        gbc.writeMem(0x16f2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x74f1, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00E7
        gbc.setState(0xe408, 0x2c12, 0xe910, 0x9e45, 0xca47, 0x25b9, 0x0, 0x0);
        gbc.writeMem(0xe408, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2c12, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe408));
        EXPECT(0x7c, gbc.readMem(0xe409));
        // CB 7C 00E8
        gbc.setState(0xac9c, 0x5e2d, 0xef0, 0x8bfe, 0xf442, 0xdcf6, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5e2d, gbc.sp());
        EXPECT(0xac9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9c));
        EXPECT(0x7c, gbc.readMem(0xac9d));
        // CB 7C 00E9
        gbc.setState(0xcaf6, 0x2176, 0xf400, 0x8220, 0xa271, 0xe044, 0x1, 0x0);
        gbc.writeMem(0xcaf6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2176, gbc.sp());
        EXPECT(0xcaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf6));
        EXPECT(0x7c, gbc.readMem(0xcaf7));
        // CB 7C 00EA
        gbc.setState(0x767e, 0x91d3, 0xbf40, 0x67c8, 0xaaa8, 0x6936, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00EB
        gbc.setState(0x2348, 0xcf2f, 0x6830, 0xc5f6, 0xdf5a, 0x5d87, 0x0, 0x0);
        gbc.writeMem(0x2348, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x234a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00EC
        gbc.setState(0x5098, 0xff29, 0x63b0, 0x20ba, 0x8dcb, 0xedbe, 0x0, 0x0);
        gbc.writeMem(0x5098, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xff29, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00ED
        gbc.setState(0xa6a8, 0x1291, 0x3280, 0x2db5, 0xad8b, 0xa232, 0x0, 0x1);
        gbc.writeMem(0xa6a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1291, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0x7c, gbc.readMem(0xa6a9));
        // CB 7C 00EE
        gbc.setState(0xc82d, 0x5647, 0xec60, 0x7725, 0x6ce2, 0x4ee8, 0x0, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5647, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0x7c, gbc.readMem(0xc82e));
        // CB 7C 00EF
        gbc.setState(0x3c14, 0x2e7a, 0x46c0, 0x56db, 0xffaa, 0xd001, 0x1, 0x1);
        gbc.writeMem(0x3c14, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2e7a, gbc.sp());
        EXPECT(0x3c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 00F0
        gbc.setState(0xaa, 0x8703, 0x2690, 0xda6, 0x95a5, 0x85c0, 0x0, 0x1);
        gbc.writeMem(0xaa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F1
        gbc.setState(0xed6, 0x8ffa, 0x28b0, 0xe2cd, 0x36da, 0xcc73, 0x1, 0x1);
        gbc.writeMem(0xed6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8ffa, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F2
        gbc.setState(0xeaa, 0x6ae5, 0xb770, 0x693b, 0x3696, 0x52b6, 0x0, 0x0);
        gbc.writeMem(0xeaa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6ae5, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F4
        gbc.setState(0x734c, 0xf2ed, 0xeaf0, 0xb47c, 0x8612, 0x59f, 0x0, 0x1);
        gbc.writeMem(0x734c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf2ed, gbc.sp());
        EXPECT(0x734e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F5
        gbc.setState(0xbd9, 0x1c4b, 0xfed0, 0x5c45, 0xf95e, 0xf76f, 0x0, 0x1);
        gbc.writeMem(0xbd9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1c4b, gbc.sp());
        EXPECT(0xbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F6
        gbc.setState(0xdbf9, 0xa4c5, 0xec40, 0xea71, 0xe8e5, 0xff12, 0x1, 0x0);
        gbc.writeMem(0xdbf9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf9));
        EXPECT(0x7c, gbc.readMem(0xdbfa));
        // CB 7C 00F7
        gbc.setState(0xd4dc, 0xb0d3, 0x7d30, 0xb0d6, 0x81c1, 0x7346, 0x0, 0x0);
        gbc.writeMem(0xd4dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0xd4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4dc));
        EXPECT(0x7c, gbc.readMem(0xd4dd));
        // CB 7C 00F8
        gbc.setState(0x172d, 0xf59f, 0xb510, 0xda7a, 0xaed0, 0xe2fd, 0x0, 0x1);
        gbc.writeMem(0x172d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf59f, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00F9
        gbc.setState(0x472, 0xe093, 0xfc30, 0x9671, 0x3935, 0x7e23, 0x1, 0x1);
        gbc.writeMem(0x472, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0x474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00FA
        gbc.setState(0xec44, 0x279d, 0x2f70, 0x316c, 0xc427, 0x6c87, 0x1, 0x1);
        gbc.writeMem(0xec44, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0xec46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec44));
        EXPECT(0x7c, gbc.readMem(0xec45));
        // CB 7C 00FB
        gbc.setState(0x2d0a, 0x2f33, 0xf2b0, 0x7525, 0x6a22, 0xd743, 0x0, 0x0);
        gbc.writeMem(0x2d0a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 00FD
        gbc.setState(0xadf2, 0xe76, 0x9cd0, 0x6d81, 0x2ebe, 0xf9b3, 0x1, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe76, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0x7c, gbc.readMem(0xadf3));
        // CB 7C 00FE
        gbc.setState(0x46cc, 0x3ebd, 0x7830, 0x903b, 0x4b3e, 0x4e6c, 0x0, 0x1);
        gbc.writeMem(0x46cc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0x46ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0100
        gbc.setState(0x3230, 0x7e2c, 0x62e0, 0xfb97, 0xae4f, 0x9768, 0x1, 0x1);
        gbc.writeMem(0x3230, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7e2c, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0101
        gbc.setState(0x76b, 0x46bb, 0x4710, 0x3a2d, 0x4430, 0x3f75, 0x1, 0x0);
        gbc.writeMem(0x76b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x46bb, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0102
        gbc.setState(0xa0c1, 0x9e1d, 0xc70, 0x9aa3, 0x65a9, 0xca31, 0x1, 0x1);
        gbc.writeMem(0xa0c1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c1));
        EXPECT(0x7c, gbc.readMem(0xa0c2));
        // CB 7C 0103
        gbc.setState(0x35d3, 0xcb23, 0x1360, 0xd836, 0x6b79, 0x7944, 0x1, 0x0);
        gbc.writeMem(0x35d3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcb23, gbc.sp());
        EXPECT(0x35d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0104
        gbc.setState(0xcfdb, 0x8c9d, 0x1af0, 0xea46, 0x82ce, 0xb0a6, 0x1, 0x0);
        gbc.writeMem(0xcfdb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8c9d, gbc.sp());
        EXPECT(0xcfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdb));
        EXPECT(0x7c, gbc.readMem(0xcfdc));
        // CB 7C 0105
        gbc.setState(0x79e5, 0x72d7, 0xbb10, 0x5809, 0xcea3, 0x149a, 0x0, 0x0);
        gbc.writeMem(0x79e5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x72d7, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0106
        gbc.setState(0x2183, 0x773a, 0x57c0, 0xf9e8, 0xa02e, 0x6389, 0x0, 0x1);
        gbc.writeMem(0x2183, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x2185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0107
        gbc.setState(0xe771, 0x26e4, 0x6780, 0x1a22, 0x34b3, 0x4d3c, 0x1, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe771));
        EXPECT(0x7c, gbc.readMem(0xe772));
        // CB 7C 0108
        gbc.setState(0x81ce, 0x3045, 0x8220, 0x7dbb, 0x803e, 0xf888, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ce));
        EXPECT(0x7c, gbc.readMem(0x81cf));
        // CB 7C 0109
        gbc.setState(0xa512, 0xc256, 0xeda0, 0xc0d9, 0x94a9, 0x1d1d, 0x0, 0x1);
        gbc.writeMem(0xa512, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc256, gbc.sp());
        EXPECT(0xa514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa512));
        EXPECT(0x7c, gbc.readMem(0xa513));
        // CB 7C 010A
        gbc.setState(0x9030, 0xf1b2, 0xd30, 0x3887, 0xacdc, 0xe93d, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf1b2, gbc.sp());
        EXPECT(0x9032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9030));
        EXPECT(0x7c, gbc.readMem(0x9031));
        // CB 7C 010B
        gbc.setState(0x8569, 0x25d7, 0x2fd0, 0xf064, 0xde13, 0x750b, 0x0, 0x0);
        gbc.writeMem(0x8569, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8569));
        EXPECT(0x7c, gbc.readMem(0x856a));
        // CB 7C 010C
        gbc.setState(0x1432, 0xb733, 0x1640, 0x2485, 0x5ab3, 0xda2d, 0x0, 0x1);
        gbc.writeMem(0x1432, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb733, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 010D
        gbc.setState(0x964f, 0xf57d, 0x440, 0xc78a, 0xeab3, 0xdf6d, 0x0, 0x1);
        gbc.writeMem(0x964f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0x9651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964f));
        EXPECT(0x7c, gbc.readMem(0x9650));
        // CB 7C 010E
        gbc.setState(0x61a4, 0x440e, 0x4140, 0x561d, 0xd9c5, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x61a4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x440e, gbc.sp());
        EXPECT(0x61a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 010F
        gbc.setState(0xe59e, 0x2ece, 0x49b0, 0x2540, 0x2281, 0xa8fd, 0x1, 0x0);
        gbc.writeMem(0xe59e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ece, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59e));
        EXPECT(0x7c, gbc.readMem(0xe59f));
        // CB 7C 0110
        gbc.setState(0x1eda, 0x2544, 0x1d70, 0xadb1, 0xb80e, 0x8d05, 0x0, 0x1);
        gbc.writeMem(0x1eda, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0x1edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0111
        gbc.setState(0xbc48, 0x6fd6, 0x43f0, 0xfe4c, 0x3b3b, 0x3f7a, 0x0, 0x1);
        gbc.writeMem(0xbc48, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6fd6, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc48));
        EXPECT(0x7c, gbc.readMem(0xbc49));
        // CB 7C 0112
        gbc.setState(0xca48, 0x8416, 0x5830, 0xffed, 0xe1ba, 0xbc9e, 0x0, 0x1);
        gbc.writeMem(0xca48, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca48));
        EXPECT(0x7c, gbc.readMem(0xca49));
        // CB 7C 0113
        gbc.setState(0x1322, 0x4211, 0xc630, 0x993d, 0xe581, 0x27cc, 0x1, 0x1);
        gbc.writeMem(0x1322, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4211, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0114
        gbc.setState(0x35e5, 0xf785, 0x3330, 0xcf99, 0x3cdd, 0x910, 0x1, 0x0);
        gbc.writeMem(0x35e5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf785, gbc.sp());
        EXPECT(0x35e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0115
        gbc.setState(0x4efc, 0x4d63, 0xea20, 0x220f, 0x4ce9, 0x77c6, 0x1, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d63, gbc.sp());
        EXPECT(0x4efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0116
        gbc.setState(0x81d, 0x7a4, 0x2e10, 0x2a76, 0x37ef, 0x254, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7a4, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0117
        gbc.setState(0x7fff, 0x5d07, 0x4ab0, 0x519, 0xfce0, 0xa61b, 0x0, 0x0);
        gbc.writeMem(0x7fff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5d07, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8000));
        // CB 7C 0119
        gbc.setState(0xb8eb, 0x25f4, 0x4e30, 0x7b3a, 0xa55a, 0x8c50, 0x0, 0x0);
        gbc.writeMem(0xb8eb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x25f4, gbc.sp());
        EXPECT(0xb8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8eb));
        EXPECT(0x7c, gbc.readMem(0xb8ec));
        // CB 7C 011A
        gbc.setState(0xb768, 0x11cb, 0x2050, 0xb77e, 0x207, 0x8f65, 0x0, 0x1);
        gbc.writeMem(0xb768, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x11cb, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb768));
        EXPECT(0x7c, gbc.readMem(0xb769));
        // CB 7C 011B
        gbc.setState(0xbd27, 0x337b, 0x55a0, 0x60da, 0x3e08, 0x52fb, 0x0, 0x0);
        gbc.writeMem(0xbd27, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x337b, gbc.sp());
        EXPECT(0xbd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd27));
        EXPECT(0x7c, gbc.readMem(0xbd28));
        // CB 7C 011D
        gbc.setState(0xe556, 0xc771, 0x34c0, 0x3959, 0x818f, 0x2a3, 0x1, 0x0);
        gbc.writeMem(0xe556, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc771, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe556));
        EXPECT(0x7c, gbc.readMem(0xe557));
        // CB 7C 011E
        gbc.setState(0x591b, 0x5fc3, 0x5610, 0x1fb, 0x1f90, 0xf850, 0x0, 0x1);
        gbc.writeMem(0x591b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0x591d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 011F
        gbc.setState(0xc133, 0x7e60, 0xbcf0, 0x39a8, 0xe86a, 0xe3a9, 0x0, 0x0);
        gbc.writeMem(0xc133, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7e60, gbc.sp());
        EXPECT(0xc135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc133));
        EXPECT(0x7c, gbc.readMem(0xc134));
        // CB 7C 0120
        gbc.setState(0x8836, 0x5f61, 0x8b0, 0x4979, 0xc2b4, 0x2aac, 0x0, 0x1);
        gbc.writeMem(0x8836, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5f61, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8836));
        EXPECT(0x7c, gbc.readMem(0x8837));
        // CB 7C 0121
        gbc.setState(0x5f03, 0x3754, 0x5b0, 0xe156, 0xe24f, 0x5734, 0x0, 0x0);
        gbc.writeMem(0x5f03, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3754, gbc.sp());
        EXPECT(0x5f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0122
        gbc.setState(0xda35, 0x35a2, 0xb160, 0xb373, 0xf662, 0x2a9d, 0x1, 0x1);
        gbc.writeMem(0xda35, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda35));
        EXPECT(0x7c, gbc.readMem(0xda36));
        // CB 7C 0123
        gbc.setState(0x828f, 0xf6ac, 0x3570, 0x56f9, 0xaeee, 0x9598, 0x1, 0x0);
        gbc.writeMem(0x828f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x8291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828f));
        EXPECT(0x7c, gbc.readMem(0x8290));
        // CB 7C 0124
        gbc.setState(0xd681, 0xfe4e, 0x65f0, 0x6d05, 0x70ba, 0x5f61, 0x1, 0x1);
        gbc.writeMem(0xd681, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0xd683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd681));
        EXPECT(0x7c, gbc.readMem(0xd682));
        // CB 7C 0126
        gbc.setState(0x8973, 0x61e3, 0xadf0, 0xc758, 0x10d3, 0xd8f9, 0x1, 0x1);
        gbc.writeMem(0x8973, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0x8975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8973));
        EXPECT(0x7c, gbc.readMem(0x8974));
        // CB 7C 0127
        gbc.setState(0xbcd9, 0x7a8a, 0x4580, 0x9903, 0x2ad0, 0x658e, 0x1, 0x0);
        gbc.writeMem(0xbcd9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7a8a, gbc.sp());
        EXPECT(0xbcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd9));
        EXPECT(0x7c, gbc.readMem(0xbcda));
        // CB 7C 0128
        gbc.setState(0xda52, 0x4cb5, 0x76b0, 0xda97, 0x3b39, 0x30d, 0x0, 0x0);
        gbc.writeMem(0xda52, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4cb5, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda52));
        EXPECT(0x7c, gbc.readMem(0xda53));
        // CB 7C 0129
        gbc.setState(0x8d53, 0xc343, 0x4700, 0x141f, 0xa6ca, 0x953a, 0x0, 0x1);
        gbc.writeMem(0x8d53, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc343, gbc.sp());
        EXPECT(0x8d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d53));
        EXPECT(0x7c, gbc.readMem(0x8d54));
        // CB 7C 012A
        gbc.setState(0xa4b1, 0x372c, 0xf760, 0x44a2, 0x49a1, 0x278c, 0x0, 0x1);
        gbc.writeMem(0xa4b1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b1));
        EXPECT(0x7c, gbc.readMem(0xa4b2));
        // CB 7C 012B
        gbc.setState(0xd2f0, 0xc1a0, 0x7730, 0x8ee2, 0xf6c6, 0xeb6d, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0xd2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f0));
        EXPECT(0x7c, gbc.readMem(0xd2f1));
        // CB 7C 012C
        gbc.setState(0xc23b, 0x18e1, 0xd980, 0x7a41, 0xdbeb, 0x26bd, 0x0, 0x0);
        gbc.writeMem(0xc23b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0xc23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23b));
        EXPECT(0x7c, gbc.readMem(0xc23c));
        // CB 7C 012D
        gbc.setState(0x2ae4, 0x703e, 0x9c40, 0x4bd2, 0xcfe8, 0xefa0, 0x1, 0x0);
        gbc.writeMem(0x2ae4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0x2ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 012E
        gbc.setState(0x7f15, 0x275d, 0x3b80, 0xc0c3, 0x94f, 0xe885, 0x0, 0x1);
        gbc.writeMem(0x7f15, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x275d, gbc.sp());
        EXPECT(0x7f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 012F
        gbc.setState(0xde53, 0xa9df, 0xb9b0, 0x6dfb, 0xd62e, 0xbaeb, 0x0, 0x1);
        gbc.writeMem(0xde53, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde53));
        EXPECT(0x7c, gbc.readMem(0xde54));
        // CB 7C 0130
        gbc.setState(0x4ce6, 0xe2c2, 0x82c0, 0x8084, 0x5ccb, 0x601b, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x4ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0131
        gbc.setState(0x5e73, 0x52dc, 0x6cc0, 0x149, 0x1f0, 0xbef8, 0x0, 0x1);
        gbc.writeMem(0x5e73, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x52dc, gbc.sp());
        EXPECT(0x5e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0132
        gbc.setState(0xa449, 0x94fb, 0x7630, 0x505d, 0xfb48, 0x3797, 0x0, 0x1);
        gbc.writeMem(0xa449, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0xa44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa449));
        EXPECT(0x7c, gbc.readMem(0xa44a));
        // CB 7C 0133
        gbc.setState(0x7325, 0x6ea2, 0x9b90, 0x6a05, 0xff1c, 0x1f70, 0x0, 0x0);
        gbc.writeMem(0x7325, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6ea2, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0134
        gbc.setState(0xdaec, 0xd51c, 0xf730, 0xd28f, 0xe9b1, 0x86c7, 0x0, 0x1);
        gbc.writeMem(0xdaec, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd51c, gbc.sp());
        EXPECT(0xdaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaec));
        EXPECT(0x7c, gbc.readMem(0xdaed));
        // CB 7C 0135
        gbc.setState(0x2b9d, 0x6346, 0xe5d0, 0xb9a2, 0x8e4e, 0xdff2, 0x0, 0x0);
        gbc.writeMem(0x2b9d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0136
        gbc.setState(0xb5da, 0x462c, 0xc710, 0xea1c, 0xa59, 0x691e, 0x0, 0x1);
        gbc.writeMem(0xb5da, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x462c, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5da));
        EXPECT(0x7c, gbc.readMem(0xb5db));
        // CB 7C 0137
        gbc.setState(0x9235, 0xe7c, 0xdeb0, 0x2997, 0x3d4c, 0x1bf7, 0x1, 0x0);
        gbc.writeMem(0x9235, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe7c, gbc.sp());
        EXPECT(0x9237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9235));
        EXPECT(0x7c, gbc.readMem(0x9236));
        // CB 7C 0138
        gbc.setState(0x8079, 0xef6c, 0x71e0, 0x3c20, 0xf016, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x8079, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xef6c, gbc.sp());
        EXPECT(0x807b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8079));
        EXPECT(0x7c, gbc.readMem(0x807a));
        // CB 7C 0139
        gbc.setState(0xce48, 0x5970, 0x6af0, 0x70d8, 0xa3cf, 0x7252, 0x0, 0x1);
        gbc.writeMem(0xce48, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5970, gbc.sp());
        EXPECT(0xce4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce48));
        EXPECT(0x7c, gbc.readMem(0xce49));
        // CB 7C 013A
        gbc.setState(0xbf6e, 0xb244, 0x3ea0, 0x7274, 0x4012, 0xa31e, 0x0, 0x0);
        gbc.writeMem(0xbf6e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0xbf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6e));
        EXPECT(0x7c, gbc.readMem(0xbf6f));
        // CB 7C 013B
        gbc.setState(0x6ea5, 0x6d4e, 0xb0a0, 0x160c, 0x255e, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0x6ea5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0x6ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 013C
        gbc.setState(0xeee9, 0x2447, 0xbbb0, 0x2c2, 0x851c, 0xa3e8, 0x0, 0x1);
        gbc.writeMem(0xeee9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2447, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee9));
        EXPECT(0x7c, gbc.readMem(0xeeea));
        // CB 7C 013E
        gbc.setState(0xe75c, 0x50bf, 0x8ba0, 0xaffd, 0x8eaa, 0x1143, 0x1, 0x1);
        gbc.writeMem(0xe75c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x50bf, gbc.sp());
        EXPECT(0xe75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75c));
        EXPECT(0x7c, gbc.readMem(0xe75d));
        // CB 7C 013F
        gbc.setState(0xee3a, 0xfab2, 0x1b50, 0xf4d0, 0x6973, 0xdcf2, 0x1, 0x1);
        gbc.writeMem(0xee3a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfab2, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3a));
        EXPECT(0x7c, gbc.readMem(0xee3b));
        // CB 7C 0140
        gbc.setState(0x1c6e, 0xfd7b, 0x2ce0, 0x74ba, 0x4332, 0x82bb, 0x1, 0x1);
        gbc.writeMem(0x1c6e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfd7b, gbc.sp());
        EXPECT(0x1c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0141
        gbc.setState(0x3ea8, 0x3bd, 0xc940, 0xd5ad, 0xfda5, 0xc6cb, 0x0, 0x1);
        gbc.writeMem(0x3ea8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3bd, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0142
        gbc.setState(0xaa18, 0x2a8f, 0x3710, 0x1266, 0xb4c5, 0xe77b, 0x1, 0x1);
        gbc.writeMem(0xaa18, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2a8f, gbc.sp());
        EXPECT(0xaa1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa18));
        EXPECT(0x7c, gbc.readMem(0xaa19));
        // CB 7C 0143
        gbc.setState(0xa109, 0x4965, 0x96b0, 0xd89c, 0x92f8, 0xe272, 0x1, 0x0);
        gbc.writeMem(0xa109, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0xa10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa109));
        EXPECT(0x7c, gbc.readMem(0xa10a));
        // CB 7C 0144
        gbc.setState(0x24f8, 0xc0bd, 0x1550, 0xfbf5, 0xd237, 0xa9f6, 0x0, 0x0);
        gbc.writeMem(0x24f8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0x24fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0145
        gbc.setState(0xddcf, 0x78ae, 0xfe60, 0x92fc, 0x7fd5, 0x6152, 0x1, 0x1);
        gbc.writeMem(0xddcf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x78ae, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcf));
        EXPECT(0x7c, gbc.readMem(0xddd0));
        // CB 7C 0146
        gbc.setState(0xc002, 0x1a01, 0x91d0, 0xed46, 0x4192, 0xdc9b, 0x0, 0x0);
        gbc.writeMem(0xc002, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0x7c, gbc.readMem(0xc003));
        // CB 7C 0147
        gbc.setState(0x2891, 0xa561, 0x6040, 0x4c44, 0xb4f3, 0xaf4d, 0x0, 0x0);
        gbc.writeMem(0x2891, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0148
        gbc.setState(0xea36, 0x7c09, 0x1750, 0xc14e, 0x233a, 0x314, 0x0, 0x0);
        gbc.writeMem(0xea36, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7c09, gbc.sp());
        EXPECT(0xea38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea36));
        EXPECT(0x7c, gbc.readMem(0xea37));
        // CB 7C 0149
        gbc.setState(0x3cf1, 0xc386, 0x6340, 0xe6c7, 0x7f63, 0x28ee, 0x1, 0x0);
        gbc.writeMem(0x3cf1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0x3cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 014A
        gbc.setState(0x5698, 0x27a6, 0x350, 0xe8ad, 0x20c4, 0x9838, 0x1, 0x1);
        gbc.writeMem(0x5698, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 014B
        gbc.setState(0xb759, 0x9494, 0xb720, 0x948e, 0x54c0, 0xff56, 0x1, 0x1);
        gbc.writeMem(0xb759, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb759));
        EXPECT(0x7c, gbc.readMem(0xb75a));
        // CB 7C 014C
        gbc.setState(0x70ed, 0xffde, 0xd2c0, 0xd7ca, 0xef04, 0x39af, 0x0, 0x1);
        gbc.writeMem(0x70ed, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xffde, gbc.sp());
        EXPECT(0x70ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 014D
        gbc.setState(0x7fcc, 0xf9b0, 0x5810, 0x6ff6, 0x944b, 0xe70d, 0x1, 0x1);
        gbc.writeMem(0x7fcc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf9b0, gbc.sp());
        EXPECT(0x7fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 014E
        gbc.setState(0x7379, 0x5d8a, 0x4800, 0x2849, 0x7924, 0x135c, 0x1, 0x0);
        gbc.writeMem(0x7379, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x737b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 014F
        gbc.setState(0x625b, 0xea68, 0x7470, 0x59b, 0x161c, 0xccfb, 0x1, 0x1);
        gbc.writeMem(0x625b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xea68, gbc.sp());
        EXPECT(0x625d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0150
        gbc.setState(0x18ff, 0x67b6, 0x2150, 0x84db, 0xca63, 0xaa07, 0x1, 0x0);
        gbc.writeMem(0x18ff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0x1901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0151
        gbc.setState(0xb542, 0x1d86, 0x2070, 0x114d, 0x6552, 0x341e, 0x1, 0x0);
        gbc.writeMem(0xb542, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1d86, gbc.sp());
        EXPECT(0xb544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb542));
        EXPECT(0x7c, gbc.readMem(0xb543));
        // CB 7C 0152
        gbc.setState(0xa41f, 0xd7c, 0x9f40, 0x8b68, 0x58a9, 0xdc6c, 0x0, 0x0);
        gbc.writeMem(0xa41f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0xa421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41f));
        EXPECT(0x7c, gbc.readMem(0xa420));
        // CB 7C 0153
        gbc.setState(0xe359, 0x509c, 0x67c0, 0xc62f, 0xaa20, 0x7a24, 0x1, 0x0);
        gbc.writeMem(0xe359, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0xe35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe359));
        EXPECT(0x7c, gbc.readMem(0xe35a));
        // CB 7C 0154
        gbc.setState(0xb678, 0xafd5, 0x24c0, 0xffef, 0x9652, 0x1074, 0x0, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb678));
        EXPECT(0x7c, gbc.readMem(0xb679));
        // CB 7C 0155
        gbc.setState(0x2583, 0x5572, 0x2690, 0xda2b, 0x962, 0x2e4, 0x1, 0x0);
        gbc.writeMem(0x2583, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5572, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0156
        gbc.setState(0x2821, 0xde7a, 0x53c0, 0x5de, 0xb544, 0x20f, 0x0, 0x1);
        gbc.writeMem(0x2821, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0x2823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0157
        gbc.setState(0x4528, 0x42b2, 0x8380, 0x9618, 0x79af, 0xa6ed, 0x0, 0x0);
        gbc.writeMem(0x4528, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0x452a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0158
        gbc.setState(0x43a1, 0xff3e, 0x9ee0, 0xdc5b, 0x6ba0, 0xfc85, 0x0, 0x0);
        gbc.writeMem(0x43a1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0159
        gbc.setState(0x31ce, 0x36f5, 0x2ca0, 0x9c5d, 0x62d1, 0x5920, 0x0, 0x1);
        gbc.writeMem(0x31ce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0x31d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 015A
        gbc.setState(0x283e, 0xce95, 0x9a70, 0xff90, 0x6ae0, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 015B
        gbc.setState(0x86ba, 0xa412, 0x2340, 0x793e, 0x30e5, 0x1c3, 0x0, 0x1);
        gbc.writeMem(0x86ba, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0x86bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ba));
        EXPECT(0x7c, gbc.readMem(0x86bb));
        // CB 7C 015C
        gbc.setState(0x3f03, 0xcbfb, 0x8670, 0x7e8a, 0x57bc, 0x1d28, 0x0, 0x1);
        gbc.writeMem(0x3f03, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcbfb, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 015D
        gbc.setState(0xd4d9, 0x58f7, 0xbf90, 0xa4b, 0xfa73, 0xccf, 0x1, 0x0);
        gbc.writeMem(0xd4d9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x58f7, gbc.sp());
        EXPECT(0xd4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d9));
        EXPECT(0x7c, gbc.readMem(0xd4da));
        // CB 7C 015E
        gbc.setState(0x6e4e, 0x5acc, 0x6ce0, 0x6dd0, 0xc928, 0x848e, 0x0, 0x0);
        gbc.writeMem(0x6e4e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5acc, gbc.sp());
        EXPECT(0x6e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 015F
        gbc.setState(0x4b0b, 0xfd51, 0xfe80, 0x210b, 0xba2, 0x847c, 0x1, 0x0);
        gbc.writeMem(0x4b0b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0x4b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0160
        gbc.setState(0x13e7, 0x49f, 0x5cf0, 0x98f7, 0x6ec0, 0x5d3c, 0x0, 0x1);
        gbc.writeMem(0x13e7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0x13e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0161
        gbc.setState(0x7181, 0xa21d, 0xeb70, 0x65dc, 0xfbad, 0x40a, 0x1, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa21d, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0162
        gbc.setState(0xcb6, 0x6ef2, 0xe910, 0x5c29, 0x6e55, 0x6d54, 0x1, 0x1);
        gbc.writeMem(0xcb6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0xcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0163
        gbc.setState(0x6785, 0xea, 0x9400, 0x5405, 0x8f72, 0xbc33, 0x1, 0x1);
        gbc.writeMem(0x6785, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xea, gbc.sp());
        EXPECT(0x6787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0164
        gbc.setState(0xed3b, 0x5a5b, 0xe7f0, 0x3352, 0x4407, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0xed3b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5a5b, gbc.sp());
        EXPECT(0xed3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3b));
        EXPECT(0x7c, gbc.readMem(0xed3c));
        // CB 7C 0165
        gbc.setState(0x80e8, 0x281, 0xc990, 0xf4aa, 0xd412, 0x58e6, 0x1, 0x0);
        gbc.writeMem(0x80e8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e8));
        EXPECT(0x7c, gbc.readMem(0x80e9));
        // CB 7C 0166
        gbc.setState(0xb4ee, 0x9d5b, 0x8e00, 0x729a, 0x9173, 0xf1fe, 0x1, 0x1);
        gbc.writeMem(0xb4ee, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9d5b, gbc.sp());
        EXPECT(0xb4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ee));
        EXPECT(0x7c, gbc.readMem(0xb4ef));
        // CB 7C 0167
        gbc.setState(0xcc12, 0xd6cb, 0x9140, 0xa3a9, 0x9a94, 0xfe83, 0x0, 0x0);
        gbc.writeMem(0xcc12, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc12));
        EXPECT(0x7c, gbc.readMem(0xcc13));
        // CB 7C 0168
        gbc.setState(0xd51a, 0x10a9, 0xaeb0, 0xedf2, 0xc2e4, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0xd51a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x10a9, gbc.sp());
        EXPECT(0xd51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51a));
        EXPECT(0x7c, gbc.readMem(0xd51b));
        // CB 7C 0169
        gbc.setState(0xca29, 0x9841, 0x9870, 0x40e1, 0xf4e0, 0x636, 0x1, 0x1);
        gbc.writeMem(0xca29, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9841, gbc.sp());
        EXPECT(0xca2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca29));
        EXPECT(0x7c, gbc.readMem(0xca2a));
        // CB 7C 016A
        gbc.setState(0xa841, 0x5086, 0x3a00, 0xa0e2, 0x73ff, 0x56c8, 0x0, 0x1);
        gbc.writeMem(0xa841, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5086, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa841));
        EXPECT(0x7c, gbc.readMem(0xa842));
        // CB 7C 016C
        gbc.setState(0x4846, 0xeb3c, 0xc890, 0xe618, 0x9529, 0x3599, 0x0, 0x1);
        gbc.writeMem(0x4846, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 016D
        gbc.setState(0xccb3, 0x7b57, 0x9a20, 0xd596, 0x55f4, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0xccb3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7b57, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb3));
        EXPECT(0x7c, gbc.readMem(0xccb4));
        // CB 7C 016E
        gbc.setState(0xe6e1, 0x17f8, 0x6c20, 0x616b, 0xc029, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0xe6e1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x17f8, gbc.sp());
        EXPECT(0xe6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e1));
        EXPECT(0x7c, gbc.readMem(0xe6e2));
        // CB 7C 016F
        gbc.setState(0xd8d7, 0x5784, 0x6430, 0x4291, 0xd48b, 0x2da1, 0x0, 0x1);
        gbc.writeMem(0xd8d7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0xd8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d7));
        EXPECT(0x7c, gbc.readMem(0xd8d8));
        // CB 7C 0170
        gbc.setState(0x1c87, 0xcb47, 0x5d90, 0x2688, 0x46bd, 0xe635, 0x0, 0x1);
        gbc.writeMem(0x1c87, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcb47, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0171
        gbc.setState(0xee89, 0x5fe5, 0xd60, 0x85a1, 0xbcb8, 0xf21f, 0x0, 0x1);
        gbc.writeMem(0xee89, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5fe5, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee89));
        EXPECT(0x7c, gbc.readMem(0xee8a));
        // CB 7C 0172
        gbc.setState(0x799d, 0x8b47, 0xbfc0, 0x810d, 0x9562, 0x3a39, 0x1, 0x1);
        gbc.writeMem(0x799d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0173
        gbc.setState(0x5ee5, 0x6ce2, 0xb440, 0x32b1, 0x453b, 0x925a, 0x0, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0174
        gbc.setState(0xefc, 0xa666, 0xb030, 0x5978, 0xf035, 0xf618, 0x0, 0x0);
        gbc.writeMem(0xefc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa666, gbc.sp());
        EXPECT(0xefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0175
        gbc.setState(0x5987, 0xc1d6, 0x6620, 0x1683, 0x3eec, 0xfeab, 0x0, 0x0);
        gbc.writeMem(0x5987, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc1d6, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0176
        gbc.setState(0x50a9, 0x3045, 0x6fa0, 0xad83, 0x8832, 0x5f57, 0x0, 0x1);
        gbc.writeMem(0x50a9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0x50ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0177
        gbc.setState(0xb054, 0x1e13, 0xecd0, 0x67ff, 0xa424, 0x85f9, 0x1, 0x0);
        gbc.writeMem(0xb054, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1e13, gbc.sp());
        EXPECT(0xb056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb054));
        EXPECT(0x7c, gbc.readMem(0xb055));
        // CB 7C 0178
        gbc.setState(0xbe90, 0x8866, 0x2070, 0x8451, 0xa2bf, 0x7f1, 0x0, 0x0);
        gbc.writeMem(0xbe90, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0xbe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe90));
        EXPECT(0x7c, gbc.readMem(0xbe91));
        // CB 7C 0179
        gbc.setState(0xee72, 0x53b0, 0xa330, 0xbdb, 0x4149, 0xb969, 0x1, 0x0);
        gbc.writeMem(0xee72, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x53b0, gbc.sp());
        EXPECT(0xee74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee72));
        EXPECT(0x7c, gbc.readMem(0xee73));
        // CB 7C 017A
        gbc.setState(0x7eca, 0xe114, 0xc380, 0x1f83, 0xef24, 0x495d, 0x0, 0x0);
        gbc.writeMem(0x7eca, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0x7ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 017B
        gbc.setState(0xff7, 0x82b, 0x9d10, 0x792b, 0x6650, 0xa14e, 0x0, 0x1);
        gbc.writeMem(0xff7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x82b, gbc.sp());
        EXPECT(0xff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 017C
        gbc.setState(0x4b5c, 0xecb6, 0x1d70, 0xaf86, 0x6b38, 0x2bc, 0x1, 0x1);
        gbc.writeMem(0x4b5c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xecb6, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 017D
        gbc.setState(0x9085, 0x29ec, 0x3fd0, 0xf103, 0xcea8, 0x2957, 0x1, 0x1);
        gbc.writeMem(0x9085, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0x9087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9085));
        EXPECT(0x7c, gbc.readMem(0x9086));
        // CB 7C 017E
        gbc.setState(0x88ef, 0xf653, 0xae90, 0xfd1a, 0x83f6, 0xd31c, 0x0, 0x0);
        gbc.writeMem(0x88ef, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf653, gbc.sp());
        EXPECT(0x88f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ef));
        EXPECT(0x7c, gbc.readMem(0x88f0));
        // CB 7C 017F
        gbc.setState(0x5389, 0xdc2b, 0xf60, 0x8166, 0x8b60, 0x5a6, 0x0, 0x0);
        gbc.writeMem(0x5389, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0180
        gbc.setState(0x8b, 0xb269, 0x2350, 0x19a6, 0xf53d, 0xc802, 0x0, 0x1);
        gbc.writeMem(0x8b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb269, gbc.sp());
        EXPECT(0x8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0181
        gbc.setState(0x7298, 0xf349, 0x6fb0, 0x4624, 0xcc0c, 0xa952, 0x0, 0x1);
        gbc.writeMem(0x7298, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf349, gbc.sp());
        EXPECT(0x729a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0182
        gbc.setState(0x8d79, 0x7655, 0xc460, 0x3e3d, 0xcd98, 0xe5d9, 0x1, 0x1);
        gbc.writeMem(0x8d79, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0x8d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d79));
        EXPECT(0x7c, gbc.readMem(0x8d7a));
        // CB 7C 0183
        gbc.setState(0xb9e5, 0x8ae, 0x2270, 0x1d22, 0xb553, 0xc078, 0x1, 0x1);
        gbc.writeMem(0xb9e5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ae, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e5));
        EXPECT(0x7c, gbc.readMem(0xb9e6));
        // CB 7C 0184
        gbc.setState(0x5992, 0x168c, 0xfa20, 0x7f4b, 0x5a21, 0xc4db, 0x1, 0x0);
        gbc.writeMem(0x5992, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x168c, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0185
        gbc.setState(0x493d, 0x2b38, 0x75b0, 0x371a, 0xaaef, 0xd48f, 0x0, 0x0);
        gbc.writeMem(0x493d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2b38, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0186
        gbc.setState(0x1857, 0x7cec, 0x3c80, 0x99f1, 0xc50e, 0x6ddf, 0x0, 0x1);
        gbc.writeMem(0x1857, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0x1859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0187
        gbc.setState(0xa907, 0x8be6, 0x2330, 0x2810, 0x3eb9, 0xe827, 0x0, 0x1);
        gbc.writeMem(0xa907, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8be6, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa907));
        EXPECT(0x7c, gbc.readMem(0xa908));
        // CB 7C 0188
        gbc.setState(0x23c9, 0xa521, 0x8eb0, 0x574d, 0xd711, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x23c9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa521, gbc.sp());
        EXPECT(0x23cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0189
        gbc.setState(0xc91b, 0xdfb7, 0x9c00, 0xcb5, 0x1a31, 0xd8ec, 0x0, 0x0);
        gbc.writeMem(0xc91b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdfb7, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91b));
        EXPECT(0x7c, gbc.readMem(0xc91c));
        // CB 7C 018A
        gbc.setState(0x4ac4, 0x9049, 0xe630, 0xe333, 0x8e3b, 0xcbf2, 0x1, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9049, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 018B
        gbc.setState(0x186e, 0x8533, 0xe310, 0xa17f, 0xfb3e, 0xef2d, 0x1, 0x0);
        gbc.writeMem(0x186e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 018C
        gbc.setState(0x57ca, 0x8420, 0x56d0, 0x846c, 0x473, 0x4cf3, 0x0, 0x1);
        gbc.writeMem(0x57ca, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 018D
        gbc.setState(0x5bfa, 0x3dca, 0x7e80, 0xcb3c, 0xc9e3, 0x58b0, 0x1, 0x1);
        gbc.writeMem(0x5bfa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3dca, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 018E
        gbc.setState(0x9e59, 0xd690, 0x57c0, 0x3d76, 0xec1a, 0xe83d, 0x1, 0x1);
        gbc.writeMem(0x9e59, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd690, gbc.sp());
        EXPECT(0x9e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e59));
        EXPECT(0x7c, gbc.readMem(0x9e5a));
        // CB 7C 018F
        gbc.setState(0xce70, 0xb1e2, 0x2a20, 0x353b, 0x2472, 0x1bdc, 0x1, 0x0);
        gbc.writeMem(0xce70, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0xce72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce70));
        EXPECT(0x7c, gbc.readMem(0xce71));
        // CB 7C 0190
        gbc.setState(0xc0f0, 0x62bc, 0x76e0, 0x9bc9, 0x98d, 0xe34f, 0x1, 0x1);
        gbc.writeMem(0xc0f0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62bc, gbc.sp());
        EXPECT(0xc0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f0));
        EXPECT(0x7c, gbc.readMem(0xc0f1));
        // CB 7C 0191
        gbc.setState(0x8069, 0x4015, 0x1900, 0x26a6, 0xba10, 0xc76d, 0x0, 0x1);
        gbc.writeMem(0x8069, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4015, gbc.sp());
        EXPECT(0x806b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8069));
        EXPECT(0x7c, gbc.readMem(0x806a));
        // CB 7C 0192
        gbc.setState(0xa0d, 0x9aca, 0x6cf0, 0x5f, 0x26b8, 0x551c, 0x1, 0x0);
        gbc.writeMem(0xa0d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0193
        gbc.setState(0xe237, 0x994e, 0xd840, 0x595, 0x9ee9, 0x7531, 0x1, 0x1);
        gbc.writeMem(0xe237, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x994e, gbc.sp());
        EXPECT(0xe239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe237));
        EXPECT(0x7c, gbc.readMem(0xe238));
        // CB 7C 0194
        gbc.setState(0x95f7, 0xf6f5, 0x53a0, 0x2bf3, 0xc83a, 0xbfad, 0x1, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f7));
        EXPECT(0x7c, gbc.readMem(0x95f8));
        // CB 7C 0196
        gbc.setState(0xb271, 0xc717, 0xffe0, 0x8ea3, 0xe5eb, 0x9138, 0x0, 0x0);
        gbc.writeMem(0xb271, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc717, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb271));
        EXPECT(0x7c, gbc.readMem(0xb272));
        // CB 7C 0198
        gbc.setState(0x8e12, 0x24e5, 0xdb80, 0x5c70, 0x4ce3, 0xf441, 0x1, 0x0);
        gbc.writeMem(0x8e12, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x24e5, gbc.sp());
        EXPECT(0x8e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e12));
        EXPECT(0x7c, gbc.readMem(0x8e13));
        // CB 7C 019A
        gbc.setState(0xce0b, 0x3ca0, 0xbcc0, 0xb2e2, 0x6164, 0x5ce9, 0x1, 0x0);
        gbc.writeMem(0xce0b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3ca0, gbc.sp());
        EXPECT(0xce0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0b));
        EXPECT(0x7c, gbc.readMem(0xce0c));
        // CB 7C 019B
        gbc.setState(0x834, 0x619f, 0x7010, 0xb5d0, 0xf81a, 0xa502, 0x1, 0x0);
        gbc.writeMem(0x834, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x619f, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 019C
        gbc.setState(0xb89b, 0xea48, 0x4460, 0x7a1a, 0x8f68, 0xc07, 0x1, 0x1);
        gbc.writeMem(0xb89b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xea48, gbc.sp());
        EXPECT(0xb89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89b));
        EXPECT(0x7c, gbc.readMem(0xb89c));
        // CB 7C 019D
        gbc.setState(0xc768, 0x9acb, 0x16a0, 0x6345, 0x8d40, 0xbecc, 0x0, 0x0);
        gbc.writeMem(0xc768, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xc76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc768));
        EXPECT(0x7c, gbc.readMem(0xc769));
        // CB 7C 019E
        gbc.setState(0xb6c0, 0x416c, 0x3a00, 0xdf68, 0x362c, 0x5f89, 0x0, 0x1);
        gbc.writeMem(0xb6c0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x416c, gbc.sp());
        EXPECT(0xb6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c0));
        EXPECT(0x7c, gbc.readMem(0xb6c1));
        // CB 7C 019F
        gbc.setState(0xc33, 0xa13b, 0xc380, 0x7a54, 0x58b3, 0x49a3, 0x1, 0x0);
        gbc.writeMem(0xc33, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0xc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01A0
        gbc.setState(0xa945, 0xa94b, 0xaef0, 0x2197, 0x3134, 0x6194, 0x0, 0x1);
        gbc.writeMem(0xa945, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0x7c, gbc.readMem(0xa946));
        // CB 7C 01A1
        gbc.setState(0x335f, 0x9ede, 0xe60, 0x2ed7, 0x705f, 0x581c, 0x0, 0x0);
        gbc.writeMem(0x335f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0x3361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01A2
        gbc.setState(0x8295, 0x22c5, 0x3cb0, 0xc246, 0x4759, 0xfe3, 0x1, 0x0);
        gbc.writeMem(0x8295, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8295));
        EXPECT(0x7c, gbc.readMem(0x8296));
        // CB 7C 01A3
        gbc.setState(0x434e, 0x3221, 0x3a70, 0xbd6d, 0x5cb0, 0x555f, 0x0, 0x0);
        gbc.writeMem(0x434e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3221, gbc.sp());
        EXPECT(0x4350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01A4
        gbc.setState(0x10ab, 0x8f16, 0xbd00, 0x470b, 0x6c1a, 0x4f1d, 0x1, 0x1);
        gbc.writeMem(0x10ab, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8f16, gbc.sp());
        EXPECT(0x10ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01A5
        gbc.setState(0x4b51, 0xd09c, 0x6810, 0x2de1, 0x7a16, 0xd88b, 0x0, 0x1);
        gbc.writeMem(0x4b51, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd09c, gbc.sp());
        EXPECT(0x4b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01A7
        gbc.setState(0x6f37, 0x1711, 0x4da0, 0xd4a, 0x74af, 0xeaa6, 0x0, 0x0);
        gbc.writeMem(0x6f37, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1711, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01A8
        gbc.setState(0x70cd, 0x97b8, 0xb2a0, 0xcc29, 0xcab, 0xa054, 0x0, 0x0);
        gbc.writeMem(0x70cd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x97b8, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01A9
        gbc.setState(0x9aef, 0x428b, 0x48b0, 0x85cc, 0x28ab, 0xc52a, 0x1, 0x0);
        gbc.writeMem(0x9aef, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x428b, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aef));
        EXPECT(0x7c, gbc.readMem(0x9af0));
        // CB 7C 01AA
        gbc.setState(0x8407, 0x346b, 0x3e70, 0x27c6, 0x1f48, 0x797a, 0x1, 0x1);
        gbc.writeMem(0x8407, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0x8409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8407));
        EXPECT(0x7c, gbc.readMem(0x8408));
        // CB 7C 01AB
        gbc.setState(0x74cb, 0x4818, 0x1640, 0xe7e3, 0xbb9e, 0xe384, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4818, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01AC
        gbc.setState(0xa7d1, 0x5092, 0x8f0, 0x455e, 0x8650, 0x81d2, 0x1, 0x1);
        gbc.writeMem(0xa7d1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d1));
        EXPECT(0x7c, gbc.readMem(0xa7d2));
        // CB 7C 01AD
        gbc.setState(0xc6b1, 0x6af3, 0x3850, 0x59d3, 0xeab1, 0x7951, 0x0, 0x1);
        gbc.writeMem(0xc6b1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6af3, gbc.sp());
        EXPECT(0xc6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b1));
        EXPECT(0x7c, gbc.readMem(0xc6b2));
        // CB 7C 01AF
        gbc.setState(0x4ecd, 0x23c, 0x4a40, 0x3348, 0xd3f8, 0xbdca, 0x0, 0x1);
        gbc.writeMem(0x4ecd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x23c, gbc.sp());
        EXPECT(0x4ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01B0
        gbc.setState(0x9fe5, 0xd54f, 0xe450, 0x8780, 0xc7f1, 0xb3d1, 0x0, 0x1);
        gbc.writeMem(0x9fe5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd54f, gbc.sp());
        EXPECT(0x9fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe5));
        EXPECT(0x7c, gbc.readMem(0x9fe6));
        // CB 7C 01B1
        gbc.setState(0xa019, 0xe4b9, 0xf0, 0x28a6, 0xbaf0, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0xa019, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe4b9, gbc.sp());
        EXPECT(0xa01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa019));
        EXPECT(0x7c, gbc.readMem(0xa01a));
        // CB 7C 01B2
        gbc.setState(0x7870, 0xa042, 0xe630, 0x9766, 0xb89c, 0x5446, 0x0, 0x1);
        gbc.writeMem(0x7870, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa042, gbc.sp());
        EXPECT(0x7872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01B3
        gbc.setState(0x5e72, 0xdc4f, 0x3d40, 0x3bbd, 0xc51f, 0x907a, 0x1, 0x0);
        gbc.writeMem(0x5e72, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01B6
        gbc.setState(0xc40e, 0x17c0, 0x4930, 0x4eae, 0x1b07, 0xb489, 0x1, 0x0);
        gbc.writeMem(0xc40e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x17c0, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40e));
        EXPECT(0x7c, gbc.readMem(0xc40f));
        // CB 7C 01B8
        gbc.setState(0x5e2e, 0xe32c, 0xd590, 0x4fd0, 0xe0c0, 0x27d6, 0x0, 0x1);
        gbc.writeMem(0x5e2e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe32c, gbc.sp());
        EXPECT(0x5e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01B9
        gbc.setState(0xc36, 0x3f9c, 0x9370, 0xe494, 0x97ce, 0x2a68, 0x1, 0x1);
        gbc.writeMem(0xc36, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f9c, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01BA
        gbc.setState(0xeb34, 0xf64a, 0x9ed0, 0x8751, 0x165a, 0x207d, 0x1, 0x1);
        gbc.writeMem(0xeb34, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf64a, gbc.sp());
        EXPECT(0xeb36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb34));
        EXPECT(0x7c, gbc.readMem(0xeb35));
        // CB 7C 01BB
        gbc.setState(0xdbba, 0x3cff, 0x7040, 0x8ad, 0xd967, 0x72da, 0x0, 0x1);
        gbc.writeMem(0xdbba, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbba));
        EXPECT(0x7c, gbc.readMem(0xdbbb));
        // CB 7C 01BC
        gbc.setState(0x37f3, 0xb383, 0x3b0, 0xa6c3, 0x5ad3, 0x8274, 0x1, 0x0);
        gbc.writeMem(0x37f3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb383, gbc.sp());
        EXPECT(0x37f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01BD
        gbc.setState(0x5dad, 0x388, 0x8f50, 0xed30, 0xd65f, 0xec5, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x388, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01BE
        gbc.setState(0x7e22, 0xb0d3, 0x2900, 0x7602, 0x9510, 0x7537, 0x1, 0x1);
        gbc.writeMem(0x7e22, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01BF
        gbc.setState(0x4910, 0x8233, 0x1a90, 0x8744, 0x39c6, 0xc5bf, 0x0, 0x1);
        gbc.writeMem(0x4910, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C0
        gbc.setState(0xa83, 0x8ad7, 0xd210, 0x57d1, 0xe7e6, 0xfdb2, 0x0, 0x1);
        gbc.writeMem(0xa83, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8ad7, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C1
        gbc.setState(0x8d19, 0x4373, 0x480, 0x99c8, 0xbcae, 0xff06, 0x0, 0x0);
        gbc.writeMem(0x8d19, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4373, gbc.sp());
        EXPECT(0x8d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d19));
        EXPECT(0x7c, gbc.readMem(0x8d1a));
        // CB 7C 01C2
        gbc.setState(0x3260, 0x8e6e, 0xd4b0, 0xfa45, 0x92ae, 0xd933, 0x1, 0x0);
        gbc.writeMem(0x3260, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e6e, gbc.sp());
        EXPECT(0x3262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C3
        gbc.setState(0x3fed, 0x51e8, 0x8430, 0x71e0, 0x5adc, 0x41de, 0x0, 0x1);
        gbc.writeMem(0x3fed, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x51e8, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C4
        gbc.setState(0x7abc, 0x5ec6, 0x8730, 0x66cb, 0xc9cf, 0x6b1a, 0x1, 0x1);
        gbc.writeMem(0x7abc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5ec6, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C5
        gbc.setState(0x1d0c, 0x18fd, 0x1e0, 0x4618, 0x4110, 0xa8f0, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01C6
        gbc.setState(0x9855, 0x81a2, 0x2bb0, 0xe5ff, 0x5d86, 0x70de, 0x0, 0x0);
        gbc.writeMem(0x9855, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x9857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9855));
        EXPECT(0x7c, gbc.readMem(0x9856));
        // CB 7C 01C7
        gbc.setState(0x6585, 0x1b77, 0xb190, 0x177d, 0xe920, 0x5a2c, 0x0, 0x1);
        gbc.writeMem(0x6585, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b77, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01C8
        gbc.setState(0x4c20, 0xb78c, 0x95e0, 0x30cd, 0x9e03, 0xfb43, 0x0, 0x1);
        gbc.writeMem(0x4c20, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb78c, gbc.sp());
        EXPECT(0x4c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01C9
        gbc.setState(0xa08, 0x12ea, 0x89a0, 0xfb32, 0x919b, 0x6fc1, 0x0, 0x1);
        gbc.writeMem(0xa08, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01CA
        gbc.setState(0xe049, 0xbdf9, 0x8860, 0xdfc8, 0xd617, 0x2100, 0x0, 0x0);
        gbc.writeMem(0xe049, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe049));
        EXPECT(0x7c, gbc.readMem(0xe04a));
        // CB 7C 01CB
        gbc.setState(0x696e, 0x3d37, 0x94d0, 0xc7d4, 0x6e71, 0x2c38, 0x1, 0x1);
        gbc.writeMem(0x696e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x6970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01CC
        gbc.setState(0x1e5e, 0xe3a7, 0xde90, 0x7fd1, 0x419f, 0x21e9, 0x1, 0x0);
        gbc.writeMem(0x1e5e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0x1e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01CD
        gbc.setState(0x8516, 0x4063, 0x9a50, 0xf4db, 0x7d54, 0x553a, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4063, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8516));
        EXPECT(0x7c, gbc.readMem(0x8517));
        // CB 7C 01CF
        gbc.setState(0xb68e, 0x7b24, 0xc60, 0x8826, 0x6fd2, 0x29c0, 0x1, 0x1);
        gbc.writeMem(0xb68e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7b24, gbc.sp());
        EXPECT(0xb690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68e));
        EXPECT(0x7c, gbc.readMem(0xb68f));
        // CB 7C 01D0
        gbc.setState(0x4870, 0x9220, 0xa630, 0x1571, 0x472f, 0x2564, 0x0, 0x1);
        gbc.writeMem(0x4870, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9220, gbc.sp());
        EXPECT(0x4872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01D1
        gbc.setState(0xacf6, 0xb8b, 0xdb0, 0xb132, 0xea96, 0x91e8, 0x0, 0x0);
        gbc.writeMem(0xacf6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0x7c, gbc.readMem(0xacf7));
        // CB 7C 01D2
        gbc.setState(0xd007, 0xd4b1, 0x18f0, 0xf697, 0xaad3, 0x9a60, 0x0, 0x1);
        gbc.writeMem(0xd007, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0xd009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd007));
        EXPECT(0x7c, gbc.readMem(0xd008));
        // CB 7C 01D3
        gbc.setState(0x77df, 0x2e00, 0xcec0, 0x30d6, 0x5057, 0xd5ed, 0x1, 0x0);
        gbc.writeMem(0x77df, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2e00, gbc.sp());
        EXPECT(0x77e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01D4
        gbc.setState(0x4f8e, 0x989f, 0xd630, 0x4c0c, 0x5872, 0xc406, 0x1, 0x1);
        gbc.writeMem(0x4f8e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x989f, gbc.sp());
        EXPECT(0x4f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01D5
        gbc.setState(0x8f58, 0x75bf, 0x38d0, 0x532, 0x1022, 0x9599, 0x0, 0x0);
        gbc.writeMem(0x8f58, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75bf, gbc.sp());
        EXPECT(0x8f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f58));
        EXPECT(0x7c, gbc.readMem(0x8f59));
        // CB 7C 01D6
        gbc.setState(0xe817, 0x7416, 0x77c0, 0x71a3, 0xd264, 0xa506, 0x1, 0x1);
        gbc.writeMem(0xe817, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0xe819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe817));
        EXPECT(0x7c, gbc.readMem(0xe818));
        // CB 7C 01D7
        gbc.setState(0x416, 0x1e84, 0xe650, 0xc5be, 0xdd06, 0x1be3, 0x0, 0x0);
        gbc.writeMem(0x416, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0x418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01D8
        gbc.setState(0x4b66, 0x2587, 0x18b0, 0x9896, 0x3931, 0xe62c, 0x0, 0x0);
        gbc.writeMem(0x4b66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2587, gbc.sp());
        EXPECT(0x4b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01D9
        gbc.setState(0x8a14, 0xd859, 0xbdb0, 0x94ae, 0x2cc3, 0x6d8b, 0x1, 0x0);
        gbc.writeMem(0x8a14, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd859, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a14));
        EXPECT(0x7c, gbc.readMem(0x8a15));
        // CB 7C 01DA
        gbc.setState(0x8bd5, 0xd0b6, 0xb990, 0x683b, 0xaea2, 0x8167, 0x0, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0x7c, gbc.readMem(0x8bd6));
        // CB 7C 01DB
        gbc.setState(0x3daa, 0x7861, 0x89e0, 0x273a, 0x28f0, 0xb1f7, 0x1, 0x1);
        gbc.writeMem(0x3daa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01DC
        gbc.setState(0x4d06, 0xd140, 0xbff0, 0xdec1, 0x262e, 0xe975, 0x1, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd140, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01DE
        gbc.setState(0xc703, 0x2dca, 0x7830, 0xa019, 0x864d, 0xcbf5, 0x1, 0x1);
        gbc.writeMem(0xc703, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2dca, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc703));
        EXPECT(0x7c, gbc.readMem(0xc704));
        // CB 7C 01DF
        gbc.setState(0x979b, 0xa3ab, 0xc8b0, 0x6a45, 0xd909, 0x5a56, 0x1, 0x1);
        gbc.writeMem(0x979b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa3ab, gbc.sp());
        EXPECT(0x979d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979b));
        EXPECT(0x7c, gbc.readMem(0x979c));
        // CB 7C 01E0
        gbc.setState(0x6f37, 0x3c1f, 0x4fa0, 0xba23, 0xe9c6, 0x12d1, 0x0, 0x0);
        gbc.writeMem(0x6f37, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01E1
        gbc.setState(0x530d, 0xf97b, 0xe870, 0x292, 0x5be1, 0x291a, 0x1, 0x0);
        gbc.writeMem(0x530d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01E2
        gbc.setState(0x9e15, 0x1121, 0x6d80, 0xa46e, 0x38f1, 0x1604, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1121, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0x7c, gbc.readMem(0x9e16));
        // CB 7C 01E3
        gbc.setState(0x4197, 0xa29f, 0x2d60, 0xbf93, 0x19e8, 0x1e0f, 0x1, 0x0);
        gbc.writeMem(0x4197, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa29f, gbc.sp());
        EXPECT(0x4199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01E4
        gbc.setState(0xaa2, 0x5b24, 0x7f60, 0xbd68, 0xe685, 0x9e99, 0x1, 0x1);
        gbc.writeMem(0xaa2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0xaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01E5
        gbc.setState(0x8adf, 0xbcc5, 0xc730, 0xfe34, 0x4df, 0xdb61, 0x1, 0x1);
        gbc.writeMem(0x8adf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x8ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8adf));
        EXPECT(0x7c, gbc.readMem(0x8ae0));
        // CB 7C 01E6
        gbc.setState(0x2377, 0x3f46, 0xf8c0, 0x7fff, 0x630d, 0x8eca, 0x1, 0x0);
        gbc.writeMem(0x2377, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0x2379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01E7
        gbc.setState(0x6870, 0x197d, 0x7670, 0x3e02, 0x7b1e, 0x2b11, 0x1, 0x1);
        gbc.writeMem(0x6870, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x197d, gbc.sp());
        EXPECT(0x6872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01E8
        gbc.setState(0x43a0, 0x35e1, 0x5750, 0x35a2, 0x29dd, 0xe971, 0x1, 0x0);
        gbc.writeMem(0x43a0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01E9
        gbc.setState(0xa366, 0xd08e, 0x8210, 0xf05f, 0xae4f, 0xa2e3, 0x1, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0x7c, gbc.readMem(0xa367));
        // CB 7C 01EA
        gbc.setState(0xa1a8, 0x2384, 0xbe80, 0x83ff, 0xd92f, 0x338, 0x0, 0x1);
        gbc.writeMem(0xa1a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0xa1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a8));
        EXPECT(0x7c, gbc.readMem(0xa1a9));
        // CB 7C 01EB
        gbc.setState(0x8e6b, 0x2ad3, 0x2250, 0x4fcd, 0xadc7, 0x190f, 0x0, 0x0);
        gbc.writeMem(0x8e6b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2ad3, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6b));
        EXPECT(0x7c, gbc.readMem(0x8e6c));
        // CB 7C 01EC
        gbc.setState(0xbcbb, 0x7880, 0x4480, 0xe75b, 0x5135, 0xf598, 0x0, 0x1);
        gbc.writeMem(0xbcbb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7880, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbb));
        EXPECT(0x7c, gbc.readMem(0xbcbc));
        // CB 7C 01EE
        gbc.setState(0xdbcc, 0x4a38, 0xcdd0, 0x4e22, 0x2241, 0xe054, 0x1, 0x1);
        gbc.writeMem(0xdbcc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcc));
        EXPECT(0x7c, gbc.readMem(0xdbcd));
        // CB 7C 01EF
        gbc.setState(0x255e, 0xeb2e, 0xb490, 0xe349, 0xb44c, 0x28ae, 0x0, 0x1);
        gbc.writeMem(0x255e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeb2e, gbc.sp());
        EXPECT(0x2560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01F0
        gbc.setState(0x7b60, 0xb518, 0x6770, 0xa076, 0x156, 0xb798, 0x0, 0x0);
        gbc.writeMem(0x7b60, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01F1
        gbc.setState(0x5039, 0xdfbe, 0x1280, 0x6255, 0xf74b, 0xca13, 0x0, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdfbe, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01F2
        gbc.setState(0xdb50, 0x11f, 0x26f0, 0x4c54, 0xfb4e, 0x5842, 0x0, 0x1);
        gbc.writeMem(0xdb50, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x11f, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb50));
        EXPECT(0x7c, gbc.readMem(0xdb51));
        // CB 7C 01F3
        gbc.setState(0x790c, 0xe8d1, 0x5e0, 0x9886, 0x7882, 0xc431, 0x0, 0x0);
        gbc.writeMem(0x790c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01F4
        gbc.setState(0x267b, 0x2201, 0xda60, 0xc6c, 0xf484, 0xde97, 0x1, 0x1);
        gbc.writeMem(0x267b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2201, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01F5
        gbc.setState(0x7947, 0x776e, 0x21f0, 0x1bb2, 0xbaf4, 0x9d6e, 0x1, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0x7949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01F6
        gbc.setState(0x1dce, 0xc409, 0x30, 0xa0cf, 0xe864, 0xb926, 0x1, 0x1);
        gbc.writeMem(0x1dce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc409, gbc.sp());
        EXPECT(0x1dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 01F7
        gbc.setState(0x7cf1, 0x747c, 0x9c40, 0xa92b, 0x2294, 0x9e8a, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x747c, gbc.sp());
        EXPECT(0x7cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01F8
        gbc.setState(0x7185, 0xa47a, 0x91e0, 0xc652, 0x84b2, 0x15df, 0x1, 0x0);
        gbc.writeMem(0x7185, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x7187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01F9
        gbc.setState(0xa7a2, 0xbaea, 0x61d0, 0xf10d, 0x12dd, 0x8039, 0x1, 0x1);
        gbc.writeMem(0xa7a2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbaea, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a2));
        EXPECT(0x7c, gbc.readMem(0xa7a3));
        // CB 7C 01FA
        gbc.setState(0x7e35, 0x4c3c, 0xa5a0, 0xd2d2, 0xccb3, 0x593e, 0x0, 0x0);
        gbc.writeMem(0x7e35, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4c3c, gbc.sp());
        EXPECT(0x7e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01FB
        gbc.setState(0x6286, 0xcf63, 0x81c0, 0x57f2, 0x4db8, 0x1e09, 0x0, 0x1);
        gbc.writeMem(0x6286, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcf63, gbc.sp());
        EXPECT(0x6288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01FC
        gbc.setState(0xf5f, 0xa6a1, 0xf0c0, 0x8e8b, 0x2c5d, 0x8bbf, 0x0, 0x0);
        gbc.writeMem(0xf5f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0xf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 01FD
        gbc.setState(0xa746, 0x3315, 0x42e0, 0x3104, 0xa210, 0xc157, 0x0, 0x0);
        gbc.writeMem(0xa746, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3315, gbc.sp());
        EXPECT(0xa748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa746));
        EXPECT(0x7c, gbc.readMem(0xa747));
        // CB 7C 01FE
        gbc.setState(0xbcc8, 0xb2c3, 0xbb40, 0x4ef6, 0x4d69, 0xc6ce, 0x1, 0x1);
        gbc.writeMem(0xbcc8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0xbcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc8));
        EXPECT(0x7c, gbc.readMem(0xbcc9));
        // CB 7C 01FF
        gbc.setState(0x686e, 0xea0f, 0x7b0, 0xa03b, 0x6f9d, 0x8f5, 0x0, 0x1);
        gbc.writeMem(0x686e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0x6870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0200
        gbc.setState(0xec66, 0xd3a3, 0x59b0, 0x569d, 0x8525, 0x7a5a, 0x1, 0x1);
        gbc.writeMem(0xec66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0xec68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec66));
        EXPECT(0x7c, gbc.readMem(0xec67));
        // CB 7C 0201
        gbc.setState(0x21ae, 0xf3a8, 0xf320, 0xd878, 0x7f16, 0x1e7b, 0x1, 0x1);
        gbc.writeMem(0x21ae, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0x21b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0202
        gbc.setState(0xc095, 0x8803, 0x57c0, 0x991, 0xf8d4, 0x5b7d, 0x0, 0x1);
        gbc.writeMem(0xc095, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0xc097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc095));
        EXPECT(0x7c, gbc.readMem(0xc096));
        // CB 7C 0203
        gbc.setState(0x62b0, 0xdcb5, 0x5c00, 0xdc09, 0x1160, 0x4dc9, 0x1, 0x1);
        gbc.writeMem(0x62b0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0204
        gbc.setState(0xe4d7, 0xf958, 0x8370, 0x976a, 0xa855, 0x5a6a, 0x0, 0x1);
        gbc.writeMem(0xe4d7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d7));
        EXPECT(0x7c, gbc.readMem(0xe4d8));
        // CB 7C 0205
        gbc.setState(0x1fb, 0x396d, 0x47d0, 0xdef2, 0xc8aa, 0xd5ba, 0x0, 0x1);
        gbc.writeMem(0x1fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x396d, gbc.sp());
        EXPECT(0x1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0206
        gbc.setState(0x521d, 0x8143, 0xb730, 0xa292, 0x5169, 0xcc95, 0x1, 0x1);
        gbc.writeMem(0x521d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8143, gbc.sp());
        EXPECT(0x521f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0207
        gbc.setState(0x3302, 0x53c6, 0xc340, 0xcbbd, 0x6ebd, 0x3db5, 0x1, 0x0);
        gbc.writeMem(0x3302, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0x3304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0208
        gbc.setState(0x105b, 0x48fb, 0x4a30, 0xcc20, 0x7e43, 0x711d, 0x0, 0x0);
        gbc.writeMem(0x105b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0209
        gbc.setState(0x7667, 0xb9f6, 0x83a0, 0x5e4f, 0x5716, 0x155c, 0x0, 0x0);
        gbc.writeMem(0x7667, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb9f6, gbc.sp());
        EXPECT(0x7669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 020A
        gbc.setState(0x4db8, 0x8184, 0x300, 0xfea3, 0xf195, 0x6133, 0x0, 0x1);
        gbc.writeMem(0x4db8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8184, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 020B
        gbc.setState(0x948e, 0x7529, 0x3a20, 0x4a58, 0x49f7, 0x1534, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7529, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948e));
        EXPECT(0x7c, gbc.readMem(0x948f));
        // CB 7C 020C
        gbc.setState(0xe336, 0x424a, 0xd0f0, 0x1484, 0xd2bf, 0x98e, 0x1, 0x1);
        gbc.writeMem(0xe336, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x424a, gbc.sp());
        EXPECT(0xe338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe336));
        EXPECT(0x7c, gbc.readMem(0xe337));
        // CB 7C 020D
        gbc.setState(0x9f9a, 0x620e, 0xeae0, 0x5405, 0x6854, 0xf89b, 0x0, 0x0);
        gbc.writeMem(0x9f9a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0x9f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9a));
        EXPECT(0x7c, gbc.readMem(0x9f9b));
        // CB 7C 020E
        gbc.setState(0x239f, 0xcf74, 0x1770, 0x794f, 0x6f4d, 0xef48, 0x0, 0x1);
        gbc.writeMem(0x239f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcf74, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 020F
        gbc.setState(0x1923, 0x1054, 0x7f00, 0x5b1e, 0x2e76, 0x8f65, 0x1, 0x1);
        gbc.writeMem(0x1923, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0x1925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0210
        gbc.setState(0xbde3, 0x23ef, 0x7e80, 0xaaf9, 0x63dd, 0xcf61, 0x1, 0x1);
        gbc.writeMem(0xbde3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0xbde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde3));
        EXPECT(0x7c, gbc.readMem(0xbde4));
        // CB 7C 0211
        gbc.setState(0x19dc, 0x19ac, 0x9f90, 0x90e8, 0xa6dd, 0x3889, 0x0, 0x1);
        gbc.writeMem(0x19dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x19ac, gbc.sp());
        EXPECT(0x19de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0212
        gbc.setState(0x8a57, 0xf65a, 0xaf50, 0x9bdc, 0x1a9e, 0xe872, 0x1, 0x0);
        gbc.writeMem(0x8a57, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a57));
        EXPECT(0x7c, gbc.readMem(0x8a58));
        // CB 7C 0213
        gbc.setState(0xd6ce, 0xc46c, 0xcbe0, 0x9d2a, 0xba2a, 0x27ef, 0x1, 0x0);
        gbc.writeMem(0xd6ce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0xd6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ce));
        EXPECT(0x7c, gbc.readMem(0xd6cf));
        // CB 7C 0214
        gbc.setState(0x45ac, 0x66ec, 0xc6e0, 0xde4d, 0xba9c, 0x402, 0x0, 0x0);
        gbc.writeMem(0x45ac, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x66ec, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0215
        gbc.setState(0x8ab8, 0x4650, 0x8e60, 0x68f0, 0x754d, 0x2b94, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0x8aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab8));
        EXPECT(0x7c, gbc.readMem(0x8ab9));
        // CB 7C 0216
        gbc.setState(0xa77a, 0x2e64, 0x6f90, 0x1705, 0xf2f2, 0x88f9, 0x1, 0x1);
        gbc.writeMem(0xa77a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77a));
        EXPECT(0x7c, gbc.readMem(0xa77b));
        // CB 7C 0217
        gbc.setState(0x96b2, 0xaf6d, 0xd6a0, 0x9cb2, 0xd2d3, 0x5469, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaf6d, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b2));
        EXPECT(0x7c, gbc.readMem(0x96b3));
        // CB 7C 0218
        gbc.setState(0x5308, 0x7cd5, 0x6bc0, 0x55ec, 0x1e0d, 0xdf4d, 0x0, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7cd5, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0219
        gbc.setState(0x5c2a, 0x9733, 0x2940, 0xa23d, 0x7134, 0x6813, 0x1, 0x1);
        gbc.writeMem(0x5c2a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9733, gbc.sp());
        EXPECT(0x5c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 021A
        gbc.setState(0x50c5, 0x3f11, 0xb150, 0x4949, 0x93d0, 0xf4a7, 0x0, 0x1);
        gbc.writeMem(0x50c5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3f11, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 021B
        gbc.setState(0x109f, 0xf1b8, 0xe120, 0xbe7e, 0xfb3c, 0xdbb3, 0x1, 0x0);
        gbc.writeMem(0x109f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 021C
        gbc.setState(0xc79a, 0xb1bb, 0xa630, 0x2005, 0x7526, 0x8c7, 0x1, 0x1);
        gbc.writeMem(0xc79a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0xc79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79a));
        EXPECT(0x7c, gbc.readMem(0xc79b));
        // CB 7C 021D
        gbc.setState(0x4c40, 0x32b7, 0xf150, 0x2497, 0xd870, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x4c40, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x32b7, gbc.sp());
        EXPECT(0x4c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 021E
        gbc.setState(0x3dbf, 0x7041, 0x400, 0x2a65, 0x16b0, 0xc271, 0x1, 0x0);
        gbc.writeMem(0x3dbf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0x3dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 021F
        gbc.setState(0xc6e, 0x3d1, 0x93e0, 0xb310, 0xa6ea, 0x2c17, 0x1, 0x1);
        gbc.writeMem(0xc6e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0221
        gbc.setState(0x6065, 0xcd36, 0x4b30, 0x5e4c, 0x13db, 0x6f44, 0x0, 0x0);
        gbc.writeMem(0x6065, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcd36, gbc.sp());
        EXPECT(0x6067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0222
        gbc.setState(0x3773, 0xf955, 0xeaa0, 0x42a9, 0x4d72, 0x7046, 0x0, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0223
        gbc.setState(0xcf32, 0x7139, 0x7be0, 0xcc09, 0x6a3f, 0x4a0c, 0x1, 0x0);
        gbc.writeMem(0xcf32, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf32));
        EXPECT(0x7c, gbc.readMem(0xcf33));
        // CB 7C 0224
        gbc.setState(0x72dd, 0x9e13, 0x22f0, 0x87a, 0x627d, 0xad7b, 0x0, 0x1);
        gbc.writeMem(0x72dd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9e13, gbc.sp());
        EXPECT(0x72df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0225
        gbc.setState(0xcb55, 0x305e, 0x1fe0, 0xaa9a, 0xc55d, 0x5d2b, 0x0, 0x0);
        gbc.writeMem(0xcb55, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x305e, gbc.sp());
        EXPECT(0xcb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb55));
        EXPECT(0x7c, gbc.readMem(0xcb56));
        // CB 7C 0226
        gbc.setState(0x3099, 0x1776, 0x9ac0, 0x20db, 0x292d, 0x6156, 0x0, 0x0);
        gbc.writeMem(0x3099, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1776, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0227
        gbc.setState(0xe2b8, 0xa8e3, 0x80, 0x3645, 0xa93f, 0xaccd, 0x1, 0x1);
        gbc.writeMem(0xe2b8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa8e3, gbc.sp());
        EXPECT(0xe2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b8));
        EXPECT(0x7c, gbc.readMem(0xe2b9));
        // CB 7C 0228
        gbc.setState(0x7705, 0x2d, 0x2260, 0x61c7, 0x8a51, 0x9f33, 0x1, 0x1);
        gbc.writeMem(0x7705, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2d, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0229
        gbc.setState(0xb841, 0xb719, 0xa10, 0x1a7b, 0x5a17, 0x7556, 0x1, 0x1);
        gbc.writeMem(0xb841, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb719, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb841));
        EXPECT(0x7c, gbc.readMem(0xb842));
        // CB 7C 022A
        gbc.setState(0xe13a, 0x61e2, 0x3370, 0x69c0, 0xac46, 0x6a69, 0x0, 0x0);
        gbc.writeMem(0xe13a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61e2, gbc.sp());
        EXPECT(0xe13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13a));
        EXPECT(0x7c, gbc.readMem(0xe13b));
        // CB 7C 022B
        gbc.setState(0x620d, 0x7718, 0x2180, 0x5f8a, 0xc1f0, 0x6ac9, 0x0, 0x1);
        gbc.writeMem(0x620d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 022C
        gbc.setState(0x48bb, 0xd344, 0xab50, 0xe661, 0x69e6, 0xe807, 0x0, 0x1);
        gbc.writeMem(0x48bb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd344, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 022D
        gbc.setState(0xcd28, 0x2391, 0xd0a0, 0x5167, 0xa11, 0x81ba, 0x0, 0x0);
        gbc.writeMem(0xcd28, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2391, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd28));
        EXPECT(0x7c, gbc.readMem(0xcd29));
        // CB 7C 022E
        gbc.setState(0x7b76, 0xafb5, 0xaf0, 0xc757, 0x3824, 0x4697, 0x1, 0x1);
        gbc.writeMem(0x7b76, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0x7b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 022F
        gbc.setState(0x18b7, 0x8c78, 0xe9d0, 0xcd56, 0x5a84, 0x475, 0x1, 0x0);
        gbc.writeMem(0x18b7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0x18b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0230
        gbc.setState(0x36dc, 0x6f71, 0xb7f0, 0x3460, 0x9a8d, 0x84ef, 0x1, 0x1);
        gbc.writeMem(0x36dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6f71, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0231
        gbc.setState(0x3aa3, 0xe18e, 0xf2d0, 0xaa57, 0xceaf, 0xb771, 0x1, 0x0);
        gbc.writeMem(0x3aa3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe18e, gbc.sp());
        EXPECT(0x3aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0232
        gbc.setState(0x6c9c, 0x455c, 0xc190, 0x384b, 0x2485, 0xd557, 0x1, 0x1);
        gbc.writeMem(0x6c9c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x455c, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0233
        gbc.setState(0x127f, 0xe087, 0x2980, 0x73e1, 0x176e, 0x474d, 0x1, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe087, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0234
        gbc.setState(0x5576, 0xe773, 0xd190, 0x668, 0x201b, 0x63d5, 0x1, 0x0);
        gbc.writeMem(0x5576, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe773, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0235
        gbc.setState(0x59fa, 0xdd71, 0x14f0, 0x35c0, 0x6b64, 0xd4c4, 0x0, 0x1);
        gbc.writeMem(0x59fa, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd71, gbc.sp());
        EXPECT(0x59fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0236
        gbc.setState(0xc83e, 0x187b, 0xf400, 0xd64a, 0xad53, 0xf4a8, 0x1, 0x1);
        gbc.writeMem(0xc83e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83e));
        EXPECT(0x7c, gbc.readMem(0xc83f));
        // CB 7C 0237
        gbc.setState(0x6f02, 0x1a02, 0x34e0, 0xeef2, 0x9e71, 0xe28f, 0x1, 0x1);
        gbc.writeMem(0x6f02, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0238
        gbc.setState(0xd24e, 0xaf5, 0xc040, 0x93fa, 0x1800, 0xb6d5, 0x1, 0x1);
        gbc.writeMem(0xd24e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaf5, gbc.sp());
        EXPECT(0xd250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24e));
        EXPECT(0x7c, gbc.readMem(0xd24f));
        // CB 7C 0239
        gbc.setState(0x99ed, 0x51c, 0xb620, 0x5e80, 0xf765, 0x628b, 0x1, 0x1);
        gbc.writeMem(0x99ed, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x51c, gbc.sp());
        EXPECT(0x99ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ed));
        EXPECT(0x7c, gbc.readMem(0x99ee));
        // CB 7C 023A
        gbc.setState(0x2730, 0x6a03, 0xe700, 0xd68, 0x63e7, 0x1e77, 0x0, 0x1);
        gbc.writeMem(0x2730, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6a03, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 023B
        gbc.setState(0x10fc, 0x3f2e, 0x1360, 0xf7f4, 0x10d4, 0x3710, 0x1, 0x0);
        gbc.writeMem(0x10fc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3f2e, gbc.sp());
        EXPECT(0x10fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 023D
        gbc.setState(0xc4dc, 0x16bc, 0x90a0, 0x2622, 0xcef, 0x2cf6, 0x1, 0x1);
        gbc.writeMem(0xc4dc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0xc4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4dc));
        EXPECT(0x7c, gbc.readMem(0xc4dd));
        // CB 7C 023F
        gbc.setState(0xa7e3, 0xa4e2, 0xdba0, 0xa922, 0x7362, 0x7cbc, 0x1, 0x0);
        gbc.writeMem(0xa7e3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa4e2, gbc.sp());
        EXPECT(0xa7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e3));
        EXPECT(0x7c, gbc.readMem(0xa7e4));
        // CB 7C 0240
        gbc.setState(0x939b, 0xb56a, 0xb440, 0x6611, 0x9a2a, 0x638a, 0x1, 0x0);
        gbc.writeMem(0x939b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb56a, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939b));
        EXPECT(0x7c, gbc.readMem(0x939c));
        // CB 7C 0241
        gbc.setState(0xd428, 0x2103, 0x13e0, 0x7b21, 0xbb91, 0x74f1, 0x1, 0x1);
        gbc.writeMem(0xd428, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2103, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd428));
        EXPECT(0x7c, gbc.readMem(0xd429));
        // CB 7C 0242
        gbc.setState(0xa299, 0xc965, 0x5b30, 0x6bcb, 0x353e, 0x3d6a, 0x1, 0x1);
        gbc.writeMem(0xa299, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc965, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa299));
        EXPECT(0x7c, gbc.readMem(0xa29a));
        // CB 7C 0243
        gbc.setState(0x6d8a, 0x20d9, 0x1400, 0xb918, 0x90fc, 0xeeb4, 0x1, 0x1);
        gbc.writeMem(0x6d8a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x20d9, gbc.sp());
        EXPECT(0x6d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0244
        gbc.setState(0x7e6b, 0x90d5, 0xa560, 0xc5e3, 0x2440, 0xc24c, 0x0, 0x0);
        gbc.writeMem(0x7e6b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x90d5, gbc.sp());
        EXPECT(0x7e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0245
        gbc.setState(0x60fe, 0x63ed, 0xd6d0, 0x7429, 0x1aa9, 0xacb0, 0x1, 0x0);
        gbc.writeMem(0x60fe, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x63ed, gbc.sp());
        EXPECT(0x6100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0246
        gbc.setState(0x47b, 0xc78c, 0xd240, 0xb468, 0xdc31, 0xc66b, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0247
        gbc.setState(0x3183, 0x880b, 0xe2e0, 0xbb27, 0xb4dc, 0xc54c, 0x0, 0x0);
        gbc.writeMem(0x3183, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0248
        gbc.setState(0xc743, 0xb75, 0x8790, 0xbe09, 0xc618, 0xe5, 0x1, 0x0);
        gbc.writeMem(0xc743, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc743));
        EXPECT(0x7c, gbc.readMem(0xc744));
        // CB 7C 0249
        gbc.setState(0x2916, 0xd1dc, 0xfd10, 0x98fa, 0x7e68, 0x785c, 0x0, 0x1);
        gbc.writeMem(0x2916, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd1dc, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 024A
        gbc.setState(0x59b6, 0x5690, 0xab90, 0x7d18, 0x3e90, 0x6dde, 0x0, 0x0);
        gbc.writeMem(0x59b6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5690, gbc.sp());
        EXPECT(0x59b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 024B
        gbc.setState(0xba96, 0x3161, 0x5af0, 0xd632, 0xa36f, 0x1165, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3161, gbc.sp());
        EXPECT(0xba98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba96));
        EXPECT(0x7c, gbc.readMem(0xba97));
        // CB 7C 024C
        gbc.setState(0x21a9, 0x9d63, 0xd2f0, 0xea8f, 0x3004, 0x3797, 0x0, 0x0);
        gbc.writeMem(0x21a9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9d63, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 024D
        gbc.setState(0x60f0, 0x121e, 0x7c70, 0x47a4, 0x72d6, 0x8e6c, 0x0, 0x0);
        gbc.writeMem(0x60f0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x121e, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 024E
        gbc.setState(0x892f, 0x558d, 0x4fd0, 0xec41, 0xba75, 0x8c42, 0x0, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x558d, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892f));
        EXPECT(0x7c, gbc.readMem(0x8930));
        // CB 7C 024F
        gbc.setState(0xe0c8, 0x2f10, 0xb70, 0xd1d9, 0xe874, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xe0c8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2f10, gbc.sp());
        EXPECT(0xe0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c8));
        EXPECT(0x7c, gbc.readMem(0xe0c9));
        // CB 7C 0251
        gbc.setState(0x6674, 0x8ef1, 0xaa0, 0x7058, 0x9def, 0xac65, 0x1, 0x1);
        gbc.writeMem(0x6674, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8ef1, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0252
        gbc.setState(0x7660, 0x39a9, 0xa7b0, 0x72db, 0xdaad, 0x65c6, 0x1, 0x0);
        gbc.writeMem(0x7660, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x39a9, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0253
        gbc.setState(0xda21, 0xcb65, 0x58f0, 0xdbd3, 0x766d, 0x5948, 0x0, 0x0);
        gbc.writeMem(0xda21, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcb65, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda21));
        EXPECT(0x7c, gbc.readMem(0xda22));
        // CB 7C 0254
        gbc.setState(0x34f8, 0x6df5, 0xc850, 0x46c9, 0x911, 0x10e1, 0x1, 0x0);
        gbc.writeMem(0x34f8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6df5, gbc.sp());
        EXPECT(0x34fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0255
        gbc.setState(0x878e, 0x76ff, 0xde80, 0xe7e, 0xa362, 0x54d0, 0x1, 0x1);
        gbc.writeMem(0x878e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x76ff, gbc.sp());
        EXPECT(0x8790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878e));
        EXPECT(0x7c, gbc.readMem(0x878f));
        // CB 7C 0256
        gbc.setState(0x45b4, 0xe9d2, 0x6c00, 0x2e02, 0xf69a, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe9d2, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0257
        gbc.setState(0x1854, 0x2c96, 0x4020, 0xfd2e, 0x9ee9, 0x2d8, 0x1, 0x0);
        gbc.writeMem(0x1854, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0259
        gbc.setState(0x1844, 0x7f71, 0xfdf0, 0x4625, 0xcfc4, 0xdd5b, 0x0, 0x1);
        gbc.writeMem(0x1844, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7f71, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 025A
        gbc.setState(0x5e06, 0x9d0e, 0xeb00, 0x9243, 0x9717, 0xa4a8, 0x1, 0x1);
        gbc.writeMem(0x5e06, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9d0e, gbc.sp());
        EXPECT(0x5e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 025B
        gbc.setState(0x78e, 0x7f45, 0xa530, 0x57e8, 0x54ce, 0xc040, 0x1, 0x1);
        gbc.writeMem(0x78e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7f45, gbc.sp());
        EXPECT(0x790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 025C
        gbc.setState(0xeac0, 0xac75, 0x8a60, 0x8bb1, 0xb091, 0x1990, 0x0, 0x0);
        gbc.writeMem(0xeac0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xac75, gbc.sp());
        EXPECT(0xeac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac0));
        EXPECT(0x7c, gbc.readMem(0xeac1));
        // CB 7C 025D
        gbc.setState(0x6a4b, 0xc68f, 0x33f0, 0x2428, 0x1b49, 0x1de5, 0x0, 0x1);
        gbc.writeMem(0x6a4b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 025E
        gbc.setState(0xb1e4, 0xd8e3, 0xd710, 0xd25a, 0xf536, 0x9d1f, 0x1, 0x0);
        gbc.writeMem(0xb1e4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0xb1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e4));
        EXPECT(0x7c, gbc.readMem(0xb1e5));
        // CB 7C 025F
        gbc.setState(0x243f, 0x92be, 0x5ce0, 0x450b, 0x50af, 0x2fbf, 0x1, 0x0);
        gbc.writeMem(0x243f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x92be, gbc.sp());
        EXPECT(0x2441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0260
        gbc.setState(0x5940, 0x76f3, 0x1060, 0xd65, 0xa9e8, 0x41a7, 0x0, 0x1);
        gbc.writeMem(0x5940, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x76f3, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0261
        gbc.setState(0x93fd, 0x2ea4, 0x9bd0, 0x8636, 0x2c59, 0xddae, 0x1, 0x1);
        gbc.writeMem(0x93fd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2ea4, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fd));
        EXPECT(0x7c, gbc.readMem(0x93fe));
        // CB 7C 0262
        gbc.setState(0xe50a, 0x67ca, 0x21d0, 0xb27d, 0x8a2f, 0x3a6, 0x1, 0x0);
        gbc.writeMem(0xe50a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50a));
        EXPECT(0x7c, gbc.readMem(0xe50b));
        // CB 7C 0263
        gbc.setState(0xbbbb, 0xe41a, 0xe660, 0xada0, 0x562, 0xf2a1, 0x0, 0x0);
        gbc.writeMem(0xbbbb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe41a, gbc.sp());
        EXPECT(0xbbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbb));
        EXPECT(0x7c, gbc.readMem(0xbbbc));
        // CB 7C 0264
        gbc.setState(0x73f4, 0x1f70, 0xf3b0, 0x612d, 0xeca7, 0xa5f8, 0x0, 0x1);
        gbc.writeMem(0x73f4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0265
        gbc.setState(0x145d, 0x3510, 0x4180, 0x3af2, 0xfed9, 0xa649, 0x1, 0x0);
        gbc.writeMem(0x145d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3510, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0266
        gbc.setState(0x1cfc, 0xb36a, 0x9a80, 0x67a5, 0x6b91, 0x5b52, 0x0, 0x1);
        gbc.writeMem(0x1cfc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb36a, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0267
        gbc.setState(0xb98f, 0x23b5, 0xc2c0, 0x1fbc, 0x9de7, 0xe8f3, 0x0, 0x1);
        gbc.writeMem(0xb98f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0xb991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98f));
        EXPECT(0x7c, gbc.readMem(0xb990));
        // CB 7C 0268
        gbc.setState(0x8ab6, 0x6c9b, 0xbd80, 0x78e0, 0x96f1, 0x94ae, 0x1, 0x1);
        gbc.writeMem(0x8ab6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6c9b, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab6));
        EXPECT(0x7c, gbc.readMem(0x8ab7));
        // CB 7C 0269
        gbc.setState(0xd3ac, 0x1d5b, 0x2b30, 0xfbd9, 0x226d, 0x169a, 0x0, 0x1);
        gbc.writeMem(0xd3ac, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1d5b, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ac));
        EXPECT(0x7c, gbc.readMem(0xd3ad));
        // CB 7C 026A
        gbc.setState(0x2fce, 0xa0, 0xbec0, 0x2873, 0xf712, 0x7ce0, 0x1, 0x1);
        gbc.writeMem(0x2fce, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa0, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 026B
        gbc.setState(0x9a8, 0x827c, 0x89f0, 0xff9e, 0xf959, 0x84c4, 0x0, 0x0);
        gbc.writeMem(0x9a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 026C
        gbc.setState(0xb5c2, 0xd7a1, 0x11f0, 0x6486, 0xf244, 0x6bcc, 0x0, 0x0);
        gbc.writeMem(0xb5c2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xb5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c2));
        EXPECT(0x7c, gbc.readMem(0xb5c3));
        // CB 7C 026D
        gbc.setState(0x52e1, 0xaf2c, 0xdee0, 0xd9e0, 0x48da, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x52e1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0x52e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 026E
        gbc.setState(0x40c0, 0x7700, 0x7d70, 0x8f30, 0xd801, 0x3bae, 0x0, 0x1);
        gbc.writeMem(0x40c0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0x40c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 026F
        gbc.setState(0x4253, 0x69d1, 0x2f10, 0xcafc, 0xf23c, 0x9d37, 0x1, 0x0);
        gbc.writeMem(0x4253, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x69d1, gbc.sp());
        EXPECT(0x4255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0270
        gbc.setState(0xcfae, 0x2b70, 0xb080, 0x3d10, 0x9056, 0x3f05, 0x0, 0x0);
        gbc.writeMem(0xcfae, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2b70, gbc.sp());
        EXPECT(0xcfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfae));
        EXPECT(0x7c, gbc.readMem(0xcfaf));
        // CB 7C 0271
        gbc.setState(0x31df, 0xc4c2, 0xddf0, 0x5e48, 0xd153, 0x9255, 0x0, 0x1);
        gbc.writeMem(0x31df, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0x31e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0272
        gbc.setState(0xc3dd, 0x31b8, 0x2c60, 0x7b22, 0x8785, 0xda68, 0x1, 0x1);
        gbc.writeMem(0xc3dd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x31b8, gbc.sp());
        EXPECT(0xc3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3dd));
        EXPECT(0x7c, gbc.readMem(0xc3de));
        // CB 7C 0273
        gbc.setState(0x943, 0xf56e, 0xe3e0, 0x3de5, 0x6e5b, 0x90d3, 0x1, 0x1);
        gbc.writeMem(0x943, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf56e, gbc.sp());
        EXPECT(0x945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0274
        gbc.setState(0x65b5, 0xec2a, 0xaaf0, 0x862f, 0x94f1, 0xe787, 0x0, 0x1);
        gbc.writeMem(0x65b5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x65b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0275
        gbc.setState(0x9761, 0x7b28, 0x2220, 0xbff2, 0x8ef5, 0xca1a, 0x1, 0x1);
        gbc.writeMem(0x9761, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0x9763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9761));
        EXPECT(0x7c, gbc.readMem(0x9762));
        // CB 7C 0276
        gbc.setState(0x3f2f, 0x9123, 0x6080, 0x4222, 0xfcff, 0x622e, 0x1, 0x1);
        gbc.writeMem(0x3f2f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x3f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0277
        gbc.setState(0xa1d4, 0x7a42, 0xe540, 0xa827, 0x641a, 0xcb68, 0x0, 0x0);
        gbc.writeMem(0xa1d4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0x7c, gbc.readMem(0xa1d5));
        // CB 7C 0278
        gbc.setState(0x6ec4, 0x6329, 0xa00, 0x9e53, 0xdbaf, 0x72c0, 0x0, 0x1);
        gbc.writeMem(0x6ec4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6329, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0279
        gbc.setState(0x25e8, 0x2c1a, 0x6110, 0x3821, 0x7343, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2c1a, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 027A
        gbc.setState(0xb706, 0x7ccb, 0xb670, 0x7057, 0x3e5f, 0x2617, 0x0, 0x1);
        gbc.writeMem(0xb706, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7ccb, gbc.sp());
        EXPECT(0xb708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb706));
        EXPECT(0x7c, gbc.readMem(0xb707));
        // CB 7C 027B
        gbc.setState(0x9bc7, 0xc0b4, 0xaf70, 0x528e, 0x956c, 0x8d94, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc7));
        EXPECT(0x7c, gbc.readMem(0x9bc8));
        // CB 7C 027C
        gbc.setState(0xab4f, 0x8af3, 0xaf80, 0xb0f3, 0x380, 0x3ea1, 0x0, 0x1);
        gbc.writeMem(0xab4f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8af3, gbc.sp());
        EXPECT(0xab51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4f));
        EXPECT(0x7c, gbc.readMem(0xab50));
        // CB 7C 027D
        gbc.setState(0xc71d, 0x336c, 0xc5b0, 0xeea6, 0x8d50, 0xdfeb, 0x1, 0x1);
        gbc.writeMem(0xc71d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x336c, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71d));
        EXPECT(0x7c, gbc.readMem(0xc71e));
        // CB 7C 027E
        gbc.setState(0x661f, 0x35b3, 0xcca0, 0xa49c, 0x8823, 0xa401, 0x0, 0x0);
        gbc.writeMem(0x661f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 027F
        gbc.setState(0x690d, 0x5861, 0x1190, 0x524f, 0xfd3e, 0xc00e, 0x1, 0x1);
        gbc.writeMem(0x690d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0x690f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0280
        gbc.setState(0x9519, 0x6f9, 0xa6f0, 0xc08d, 0xd4dd, 0xbbea, 0x0, 0x0);
        gbc.writeMem(0x9519, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6f9, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9519));
        EXPECT(0x7c, gbc.readMem(0x951a));
        // CB 7C 0281
        gbc.setState(0x89c0, 0xe259, 0x8c70, 0x6579, 0x8f59, 0x898a, 0x1, 0x0);
        gbc.writeMem(0x89c0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c0));
        EXPECT(0x7c, gbc.readMem(0x89c1));
        // CB 7C 0282
        gbc.setState(0x3cea, 0x4a5e, 0x3b20, 0xe8e0, 0x9532, 0xc219, 0x1, 0x0);
        gbc.writeMem(0x3cea, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0283
        gbc.setState(0x6243, 0x7ef6, 0xcf10, 0x1f7e, 0xe71, 0x9921, 0x1, 0x0);
        gbc.writeMem(0x6243, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0x6245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0284
        gbc.setState(0x2da3, 0x8acb, 0xf430, 0xe410, 0xf6eb, 0xd01e, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0x2da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0285
        gbc.setState(0xe234, 0x4472, 0x4300, 0xb828, 0x7b89, 0x48eb, 0x0, 0x1);
        gbc.writeMem(0xe234, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4472, gbc.sp());
        EXPECT(0xe236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe234));
        EXPECT(0x7c, gbc.readMem(0xe235));
        // CB 7C 0286
        gbc.setState(0x8305, 0x65eb, 0xa770, 0x399d, 0x5c4c, 0xab55, 0x1, 0x1);
        gbc.writeMem(0x8305, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x65eb, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8305));
        EXPECT(0x7c, gbc.readMem(0x8306));
        // CB 7C 0287
        gbc.setState(0xa9dd, 0x806c, 0xf750, 0xea39, 0x33fd, 0x638d, 0x1, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0x7c, gbc.readMem(0xa9de));
        // CB 7C 0288
        gbc.setState(0x6207, 0x4ca3, 0xdbb0, 0x105c, 0xb2e4, 0xcef3, 0x0, 0x1);
        gbc.writeMem(0x6207, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4ca3, gbc.sp());
        EXPECT(0x6209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0289
        gbc.setState(0xc9fb, 0x45aa, 0x8bd0, 0xccc1, 0xfc3e, 0x330, 0x1, 0x0);
        gbc.writeMem(0xc9fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x45aa, gbc.sp());
        EXPECT(0xc9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fb));
        EXPECT(0x7c, gbc.readMem(0xc9fc));
        // CB 7C 028B
        gbc.setState(0x37a8, 0x9a65, 0xba30, 0xe801, 0xfee6, 0xaf37, 0x1, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 028C
        gbc.setState(0x12f5, 0x353, 0x3700, 0xc07a, 0x699d, 0x8a49, 0x0, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x353, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 028D
        gbc.setState(0x2542, 0xc4a1, 0x24b0, 0xdf59, 0xb6fb, 0x4c61, 0x1, 0x0);
        gbc.writeMem(0x2542, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 028F
        gbc.setState(0xa3af, 0x86f6, 0xc390, 0x5a5f, 0x9566, 0x327f, 0x1, 0x1);
        gbc.writeMem(0xa3af, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x86f6, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3af));
        EXPECT(0x7c, gbc.readMem(0xa3b0));
        // CB 7C 0290
        gbc.setState(0xd01a, 0x2894, 0x5860, 0xad98, 0x2a3b, 0x3391, 0x0, 0x1);
        gbc.writeMem(0xd01a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0xd01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01a));
        EXPECT(0x7c, gbc.readMem(0xd01b));
        // CB 7C 0291
        gbc.setState(0x9efb, 0xc38b, 0xa4e0, 0xdba7, 0x667a, 0x13f2, 0x0, 0x0);
        gbc.writeMem(0x9efb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc38b, gbc.sp());
        EXPECT(0x9efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efb));
        EXPECT(0x7c, gbc.readMem(0x9efc));
        // CB 7C 0292
        gbc.setState(0x4f66, 0x26f1, 0xe990, 0x5b6d, 0x24b, 0xfdb5, 0x0, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x26f1, gbc.sp());
        EXPECT(0x4f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0293
        gbc.setState(0x712, 0xa1c5, 0xa290, 0xeb00, 0x492b, 0x9dbd, 0x1, 0x1);
        gbc.writeMem(0x712, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0x714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0294
        gbc.setState(0xd9b8, 0xebf6, 0x7a00, 0xa71d, 0xe470, 0xcfe2, 0x1, 0x1);
        gbc.writeMem(0xd9b8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0xd9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b8));
        EXPECT(0x7c, gbc.readMem(0xd9b9));
        // CB 7C 0295
        gbc.setState(0xb121, 0x52fd, 0x2c20, 0xe60d, 0x7b4c, 0x6aa0, 0x1, 0x1);
        gbc.writeMem(0xb121, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0xb123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb121));
        EXPECT(0x7c, gbc.readMem(0xb122));
        // CB 7C 0296
        gbc.setState(0x21ab, 0x2846, 0xbdb0, 0x5e14, 0x2a10, 0xef7c, 0x0, 0x0);
        gbc.writeMem(0x21ab, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2846, gbc.sp());
        EXPECT(0x21ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0297
        gbc.setState(0xea80, 0xf5c9, 0x8130, 0x857e, 0x4ef, 0x5866, 0x0, 0x0);
        gbc.writeMem(0xea80, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf5c9, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea80));
        EXPECT(0x7c, gbc.readMem(0xea81));
        // CB 7C 0298
        gbc.setState(0x5ad5, 0xfc8e, 0xa0c0, 0xf16f, 0x9441, 0x3257, 0x0, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0299
        gbc.setState(0x18c7, 0x3b23, 0x9ba0, 0x77fa, 0x160d, 0x3178, 0x1, 0x0);
        gbc.writeMem(0x18c7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0x18c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 029B
        gbc.setState(0xd186, 0x4394, 0x5fd0, 0x3aa2, 0x4368, 0xeccf, 0x0, 0x1);
        gbc.writeMem(0xd186, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4394, gbc.sp());
        EXPECT(0xd188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd186));
        EXPECT(0x7c, gbc.readMem(0xd187));
        // CB 7C 029D
        gbc.setState(0xab0e, 0xa622, 0x99a0, 0x907d, 0x82fa, 0x9a69, 0x1, 0x0);
        gbc.writeMem(0xab0e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0e));
        EXPECT(0x7c, gbc.readMem(0xab0f));
        // CB 7C 029E
        gbc.setState(0x315b, 0xf5b4, 0x8170, 0xbf78, 0x84f2, 0xe513, 0x1, 0x0);
        gbc.writeMem(0x315b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x315d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 029F
        gbc.setState(0x179a, 0xb983, 0x6c00, 0x352a, 0x3fbf, 0xbe99, 0x1, 0x0);
        gbc.writeMem(0x179a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb983, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02A0
        gbc.setState(0xa798, 0xd0a7, 0x3490, 0x3bf8, 0xc140, 0x54f0, 0x0, 0x1);
        gbc.writeMem(0xa798, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa798));
        EXPECT(0x7c, gbc.readMem(0xa799));
        // CB 7C 02A1
        gbc.setState(0xa000, 0xef96, 0x7240, 0xd8ea, 0x15ab, 0x6120, 0x1, 0x1);
        gbc.writeMem(0xa000, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0x7c, gbc.readMem(0xa001));
        // CB 7C 02A2
        gbc.setState(0x27d6, 0xa565, 0x73b0, 0x9665, 0xa0c0, 0x8719, 0x1, 0x0);
        gbc.writeMem(0x27d6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa565, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02A3
        gbc.setState(0x4504, 0xb3b0, 0x9180, 0xf89d, 0x2e88, 0x1fbe, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb3b0, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02A4
        gbc.setState(0x5fb9, 0xfc26, 0x6a10, 0x3eeb, 0xbe9e, 0x2b18, 0x1, 0x0);
        gbc.writeMem(0x5fb9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02A5
        gbc.setState(0x7911, 0x28f4, 0x8bd0, 0x377b, 0x48f3, 0xa132, 0x0, 0x0);
        gbc.writeMem(0x7911, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x28f4, gbc.sp());
        EXPECT(0x7913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02A6
        gbc.setState(0x6709, 0x1232, 0x2800, 0xbca7, 0x3108, 0x83b1, 0x1, 0x0);
        gbc.writeMem(0x6709, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0x670b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02A7
        gbc.setState(0x9a61, 0xec29, 0x9cd0, 0x7972, 0x755a, 0x9def, 0x0, 0x1);
        gbc.writeMem(0x9a61, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0x9a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a61));
        EXPECT(0x7c, gbc.readMem(0x9a62));
        // CB 7C 02A8
        gbc.setState(0xd90c, 0xd06a, 0xe650, 0x39f3, 0x6009, 0xe806, 0x0, 0x0);
        gbc.writeMem(0xd90c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90c));
        EXPECT(0x7c, gbc.readMem(0xd90d));
        // CB 7C 02AA
        gbc.setState(0x6d95, 0xfdc1, 0xa160, 0xb83a, 0xb402, 0xd584, 0x0, 0x0);
        gbc.writeMem(0x6d95, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x6d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02AB
        gbc.setState(0xb3, 0x5f42, 0x5320, 0xc7d7, 0x81, 0x4154, 0x0, 0x1);
        gbc.writeMem(0xb3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0xb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02AC
        gbc.setState(0x171c, 0xf9ac, 0xbe70, 0xb83d, 0xe7d9, 0x8377, 0x0, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02AD
        gbc.setState(0x1c04, 0x2d09, 0x1f60, 0xfbb0, 0x5aea, 0x708c, 0x1, 0x0);
        gbc.writeMem(0x1c04, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2d09, gbc.sp());
        EXPECT(0x1c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02AF
        gbc.setState(0x4ffe, 0xb4dd, 0x8b00, 0x22f1, 0x7f0a, 0x1ee6, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02B0
        gbc.setState(0x31a0, 0x651e, 0xa3d0, 0xdebe, 0xbff, 0x8bc3, 0x0, 0x0);
        gbc.writeMem(0x31a0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02B1
        gbc.setState(0x5933, 0x5c5e, 0x8870, 0x785, 0x93cb, 0xe75e, 0x1, 0x1);
        gbc.writeMem(0x5933, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02B2
        gbc.setState(0x454c, 0x711b, 0x1e20, 0x3955, 0x3b6f, 0xb653, 0x0, 0x1);
        gbc.writeMem(0x454c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x711b, gbc.sp());
        EXPECT(0x454e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02B3
        gbc.setState(0xe24d, 0x87a3, 0xc90, 0x661d, 0xe43b, 0x45a8, 0x1, 0x0);
        gbc.writeMem(0xe24d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0xe24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24d));
        EXPECT(0x7c, gbc.readMem(0xe24e));
        // CB 7C 02B4
        gbc.setState(0xbe76, 0xa573, 0x6610, 0xf454, 0x7bfc, 0x8064, 0x1, 0x1);
        gbc.writeMem(0xbe76, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0xbe78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe76));
        EXPECT(0x7c, gbc.readMem(0xbe77));
        // CB 7C 02B5
        gbc.setState(0x9d5f, 0xc5f3, 0xdaf0, 0xdd2a, 0x6b94, 0x3cb7, 0x1, 0x0);
        gbc.writeMem(0x9d5f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc5f3, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0x7c, gbc.readMem(0x9d60));
        // CB 7C 02B6
        gbc.setState(0x7862, 0xe4af, 0xa0f0, 0x539d, 0xe13e, 0x6e24, 0x1, 0x1);
        gbc.writeMem(0x7862, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x7864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02B7
        gbc.setState(0xd3e4, 0x149c, 0xe7d0, 0x19ac, 0xaf85, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0xd3e4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x149c, gbc.sp());
        EXPECT(0xd3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e4));
        EXPECT(0x7c, gbc.readMem(0xd3e5));
        // CB 7C 02B8
        gbc.setState(0xb873, 0xbf3d, 0xa0d0, 0x6d22, 0xc492, 0x9580, 0x0, 0x1);
        gbc.writeMem(0xb873, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbf3d, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb873));
        EXPECT(0x7c, gbc.readMem(0xb874));
        // CB 7C 02B9
        gbc.setState(0x64ef, 0x2b79, 0x4d20, 0x2dc1, 0x4909, 0x96c4, 0x0, 0x0);
        gbc.writeMem(0x64ef, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2b79, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02BA
        gbc.setState(0x9c5d, 0xb96a, 0x3d20, 0x2562, 0x1f0f, 0x2062, 0x0, 0x1);
        gbc.writeMem(0x9c5d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb96a, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5d));
        EXPECT(0x7c, gbc.readMem(0x9c5e));
        // CB 7C 02BB
        gbc.setState(0x7bf9, 0xc924, 0x1320, 0x6ba7, 0x7d2d, 0xd1bf, 0x0, 0x0);
        gbc.writeMem(0x7bf9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02BC
        gbc.setState(0x4104, 0xfa74, 0xf4d0, 0xd8ad, 0x5e7c, 0x474e, 0x1, 0x1);
        gbc.writeMem(0x4104, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfa74, gbc.sp());
        EXPECT(0x4106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02BD
        gbc.setState(0x2e01, 0x9c94, 0xb600, 0xf03d, 0x4b0d, 0xc76, 0x0, 0x1);
        gbc.writeMem(0x2e01, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0x2e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02BE
        gbc.setState(0x7597, 0x7e98, 0x35b0, 0xfbc4, 0x871a, 0x148f, 0x0, 0x0);
        gbc.writeMem(0x7597, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7e98, gbc.sp());
        EXPECT(0x7599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02BF
        gbc.setState(0xbad7, 0xf8ac, 0x75f0, 0xe3cf, 0x94c2, 0x55bf, 0x1, 0x1);
        gbc.writeMem(0xbad7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf8ac, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad7));
        EXPECT(0x7c, gbc.readMem(0xbad8));
        // CB 7C 02C0
        gbc.setState(0xb45b, 0xda60, 0x4fc0, 0x1175, 0xc7bc, 0x5f4e, 0x1, 0x1);
        gbc.writeMem(0xb45b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xda60, gbc.sp());
        EXPECT(0xb45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45b));
        EXPECT(0x7c, gbc.readMem(0xb45c));
        // CB 7C 02C1
        gbc.setState(0xc6de, 0x283e, 0x9480, 0xb3ff, 0x64dc, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0xc6de, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x283e, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6de));
        EXPECT(0x7c, gbc.readMem(0xc6df));
        // CB 7C 02C2
        gbc.setState(0xc2a5, 0xc0d5, 0x8f70, 0xb75d, 0x9bf, 0xa61e, 0x1, 0x0);
        gbc.writeMem(0xc2a5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc0d5, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a5));
        EXPECT(0x7c, gbc.readMem(0xc2a6));
        // CB 7C 02C3
        gbc.setState(0xe42c, 0x2458, 0x5400, 0xc0de, 0xfc41, 0x1845, 0x0, 0x1);
        gbc.writeMem(0xe42c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2458, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42c));
        EXPECT(0x7c, gbc.readMem(0xe42d));
        // CB 7C 02C4
        gbc.setState(0x1221, 0x75a2, 0x2120, 0xec2b, 0x895f, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0x1221, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x1223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02C6
        gbc.setState(0x6bf, 0x9255, 0xd640, 0x843e, 0x1f05, 0xe327, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9255, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02C7
        gbc.setState(0xc5b0, 0x1513, 0x2060, 0x6c53, 0x976, 0x534, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b0));
        EXPECT(0x7c, gbc.readMem(0xc5b1));
        // CB 7C 02C8
        gbc.setState(0xccc0, 0xefb4, 0x7210, 0x65c6, 0x62da, 0x8376, 0x1, 0x1);
        gbc.writeMem(0xccc0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0xccc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc0));
        EXPECT(0x7c, gbc.readMem(0xccc1));
        // CB 7C 02C9
        gbc.setState(0xdf0d, 0x552, 0xdab0, 0x39f6, 0x8ba1, 0x77c4, 0x0, 0x0);
        gbc.writeMem(0xdf0d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0d));
        EXPECT(0x7c, gbc.readMem(0xdf0e));
        // CB 7C 02CA
        gbc.setState(0x321d, 0x1da2, 0xf90, 0x65e7, 0xad2c, 0x8384, 0x1, 0x0);
        gbc.writeMem(0x321d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1da2, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02CB
        gbc.setState(0x7c94, 0x9aa1, 0x7170, 0x331f, 0x6968, 0x3eda, 0x0, 0x1);
        gbc.writeMem(0x7c94, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9aa1, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02CC
        gbc.setState(0x27b, 0x732a, 0x13b0, 0x5d83, 0x959a, 0xf633, 0x0, 0x0);
        gbc.writeMem(0x27b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02CD
        gbc.setState(0x5713, 0xa919, 0x9d70, 0x6627, 0x6509, 0x4ec6, 0x1, 0x1);
        gbc.writeMem(0x5713, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa919, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02CE
        gbc.setState(0xad49, 0x260d, 0xfc30, 0xde89, 0xcc5e, 0x10e, 0x0, 0x1);
        gbc.writeMem(0xad49, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x260d, gbc.sp());
        EXPECT(0xad4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad49));
        EXPECT(0x7c, gbc.readMem(0xad4a));
        // CB 7C 02CF
        gbc.setState(0xdcc2, 0xed05, 0x1e10, 0x49a2, 0x9ee5, 0x3500, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed05, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc2));
        EXPECT(0x7c, gbc.readMem(0xdcc3));
        // CB 7C 02D0
        gbc.setState(0x72f6, 0x1dc, 0xade0, 0xa8d, 0x7ad6, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x72f6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1dc, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02D1
        gbc.setState(0x5be6, 0x3492, 0x7ca0, 0x7689, 0xeeb2, 0xb0e8, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02D2
        gbc.setState(0xe005, 0xd443, 0xb360, 0x4454, 0x6cae, 0xf7fa, 0x0, 0x1);
        gbc.writeMem(0xe005, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd443, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe005));
        EXPECT(0x7c, gbc.readMem(0xe006));
        // CB 7C 02D3
        gbc.setState(0xa6d, 0x210e, 0x4aa0, 0xe037, 0x606b, 0xee2b, 0x1, 0x1);
        gbc.writeMem(0xa6d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x210e, gbc.sp());
        EXPECT(0xa6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02D4
        gbc.setState(0xb425, 0xaa6d, 0x64e0, 0xd932, 0x3643, 0x1a40, 0x1, 0x1);
        gbc.writeMem(0xb425, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaa6d, gbc.sp());
        EXPECT(0xb427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb425));
        EXPECT(0x7c, gbc.readMem(0xb426));
        // CB 7C 02D5
        gbc.setState(0x6a3a, 0x7bbb, 0x8a40, 0xe9f0, 0xa056, 0x8184, 0x0, 0x0);
        gbc.writeMem(0x6a3a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7bbb, gbc.sp());
        EXPECT(0x6a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02D6
        gbc.setState(0x9bc7, 0xed3b, 0x3040, 0x65a2, 0xc57, 0x6e65, 0x0, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc7));
        EXPECT(0x7c, gbc.readMem(0x9bc8));
        // CB 7C 02D7
        gbc.setState(0xaac2, 0x98c6, 0x8490, 0x50f1, 0x53cc, 0x765c, 0x0, 0x0);
        gbc.writeMem(0xaac2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x98c6, gbc.sp());
        EXPECT(0xaac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac2));
        EXPECT(0x7c, gbc.readMem(0xaac3));
        // CB 7C 02D8
        gbc.setState(0x421b, 0xd990, 0x17f0, 0x5ed9, 0x92d3, 0x7d61, 0x0, 0x1);
        gbc.writeMem(0x421b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd990, gbc.sp());
        EXPECT(0x421d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02D9
        gbc.setState(0xcfc8, 0xfb2b, 0x5370, 0x3cb0, 0xa0bd, 0xb2c2, 0x0, 0x0);
        gbc.writeMem(0xcfc8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfb2b, gbc.sp());
        EXPECT(0xcfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc8));
        EXPECT(0x7c, gbc.readMem(0xcfc9));
        // CB 7C 02DA
        gbc.setState(0xa6b7, 0xc921, 0xaf60, 0x4132, 0x56d1, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0xa6b7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc921, gbc.sp());
        EXPECT(0xa6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b7));
        EXPECT(0x7c, gbc.readMem(0xa6b8));
        // CB 7C 02DB
        gbc.setState(0xb5cf, 0xd4ac, 0x730, 0xd8b5, 0x73cc, 0x45b6, 0x1, 0x1);
        gbc.writeMem(0xb5cf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd4ac, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cf));
        EXPECT(0x7c, gbc.readMem(0xb5d0));
        // CB 7C 02DC
        gbc.setState(0x66b5, 0x1b0c, 0x53d0, 0x9148, 0xc604, 0x842, 0x1, 0x0);
        gbc.writeMem(0x66b5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1b0c, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02DD
        gbc.setState(0x64d5, 0xaaa2, 0xa030, 0x8ec3, 0xb50, 0xa6c4, 0x0, 0x1);
        gbc.writeMem(0x64d5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0x64d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02DE
        gbc.setState(0x3da7, 0xfeb, 0x23f0, 0x9100, 0x3637, 0x2b3f, 0x1, 0x1);
        gbc.writeMem(0x3da7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfeb, gbc.sp());
        EXPECT(0x3da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02DF
        gbc.setState(0xa46b, 0x9c81, 0x57f0, 0x23dd, 0x32b3, 0x3e0, 0x0, 0x1);
        gbc.writeMem(0xa46b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46b));
        EXPECT(0x7c, gbc.readMem(0xa46c));
        // CB 7C 02E0
        gbc.setState(0xb448, 0xc539, 0x7710, 0x8e48, 0x7add, 0x6377, 0x0, 0x1);
        gbc.writeMem(0xb448, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc539, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb448));
        EXPECT(0x7c, gbc.readMem(0xb449));
        // CB 7C 02E1
        gbc.setState(0x361d, 0xc7f0, 0x8e30, 0x163d, 0xf1ff, 0xb771, 0x0, 0x1);
        gbc.writeMem(0x361d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x361f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02E2
        gbc.setState(0xe885, 0x677, 0xf050, 0x8a0, 0x7bb4, 0x2fbf, 0x1, 0x0);
        gbc.writeMem(0xe885, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x677, gbc.sp());
        EXPECT(0xe887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe885));
        EXPECT(0x7c, gbc.readMem(0xe886));
        // CB 7C 02E3
        gbc.setState(0x4129, 0xf8d7, 0xbb20, 0x6e0e, 0xa342, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0x4129, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf8d7, gbc.sp());
        EXPECT(0x412b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02E4
        gbc.setState(0x4e2d, 0xd272, 0xf7f0, 0x1ff3, 0x5b09, 0x80b3, 0x1, 0x1);
        gbc.writeMem(0x4e2d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0x4e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02E5
        gbc.setState(0xe255, 0x1d93, 0xc530, 0x6ffb, 0x7510, 0xc7ab, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe255));
        EXPECT(0x7c, gbc.readMem(0xe256));
        // CB 7C 02E6
        gbc.setState(0x89c9, 0xe922, 0xc3e0, 0xc31e, 0x43ac, 0xec88, 0x0, 0x0);
        gbc.writeMem(0x89c9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x89cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c9));
        EXPECT(0x7c, gbc.readMem(0x89ca));
        // CB 7C 02E7
        gbc.setState(0x43d6, 0x6a84, 0x23c0, 0xa04f, 0x735e, 0xd556, 0x1, 0x0);
        gbc.writeMem(0x43d6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6a84, gbc.sp());
        EXPECT(0x43d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02E8
        gbc.setState(0xcf78, 0x51c4, 0x1920, 0x8d0f, 0x44db, 0x9829, 0x1, 0x0);
        gbc.writeMem(0xcf78, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0xcf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf78));
        EXPECT(0x7c, gbc.readMem(0xcf79));
        // CB 7C 02E9
        gbc.setState(0x5154, 0x4d1b, 0x9fe0, 0xd5e9, 0x606, 0x343f, 0x1, 0x1);
        gbc.writeMem(0x5154, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4d1b, gbc.sp());
        EXPECT(0x5156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02EA
        gbc.setState(0xa5c5, 0x87d3, 0x4380, 0xabe6, 0x4851, 0x6056, 0x1, 0x1);
        gbc.writeMem(0xa5c5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c5));
        EXPECT(0x7c, gbc.readMem(0xa5c6));
        // CB 7C 02EB
        gbc.setState(0xccf3, 0x6b8d, 0x34f0, 0x4c27, 0xe23d, 0xd5, 0x0, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6b8d, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf3));
        EXPECT(0x7c, gbc.readMem(0xccf4));
        // CB 7C 02EC
        gbc.setState(0x3072, 0xe8e8, 0xda40, 0x52c3, 0xd16d, 0xd2e4, 0x0, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02ED
        gbc.setState(0x8ccd, 0xc078, 0x9440, 0x9277, 0xf8bf, 0x974a, 0x1, 0x0);
        gbc.writeMem(0x8ccd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc078, gbc.sp());
        EXPECT(0x8ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccd));
        EXPECT(0x7c, gbc.readMem(0x8cce));
        // CB 7C 02EE
        gbc.setState(0x5273, 0x9873, 0xb330, 0xc534, 0x1c8f, 0x8a2f, 0x1, 0x1);
        gbc.writeMem(0x5273, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9873, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02EF
        gbc.setState(0xb87d, 0xe5cc, 0x1ee0, 0xbeb6, 0xc7d9, 0xaa39, 0x1, 0x1);
        gbc.writeMem(0xb87d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0xb87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87d));
        EXPECT(0x7c, gbc.readMem(0xb87e));
        // CB 7C 02F0
        gbc.setState(0x2024, 0x1938, 0x3cc0, 0xa2cc, 0x33b3, 0xb048, 0x1, 0x0);
        gbc.writeMem(0x2024, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1938, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02F1
        gbc.setState(0x9a14, 0xa2bc, 0x9140, 0xc7e, 0x1b89, 0x3258, 0x0, 0x0);
        gbc.writeMem(0x9a14, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa2bc, gbc.sp());
        EXPECT(0x9a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a14));
        EXPECT(0x7c, gbc.readMem(0x9a15));
        // CB 7C 02F2
        gbc.setState(0x518b, 0xd190, 0xdfd0, 0x6a24, 0xdc4, 0xef01, 0x0, 0x1);
        gbc.writeMem(0x518b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd190, gbc.sp());
        EXPECT(0x518d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02F3
        gbc.setState(0xce68, 0x4ff4, 0x70a0, 0xd54b, 0x8364, 0xb3a3, 0x1, 0x0);
        gbc.writeMem(0xce68, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0xce6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce68));
        EXPECT(0x7c, gbc.readMem(0xce69));
        // CB 7C 02F4
        gbc.setState(0x78b1, 0x411d, 0x1f70, 0xa671, 0xe9c0, 0x191b, 0x1, 0x0);
        gbc.writeMem(0x78b1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x411d, gbc.sp());
        EXPECT(0x78b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02F5
        gbc.setState(0x77d3, 0xf07e, 0xab40, 0x91ee, 0xfab5, 0xa9d7, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0x77d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02F6
        gbc.setState(0x4321, 0x9a27, 0x8310, 0xf111, 0x2c34, 0x936e, 0x0, 0x0);
        gbc.writeMem(0x4321, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02F7
        gbc.setState(0x2c5e, 0xe77c, 0x5230, 0x7b86, 0x7e9c, 0xe4b3, 0x0, 0x1);
        gbc.writeMem(0x2c5e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 02F8
        gbc.setState(0x79c6, 0x2c04, 0xbb40, 0x792d, 0xf63, 0xc116, 0x0, 0x1);
        gbc.writeMem(0x79c6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0x79c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02F9
        gbc.setState(0x209d, 0x9358, 0xb0c0, 0xf52, 0xb6b1, 0x615d, 0x0, 0x0);
        gbc.writeMem(0x209d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9358, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02FA
        gbc.setState(0x5aa2, 0x7ff0, 0xefe0, 0xc3ea, 0xaf07, 0xf9d3, 0x0, 0x1);
        gbc.writeMem(0x5aa2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x5aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02FB
        gbc.setState(0x5239, 0xa6ab, 0x2f60, 0xebbf, 0xb31b, 0x89f0, 0x0, 0x1);
        gbc.writeMem(0x5239, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6ab, gbc.sp());
        EXPECT(0x523b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02FC
        gbc.setState(0x8c16, 0xed89, 0xf310, 0xe714, 0xc238, 0x6b6a, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xed89, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c16));
        EXPECT(0x7c, gbc.readMem(0x8c17));
        // CB 7C 02FD
        gbc.setState(0x6e9a, 0x50be, 0x91a0, 0xa174, 0x4579, 0x1a07, 0x1, 0x1);
        gbc.writeMem(0x6e9a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x50be, gbc.sp());
        EXPECT(0x6e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02FE
        gbc.setState(0xb22, 0x5d36, 0x97c0, 0x8d0a, 0x869c, 0x1317, 0x0, 0x1);
        gbc.writeMem(0xb22, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0xb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 02FF
        gbc.setState(0x9b5d, 0xc66a, 0xc0a0, 0xfcc7, 0xecfc, 0xd47f, 0x0, 0x1);
        gbc.writeMem(0x9b5d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x9b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5d));
        EXPECT(0x7c, gbc.readMem(0x9b5e));
        // CB 7C 0300
        gbc.setState(0x7a3e, 0x5a04, 0x5190, 0xe97e, 0x528f, 0x2bf5, 0x1, 0x0);
        gbc.writeMem(0x7a3e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0x7a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0301
        gbc.setState(0xae29, 0x6887, 0xfa20, 0x286a, 0x7fa, 0x7507, 0x1, 0x1);
        gbc.writeMem(0xae29, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6887, gbc.sp());
        EXPECT(0xae2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae29));
        EXPECT(0x7c, gbc.readMem(0xae2a));
        // CB 7C 0302
        gbc.setState(0x98f7, 0x8d39, 0x46f0, 0x9670, 0x5136, 0x5dbc, 0x1, 0x0);
        gbc.writeMem(0x98f7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8d39, gbc.sp());
        EXPECT(0x98f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f7));
        EXPECT(0x7c, gbc.readMem(0x98f8));
        // CB 7C 0303
        gbc.setState(0x9be1, 0xf9a7, 0x9a10, 0xcd0, 0x7a12, 0x996e, 0x0, 0x1);
        gbc.writeMem(0x9be1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x9be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be1));
        EXPECT(0x7c, gbc.readMem(0x9be2));
        // CB 7C 0304
        gbc.setState(0xf4b, 0x17cd, 0x7ae0, 0xb3b6, 0xf2e6, 0xbdd8, 0x1, 0x1);
        gbc.writeMem(0xf4b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17cd, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0306
        gbc.setState(0x7664, 0xafc6, 0x6b40, 0xcdd6, 0xd703, 0x2cb1, 0x1, 0x0);
        gbc.writeMem(0x7664, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0307
        gbc.setState(0x3bb9, 0xf219, 0x6930, 0x7d05, 0xa81b, 0xa55a, 0x1, 0x0);
        gbc.writeMem(0x3bb9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x3bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 030A
        gbc.setState(0xb7a8, 0xbb23, 0x1cc0, 0xaab6, 0x9df9, 0x6718, 0x1, 0x1);
        gbc.writeMem(0xb7a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb23, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a8));
        EXPECT(0x7c, gbc.readMem(0xb7a9));
        // CB 7C 030B
        gbc.setState(0xc277, 0xa154, 0x69f0, 0x562e, 0x60ed, 0x1c02, 0x0, 0x0);
        gbc.writeMem(0xc277, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc277));
        EXPECT(0x7c, gbc.readMem(0xc278));
        // CB 7C 030C
        gbc.setState(0x10b1, 0x8c01, 0xae0, 0xe638, 0x91ad, 0x3bb, 0x0, 0x0);
        gbc.writeMem(0x10b1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8c01, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 030D
        gbc.setState(0xdba4, 0xac19, 0x600, 0xc361, 0xb083, 0x50b3, 0x1, 0x0);
        gbc.writeMem(0xdba4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xac19, gbc.sp());
        EXPECT(0xdba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba4));
        EXPECT(0x7c, gbc.readMem(0xdba5));
        // CB 7C 030E
        gbc.setState(0x1f0d, 0xea1e, 0x7b90, 0x1ce2, 0xea74, 0xdb36, 0x0, 0x1);
        gbc.writeMem(0x1f0d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xea1e, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 030F
        gbc.setState(0x8d03, 0x7ec, 0xa380, 0x81a8, 0xfd09, 0x1c41, 0x1, 0x1);
        gbc.writeMem(0x8d03, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0x8d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d03));
        EXPECT(0x7c, gbc.readMem(0x8d04));
        // CB 7C 0310
        gbc.setState(0xeb71, 0xa4dd, 0xfd40, 0x7cbb, 0x92b1, 0x8026, 0x0, 0x0);
        gbc.writeMem(0xeb71, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa4dd, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb71));
        EXPECT(0x7c, gbc.readMem(0xeb72));
        // CB 7C 0311
        gbc.setState(0xd035, 0x9b02, 0xdbf0, 0xaa39, 0x910d, 0x67fc, 0x1, 0x0);
        gbc.writeMem(0xd035, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0xd037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd035));
        EXPECT(0x7c, gbc.readMem(0xd036));
        // CB 7C 0312
        gbc.setState(0x5576, 0x7523, 0xe5e0, 0x92f, 0xd7be, 0x8e89, 0x1, 0x0);
        gbc.writeMem(0x5576, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0313
        gbc.setState(0x2795, 0xf5ca, 0xa5b0, 0xe3a3, 0x2045, 0x8eb4, 0x0, 0x0);
        gbc.writeMem(0x2795, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf5ca, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0314
        gbc.setState(0x1ce2, 0x7698, 0xb7f0, 0xd497, 0x1982, 0xd638, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7698, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0315
        gbc.setState(0x8e6, 0x36ac, 0xafb0, 0xd24a, 0x53f1, 0x5805, 0x0, 0x1);
        gbc.writeMem(0x8e6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0316
        gbc.setState(0x5de5, 0x6edb, 0x73f0, 0x609a, 0x3e8b, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x5de5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0317
        gbc.setState(0xbb44, 0x757f, 0xb680, 0x9b1f, 0xaaac, 0x784e, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb44));
        EXPECT(0x7c, gbc.readMem(0xbb45));
        // CB 7C 0318
        gbc.setState(0x5f40, 0xe525, 0x9180, 0xb779, 0xdce0, 0x828, 0x0, 0x0);
        gbc.writeMem(0x5f40, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe525, gbc.sp());
        EXPECT(0x5f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0319
        gbc.setState(0xeacf, 0x9163, 0x8920, 0x4cf5, 0x9f01, 0x42c2, 0x0, 0x0);
        gbc.writeMem(0xeacf, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0xead1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacf));
        EXPECT(0x7c, gbc.readMem(0xead0));
        // CB 7C 031A
        gbc.setState(0x4839, 0x5aaa, 0xf8e0, 0xa30c, 0xdb3a, 0xfa9d, 0x0, 0x0);
        gbc.writeMem(0x4839, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0x483b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 031B
        gbc.setState(0x662b, 0xefdd, 0xed60, 0xa263, 0x93a2, 0x4e7c, 0x1, 0x0);
        gbc.writeMem(0x662b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0x662d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 031C
        gbc.setState(0xd51a, 0xd47d, 0x41a0, 0xb8cb, 0x3e2e, 0xc73, 0x0, 0x1);
        gbc.writeMem(0xd51a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd47d, gbc.sp());
        EXPECT(0xd51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51a));
        EXPECT(0x7c, gbc.readMem(0xd51b));
        // CB 7C 031D
        gbc.setState(0xc7fc, 0xb428, 0xbc80, 0x5c4d, 0x4774, 0xece, 0x1, 0x1);
        gbc.writeMem(0xc7fc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0xc7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fc));
        EXPECT(0x7c, gbc.readMem(0xc7fd));
        // CB 7C 031E
        gbc.setState(0x9597, 0xd01a, 0x51d0, 0x70c5, 0xaf57, 0xc1e5, 0x0, 0x1);
        gbc.writeMem(0x9597, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd01a, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9597));
        EXPECT(0x7c, gbc.readMem(0x9598));
        // CB 7C 031F
        gbc.setState(0x71df, 0x8da4, 0xfae0, 0x1b8c, 0x966e, 0x5ae2, 0x0, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0320
        gbc.setState(0x71e4, 0xaa90, 0x3300, 0x2de6, 0xb8cc, 0x6403, 0x1, 0x1);
        gbc.writeMem(0x71e4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0321
        gbc.setState(0xed9e, 0x470a, 0x8ad0, 0x9a83, 0x8574, 0xc510, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x470a, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9e));
        EXPECT(0x7c, gbc.readMem(0xed9f));
        // CB 7C 0322
        gbc.setState(0xdaa4, 0xceef, 0xb300, 0x5441, 0xd7be, 0xac1a, 0x0, 0x1);
        gbc.writeMem(0xdaa4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0xdaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa4));
        EXPECT(0x7c, gbc.readMem(0xdaa5));
        // CB 7C 0323
        gbc.setState(0xd357, 0xf6b1, 0x91b0, 0xcf30, 0x7006, 0x8e13, 0x0, 0x0);
        gbc.writeMem(0xd357, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd357));
        EXPECT(0x7c, gbc.readMem(0xd358));
        // CB 7C 0324
        gbc.setState(0x1fa3, 0xa3f5, 0xb530, 0xf86e, 0x415e, 0xa556, 0x1, 0x0);
        gbc.writeMem(0x1fa3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0325
        gbc.setState(0x81f8, 0x5858, 0xdd00, 0x2b42, 0x60ee, 0x1db3, 0x1, 0x0);
        gbc.writeMem(0x81f8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5858, gbc.sp());
        EXPECT(0x81fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f8));
        EXPECT(0x7c, gbc.readMem(0x81f9));
        // CB 7C 0326
        gbc.setState(0x4093, 0xffc3, 0x78e0, 0xf10c, 0x54ab, 0xdb0, 0x0, 0x1);
        gbc.writeMem(0x4093, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xffc3, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0327
        gbc.setState(0x920c, 0x3e4c, 0x5a40, 0x3f92, 0xdbda, 0x32da, 0x1, 0x1);
        gbc.writeMem(0x920c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x920e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920c));
        EXPECT(0x7c, gbc.readMem(0x920d));
        // CB 7C 0328
        gbc.setState(0x27e7, 0x3f8a, 0xf380, 0x4439, 0xd825, 0xd6a6, 0x0, 0x0);
        gbc.writeMem(0x27e7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3f8a, gbc.sp());
        EXPECT(0x27e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0329
        gbc.setState(0x6509, 0xb974, 0xa450, 0x36d0, 0x2378, 0xd1, 0x0, 0x1);
        gbc.writeMem(0x6509, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 032A
        gbc.setState(0xce04, 0x4c1, 0xa6f0, 0x1ae0, 0xf671, 0x844b, 0x0, 0x0);
        gbc.writeMem(0xce04, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4c1, gbc.sp());
        EXPECT(0xce06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce04));
        EXPECT(0x7c, gbc.readMem(0xce05));
        // CB 7C 032B
        gbc.setState(0x9ff8, 0xb296, 0x2b50, 0xf7c3, 0x81f3, 0xa133, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb296, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff8));
        EXPECT(0x7c, gbc.readMem(0x9ff9));
        // CB 7C 032C
        gbc.setState(0x4a48, 0x4976, 0xa6a0, 0xa26b, 0x4fcc, 0xf470, 0x1, 0x1);
        gbc.writeMem(0x4a48, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4976, gbc.sp());
        EXPECT(0x4a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 032D
        gbc.setState(0xe7, 0xebd8, 0xa760, 0x21fd, 0x7c27, 0x5860, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xebd8, gbc.sp());
        EXPECT(0xe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 032E
        gbc.setState(0x127c, 0x50d5, 0xdca0, 0xbefe, 0xcbd5, 0xcf43, 0x0, 0x0);
        gbc.writeMem(0x127c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x50d5, gbc.sp());
        EXPECT(0x127e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 032F
        gbc.setState(0xb6a3, 0xb4b, 0x2320, 0x59e9, 0x9c23, 0x5300, 0x1, 0x1);
        gbc.writeMem(0xb6a3, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0xb6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a3));
        EXPECT(0x7c, gbc.readMem(0xb6a4));
        // CB 7C 0330
        gbc.setState(0xe71e, 0x84c9, 0x6960, 0xa909, 0x5f45, 0x4c98, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0x7c, gbc.readMem(0xe71f));
        // CB 7C 0331
        gbc.setState(0xc971, 0x1825, 0x6ff0, 0x5505, 0x7346, 0x6c71, 0x1, 0x1);
        gbc.writeMem(0xc971, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1825, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc971));
        EXPECT(0x7c, gbc.readMem(0xc972));
        // CB 7C 0332
        gbc.setState(0x7d15, 0x855d, 0x2940, 0x242c, 0x38e0, 0xea7, 0x0, 0x1);
        gbc.writeMem(0x7d15, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x855d, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0333
        gbc.setState(0x122b, 0xc1c6, 0x47f0, 0x1c70, 0x6a8d, 0xc233, 0x1, 0x0);
        gbc.writeMem(0x122b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc1c6, gbc.sp());
        EXPECT(0x122d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0334
        gbc.setState(0x125b, 0x8c65, 0x1f30, 0xe305, 0xff3d, 0x9eb5, 0x0, 0x1);
        gbc.writeMem(0x125b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8c65, gbc.sp());
        EXPECT(0x125d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0335
        gbc.setState(0xce94, 0xc9f4, 0x2160, 0x41cd, 0xc5b1, 0x3afe, 0x1, 0x1);
        gbc.writeMem(0xce94, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc9f4, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0x7c, gbc.readMem(0xce95));
        // CB 7C 0336
        gbc.setState(0x152e, 0xb6b0, 0xced0, 0x1573, 0x5b5a, 0xbee8, 0x0, 0x0);
        gbc.writeMem(0x152e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb6b0, gbc.sp());
        EXPECT(0x1530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0337
        gbc.setState(0x9412, 0xe0b6, 0x1a90, 0x7841, 0x5118, 0x4112, 0x0, 0x1);
        gbc.writeMem(0x9412, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x9414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9412));
        EXPECT(0x7c, gbc.readMem(0x9413));
        // CB 7C 0338
        gbc.setState(0xb4b1, 0x5cc4, 0xec90, 0x15a6, 0x520f, 0x603a, 0x0, 0x0);
        gbc.writeMem(0xb4b1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0xb4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b1));
        EXPECT(0x7c, gbc.readMem(0xb4b2));
        // CB 7C 0339
        gbc.setState(0x64e8, 0x188e, 0xed10, 0x986d, 0x7d7a, 0xbe01, 0x0, 0x1);
        gbc.writeMem(0x64e8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x188e, gbc.sp());
        EXPECT(0x64ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 033A
        gbc.setState(0x3376, 0x2eb4, 0x4ff0, 0x285d, 0xfc80, 0xa63e, 0x0, 0x0);
        gbc.writeMem(0x3376, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2eb4, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 033B
        gbc.setState(0xa602, 0xe1fa, 0xdf00, 0x43c7, 0xcd55, 0x402d, 0x1, 0x0);
        gbc.writeMem(0xa602, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa602));
        EXPECT(0x7c, gbc.readMem(0xa603));
        // CB 7C 033C
        gbc.setState(0x9ac9, 0x2bbe, 0x82a0, 0x30a9, 0x9fb5, 0xafdc, 0x0, 0x1);
        gbc.writeMem(0x9ac9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2bbe, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac9));
        EXPECT(0x7c, gbc.readMem(0x9aca));
        // CB 7C 033D
        gbc.setState(0x612f, 0xf592, 0x8350, 0xcbf0, 0x5dbb, 0xeafc, 0x1, 0x0);
        gbc.writeMem(0x612f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf592, gbc.sp());
        EXPECT(0x6131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 033E
        gbc.setState(0xc7bb, 0xd239, 0x450, 0xdf81, 0x9dc1, 0x5add, 0x1, 0x1);
        gbc.writeMem(0xc7bb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0xc7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bb));
        EXPECT(0x7c, gbc.readMem(0xc7bc));
        // CB 7C 033F
        gbc.setState(0x93a8, 0x2c94, 0xbb0, 0x145f, 0xd54b, 0x3afb, 0x1, 0x1);
        gbc.writeMem(0x93a8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a8));
        EXPECT(0x7c, gbc.readMem(0x93a9));
        // CB 7C 0340
        gbc.setState(0xa416, 0xd4c5, 0xe450, 0x41f9, 0x8b91, 0x5be0, 0x1, 0x0);
        gbc.writeMem(0xa416, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0xa418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa416));
        EXPECT(0x7c, gbc.readMem(0xa417));
        // CB 7C 0341
        gbc.setState(0x9976, 0xe281, 0xb2a0, 0x165a, 0x638d, 0x5cd7, 0x0, 0x0);
        gbc.writeMem(0x9976, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe281, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9976));
        EXPECT(0x7c, gbc.readMem(0x9977));
        // CB 7C 0342
        gbc.setState(0x9aee, 0xad15, 0x7b80, 0xbdd8, 0x5193, 0x1a34, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xad15, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aee));
        EXPECT(0x7c, gbc.readMem(0x9aef));
        // CB 7C 0343
        gbc.setState(0x1f9c, 0xaa73, 0x3600, 0xd8ec, 0xf6cf, 0x29ee, 0x1, 0x1);
        gbc.writeMem(0x1f9c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaa73, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0344
        gbc.setState(0x600c, 0xd2e2, 0xcb70, 0x5dec, 0x135d, 0x8955, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd2e2, gbc.sp());
        EXPECT(0x600e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0345
        gbc.setState(0xce0, 0x777d, 0x3a40, 0x324e, 0x86ee, 0xf8d5, 0x1, 0x0);
        gbc.writeMem(0xce0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x777d, gbc.sp());
        EXPECT(0xce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0346
        gbc.setState(0xdbf7, 0x87ba, 0x6680, 0x3d87, 0x1c1e, 0x134f, 0x1, 0x1);
        gbc.writeMem(0xdbf7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x87ba, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf7));
        EXPECT(0x7c, gbc.readMem(0xdbf8));
        // CB 7C 0347
        gbc.setState(0xc2b2, 0x7ef2, 0x5680, 0x75c7, 0x5c7b, 0x738d, 0x0, 0x1);
        gbc.writeMem(0xc2b2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ef2, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b2));
        EXPECT(0x7c, gbc.readMem(0xc2b3));
        // CB 7C 0348
        gbc.setState(0x3d1a, 0xb551, 0x20d0, 0x586b, 0xfbf6, 0x3ebc, 0x0, 0x0);
        gbc.writeMem(0x3d1a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb551, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0349
        gbc.setState(0x835b, 0xb959, 0x3840, 0x27c0, 0xcd9a, 0x134c, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb959, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0x7c, gbc.readMem(0x835c));
        // CB 7C 034A
        gbc.setState(0xd7d8, 0xa1cc, 0x5150, 0x18f8, 0xfc84, 0xe76d, 0x1, 0x1);
        gbc.writeMem(0xd7d8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa1cc, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d8));
        EXPECT(0x7c, gbc.readMem(0xd7d9));
        // CB 7C 034B
        gbc.setState(0xeb49, 0xc136, 0x50a0, 0x3200, 0x7a9, 0xd314, 0x1, 0x0);
        gbc.writeMem(0xeb49, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb49));
        EXPECT(0x7c, gbc.readMem(0xeb4a));
        // CB 7C 034C
        gbc.setState(0x363f, 0x30e6, 0x73d0, 0xdd6e, 0x497f, 0x2fa0, 0x1, 0x0);
        gbc.writeMem(0x363f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x30e6, gbc.sp());
        EXPECT(0x3641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 034D
        gbc.setState(0xd631, 0x95bc, 0x7c60, 0x64fb, 0x7792, 0x59fc, 0x1, 0x0);
        gbc.writeMem(0xd631, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x95bc, gbc.sp());
        EXPECT(0xd633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd631));
        EXPECT(0x7c, gbc.readMem(0xd632));
        // CB 7C 034E
        gbc.setState(0x8311, 0x7588, 0xbec0, 0xa7ca, 0x5414, 0x969b, 0x1, 0x0);
        gbc.writeMem(0x8311, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0x8313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8311));
        EXPECT(0x7c, gbc.readMem(0x8312));
        // CB 7C 0350
        gbc.setState(0x670, 0x301c, 0xcc10, 0xb006, 0xc440, 0xfa9d, 0x1, 0x0);
        gbc.writeMem(0x670, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0x672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0351
        gbc.setState(0x5ee2, 0x1a5a, 0x8490, 0x7af4, 0x4102, 0x9907, 0x0, 0x1);
        gbc.writeMem(0x5ee2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1a5a, gbc.sp());
        EXPECT(0x5ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0352
        gbc.setState(0xc30a, 0xc18b, 0xeb40, 0x9c45, 0xf13f, 0x9c37, 0x0, 0x0);
        gbc.writeMem(0xc30a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc18b, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0x7c, gbc.readMem(0xc30b));
        // CB 7C 0353
        gbc.setState(0xaaf1, 0x8a0d, 0xff40, 0x93ba, 0x74d, 0x63c1, 0x1, 0x0);
        gbc.writeMem(0xaaf1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0xaaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf1));
        EXPECT(0x7c, gbc.readMem(0xaaf2));
        // CB 7C 0354
        gbc.setState(0x8541, 0x3141, 0x92c0, 0xab66, 0x3d52, 0x4292, 0x0, 0x1);
        gbc.writeMem(0x8541, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3141, gbc.sp());
        EXPECT(0x8543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8541));
        EXPECT(0x7c, gbc.readMem(0x8542));
        // CB 7C 0355
        gbc.setState(0x202b, 0xf5ba, 0xc0, 0x53a3, 0x76d2, 0x393e, 0x1, 0x0);
        gbc.writeMem(0x202b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5ba, gbc.sp());
        EXPECT(0x202d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0356
        gbc.setState(0x3a31, 0xe8df, 0x8090, 0xa971, 0xd221, 0xf183, 0x0, 0x1);
        gbc.writeMem(0x3a31, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0x3a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0357
        gbc.setState(0x7eed, 0xb01a, 0xcc70, 0xe613, 0x93d5, 0xfa67, 0x0, 0x0);
        gbc.writeMem(0x7eed, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0358
        gbc.setState(0x3702, 0x3363, 0x8170, 0x6147, 0xf3cb, 0x398, 0x1, 0x0);
        gbc.writeMem(0x3702, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0x3704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0359
        gbc.setState(0x3909, 0x7687, 0xec50, 0xf5fd, 0x4667, 0xe00c, 0x0, 0x0);
        gbc.writeMem(0x3909, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 035A
        gbc.setState(0x5994, 0x5042, 0x81a0, 0x996c, 0x1463, 0x72c6, 0x0, 0x1);
        gbc.writeMem(0x5994, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5042, gbc.sp());
        EXPECT(0x5996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 035C
        gbc.setState(0x9e58, 0x4445, 0x3900, 0x26e1, 0x44fe, 0xc8, 0x0, 0x1);
        gbc.writeMem(0x9e58, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4445, gbc.sp());
        EXPECT(0x9e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e58));
        EXPECT(0x7c, gbc.readMem(0x9e59));
        // CB 7C 035D
        gbc.setState(0xe6a6, 0x855, 0xceb0, 0x528c, 0x81af, 0xa125, 0x1, 0x1);
        gbc.writeMem(0xe6a6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x855, gbc.sp());
        EXPECT(0xe6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a6));
        EXPECT(0x7c, gbc.readMem(0xe6a7));
        // CB 7C 035E
        gbc.setState(0xc8f0, 0xbe2c, 0x9560, 0x54dc, 0x5206, 0xf930, 0x0, 0x1);
        gbc.writeMem(0xc8f0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbe2c, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f0));
        EXPECT(0x7c, gbc.readMem(0xc8f1));
        // CB 7C 035F
        gbc.setState(0x8b19, 0xa52d, 0xb290, 0x582c, 0xa83a, 0xbb93, 0x0, 0x0);
        gbc.writeMem(0x8b19, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0x7c, gbc.readMem(0x8b1a));
        // CB 7C 0361
        gbc.setState(0x9a5c, 0x309d, 0xea90, 0xa659, 0xcf2c, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0x9a5c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5c));
        EXPECT(0x7c, gbc.readMem(0x9a5d));
        // CB 7C 0362
        gbc.setState(0xbf66, 0xe36e, 0x2d60, 0x359f, 0x46d5, 0x91b3, 0x1, 0x0);
        gbc.writeMem(0xbf66, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe36e, gbc.sp());
        EXPECT(0xbf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf66));
        EXPECT(0x7c, gbc.readMem(0xbf67));
        // CB 7C 0363
        gbc.setState(0x2cc4, 0xa21a, 0x5b00, 0x3d1e, 0x9dda, 0x1f28, 0x0, 0x0);
        gbc.writeMem(0x2cc4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa21a, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0364
        gbc.setState(0x714a, 0x9e9a, 0xb830, 0xbeed, 0x295a, 0x1ae3, 0x1, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9e9a, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0365
        gbc.setState(0xbe02, 0x92e7, 0xe140, 0x7b4c, 0x28e9, 0x4e6b, 0x1, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x92e7, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0x7c, gbc.readMem(0xbe03));
        // CB 7C 0366
        gbc.setState(0x5f45, 0x46d, 0xe900, 0x691f, 0x9e55, 0xa0d3, 0x0, 0x0);
        gbc.writeMem(0x5f45, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x46d, gbc.sp());
        EXPECT(0x5f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0367
        gbc.setState(0xc2ea, 0xa743, 0x8e70, 0x36bd, 0x67d, 0xe137, 0x0, 0x0);
        gbc.writeMem(0xc2ea, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ea));
        EXPECT(0x7c, gbc.readMem(0xc2eb));
        // CB 7C 0368
        gbc.setState(0x208f, 0x217, 0xe010, 0xec9d, 0x42d7, 0xcd63, 0x0, 0x1);
        gbc.writeMem(0x208f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x217, gbc.sp());
        EXPECT(0x2091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0369
        gbc.setState(0xaacb, 0xa875, 0xfca0, 0x6b18, 0xd6ea, 0x6c2, 0x0, 0x1);
        gbc.writeMem(0xaacb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa875, gbc.sp());
        EXPECT(0xaacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacb));
        EXPECT(0x7c, gbc.readMem(0xaacc));
        // CB 7C 036A
        gbc.setState(0xc9b7, 0x9157, 0x3340, 0x63c3, 0x6016, 0x5e39, 0x0, 0x0);
        gbc.writeMem(0xc9b7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0xc9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b7));
        EXPECT(0x7c, gbc.readMem(0xc9b8));
        // CB 7C 036C
        gbc.setState(0x80c7, 0x6b7d, 0xd4e0, 0xca1c, 0xd48c, 0x4963, 0x1, 0x0);
        gbc.writeMem(0x80c7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6b7d, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c7));
        EXPECT(0x7c, gbc.readMem(0x80c8));
        // CB 7C 036D
        gbc.setState(0x393a, 0x9b4c, 0x60e0, 0xdf62, 0x974, 0xcc69, 0x0, 0x1);
        gbc.writeMem(0x393a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9b4c, gbc.sp());
        EXPECT(0x393c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 036E
        gbc.setState(0x72f1, 0xb7dd, 0xeaa0, 0xf02f, 0x6395, 0xbd5e, 0x0, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb7dd, gbc.sp());
        EXPECT(0x72f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 036F
        gbc.setState(0xc32, 0x28eb, 0x23d0, 0x317, 0xd3e2, 0xb853, 0x0, 0x0);
        gbc.writeMem(0xc32, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0xc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0370
        gbc.setState(0x441b, 0x77e5, 0x35d0, 0x5acd, 0xcc62, 0xce28, 0x1, 0x1);
        gbc.writeMem(0x441b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x77e5, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0371
        gbc.setState(0xa14d, 0x7e24, 0x92b0, 0xa27a, 0x2f68, 0x2c59, 0x0, 0x0);
        gbc.writeMem(0xa14d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14d));
        EXPECT(0x7c, gbc.readMem(0xa14e));
        // CB 7C 0372
        gbc.setState(0x89a9, 0xeca3, 0xbd10, 0x44b2, 0xe73, 0xebf0, 0x1, 0x0);
        gbc.writeMem(0x89a9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeca3, gbc.sp());
        EXPECT(0x89ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a9));
        EXPECT(0x7c, gbc.readMem(0x89aa));
        // CB 7C 0373
        gbc.setState(0x2cff, 0xa27c, 0x360, 0x93, 0x2393, 0xb1f2, 0x0, 0x1);
        gbc.writeMem(0x2cff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa27c, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0374
        gbc.setState(0x8986, 0x30bd, 0x6ed0, 0x6f31, 0xdf45, 0x6281, 0x0, 0x1);
        gbc.writeMem(0x8986, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0x8988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8986));
        EXPECT(0x7c, gbc.readMem(0x8987));
        // CB 7C 0375
        gbc.setState(0x45bc, 0xf16a, 0xb060, 0xc9e, 0xbc69, 0xea1a, 0x1, 0x1);
        gbc.writeMem(0x45bc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf16a, gbc.sp());
        EXPECT(0x45be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0376
        gbc.setState(0x6ed8, 0xbc7e, 0x84d0, 0xa83f, 0x580, 0xa000, 0x0, 0x1);
        gbc.writeMem(0x6ed8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0x6eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0377
        gbc.setState(0x25ca, 0xaff0, 0xc400, 0x58c2, 0x4ed5, 0x22de, 0x1, 0x1);
        gbc.writeMem(0x25ca, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaff0, gbc.sp());
        EXPECT(0x25cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0378
        gbc.setState(0xed3e, 0x87f0, 0xd2f0, 0xe826, 0x764a, 0xa95f, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3e));
        EXPECT(0x7c, gbc.readMem(0xed3f));
        // CB 7C 0379
        gbc.setState(0x3e44, 0x4437, 0xae00, 0x5757, 0xd2a3, 0x83c7, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x3e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 037A
        gbc.setState(0x8691, 0xe093, 0x9eb0, 0xab4c, 0x901d, 0x49aa, 0x1, 0x1);
        gbc.writeMem(0x8691, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8691));
        EXPECT(0x7c, gbc.readMem(0x8692));
        // CB 7C 037B
        gbc.setState(0xaa32, 0x87c4, 0x67f0, 0xbaf4, 0x6a93, 0x139b, 0x1, 0x0);
        gbc.writeMem(0xaa32, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x87c4, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa32));
        EXPECT(0x7c, gbc.readMem(0xaa33));
        // CB 7C 037C
        gbc.setState(0x196, 0xb365, 0x6980, 0x17f, 0xe15c, 0xaa49, 0x1, 0x0);
        gbc.writeMem(0x196, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 037D
        gbc.setState(0x3bb0, 0xe18a, 0xa2e0, 0xc300, 0x36dc, 0xf7df, 0x0, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 037E
        gbc.setState(0xeb15, 0xd68b, 0xcd60, 0x70ed, 0x7baa, 0xaf44, 0x0, 0x1);
        gbc.writeMem(0xeb15, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd68b, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0x7c, gbc.readMem(0xeb16));
        // CB 7C 037F
        gbc.setState(0x2786, 0xcbb4, 0x8320, 0x21fb, 0xa7a8, 0xeca6, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcbb4, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0380
        gbc.setState(0x145f, 0xa9c, 0x2f00, 0xc7a9, 0x7df2, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x145f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0x1461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0381
        gbc.setState(0x78ea, 0x5f4e, 0x6e10, 0x71e3, 0xe08, 0xb4d1, 0x0, 0x1);
        gbc.writeMem(0x78ea, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5f4e, gbc.sp());
        EXPECT(0x78ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0384
        gbc.setState(0xec15, 0x1648, 0x7b0, 0x3030, 0x4f3f, 0x9392, 0x0, 0x1);
        gbc.writeMem(0xec15, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0xec17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec15));
        EXPECT(0x7c, gbc.readMem(0xec16));
        // CB 7C 0385
        gbc.setState(0x4209, 0x2dd, 0xe860, 0xa31c, 0x63b2, 0xbd76, 0x0, 0x0);
        gbc.writeMem(0x4209, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2dd, gbc.sp());
        EXPECT(0x420b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0386
        gbc.setState(0x35c9, 0x6dff, 0xd10, 0x4ab4, 0x1f82, 0x38f5, 0x0, 0x1);
        gbc.writeMem(0x35c9, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6dff, gbc.sp());
        EXPECT(0x35cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0387
        gbc.setState(0x6730, 0xa633, 0x2490, 0x9580, 0x5269, 0xb55e, 0x0, 0x1);
        gbc.writeMem(0x6730, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa633, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0388
        gbc.setState(0xa20d, 0xca77, 0x8000, 0x90a0, 0x4e15, 0x2dd7, 0x0, 0x0);
        gbc.writeMem(0xa20d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xca77, gbc.sp());
        EXPECT(0xa20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20d));
        EXPECT(0x7c, gbc.readMem(0xa20e));
        // CB 7C 038A
        gbc.setState(0x8d12, 0x486d, 0xff70, 0xe39c, 0xd7c0, 0xf17a, 0x1, 0x0);
        gbc.writeMem(0x8d12, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x8d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d12));
        EXPECT(0x7c, gbc.readMem(0x8d13));
        // CB 7C 038B
        gbc.setState(0x55cc, 0xb2bc, 0x59a0, 0x26c7, 0x1bdb, 0x9203, 0x0, 0x1);
        gbc.writeMem(0x55cc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 038C
        gbc.setState(0x93f8, 0x39e7, 0x1c40, 0xa841, 0x82af, 0x4892, 0x0, 0x0);
        gbc.writeMem(0x93f8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x39e7, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f8));
        EXPECT(0x7c, gbc.readMem(0x93f9));
        // CB 7C 038D
        gbc.setState(0x9769, 0x2112, 0xcd90, 0x3d40, 0x7b2f, 0xa4c2, 0x0, 0x0);
        gbc.writeMem(0x9769, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2112, gbc.sp());
        EXPECT(0x976b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9769));
        EXPECT(0x7c, gbc.readMem(0x976a));
        // CB 7C 038F
        gbc.setState(0xbb2, 0x5953, 0xca40, 0xfc9d, 0x2c92, 0x35fa, 0x0, 0x0);
        gbc.writeMem(0xbb2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5953, gbc.sp());
        EXPECT(0xbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0390
        gbc.setState(0x6bb6, 0x92e0, 0xe7b0, 0x4bdf, 0x7865, 0x7d0, 0x0, 0x0);
        gbc.writeMem(0x6bb6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0x6bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 0391
        gbc.setState(0xde0e, 0x9a2e, 0x7940, 0x4fa9, 0xf81d, 0x73a6, 0x0, 0x1);
        gbc.writeMem(0xde0e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9a2e, gbc.sp());
        EXPECT(0xde10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0e));
        EXPECT(0x7c, gbc.readMem(0xde0f));
        // CB 7C 0392
        gbc.setState(0x8177, 0x61be, 0x9140, 0x7cdb, 0x3a49, 0x1599, 0x1, 0x1);
        gbc.writeMem(0x8177, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0x8179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8177));
        EXPECT(0x7c, gbc.readMem(0x8178));
        // CB 7C 0393
        gbc.setState(0x9d4d, 0x4f7a, 0xaa80, 0x720, 0xca13, 0x2e71, 0x0, 0x0);
        gbc.writeMem(0x9d4d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0x9d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4d));
        EXPECT(0x7c, gbc.readMem(0x9d4e));
        // CB 7C 0394
        gbc.setState(0x750f, 0x59b5, 0x5760, 0xa3ea, 0x4739, 0x7719, 0x0, 0x1);
        gbc.writeMem(0x750f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x59b5, gbc.sp());
        EXPECT(0x7511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0395
        gbc.setState(0x3a3c, 0x83bc, 0x2c0, 0xdcee, 0x5988, 0xf53a, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x83bc, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0396
        gbc.setState(0x884f, 0xcc06, 0xdda0, 0xc079, 0xa9e1, 0x64d3, 0x0, 0x1);
        gbc.writeMem(0x884f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcc06, gbc.sp());
        EXPECT(0x8851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884f));
        EXPECT(0x7c, gbc.readMem(0x8850));
        // CB 7C 0397
        gbc.setState(0x29c8, 0x1f37, 0xece0, 0x72d, 0x3aa9, 0x7ed5, 0x0, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1f37, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 0398
        gbc.setState(0xcc27, 0x3014, 0xbb60, 0xb167, 0x65e4, 0x5e5d, 0x0, 0x0);
        gbc.writeMem(0xcc27, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3014, gbc.sp());
        EXPECT(0xcc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc27));
        EXPECT(0x7c, gbc.readMem(0xcc28));
        // CB 7C 0399
        gbc.setState(0xe07f, 0xa1db, 0x8460, 0xe108, 0x65eb, 0xe4c8, 0x0, 0x1);
        gbc.writeMem(0xe07f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa1db, gbc.sp());
        EXPECT(0xe081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07f));
        EXPECT(0x7c, gbc.readMem(0xe080));
        // CB 7C 039A
        gbc.setState(0x37a1, 0x8157, 0xe3e0, 0x26dd, 0xa073, 0x2baa, 0x0, 0x0);
        gbc.writeMem(0x37a1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0x37a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 039B
        gbc.setState(0x66e7, 0x21d0, 0xd3c0, 0xe062, 0x139, 0xa77e, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x21d0, gbc.sp());
        EXPECT(0x66e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 039C
        gbc.setState(0xdc90, 0x5188, 0xa750, 0x929, 0x52f3, 0x1f9d, 0x1, 0x1);
        gbc.writeMem(0xdc90, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5188, gbc.sp());
        EXPECT(0xdc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc90));
        EXPECT(0x7c, gbc.readMem(0xdc91));
        // CB 7C 039D
        gbc.setState(0x8940, 0x58d8, 0xdc80, 0x6125, 0xb6eb, 0x219f, 0x1, 0x0);
        gbc.writeMem(0x8940, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x58d8, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8940));
        EXPECT(0x7c, gbc.readMem(0x8941));
        // CB 7C 039E
        gbc.setState(0xb351, 0xbdcb, 0x5a00, 0xb1ce, 0x57ef, 0x7a8d, 0x1, 0x0);
        gbc.writeMem(0xb351, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0xb353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb351));
        EXPECT(0x7c, gbc.readMem(0xb352));
        // CB 7C 039F
        gbc.setState(0xcb8a, 0x6f06, 0x5e30, 0x2d4a, 0xee31, 0x54b5, 0x1, 0x0);
        gbc.writeMem(0xcb8a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f06, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0x7c, gbc.readMem(0xcb8b));
        // CB 7C 03A0
        gbc.setState(0xe2c6, 0xf068, 0x2630, 0x8fc2, 0x9aec, 0x2ec1, 0x0, 0x0);
        gbc.writeMem(0xe2c6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c6));
        EXPECT(0x7c, gbc.readMem(0xe2c7));
        // CB 7C 03A1
        gbc.setState(0xd6de, 0xe4fb, 0x9dc0, 0xb6f6, 0x8a1c, 0x97eb, 0x0, 0x1);
        gbc.writeMem(0xd6de, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe4fb, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6de));
        EXPECT(0x7c, gbc.readMem(0xd6df));
        // CB 7C 03A2
        gbc.setState(0x9f9c, 0x1a91, 0xb500, 0xb016, 0x780e, 0xeb14, 0x0, 0x0);
        gbc.writeMem(0x9f9c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0x9f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9c));
        EXPECT(0x7c, gbc.readMem(0x9f9d));
        // CB 7C 03A3
        gbc.setState(0x42fb, 0x44f7, 0x8880, 0x4018, 0x5727, 0x23b3, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0x42fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03A4
        gbc.setState(0x1b41, 0xc6cc, 0xde60, 0x34be, 0x7ab7, 0xace6, 0x0, 0x0);
        gbc.writeMem(0x1b41, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc6cc, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03A5
        gbc.setState(0x208, 0xec11, 0x1710, 0x4e39, 0x7116, 0xe617, 0x1, 0x1);
        gbc.writeMem(0x208, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03A6
        gbc.setState(0x24e6, 0x6ef2, 0x63f0, 0x8afa, 0xf7cf, 0x10d1, 0x0, 0x0);
        gbc.writeMem(0x24e6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0x24e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03A7
        gbc.setState(0x73ac, 0x41e, 0x6550, 0x3b75, 0x9b43, 0x9f30, 0x0, 0x1);
        gbc.writeMem(0x73ac, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x41e, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03A8
        gbc.setState(0x6898, 0xe7e3, 0x67e0, 0x9220, 0x9dbb, 0xd825, 0x1, 0x1);
        gbc.writeMem(0x6898, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe7e3, gbc.sp());
        EXPECT(0x689a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03A9
        gbc.setState(0x9d88, 0x2349, 0xd1a0, 0xe12b, 0x612f, 0xd8eb, 0x1, 0x0);
        gbc.writeMem(0x9d88, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2349, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d88));
        EXPECT(0x7c, gbc.readMem(0x9d89));
        // CB 7C 03AC
        gbc.setState(0xd149, 0x90a9, 0xa470, 0x35f2, 0x6a3f, 0x2765, 0x1, 0x0);
        gbc.writeMem(0xd149, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x90a9, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd149));
        EXPECT(0x7c, gbc.readMem(0xd14a));
        // CB 7C 03AD
        gbc.setState(0x3ed1, 0xcdce, 0x8990, 0xdab4, 0xbb0d, 0x34d8, 0x0, 0x0);
        gbc.writeMem(0x3ed1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03AE
        gbc.setState(0x3fd4, 0x5ebe, 0x7b20, 0x2ce1, 0x3261, 0xb6e5, 0x1, 0x0);
        gbc.writeMem(0x3fd4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5ebe, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03AF
        gbc.setState(0x7953, 0x805b, 0xe0c0, 0x8400, 0xcb01, 0x4ee5, 0x1, 0x0);
        gbc.writeMem(0x7953, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x805b, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03B0
        gbc.setState(0xc128, 0xa6f5, 0xa300, 0xcfb6, 0x6696, 0xd07f, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa6f5, gbc.sp());
        EXPECT(0xc12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc128));
        EXPECT(0x7c, gbc.readMem(0xc129));
        // CB 7C 03B1
        gbc.setState(0xcefe, 0xbaa9, 0x5480, 0xb45, 0x819a, 0xad72, 0x1, 0x1);
        gbc.writeMem(0xcefe, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbaa9, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefe));
        EXPECT(0x7c, gbc.readMem(0xceff));
        // CB 7C 03B2
        gbc.setState(0xd218, 0x4906, 0x2530, 0x9d18, 0xcff8, 0xd5ed, 0x1, 0x0);
        gbc.writeMem(0xd218, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0xd21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd218));
        EXPECT(0x7c, gbc.readMem(0xd219));
        // CB 7C 03B3
        gbc.setState(0xd210, 0x3a54, 0xe740, 0xb5bd, 0x37c1, 0xf2fe, 0x1, 0x1);
        gbc.writeMem(0xd210, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd210));
        EXPECT(0x7c, gbc.readMem(0xd211));
        // CB 7C 03B4
        gbc.setState(0xcb0b, 0x74a1, 0x6b10, 0x4177, 0x445f, 0x46b5, 0x0, 0x1);
        gbc.writeMem(0xcb0b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0xcb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0b));
        EXPECT(0x7c, gbc.readMem(0xcb0c));
        // CB 7C 03B5
        gbc.setState(0x2347, 0x9d90, 0x1920, 0x8384, 0xbf7, 0x7f7a, 0x0, 0x1);
        gbc.writeMem(0x2347, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9d90, gbc.sp());
        EXPECT(0x2349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03B6
        gbc.setState(0xec98, 0x11b7, 0xaf20, 0x1a49, 0x9254, 0x8913, 0x1, 0x1);
        gbc.writeMem(0xec98, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x11b7, gbc.sp());
        EXPECT(0xec9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec98));
        EXPECT(0x7c, gbc.readMem(0xec99));
        // CB 7C 03B7
        gbc.setState(0xa160, 0xd621, 0x32a0, 0x2df, 0x4895, 0x4ee0, 0x1, 0x0);
        gbc.writeMem(0xa160, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa160));
        EXPECT(0x7c, gbc.readMem(0xa161));
        // CB 7C 03B8
        gbc.setState(0x8d79, 0x2806, 0x20f0, 0x8523, 0x9ea3, 0x7fea, 0x0, 0x1);
        gbc.writeMem(0x8d79, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2806, gbc.sp());
        EXPECT(0x8d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d79));
        EXPECT(0x7c, gbc.readMem(0x8d7a));
        // CB 7C 03B9
        gbc.setState(0x316f, 0x9c81, 0x3040, 0xbe23, 0x5580, 0x876f, 0x0, 0x1);
        gbc.writeMem(0x316f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0x3171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03BA
        gbc.setState(0xf9c, 0x443a, 0x67a0, 0x103a, 0xf577, 0xb92e, 0x1, 0x1);
        gbc.writeMem(0xf9c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x443a, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03BB
        gbc.setState(0x119a, 0xcdb0, 0x43c0, 0xbb4f, 0x799e, 0x64a6, 0x1, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcdb0, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03BC
        gbc.setState(0xdace, 0x3ffa, 0xe990, 0xb9ab, 0x45f, 0xcc69, 0x1, 0x1);
        gbc.writeMem(0xdace, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3ffa, gbc.sp());
        EXPECT(0xdad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdace));
        EXPECT(0x7c, gbc.readMem(0xdacf));
        // CB 7C 03BE
        gbc.setState(0x898, 0x30cd, 0x11c0, 0x3a6e, 0x108d, 0xcc2e, 0x1, 0x1);
        gbc.writeMem(0x898, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03BF
        gbc.setState(0xd419, 0x3d09, 0x42d0, 0x9b4, 0x4091, 0x3be7, 0x0, 0x0);
        gbc.writeMem(0xd419, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0xd41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd419));
        EXPECT(0x7c, gbc.readMem(0xd41a));
        // CB 7C 03C0
        gbc.setState(0xb24f, 0x92dc, 0xf900, 0x96b5, 0x9e47, 0xd73b, 0x1, 0x0);
        gbc.writeMem(0xb24f, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x92dc, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0x7c, gbc.readMem(0xb250));
        // CB 7C 03C2
        gbc.setState(0x41e4, 0x3ee8, 0xf170, 0x5bc9, 0xb1cc, 0xf1d0, 0x0, 0x0);
        gbc.writeMem(0x41e4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3ee8, gbc.sp());
        EXPECT(0x41e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03C3
        gbc.setState(0x6609, 0x4c65, 0xe430, 0x9262, 0xc21f, 0x4d77, 0x1, 0x0);
        gbc.writeMem(0x6609, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c65, gbc.sp());
        EXPECT(0x660b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03C4
        gbc.setState(0x9b2d, 0x83ad, 0x71c0, 0x1622, 0xbc4b, 0xe5c1, 0x0, 0x0);
        gbc.writeMem(0x9b2d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2d));
        EXPECT(0x7c, gbc.readMem(0x9b2e));
        // CB 7C 03C5
        gbc.setState(0xcb9d, 0x88ef, 0xe750, 0x3dbf, 0x60b1, 0x6316, 0x0, 0x0);
        gbc.writeMem(0xcb9d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9d));
        EXPECT(0x7c, gbc.readMem(0xcb9e));
        // CB 7C 03C6
        gbc.setState(0x978e, 0xfcc6, 0x6950, 0xedce, 0x2a24, 0xb388, 0x1, 0x1);
        gbc.writeMem(0x978e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfcc6, gbc.sp());
        EXPECT(0x9790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978e));
        EXPECT(0x7c, gbc.readMem(0x978f));
        // CB 7C 03C7
        gbc.setState(0xb95e, 0x1631, 0x2910, 0xc9a4, 0xfafe, 0xdfbe, 0x1, 0x1);
        gbc.writeMem(0xb95e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0xb960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95e));
        EXPECT(0x7c, gbc.readMem(0xb95f));
        // CB 7C 03C8
        gbc.setState(0x9cd5, 0x4f33, 0x3e80, 0x215, 0xbb43, 0xb7c9, 0x1, 0x1);
        gbc.writeMem(0x9cd5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd5));
        EXPECT(0x7c, gbc.readMem(0x9cd6));
        // CB 7C 03C9
        gbc.setState(0x189a, 0x72a3, 0x96b0, 0xfbb2, 0x17c4, 0x4efb, 0x0, 0x0);
        gbc.writeMem(0x189a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0x189c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03CA
        gbc.setState(0x6ad4, 0x62b9, 0xad00, 0x9b36, 0xecc3, 0xbebf, 0x0, 0x0);
        gbc.writeMem(0x6ad4, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x62b9, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03CB
        gbc.setState(0x214b, 0x1c52, 0x6110, 0x8522, 0x647f, 0x86ba, 0x1, 0x1);
        gbc.writeMem(0x214b, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1c52, gbc.sp());
        EXPECT(0x214d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03CD
        gbc.setState(0xa966, 0x20a6, 0x6930, 0xd74e, 0xfd6a, 0xaa7d, 0x0, 0x0);
        gbc.writeMem(0xa966, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x20a6, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa966));
        EXPECT(0x7c, gbc.readMem(0xa967));
        // CB 7C 03CE
        gbc.setState(0xc1fb, 0xe792, 0x9940, 0x6fea, 0x3e6a, 0x9968, 0x0, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe792, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fb));
        EXPECT(0x7c, gbc.readMem(0xc1fc));
        // CB 7C 03CF
        gbc.setState(0xbc56, 0x4bd8, 0x6f50, 0xb978, 0xc311, 0x5a0b, 0x0, 0x0);
        gbc.writeMem(0xbc56, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4bd8, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc56));
        EXPECT(0x7c, gbc.readMem(0xbc57));
        // CB 7C 03D0
        gbc.setState(0x11ff, 0x59d1, 0x6240, 0x637e, 0x1578, 0x2d42, 0x1, 0x0);
        gbc.writeMem(0x11ff, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x1201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03D1
        gbc.setState(0x68cd, 0x71b2, 0xf900, 0xd96e, 0x445a, 0x6051, 0x1, 0x0);
        gbc.writeMem(0x68cd, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x71b2, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03D2
        gbc.setState(0x634e, 0xf73c, 0xe40, 0xabe6, 0x270, 0x6850, 0x0, 0x0);
        gbc.writeMem(0x634e, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf73c, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03D3
        gbc.setState(0xa608, 0xcf18, 0x5960, 0xc192, 0xda50, 0xc2ae, 0x0, 0x1);
        gbc.writeMem(0xa608, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcf18, gbc.sp());
        EXPECT(0xa60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa608));
        EXPECT(0x7c, gbc.readMem(0xa609));
        // CB 7C 03D4
        gbc.setState(0x4cc5, 0x9362, 0x1a60, 0x8829, 0x558f, 0xafc, 0x1, 0x1);
        gbc.writeMem(0x4cc5, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03D5
        gbc.setState(0x65d0, 0x89e4, 0xe370, 0x790e, 0x13da, 0x507a, 0x1, 0x1);
        gbc.writeMem(0x65d0, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x89e4, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03D6
        gbc.setState(0x14b6, 0xed85, 0x7900, 0xcd2d, 0x95da, 0x5a42, 0x1, 0x0);
        gbc.writeMem(0x14b6, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xed85, gbc.sp());
        EXPECT(0x14b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03D7
        gbc.setState(0xb262, 0x66f8, 0x8ea0, 0x18ed, 0x1cf, 0x99f2, 0x1, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x66f8, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0x7c, gbc.readMem(0xb263));
        // CB 7C 03D8
        gbc.setState(0x391d, 0x647c, 0xf230, 0x19bc, 0xbaac, 0x3483, 0x1, 0x1);
        gbc.writeMem(0x391d, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03D9
        gbc.setState(0xc441, 0xd4e7, 0xe1a0, 0xf5e2, 0xae73, 0x1ddb, 0x1, 0x0);
        gbc.writeMem(0xc441, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd4e7, gbc.sp());
        EXPECT(0xc443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc441));
        EXPECT(0x7c, gbc.readMem(0xc442));
        // CB 7C 03DA
        gbc.setState(0xc461, 0x3474, 0x4980, 0x3ee5, 0x1e9b, 0x15d4, 0x0, 0x1);
        gbc.writeMem(0xc461, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3474, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc461));
        EXPECT(0x7c, gbc.readMem(0xc462));
        // CB 7C 03DB
        gbc.setState(0x469, 0x3cd8, 0xc90, 0x1067, 0x68ef, 0xae4c, 0x0, 0x1);
        gbc.writeMem(0x469, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3cd8, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03DC
        gbc.setState(0x40eb, 0xbbfb, 0x2aa0, 0x8cdb, 0x7a52, 0x711, 0x0, 0x0);
        gbc.writeMem(0x40eb, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbbfb, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03DD
        gbc.setState(0xa653, 0xd0e8, 0x52e0, 0xdd4d, 0x52a2, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0xa653, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0xa655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa653));
        EXPECT(0x7c, gbc.readMem(0xa654));
        // CB 7C 03DE
        gbc.setState(0x9735, 0x12c1, 0x9560, 0xe34a, 0x15fc, 0x68bd, 0x1, 0x0);
        gbc.writeMem(0x9735, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x9737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9735));
        EXPECT(0x7c, gbc.readMem(0x9736));
        // CB 7C 03DF
        gbc.setState(0x2df7, 0xdc0a, 0xc5d0, 0x2f56, 0x83fe, 0x84a1, 0x1, 0x1);
        gbc.writeMem(0x2df7, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdc0a, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7C 03E0
        gbc.setState(0xcbbc, 0xd85, 0xfec0, 0x5d8d, 0x819, 0x9e96, 0x0, 0x1);
        gbc.writeMem(0xcbbc, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd85, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbc));
        EXPECT(0x7c, gbc.readMem(0xcbbd));
        // CB 7C 03E1
        gbc.setState(0x4ae1, 0x926b, 0x1660, 0x6f78, 0x5393, 0x30eb, 0x1, 0x0);
        gbc.writeMem(0x4ae1, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0x4ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7C 03E3
        gbc.setState(0x850c, 0xe561, 0x3a40, 0x86f3, 0x1a3a, 0xec84, 0x0, 0x1);
        gbc.writeMem(0x850c, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe561, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0x7c, gbc.readMem(0x850d));
        // CB 7C 03E4
        gbc.setState(0xe332, 0x5cb3, 0xee40, 0xc5e5, 0xf0aa, 0x4320, 0x1, 0x0);
        gbc.writeMem(0xe332, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe332));
        EXPECT(0x7c, gbc.readMem(0xe333));
        // CB 7C 03E5
        gbc.setState(0xabf2, 0x343e, 0xe750, 0x3af5, 0x53b7, 0x2070, 0x1, 0x1);
        gbc.writeMem(0xabf2, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x343e, gbc.sp());
        EXPECT(0xabf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf2));
        EXPECT(0x7c, gbc.readMem(0xabf3));
        // CB 7C 03E7
        gbc.setState(0x6d9a, 0x9a24, 0xaed0, 0xbfe5, 0xa2a3, 0x4f67, 0x1, 0x1);
        gbc.writeMem(0x6d9a, { 0xcb, 0x7c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9a24, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
