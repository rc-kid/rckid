#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_29)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_29) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 29 0000
        gbc.setState(0x4146, 0x349, 0xab50, 0x681d, 0x2ca4, 0xa80c, 0x0, 0x0);
        gbc.writeMem(0x4146, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x349);
        EXPECT(gbc.pc(), 0x4147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0001
        gbc.setState(0x43a9, 0x4f76, 0x3190, 0x698d, 0x4b36, 0x8dba, 0x1, 0x1);
        gbc.writeMem(0x43a9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4f76);
        EXPECT(gbc.pc(), 0x43aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0005
        gbc.setState(0x63bd, 0xe4cf, 0xd310, 0x1436, 0x677, 0x1047, 0x0, 0x0);
        gbc.writeMem(0x63bd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe4cf);
        EXPECT(gbc.pc(), 0x63be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0006
        gbc.setState(0x448, 0x8421, 0x96b0, 0x9cb7, 0x168a, 0x1276, 0x1, 0x1);
        gbc.writeMem(0x448, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8421);
        EXPECT(gbc.pc(), 0x449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0007
        gbc.setState(0xa623, 0x9a8e, 0x1900, 0x2a1c, 0x141e, 0x3660, 0x0, 0x0);
        gbc.writeMem(0xa623, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9a8e);
        EXPECT(gbc.pc(), 0xa624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa623), 0x29);
        // 29 0008
        gbc.setState(0xcce0, 0x9295, 0xb190, 0xf2f0, 0x2a7, 0x1312, 0x1, 0x0);
        gbc.writeMem(0xcce0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0xcce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce0), 0x29);
        // 29 0009
        gbc.setState(0xde55, 0x42da, 0x9b80, 0x5bd1, 0x7525, 0x3467, 0x1, 0x0);
        gbc.writeMem(0xde55, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x42da);
        EXPECT(gbc.pc(), 0xde56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde55), 0x29);
        // 29 000A
        gbc.setState(0xb84c, 0xbea2, 0xd740, 0xff63, 0xe94d, 0x1fa, 0x0, 0x0);
        gbc.writeMem(0xb84c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbea2);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84c), 0x29);
        // 29 000B
        gbc.setState(0x6ef, 0x4669, 0x4490, 0x5eef, 0x418e, 0x1e0f, 0x0, 0x1);
        gbc.writeMem(0x6ef, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4669);
        EXPECT(gbc.pc(), 0x6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 000C
        gbc.setState(0xb028, 0x8a7a, 0x2110, 0x7c0a, 0x5d20, 0xf6ce, 0x0, 0x1);
        gbc.writeMem(0xb028, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8a7a);
        EXPECT(gbc.pc(), 0xb029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb028), 0x29);
        // 29 000D
        gbc.setState(0x864f, 0x633d, 0x2ce0, 0x9fca, 0x9a98, 0x8862, 0x1, 0x0);
        gbc.writeMem(0x864f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x633d);
        EXPECT(gbc.pc(), 0x8650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864f), 0x29);
        // 29 000E
        gbc.setState(0xad53, 0x5640, 0x1180, 0xbaf9, 0xfa1c, 0xd64b, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5640);
        EXPECT(gbc.pc(), 0xad54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad53), 0x29);
        // 29 000F
        gbc.setState(0x622a, 0xecad, 0x6660, 0x6195, 0x10e, 0xc04b, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xecad);
        EXPECT(gbc.pc(), 0x622b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0010
        gbc.setState(0xb3f7, 0xb5a7, 0xeda0, 0xc29, 0x2534, 0x8231, 0x1, 0x1);
        gbc.writeMem(0xb3f7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb5a7);
        EXPECT(gbc.pc(), 0xb3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f7), 0x29);
        // 29 0011
        gbc.setState(0x56b8, 0x80a7, 0xe300, 0x2b52, 0x3e2a, 0x5119, 0x1, 0x1);
        gbc.writeMem(0x56b8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x80a7);
        EXPECT(gbc.pc(), 0x56b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0012
        gbc.setState(0x2dde, 0xa8e8, 0x2500, 0x2899, 0x36ba, 0x3a12, 0x1, 0x0);
        gbc.writeMem(0x2dde, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa8e8);
        EXPECT(gbc.pc(), 0x2ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0013
        gbc.setState(0x5618, 0x75e7, 0x56f0, 0x61bd, 0x7f85, 0xd57e, 0x1, 0x0);
        gbc.writeMem(0x5618, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x75e7);
        EXPECT(gbc.pc(), 0x5619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0014
        gbc.setState(0xc7e, 0xc74f, 0xa1f0, 0x323e, 0x1de0, 0x49f4, 0x1, 0x1);
        gbc.writeMem(0xc7e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0xc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0015
        gbc.setState(0xa148, 0xbed4, 0xbbc0, 0x1aec, 0x3df4, 0x654a, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa148), 0x29);
        // 29 0016
        gbc.setState(0x16be, 0x819e, 0x8e20, 0x9547, 0x9343, 0x2445, 0x1, 0x1);
        gbc.writeMem(0x16be, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x819e);
        EXPECT(gbc.pc(), 0x16bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0017
        gbc.setState(0x9e6e, 0x76d3, 0x3f80, 0x774, 0xb72f, 0x7413, 0x1, 0x0);
        gbc.writeMem(0x9e6e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x76d3);
        EXPECT(gbc.pc(), 0x9e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6e), 0x29);
        // 29 0018
        gbc.setState(0x9887, 0x2880, 0x70e0, 0xce9b, 0x8e08, 0xddaf, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2880);
        EXPECT(gbc.pc(), 0x9888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9887), 0x29);
        // 29 0019
        gbc.setState(0x44e1, 0xbcb9, 0xcb10, 0xed2b, 0x5721, 0x816d, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbcb9);
        EXPECT(gbc.pc(), 0x44e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 001A
        gbc.setState(0x55e4, 0x3ce9, 0x6580, 0x55c5, 0x328c, 0x13dc, 0x1, 0x1);
        gbc.writeMem(0x55e4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3ce9);
        EXPECT(gbc.pc(), 0x55e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 001B
        gbc.setState(0x46ec, 0x9d5e, 0x5100, 0x5a5, 0xcbe8, 0x413c, 0x1, 0x0);
        gbc.writeMem(0x46ec, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9d5e);
        EXPECT(gbc.pc(), 0x46ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 001C
        gbc.setState(0x5591, 0x8be0, 0x5540, 0xce3a, 0xa45b, 0xd28c, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8be0);
        EXPECT(gbc.pc(), 0x5592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 001D
        gbc.setState(0xaa5c, 0xaa71, 0xa150, 0x95dd, 0x362c, 0x47fc, 0x0, 0x1);
        gbc.writeMem(0xaa5c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaa71);
        EXPECT(gbc.pc(), 0xaa5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5c), 0x29);
        // 29 001E
        gbc.setState(0x5c19, 0x585b, 0xabd0, 0xe64a, 0x6374, 0xc737, 0x1, 0x0);
        gbc.writeMem(0x5c19, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x585b);
        EXPECT(gbc.pc(), 0x5c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 001F
        gbc.setState(0x1f1c, 0xb182, 0xdbd0, 0xedd5, 0xd9a1, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x1f1c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb182);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0020
        gbc.setState(0xa376, 0xd487, 0xa970, 0x6f05, 0xc08c, 0xb00d, 0x0, 0x1);
        gbc.writeMem(0xa376, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd487);
        EXPECT(gbc.pc(), 0xa377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa376), 0x29);
        // 29 0023
        gbc.setState(0x4d0d, 0x31d, 0xa620, 0x4e84, 0xac31, 0x39d7, 0x1, 0x0);
        gbc.writeMem(0x4d0d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x31d);
        EXPECT(gbc.pc(), 0x4d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0024
        gbc.setState(0x12e7, 0xc3b3, 0xa040, 0x883c, 0xfd0b, 0x9a45, 0x0, 0x1);
        gbc.writeMem(0x12e7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc3b3);
        EXPECT(gbc.pc(), 0x12e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0026
        gbc.setState(0x8838, 0x6c34, 0x9ca0, 0xf743, 0x8003, 0xcb5b, 0x1, 0x0);
        gbc.writeMem(0x8838, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6c34);
        EXPECT(gbc.pc(), 0x8839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8838), 0x29);
        // 29 0027
        gbc.setState(0xdb73, 0xb963, 0xd230, 0xad2c, 0x3878, 0x9126, 0x1, 0x0);
        gbc.writeMem(0xdb73, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb963);
        EXPECT(gbc.pc(), 0xdb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb73), 0x29);
        // 29 0028
        gbc.setState(0x4c11, 0xeddb, 0x62e0, 0xfa23, 0x5c6a, 0xaab4, 0x0, 0x0);
        gbc.writeMem(0x4c11, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xeddb);
        EXPECT(gbc.pc(), 0x4c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0029
        gbc.setState(0xb4be, 0x9ca7, 0x8af0, 0x549, 0xc150, 0x4b9a, 0x0, 0x1);
        gbc.writeMem(0xb4be, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9ca7);
        EXPECT(gbc.pc(), 0xb4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4be), 0x29);
        // 29 002A
        gbc.setState(0xd78a, 0x49b5, 0xe70, 0x4b8, 0x4efb, 0x4207, 0x1, 0x1);
        gbc.writeMem(0xd78a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x49b5);
        EXPECT(gbc.pc(), 0xd78b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd78a), 0x29);
        // 29 002B
        gbc.setState(0x519e, 0x175c, 0x5130, 0x59ed, 0xadb6, 0x8fc2, 0x1, 0x0);
        gbc.writeMem(0x519e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x175c);
        EXPECT(gbc.pc(), 0x519f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 002C
        gbc.setState(0xae95, 0xb27c, 0xcc50, 0xa3aa, 0x774b, 0xfd5e, 0x1, 0x1);
        gbc.writeMem(0xae95, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb27c);
        EXPECT(gbc.pc(), 0xae96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae95), 0x29);
        // 29 002D
        gbc.setState(0xe84b, 0x99da, 0x4270, 0x2658, 0x9776, 0xfa54, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x99da);
        EXPECT(gbc.pc(), 0xe84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84b), 0x29);
        // 29 002E
        gbc.setState(0xd469, 0xcf0a, 0xf090, 0x82cf, 0x8c0c, 0x53f0, 0x0, 0x0);
        gbc.writeMem(0xd469, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcf0a);
        EXPECT(gbc.pc(), 0xd46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd469), 0x29);
        // 29 002F
        gbc.setState(0x652e, 0x3527, 0xc30, 0xea20, 0x47c8, 0xaf70, 0x1, 0x1);
        gbc.writeMem(0x652e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0x652f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0030
        gbc.setState(0x7f26, 0x5ad4, 0xac50, 0x6f80, 0x1f89, 0xc89f, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5ad4);
        EXPECT(gbc.pc(), 0x7f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0031
        gbc.setState(0x18e, 0x4488, 0x4b40, 0x960f, 0x9eba, 0xdc76, 0x0, 0x1);
        gbc.writeMem(0x18e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4488);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0032
        gbc.setState(0xaf9f, 0xc831, 0xf1b0, 0x8758, 0x6f92, 0x127d, 0x0, 0x1);
        gbc.writeMem(0xaf9f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc831);
        EXPECT(gbc.pc(), 0xafa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9f), 0x29);
        // 29 0033
        gbc.setState(0x913b, 0x7652, 0x650, 0xaf0a, 0x256d, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x913b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7652);
        EXPECT(gbc.pc(), 0x913c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913b), 0x29);
        // 29 0034
        gbc.setState(0x8f77, 0x5209, 0x5c10, 0xd65a, 0xb85c, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x8f77, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5209);
        EXPECT(gbc.pc(), 0x8f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f77), 0x29);
        // 29 0037
        gbc.setState(0xa088, 0x56e, 0x9f50, 0x1495, 0xeac7, 0x5928, 0x1, 0x1);
        gbc.writeMem(0xa088, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x56e);
        EXPECT(gbc.pc(), 0xa089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa088), 0x29);
        // 29 0038
        gbc.setState(0xb06c, 0xa848, 0x17f0, 0x9cf4, 0x9119, 0xf411, 0x0, 0x1);
        gbc.writeMem(0xb06c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa848);
        EXPECT(gbc.pc(), 0xb06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06c), 0x29);
        // 29 0039
        gbc.setState(0xc48b, 0x200f, 0x7f40, 0x512b, 0x355d, 0x15b1, 0x1, 0x1);
        gbc.writeMem(0xc48b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x200f);
        EXPECT(gbc.pc(), 0xc48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48b), 0x29);
        // 29 003A
        gbc.setState(0xa128, 0xc070, 0xa2d0, 0x153, 0x8a7a, 0x52a0, 0x0, 0x0);
        gbc.writeMem(0xa128, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc070);
        EXPECT(gbc.pc(), 0xa129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa128), 0x29);
        // 29 003B
        gbc.setState(0xbab0, 0x994b, 0xd570, 0x48df, 0x5cc2, 0x3afc, 0x0, 0x0);
        gbc.writeMem(0xbab0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x994b);
        EXPECT(gbc.pc(), 0xbab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab0), 0x29);
        // 29 003C
        gbc.setState(0xabbb, 0xe9b, 0x9bf0, 0x1ccc, 0x81f0, 0xb9ea, 0x0, 0x0);
        gbc.writeMem(0xabbb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe9b);
        EXPECT(gbc.pc(), 0xabbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbb), 0x29);
        // 29 003D
        gbc.setState(0xd676, 0xfebb, 0x2450, 0xf05e, 0x797f, 0x6b33, 0x0, 0x0);
        gbc.writeMem(0xd676, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfebb);
        EXPECT(gbc.pc(), 0xd677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd676), 0x29);
        // 29 003F
        gbc.setState(0x54b9, 0x5d64, 0x6220, 0x10b2, 0x751e, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0x54b9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5d64);
        EXPECT(gbc.pc(), 0x54ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0041
        gbc.setState(0x7848, 0xe068, 0xe130, 0xc7c, 0xb16c, 0x3ea, 0x0, 0x0);
        gbc.writeMem(0x7848, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe068);
        EXPECT(gbc.pc(), 0x7849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0042
        gbc.setState(0x18e1, 0x2a2d, 0xc8c0, 0x35c5, 0xfb5e, 0x760f, 0x1, 0x0);
        gbc.writeMem(0x18e1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2a2d);
        EXPECT(gbc.pc(), 0x18e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0043
        gbc.setState(0x5c2b, 0xf68f, 0x4bd0, 0x6b23, 0xbb11, 0x8821, 0x1, 0x0);
        gbc.writeMem(0x5c2b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf68f);
        EXPECT(gbc.pc(), 0x5c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0044
        gbc.setState(0x7caf, 0xfcf9, 0x7ef0, 0x2980, 0x6432, 0x6eb1, 0x1, 0x0);
        gbc.writeMem(0x7caf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfcf9);
        EXPECT(gbc.pc(), 0x7cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0045
        gbc.setState(0xa441, 0x3384, 0x8a90, 0x4cfc, 0xecab, 0xf0c2, 0x0, 0x1);
        gbc.writeMem(0xa441, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3384);
        EXPECT(gbc.pc(), 0xa442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa441), 0x29);
        // 29 0046
        gbc.setState(0x54e7, 0xa8c7, 0x1ec0, 0x40e3, 0x106f, 0x39eb, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa8c7);
        EXPECT(gbc.pc(), 0x54e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0047
        gbc.setState(0xe680, 0xe49b, 0xa120, 0xf92d, 0x9ce0, 0x27f1, 0x1, 0x1);
        gbc.writeMem(0xe680, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe49b);
        EXPECT(gbc.pc(), 0xe681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe680), 0x29);
        // 29 0048
        gbc.setState(0x618, 0x213a, 0x1eb0, 0x2bbd, 0x3c48, 0xe5f3, 0x0, 0x0);
        gbc.writeMem(0x618, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x213a);
        EXPECT(gbc.pc(), 0x619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0049
        gbc.setState(0x586d, 0x2d78, 0xa900, 0x4def, 0xbcff, 0x82b9, 0x0, 0x1);
        gbc.writeMem(0x586d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0x586e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 004A
        gbc.setState(0x147d, 0x181a, 0x1870, 0xb777, 0x10d, 0x41c4, 0x0, 0x0);
        gbc.writeMem(0x147d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x181a);
        EXPECT(gbc.pc(), 0x147e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 004B
        gbc.setState(0xda3c, 0x6d36, 0x3760, 0x6f69, 0x6060, 0x1e66, 0x0, 0x0);
        gbc.writeMem(0xda3c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6d36);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3c), 0x29);
        // 29 004C
        gbc.setState(0x1c09, 0x9fc4, 0x5620, 0xfa97, 0x2d3c, 0xabf6, 0x0, 0x1);
        gbc.writeMem(0x1c09, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9fc4);
        EXPECT(gbc.pc(), 0x1c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 004D
        gbc.setState(0x7428, 0xfad7, 0x1070, 0x4fe7, 0x5334, 0xdeb7, 0x1, 0x0);
        gbc.writeMem(0x7428, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfad7);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 004E
        gbc.setState(0x4e42, 0xd11f, 0x28a0, 0x2336, 0x4ada, 0xb72, 0x0, 0x0);
        gbc.writeMem(0x4e42, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd11f);
        EXPECT(gbc.pc(), 0x4e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 004F
        gbc.setState(0x6fc9, 0x2929, 0xc8d0, 0x7ef2, 0x1d85, 0x2fcc, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2929);
        EXPECT(gbc.pc(), 0x6fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0050
        gbc.setState(0x5332, 0x419d, 0xfbc0, 0x6a8e, 0xfd1, 0xa8f, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x419d);
        EXPECT(gbc.pc(), 0x5333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0051
        gbc.setState(0x7208, 0x1287, 0x2f80, 0x3066, 0x9d86, 0xdd56, 0x0, 0x0);
        gbc.writeMem(0x7208, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1287);
        EXPECT(gbc.pc(), 0x7209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0052
        gbc.setState(0x6b5b, 0xb265, 0x7ef0, 0xebac, 0x73a0, 0xabd1, 0x1, 0x0);
        gbc.writeMem(0x6b5b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb265);
        EXPECT(gbc.pc(), 0x6b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0053
        gbc.setState(0x92d0, 0x739c, 0x84d0, 0xd1dc, 0x6bc9, 0xdb1a, 0x1, 0x0);
        gbc.writeMem(0x92d0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x739c);
        EXPECT(gbc.pc(), 0x92d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d0), 0x29);
        // 29 0054
        gbc.setState(0x4043, 0xf855, 0x3550, 0xe569, 0xda6e, 0x81fc, 0x1, 0x1);
        gbc.writeMem(0x4043, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf855);
        EXPECT(gbc.pc(), 0x4044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0055
        gbc.setState(0x34f3, 0xd445, 0x64b0, 0xfcfc, 0xecbe, 0x4881, 0x0, 0x0);
        gbc.writeMem(0x34f3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0x34f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0057
        gbc.setState(0x1a3b, 0x35b7, 0x1840, 0x3582, 0xc22f, 0x944, 0x0, 0x0);
        gbc.writeMem(0x1a3b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x35b7);
        EXPECT(gbc.pc(), 0x1a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0058
        gbc.setState(0x56fc, 0xc302, 0x3b50, 0xddb5, 0xae7b, 0xd701, 0x0, 0x0);
        gbc.writeMem(0x56fc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc302);
        EXPECT(gbc.pc(), 0x56fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0059
        gbc.setState(0x2089, 0x27f9, 0x5c0, 0xb8a, 0x525a, 0x33d9, 0x0, 0x0);
        gbc.writeMem(0x2089, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x27f9);
        EXPECT(gbc.pc(), 0x208a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 005A
        gbc.setState(0x4470, 0x363e, 0xbe30, 0xe5d2, 0xde42, 0xfb30, 0x1, 0x0);
        gbc.writeMem(0x4470, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x363e);
        EXPECT(gbc.pc(), 0x4471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 005B
        gbc.setState(0x1968, 0x13d3, 0x3140, 0x9933, 0x6ee2, 0x185c, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x13d3);
        EXPECT(gbc.pc(), 0x1969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 005C
        gbc.setState(0xc962, 0x65ad, 0x2510, 0xbb73, 0x210a, 0xc3f9, 0x0, 0x0);
        gbc.writeMem(0xc962, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x65ad);
        EXPECT(gbc.pc(), 0xc963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc962), 0x29);
        // 29 005D
        gbc.setState(0xc713, 0x4094, 0xa390, 0x7457, 0xb20, 0xed55, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4094);
        EXPECT(gbc.pc(), 0xc714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc713), 0x29);
        // 29 005E
        gbc.setState(0xc80, 0xb23f, 0xdfd0, 0x324e, 0x504a, 0x5e84, 0x0, 0x0);
        gbc.writeMem(0xc80, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb23f);
        EXPECT(gbc.pc(), 0xc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 005F
        gbc.setState(0x59f7, 0x1181, 0xc700, 0xa95e, 0x272e, 0x9e9a, 0x0, 0x1);
        gbc.writeMem(0x59f7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1181);
        EXPECT(gbc.pc(), 0x59f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0060
        gbc.setState(0xe3e5, 0xc668, 0xf2d0, 0x2a4b, 0xd323, 0xcca0, 0x0, 0x0);
        gbc.writeMem(0xe3e5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc668);
        EXPECT(gbc.pc(), 0xe3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e5), 0x29);
        // 29 0061
        gbc.setState(0xd549, 0x8aa8, 0x87a0, 0xb6b, 0xbc81, 0xb1d1, 0x0, 0x1);
        gbc.writeMem(0xd549, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8aa8);
        EXPECT(gbc.pc(), 0xd54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd549), 0x29);
        // 29 0062
        gbc.setState(0x9c2f, 0x9e1, 0x97e0, 0xfc64, 0xdff5, 0x55e, 0x1, 0x1);
        gbc.writeMem(0x9c2f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9e1);
        EXPECT(gbc.pc(), 0x9c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2f), 0x29);
        // 29 0063
        gbc.setState(0xb8cb, 0xaa96, 0x320, 0x6a19, 0xff8b, 0x712b, 0x0, 0x0);
        gbc.writeMem(0xb8cb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaa96);
        EXPECT(gbc.pc(), 0xb8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cb), 0x29);
        // 29 0064
        gbc.setState(0xe5b4, 0x327e, 0x9180, 0xfb08, 0x30d2, 0x93ab, 0x1, 0x1);
        gbc.writeMem(0xe5b4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x327e);
        EXPECT(gbc.pc(), 0xe5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b4), 0x29);
        // 29 0066
        gbc.setState(0x5b55, 0x908, 0xe2e0, 0xba30, 0x3a09, 0x5672, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x908);
        EXPECT(gbc.pc(), 0x5b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0067
        gbc.setState(0x5dd5, 0xc976, 0x9110, 0xfc31, 0xfa66, 0xbeaf, 0x0, 0x0);
        gbc.writeMem(0x5dd5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc976);
        EXPECT(gbc.pc(), 0x5dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0068
        gbc.setState(0x6db8, 0x2c5e, 0xd210, 0xa85f, 0x1023, 0x8e46, 0x1, 0x0);
        gbc.writeMem(0x6db8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2c5e);
        EXPECT(gbc.pc(), 0x6db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0069
        gbc.setState(0x1aa8, 0x4965, 0xa160, 0x9dfe, 0x80b6, 0x71e6, 0x1, 0x1);
        gbc.writeMem(0x1aa8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4965);
        EXPECT(gbc.pc(), 0x1aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 006A
        gbc.setState(0xb11e, 0x2dcd, 0x33d0, 0xdc47, 0x7639, 0xe975, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2dcd);
        EXPECT(gbc.pc(), 0xb11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11e), 0x29);
        // 29 006B
        gbc.setState(0x2b80, 0xded3, 0x9840, 0xecc, 0x4467, 0xb6e7, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xded3);
        EXPECT(gbc.pc(), 0x2b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 006C
        gbc.setState(0xa8d7, 0x137c, 0x4b80, 0xe1b6, 0x242, 0x3a03, 0x0, 0x1);
        gbc.writeMem(0xa8d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x137c);
        EXPECT(gbc.pc(), 0xa8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d7), 0x29);
        // 29 006D
        gbc.setState(0x1f8, 0x1780, 0x83c0, 0xfe42, 0x89f8, 0x391f, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1780);
        EXPECT(gbc.pc(), 0x1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 006E
        gbc.setState(0x3895, 0xd255, 0xa990, 0xdb01, 0x2ed1, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0x3895, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd255);
        EXPECT(gbc.pc(), 0x3896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 006F
        gbc.setState(0xcf4b, 0x983d, 0x8e30, 0x9d0f, 0xfd4c, 0x3803, 0x0, 0x1);
        gbc.writeMem(0xcf4b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x983d);
        EXPECT(gbc.pc(), 0xcf4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4b), 0x29);
        // 29 0070
        gbc.setState(0x7a93, 0xf3ec, 0xc370, 0x8225, 0x5a63, 0x3d53, 0x0, 0x1);
        gbc.writeMem(0x7a93, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x7a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0071
        gbc.setState(0x6b3e, 0xcbf8, 0x3e70, 0x9271, 0x4a67, 0xd47a, 0x1, 0x1);
        gbc.writeMem(0x6b3e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcbf8);
        EXPECT(gbc.pc(), 0x6b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0072
        gbc.setState(0x5c0c, 0x80bd, 0xded0, 0xfd77, 0x7f8b, 0x351c, 0x0, 0x0);
        gbc.writeMem(0x5c0c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x80bd);
        EXPECT(gbc.pc(), 0x5c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0073
        gbc.setState(0xa0e4, 0x5020, 0x4020, 0xfc79, 0x960c, 0xaad4, 0x0, 0x1);
        gbc.writeMem(0xa0e4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5020);
        EXPECT(gbc.pc(), 0xa0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e4), 0x29);
        // 29 0074
        gbc.setState(0xb2aa, 0x309, 0xcba0, 0xdddb, 0x18c1, 0x52e7, 0x1, 0x1);
        gbc.writeMem(0xb2aa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x309);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2aa), 0x29);
        // 29 0075
        gbc.setState(0x93f4, 0x7d83, 0x6880, 0x6b7b, 0x5724, 0x4746, 0x1, 0x1);
        gbc.writeMem(0x93f4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7d83);
        EXPECT(gbc.pc(), 0x93f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f4), 0x29);
        // 29 0076
        gbc.setState(0xe32b, 0xe3ec, 0x9980, 0x1709, 0x1458, 0xee8e, 0x1, 0x0);
        gbc.writeMem(0xe32b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe3ec);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32b), 0x29);
        // 29 0077
        gbc.setState(0xcb52, 0x1c13, 0x4a30, 0x675, 0x3e99, 0xf733, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1c13);
        EXPECT(gbc.pc(), 0xcb53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb52), 0x29);
        // 29 0078
        gbc.setState(0x7c44, 0xc35b, 0x11f0, 0xfbe0, 0x5a54, 0x21b2, 0x1, 0x0);
        gbc.writeMem(0x7c44, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc35b);
        EXPECT(gbc.pc(), 0x7c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0079
        gbc.setState(0x6a19, 0xe652, 0x5020, 0xcb2e, 0x5fce, 0x8faf, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe652);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 007A
        gbc.setState(0x82e5, 0xdcf4, 0x11a0, 0x1865, 0x696d, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x82e5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdcf4);
        EXPECT(gbc.pc(), 0x82e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e5), 0x29);
        // 29 007B
        gbc.setState(0x2705, 0x6aa0, 0x4350, 0x3700, 0x5f52, 0x58d7, 0x1, 0x1);
        gbc.writeMem(0x2705, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6aa0);
        EXPECT(gbc.pc(), 0x2706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 007C
        gbc.setState(0x57e6, 0xa8fa, 0xd670, 0x8101, 0x6052, 0x78c2, 0x1, 0x1);
        gbc.writeMem(0x57e6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa8fa);
        EXPECT(gbc.pc(), 0x57e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 007D
        gbc.setState(0x8e62, 0xf497, 0xe250, 0x874b, 0xf419, 0x7145, 0x1, 0x0);
        gbc.writeMem(0x8e62, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf497);
        EXPECT(gbc.pc(), 0x8e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e62), 0x29);
        // 29 007E
        gbc.setState(0x8f82, 0xbb37, 0xac80, 0x8dcb, 0x1a66, 0x8a43, 0x0, 0x1);
        gbc.writeMem(0x8f82, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbb37);
        EXPECT(gbc.pc(), 0x8f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f82), 0x29);
        // 29 007F
        gbc.setState(0xa3e0, 0x308c, 0xb7a0, 0xd972, 0xd50, 0x9af5, 0x0, 0x1);
        gbc.writeMem(0xa3e0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x308c);
        EXPECT(gbc.pc(), 0xa3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e0), 0x29);
        // 29 0080
        gbc.setState(0x6ab2, 0xa4ae, 0x7ea0, 0xf20a, 0xf8ce, 0xf080, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa4ae);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0081
        gbc.setState(0xae0b, 0x4646, 0x1880, 0x92c0, 0x7891, 0xee55, 0x0, 0x1);
        gbc.writeMem(0xae0b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0xae0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0b), 0x29);
        // 29 0082
        gbc.setState(0x542a, 0x2aaf, 0xf4c0, 0xddd5, 0x81c9, 0x677a, 0x1, 0x1);
        gbc.writeMem(0x542a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2aaf);
        EXPECT(gbc.pc(), 0x542b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0083
        gbc.setState(0xfa4, 0xaaff, 0xe6d0, 0xb96d, 0x8e75, 0xa506, 0x0, 0x1);
        gbc.writeMem(0xfa4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaaff);
        EXPECT(gbc.pc(), 0xfa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0084
        gbc.setState(0x8a92, 0xa8ba, 0x4950, 0xdf96, 0x2b97, 0x968a, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa8ba);
        EXPECT(gbc.pc(), 0x8a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a92), 0x29);
        // 29 0085
        gbc.setState(0xb7f6, 0x912, 0xc7b0, 0x1298, 0x69d1, 0x52a5, 0x1, 0x0);
        gbc.writeMem(0xb7f6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x912);
        EXPECT(gbc.pc(), 0xb7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f6), 0x29);
        // 29 0087
        gbc.setState(0xcb20, 0x7875, 0xfee0, 0x696a, 0xd5d8, 0xb9c6, 0x1, 0x0);
        gbc.writeMem(0xcb20, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7875);
        EXPECT(gbc.pc(), 0xcb21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb20), 0x29);
        // 29 0088
        gbc.setState(0xd7c5, 0x8465, 0x2dd0, 0x6867, 0x393e, 0x7697, 0x0, 0x1);
        gbc.writeMem(0xd7c5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8465);
        EXPECT(gbc.pc(), 0xd7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c5), 0x29);
        // 29 0089
        gbc.setState(0xe319, 0x1396, 0x9e90, 0xce26, 0xebfc, 0xb154, 0x1, 0x1);
        gbc.writeMem(0xe319, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0xe31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe319), 0x29);
        // 29 008A
        gbc.setState(0xafc2, 0x1c0d, 0x4050, 0xf724, 0xdce9, 0xc0bc, 0x1, 0x1);
        gbc.writeMem(0xafc2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1c0d);
        EXPECT(gbc.pc(), 0xafc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc2), 0x29);
        // 29 008B
        gbc.setState(0x19a5, 0xebbf, 0xf0d0, 0xcbe3, 0x6cf3, 0x9aaa, 0x1, 0x1);
        gbc.writeMem(0x19a5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0x19a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 008C
        gbc.setState(0x8817, 0xc9a3, 0x5290, 0x3b1a, 0xc11e, 0x75, 0x1, 0x0);
        gbc.writeMem(0x8817, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc9a3);
        EXPECT(gbc.pc(), 0x8818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8817), 0x29);
        // 29 008D
        gbc.setState(0xab55, 0x94ac, 0x1210, 0x33a7, 0x663f, 0x668e, 0x1, 0x0);
        gbc.writeMem(0xab55, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x94ac);
        EXPECT(gbc.pc(), 0xab56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab55), 0x29);
        // 29 008E
        gbc.setState(0xc7e3, 0x6f71, 0xb800, 0xfd79, 0x4b7f, 0x363a, 0x0, 0x1);
        gbc.writeMem(0xc7e3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6f71);
        EXPECT(gbc.pc(), 0xc7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e3), 0x29);
        // 29 008F
        gbc.setState(0x8635, 0x1f8, 0x1870, 0x860c, 0x337c, 0xe8ff, 0x0, 0x0);
        gbc.writeMem(0x8635, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1f8);
        EXPECT(gbc.pc(), 0x8636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8635), 0x29);
        // 29 0091
        gbc.setState(0xb7bd, 0x99eb, 0x4220, 0xfe49, 0xd4a, 0xc688, 0x0, 0x0);
        gbc.writeMem(0xb7bd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x99eb);
        EXPECT(gbc.pc(), 0xb7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bd), 0x29);
        // 29 0092
        gbc.setState(0xbd45, 0xfc0a, 0xc360, 0x1bb8, 0xd697, 0x2a89, 0x0, 0x0);
        gbc.writeMem(0xbd45, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfc0a);
        EXPECT(gbc.pc(), 0xbd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0x29);
        // 29 0093
        gbc.setState(0x1903, 0xafe0, 0x9c60, 0x5f8e, 0x5005, 0x8bdd, 0x1, 0x1);
        gbc.writeMem(0x1903, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xafe0);
        EXPECT(gbc.pc(), 0x1904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0094
        gbc.setState(0xa8bc, 0x28f3, 0xd8c0, 0x2774, 0x7bb6, 0xdb18, 0x0, 0x1);
        gbc.writeMem(0xa8bc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x28f3);
        EXPECT(gbc.pc(), 0xa8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bc), 0x29);
        // 29 0096
        gbc.setState(0x550c, 0xc8b5, 0x6380, 0x84e9, 0xae79, 0x86dd, 0x0, 0x1);
        gbc.writeMem(0x550c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0097
        gbc.setState(0xb0ae, 0x3303, 0x7ec0, 0xe343, 0xa4a6, 0x6078, 0x0, 0x0);
        gbc.writeMem(0xb0ae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3303);
        EXPECT(gbc.pc(), 0xb0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ae), 0x29);
        // 29 0098
        gbc.setState(0x8bca, 0xa738, 0xb7e0, 0xa19e, 0xa5de, 0xc4e7, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa738);
        EXPECT(gbc.pc(), 0x8bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bca), 0x29);
        // 29 0099
        gbc.setState(0x8da3, 0x7832, 0x7880, 0x16ce, 0xd86, 0x5bb6, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7832);
        EXPECT(gbc.pc(), 0x8da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da3), 0x29);
        // 29 009A
        gbc.setState(0x2386, 0x8cec, 0xe0, 0x1aae, 0x6dd7, 0x602f, 0x0, 0x1);
        gbc.writeMem(0x2386, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8cec);
        EXPECT(gbc.pc(), 0x2387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 009B
        gbc.setState(0x2fdd, 0xc042, 0x7c70, 0x2faf, 0x6ad0, 0x7ba, 0x0, 0x1);
        gbc.writeMem(0x2fdd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc042);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 009C
        gbc.setState(0x23a6, 0x44af, 0x750, 0xace, 0x9c68, 0xd69f, 0x1, 0x0);
        gbc.writeMem(0x23a6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x44af);
        EXPECT(gbc.pc(), 0x23a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 009D
        gbc.setState(0x737c, 0xca42, 0x34b0, 0xa8b7, 0xd6e9, 0x35d9, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xca42);
        EXPECT(gbc.pc(), 0x737d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 009E
        gbc.setState(0x619d, 0xf88a, 0x43b0, 0x476, 0x9bab, 0xdd03, 0x0, 0x0);
        gbc.writeMem(0x619d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf88a);
        EXPECT(gbc.pc(), 0x619e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 009F
        gbc.setState(0x2702, 0xc605, 0x5ae0, 0xd5f3, 0x1055, 0x6c46, 0x1, 0x1);
        gbc.writeMem(0x2702, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc605);
        EXPECT(gbc.pc(), 0x2703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00A0
        gbc.setState(0xb038, 0x7dce, 0xad40, 0x145f, 0x71d, 0x5d58, 0x0, 0x1);
        gbc.writeMem(0xb038, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7dce);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb038), 0x29);
        // 29 00A1
        gbc.setState(0x5293, 0xb57c, 0xf0, 0x7858, 0x84f7, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb57c);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00A2
        gbc.setState(0x1913, 0x18d0, 0x2290, 0x8c8, 0x1e63, 0x58c1, 0x1, 0x1);
        gbc.writeMem(0x1913, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x18d0);
        EXPECT(gbc.pc(), 0x1914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00A4
        gbc.setState(0xe30, 0x2b3d, 0x8ab0, 0x47cf, 0x48b7, 0x8b91, 0x1, 0x1);
        gbc.writeMem(0xe30, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2b3d);
        EXPECT(gbc.pc(), 0xe31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00A5
        gbc.setState(0x4779, 0x399f, 0x4270, 0xe936, 0x88fb, 0xffca, 0x0, 0x1);
        gbc.writeMem(0x4779, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x399f);
        EXPECT(gbc.pc(), 0x477a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00A7
        gbc.setState(0xf8e, 0x76c3, 0xa4c0, 0x52c6, 0x95d5, 0x7a59, 0x0, 0x0);
        gbc.writeMem(0xf8e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x76c3);
        EXPECT(gbc.pc(), 0xf8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00A8
        gbc.setState(0xbb53, 0xf658, 0x48f0, 0x6862, 0x5b5e, 0x13e4, 0x1, 0x0);
        gbc.writeMem(0xbb53, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf658);
        EXPECT(gbc.pc(), 0xbb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb53), 0x29);
        // 29 00A9
        gbc.setState(0x481c, 0xd535, 0x3a10, 0x1ac4, 0xf8a, 0x7783, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd535);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00AA
        gbc.setState(0x2ace, 0xe9f9, 0x6ef0, 0xcc15, 0xc916, 0x56d0, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe9f9);
        EXPECT(gbc.pc(), 0x2acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00AB
        gbc.setState(0x4834, 0xad28, 0xe200, 0xb017, 0x1433, 0xdf7f, 0x0, 0x1);
        gbc.writeMem(0x4834, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xad28);
        EXPECT(gbc.pc(), 0x4835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00AC
        gbc.setState(0x4d34, 0x20a9, 0xbdf0, 0x2fba, 0xe01c, 0xda35, 0x1, 0x1);
        gbc.writeMem(0x4d34, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0x4d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00AD
        gbc.setState(0xb7c5, 0xbce0, 0x3480, 0x4708, 0xc876, 0xf6f7, 0x1, 0x0);
        gbc.writeMem(0xb7c5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbce0);
        EXPECT(gbc.pc(), 0xb7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c5), 0x29);
        // 29 00AE
        gbc.setState(0x8b8d, 0xe8dd, 0x9710, 0xa272, 0xce5e, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x8b8d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe8dd);
        EXPECT(gbc.pc(), 0x8b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8d), 0x29);
        // 29 00AF
        gbc.setState(0xbb5, 0xc34f, 0xe250, 0x5285, 0x6593, 0xf2a9, 0x0, 0x1);
        gbc.writeMem(0xbb5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc34f);
        EXPECT(gbc.pc(), 0xbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00B0
        gbc.setState(0x140, 0x72a9, 0x51f0, 0xe636, 0xfa88, 0x2515, 0x0, 0x1);
        gbc.writeMem(0x140, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x72a9);
        EXPECT(gbc.pc(), 0x141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00B1
        gbc.setState(0xddad, 0xf883, 0x1c40, 0x75ae, 0xd9dc, 0xe145, 0x1, 0x1);
        gbc.writeMem(0xddad, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0xddae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddad), 0x29);
        // 29 00B2
        gbc.setState(0x33f3, 0xd1fe, 0x360, 0x5462, 0xbfd5, 0xb585, 0x1, 0x0);
        gbc.writeMem(0x33f3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd1fe);
        EXPECT(gbc.pc(), 0x33f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00B3
        gbc.setState(0xc87e, 0x60d8, 0x9a80, 0x3ed, 0x7d5e, 0xf6b1, 0x0, 0x1);
        gbc.writeMem(0xc87e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x60d8);
        EXPECT(gbc.pc(), 0xc87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87e), 0x29);
        // 29 00B4
        gbc.setState(0xc1e7, 0x280e, 0xb920, 0x1384, 0x1f44, 0x57c1, 0x0, 0x1);
        gbc.writeMem(0xc1e7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x280e);
        EXPECT(gbc.pc(), 0xc1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e7), 0x29);
        // 29 00B5
        gbc.setState(0xdca8, 0x2a7d, 0xa830, 0x2862, 0xfef3, 0x623d, 0x0, 0x0);
        gbc.writeMem(0xdca8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2a7d);
        EXPECT(gbc.pc(), 0xdca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca8), 0x29);
        // 29 00B6
        gbc.setState(0xd20a, 0x5b19, 0x9d90, 0x682f, 0x6358, 0x580e, 0x1, 0x0);
        gbc.writeMem(0xd20a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5b19);
        EXPECT(gbc.pc(), 0xd20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20a), 0x29);
        // 29 00B7
        gbc.setState(0x9140, 0x72af, 0xce00, 0x4a98, 0x91e1, 0x4dae, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x72af);
        EXPECT(gbc.pc(), 0x9141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9140), 0x29);
        // 29 00B8
        gbc.setState(0x5e09, 0x3b0c, 0x5d0, 0xa0a1, 0x9b2b, 0xb53f, 0x0, 0x0);
        gbc.writeMem(0x5e09, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3b0c);
        EXPECT(gbc.pc(), 0x5e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00B9
        gbc.setState(0xb142, 0xe044, 0x6940, 0x4fe3, 0xd9be, 0xc0b2, 0x0, 0x0);
        gbc.writeMem(0xb142, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe044);
        EXPECT(gbc.pc(), 0xb143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb142), 0x29);
        // 29 00BA
        gbc.setState(0x3fdd, 0xcb6c, 0xb750, 0x37c4, 0xe0ca, 0xb0ea, 0x0, 0x0);
        gbc.writeMem(0x3fdd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcb6c);
        EXPECT(gbc.pc(), 0x3fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00BB
        gbc.setState(0x315f, 0xb5e3, 0x9870, 0x3742, 0xff9b, 0xc3ff, 0x0, 0x1);
        gbc.writeMem(0x315f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb5e3);
        EXPECT(gbc.pc(), 0x3160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00BC
        gbc.setState(0xd2cb, 0x4662, 0xee60, 0xef8e, 0xbf09, 0x7c4b, 0x1, 0x1);
        gbc.writeMem(0xd2cb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4662);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2cb), 0x29);
        // 29 00BD
        gbc.setState(0x998b, 0x4c35, 0x9cb0, 0xbe0, 0xab16, 0x62ce, 0x1, 0x1);
        gbc.writeMem(0x998b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4c35);
        EXPECT(gbc.pc(), 0x998c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998b), 0x29);
        // 29 00BE
        gbc.setState(0x68fa, 0x6100, 0x4c30, 0x1caa, 0xc44a, 0xdb80, 0x1, 0x0);
        gbc.writeMem(0x68fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6100);
        EXPECT(gbc.pc(), 0x68fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00C1
        gbc.setState(0xc1d2, 0x90f4, 0xde20, 0x9739, 0xd456, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0xc1d2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x90f4);
        EXPECT(gbc.pc(), 0xc1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d2), 0x29);
        // 29 00C2
        gbc.setState(0x45ad, 0x90ba, 0xd2d0, 0xa435, 0x9100, 0x1694, 0x0, 0x1);
        gbc.writeMem(0x45ad, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x90ba);
        EXPECT(gbc.pc(), 0x45ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00C3
        gbc.setState(0x3bc7, 0xffc2, 0x92e0, 0x3595, 0x4b14, 0xca27, 0x0, 0x0);
        gbc.writeMem(0x3bc7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xffc2);
        EXPECT(gbc.pc(), 0x3bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00C4
        gbc.setState(0xa8b8, 0x609a, 0xdab0, 0xc18b, 0x713b, 0x35a1, 0x1, 0x0);
        gbc.writeMem(0xa8b8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x609a);
        EXPECT(gbc.pc(), 0xa8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b8), 0x29);
        // 29 00C5
        gbc.setState(0x1fa9, 0xc1d8, 0x1750, 0xa08, 0x9d6f, 0x4748, 0x0, 0x0);
        gbc.writeMem(0x1fa9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc1d8);
        EXPECT(gbc.pc(), 0x1faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00C6
        gbc.setState(0xac39, 0xd9f7, 0x8f20, 0xa681, 0x4eb2, 0xa087, 0x0, 0x1);
        gbc.writeMem(0xac39, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd9f7);
        EXPECT(gbc.pc(), 0xac3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac39), 0x29);
        // 29 00C7
        gbc.setState(0x57, 0x718f, 0x3470, 0x3d26, 0x5939, 0xd1db, 0x1, 0x0);
        gbc.writeMem(0x57, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x718f);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00C8
        gbc.setState(0xe2f4, 0xd6d0, 0xe6a0, 0xa19c, 0xf396, 0x299e, 0x0, 0x1);
        gbc.writeMem(0xe2f4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd6d0);
        EXPECT(gbc.pc(), 0xe2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f4), 0x29);
        // 29 00C9
        gbc.setState(0x1664, 0x96a0, 0xd420, 0x9a76, 0x9415, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x96a0);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00CA
        gbc.setState(0x8df4, 0x7e41, 0xe1a0, 0xb149, 0xbc1a, 0xb090, 0x1, 0x1);
        gbc.writeMem(0x8df4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7e41);
        EXPECT(gbc.pc(), 0x8df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df4), 0x29);
        // 29 00CB
        gbc.setState(0x398b, 0xabd8, 0xf9b0, 0x2acb, 0x57c6, 0xf6d2, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xabd8);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00CC
        gbc.setState(0x3112, 0x9f31, 0x56f0, 0xfec7, 0x2cab, 0x1d30, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9f31);
        EXPECT(gbc.pc(), 0x3113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00CD
        gbc.setState(0xe791, 0xa92c, 0x6130, 0xd2a4, 0xe872, 0x9fd0, 0x1, 0x0);
        gbc.writeMem(0xe791, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0xe792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe791), 0x29);
        // 29 00CE
        gbc.setState(0x3d82, 0x47b8, 0xfc80, 0xd680, 0x1c8, 0x7469, 0x0, 0x0);
        gbc.writeMem(0x3d82, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x47b8);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00CF
        gbc.setState(0x4ce0, 0xd9f4, 0xb570, 0x4b77, 0xa9bd, 0x5dea, 0x0, 0x0);
        gbc.writeMem(0x4ce0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd9f4);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00D0
        gbc.setState(0x2163, 0x5b87, 0x32c0, 0xeabd, 0x8ecd, 0x5d8c, 0x1, 0x0);
        gbc.writeMem(0x2163, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5b87);
        EXPECT(gbc.pc(), 0x2164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00D1
        gbc.setState(0xc28f, 0xbcce, 0x9e60, 0xceab, 0xa478, 0x15f1, 0x1, 0x1);
        gbc.writeMem(0xc28f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbcce);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28f), 0x29);
        // 29 00D2
        gbc.setState(0x7b86, 0x6a5e, 0xef00, 0xe3c4, 0x9683, 0x2572, 0x1, 0x1);
        gbc.writeMem(0x7b86, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6a5e);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00D3
        gbc.setState(0xc24, 0xbf2f, 0xb550, 0x1fb1, 0x709e, 0x551b, 0x1, 0x1);
        gbc.writeMem(0xc24, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbf2f);
        EXPECT(gbc.pc(), 0xc25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00D4
        gbc.setState(0x1658, 0xcf5f, 0xf720, 0x234e, 0xa327, 0xc1c3, 0x0, 0x0);
        gbc.writeMem(0x1658, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcf5f);
        EXPECT(gbc.pc(), 0x1659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00D5
        gbc.setState(0xdae4, 0x2a4a, 0x4910, 0x9aac, 0x248b, 0x554f, 0x0, 0x1);
        gbc.writeMem(0xdae4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2a4a);
        EXPECT(gbc.pc(), 0xdae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae4), 0x29);
        // 29 00D6
        gbc.setState(0xbdb6, 0x1cc6, 0x2450, 0xa825, 0xe653, 0x547a, 0x0, 0x1);
        gbc.writeMem(0xbdb6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1cc6);
        EXPECT(gbc.pc(), 0xbdb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb6), 0x29);
        // 29 00D7
        gbc.setState(0x9461, 0x8b34, 0xfb60, 0x66f7, 0xca0e, 0x862c, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8b34);
        EXPECT(gbc.pc(), 0x9462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9461), 0x29);
        // 29 00D8
        gbc.setState(0x450, 0x5d00, 0xd280, 0x4dfa, 0x68aa, 0x89e9, 0x1, 0x0);
        gbc.writeMem(0x450, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5d00);
        EXPECT(gbc.pc(), 0x451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00D9
        gbc.setState(0x9240, 0x640e, 0x3ca0, 0x8b5f, 0xde54, 0x66e9, 0x1, 0x0);
        gbc.writeMem(0x9240, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x640e);
        EXPECT(gbc.pc(), 0x9241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9240), 0x29);
        // 29 00DA
        gbc.setState(0x4a9a, 0xe1cc, 0xf270, 0x5376, 0x462c, 0x56c0, 0x0, 0x1);
        gbc.writeMem(0x4a9a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe1cc);
        EXPECT(gbc.pc(), 0x4a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00DB
        gbc.setState(0xdf45, 0xddee, 0x7970, 0x6720, 0x5032, 0x533b, 0x0, 0x0);
        gbc.writeMem(0xdf45, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xddee);
        EXPECT(gbc.pc(), 0xdf46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf45), 0x29);
        // 29 00DC
        gbc.setState(0x1dfd, 0x6f10, 0xb030, 0xbced, 0x97fa, 0x1ef8, 0x0, 0x1);
        gbc.writeMem(0x1dfd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6f10);
        EXPECT(gbc.pc(), 0x1dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00DD
        gbc.setState(0x9c0c, 0xadf1, 0xa710, 0x1a5d, 0x197, 0x30ea, 0x1, 0x1);
        gbc.writeMem(0x9c0c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xadf1);
        EXPECT(gbc.pc(), 0x9c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0c), 0x29);
        // 29 00DE
        gbc.setState(0x9aae, 0x8ac3, 0x5ee0, 0xede7, 0x6c6c, 0x5e34, 0x1, 0x0);
        gbc.writeMem(0x9aae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8ac3);
        EXPECT(gbc.pc(), 0x9aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aae), 0x29);
        // 29 00DF
        gbc.setState(0x49f5, 0x9685, 0x8110, 0xd4c8, 0xb5cb, 0x5aa3, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9685);
        EXPECT(gbc.pc(), 0x49f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00E0
        gbc.setState(0xbf11, 0xa24b, 0xe6b0, 0xc9fb, 0xfce8, 0xf815, 0x0, 0x0);
        gbc.writeMem(0xbf11, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa24b);
        EXPECT(gbc.pc(), 0xbf12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf11), 0x29);
        // 29 00E1
        gbc.setState(0x93ab, 0x3158, 0xa620, 0x26a2, 0x267e, 0xc7ff, 0x1, 0x1);
        gbc.writeMem(0x93ab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3158);
        EXPECT(gbc.pc(), 0x93ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ab), 0x29);
        // 29 00E2
        gbc.setState(0x21d7, 0x5c36, 0x3820, 0xa7c6, 0x8887, 0x72d9, 0x1, 0x0);
        gbc.writeMem(0x21d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5c36);
        EXPECT(gbc.pc(), 0x21d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00E3
        gbc.setState(0x31eb, 0xdba6, 0x8810, 0x7c7a, 0x4824, 0x85cc, 0x0, 0x1);
        gbc.writeMem(0x31eb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdba6);
        EXPECT(gbc.pc(), 0x31ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00E4
        gbc.setState(0x848c, 0x3ce7, 0xb8a0, 0x47d3, 0x3a72, 0x46a7, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3ce7);
        EXPECT(gbc.pc(), 0x848d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848c), 0x29);
        // 29 00E5
        gbc.setState(0x35fe, 0x4672, 0x4540, 0x6c47, 0x96c3, 0x4d1b, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x35ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00E6
        gbc.setState(0xef51, 0x43d9, 0x6580, 0x112d, 0x86c, 0xf272, 0x1, 0x0);
        gbc.writeMem(0xef51, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x43d9);
        EXPECT(gbc.pc(), 0xef52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef51), 0x29);
        // 29 00E7
        gbc.setState(0x23e0, 0x999b, 0x9410, 0x5b6a, 0xcec7, 0x2569, 0x1, 0x0);
        gbc.writeMem(0x23e0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x999b);
        EXPECT(gbc.pc(), 0x23e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00E8
        gbc.setState(0x9688, 0x745b, 0xe320, 0x385a, 0x2277, 0xe64f, 0x0, 0x0);
        gbc.writeMem(0x9688, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x745b);
        EXPECT(gbc.pc(), 0x9689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9688), 0x29);
        // 29 00E9
        gbc.setState(0x807c, 0x2ff8, 0x83a0, 0xd992, 0xbfbb, 0xcfba, 0x1, 0x1);
        gbc.writeMem(0x807c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2ff8);
        EXPECT(gbc.pc(), 0x807d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807c), 0x29);
        // 29 00EA
        gbc.setState(0x37fd, 0xbd7, 0x6fc0, 0x2342, 0x7716, 0x765, 0x1, 0x0);
        gbc.writeMem(0x37fd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbd7);
        EXPECT(gbc.pc(), 0x37fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00EB
        gbc.setState(0xea76, 0x2efa, 0x6910, 0xf27, 0x18be, 0x34da, 0x1, 0x0);
        gbc.writeMem(0xea76, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0xea77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea76), 0x29);
        // 29 00EC
        gbc.setState(0x1e9d, 0x208d, 0x35a0, 0xc84e, 0x7d6e, 0xae48, 0x1, 0x1);
        gbc.writeMem(0x1e9d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x208d);
        EXPECT(gbc.pc(), 0x1e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00ED
        gbc.setState(0x5e89, 0x63a0, 0x6d80, 0xd9e2, 0x5945, 0xb17c, 0x1, 0x0);
        gbc.writeMem(0x5e89, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x63a0);
        EXPECT(gbc.pc(), 0x5e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00EE
        gbc.setState(0x91d7, 0x97e4, 0x2660, 0xa592, 0x3cf4, 0x5d25, 0x1, 0x0);
        gbc.writeMem(0x91d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x97e4);
        EXPECT(gbc.pc(), 0x91d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d7), 0x29);
        // 29 00EF
        gbc.setState(0x1532, 0x1e9b, 0x9d50, 0xcde6, 0x9618, 0xeb0d, 0x0, 0x1);
        gbc.writeMem(0x1532, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1e9b);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00F1
        gbc.setState(0x45d3, 0x1256, 0xf3c0, 0xc5d9, 0xcd41, 0xc92c, 0x0, 0x0);
        gbc.writeMem(0x45d3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1256);
        EXPECT(gbc.pc(), 0x45d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00F3
        gbc.setState(0x6c63, 0xf9f2, 0x7060, 0xac71, 0xd1dc, 0x499a, 0x0, 0x0);
        gbc.writeMem(0x6c63, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf9f2);
        EXPECT(gbc.pc(), 0x6c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 00F4
        gbc.setState(0x5e7d, 0x5566, 0xe350, 0x1a, 0x3b50, 0x138e, 0x0, 0x0);
        gbc.writeMem(0x5e7d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5566);
        EXPECT(gbc.pc(), 0x5e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00F5
        gbc.setState(0x9e24, 0xd8e7, 0x8ba0, 0x9974, 0x99d8, 0xef82, 0x1, 0x0);
        gbc.writeMem(0x9e24, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd8e7);
        EXPECT(gbc.pc(), 0x9e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e24), 0x29);
        // 29 00F6
        gbc.setState(0xdc9b, 0xcac9, 0x5ae0, 0x996a, 0x3dac, 0x6518, 0x1, 0x1);
        gbc.writeMem(0xdc9b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcac9);
        EXPECT(gbc.pc(), 0xdc9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9b), 0x29);
        // 29 00F7
        gbc.setState(0x1598, 0xac2b, 0xf30, 0xc249, 0x4730, 0xb557, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xac2b);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 00F8
        gbc.setState(0xc413, 0x1321, 0x47a0, 0xffbe, 0xe4d9, 0x588d, 0x1, 0x1);
        gbc.writeMem(0xc413, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1321);
        EXPECT(gbc.pc(), 0xc414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc413), 0x29);
        // 29 00F9
        gbc.setState(0xdf6, 0xd882, 0xcb30, 0x86e0, 0x292a, 0xacad, 0x1, 0x1);
        gbc.writeMem(0xdf6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd882);
        EXPECT(gbc.pc(), 0xdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 00FA
        gbc.setState(0xd861, 0xc957, 0x18d0, 0x24b6, 0x157d, 0x26f0, 0x1, 0x0);
        gbc.writeMem(0xd861, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc957);
        EXPECT(gbc.pc(), 0xd862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd861), 0x29);
        // 29 00FB
        gbc.setState(0x7b3c, 0x7932, 0xdc0, 0x8cab, 0xbe03, 0x7378, 0x1, 0x0);
        gbc.writeMem(0x7b3c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7932);
        EXPECT(gbc.pc(), 0x7b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00FC
        gbc.setState(0x6e7c, 0x5cc1, 0xe7e0, 0xaed9, 0xe193, 0x31d5, 0x0, 0x0);
        gbc.writeMem(0x6e7c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5cc1);
        EXPECT(gbc.pc(), 0x6e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00FD
        gbc.setState(0xadec, 0x31eb, 0x2bd0, 0x1ad8, 0x3d82, 0x74ac, 0x0, 0x0);
        gbc.writeMem(0xadec, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x31eb);
        EXPECT(gbc.pc(), 0xaded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadec), 0x29);
        // 29 00FE
        gbc.setState(0x4d52, 0x995f, 0x3c60, 0x1062, 0xaabf, 0x56a, 0x1, 0x1);
        gbc.writeMem(0x4d52, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 00FF
        gbc.setState(0x3853, 0x73cc, 0xc760, 0x43dd, 0xc82b, 0xadf4, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x73cc);
        EXPECT(gbc.pc(), 0x3854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0100
        gbc.setState(0x787c, 0xa6de, 0x84b0, 0x96a1, 0x98e3, 0x3674, 0x0, 0x0);
        gbc.writeMem(0x787c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa6de);
        EXPECT(gbc.pc(), 0x787d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0101
        gbc.setState(0x3d14, 0x8263, 0xb6c0, 0xa4ea, 0x7e12, 0xf101, 0x0, 0x0);
        gbc.writeMem(0x3d14, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8263);
        EXPECT(gbc.pc(), 0x3d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0102
        gbc.setState(0xcc99, 0x554, 0x70, 0xd66c, 0x7e5, 0x47b0, 0x0, 0x0);
        gbc.writeMem(0xcc99, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x554);
        EXPECT(gbc.pc(), 0xcc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc99), 0x29);
        // 29 0103
        gbc.setState(0x7ad2, 0x6982, 0xe9c0, 0xdc5d, 0xd10b, 0x5fd4, 0x0, 0x0);
        gbc.writeMem(0x7ad2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6982);
        EXPECT(gbc.pc(), 0x7ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0104
        gbc.setState(0xe218, 0x2740, 0xade0, 0xc210, 0x4327, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0xe218, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2740);
        EXPECT(gbc.pc(), 0xe219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe218), 0x29);
        // 29 0105
        gbc.setState(0x41e3, 0xb02, 0x7a0, 0x917c, 0xab56, 0xe33b, 0x1, 0x1);
        gbc.writeMem(0x41e3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb02);
        EXPECT(gbc.pc(), 0x41e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0106
        gbc.setState(0x62a5, 0xb802, 0xf240, 0xeef2, 0xedca, 0xc452, 0x1, 0x0);
        gbc.writeMem(0x62a5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb802);
        EXPECT(gbc.pc(), 0x62a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0107
        gbc.setState(0xbd2, 0x2425, 0xd990, 0xcef4, 0x204, 0xeb0, 0x1, 0x0);
        gbc.writeMem(0xbd2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2425);
        EXPECT(gbc.pc(), 0xbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0108
        gbc.setState(0xdc92, 0x1953, 0xa30, 0x4f7b, 0x48ea, 0x9cee, 0x0, 0x1);
        gbc.writeMem(0xdc92, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1953);
        EXPECT(gbc.pc(), 0xdc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc92), 0x29);
        // 29 010A
        gbc.setState(0xe05, 0x5d30, 0x83e0, 0x4baf, 0x737d, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0xe05, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0xe06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 010B
        gbc.setState(0xe882, 0x63ef, 0x6b60, 0xf698, 0x9bd1, 0xe4d6, 0x0, 0x1);
        gbc.writeMem(0xe882, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x63ef);
        EXPECT(gbc.pc(), 0xe883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe882), 0x29);
        // 29 010C
        gbc.setState(0x2b9b, 0xd765, 0x5960, 0x249f, 0xdc3b, 0xc968, 0x0, 0x1);
        gbc.writeMem(0x2b9b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd765);
        EXPECT(gbc.pc(), 0x2b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 010D
        gbc.setState(0xc8a6, 0xa854, 0xc640, 0x798, 0x97e7, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa854);
        EXPECT(gbc.pc(), 0xc8a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a6), 0x29);
        // 29 010E
        gbc.setState(0x8976, 0x27d8, 0x7720, 0xa5f4, 0xe534, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0x8976, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x27d8);
        EXPECT(gbc.pc(), 0x8977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8976), 0x29);
        // 29 0110
        gbc.setState(0x94f9, 0x962, 0xbd20, 0xffb1, 0xb334, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x94f9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x962);
        EXPECT(gbc.pc(), 0x94fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f9), 0x29);
        // 29 0111
        gbc.setState(0xae2a, 0xd28d, 0x3ad0, 0xbb6c, 0xbdfe, 0x3396, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd28d);
        EXPECT(gbc.pc(), 0xae2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2a), 0x29);
        // 29 0112
        gbc.setState(0x8dd8, 0xa0e5, 0x2a40, 0x7462, 0x574f, 0x33cd, 0x1, 0x0);
        gbc.writeMem(0x8dd8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa0e5);
        EXPECT(gbc.pc(), 0x8dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd8), 0x29);
        // 29 0113
        gbc.setState(0xcc93, 0x679d, 0x2010, 0x5d6, 0x5b2d, 0x8503, 0x1, 0x1);
        gbc.writeMem(0xcc93, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x679d);
        EXPECT(gbc.pc(), 0xcc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc93), 0x29);
        // 29 0114
        gbc.setState(0xbee, 0x1891, 0x24d0, 0x5557, 0x7a00, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0xbee, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1891);
        EXPECT(gbc.pc(), 0xbef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0115
        gbc.setState(0xe53, 0xc91, 0xeb50, 0x4daa, 0xeb15, 0x9df8, 0x0, 0x1);
        gbc.writeMem(0xe53, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc91);
        EXPECT(gbc.pc(), 0xe54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0116
        gbc.setState(0x49a6, 0x9551, 0x56a0, 0x3200, 0xb045, 0x368d, 0x1, 0x1);
        gbc.writeMem(0x49a6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9551);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0117
        gbc.setState(0xa55d, 0xf66, 0xd420, 0x40dc, 0x52b9, 0xa230, 0x1, 0x0);
        gbc.writeMem(0xa55d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf66);
        EXPECT(gbc.pc(), 0xa55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55d), 0x29);
        // 29 0118
        gbc.setState(0xbdc9, 0xe1c4, 0xaaf0, 0x4d0a, 0xf020, 0x8492, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe1c4);
        EXPECT(gbc.pc(), 0xbdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc9), 0x29);
        // 29 0119
        gbc.setState(0xeb0c, 0xe341, 0x8470, 0xf74e, 0x90a5, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe341);
        EXPECT(gbc.pc(), 0xeb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0c), 0x29);
        // 29 011A
        gbc.setState(0x4c43, 0xa885, 0x55f0, 0x3bde, 0x923a, 0xb54a, 0x1, 0x1);
        gbc.writeMem(0x4c43, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa885);
        EXPECT(gbc.pc(), 0x4c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 011B
        gbc.setState(0xdbcb, 0xb274, 0xc070, 0x45e, 0x2f80, 0x2da6, 0x1, 0x1);
        gbc.writeMem(0xdbcb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb274);
        EXPECT(gbc.pc(), 0xdbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcb), 0x29);
        // 29 011C
        gbc.setState(0x6a9a, 0xf322, 0x86a0, 0xa32e, 0x8751, 0x7083, 0x1, 0x1);
        gbc.writeMem(0x6a9a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf322);
        EXPECT(gbc.pc(), 0x6a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 011D
        gbc.setState(0x7e90, 0x8807, 0x150, 0x7d99, 0xcccd, 0x4995, 0x1, 0x1);
        gbc.writeMem(0x7e90, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8807);
        EXPECT(gbc.pc(), 0x7e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 011E
        gbc.setState(0x55c9, 0xd1df, 0xf1f0, 0x6944, 0x6c1b, 0xb295, 0x0, 0x0);
        gbc.writeMem(0x55c9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd1df);
        EXPECT(gbc.pc(), 0x55ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 011F
        gbc.setState(0xe7fe, 0x82a3, 0x50c0, 0xe8bc, 0x84fd, 0xbda2, 0x1, 0x1);
        gbc.writeMem(0xe7fe, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x82a3);
        EXPECT(gbc.pc(), 0xe7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fe), 0x29);
        // 29 0120
        gbc.setState(0x1dfa, 0x279c, 0x7900, 0xdab5, 0x395b, 0x7c26, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x279c);
        EXPECT(gbc.pc(), 0x1dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0123
        gbc.setState(0x7727, 0xfb83, 0xae60, 0xef4d, 0x864b, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0x7727, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfb83);
        EXPECT(gbc.pc(), 0x7728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0124
        gbc.setState(0xec9e, 0x6b3, 0x51b0, 0x3eb6, 0xe4e, 0x4e56, 0x0, 0x0);
        gbc.writeMem(0xec9e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b3);
        EXPECT(gbc.pc(), 0xec9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9e), 0x29);
        // 29 0125
        gbc.setState(0xdfa1, 0xbf8f, 0x2100, 0xf0cc, 0x5b09, 0x29c2, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbf8f);
        EXPECT(gbc.pc(), 0xdfa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa1), 0x29);
        // 29 0126
        gbc.setState(0x90a2, 0x5112, 0x1000, 0x8a3d, 0x7545, 0x4f54, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5112);
        EXPECT(gbc.pc(), 0x90a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a2), 0x29);
        // 29 0127
        gbc.setState(0x9950, 0x4f1f, 0xd620, 0x2e2, 0x9e11, 0x9b1, 0x0, 0x1);
        gbc.writeMem(0x9950, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4f1f);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9950), 0x29);
        // 29 0128
        gbc.setState(0xa8d6, 0x107b, 0x7c40, 0xcc7a, 0xadf4, 0x4b7d, 0x1, 0x1);
        gbc.writeMem(0xa8d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x107b);
        EXPECT(gbc.pc(), 0xa8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d6), 0x29);
        // 29 0129
        gbc.setState(0x4be6, 0xa0af, 0xae70, 0xe1c5, 0xf2f5, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0x4be6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa0af);
        EXPECT(gbc.pc(), 0x4be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 012A
        gbc.setState(0x1dc2, 0x187a, 0x9970, 0x86df, 0x4513, 0x543a, 0x0, 0x0);
        gbc.writeMem(0x1dc2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x187a);
        EXPECT(gbc.pc(), 0x1dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 012B
        gbc.setState(0xcae1, 0xd3a4, 0x8000, 0xd4bb, 0xe4a9, 0x7041, 0x1, 0x0);
        gbc.writeMem(0xcae1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0xcae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae1), 0x29);
        // 29 012C
        gbc.setState(0xe607, 0x334c, 0xa310, 0x6a08, 0xd2ca, 0x4d45, 0x1, 0x0);
        gbc.writeMem(0xe607, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x334c);
        EXPECT(gbc.pc(), 0xe608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe607), 0x29);
        // 29 012D
        gbc.setState(0x2bbb, 0x8012, 0xbd30, 0xbf86, 0x9a7c, 0x4f7f, 0x0, 0x0);
        gbc.writeMem(0x2bbb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8012);
        EXPECT(gbc.pc(), 0x2bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 012E
        gbc.setState(0x685c, 0xf807, 0x4a40, 0x3e3f, 0xea7, 0xea, 0x1, 0x1);
        gbc.writeMem(0x685c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf807);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0130
        gbc.setState(0xef9, 0xe5df, 0x1d60, 0xb581, 0x7326, 0x2e19, 0x0, 0x0);
        gbc.writeMem(0xef9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe5df);
        EXPECT(gbc.pc(), 0xefa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0131
        gbc.setState(0x6ce6, 0x4c3a, 0x91e0, 0xc2d8, 0x7bcc, 0x2253, 0x1, 0x1);
        gbc.writeMem(0x6ce6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4c3a);
        EXPECT(gbc.pc(), 0x6ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0132
        gbc.setState(0xebeb, 0x52f0, 0x6be0, 0xfb32, 0xecdc, 0x8f59, 0x0, 0x1);
        gbc.writeMem(0xebeb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x52f0);
        EXPECT(gbc.pc(), 0xebec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebeb), 0x29);
        // 29 0133
        gbc.setState(0x2708, 0xee82, 0xbec0, 0x765d, 0xdbf, 0x7edf, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xee82);
        EXPECT(gbc.pc(), 0x2709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0134
        gbc.setState(0xebb7, 0x92cd, 0xd080, 0xe132, 0xe619, 0xec84, 0x1, 0x1);
        gbc.writeMem(0xebb7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x92cd);
        EXPECT(gbc.pc(), 0xebb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb7), 0x29);
        // 29 0135
        gbc.setState(0x3ddd, 0xdf62, 0x8420, 0x1d9b, 0x79e4, 0xa892, 0x0, 0x0);
        gbc.writeMem(0x3ddd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdf62);
        EXPECT(gbc.pc(), 0x3dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0136
        gbc.setState(0x51bc, 0x5416, 0x3550, 0xcc6a, 0x52e4, 0x53a1, 0x1, 0x1);
        gbc.writeMem(0x51bc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0x51bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0137
        gbc.setState(0xc7c7, 0xaa27, 0xca10, 0x39df, 0x5875, 0x5691, 0x0, 0x1);
        gbc.writeMem(0xc7c7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xaa27);
        EXPECT(gbc.pc(), 0xc7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c7), 0x29);
        // 29 0138
        gbc.setState(0x6d96, 0x7499, 0x2710, 0x9d37, 0xf2d7, 0xf94f, 0x1, 0x1);
        gbc.writeMem(0x6d96, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0x6d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0139
        gbc.setState(0xa7e5, 0x116c, 0xc7e0, 0x910b, 0x784e, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0xa7e5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0xa7e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e5), 0x29);
        // 29 013A
        gbc.setState(0x873f, 0x5100, 0x2e90, 0x540f, 0x7fad, 0x2611, 0x1, 0x0);
        gbc.writeMem(0x873f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0x8740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873f), 0x29);
        // 29 013B
        gbc.setState(0x4d0a, 0xbf3c, 0x9f90, 0xb855, 0x39e7, 0x43e5, 0x1, 0x1);
        gbc.writeMem(0x4d0a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbf3c);
        EXPECT(gbc.pc(), 0x4d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 013D
        gbc.setState(0x1533, 0xdf68, 0xb900, 0x5fe4, 0x63fe, 0x6cb0, 0x1, 0x0);
        gbc.writeMem(0x1533, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdf68);
        EXPECT(gbc.pc(), 0x1534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 013E
        gbc.setState(0x4335, 0xd43e, 0x7aa0, 0x1cea, 0x6998, 0x9792, 0x1, 0x0);
        gbc.writeMem(0x4335, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0x4336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 013F
        gbc.setState(0xe606, 0x90b7, 0x7040, 0xd6b6, 0x4a8a, 0x3671, 0x1, 0x1);
        gbc.writeMem(0xe606, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x90b7);
        EXPECT(gbc.pc(), 0xe607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe606), 0x29);
        // 29 0140
        gbc.setState(0x12db, 0x3989, 0x7b90, 0x7aa6, 0x1f5, 0xb961, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3989);
        EXPECT(gbc.pc(), 0x12dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0141
        gbc.setState(0xdba6, 0x4ef1, 0xc3d0, 0xec37, 0xf8f5, 0x3a01, 0x0, 0x0);
        gbc.writeMem(0xdba6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4ef1);
        EXPECT(gbc.pc(), 0xdba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba6), 0x29);
        // 29 0142
        gbc.setState(0xbad4, 0xe272, 0xd7e0, 0x95d4, 0xe25e, 0xccc4, 0x1, 0x0);
        gbc.writeMem(0xbad4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0xbad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad4), 0x29);
        // 29 0143
        gbc.setState(0x6867, 0x1077, 0x7590, 0x332f, 0x380c, 0xdc4b, 0x1, 0x1);
        gbc.writeMem(0x6867, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0x6868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0144
        gbc.setState(0x1968, 0xfccd, 0xce50, 0xc93c, 0xd8fb, 0xdf76, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfccd);
        EXPECT(gbc.pc(), 0x1969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0145
        gbc.setState(0x77f6, 0x77c6, 0x4310, 0xa00a, 0xb757, 0xa9e2, 0x1, 0x0);
        gbc.writeMem(0x77f6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x77c6);
        EXPECT(gbc.pc(), 0x77f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0147
        gbc.setState(0x9eb3, 0xf9e3, 0x8590, 0xec9e, 0xebc5, 0x2425, 0x0, 0x0);
        gbc.writeMem(0x9eb3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf9e3);
        EXPECT(gbc.pc(), 0x9eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb3), 0x29);
        // 29 0148
        gbc.setState(0x807d, 0x5d62, 0x9c80, 0x2b79, 0x11c4, 0x8389, 0x0, 0x1);
        gbc.writeMem(0x807d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5d62);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807d), 0x29);
        // 29 0149
        gbc.setState(0x72fe, 0xf9d9, 0x8e30, 0x956, 0x7ff9, 0xf58d, 0x0, 0x1);
        gbc.writeMem(0x72fe, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf9d9);
        EXPECT(gbc.pc(), 0x72ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 014A
        gbc.setState(0x9769, 0x4438, 0x3000, 0x7535, 0xc0a2, 0x5216, 0x0, 0x1);
        gbc.writeMem(0x9769, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4438);
        EXPECT(gbc.pc(), 0x976a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9769), 0x29);
        // 29 014B
        gbc.setState(0x34c2, 0x9edc, 0x43e0, 0x5d77, 0xdeb8, 0xcdc, 0x0, 0x0);
        gbc.writeMem(0x34c2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9edc);
        EXPECT(gbc.pc(), 0x34c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 014C
        gbc.setState(0x147a, 0x6a18, 0xe7f0, 0xb2f7, 0x265f, 0x31d8, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6a18);
        EXPECT(gbc.pc(), 0x147b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 014D
        gbc.setState(0xb6d6, 0x968c, 0x8140, 0x664d, 0x9055, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0xb6d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x968c);
        EXPECT(gbc.pc(), 0xb6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d6), 0x29);
        // 29 014E
        gbc.setState(0x46bf, 0xd9b0, 0x9df0, 0xbf5c, 0xba3e, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0x46bf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd9b0);
        EXPECT(gbc.pc(), 0x46c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 014F
        gbc.setState(0xab05, 0xbf79, 0x8d80, 0x386f, 0x7b42, 0xf6cd, 0x0, 0x1);
        gbc.writeMem(0xab05, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbf79);
        EXPECT(gbc.pc(), 0xab06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab05), 0x29);
        // 29 0150
        gbc.setState(0x4f4c, 0x1951, 0x6a40, 0x811d, 0x352f, 0xf39f, 0x0, 0x1);
        gbc.writeMem(0x4f4c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1951);
        EXPECT(gbc.pc(), 0x4f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0151
        gbc.setState(0x4079, 0x494a, 0x42d0, 0x3a27, 0xf252, 0xee23, 0x1, 0x1);
        gbc.writeMem(0x4079, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x494a);
        EXPECT(gbc.pc(), 0x407a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0152
        gbc.setState(0x170f, 0x6f91, 0xe330, 0x8f44, 0x1bd1, 0x67, 0x0, 0x0);
        gbc.writeMem(0x170f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6f91);
        EXPECT(gbc.pc(), 0x1710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0153
        gbc.setState(0xa7b7, 0xb3a5, 0x4640, 0x2c79, 0xad7e, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0xa7b7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb3a5);
        EXPECT(gbc.pc(), 0xa7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b7), 0x29);
        // 29 0154
        gbc.setState(0xad5f, 0xda13, 0x8f30, 0x7086, 0x1acb, 0x4cf4, 0x0, 0x0);
        gbc.writeMem(0xad5f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xda13);
        EXPECT(gbc.pc(), 0xad60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5f), 0x29);
        // 29 0155
        gbc.setState(0x6c12, 0x13d9, 0x2ce0, 0x4a04, 0xad5f, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x6c12, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x13d9);
        EXPECT(gbc.pc(), 0x6c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0156
        gbc.setState(0x2772, 0xdcdb, 0x6340, 0x3cf, 0x27f9, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x2772, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdcdb);
        EXPECT(gbc.pc(), 0x2773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0157
        gbc.setState(0x1550, 0x2285, 0xfec0, 0x450a, 0xa9af, 0xff94, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2285);
        EXPECT(gbc.pc(), 0x1551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0159
        gbc.setState(0xc139, 0xa476, 0xaa70, 0x272b, 0xc716, 0xca79, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa476);
        EXPECT(gbc.pc(), 0xc13a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc139), 0x29);
        // 29 015A
        gbc.setState(0x5159, 0x1995, 0xa490, 0x85d2, 0xfc1d, 0xe2aa, 0x0, 0x1);
        gbc.writeMem(0x5159, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1995);
        EXPECT(gbc.pc(), 0x515a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 015B
        gbc.setState(0xc5d0, 0x841b, 0xda90, 0x9fbe, 0xf5ac, 0x2760, 0x1, 0x0);
        gbc.writeMem(0xc5d0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x841b);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d0), 0x29);
        // 29 015C
        gbc.setState(0x3d78, 0xb86f, 0x9d40, 0x99c0, 0xca0e, 0x2db8, 0x0, 0x0);
        gbc.writeMem(0x3d78, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb86f);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 015D
        gbc.setState(0x89d7, 0xfaaa, 0x7ff0, 0x9c3e, 0x3ca8, 0x6ec5, 0x1, 0x0);
        gbc.writeMem(0x89d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfaaa);
        EXPECT(gbc.pc(), 0x89d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d7), 0x29);
        // 29 015E
        gbc.setState(0xed40, 0xc0cf, 0x9520, 0xe135, 0x78a, 0x8bf7, 0x0, 0x0);
        gbc.writeMem(0xed40, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0xed41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed40), 0x29);
        // 29 015F
        gbc.setState(0x9fba, 0x53c9, 0x3da0, 0xe451, 0x5b2b, 0x8065, 0x1, 0x0);
        gbc.writeMem(0x9fba, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x53c9);
        EXPECT(gbc.pc(), 0x9fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fba), 0x29);
        // 29 0160
        gbc.setState(0xcc93, 0xec8f, 0x3860, 0xd43, 0x9442, 0xd754, 0x0, 0x0);
        gbc.writeMem(0xcc93, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xec8f);
        EXPECT(gbc.pc(), 0xcc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc93), 0x29);
        // 29 0161
        gbc.setState(0xd7cf, 0xe4df, 0xbfe0, 0x5aea, 0xe303, 0x5e96, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe4df);
        EXPECT(gbc.pc(), 0xd7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7cf), 0x29);
        // 29 0162
        gbc.setState(0x9a4d, 0x1d1e, 0xbff0, 0x919a, 0x803f, 0xe02f, 0x1, 0x0);
        gbc.writeMem(0x9a4d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1d1e);
        EXPECT(gbc.pc(), 0x9a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4d), 0x29);
        // 29 0163
        gbc.setState(0x5228, 0xdc6f, 0x6510, 0x5c21, 0x7864, 0xfac0, 0x0, 0x0);
        gbc.writeMem(0x5228, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdc6f);
        EXPECT(gbc.pc(), 0x5229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0164
        gbc.setState(0x693c, 0x5c29, 0xee30, 0x665f, 0xe2c7, 0x50b0, 0x0, 0x0);
        gbc.writeMem(0x693c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5c29);
        EXPECT(gbc.pc(), 0x693d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0165
        gbc.setState(0xab1, 0x639d, 0x5d60, 0xc067, 0xff38, 0xfd42, 0x0, 0x1);
        gbc.writeMem(0xab1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x639d);
        EXPECT(gbc.pc(), 0xab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0166
        gbc.setState(0x77a9, 0xeed6, 0x4e10, 0x5548, 0xd2dc, 0xc26a, 0x0, 0x1);
        gbc.writeMem(0x77a9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeed6);
        EXPECT(gbc.pc(), 0x77aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0167
        gbc.setState(0xc22b, 0xd0ad, 0x5580, 0x1171, 0xbe11, 0x1457, 0x0, 0x0);
        gbc.writeMem(0xc22b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd0ad);
        EXPECT(gbc.pc(), 0xc22c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22b), 0x29);
        // 29 0168
        gbc.setState(0x332a, 0x71a0, 0x8840, 0x4de4, 0x9e3e, 0xc52e, 0x1, 0x0);
        gbc.writeMem(0x332a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x71a0);
        EXPECT(gbc.pc(), 0x332b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0169
        gbc.setState(0xa6ce, 0xf240, 0xc180, 0xab37, 0xea78, 0x5a6a, 0x1, 0x1);
        gbc.writeMem(0xa6ce, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf240);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ce), 0x29);
        // 29 016A
        gbc.setState(0xd7d9, 0x23d3, 0x19a0, 0x3857, 0x2440, 0xb0e5, 0x1, 0x1);
        gbc.writeMem(0xd7d9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x23d3);
        EXPECT(gbc.pc(), 0xd7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d9), 0x29);
        // 29 016C
        gbc.setState(0x6b74, 0xeb1f, 0xd120, 0xd0f3, 0x8c1b, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0x6b74, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xeb1f);
        EXPECT(gbc.pc(), 0x6b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 016D
        gbc.setState(0xd8fd, 0xd1d1, 0xb7e0, 0x1e41, 0x731b, 0x17f5, 0x0, 0x1);
        gbc.writeMem(0xd8fd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd1d1);
        EXPECT(gbc.pc(), 0xd8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8fd), 0x29);
        // 29 016E
        gbc.setState(0x13d6, 0x24a0, 0xd640, 0xaa91, 0xe2ee, 0x9908, 0x0, 0x1);
        gbc.writeMem(0x13d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x24a0);
        EXPECT(gbc.pc(), 0x13d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 016F
        gbc.setState(0xbdc4, 0x8b60, 0xba10, 0x47ba, 0x95f9, 0x52da, 0x0, 0x0);
        gbc.writeMem(0xbdc4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8b60);
        EXPECT(gbc.pc(), 0xbdc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc4), 0x29);
        // 29 0170
        gbc.setState(0x79de, 0xb2a7, 0x7180, 0xa708, 0x9a44, 0x406f, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb2a7);
        EXPECT(gbc.pc(), 0x79df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0171
        gbc.setState(0x7619, 0xbe9f, 0xd060, 0xf881, 0x7e3a, 0xed37, 0x1, 0x1);
        gbc.writeMem(0x7619, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0x761a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0172
        gbc.setState(0x4788, 0x57c4, 0x1460, 0xb1a0, 0xdff5, 0x9705, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0x4789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0173
        gbc.setState(0x3451, 0xd88, 0xd40, 0x8c4e, 0xc938, 0x9300, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd88);
        EXPECT(gbc.pc(), 0x3452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0174
        gbc.setState(0x735e, 0xa461, 0x4a90, 0xd68, 0x3da9, 0x57c, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa461);
        EXPECT(gbc.pc(), 0x735f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0175
        gbc.setState(0xad7f, 0xb044, 0xed40, 0x8495, 0x85c0, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0xad7f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb044);
        EXPECT(gbc.pc(), 0xad80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7f), 0x29);
        // 29 0176
        gbc.setState(0x8a3a, 0x432, 0x3240, 0xc07f, 0x97b, 0xd3fe, 0x0, 0x0);
        gbc.writeMem(0x8a3a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3a), 0x29);
        // 29 0177
        gbc.setState(0x8fba, 0x2084, 0x2b0, 0x9b9b, 0x4dfa, 0x306f, 0x0, 0x0);
        gbc.writeMem(0x8fba, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2084);
        EXPECT(gbc.pc(), 0x8fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fba), 0x29);
        // 29 0178
        gbc.setState(0xd0c3, 0x4fc3, 0x7c50, 0x35c7, 0x2030, 0x6ce3, 0x1, 0x1);
        gbc.writeMem(0xd0c3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0xd0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c3), 0x29);
        // 29 0179
        gbc.setState(0xa716, 0xd8bb, 0x1280, 0x7ac6, 0xc787, 0x2e23, 0x0, 0x0);
        gbc.writeMem(0xa716, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd8bb);
        EXPECT(gbc.pc(), 0xa717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa716), 0x29);
        // 29 017A
        gbc.setState(0x873f, 0x407a, 0xdd60, 0xa7, 0x6de, 0x48ba, 0x1, 0x1);
        gbc.writeMem(0x873f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0x8740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873f), 0x29);
        // 29 017C
        gbc.setState(0x65a3, 0x5b7c, 0xb440, 0x3e38, 0x9817, 0x757c, 0x1, 0x0);
        gbc.writeMem(0x65a3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5b7c);
        EXPECT(gbc.pc(), 0x65a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 017D
        gbc.setState(0x7a72, 0xc9ec, 0x5a30, 0xb0c4, 0xaaaf, 0x3f2f, 0x1, 0x1);
        gbc.writeMem(0x7a72, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc9ec);
        EXPECT(gbc.pc(), 0x7a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 017E
        gbc.setState(0x1c96, 0x95a4, 0x1800, 0xfefc, 0x29b6, 0xb93f, 0x1, 0x0);
        gbc.writeMem(0x1c96, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x95a4);
        EXPECT(gbc.pc(), 0x1c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 017F
        gbc.setState(0x64b1, 0xa29c, 0xd8f0, 0x79f0, 0x115d, 0x138f, 0x1, 0x1);
        gbc.writeMem(0x64b1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa29c);
        EXPECT(gbc.pc(), 0x64b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0180
        gbc.setState(0x85b1, 0x24c8, 0x19d0, 0x8754, 0x8849, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x85b1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x24c8);
        EXPECT(gbc.pc(), 0x85b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b1), 0x29);
        // 29 0181
        gbc.setState(0x5db6, 0x213c, 0xf490, 0xda83, 0x91ec, 0xd148, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x213c);
        EXPECT(gbc.pc(), 0x5db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0182
        gbc.setState(0x5d5a, 0xc393, 0xc870, 0x2353, 0x21de, 0x6804, 0x0, 0x1);
        gbc.writeMem(0x5d5a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc393);
        EXPECT(gbc.pc(), 0x5d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0183
        gbc.setState(0xc039, 0xf771, 0xbaa0, 0xcc14, 0x8291, 0xdd62, 0x0, 0x0);
        gbc.writeMem(0xc039, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf771);
        EXPECT(gbc.pc(), 0xc03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc039), 0x29);
        // 29 0184
        gbc.setState(0x295a, 0x10c9, 0xaa90, 0x98a0, 0x3928, 0xb96c, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x10c9);
        EXPECT(gbc.pc(), 0x295b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0185
        gbc.setState(0x80ab, 0xa9c5, 0xa6b0, 0x7185, 0x8ceb, 0xb298, 0x1, 0x1);
        gbc.writeMem(0x80ab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0x80ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ab), 0x29);
        // 29 0186
        gbc.setState(0xda8d, 0xc504, 0x300, 0x3cda, 0x92c2, 0xf395, 0x1, 0x0);
        gbc.writeMem(0xda8d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc504);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8d), 0x29);
        // 29 0187
        gbc.setState(0x541c, 0xae0d, 0x52f0, 0x9535, 0x9b3b, 0x3049, 0x0, 0x0);
        gbc.writeMem(0x541c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0x541d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0188
        gbc.setState(0xe905, 0x36bb, 0x27a0, 0x52c7, 0xfec4, 0xb271, 0x1, 0x0);
        gbc.writeMem(0xe905, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x36bb);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe905), 0x29);
        // 29 0189
        gbc.setState(0x11b3, 0x280a, 0x58c0, 0x709a, 0xc5fe, 0xc8ee, 0x0, 0x1);
        gbc.writeMem(0x11b3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x280a);
        EXPECT(gbc.pc(), 0x11b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 018A
        gbc.setState(0x6860, 0xd881, 0x76d0, 0x3c71, 0x8903, 0x21ac, 0x1, 0x0);
        gbc.writeMem(0x6860, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd881);
        EXPECT(gbc.pc(), 0x6861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 018B
        gbc.setState(0xc213, 0xd8a8, 0xbea0, 0xff06, 0xa316, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0xc213, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd8a8);
        EXPECT(gbc.pc(), 0xc214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc213), 0x29);
        // 29 018C
        gbc.setState(0xd108, 0x68e7, 0x2f40, 0xb04a, 0xbc37, 0x1979, 0x1, 0x1);
        gbc.writeMem(0xd108, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x68e7);
        EXPECT(gbc.pc(), 0xd109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd108), 0x29);
        // 29 018D
        gbc.setState(0x9eb4, 0xefc8, 0x9a0, 0x3ac9, 0x2437, 0xb121, 0x1, 0x0);
        gbc.writeMem(0x9eb4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0x9eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb4), 0x29);
        // 29 018E
        gbc.setState(0x8cb, 0x5617, 0x6cb0, 0x1ea3, 0xfdda, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5617);
        EXPECT(gbc.pc(), 0x8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 018F
        gbc.setState(0x2a69, 0xcdf9, 0xead0, 0xae20, 0xe707, 0x7398, 0x1, 0x0);
        gbc.writeMem(0x2a69, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcdf9);
        EXPECT(gbc.pc(), 0x2a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0190
        gbc.setState(0x8857, 0x7eac, 0x78e0, 0xa178, 0x772f, 0x504d, 0x0, 0x1);
        gbc.writeMem(0x8857, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7eac);
        EXPECT(gbc.pc(), 0x8858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8857), 0x29);
        // 29 0191
        gbc.setState(0xa2ff, 0x9c07, 0xcca0, 0xf088, 0x7ea8, 0x50cb, 0x1, 0x1);
        gbc.writeMem(0xa2ff, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9c07);
        EXPECT(gbc.pc(), 0xa300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ff), 0x29);
        // 29 0192
        gbc.setState(0xdf83, 0x6dff, 0xd00, 0x918e, 0xd009, 0x4188, 0x0, 0x1);
        gbc.writeMem(0xdf83, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6dff);
        EXPECT(gbc.pc(), 0xdf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf83), 0x29);
        // 29 0193
        gbc.setState(0xaecd, 0x3b6c, 0xe10, 0x34e6, 0x197, 0x6ae3, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0xaece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecd), 0x29);
        // 29 0194
        gbc.setState(0x6fc0, 0xbcbb, 0x310, 0x4808, 0xf335, 0x420b, 0x1, 0x1);
        gbc.writeMem(0x6fc0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbcbb);
        EXPECT(gbc.pc(), 0x6fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0195
        gbc.setState(0x7375, 0x8f47, 0x5290, 0x641e, 0x46a, 0xeb84, 0x0, 0x0);
        gbc.writeMem(0x7375, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8f47);
        EXPECT(gbc.pc(), 0x7376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0197
        gbc.setState(0x6c11, 0xc0b0, 0xe990, 0xf09d, 0xdb05, 0xd310, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc0b0);
        EXPECT(gbc.pc(), 0x6c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0198
        gbc.setState(0xdf96, 0x848a, 0x91f0, 0x6454, 0xac33, 0xe4c7, 0x0, 0x1);
        gbc.writeMem(0xdf96, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x848a);
        EXPECT(gbc.pc(), 0xdf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf96), 0x29);
        // 29 0199
        gbc.setState(0x155d, 0xc519, 0xa9c0, 0xfc1b, 0x521c, 0xeae4, 0x0, 0x0);
        gbc.writeMem(0x155d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x155e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 019A
        gbc.setState(0xcf0a, 0x72b5, 0x1390, 0x43e9, 0xa4ce, 0x2b3b, 0x1, 0x0);
        gbc.writeMem(0xcf0a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x72b5);
        EXPECT(gbc.pc(), 0xcf0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf0a), 0x29);
        // 29 019B
        gbc.setState(0x4620, 0x3182, 0x7ca0, 0xf831, 0xf921, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0x4620, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3182);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 019C
        gbc.setState(0x3dd5, 0xcd8d, 0xa9f0, 0xbddb, 0x9365, 0x1e62, 0x1, 0x0);
        gbc.writeMem(0x3dd5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcd8d);
        EXPECT(gbc.pc(), 0x3dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 019D
        gbc.setState(0xc69b, 0xd0ed, 0x2620, 0xc2b2, 0x41ac, 0x7caa, 0x0, 0x0);
        gbc.writeMem(0xc69b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0xc69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69b), 0x29);
        // 29 019E
        gbc.setState(0xb6a1, 0xdfb1, 0x21e0, 0xc79a, 0x1753, 0x8b9e, 0x1, 0x0);
        gbc.writeMem(0xb6a1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdfb1);
        EXPECT(gbc.pc(), 0xb6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a1), 0x29);
        // 29 019F
        gbc.setState(0x643e, 0xf87, 0xa830, 0xd6d2, 0x23e8, 0x1219, 0x0, 0x0);
        gbc.writeMem(0x643e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0x643f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01A0
        gbc.setState(0x9b25, 0xbe0a, 0xaa60, 0x818a, 0x9f1d, 0xc1b2, 0x1, 0x1);
        gbc.writeMem(0x9b25, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbe0a);
        EXPECT(gbc.pc(), 0x9b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b25), 0x29);
        // 29 01A1
        gbc.setState(0x1ba2, 0x9fe1, 0x6b0, 0xd02c, 0x4996, 0x6708, 0x1, 0x0);
        gbc.writeMem(0x1ba2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9fe1);
        EXPECT(gbc.pc(), 0x1ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01A2
        gbc.setState(0x7e05, 0x1d4b, 0x90, 0xbe0a, 0xca68, 0xdc97, 0x0, 0x1);
        gbc.writeMem(0x7e05, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1d4b);
        EXPECT(gbc.pc(), 0x7e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01A3
        gbc.setState(0x99e8, 0xa004, 0x1590, 0xa70e, 0x9b8e, 0xa760, 0x0, 0x1);
        gbc.writeMem(0x99e8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa004);
        EXPECT(gbc.pc(), 0x99e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e8), 0x29);
        // 29 01A4
        gbc.setState(0x4a6c, 0x12cc, 0xf3b0, 0x364b, 0xe26b, 0x23db, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x12cc);
        EXPECT(gbc.pc(), 0x4a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01A5
        gbc.setState(0x1aa, 0xdb9e, 0x3e20, 0x2014, 0xe803, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x1aa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdb9e);
        EXPECT(gbc.pc(), 0x1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01A6
        gbc.setState(0xc55c, 0xf9af, 0x3750, 0x36d2, 0x9c09, 0x4297, 0x0, 0x0);
        gbc.writeMem(0xc55c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf9af);
        EXPECT(gbc.pc(), 0xc55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55c), 0x29);
        // 29 01A7
        gbc.setState(0x866d, 0x761e, 0x3580, 0x5cfa, 0x6ce2, 0xddce, 0x1, 0x0);
        gbc.writeMem(0x866d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x761e);
        EXPECT(gbc.pc(), 0x866e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866d), 0x29);
        // 29 01A8
        gbc.setState(0x1904, 0xa22f, 0x5060, 0xf12b, 0xecf1, 0xb38, 0x0, 0x0);
        gbc.writeMem(0x1904, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa22f);
        EXPECT(gbc.pc(), 0x1905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01A9
        gbc.setState(0xad84, 0x6e76, 0xd5c0, 0xe327, 0xe1ce, 0xada1, 0x0, 0x1);
        gbc.writeMem(0xad84, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6e76);
        EXPECT(gbc.pc(), 0xad85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad84), 0x29);
        // 29 01AA
        gbc.setState(0x3e2f, 0x50d6, 0xb360, 0x807a, 0xca9, 0x3229, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x50d6);
        EXPECT(gbc.pc(), 0x3e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01AB
        gbc.setState(0xb3b2, 0x3ea3, 0xd270, 0x7a30, 0x24b2, 0x9ab6, 0x0, 0x0);
        gbc.writeMem(0xb3b2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3ea3);
        EXPECT(gbc.pc(), 0xb3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b2), 0x29);
        // 29 01AC
        gbc.setState(0xe668, 0xcf12, 0xd7a0, 0xf57b, 0x23e1, 0xe743, 0x0, 0x1);
        gbc.writeMem(0xe668, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0xe669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe668), 0x29);
        // 29 01AD
        gbc.setState(0x88f, 0xc8b5, 0xb8e0, 0x66d0, 0xd2a5, 0xced, 0x0, 0x0);
        gbc.writeMem(0x88f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01AE
        gbc.setState(0x41b, 0xb521, 0xd1b0, 0x3785, 0x967a, 0x3a5c, 0x0, 0x0);
        gbc.writeMem(0x41b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb521);
        EXPECT(gbc.pc(), 0x41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01AF
        gbc.setState(0xd9e4, 0xc61b, 0x16e0, 0x47bc, 0x9ffc, 0xef2b, 0x1, 0x0);
        gbc.writeMem(0xd9e4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc61b);
        EXPECT(gbc.pc(), 0xd9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e4), 0x29);
        // 29 01B0
        gbc.setState(0x9c28, 0x7d39, 0x7d50, 0x36dc, 0xf60e, 0xa9c9, 0x1, 0x1);
        gbc.writeMem(0x9c28, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7d39);
        EXPECT(gbc.pc(), 0x9c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c28), 0x29);
        // 29 01B1
        gbc.setState(0xb2ef, 0x8c37, 0xfe30, 0x5097, 0xb788, 0x4d6e, 0x1, 0x1);
        gbc.writeMem(0xb2ef, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0xb2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ef), 0x29);
        // 29 01B2
        gbc.setState(0xc0c7, 0x6d54, 0xa0b0, 0x7688, 0x5e42, 0xad5f, 0x1, 0x1);
        gbc.writeMem(0xc0c7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6d54);
        EXPECT(gbc.pc(), 0xc0c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c7), 0x29);
        // 29 01B3
        gbc.setState(0x511b, 0x3233, 0x57b0, 0x56f7, 0x9c2, 0xefe9, 0x0, 0x0);
        gbc.writeMem(0x511b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3233);
        EXPECT(gbc.pc(), 0x511c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01B5
        gbc.setState(0xe77c, 0x3058, 0xbda0, 0x9bc5, 0x6be2, 0x352c, 0x0, 0x1);
        gbc.writeMem(0xe77c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3058);
        EXPECT(gbc.pc(), 0xe77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77c), 0x29);
        // 29 01B6
        gbc.setState(0xd635, 0xa89d, 0x1e20, 0xfe9d, 0x2888, 0x8b1a, 0x1, 0x1);
        gbc.writeMem(0xd635, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa89d);
        EXPECT(gbc.pc(), 0xd636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd635), 0x29);
        // 29 01B7
        gbc.setState(0xc5dc, 0x4654, 0x43c0, 0x12cf, 0xf9ca, 0x3715, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4654);
        EXPECT(gbc.pc(), 0xc5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5dc), 0x29);
        // 29 01B8
        gbc.setState(0x996a, 0xc06, 0x4ba0, 0x70b, 0x9937, 0xca92, 0x1, 0x0);
        gbc.writeMem(0x996a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc06);
        EXPECT(gbc.pc(), 0x996b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996a), 0x29);
        // 29 01B9
        gbc.setState(0x9469, 0x801c, 0x6110, 0x8137, 0xa6b4, 0x4ea8, 0x1, 0x1);
        gbc.writeMem(0x9469, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x801c);
        EXPECT(gbc.pc(), 0x946a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9469), 0x29);
        // 29 01BA
        gbc.setState(0x1754, 0xd76c, 0xba70, 0xe8ca, 0x1ce3, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x1754, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd76c);
        EXPECT(gbc.pc(), 0x1755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01BB
        gbc.setState(0x885, 0x80b6, 0xc10, 0x121b, 0x15ea, 0x6a54, 0x1, 0x1);
        gbc.writeMem(0x885, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x80b6);
        EXPECT(gbc.pc(), 0x886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01BC
        gbc.setState(0x313, 0xdd99, 0xa120, 0x7bb5, 0x5850, 0xa36b, 0x0, 0x0);
        gbc.writeMem(0x313, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdd99);
        EXPECT(gbc.pc(), 0x314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01BD
        gbc.setState(0x510f, 0x8dbf, 0x1430, 0x289d, 0x5295, 0x177e, 0x1, 0x1);
        gbc.writeMem(0x510f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8dbf);
        EXPECT(gbc.pc(), 0x5110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01BE
        gbc.setState(0xef0b, 0x4c9e, 0x17a0, 0x48ab, 0x4609, 0x504e, 0x0, 0x0);
        gbc.writeMem(0xef0b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4c9e);
        EXPECT(gbc.pc(), 0xef0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0b), 0x29);
        // 29 01BF
        gbc.setState(0x5e85, 0x23a8, 0x1040, 0xe72d, 0xe65f, 0x1f67, 0x0, 0x0);
        gbc.writeMem(0x5e85, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x23a8);
        EXPECT(gbc.pc(), 0x5e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01C0
        gbc.setState(0xe8b2, 0x251e, 0x6d40, 0xb5e3, 0xf75c, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x251e);
        EXPECT(gbc.pc(), 0xe8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b2), 0x29);
        // 29 01C1
        gbc.setState(0x8822, 0x2fce, 0x86f0, 0x67c4, 0x165d, 0xd15, 0x1, 0x0);
        gbc.writeMem(0x8822, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2fce);
        EXPECT(gbc.pc(), 0x8823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8822), 0x29);
        // 29 01C4
        gbc.setState(0xa40, 0xeeb6, 0x670, 0xd93c, 0x8b59, 0xa37d, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xeeb6);
        EXPECT(gbc.pc(), 0xa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01C5
        gbc.setState(0x2353, 0xba72, 0x4f20, 0xa00d, 0x3e6e, 0x6a0c, 0x0, 0x0);
        gbc.writeMem(0x2353, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xba72);
        EXPECT(gbc.pc(), 0x2354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01C6
        gbc.setState(0x996c, 0x4d34, 0x72e0, 0xaf6, 0x86e, 0x6dd7, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4d34);
        EXPECT(gbc.pc(), 0x996d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996c), 0x29);
        // 29 01C7
        gbc.setState(0xbb53, 0x7d24, 0x9f20, 0xfff5, 0x7279, 0xf2fd, 0x1, 0x1);
        gbc.writeMem(0xbb53, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7d24);
        EXPECT(gbc.pc(), 0xbb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb53), 0x29);
        // 29 01C8
        gbc.setState(0xefc8, 0xdbe5, 0x720, 0x7f16, 0xf194, 0x1fcf, 0x0, 0x1);
        gbc.writeMem(0xefc8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0xefc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc8), 0x29);
        // 29 01C9
        gbc.setState(0x4126, 0xe21f, 0x9b80, 0x78f6, 0x215, 0xaa67, 0x1, 0x0);
        gbc.writeMem(0x4126, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe21f);
        EXPECT(gbc.pc(), 0x4127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01CA
        gbc.setState(0x4ece, 0xb6d3, 0x7000, 0x54cc, 0x26ac, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0x4ece, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb6d3);
        EXPECT(gbc.pc(), 0x4ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01CB
        gbc.setState(0x20d5, 0xa3d7, 0x92c0, 0x812f, 0x2557, 0x50e4, 0x1, 0x1);
        gbc.writeMem(0x20d5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa3d7);
        EXPECT(gbc.pc(), 0x20d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01CC
        gbc.setState(0xc1c9, 0xa671, 0xed80, 0xfe3, 0xa55e, 0xc45d, 0x1, 0x0);
        gbc.writeMem(0xc1c9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa671);
        EXPECT(gbc.pc(), 0xc1ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c9), 0x29);
        // 29 01CD
        gbc.setState(0xa88b, 0x20b1, 0xf340, 0x93c7, 0x21b, 0x925b, 0x1, 0x0);
        gbc.writeMem(0xa88b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x20b1);
        EXPECT(gbc.pc(), 0xa88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88b), 0x29);
        // 29 01CE
        gbc.setState(0xeb3a, 0xab60, 0x250, 0x67eb, 0xac09, 0x983f, 0x0, 0x1);
        gbc.writeMem(0xeb3a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xab60);
        EXPECT(gbc.pc(), 0xeb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3a), 0x29);
        // 29 01CF
        gbc.setState(0xc698, 0xa581, 0xb870, 0x15b6, 0x99b8, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0xc698, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa581);
        EXPECT(gbc.pc(), 0xc699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc698), 0x29);
        // 29 01D0
        gbc.setState(0x972, 0xebae, 0x11b0, 0x6aac, 0x3cf3, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x972, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xebae);
        EXPECT(gbc.pc(), 0x973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01D1
        gbc.setState(0xbe0, 0x705b, 0x6220, 0x1703, 0x949c, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xbe0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x705b);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01D2
        gbc.setState(0xe52a, 0x20fe, 0x10, 0x4e13, 0x8e3b, 0x8983, 0x1, 0x1);
        gbc.writeMem(0xe52a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x20fe);
        EXPECT(gbc.pc(), 0xe52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52a), 0x29);
        // 29 01D3
        gbc.setState(0xb2a5, 0x9c8a, 0xd660, 0x93e9, 0x995b, 0x951d, 0x0, 0x0);
        gbc.writeMem(0xb2a5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9c8a);
        EXPECT(gbc.pc(), 0xb2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a5), 0x29);
        // 29 01D4
        gbc.setState(0x1ac4, 0x6182, 0x9630, 0x7922, 0x41f8, 0xdbeb, 0x1, 0x0);
        gbc.writeMem(0x1ac4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6182);
        EXPECT(gbc.pc(), 0x1ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01D5
        gbc.setState(0x2f5d, 0x6672, 0x1d00, 0xfc11, 0x1bbb, 0x93a3, 0x0, 0x0);
        gbc.writeMem(0x2f5d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6672);
        EXPECT(gbc.pc(), 0x2f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01D6
        gbc.setState(0xde32, 0xe466, 0x8070, 0x3273, 0xd799, 0x6346, 0x1, 0x1);
        gbc.writeMem(0xde32, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe466);
        EXPECT(gbc.pc(), 0xde33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde32), 0x29);
        // 29 01D7
        gbc.setState(0x83c9, 0x4aa5, 0x4940, 0xf89e, 0x5a8e, 0x5f46, 0x1, 0x0);
        gbc.writeMem(0x83c9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4aa5);
        EXPECT(gbc.pc(), 0x83ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c9), 0x29);
        // 29 01D8
        gbc.setState(0x79ea, 0xb7cf, 0xfbc0, 0x379, 0x15b2, 0x2092, 0x1, 0x0);
        gbc.writeMem(0x79ea, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb7cf);
        EXPECT(gbc.pc(), 0x79eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01D9
        gbc.setState(0xc253, 0x56ff, 0xa480, 0xcbf0, 0x19ff, 0x8a23, 0x0, 0x0);
        gbc.writeMem(0xc253, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x56ff);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc253), 0x29);
        // 29 01DA
        gbc.setState(0xe7b0, 0x1d7a, 0xcf0, 0xf875, 0xe391, 0x3d59, 0x0, 0x0);
        gbc.writeMem(0xe7b0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1d7a);
        EXPECT(gbc.pc(), 0xe7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b0), 0x29);
        // 29 01DB
        gbc.setState(0x2b07, 0x8e17, 0x6d30, 0xc893, 0xbe58, 0x323f, 0x0, 0x0);
        gbc.writeMem(0x2b07, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8e17);
        EXPECT(gbc.pc(), 0x2b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01DC
        gbc.setState(0x7b7f, 0xfd27, 0x3560, 0x54aa, 0x65ec, 0x95c8, 0x0, 0x0);
        gbc.writeMem(0x7b7f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfd27);
        EXPECT(gbc.pc(), 0x7b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01DD
        gbc.setState(0x93ab, 0xf4, 0xdb10, 0xd877, 0xe8bd, 0xbb2f, 0x0, 0x1);
        gbc.writeMem(0x93ab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf4);
        EXPECT(gbc.pc(), 0x93ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ab), 0x29);
        // 29 01DE
        gbc.setState(0xe9db, 0x5c58, 0x1e90, 0x922f, 0xc729, 0xc23c, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5c58);
        EXPECT(gbc.pc(), 0xe9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9db), 0x29);
        // 29 01DF
        gbc.setState(0x46e, 0x1858, 0xc20, 0x5719, 0x7e4a, 0xbacc, 0x0, 0x0);
        gbc.writeMem(0x46e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1858);
        EXPECT(gbc.pc(), 0x46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01E0
        gbc.setState(0x63fb, 0x2362, 0x70, 0x71a3, 0x217d, 0x286a, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2362);
        EXPECT(gbc.pc(), 0x63fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01E1
        gbc.setState(0x84c3, 0xc8, 0xc080, 0x8df0, 0xbe19, 0x55ba, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc8);
        EXPECT(gbc.pc(), 0x84c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c3), 0x29);
        // 29 01E2
        gbc.setState(0x24dd, 0x2383, 0x3a60, 0x2387, 0x24f3, 0xbf6c, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2383);
        EXPECT(gbc.pc(), 0x24de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01E3
        gbc.setState(0x69a, 0xfac0, 0xb310, 0xd007, 0x431d, 0x7c34, 0x0, 0x1);
        gbc.writeMem(0x69a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01E5
        gbc.setState(0x45f, 0x42d7, 0x2ac0, 0x877f, 0x2931, 0x1994, 0x0, 0x1);
        gbc.writeMem(0x45f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x42d7);
        EXPECT(gbc.pc(), 0x460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01E6
        gbc.setState(0x8978, 0x6edf, 0x62e0, 0xa961, 0x96e4, 0x9404, 0x0, 0x1);
        gbc.writeMem(0x8978, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6edf);
        EXPECT(gbc.pc(), 0x8979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8978), 0x29);
        // 29 01E7
        gbc.setState(0x311b, 0x378e, 0x6510, 0x226b, 0xefe3, 0x972e, 0x0, 0x1);
        gbc.writeMem(0x311b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x378e);
        EXPECT(gbc.pc(), 0x311c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01E8
        gbc.setState(0x9634, 0x430d, 0x9d90, 0x145a, 0x92b4, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x9634, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x430d);
        EXPECT(gbc.pc(), 0x9635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9634), 0x29);
        // 29 01E9
        gbc.setState(0x43d3, 0xe5b2, 0x14d0, 0xa3d6, 0xbe46, 0xd852, 0x1, 0x1);
        gbc.writeMem(0x43d3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe5b2);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01EA
        gbc.setState(0x4c32, 0x61f0, 0x8b70, 0x3e6, 0x483a, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0x4c32, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x61f0);
        EXPECT(gbc.pc(), 0x4c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01EB
        gbc.setState(0x7ad4, 0x1841, 0xf7a0, 0x50a7, 0xae9d, 0xc96e, 0x0, 0x0);
        gbc.writeMem(0x7ad4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1841);
        EXPECT(gbc.pc(), 0x7ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 01EC
        gbc.setState(0x2752, 0x1eee, 0x6f0, 0xd329, 0x4ec6, 0x1382, 0x1, 0x1);
        gbc.writeMem(0x2752, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0x2753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01ED
        gbc.setState(0x9286, 0xdad9, 0xc3c0, 0xa162, 0x9d8a, 0xbe92, 0x0, 0x0);
        gbc.writeMem(0x9286, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdad9);
        EXPECT(gbc.pc(), 0x9287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9286), 0x29);
        // 29 01EE
        gbc.setState(0xd591, 0xa2a6, 0xf8b0, 0xe127, 0xe2d1, 0xab22, 0x1, 0x1);
        gbc.writeMem(0xd591, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa2a6);
        EXPECT(gbc.pc(), 0xd592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd591), 0x29);
        // 29 01EF
        gbc.setState(0x4e2c, 0xb8e5, 0xe080, 0xdc38, 0x3d87, 0x2593, 0x0, 0x1);
        gbc.writeMem(0x4e2c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb8e5);
        EXPECT(gbc.pc(), 0x4e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01F0
        gbc.setState(0x1f4b, 0x3e27, 0x4860, 0xfc7b, 0xc202, 0x577c, 0x1, 0x1);
        gbc.writeMem(0x1f4b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3e27);
        EXPECT(gbc.pc(), 0x1f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01F1
        gbc.setState(0xb0c3, 0x5a2e, 0xd6f0, 0x2ce2, 0x859a, 0x2328, 0x1, 0x0);
        gbc.writeMem(0xb0c3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5a2e);
        EXPECT(gbc.pc(), 0xb0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c3), 0x29);
        // 29 01F2
        gbc.setState(0xc8c7, 0x4d0e, 0xa180, 0x8d74, 0xb063, 0xa771, 0x1, 0x0);
        gbc.writeMem(0xc8c7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4d0e);
        EXPECT(gbc.pc(), 0xc8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c7), 0x29);
        // 29 01F3
        gbc.setState(0xef29, 0xde5e, 0x8890, 0x15cd, 0x7ee1, 0xe806, 0x1, 0x1);
        gbc.writeMem(0xef29, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef29), 0x29);
        // 29 01F4
        gbc.setState(0xd998, 0xf16f, 0x11b0, 0xec0a, 0x5809, 0x9164, 0x0, 0x0);
        gbc.writeMem(0xd998, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf16f);
        EXPECT(gbc.pc(), 0xd999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd998), 0x29);
        // 29 01F5
        gbc.setState(0x3086, 0x36e1, 0x31d0, 0x8043, 0xba26, 0xb7e1, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x36e1);
        EXPECT(gbc.pc(), 0x3087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 01F6
        gbc.setState(0x67bd, 0xa142, 0xd8a0, 0xb98, 0x7c75, 0x263e, 0x1, 0x0);
        gbc.writeMem(0x67bd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa142);
        EXPECT(gbc.pc(), 0x67be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01F7
        gbc.setState(0x6da7, 0xf4c4, 0x6aa0, 0xa36d, 0x5250, 0x3c39, 0x0, 0x0);
        gbc.writeMem(0x6da7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0x6da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 01F8
        gbc.setState(0x6be0, 0xcf29, 0xb1d0, 0x888e, 0x7bdf, 0x101f, 0x0, 0x1);
        gbc.writeMem(0x6be0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcf29);
        EXPECT(gbc.pc(), 0x6be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 01F9
        gbc.setState(0xd460, 0x6fcb, 0x7a20, 0x6230, 0x300e, 0xcc6, 0x0, 0x1);
        gbc.writeMem(0xd460, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6fcb);
        EXPECT(gbc.pc(), 0xd461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd460), 0x29);
        // 29 01FA
        gbc.setState(0xa970, 0x7cad, 0x410, 0xb114, 0x1e35, 0x57cd, 0x1, 0x1);
        gbc.writeMem(0xa970, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7cad);
        EXPECT(gbc.pc(), 0xa971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa970), 0x29);
        // 29 01FB
        gbc.setState(0x8a71, 0x3305, 0x5d50, 0xa30e, 0x79c5, 0x7081, 0x1, 0x0);
        gbc.writeMem(0x8a71, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3305);
        EXPECT(gbc.pc(), 0x8a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a71), 0x29);
        // 29 01FC
        gbc.setState(0xd6d6, 0xf18b, 0x6a10, 0x3bda, 0x7d82, 0x21ec, 0x0, 0x1);
        gbc.writeMem(0xd6d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf18b);
        EXPECT(gbc.pc(), 0xd6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d6), 0x29);
        // 29 01FE
        gbc.setState(0x9093, 0xf67b, 0x6c10, 0x52cd, 0x8e94, 0x2075, 0x1, 0x1);
        gbc.writeMem(0x9093, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf67b);
        EXPECT(gbc.pc(), 0x9094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9093), 0x29);
        // 29 0200
        gbc.setState(0xd62d, 0x49ca, 0xdff0, 0x919d, 0xa08f, 0x61b, 0x0, 0x0);
        gbc.writeMem(0xd62d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x49ca);
        EXPECT(gbc.pc(), 0xd62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62d), 0x29);
        // 29 0201
        gbc.setState(0x17b8, 0x9fb3, 0xe10, 0xa1b6, 0xb7cb, 0xa23d, 0x1, 0x1);
        gbc.writeMem(0x17b8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9fb3);
        EXPECT(gbc.pc(), 0x17b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0202
        gbc.setState(0xd177, 0xfc75, 0x3340, 0xb8a7, 0xb2c0, 0xee09, 0x0, 0x1);
        gbc.writeMem(0xd177, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfc75);
        EXPECT(gbc.pc(), 0xd178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd177), 0x29);
        // 29 0203
        gbc.setState(0xed24, 0x36a0, 0x4ef0, 0x92e2, 0xe2eb, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0xed24, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x36a0);
        EXPECT(gbc.pc(), 0xed25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed24), 0x29);
        // 29 0204
        gbc.setState(0x6e40, 0xf314, 0xc3c0, 0xfbd7, 0x1c90, 0x3336, 0x0, 0x0);
        gbc.writeMem(0x6e40, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf314);
        EXPECT(gbc.pc(), 0x6e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0205
        gbc.setState(0xa22e, 0x62e7, 0xa690, 0x657f, 0xf732, 0x99df, 0x1, 0x1);
        gbc.writeMem(0xa22e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x62e7);
        EXPECT(gbc.pc(), 0xa22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22e), 0x29);
        // 29 0206
        gbc.setState(0xd311, 0x545f, 0x9ce0, 0x61b5, 0xf625, 0xdb9a, 0x0, 0x1);
        gbc.writeMem(0xd311, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x545f);
        EXPECT(gbc.pc(), 0xd312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd311), 0x29);
        // 29 0207
        gbc.setState(0x1696, 0xd36d, 0x6e20, 0x191e, 0x1b99, 0xae47, 0x0, 0x1);
        gbc.writeMem(0x1696, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd36d);
        EXPECT(gbc.pc(), 0x1697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0208
        gbc.setState(0x30b2, 0xf2a0, 0x1ea0, 0xd2c1, 0x8184, 0x71a2, 0x0, 0x1);
        gbc.writeMem(0x30b2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf2a0);
        EXPECT(gbc.pc(), 0x30b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 020A
        gbc.setState(0x673, 0xda2b, 0xff80, 0x31f2, 0x86, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0x673, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xda2b);
        EXPECT(gbc.pc(), 0x674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 020B
        gbc.setState(0x28cd, 0x37d, 0xdd50, 0x4433, 0x96f3, 0xa3a, 0x0, 0x1);
        gbc.writeMem(0x28cd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x37d);
        EXPECT(gbc.pc(), 0x28ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 020C
        gbc.setState(0x8aa2, 0x52fe, 0x3e80, 0x7780, 0xb487, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x8aa2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x52fe);
        EXPECT(gbc.pc(), 0x8aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa2), 0x29);
        // 29 020D
        gbc.setState(0xbe60, 0xcddc, 0x5ed0, 0xf8b9, 0xaba1, 0x35a9, 0x0, 0x1);
        gbc.writeMem(0xbe60, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcddc);
        EXPECT(gbc.pc(), 0xbe61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe60), 0x29);
        // 29 020E
        gbc.setState(0x8248, 0xaf24, 0xa570, 0x895f, 0x2353, 0xc678, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x8249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8248), 0x29);
        // 29 020F
        gbc.setState(0x750e, 0x8946, 0x8310, 0xcbe3, 0xf11e, 0x4f0b, 0x0, 0x0);
        gbc.writeMem(0x750e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8946);
        EXPECT(gbc.pc(), 0x750f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0210
        gbc.setState(0xc697, 0x1267, 0xb390, 0xe4a6, 0xfafe, 0x631d, 0x1, 0x0);
        gbc.writeMem(0xc697, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1267);
        EXPECT(gbc.pc(), 0xc698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc697), 0x29);
        // 29 0211
        gbc.setState(0x933b, 0xed7f, 0x1490, 0xd4c8, 0x4a34, 0x578b, 0x0, 0x1);
        gbc.writeMem(0x933b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xed7f);
        EXPECT(gbc.pc(), 0x933c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933b), 0x29);
        // 29 0212
        gbc.setState(0xc5ca, 0x3ba5, 0xa370, 0xf0fa, 0x13f7, 0x7e59, 0x0, 0x0);
        gbc.writeMem(0xc5ca, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3ba5);
        EXPECT(gbc.pc(), 0xc5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ca), 0x29);
        // 29 0213
        gbc.setState(0xd706, 0xad51, 0x5e60, 0xa942, 0x1bd3, 0xcd5e, 0x1, 0x1);
        gbc.writeMem(0xd706, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xad51);
        EXPECT(gbc.pc(), 0xd707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd706), 0x29);
        // 29 0214
        gbc.setState(0x74cb, 0x813b, 0xa670, 0x164c, 0x1f9d, 0x1ed5, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x813b);
        EXPECT(gbc.pc(), 0x74cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0215
        gbc.setState(0xd9a8, 0x3319, 0x90d0, 0x194b, 0xae15, 0xfd31, 0x1, 0x1);
        gbc.writeMem(0xd9a8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3319);
        EXPECT(gbc.pc(), 0xd9a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a8), 0x29);
        // 29 0216
        gbc.setState(0x7aea, 0x5cc6, 0xd7d0, 0x9e26, 0xa9c, 0x4b8e, 0x0, 0x0);
        gbc.writeMem(0x7aea, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0x7aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0217
        gbc.setState(0x70a3, 0xcb14, 0x490, 0xdde4, 0x8ad3, 0x11bd, 0x0, 0x0);
        gbc.writeMem(0x70a3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcb14);
        EXPECT(gbc.pc(), 0x70a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0218
        gbc.setState(0x78f6, 0xf847, 0x8da0, 0xe7a3, 0xd319, 0x65fc, 0x1, 0x1);
        gbc.writeMem(0x78f6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf847);
        EXPECT(gbc.pc(), 0x78f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0219
        gbc.setState(0x2c01, 0x5d5c, 0xa120, 0x8c68, 0xe5af, 0xca96, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5d5c);
        EXPECT(gbc.pc(), 0x2c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 021A
        gbc.setState(0xb99d, 0x6317, 0x5390, 0x1d64, 0xf63d, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0xb99d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6317);
        EXPECT(gbc.pc(), 0xb99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99d), 0x29);
        // 29 021B
        gbc.setState(0x3743, 0xfa81, 0x7d40, 0xe2ba, 0x6240, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x3743, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfa81);
        EXPECT(gbc.pc(), 0x3744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 021C
        gbc.setState(0xd7c7, 0xa2c0, 0xcf70, 0x8e45, 0xdfd4, 0xcc22, 0x0, 0x0);
        gbc.writeMem(0xd7c7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa2c0);
        EXPECT(gbc.pc(), 0xd7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c7), 0x29);
        // 29 021D
        gbc.setState(0xb212, 0xe7cd, 0x200, 0xe1de, 0xda37, 0x1705, 0x1, 0x0);
        gbc.writeMem(0xb212, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0xb213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb212), 0x29);
        // 29 021E
        gbc.setState(0x6455, 0xee6f, 0xc040, 0xd5cc, 0x18a3, 0x4c7b, 0x1, 0x1);
        gbc.writeMem(0x6455, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xee6f);
        EXPECT(gbc.pc(), 0x6456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 021F
        gbc.setState(0x1313, 0xdb72, 0x5200, 0x665, 0xf684, 0x77b6, 0x1, 0x0);
        gbc.writeMem(0x1313, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdb72);
        EXPECT(gbc.pc(), 0x1314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0220
        gbc.setState(0xb9ff, 0x29cd, 0x2930, 0xbef5, 0xb2f0, 0x60ea, 0x0, 0x0);
        gbc.writeMem(0xb9ff, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x29cd);
        EXPECT(gbc.pc(), 0xba00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ff), 0x29);
        // 29 0222
        gbc.setState(0xe1b3, 0x1281, 0x8650, 0x57dc, 0xf278, 0x86d2, 0x0, 0x0);
        gbc.writeMem(0xe1b3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1281);
        EXPECT(gbc.pc(), 0xe1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b3), 0x29);
        // 29 0223
        gbc.setState(0xd326, 0xbe9d, 0x9900, 0x2137, 0x9966, 0x49a2, 0x0, 0x0);
        gbc.writeMem(0xd326, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbe9d);
        EXPECT(gbc.pc(), 0xd327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd326), 0x29);
        // 29 0224
        gbc.setState(0xb1a1, 0xffb7, 0x3850, 0x16a0, 0x19a5, 0xe541, 0x0, 0x1);
        gbc.writeMem(0xb1a1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xffb7);
        EXPECT(gbc.pc(), 0xb1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a1), 0x29);
        // 29 0225
        gbc.setState(0xa949, 0x298b, 0x1290, 0x1fdf, 0x6150, 0x1581, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x298b);
        EXPECT(gbc.pc(), 0xa94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0x29);
        // 29 0226
        gbc.setState(0x648f, 0xe44e, 0xfe80, 0x1073, 0x6f14, 0x3da4, 0x0, 0x1);
        gbc.writeMem(0x648f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe44e);
        EXPECT(gbc.pc(), 0x6490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0227
        gbc.setState(0xd510, 0x1928, 0xad0, 0x74ca, 0xbe12, 0x8d21, 0x0, 0x0);
        gbc.writeMem(0xd510, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1928);
        EXPECT(gbc.pc(), 0xd511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd510), 0x29);
        // 29 0228
        gbc.setState(0xac63, 0xc5ac, 0x46c0, 0x79d8, 0xff2c, 0x47f1, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc5ac);
        EXPECT(gbc.pc(), 0xac64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac63), 0x29);
        // 29 0229
        gbc.setState(0x5434, 0x8f83, 0x2710, 0x4507, 0x7090, 0xfb92, 0x0, 0x1);
        gbc.writeMem(0x5434, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8f83);
        EXPECT(gbc.pc(), 0x5435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 022A
        gbc.setState(0x9c2e, 0x818c, 0xbc90, 0x6bf1, 0xb223, 0xab8d, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x818c);
        EXPECT(gbc.pc(), 0x9c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2e), 0x29);
        // 29 022B
        gbc.setState(0x1baa, 0xf190, 0x1720, 0x1701, 0x142, 0xa514, 0x0, 0x1);
        gbc.writeMem(0x1baa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf190);
        EXPECT(gbc.pc(), 0x1bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 022C
        gbc.setState(0x4edb, 0xdee6, 0xcda0, 0xdac, 0xfc79, 0x5196, 0x1, 0x0);
        gbc.writeMem(0x4edb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0x4edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 022D
        gbc.setState(0xa9fa, 0x14fe, 0x6980, 0xec2a, 0xc769, 0xa4b6, 0x0, 0x0);
        gbc.writeMem(0xa9fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x14fe);
        EXPECT(gbc.pc(), 0xa9fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fa), 0x29);
        // 29 022E
        gbc.setState(0x46be, 0x21ef, 0x5340, 0xb38a, 0x4f69, 0x30e5, 0x1, 0x0);
        gbc.writeMem(0x46be, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x21ef);
        EXPECT(gbc.pc(), 0x46bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 022F
        gbc.setState(0xd0f, 0xd5b8, 0x76c0, 0x8fdd, 0xc7f6, 0xc157, 0x1, 0x0);
        gbc.writeMem(0xd0f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0xd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0230
        gbc.setState(0xdab1, 0x7361, 0x5870, 0x2a9b, 0x21c1, 0xeb24, 0x0, 0x1);
        gbc.writeMem(0xdab1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7361);
        EXPECT(gbc.pc(), 0xdab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab1), 0x29);
        // 29 0231
        gbc.setState(0xc905, 0xecc5, 0xe020, 0x6ce5, 0x7a98, 0x34b1, 0x0, 0x0);
        gbc.writeMem(0xc905, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xecc5);
        EXPECT(gbc.pc(), 0xc906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc905), 0x29);
        // 29 0232
        gbc.setState(0x583e, 0x1024, 0x2610, 0x279a, 0xefba, 0x49a, 0x0, 0x0);
        gbc.writeMem(0x583e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1024);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0233
        gbc.setState(0xd868, 0xdbd1, 0xb330, 0x3d9d, 0xceff, 0xfcc7, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdbd1);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd868), 0x29);
        // 29 0234
        gbc.setState(0xc70a, 0xba4b, 0x7070, 0x53b2, 0x36a6, 0x2c01, 0x0, 0x0);
        gbc.writeMem(0xc70a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xba4b);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70a), 0x29);
        // 29 0235
        gbc.setState(0x9609, 0xc594, 0x95b0, 0xd0fe, 0x98a4, 0x2cf3, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc594);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9609), 0x29);
        // 29 0236
        gbc.setState(0x144c, 0x5f6b, 0x1bf0, 0x853c, 0x5136, 0xaaae, 0x1, 0x1);
        gbc.writeMem(0x144c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5f6b);
        EXPECT(gbc.pc(), 0x144d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0237
        gbc.setState(0x566d, 0xc616, 0xeed0, 0xd97d, 0x1f3d, 0x526b, 0x0, 0x1);
        gbc.writeMem(0x566d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc616);
        EXPECT(gbc.pc(), 0x566e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0238
        gbc.setState(0x56cc, 0xdf93, 0xfe90, 0x925c, 0xfcbe, 0xad99, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdf93);
        EXPECT(gbc.pc(), 0x56cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0239
        gbc.setState(0xe1bf, 0xa270, 0xf120, 0xfddf, 0x66d7, 0x9299, 0x0, 0x1);
        gbc.writeMem(0xe1bf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa270);
        EXPECT(gbc.pc(), 0xe1c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bf), 0x29);
        // 29 023A
        gbc.setState(0xe955, 0x85b7, 0x1000, 0xdb10, 0x8484, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0xe955, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x85b7);
        EXPECT(gbc.pc(), 0xe956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe955), 0x29);
        // 29 023B
        gbc.setState(0xd7f, 0x1279, 0xe2a0, 0xdb79, 0xd4d6, 0x880b, 0x1, 0x0);
        gbc.writeMem(0xd7f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1279);
        EXPECT(gbc.pc(), 0xd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 023C
        gbc.setState(0x1891, 0x1dbd, 0x8ce0, 0x899f, 0x3e01, 0x63c0, 0x1, 0x0);
        gbc.writeMem(0x1891, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1dbd);
        EXPECT(gbc.pc(), 0x1892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 023D
        gbc.setState(0x24b, 0x9b1f, 0x36b0, 0xe09a, 0x4d91, 0x801c, 0x0, 0x0);
        gbc.writeMem(0x24b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9b1f);
        EXPECT(gbc.pc(), 0x24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 023E
        gbc.setState(0x6e, 0x66be, 0xd9f0, 0x238a, 0x11df, 0x3e0d, 0x0, 0x0);
        gbc.writeMem(0x6e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x66be);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 023F
        gbc.setState(0x9763, 0xa5b7, 0x9e0, 0xe829, 0x8c6e, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x9763, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa5b7);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9763), 0x29);
        // 29 0240
        gbc.setState(0x958, 0xb078, 0xc600, 0xd399, 0x8ca1, 0xc21b, 0x1, 0x0);
        gbc.writeMem(0x958, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb078);
        EXPECT(gbc.pc(), 0x959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0241
        gbc.setState(0x527, 0xa136, 0x3b90, 0x12e2, 0xfeaa, 0x1695, 0x1, 0x1);
        gbc.writeMem(0x527, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0x528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0242
        gbc.setState(0x2c1a, 0x8275, 0x7330, 0x104e, 0xf8ac, 0xf352, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8275);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0243
        gbc.setState(0x4152, 0xe26a, 0xdf00, 0x895d, 0x78b, 0xaa04, 0x0, 0x1);
        gbc.writeMem(0x4152, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe26a);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0244
        gbc.setState(0xec96, 0x5080, 0x5990, 0xce19, 0x6a5e, 0x1733, 0x1, 0x1);
        gbc.writeMem(0xec96, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5080);
        EXPECT(gbc.pc(), 0xec97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec96), 0x29);
        // 29 0245
        gbc.setState(0x1850, 0xda3c, 0xe350, 0xdc32, 0xc4e1, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x1850, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xda3c);
        EXPECT(gbc.pc(), 0x1851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0246
        gbc.setState(0xb7c3, 0x3ac9, 0x36e0, 0xc67f, 0xb001, 0x79da, 0x1, 0x0);
        gbc.writeMem(0xb7c3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3ac9);
        EXPECT(gbc.pc(), 0xb7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c3), 0x29);
        // 29 0247
        gbc.setState(0x6b56, 0x1c4a, 0x3410, 0xa9e5, 0x8901, 0x6fac, 0x0, 0x0);
        gbc.writeMem(0x6b56, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1c4a);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0248
        gbc.setState(0x3fcb, 0xbda1, 0x13d0, 0x3f38, 0xb538, 0x9861, 0x0, 0x0);
        gbc.writeMem(0x3fcb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbda1);
        EXPECT(gbc.pc(), 0x3fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0249
        gbc.setState(0x51ea, 0x65f8, 0xe3f0, 0x497a, 0x3866, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x51ea, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x65f8);
        EXPECT(gbc.pc(), 0x51eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 024A
        gbc.setState(0x76ae, 0xa6cc, 0xdde0, 0xd2c6, 0x8bc1, 0xa756, 0x1, 0x0);
        gbc.writeMem(0x76ae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa6cc);
        EXPECT(gbc.pc(), 0x76af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 024B
        gbc.setState(0x56cc, 0x53cb, 0xc6d0, 0x30de, 0x8ee9, 0x1e33, 0x0, 0x1);
        gbc.writeMem(0x56cc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x53cb);
        EXPECT(gbc.pc(), 0x56cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 024C
        gbc.setState(0xd402, 0xa16e, 0xab60, 0x4fb4, 0x4414, 0x4b1a, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa16e);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd402), 0x29);
        // 29 024E
        gbc.setState(0x5d44, 0x540c, 0x190, 0xf619, 0x7b1a, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0x5d44, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x540c);
        EXPECT(gbc.pc(), 0x5d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 024F
        gbc.setState(0xa847, 0xa13f, 0x9650, 0xa1f0, 0xf09d, 0xcf8c, 0x0, 0x0);
        gbc.writeMem(0xa847, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa13f);
        EXPECT(gbc.pc(), 0xa848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa847), 0x29);
        // 29 0250
        gbc.setState(0x4fb9, 0x1f8e, 0x5380, 0x673c, 0xfaf7, 0x2ef3, 0x1, 0x0);
        gbc.writeMem(0x4fb9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1f8e);
        EXPECT(gbc.pc(), 0x4fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0251
        gbc.setState(0x50ab, 0x3cf2, 0xa70, 0xd872, 0xfe74, 0xe499, 0x0, 0x1);
        gbc.writeMem(0x50ab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3cf2);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0252
        gbc.setState(0x30ee, 0xa5bc, 0x4d0, 0x7e8e, 0x8c92, 0xea04, 0x0, 0x0);
        gbc.writeMem(0x30ee, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa5bc);
        EXPECT(gbc.pc(), 0x30ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0254
        gbc.setState(0xaa4e, 0x8cfd, 0x2f20, 0x2d08, 0xa393, 0xc810, 0x1, 0x1);
        gbc.writeMem(0xaa4e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8cfd);
        EXPECT(gbc.pc(), 0xaa4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4e), 0x29);
        // 29 0255
        gbc.setState(0x7c0d, 0x8fac, 0x3f40, 0x16d3, 0xd0ae, 0xcf56, 0x1, 0x1);
        gbc.writeMem(0x7c0d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8fac);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0256
        gbc.setState(0x93b7, 0x41e5, 0xcab0, 0x97c4, 0xb78b, 0x318b, 0x1, 0x1);
        gbc.writeMem(0x93b7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x41e5);
        EXPECT(gbc.pc(), 0x93b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b7), 0x29);
        // 29 0257
        gbc.setState(0xbe02, 0xdccc, 0x6d40, 0xaa7d, 0x3306, 0xc736, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdccc);
        EXPECT(gbc.pc(), 0xbe03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe02), 0x29);
        // 29 0258
        gbc.setState(0x7609, 0x9766, 0xd7c0, 0x9bc3, 0x106b, 0xdbff, 0x1, 0x1);
        gbc.writeMem(0x7609, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9766);
        EXPECT(gbc.pc(), 0x760a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 025A
        gbc.setState(0xb88d, 0xc03c, 0xc380, 0xfed, 0xd828, 0xf97a, 0x0, 0x0);
        gbc.writeMem(0xb88d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc03c);
        EXPECT(gbc.pc(), 0xb88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88d), 0x29);
        // 29 025B
        gbc.setState(0x4a72, 0x31ae, 0x6300, 0xc70c, 0xbb1d, 0x640, 0x0, 0x0);
        gbc.writeMem(0x4a72, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x4a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 025C
        gbc.setState(0xc980, 0xa6d9, 0x2160, 0x6ae6, 0xaea3, 0xff21, 0x1, 0x1);
        gbc.writeMem(0xc980, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa6d9);
        EXPECT(gbc.pc(), 0xc981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc980), 0x29);
        // 29 025E
        gbc.setState(0x9bb1, 0x6375, 0xb30, 0x586f, 0x4f41, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6375);
        EXPECT(gbc.pc(), 0x9bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb1), 0x29);
        // 29 025F
        gbc.setState(0x9e93, 0x160, 0xe5d0, 0xdd0c, 0xa9a0, 0xf6da, 0x0, 0x0);
        gbc.writeMem(0x9e93, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x160);
        EXPECT(gbc.pc(), 0x9e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e93), 0x29);
        // 29 0260
        gbc.setState(0xefa2, 0xf709, 0xbaa0, 0xe656, 0xba65, 0xe46e, 0x1, 0x1);
        gbc.writeMem(0xefa2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf709);
        EXPECT(gbc.pc(), 0xefa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa2), 0x29);
        // 29 0262
        gbc.setState(0x4879, 0xa210, 0xd410, 0xb1a3, 0x2a1c, 0xa9f, 0x1, 0x1);
        gbc.writeMem(0x4879, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa210);
        EXPECT(gbc.pc(), 0x487a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0263
        gbc.setState(0x8b81, 0x129c, 0xff50, 0x37fa, 0x9cb5, 0xfe2e, 0x1, 0x1);
        gbc.writeMem(0x8b81, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x129c);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b81), 0x29);
        // 29 0264
        gbc.setState(0x33eb, 0x9b9f, 0x7db0, 0xdd0d, 0xffc5, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x33eb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9b9f);
        EXPECT(gbc.pc(), 0x33ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0265
        gbc.setState(0x6054, 0x4cdf, 0xad10, 0xd7d2, 0xacaf, 0xef42, 0x0, 0x1);
        gbc.writeMem(0x6054, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4cdf);
        EXPECT(gbc.pc(), 0x6055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0266
        gbc.setState(0x73aa, 0xdd61, 0x5b10, 0xac1b, 0xdf07, 0xc45b, 0x0, 0x0);
        gbc.writeMem(0x73aa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdd61);
        EXPECT(gbc.pc(), 0x73ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0268
        gbc.setState(0x2cb9, 0xc2ab, 0x35b0, 0x1444, 0xccf7, 0xf6f8, 0x1, 0x0);
        gbc.writeMem(0x2cb9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc2ab);
        EXPECT(gbc.pc(), 0x2cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0269
        gbc.setState(0xc05f, 0x1485, 0xd930, 0x2dd, 0x3796, 0x870f, 0x0, 0x0);
        gbc.writeMem(0xc05f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1485);
        EXPECT(gbc.pc(), 0xc060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05f), 0x29);
        // 29 026A
        gbc.setState(0x39c2, 0xe5b3, 0x1b00, 0xaa8d, 0xa9b5, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe5b3);
        EXPECT(gbc.pc(), 0x39c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 026B
        gbc.setState(0x3f11, 0xcfda, 0xf100, 0x456c, 0x65be, 0xf8bd, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcfda);
        EXPECT(gbc.pc(), 0x3f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 026C
        gbc.setState(0x80b8, 0x5ca8, 0x92d0, 0xc2cb, 0xe353, 0xc56c, 0x0, 0x1);
        gbc.writeMem(0x80b8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5ca8);
        EXPECT(gbc.pc(), 0x80b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b8), 0x29);
        // 29 026D
        gbc.setState(0x78f6, 0x81b3, 0x540, 0xbc80, 0xcf12, 0xf130, 0x1, 0x0);
        gbc.writeMem(0x78f6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x81b3);
        EXPECT(gbc.pc(), 0x78f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 026E
        gbc.setState(0x3ed8, 0x62ea, 0xab30, 0x2ac4, 0x60e5, 0x6e2c, 0x0, 0x0);
        gbc.writeMem(0x3ed8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x62ea);
        EXPECT(gbc.pc(), 0x3ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 026F
        gbc.setState(0xc0b1, 0x5d7f, 0x4af0, 0xbf19, 0x98a2, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0xc0b1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5d7f);
        EXPECT(gbc.pc(), 0xc0b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b1), 0x29);
        // 29 0270
        gbc.setState(0xd69e, 0xa293, 0xd5d0, 0xa86b, 0x57e8, 0x8e55, 0x0, 0x1);
        gbc.writeMem(0xd69e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa293);
        EXPECT(gbc.pc(), 0xd69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69e), 0x29);
        // 29 0271
        gbc.setState(0xb3b5, 0xbdd9, 0x6ed0, 0x1d2d, 0x1de8, 0x863a, 0x1, 0x0);
        gbc.writeMem(0xb3b5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbdd9);
        EXPECT(gbc.pc(), 0xb3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b5), 0x29);
        // 29 0272
        gbc.setState(0xbef2, 0x7bbc, 0x9410, 0x532, 0x8079, 0x7ac7, 0x1, 0x1);
        gbc.writeMem(0xbef2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7bbc);
        EXPECT(gbc.pc(), 0xbef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef2), 0x29);
        // 29 0273
        gbc.setState(0x8ce6, 0x9105, 0xe6a0, 0x9969, 0x3949, 0x1def, 0x1, 0x0);
        gbc.writeMem(0x8ce6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9105);
        EXPECT(gbc.pc(), 0x8ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce6), 0x29);
        // 29 0274
        gbc.setState(0x7c1c, 0x56c9, 0x49d0, 0xcfe3, 0x639f, 0x5134, 0x1, 0x0);
        gbc.writeMem(0x7c1c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x56c9);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0275
        gbc.setState(0xea1a, 0xbc2c, 0xcb50, 0xbc24, 0x7d9a, 0xbd4b, 0x0, 0x0);
        gbc.writeMem(0xea1a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbc2c);
        EXPECT(gbc.pc(), 0xea1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1a), 0x29);
        // 29 0276
        gbc.setState(0x4e22, 0xc6f7, 0xb0c0, 0x2b6d, 0x389b, 0xff44, 0x0, 0x1);
        gbc.writeMem(0x4e22, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0x4e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0277
        gbc.setState(0x3a3d, 0x8db7, 0x48c0, 0x7cac, 0x8c05, 0x35c1, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8db7);
        EXPECT(gbc.pc(), 0x3a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0278
        gbc.setState(0xde7d, 0x2866, 0x3db0, 0x4, 0x95bf, 0x4332, 0x1, 0x0);
        gbc.writeMem(0xde7d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2866);
        EXPECT(gbc.pc(), 0xde7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7d), 0x29);
        // 29 0279
        gbc.setState(0x263, 0xf0f7, 0x540, 0x4a99, 0x72b5, 0x72e2, 0x1, 0x1);
        gbc.writeMem(0x263, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf0f7);
        EXPECT(gbc.pc(), 0x264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 027A
        gbc.setState(0xb076, 0x98cb, 0xe340, 0xbe77, 0x36d6, 0x4663, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x98cb);
        EXPECT(gbc.pc(), 0xb077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb076), 0x29);
        // 29 027B
        gbc.setState(0xad27, 0xc7d7, 0x75c0, 0x50f1, 0x9581, 0xb3b5, 0x1, 0x0);
        gbc.writeMem(0xad27, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0xad28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad27), 0x29);
        // 29 027C
        gbc.setState(0x5474, 0xb7e3, 0x1160, 0xbff9, 0xa90c, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb7e3);
        EXPECT(gbc.pc(), 0x5475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 027D
        gbc.setState(0x95d6, 0x19b, 0xf590, 0x691d, 0x240c, 0xfc30, 0x0, 0x1);
        gbc.writeMem(0x95d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x19b);
        EXPECT(gbc.pc(), 0x95d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d6), 0x29);
        // 29 027E
        gbc.setState(0x7cb4, 0xbab4, 0x5f20, 0xdf72, 0xa8a2, 0x5bf4, 0x0, 0x1);
        gbc.writeMem(0x7cb4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbab4);
        EXPECT(gbc.pc(), 0x7cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 027F
        gbc.setState(0x8266, 0x7f36, 0xd0d0, 0x7f77, 0x8614, 0x5904, 0x1, 0x0);
        gbc.writeMem(0x8266, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7f36);
        EXPECT(gbc.pc(), 0x8267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8266), 0x29);
        // 29 0280
        gbc.setState(0x9f1c, 0xb435, 0xa1f0, 0xc4b2, 0xe61d, 0xa70f, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb435);
        EXPECT(gbc.pc(), 0x9f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1c), 0x29);
        // 29 0281
        gbc.setState(0xdf0c, 0xf27f, 0xf3e0, 0x4929, 0x4c5f, 0x30ce, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf27f);
        EXPECT(gbc.pc(), 0xdf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0c), 0x29);
        // 29 0282
        gbc.setState(0xd512, 0xf44e, 0x1cb0, 0x4d83, 0x182b, 0x3002, 0x0, 0x0);
        gbc.writeMem(0xd512, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf44e);
        EXPECT(gbc.pc(), 0xd513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd512), 0x29);
        // 29 0283
        gbc.setState(0x9f74, 0x5906, 0x97b0, 0xd6d0, 0x641a, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0x9f74, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5906);
        EXPECT(gbc.pc(), 0x9f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f74), 0x29);
        // 29 0284
        gbc.setState(0x1c1a, 0x389c, 0x7840, 0x70ef, 0x1433, 0xe46b, 0x0, 0x1);
        gbc.writeMem(0x1c1a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0x1c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0285
        gbc.setState(0xd46d, 0x24d9, 0xe4d0, 0xdd7e, 0x2dcb, 0x871b, 0x0, 0x1);
        gbc.writeMem(0xd46d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x24d9);
        EXPECT(gbc.pc(), 0xd46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46d), 0x29);
        // 29 0286
        gbc.setState(0xc792, 0xc15, 0xde50, 0xdfb5, 0x5f32, 0x4d4a, 0x1, 0x0);
        gbc.writeMem(0xc792, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc15);
        EXPECT(gbc.pc(), 0xc793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc792), 0x29);
        // 29 0287
        gbc.setState(0x46c8, 0x265e, 0x2da0, 0xe630, 0x440c, 0x150f, 0x1, 0x1);
        gbc.writeMem(0x46c8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x265e);
        EXPECT(gbc.pc(), 0x46c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0289
        gbc.setState(0x8d8a, 0xedba, 0xa070, 0x12b2, 0xde56, 0x6619, 0x1, 0x0);
        gbc.writeMem(0x8d8a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0x8d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8a), 0x29);
        // 29 028A
        gbc.setState(0xb8f4, 0xb048, 0xbdf0, 0xa6b4, 0x4f9a, 0x786d, 0x1, 0x1);
        gbc.writeMem(0xb8f4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb048);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f4), 0x29);
        // 29 028B
        gbc.setState(0x887d, 0x7bec, 0xfc0, 0x6e6f, 0x46dd, 0xdec, 0x1, 0x1);
        gbc.writeMem(0x887d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7bec);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887d), 0x29);
        // 29 028C
        gbc.setState(0xc1c4, 0x8c8c, 0x3670, 0x496c, 0x3950, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0xc1c4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8c8c);
        EXPECT(gbc.pc(), 0xc1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c4), 0x29);
        // 29 028D
        gbc.setState(0xe8e9, 0xdd24, 0x1640, 0x29f8, 0x906c, 0x6224, 0x0, 0x0);
        gbc.writeMem(0xe8e9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdd24);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e9), 0x29);
        // 29 028E
        gbc.setState(0xd6e8, 0xbc49, 0xb0c0, 0x5fd3, 0xa946, 0x8341, 0x1, 0x0);
        gbc.writeMem(0xd6e8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbc49);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e8), 0x29);
        // 29 028F
        gbc.setState(0xec2f, 0xe3aa, 0x40e0, 0xe73a, 0xfbe0, 0xf35f, 0x1, 0x0);
        gbc.writeMem(0xec2f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe3aa);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2f), 0x29);
        // 29 0290
        gbc.setState(0x62f9, 0x24d3, 0xd2d0, 0x9635, 0xece8, 0xf2f1, 0x0, 0x1);
        gbc.writeMem(0x62f9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x24d3);
        EXPECT(gbc.pc(), 0x62fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0291
        gbc.setState(0x9fd2, 0x1fe9, 0x9980, 0x2d71, 0x2e94, 0x59d0, 0x0, 0x0);
        gbc.writeMem(0x9fd2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1fe9);
        EXPECT(gbc.pc(), 0x9fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd2), 0x29);
        // 29 0292
        gbc.setState(0xa1b1, 0x8f7e, 0x9fa0, 0xe486, 0x58a4, 0xcb07, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0xa1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b1), 0x29);
        // 29 0293
        gbc.setState(0x204, 0xc31c, 0x6f30, 0xcdb5, 0xf4f3, 0x3abe, 0x1, 0x0);
        gbc.writeMem(0x204, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc31c);
        EXPECT(gbc.pc(), 0x205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0294
        gbc.setState(0x8e2a, 0x32ce, 0xa600, 0x9bd1, 0xa1be, 0x5ae0, 0x0, 0x1);
        gbc.writeMem(0x8e2a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x32ce);
        EXPECT(gbc.pc(), 0x8e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2a), 0x29);
        // 29 0295
        gbc.setState(0x74ef, 0x4ad7, 0xe630, 0xf028, 0xcded, 0x5946, 0x0, 0x0);
        gbc.writeMem(0x74ef, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4ad7);
        EXPECT(gbc.pc(), 0x74f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0296
        gbc.setState(0x674c, 0xc509, 0xdc00, 0xf2c9, 0x3e82, 0xbde2, 0x0, 0x0);
        gbc.writeMem(0x674c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc509);
        EXPECT(gbc.pc(), 0x674d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0297
        gbc.setState(0x3a89, 0x26a4, 0xc8b0, 0x808d, 0xf77a, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0x3a89, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x26a4);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0298
        gbc.setState(0x8d6c, 0x3a5b, 0x5cf0, 0x9a2a, 0x1358, 0x5a97, 0x0, 0x0);
        gbc.writeMem(0x8d6c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0x8d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6c), 0x29);
        // 29 0299
        gbc.setState(0x96e8, 0x716c, 0x13f0, 0x3de0, 0xf144, 0xfdff, 0x1, 0x1);
        gbc.writeMem(0x96e8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x716c);
        EXPECT(gbc.pc(), 0x96e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e8), 0x29);
        // 29 029A
        gbc.setState(0x3b0b, 0x357, 0x1330, 0xf724, 0x29e0, 0x571f, 0x1, 0x0);
        gbc.writeMem(0x3b0b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x357);
        EXPECT(gbc.pc(), 0x3b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 029B
        gbc.setState(0x78b7, 0xbb17, 0x8870, 0x3cc8, 0x6789, 0x8bdc, 0x0, 0x0);
        gbc.writeMem(0x78b7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbb17);
        EXPECT(gbc.pc(), 0x78b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 029C
        gbc.setState(0x4714, 0x8b25, 0xf3e0, 0xe628, 0x52c5, 0x3015, 0x0, 0x0);
        gbc.writeMem(0x4714, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8b25);
        EXPECT(gbc.pc(), 0x4715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 029D
        gbc.setState(0x37cd, 0xadfb, 0x9400, 0x6858, 0xb092, 0xb098, 0x1, 0x0);
        gbc.writeMem(0x37cd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xadfb);
        EXPECT(gbc.pc(), 0x37ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 029E
        gbc.setState(0x31f1, 0x61d, 0xae0, 0xb1ca, 0xaddc, 0xd40b, 0x1, 0x1);
        gbc.writeMem(0x31f1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x61d);
        EXPECT(gbc.pc(), 0x31f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 029F
        gbc.setState(0xcdfb, 0x1497, 0x4e60, 0xc429, 0x6d61, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0xcdfb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1497);
        EXPECT(gbc.pc(), 0xcdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdfb), 0x29);
        // 29 02A0
        gbc.setState(0x3d19, 0xc800, 0x4420, 0xc817, 0xb749, 0x3f0d, 0x1, 0x1);
        gbc.writeMem(0x3d19, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc800);
        EXPECT(gbc.pc(), 0x3d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02A1
        gbc.setState(0x4774, 0x208a, 0x2430, 0xf627, 0xbe5b, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x4774, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x208a);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02A2
        gbc.setState(0x8b02, 0xbb10, 0xce90, 0xcd89, 0x246a, 0xb95e, 0x0, 0x0);
        gbc.writeMem(0x8b02, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbb10);
        EXPECT(gbc.pc(), 0x8b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b02), 0x29);
        // 29 02A3
        gbc.setState(0x85c9, 0x29bb, 0x3b50, 0x24cc, 0xcb85, 0xa5e0, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x29bb);
        EXPECT(gbc.pc(), 0x85ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c9), 0x29);
        // 29 02A4
        gbc.setState(0xc128, 0x1caf, 0x500, 0xc8c2, 0xc9c7, 0x5315, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1caf);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc128), 0x29);
        // 29 02A6
        gbc.setState(0xbcea, 0x7894, 0x9e0, 0x95cf, 0x203d, 0x9aa1, 0x1, 0x1);
        gbc.writeMem(0xbcea, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7894);
        EXPECT(gbc.pc(), 0xbceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcea), 0x29);
        // 29 02A7
        gbc.setState(0xb909, 0x2c30, 0x7640, 0x6d81, 0x88dd, 0xf566, 0x0, 0x0);
        gbc.writeMem(0xb909, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2c30);
        EXPECT(gbc.pc(), 0xb90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb909), 0x29);
        // 29 02A8
        gbc.setState(0xc17e, 0x2603, 0xfe80, 0x92d, 0x98d4, 0xe2fc, 0x0, 0x0);
        gbc.writeMem(0xc17e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2603);
        EXPECT(gbc.pc(), 0xc17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17e), 0x29);
        // 29 02A9
        gbc.setState(0x4cbd, 0xb2bd, 0xb630, 0x9c33, 0x41d0, 0xf4b7, 0x0, 0x0);
        gbc.writeMem(0x4cbd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb2bd);
        EXPECT(gbc.pc(), 0x4cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02AA
        gbc.setState(0x5344, 0x69cf, 0x56d0, 0x959, 0xfc36, 0x30b1, 0x0, 0x1);
        gbc.writeMem(0x5344, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x69cf);
        EXPECT(gbc.pc(), 0x5345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02AB
        gbc.setState(0xde45, 0x2774, 0x2c0, 0x9060, 0xa436, 0x4498, 0x0, 0x1);
        gbc.writeMem(0xde45, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2774);
        EXPECT(gbc.pc(), 0xde46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde45), 0x29);
        // 29 02AC
        gbc.setState(0x1e42, 0x5d13, 0x4870, 0xf04a, 0x1ccf, 0xf146, 0x1, 0x0);
        gbc.writeMem(0x1e42, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5d13);
        EXPECT(gbc.pc(), 0x1e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02AD
        gbc.setState(0xb7dc, 0xc6b1, 0xfd40, 0xbf77, 0xab82, 0xdcd, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc6b1);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0x29);
        // 29 02AE
        gbc.setState(0x8507, 0x4234, 0xa880, 0xa0ff, 0x4b3c, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4234);
        EXPECT(gbc.pc(), 0x8508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8507), 0x29);
        // 29 02AF
        gbc.setState(0x5543, 0xf183, 0xe580, 0xb58a, 0xcc0d, 0xda95, 0x1, 0x1);
        gbc.writeMem(0x5543, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf183);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02B0
        gbc.setState(0x2d5, 0xdecf, 0x1ff0, 0x7904, 0xa429, 0xb53a, 0x1, 0x0);
        gbc.writeMem(0x2d5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdecf);
        EXPECT(gbc.pc(), 0x2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02B1
        gbc.setState(0x323e, 0x94c8, 0x1f40, 0x9a5c, 0x9b2c, 0xa283, 0x1, 0x1);
        gbc.writeMem(0x323e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x94c8);
        EXPECT(gbc.pc(), 0x323f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02B2
        gbc.setState(0xc0cf, 0x411c, 0xed70, 0x1b67, 0x1788, 0xf388, 0x1, 0x1);
        gbc.writeMem(0xc0cf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x411c);
        EXPECT(gbc.pc(), 0xc0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0cf), 0x29);
        // 29 02B3
        gbc.setState(0x2f6f, 0x56c6, 0x6110, 0xa55b, 0xeff1, 0x8d9, 0x1, 0x0);
        gbc.writeMem(0x2f6f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x56c6);
        EXPECT(gbc.pc(), 0x2f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02B4
        gbc.setState(0x252, 0x5308, 0xb450, 0xb12b, 0x739e, 0xd6ac, 0x1, 0x0);
        gbc.writeMem(0x252, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5308);
        EXPECT(gbc.pc(), 0x253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02B5
        gbc.setState(0x8dd4, 0x31e1, 0xa1f0, 0xb2d6, 0x18cb, 0x8f5e, 0x0, 0x1);
        gbc.writeMem(0x8dd4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x31e1);
        EXPECT(gbc.pc(), 0x8dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd4), 0x29);
        // 29 02B6
        gbc.setState(0xbd7f, 0x4734, 0x9d10, 0x4ede, 0x5ddd, 0x371f, 0x1, 0x0);
        gbc.writeMem(0xbd7f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4734);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0x29);
        // 29 02B7
        gbc.setState(0xb9b2, 0x3ad3, 0xdc10, 0xde03, 0xdc12, 0xf23a, 0x0, 0x1);
        gbc.writeMem(0xb9b2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3ad3);
        EXPECT(gbc.pc(), 0xb9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b2), 0x29);
        // 29 02B8
        gbc.setState(0x13fd, 0xba6f, 0x54a0, 0x470e, 0x9adb, 0xf9cd, 0x0, 0x1);
        gbc.writeMem(0x13fd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xba6f);
        EXPECT(gbc.pc(), 0x13fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02B9
        gbc.setState(0x7342, 0xead2, 0xd1b0, 0xdf5, 0x8ad, 0xc62, 0x0, 0x0);
        gbc.writeMem(0x7342, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xead2);
        EXPECT(gbc.pc(), 0x7343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02BA
        gbc.setState(0xa85d, 0x20f1, 0x7310, 0xc93d, 0x8f82, 0xd144, 0x0, 0x1);
        gbc.writeMem(0xa85d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x20f1);
        EXPECT(gbc.pc(), 0xa85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85d), 0x29);
        // 29 02BB
        gbc.setState(0xb282, 0xb668, 0x42a0, 0x5f24, 0x1ba0, 0x33e0, 0x1, 0x0);
        gbc.writeMem(0xb282, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb668);
        EXPECT(gbc.pc(), 0xb283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb282), 0x29);
        // 29 02BC
        gbc.setState(0xa581, 0x326e, 0xbf90, 0xcea7, 0x8a38, 0xf8ba, 0x0, 0x0);
        gbc.writeMem(0xa581, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x326e);
        EXPECT(gbc.pc(), 0xa582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa581), 0x29);
        // 29 02BD
        gbc.setState(0x666d, 0x7060, 0x5fd0, 0xbd95, 0x8162, 0x8aba, 0x1, 0x0);
        gbc.writeMem(0x666d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7060);
        EXPECT(gbc.pc(), 0x666e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02BE
        gbc.setState(0x7b3f, 0xf77e, 0xc490, 0x14c8, 0x8789, 0x270f, 0x1, 0x1);
        gbc.writeMem(0x7b3f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf77e);
        EXPECT(gbc.pc(), 0x7b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02BF
        gbc.setState(0xad3a, 0x180d, 0xaa90, 0x497c, 0x747b, 0xaf7, 0x1, 0x0);
        gbc.writeMem(0xad3a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x180d);
        EXPECT(gbc.pc(), 0xad3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3a), 0x29);
        // 29 02C1
        gbc.setState(0x9313, 0x1021, 0x93b0, 0xa5b5, 0xdead, 0x90a6, 0x0, 0x0);
        gbc.writeMem(0x9313, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1021);
        EXPECT(gbc.pc(), 0x9314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9313), 0x29);
        // 29 02C2
        gbc.setState(0xc659, 0xba0e, 0x1bc0, 0xeae3, 0x674d, 0x2f8b, 0x1, 0x0);
        gbc.writeMem(0xc659, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xba0e);
        EXPECT(gbc.pc(), 0xc65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc659), 0x29);
        // 29 02C4
        gbc.setState(0x77df, 0x1921, 0x1040, 0x8965, 0x2276, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1921);
        EXPECT(gbc.pc(), 0x77e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02C5
        gbc.setState(0x2436, 0x92c0, 0x5b70, 0x536f, 0xe463, 0x37e1, 0x1, 0x1);
        gbc.writeMem(0x2436, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x92c0);
        EXPECT(gbc.pc(), 0x2437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02C6
        gbc.setState(0xb73b, 0xf1e9, 0xb2a0, 0x5698, 0x221f, 0x9ac0, 0x1, 0x0);
        gbc.writeMem(0xb73b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73b), 0x29);
        // 29 02C7
        gbc.setState(0x3591, 0x366a, 0x6350, 0x2ce0, 0xb352, 0x88d5, 0x1, 0x0);
        gbc.writeMem(0x3591, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x366a);
        EXPECT(gbc.pc(), 0x3592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02C8
        gbc.setState(0xc14d, 0x9766, 0x63f0, 0x8734, 0xd2d4, 0x2209, 0x0, 0x1);
        gbc.writeMem(0xc14d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9766);
        EXPECT(gbc.pc(), 0xc14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14d), 0x29);
        // 29 02C9
        gbc.setState(0x4c94, 0xfa43, 0x65c0, 0xc158, 0x7784, 0xa683, 0x0, 0x1);
        gbc.writeMem(0x4c94, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfa43);
        EXPECT(gbc.pc(), 0x4c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02CA
        gbc.setState(0x768a, 0x9c3e, 0x2770, 0xc701, 0x8a4, 0x5d66, 0x1, 0x0);
        gbc.writeMem(0x768a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9c3e);
        EXPECT(gbc.pc(), 0x768b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02CB
        gbc.setState(0xd61b, 0x3f5, 0xac90, 0x26, 0x7562, 0x295b, 0x0, 0x0);
        gbc.writeMem(0xd61b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3f5);
        EXPECT(gbc.pc(), 0xd61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61b), 0x29);
        // 29 02CC
        gbc.setState(0x7f0a, 0x639f, 0xe6d0, 0x1a08, 0xcae4, 0x1264, 0x0, 0x1);
        gbc.writeMem(0x7f0a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x639f);
        EXPECT(gbc.pc(), 0x7f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02CD
        gbc.setState(0xa3ec, 0x547f, 0xfc60, 0xe046, 0xe2d9, 0xa87f, 0x0, 0x1);
        gbc.writeMem(0xa3ec, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x547f);
        EXPECT(gbc.pc(), 0xa3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ec), 0x29);
        // 29 02CE
        gbc.setState(0xa160, 0x453, 0x690, 0x4e7a, 0xf2af, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0xa160, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x453);
        EXPECT(gbc.pc(), 0xa161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa160), 0x29);
        // 29 02CF
        gbc.setState(0x4ef6, 0x1886, 0x2640, 0x8291, 0xe59e, 0x4116, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1886);
        EXPECT(gbc.pc(), 0x4ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02D0
        gbc.setState(0x75ca, 0xd35b, 0xea40, 0xcaae, 0x7a54, 0x44b2, 0x0, 0x1);
        gbc.writeMem(0x75ca, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd35b);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02D1
        gbc.setState(0x10ce, 0xcf12, 0x7860, 0x487c, 0x91c6, 0xd201, 0x0, 0x1);
        gbc.writeMem(0x10ce, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0x10cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02D2
        gbc.setState(0xda2d, 0xd854, 0x30a0, 0xbd06, 0x1888, 0x4cc0, 0x0, 0x1);
        gbc.writeMem(0xda2d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd854);
        EXPECT(gbc.pc(), 0xda2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2d), 0x29);
        // 29 02D3
        gbc.setState(0x587d, 0x1397, 0x3a50, 0xa9f9, 0xd801, 0x4277, 0x1, 0x0);
        gbc.writeMem(0x587d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1397);
        EXPECT(gbc.pc(), 0x587e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02D4
        gbc.setState(0xed0d, 0x33cf, 0x6c00, 0x8245, 0x558e, 0x6741, 0x1, 0x1);
        gbc.writeMem(0xed0d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0xed0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0d), 0x29);
        // 29 02D5
        gbc.setState(0x66fa, 0xa8b5, 0x6360, 0xb3e8, 0xd745, 0xc568, 0x1, 0x0);
        gbc.writeMem(0x66fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa8b5);
        EXPECT(gbc.pc(), 0x66fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02D6
        gbc.setState(0x7474, 0x6a88, 0xc770, 0x3e8, 0x19d4, 0xc738, 0x0, 0x1);
        gbc.writeMem(0x7474, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02D7
        gbc.setState(0xe278, 0xcf85, 0xd190, 0x45ca, 0x60c5, 0xee12, 0x0, 0x1);
        gbc.writeMem(0xe278, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcf85);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe278), 0x29);
        // 29 02D8
        gbc.setState(0x39a, 0x3e4d, 0xb220, 0xb96a, 0x7adc, 0xe7c9, 0x0, 0x0);
        gbc.writeMem(0x39a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3e4d);
        EXPECT(gbc.pc(), 0x39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02D9
        gbc.setState(0x4eb6, 0x6bac, 0x7bd0, 0x676a, 0x1938, 0xe89, 0x1, 0x0);
        gbc.writeMem(0x4eb6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6bac);
        EXPECT(gbc.pc(), 0x4eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02DA
        gbc.setState(0x2b1d, 0xf7d6, 0x9f00, 0xd90d, 0x4983, 0x7bfd, 0x0, 0x0);
        gbc.writeMem(0x2b1d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf7d6);
        EXPECT(gbc.pc(), 0x2b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02DB
        gbc.setState(0xab0c, 0x3fea, 0xd6c0, 0xf6, 0xe1ea, 0x152f, 0x0, 0x1);
        gbc.writeMem(0xab0c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3fea);
        EXPECT(gbc.pc(), 0xab0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0c), 0x29);
        // 29 02DD
        gbc.setState(0xd2cb, 0x694, 0xb60, 0xc398, 0x43b1, 0xa45d, 0x1, 0x1);
        gbc.writeMem(0xd2cb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cb), 0x29);
        // 29 02DE
        gbc.setState(0x2bb0, 0xb8af, 0x5b00, 0x8f09, 0x77f5, 0xd350, 0x1, 0x1);
        gbc.writeMem(0x2bb0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb8af);
        EXPECT(gbc.pc(), 0x2bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02DF
        gbc.setState(0x8b14, 0xeb46, 0xb260, 0x52e9, 0xb34d, 0xa688, 0x0, 0x1);
        gbc.writeMem(0x8b14, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xeb46);
        EXPECT(gbc.pc(), 0x8b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b14), 0x29);
        // 29 02E0
        gbc.setState(0xd049, 0xc0e1, 0x5ec0, 0xb865, 0x6a13, 0x7534, 0x1, 0x0);
        gbc.writeMem(0xd049, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc0e1);
        EXPECT(gbc.pc(), 0xd04a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd049), 0x29);
        // 29 02E1
        gbc.setState(0x5f79, 0x6a45, 0x2950, 0xd673, 0xde5f, 0x71ed, 0x0, 0x1);
        gbc.writeMem(0x5f79, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6a45);
        EXPECT(gbc.pc(), 0x5f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02E2
        gbc.setState(0x3f86, 0x2511, 0x5020, 0xaadb, 0x9d34, 0xbacd, 0x1, 0x1);
        gbc.writeMem(0x3f86, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2511);
        EXPECT(gbc.pc(), 0x3f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02E3
        gbc.setState(0x8a93, 0xb974, 0xd490, 0xfd1a, 0x428e, 0x5f15, 0x1, 0x0);
        gbc.writeMem(0x8a93, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb974);
        EXPECT(gbc.pc(), 0x8a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a93), 0x29);
        // 29 02E4
        gbc.setState(0xdd6f, 0x951, 0x2e0, 0xc35, 0x6265, 0x4003, 0x1, 0x0);
        gbc.writeMem(0xdd6f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x951);
        EXPECT(gbc.pc(), 0xdd70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6f), 0x29);
        // 29 02E5
        gbc.setState(0xa218, 0x72fe, 0x4220, 0xa180, 0x20af, 0x6fa0, 0x1, 0x1);
        gbc.writeMem(0xa218, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x72fe);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa218), 0x29);
        // 29 02E6
        gbc.setState(0x38dd, 0xe9b9, 0x8500, 0x28f1, 0xe901, 0x3cca, 0x0, 0x0);
        gbc.writeMem(0x38dd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe9b9);
        EXPECT(gbc.pc(), 0x38de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02E7
        gbc.setState(0x898b, 0xc453, 0x5fa0, 0xee1a, 0x2189, 0x2a16, 0x0, 0x1);
        gbc.writeMem(0x898b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc453);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898b), 0x29);
        // 29 02E8
        gbc.setState(0xb6a9, 0x7187, 0xd570, 0x13e6, 0xc49f, 0x5e1, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7187);
        EXPECT(gbc.pc(), 0xb6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a9), 0x29);
        // 29 02E9
        gbc.setState(0x8c4a, 0x32ee, 0xe020, 0xb91, 0x98c5, 0x7cd8, 0x1, 0x1);
        gbc.writeMem(0x8c4a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x32ee);
        EXPECT(gbc.pc(), 0x8c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4a), 0x29);
        // 29 02EA
        gbc.setState(0x27c, 0x79f4, 0x3430, 0xf946, 0xc4e0, 0xb22a, 0x1, 0x1);
        gbc.writeMem(0x27c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x27d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 02EB
        gbc.setState(0xdf70, 0x88d4, 0xab30, 0xbbe7, 0x22c6, 0x1c2a, 0x1, 0x1);
        gbc.writeMem(0xdf70, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x88d4);
        EXPECT(gbc.pc(), 0xdf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf70), 0x29);
        // 29 02EC
        gbc.setState(0xa02b, 0x3777, 0xa080, 0xddc8, 0xd46f, 0x3b79, 0x0, 0x0);
        gbc.writeMem(0xa02b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3777);
        EXPECT(gbc.pc(), 0xa02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02b), 0x29);
        // 29 02ED
        gbc.setState(0xb7f9, 0x5600, 0xa7f0, 0xfe86, 0x84d4, 0x3c9b, 0x0, 0x0);
        gbc.writeMem(0xb7f9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5600);
        EXPECT(gbc.pc(), 0xb7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f9), 0x29);
        // 29 02EE
        gbc.setState(0x8e16, 0xf83f, 0x1a10, 0x181b, 0xaedd, 0xa485, 0x0, 0x1);
        gbc.writeMem(0x8e16, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf83f);
        EXPECT(gbc.pc(), 0x8e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e16), 0x29);
        // 29 02EF
        gbc.setState(0xb0b1, 0xa688, 0x8650, 0x3461, 0x3df0, 0xb1f3, 0x0, 0x0);
        gbc.writeMem(0xb0b1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa688);
        EXPECT(gbc.pc(), 0xb0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b1), 0x29);
        // 29 02F0
        gbc.setState(0x1bae, 0x3245, 0xda90, 0x927a, 0x9eb3, 0x993a, 0x0, 0x0);
        gbc.writeMem(0x1bae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0x1baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02F1
        gbc.setState(0x139d, 0x9493, 0xf820, 0x5708, 0x282e, 0xe98d, 0x1, 0x1);
        gbc.writeMem(0x139d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9493);
        EXPECT(gbc.pc(), 0x139e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02F2
        gbc.setState(0x14ef, 0x649e, 0x9820, 0xc07f, 0xb69c, 0x792c, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x649e);
        EXPECT(gbc.pc(), 0x14f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02F3
        gbc.setState(0x5eda, 0x9ed0, 0x2d20, 0xcd4a, 0x5b1d, 0x7a33, 0x1, 0x1);
        gbc.writeMem(0x5eda, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9ed0);
        EXPECT(gbc.pc(), 0x5edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 02F4
        gbc.setState(0x9c08, 0xeae7, 0x7df0, 0x3ef7, 0xc7cb, 0x474d, 0x1, 0x1);
        gbc.writeMem(0x9c08, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xeae7);
        EXPECT(gbc.pc(), 0x9c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c08), 0x29);
        // 29 02F5
        gbc.setState(0xbe97, 0xe8b6, 0x5950, 0x6298, 0xa3d3, 0xf8b4, 0x1, 0x1);
        gbc.writeMem(0xbe97, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe8b6);
        EXPECT(gbc.pc(), 0xbe98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe97), 0x29);
        // 29 02F6
        gbc.setState(0x5618, 0xbc1f, 0xe010, 0x84a1, 0x99f9, 0x554e, 0x1, 0x0);
        gbc.writeMem(0x5618, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0x5619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 02F7
        gbc.setState(0x8b0, 0x5325, 0x5ec0, 0x2f73, 0x6a49, 0xbaf6, 0x0, 0x1);
        gbc.writeMem(0x8b0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5325);
        EXPECT(gbc.pc(), 0x8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02F8
        gbc.setState(0x8f29, 0x86db, 0x59e0, 0xde58, 0xcacd, 0xcd29, 0x0, 0x0);
        gbc.writeMem(0x8f29, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x86db);
        EXPECT(gbc.pc(), 0x8f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f29), 0x29);
        // 29 02F9
        gbc.setState(0x70b5, 0xeb73, 0x8840, 0xa59f, 0x3c0e, 0xed18, 0x1, 0x0);
        gbc.writeMem(0x70b5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xeb73);
        EXPECT(gbc.pc(), 0x70b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02FA
        gbc.setState(0xb5f9, 0x6bc9, 0xb410, 0xff3d, 0xe565, 0xf146, 0x1, 0x0);
        gbc.writeMem(0xb5f9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6bc9);
        EXPECT(gbc.pc(), 0xb5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f9), 0x29);
        // 29 02FB
        gbc.setState(0xb45b, 0xbe34, 0x4920, 0xf248, 0x911e, 0x84b8, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbe34);
        EXPECT(gbc.pc(), 0xb45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45b), 0x29);
        // 29 02FC
        gbc.setState(0xa567, 0x4646, 0xd5f0, 0x1afc, 0x5d44, 0x7206, 0x0, 0x1);
        gbc.writeMem(0xa567, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0xa568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa567), 0x29);
        // 29 02FD
        gbc.setState(0xc205, 0xd124, 0x8b10, 0xc944, 0xffe0, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd124);
        EXPECT(gbc.pc(), 0xc206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc205), 0x29);
        // 29 02FE
        gbc.setState(0x31, 0xe66d, 0x93d0, 0x6eb5, 0x1cd2, 0xfc6d, 0x0, 0x0);
        gbc.writeMem(0x31, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe66d);
        EXPECT(gbc.pc(), 0x32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 02FF
        gbc.setState(0x3ee1, 0x4d90, 0xe430, 0x5c6f, 0x3eac, 0xcf7c, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4d90);
        EXPECT(gbc.pc(), 0x3ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0300
        gbc.setState(0xe60d, 0xc675, 0xace0, 0xf17e, 0xd45b, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0xe60d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc675);
        EXPECT(gbc.pc(), 0xe60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60d), 0x29);
        // 29 0301
        gbc.setState(0x63c7, 0x2ec6, 0x13c0, 0x4fca, 0x134f, 0xefb1, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2ec6);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0302
        gbc.setState(0xc28f, 0x2f24, 0x88a0, 0xf4cf, 0xe7eb, 0x7977, 0x0, 0x1);
        gbc.writeMem(0xc28f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2f24);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28f), 0x29);
        // 29 0303
        gbc.setState(0xb857, 0xdeff, 0x3630, 0xfeb, 0x78fb, 0x7e89, 0x1, 0x0);
        gbc.writeMem(0xb857, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdeff);
        EXPECT(gbc.pc(), 0xb858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb857), 0x29);
        // 29 0304
        gbc.setState(0xe1ba, 0xcde9, 0x5880, 0x14af, 0x4a9f, 0xd143, 0x1, 0x1);
        gbc.writeMem(0xe1ba, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcde9);
        EXPECT(gbc.pc(), 0xe1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0x29);
        // 29 0305
        gbc.setState(0x2524, 0xe2c0, 0xcb30, 0x550d, 0x94b3, 0xa9c0, 0x0, 0x1);
        gbc.writeMem(0x2524, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x2525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0306
        gbc.setState(0x7309, 0x5316, 0x1b0, 0xa700, 0xd7d0, 0xf267, 0x1, 0x1);
        gbc.writeMem(0x7309, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5316);
        EXPECT(gbc.pc(), 0x730a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0307
        gbc.setState(0x3d54, 0xa8d1, 0x45f0, 0xbac3, 0xb547, 0x7836, 0x1, 0x1);
        gbc.writeMem(0x3d54, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa8d1);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0308
        gbc.setState(0x311f, 0x8fd6, 0x7a30, 0x7fb1, 0xe476, 0x21dd, 0x1, 0x1);
        gbc.writeMem(0x311f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8fd6);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0309
        gbc.setState(0x8141, 0x3dc7, 0x9900, 0xcc0d, 0x1ad5, 0xba2, 0x1, 0x0);
        gbc.writeMem(0x8141, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3dc7);
        EXPECT(gbc.pc(), 0x8142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8141), 0x29);
        // 29 030A
        gbc.setState(0xa21a, 0x272c, 0xe390, 0xe0c1, 0xec55, 0xa79e, 0x0, 0x1);
        gbc.writeMem(0xa21a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x272c);
        EXPECT(gbc.pc(), 0xa21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21a), 0x29);
        // 29 030B
        gbc.setState(0xec01, 0xd1eb, 0xc110, 0x7e92, 0x74a4, 0x630e, 0x0, 0x0);
        gbc.writeMem(0xec01, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd1eb);
        EXPECT(gbc.pc(), 0xec02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec01), 0x29);
        // 29 030C
        gbc.setState(0xaab, 0x4b39, 0x1230, 0x6845, 0x3d5c, 0x1c1c, 0x1, 0x1);
        gbc.writeMem(0xaab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4b39);
        EXPECT(gbc.pc(), 0xaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 030D
        gbc.setState(0x265d, 0xea18, 0xc0f0, 0xd600, 0xc563, 0xdfba, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xea18);
        EXPECT(gbc.pc(), 0x265e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 030E
        gbc.setState(0x6e5, 0xd6b3, 0x8540, 0xf9e0, 0x2455, 0x5e73, 0x1, 0x1);
        gbc.writeMem(0x6e5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd6b3);
        EXPECT(gbc.pc(), 0x6e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0310
        gbc.setState(0x2025, 0x62bd, 0x4a00, 0x5fec, 0x8b69, 0xb5a5, 0x0, 0x0);
        gbc.writeMem(0x2025, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x62bd);
        EXPECT(gbc.pc(), 0x2026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0311
        gbc.setState(0xd7c1, 0x654f, 0x2b10, 0x51c6, 0x3327, 0x1193, 0x1, 0x0);
        gbc.writeMem(0xd7c1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x654f);
        EXPECT(gbc.pc(), 0xd7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c1), 0x29);
        // 29 0312
        gbc.setState(0x4255, 0x9ec7, 0xff40, 0x597d, 0xd369, 0x180, 0x0, 0x1);
        gbc.writeMem(0x4255, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9ec7);
        EXPECT(gbc.pc(), 0x4256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0313
        gbc.setState(0x7de1, 0x3e3e, 0xeef0, 0xc01c, 0xe288, 0xa, 0x1, 0x1);
        gbc.writeMem(0x7de1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3e3e);
        EXPECT(gbc.pc(), 0x7de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0314
        gbc.setState(0x2703, 0xe8cd, 0xfc60, 0xec73, 0xcee2, 0xae4c, 0x0, 0x0);
        gbc.writeMem(0x2703, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe8cd);
        EXPECT(gbc.pc(), 0x2704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0315
        gbc.setState(0x234c, 0xe653, 0x3b60, 0x46e4, 0x872f, 0xca2f, 0x0, 0x0);
        gbc.writeMem(0x234c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe653);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0316
        gbc.setState(0xc881, 0x3984, 0xbe00, 0xe908, 0x1cd, 0x9d09, 0x0, 0x0);
        gbc.writeMem(0xc881, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3984);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc881), 0x29);
        // 29 0317
        gbc.setState(0x13ec, 0x9b02, 0xe7b0, 0x439b, 0x3d10, 0x9b9, 0x0, 0x1);
        gbc.writeMem(0x13ec, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9b02);
        EXPECT(gbc.pc(), 0x13ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0318
        gbc.setState(0x4fc5, 0xbebc, 0x7080, 0x310a, 0x6a31, 0xaa5, 0x0, 0x1);
        gbc.writeMem(0x4fc5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbebc);
        EXPECT(gbc.pc(), 0x4fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0319
        gbc.setState(0x1a35, 0x6674, 0xeda0, 0xe88c, 0x67c3, 0x19cd, 0x0, 0x1);
        gbc.writeMem(0x1a35, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 031A
        gbc.setState(0x9a33, 0xe2e5, 0x2830, 0xe3c5, 0x5f7, 0x329f, 0x0, 0x0);
        gbc.writeMem(0x9a33, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0x9a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a33), 0x29);
        // 29 031B
        gbc.setState(0x60ac, 0x5c33, 0xf590, 0x9228, 0x339, 0x5ad6, 0x1, 0x0);
        gbc.writeMem(0x60ac, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0x60ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 031C
        gbc.setState(0xf26, 0xe109, 0xb240, 0xa382, 0xd697, 0x1386, 0x1, 0x1);
        gbc.writeMem(0xf26, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0xf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 031D
        gbc.setState(0x1f9c, 0xfc2, 0x31a0, 0x4b78, 0x1838, 0xf077, 0x1, 0x1);
        gbc.writeMem(0x1f9c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0x1f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 031E
        gbc.setState(0xb460, 0x4cfd, 0x2fb0, 0xd37, 0x1a5c, 0x7517, 0x0, 0x0);
        gbc.writeMem(0xb460, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4cfd);
        EXPECT(gbc.pc(), 0xb461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb460), 0x29);
        // 29 031F
        gbc.setState(0xa351, 0x1b52, 0x4970, 0xe7c6, 0x5165, 0x43c2, 0x0, 0x0);
        gbc.writeMem(0xa351, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1b52);
        EXPECT(gbc.pc(), 0xa352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa351), 0x29);
        // 29 0320
        gbc.setState(0x9e09, 0xbf2c, 0xff80, 0x390f, 0x92c4, 0x7bc7, 0x1, 0x1);
        gbc.writeMem(0x9e09, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbf2c);
        EXPECT(gbc.pc(), 0x9e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e09), 0x29);
        // 29 0321
        gbc.setState(0x905c, 0xc634, 0xf7a0, 0x5657, 0x44ca, 0xf18b, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0x905d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x905c), 0x29);
        // 29 0322
        gbc.setState(0x6279, 0x692f, 0x56d0, 0xd885, 0x17ba, 0x84e0, 0x1, 0x0);
        gbc.writeMem(0x6279, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x692f);
        EXPECT(gbc.pc(), 0x627a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0323
        gbc.setState(0x8295, 0x3585, 0x7930, 0xef91, 0xc207, 0xc490, 0x0, 0x1);
        gbc.writeMem(0x8295, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3585);
        EXPECT(gbc.pc(), 0x8296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8295), 0x29);
        // 29 0324
        gbc.setState(0xe6ce, 0x651c, 0x190, 0x9fed, 0x619b, 0x8ccd, 0x1, 0x0);
        gbc.writeMem(0xe6ce, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x651c);
        EXPECT(gbc.pc(), 0xe6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ce), 0x29);
        // 29 0325
        gbc.setState(0xc10e, 0x3e4f, 0xa7a0, 0x323e, 0x3ab, 0x4563, 0x0, 0x1);
        gbc.writeMem(0xc10e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0xc10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10e), 0x29);
        // 29 0326
        gbc.setState(0xc517, 0x49e, 0x3170, 0x45eb, 0xd15e, 0x72ea, 0x0, 0x0);
        gbc.writeMem(0xc517, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x49e);
        EXPECT(gbc.pc(), 0xc518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc517), 0x29);
        // 29 0327
        gbc.setState(0x562e, 0xd941, 0xb8d0, 0x8354, 0x255d, 0x2e09, 0x0, 0x1);
        gbc.writeMem(0x562e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd941);
        EXPECT(gbc.pc(), 0x562f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0328
        gbc.setState(0x8bfd, 0xba4c, 0xbcb0, 0x5a4c, 0xd690, 0xdbfe, 0x1, 0x1);
        gbc.writeMem(0x8bfd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xba4c);
        EXPECT(gbc.pc(), 0x8bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfd), 0x29);
        // 29 0329
        gbc.setState(0xa32b, 0x68e4, 0x3400, 0x1d2d, 0xe8eb, 0xa6e7, 0x0, 0x1);
        gbc.writeMem(0xa32b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x68e4);
        EXPECT(gbc.pc(), 0xa32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32b), 0x29);
        // 29 032A
        gbc.setState(0x39da, 0x5c98, 0xd30, 0xa654, 0xad70, 0xe90c, 0x1, 0x1);
        gbc.writeMem(0x39da, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5c98);
        EXPECT(gbc.pc(), 0x39db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 032B
        gbc.setState(0xc1b2, 0x5785, 0x9300, 0x28db, 0xcc01, 0xc293, 0x1, 0x0);
        gbc.writeMem(0xc1b2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5785);
        EXPECT(gbc.pc(), 0xc1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b2), 0x29);
        // 29 032C
        gbc.setState(0xb204, 0xd867, 0xbd90, 0x2bce, 0xa233, 0xce7, 0x1, 0x0);
        gbc.writeMem(0xb204, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd867);
        EXPECT(gbc.pc(), 0xb205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb204), 0x29);
        // 29 032D
        gbc.setState(0x2d7, 0x10ea, 0x1110, 0x5894, 0x35a, 0x5285, 0x0, 0x0);
        gbc.writeMem(0x2d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x10ea);
        EXPECT(gbc.pc(), 0x2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 032E
        gbc.setState(0xecba, 0x24f8, 0x2d00, 0x8dde, 0xd11, 0x75f9, 0x1, 0x0);
        gbc.writeMem(0xecba, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x24f8);
        EXPECT(gbc.pc(), 0xecbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecba), 0x29);
        // 29 032F
        gbc.setState(0xd9fa, 0x6eab, 0x49c0, 0x12eb, 0x2b31, 0x8c43, 0x1, 0x0);
        gbc.writeMem(0xd9fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0xd9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fa), 0x29);
        // 29 0330
        gbc.setState(0x8bdd, 0x9e5, 0x52b0, 0xa16e, 0x4f34, 0x6c98, 0x0, 0x1);
        gbc.writeMem(0x8bdd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9e5);
        EXPECT(gbc.pc(), 0x8bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdd), 0x29);
        // 29 0331
        gbc.setState(0x2ae3, 0x8a61, 0x6a30, 0x2de9, 0xe551, 0x93f1, 0x1, 0x0);
        gbc.writeMem(0x2ae3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8a61);
        EXPECT(gbc.pc(), 0x2ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0332
        gbc.setState(0x5a4c, 0xbd0e, 0x89d0, 0x7c15, 0x2fcc, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x5a4c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbd0e);
        EXPECT(gbc.pc(), 0x5a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0333
        gbc.setState(0xbd6, 0xceed, 0xf10, 0x947e, 0x222d, 0x1377, 0x0, 0x1);
        gbc.writeMem(0xbd6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xceed);
        EXPECT(gbc.pc(), 0xbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0334
        gbc.setState(0x7f60, 0xe9a1, 0x1820, 0x757d, 0xb0d3, 0xbe74, 0x0, 0x1);
        gbc.writeMem(0x7f60, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe9a1);
        EXPECT(gbc.pc(), 0x7f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0335
        gbc.setState(0x9008, 0xfbe0, 0x2000, 0x550d, 0xff52, 0xf342, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0x9009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9008), 0x29);
        // 29 0336
        gbc.setState(0x1faf, 0x98aa, 0xe1e0, 0x120d, 0x24ff, 0x46ef, 0x1, 0x1);
        gbc.writeMem(0x1faf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x98aa);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0337
        gbc.setState(0x628a, 0x1ad5, 0x4a40, 0xe4fd, 0xb208, 0x4715, 0x1, 0x0);
        gbc.writeMem(0x628a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1ad5);
        EXPECT(gbc.pc(), 0x628b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0338
        gbc.setState(0xc445, 0xcacc, 0xd750, 0xcc86, 0x23b2, 0x7ee, 0x0, 0x0);
        gbc.writeMem(0xc445, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcacc);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc445), 0x29);
        // 29 0339
        gbc.setState(0xee82, 0x70c5, 0x4080, 0xc3b4, 0xd369, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x70c5);
        EXPECT(gbc.pc(), 0xee83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee82), 0x29);
        // 29 033A
        gbc.setState(0x7304, 0xdee1, 0x3990, 0x1509, 0x3d2c, 0x3299, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdee1);
        EXPECT(gbc.pc(), 0x7305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 033B
        gbc.setState(0x47a, 0x9b59, 0x5fd0, 0xfac, 0xe4ec, 0xf77a, 0x1, 0x1);
        gbc.writeMem(0x47a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0x47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 033C
        gbc.setState(0xbe61, 0xa39b, 0x4c70, 0x6a16, 0xc7d2, 0x6a3, 0x1, 0x1);
        gbc.writeMem(0xbe61, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa39b);
        EXPECT(gbc.pc(), 0xbe62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe61), 0x29);
        // 29 033D
        gbc.setState(0x2248, 0x6400, 0xe060, 0x6340, 0x462e, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0x2248, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6400);
        EXPECT(gbc.pc(), 0x2249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 033E
        gbc.setState(0x9a1b, 0x5785, 0xbb10, 0xc8d0, 0xd8aa, 0x1b8, 0x0, 0x0);
        gbc.writeMem(0x9a1b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5785);
        EXPECT(gbc.pc(), 0x9a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1b), 0x29);
        // 29 033F
        gbc.setState(0x2670, 0x7711, 0x8e70, 0x5b5a, 0xd886, 0x764b, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7711);
        EXPECT(gbc.pc(), 0x2671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0340
        gbc.setState(0x11be, 0xb026, 0x5e00, 0x8e13, 0x6fa, 0x1b, 0x1, 0x1);
        gbc.writeMem(0x11be, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb026);
        EXPECT(gbc.pc(), 0x11bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0341
        gbc.setState(0x9ec6, 0x724, 0xc1a0, 0xb4df, 0x7462, 0xe301, 0x0, 0x1);
        gbc.writeMem(0x9ec6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x724);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec6), 0x29);
        // 29 0342
        gbc.setState(0x3d7, 0x1bd3, 0x32f0, 0x676e, 0x62c0, 0xc61d, 0x1, 0x0);
        gbc.writeMem(0x3d7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1bd3);
        EXPECT(gbc.pc(), 0x3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0343
        gbc.setState(0x5f17, 0x57f5, 0xe750, 0x582a, 0xa4db, 0x6d65, 0x0, 0x0);
        gbc.writeMem(0x5f17, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x57f5);
        EXPECT(gbc.pc(), 0x5f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0344
        gbc.setState(0xdeb0, 0x4128, 0xa870, 0x582d, 0xb61c, 0xcfd8, 0x0, 0x0);
        gbc.writeMem(0xdeb0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4128);
        EXPECT(gbc.pc(), 0xdeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb0), 0x29);
        // 29 0345
        gbc.setState(0x8a12, 0xd066, 0xf040, 0xdf55, 0x9ff8, 0x1bab, 0x0, 0x1);
        gbc.writeMem(0x8a12, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd066);
        EXPECT(gbc.pc(), 0x8a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a12), 0x29);
        // 29 0346
        gbc.setState(0x109b, 0x2764, 0x4a90, 0x70d1, 0x356, 0x567c, 0x1, 0x0);
        gbc.writeMem(0x109b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0x109c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0347
        gbc.setState(0xd495, 0xeba5, 0xad0, 0xf70f, 0x87f5, 0x8926, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xeba5);
        EXPECT(gbc.pc(), 0xd496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd495), 0x29);
        // 29 0348
        gbc.setState(0x5179, 0x6861, 0x6b30, 0x9f68, 0x12f2, 0xa8d4, 0x0, 0x1);
        gbc.writeMem(0x5179, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6861);
        EXPECT(gbc.pc(), 0x517a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0349
        gbc.setState(0x6af8, 0xa2a3, 0x2920, 0xbcfc, 0x5218, 0x5c34, 0x1, 0x0);
        gbc.writeMem(0x6af8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa2a3);
        EXPECT(gbc.pc(), 0x6af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 034A
        gbc.setState(0x1889, 0x3ff2, 0x5520, 0xdddf, 0x9c5a, 0xb041, 0x0, 0x0);
        gbc.writeMem(0x1889, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3ff2);
        EXPECT(gbc.pc(), 0x188a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 034B
        gbc.setState(0xcd20, 0x467c, 0x1190, 0x41c, 0x5a13, 0x4562, 0x1, 0x1);
        gbc.writeMem(0xcd20, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x467c);
        EXPECT(gbc.pc(), 0xcd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd20), 0x29);
        // 29 034C
        gbc.setState(0x3b48, 0x73b3, 0xc9d0, 0x660a, 0xd98c, 0x2fb, 0x1, 0x0);
        gbc.writeMem(0x3b48, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x73b3);
        EXPECT(gbc.pc(), 0x3b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 034E
        gbc.setState(0x9f73, 0x5c79, 0x6b40, 0x1618, 0x72c3, 0x8422, 0x1, 0x1);
        gbc.writeMem(0x9f73, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0x9f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f73), 0x29);
        // 29 034F
        gbc.setState(0xaf9d, 0x30fd, 0x8610, 0x22e4, 0x8db4, 0xdca8, 0x0, 0x1);
        gbc.writeMem(0xaf9d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x30fd);
        EXPECT(gbc.pc(), 0xaf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9d), 0x29);
        // 29 0350
        gbc.setState(0x6408, 0xab6e, 0x74b0, 0x4ea3, 0x8bc3, 0xc0f2, 0x0, 0x0);
        gbc.writeMem(0x6408, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xab6e);
        EXPECT(gbc.pc(), 0x6409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0351
        gbc.setState(0x3a49, 0x98e8, 0x2cd0, 0x8c4b, 0xd7c8, 0x4251, 0x0, 0x0);
        gbc.writeMem(0x3a49, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x98e8);
        EXPECT(gbc.pc(), 0x3a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0352
        gbc.setState(0xade5, 0xc336, 0xb220, 0xe38d, 0xdfc4, 0xdf7b, 0x0, 0x1);
        gbc.writeMem(0xade5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0xade6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade5), 0x29);
        // 29 0353
        gbc.setState(0xb13a, 0xd848, 0x3dc0, 0xb19e, 0xc622, 0xbf87, 0x0, 0x1);
        gbc.writeMem(0xb13a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0xb13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13a), 0x29);
        // 29 0354
        gbc.setState(0x5c44, 0x2a25, 0xcff0, 0xa35e, 0xe15e, 0xf171, 0x1, 0x0);
        gbc.writeMem(0x5c44, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a25);
        EXPECT(gbc.pc(), 0x5c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0355
        gbc.setState(0xbacd, 0x5b67, 0xc0b0, 0xdfe9, 0x8420, 0xa389, 0x0, 0x1);
        gbc.writeMem(0xbacd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5b67);
        EXPECT(gbc.pc(), 0xbace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbacd), 0x29);
        // 29 0356
        gbc.setState(0x7283, 0xc602, 0x3ff0, 0x3862, 0x723b, 0xe597, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc602);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0357
        gbc.setState(0x8051, 0x7859, 0xdd90, 0x307b, 0x3343, 0x8583, 0x1, 0x0);
        gbc.writeMem(0x8051, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0x8052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8051), 0x29);
        // 29 0358
        gbc.setState(0xe833, 0x57da, 0xe990, 0x8936, 0x62bd, 0x50b4, 0x0, 0x1);
        gbc.writeMem(0xe833, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x57da);
        EXPECT(gbc.pc(), 0xe834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe833), 0x29);
        // 29 0359
        gbc.setState(0x97a8, 0xa6f1, 0x2ab0, 0x2dec, 0xd9e8, 0xb1d5, 0x1, 0x0);
        gbc.writeMem(0x97a8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa6f1);
        EXPECT(gbc.pc(), 0x97a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a8), 0x29);
        // 29 035B
        gbc.setState(0xd2d4, 0x6293, 0xb0c0, 0x81a4, 0x3f1c, 0xed74, 0x0, 0x0);
        gbc.writeMem(0xd2d4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6293);
        EXPECT(gbc.pc(), 0xd2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d4), 0x29);
        // 29 035C
        gbc.setState(0x6bf4, 0x7249, 0x78b0, 0xd16c, 0x688d, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0x6bf4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7249);
        EXPECT(gbc.pc(), 0x6bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 035D
        gbc.setState(0xe64e, 0x2b76, 0xe210, 0x8306, 0xed75, 0x49ae, 0x1, 0x0);
        gbc.writeMem(0xe64e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2b76);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64e), 0x29);
        // 29 035E
        gbc.setState(0x2862, 0xe5af, 0xa230, 0x8376, 0xb5f0, 0xfd94, 0x0, 0x1);
        gbc.writeMem(0x2862, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe5af);
        EXPECT(gbc.pc(), 0x2863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 035F
        gbc.setState(0x327a, 0xa83c, 0xe7e0, 0xb3d8, 0x322d, 0x8e6f, 0x0, 0x0);
        gbc.writeMem(0x327a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa83c);
        EXPECT(gbc.pc(), 0x327b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0360
        gbc.setState(0x5668, 0xccff, 0x7fe0, 0x3b11, 0xd7a, 0x6901, 0x1, 0x0);
        gbc.writeMem(0x5668, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xccff);
        EXPECT(gbc.pc(), 0x5669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0361
        gbc.setState(0xbac9, 0xf401, 0xde00, 0x7f7d, 0xd822, 0xb796, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0xbaca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac9), 0x29);
        // 29 0362
        gbc.setState(0x359e, 0x726c, 0x2ff0, 0x4d5d, 0x4346, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0x359e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x726c);
        EXPECT(gbc.pc(), 0x359f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0363
        gbc.setState(0x22fb, 0xabf0, 0xa2e0, 0xd117, 0x39e, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xabf0);
        EXPECT(gbc.pc(), 0x22fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0364
        gbc.setState(0xbc04, 0x13ab, 0x5f80, 0x12e8, 0xa12f, 0x9a4d, 0x1, 0x1);
        gbc.writeMem(0xbc04, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x13ab);
        EXPECT(gbc.pc(), 0xbc05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc04), 0x29);
        // 29 0365
        gbc.setState(0x6b5d, 0x93ae, 0x3060, 0xea28, 0x7a8c, 0x81c4, 0x1, 0x0);
        gbc.writeMem(0x6b5d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x93ae);
        EXPECT(gbc.pc(), 0x6b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0366
        gbc.setState(0x3f9f, 0xeb7e, 0xb3f0, 0xbbc9, 0x1906, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x3f9f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xeb7e);
        EXPECT(gbc.pc(), 0x3fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0367
        gbc.setState(0x60aa, 0xa55b, 0x3240, 0x8a91, 0xf607, 0x192f, 0x0, 0x0);
        gbc.writeMem(0x60aa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa55b);
        EXPECT(gbc.pc(), 0x60ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0368
        gbc.setState(0x5aa4, 0xdc2, 0xe3a0, 0x2d9d, 0xd811, 0x2b1b, 0x1, 0x0);
        gbc.writeMem(0x5aa4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdc2);
        EXPECT(gbc.pc(), 0x5aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0369
        gbc.setState(0x9e8f, 0x724a, 0xbb70, 0xace, 0xd7f, 0x6a9e, 0x0, 0x1);
        gbc.writeMem(0x9e8f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x724a);
        EXPECT(gbc.pc(), 0x9e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8f), 0x29);
        // 29 036A
        gbc.setState(0x770c, 0x19af, 0x48b0, 0xda9a, 0xf4ad, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0x770c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x19af);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 036B
        gbc.setState(0x62c1, 0xd54c, 0xca00, 0x2e3e, 0xd5be, 0xccbf, 0x1, 0x1);
        gbc.writeMem(0x62c1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd54c);
        EXPECT(gbc.pc(), 0x62c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 036C
        gbc.setState(0xc5ae, 0xff82, 0xcde0, 0xa4af, 0x3e6d, 0xfce2, 0x0, 0x1);
        gbc.writeMem(0xc5ae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xff82);
        EXPECT(gbc.pc(), 0xc5af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ae), 0x29);
        // 29 036D
        gbc.setState(0x921b, 0x89c0, 0x64b0, 0x6a7, 0x8ac8, 0xf763, 0x0, 0x0);
        gbc.writeMem(0x921b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x89c0);
        EXPECT(gbc.pc(), 0x921c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921b), 0x29);
        // 29 036E
        gbc.setState(0x4b29, 0x60ff, 0x8bf0, 0x5cf1, 0xaf6c, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0x4b29, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0x4b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 036F
        gbc.setState(0x66c3, 0x899f, 0xb00, 0x6dfd, 0x5069, 0x3c4a, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x899f);
        EXPECT(gbc.pc(), 0x66c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0370
        gbc.setState(0x4c83, 0xc102, 0xa7f0, 0x25aa, 0xe022, 0xfb12, 0x1, 0x0);
        gbc.writeMem(0x4c83, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc102);
        EXPECT(gbc.pc(), 0x4c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0371
        gbc.setState(0xcc1e, 0xd40a, 0x60a0, 0x452a, 0xccdc, 0xacea, 0x1, 0x1);
        gbc.writeMem(0xcc1e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd40a);
        EXPECT(gbc.pc(), 0xcc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1e), 0x29);
        // 29 0373
        gbc.setState(0xbd60, 0x4137, 0xda80, 0xe144, 0x5ef6, 0xf559, 0x0, 0x0);
        gbc.writeMem(0xbd60, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4137);
        EXPECT(gbc.pc(), 0xbd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd60), 0x29);
        // 29 0374
        gbc.setState(0xba89, 0x82eb, 0x1dc0, 0x20a8, 0xc4e3, 0x62c7, 0x1, 0x1);
        gbc.writeMem(0xba89, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x82eb);
        EXPECT(gbc.pc(), 0xba8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba89), 0x29);
        // 29 0375
        gbc.setState(0x2a7c, 0x83e6, 0x30b0, 0x68ec, 0x4cb6, 0x381a, 0x1, 0x1);
        gbc.writeMem(0x2a7c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0x2a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0376
        gbc.setState(0x1534, 0x23fe, 0x70f0, 0x5778, 0xf064, 0x1be0, 0x1, 0x1);
        gbc.writeMem(0x1534, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x23fe);
        EXPECT(gbc.pc(), 0x1535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0377
        gbc.setState(0x981c, 0xaaac, 0xe730, 0xddd5, 0xc07a, 0xef51, 0x1, 0x0);
        gbc.writeMem(0x981c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x981d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981c), 0x29);
        // 29 0378
        gbc.setState(0x5ad3, 0xf3ae, 0x9d00, 0x63e3, 0xe932, 0xa1d2, 0x1, 0x0);
        gbc.writeMem(0x5ad3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf3ae);
        EXPECT(gbc.pc(), 0x5ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0379
        gbc.setState(0x9df5, 0x62cd, 0xc0f0, 0x8624, 0x3800, 0xd1c3, 0x1, 0x0);
        gbc.writeMem(0x9df5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x62cd);
        EXPECT(gbc.pc(), 0x9df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df5), 0x29);
        // 29 037A
        gbc.setState(0x597d, 0x7d76, 0x6ec0, 0xf482, 0xb577, 0x6776, 0x1, 0x0);
        gbc.writeMem(0x597d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7d76);
        EXPECT(gbc.pc(), 0x597e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 037B
        gbc.setState(0xe837, 0x326c, 0xd890, 0x3991, 0x9bdf, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0xe837, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x326c);
        EXPECT(gbc.pc(), 0xe838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe837), 0x29);
        // 29 037C
        gbc.setState(0x6bf3, 0x1d06, 0x8740, 0x54e8, 0xea1d, 0x15e2, 0x0, 0x1);
        gbc.writeMem(0x6bf3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1d06);
        EXPECT(gbc.pc(), 0x6bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 037E
        gbc.setState(0x2bb2, 0x10f2, 0x7480, 0xeb1d, 0x5c8, 0xefe8, 0x1, 0x0);
        gbc.writeMem(0x2bb2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x10f2);
        EXPECT(gbc.pc(), 0x2bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 037F
        gbc.setState(0xd3bf, 0x7ba9, 0x5980, 0x99a6, 0xdd53, 0x1b43, 0x1, 0x1);
        gbc.writeMem(0xd3bf, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7ba9);
        EXPECT(gbc.pc(), 0xd3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bf), 0x29);
        // 29 0380
        gbc.setState(0x780d, 0x542a, 0x2e00, 0xf616, 0xb36b, 0xf94e, 0x1, 0x0);
        gbc.writeMem(0x780d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x542a);
        EXPECT(gbc.pc(), 0x780e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0381
        gbc.setState(0x95fa, 0x4af0, 0x5b20, 0xf925, 0x209c, 0x7ccc, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4af0);
        EXPECT(gbc.pc(), 0x95fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fa), 0x29);
        // 29 0382
        gbc.setState(0x6601, 0x3a7f, 0x1ea0, 0xd416, 0x9d60, 0x2779, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3a7f);
        EXPECT(gbc.pc(), 0x6602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0383
        gbc.setState(0xfd2, 0x324d, 0x50d0, 0x999, 0x6499, 0xf876, 0x0, 0x0);
        gbc.writeMem(0xfd2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x324d);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0384
        gbc.setState(0x34fb, 0xeee6, 0x7d60, 0x2eee, 0x8df9, 0x8838, 0x1, 0x0);
        gbc.writeMem(0x34fb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0x34fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0385
        gbc.setState(0x9807, 0xb762, 0xf700, 0x725c, 0x1245, 0xe58, 0x0, 0x0);
        gbc.writeMem(0x9807, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb762);
        EXPECT(gbc.pc(), 0x9808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9807), 0x29);
        // 29 0386
        gbc.setState(0x4c9b, 0x20c3, 0xb1c0, 0xb8ec, 0xe7e6, 0xda78, 0x0, 0x1);
        gbc.writeMem(0x4c9b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x20c3);
        EXPECT(gbc.pc(), 0x4c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0387
        gbc.setState(0xc502, 0x38c7, 0xaee0, 0x8396, 0xd1a2, 0xbd12, 0x1, 0x1);
        gbc.writeMem(0xc502, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x38c7);
        EXPECT(gbc.pc(), 0xc503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc502), 0x29);
        // 29 0388
        gbc.setState(0xc217, 0xf20d, 0xdbb0, 0x88d3, 0xcdec, 0x86b2, 0x0, 0x0);
        gbc.writeMem(0xc217, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf20d);
        EXPECT(gbc.pc(), 0xc218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc217), 0x29);
        // 29 0389
        gbc.setState(0xc710, 0x49ae, 0xd3c0, 0x2c5f, 0x64bc, 0xb455, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x49ae);
        EXPECT(gbc.pc(), 0xc711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc710), 0x29);
        // 29 038A
        gbc.setState(0x69c9, 0x72b5, 0x7ad0, 0x303, 0x26f8, 0xfaeb, 0x0, 0x0);
        gbc.writeMem(0x69c9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x72b5);
        EXPECT(gbc.pc(), 0x69ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 038B
        gbc.setState(0xd3d5, 0x8a08, 0x3d10, 0xa426, 0xf453, 0xd842, 0x1, 0x1);
        gbc.writeMem(0xd3d5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8a08);
        EXPECT(gbc.pc(), 0xd3d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d5), 0x29);
        // 29 038C
        gbc.setState(0x622, 0xee66, 0x3160, 0xc836, 0x9faa, 0xca94, 0x1, 0x0);
        gbc.writeMem(0x622, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xee66);
        EXPECT(gbc.pc(), 0x623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 038D
        gbc.setState(0xd828, 0x6739, 0x6640, 0xa3b2, 0xab58, 0x32f0, 0x1, 0x0);
        gbc.writeMem(0xd828, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6739);
        EXPECT(gbc.pc(), 0xd829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd828), 0x29);
        // 29 038E
        gbc.setState(0x9c42, 0x35a1, 0x5990, 0x7129, 0x35f8, 0xd0e6, 0x1, 0x1);
        gbc.writeMem(0x9c42, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x35a1);
        EXPECT(gbc.pc(), 0x9c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c42), 0x29);
        // 29 038F
        gbc.setState(0x3734, 0xa53e, 0xdf00, 0xa16, 0x3206, 0xb64f, 0x1, 0x0);
        gbc.writeMem(0x3734, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa53e);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 0390
        gbc.setState(0x3ff, 0xd62b, 0x3140, 0x2e23, 0x4170, 0x7e36, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd62b);
        EXPECT(gbc.pc(), 0x400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0391
        gbc.setState(0x57d3, 0x70e, 0x66a0, 0xf226, 0xbf55, 0x2533, 0x0, 0x1);
        gbc.writeMem(0x57d3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x70e);
        EXPECT(gbc.pc(), 0x57d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0392
        gbc.setState(0x7b0, 0xb71e, 0xd1c0, 0xef68, 0x4c22, 0x4245, 0x1, 0x0);
        gbc.writeMem(0x7b0, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb71e);
        EXPECT(gbc.pc(), 0x7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 0393
        gbc.setState(0x9fae, 0x58c1, 0x3db0, 0xa729, 0xf00d, 0x52e, 0x1, 0x0);
        gbc.writeMem(0x9fae, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0x9faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fae), 0x29);
        // 29 0394
        gbc.setState(0xd4d8, 0x78de, 0x5770, 0x44dc, 0xb5ef, 0x350a, 0x1, 0x1);
        gbc.writeMem(0xd4d8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x78de);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d8), 0x29);
        // 29 0395
        gbc.setState(0xc61d, 0x86b9, 0xeb20, 0x13e2, 0xea9d, 0x51e0, 0x0, 0x1);
        gbc.writeMem(0xc61d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x86b9);
        EXPECT(gbc.pc(), 0xc61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61d), 0x29);
        // 29 0396
        gbc.setState(0x3e12, 0xd828, 0x6a70, 0x9275, 0x5c92, 0x4fd5, 0x1, 0x0);
        gbc.writeMem(0x3e12, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd828);
        EXPECT(gbc.pc(), 0x3e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 0397
        gbc.setState(0x5302, 0xa215, 0x3900, 0x6f8d, 0x8e1f, 0xfc26, 0x0, 0x0);
        gbc.writeMem(0x5302, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa215);
        EXPECT(gbc.pc(), 0x5303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 0399
        gbc.setState(0x3fe9, 0x72d8, 0xb010, 0xf9f3, 0x2e4e, 0x9a9b, 0x0, 0x1);
        gbc.writeMem(0x3fe9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x72d8);
        EXPECT(gbc.pc(), 0x3fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 039A
        gbc.setState(0xe81, 0x6488, 0x7900, 0x6d25, 0xd609, 0xdd95, 0x0, 0x0);
        gbc.writeMem(0xe81, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6488);
        EXPECT(gbc.pc(), 0xe82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 039B
        gbc.setState(0xa6c4, 0x712e, 0x860, 0x215, 0xaf8, 0xb0b8, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x712e);
        EXPECT(gbc.pc(), 0xa6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c4), 0x29);
        // 29 039C
        gbc.setState(0x5d0d, 0x3243, 0x6710, 0xc87d, 0xd961, 0xd83f, 0x1, 0x1);
        gbc.writeMem(0x5d0d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3243);
        EXPECT(gbc.pc(), 0x5d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 039D
        gbc.setState(0x5033, 0xc1de, 0x9310, 0x5330, 0xe33a, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0x5033, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc1de);
        EXPECT(gbc.pc(), 0x5034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 039F
        gbc.setState(0xa19e, 0x4bb4, 0xc3d0, 0xbb53, 0xbbde, 0x78f2, 0x1, 0x0);
        gbc.writeMem(0xa19e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4bb4);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19e), 0x29);
        // 29 03A0
        gbc.setState(0x4bac, 0x1933, 0x2290, 0x488b, 0xedc, 0x2698, 0x1, 0x1);
        gbc.writeMem(0x4bac, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1933);
        EXPECT(gbc.pc(), 0x4bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03A1
        gbc.setState(0xbeec, 0x20f4, 0xa110, 0x822d, 0xc15, 0xeb86, 0x0, 0x1);
        gbc.writeMem(0xbeec, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x20f4);
        EXPECT(gbc.pc(), 0xbeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeec), 0x29);
        // 29 03A2
        gbc.setState(0x88b3, 0x9bf9, 0x9de0, 0xda86, 0xbf7f, 0xa032, 0x0, 0x0);
        gbc.writeMem(0x88b3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9bf9);
        EXPECT(gbc.pc(), 0x88b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b3), 0x29);
        // 29 03A3
        gbc.setState(0x5e99, 0xa649, 0x16e0, 0x8c05, 0x41c4, 0xec04, 0x1, 0x0);
        gbc.writeMem(0x5e99, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa649);
        EXPECT(gbc.pc(), 0x5e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03A4
        gbc.setState(0xc2a9, 0x1f3, 0x7bc0, 0x2789, 0xb5dd, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1f3);
        EXPECT(gbc.pc(), 0xc2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a9), 0x29);
        // 29 03A5
        gbc.setState(0x2b8a, 0xd206, 0xe2a0, 0x48e1, 0xb212, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0x2b8a, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03A6
        gbc.setState(0xdc49, 0xd54e, 0xb0a0, 0x2f75, 0xc2a0, 0x8e72, 0x0, 0x1);
        gbc.writeMem(0xdc49, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd54e);
        EXPECT(gbc.pc(), 0xdc4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc49), 0x29);
        // 29 03A7
        gbc.setState(0x75a2, 0x5276, 0x1c30, 0x441a, 0x93ed, 0x11b3, 0x1, 0x1);
        gbc.writeMem(0x75a2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5276);
        EXPECT(gbc.pc(), 0x75a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03A8
        gbc.setState(0x811d, 0x9023, 0x8ef0, 0x7ac9, 0x7c64, 0x4779, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9023);
        EXPECT(gbc.pc(), 0x811e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811d), 0x29);
        // 29 03A9
        gbc.setState(0xca3e, 0xbe98, 0x70d0, 0x9fcd, 0x3dc9, 0x3e4d, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbe98);
        EXPECT(gbc.pc(), 0xca3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3e), 0x29);
        // 29 03AA
        gbc.setState(0x76e5, 0xf9ef, 0x5620, 0x866e, 0xe267, 0x41b0, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf9ef);
        EXPECT(gbc.pc(), 0x76e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03AB
        gbc.setState(0x7750, 0xed9e, 0xa820, 0x795c, 0x23ff, 0xed59, 0x1, 0x0);
        gbc.writeMem(0x7750, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xed9e);
        EXPECT(gbc.pc(), 0x7751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03AC
        gbc.setState(0xf12, 0xe8a0, 0xf340, 0x6bdc, 0xf86f, 0x5277, 0x0, 0x0);
        gbc.writeMem(0xf12, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe8a0);
        EXPECT(gbc.pc(), 0xf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03AD
        gbc.setState(0x1f86, 0xabe1, 0x98f0, 0x5191, 0x73c2, 0x8a4, 0x1, 0x0);
        gbc.writeMem(0x1f86, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xabe1);
        EXPECT(gbc.pc(), 0x1f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 03AE
        gbc.setState(0x842f, 0x49ba, 0xe390, 0x2b2b, 0xbefa, 0x413e, 0x0, 0x0);
        gbc.writeMem(0x842f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x49ba);
        EXPECT(gbc.pc(), 0x8430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842f), 0x29);
        // 29 03AF
        gbc.setState(0xed03, 0xa941, 0xa9c0, 0xf204, 0x2e5, 0x50ae, 0x0, 0x0);
        gbc.writeMem(0xed03, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa941);
        EXPECT(gbc.pc(), 0xed04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed03), 0x29);
        // 29 03B0
        gbc.setState(0xbb6c, 0x7720, 0x95b0, 0x7d88, 0xfdfe, 0xca07, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7720);
        EXPECT(gbc.pc(), 0xbb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb6c), 0x29);
        // 29 03B1
        gbc.setState(0xf04, 0x2109, 0xb230, 0x7164, 0x340b, 0xda2f, 0x1, 0x1);
        gbc.writeMem(0xf04, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2109);
        EXPECT(gbc.pc(), 0xf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03B2
        gbc.setState(0x720d, 0xb9e7, 0x6fc0, 0xeaa1, 0xe036, 0x1127, 0x0, 0x0);
        gbc.writeMem(0x720d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb9e7);
        EXPECT(gbc.pc(), 0x720e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03B3
        gbc.setState(0xd685, 0x4bd3, 0xb460, 0x9da6, 0x92be, 0xec8b, 0x0, 0x0);
        gbc.writeMem(0xd685, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4bd3);
        EXPECT(gbc.pc(), 0xd686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd685), 0x29);
        // 29 03B4
        gbc.setState(0xd6df, 0xb9b0, 0x8510, 0x287c, 0x34ea, 0x1b0d, 0x1, 0x0);
        gbc.writeMem(0xd6df, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb9b0);
        EXPECT(gbc.pc(), 0xd6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6df), 0x29);
        // 29 03B5
        gbc.setState(0xc08, 0xda18, 0xbe40, 0xa2b1, 0xca0, 0x9beb, 0x0, 0x1);
        gbc.writeMem(0xc08, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xda18);
        EXPECT(gbc.pc(), 0xc09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03B6
        gbc.setState(0x18, 0x37a9, 0x9640, 0x1960, 0xf128, 0x592, 0x0, 0x1);
        gbc.writeMem(0x18, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x37a9);
        EXPECT(gbc.pc(), 0x19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03B7
        gbc.setState(0x6707, 0x2c49, 0xd790, 0x690e, 0xf40b, 0x69e5, 0x1, 0x0);
        gbc.writeMem(0x6707, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2c49);
        EXPECT(gbc.pc(), 0x6708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 03B8
        gbc.setState(0x382b, 0x1fd9, 0xa840, 0xe4c8, 0xd56, 0xa9ca, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0x382c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03B9
        gbc.setState(0x59ce, 0x7125, 0x5100, 0xd8e8, 0x9933, 0xa5fe, 0x1, 0x0);
        gbc.writeMem(0x59ce, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x59cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 03BA
        gbc.setState(0x9aa9, 0xb7cd, 0x4fa0, 0xa2da, 0xe56c, 0x4325, 0x1, 0x1);
        gbc.writeMem(0x9aa9, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb7cd);
        EXPECT(gbc.pc(), 0x9aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa9), 0x29);
        // 29 03BB
        gbc.setState(0xe1a2, 0xee37, 0x6000, 0xcd2f, 0x3d8d, 0x1b8, 0x1, 0x1);
        gbc.writeMem(0xe1a2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xee37);
        EXPECT(gbc.pc(), 0xe1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a2), 0x29);
        // 29 03BC
        gbc.setState(0x26d3, 0xb034, 0x3fc0, 0x71f0, 0x3c22, 0xead1, 0x0, 0x0);
        gbc.writeMem(0x26d3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb034);
        EXPECT(gbc.pc(), 0x26d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03BD
        gbc.setState(0x5a11, 0xbe63, 0x2670, 0x8199, 0x74a, 0x37d6, 0x1, 0x1);
        gbc.writeMem(0x5a11, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0x5a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03BE
        gbc.setState(0xac07, 0xd9be, 0x22b0, 0xa5ec, 0x480, 0xd08d, 0x0, 0x0);
        gbc.writeMem(0xac07, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd9be);
        EXPECT(gbc.pc(), 0xac08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac07), 0x29);
        // 29 03BF
        gbc.setState(0xc696, 0xc640, 0xd030, 0xe4bf, 0xb82c, 0x78dc, 0x1, 0x0);
        gbc.writeMem(0xc696, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc640);
        EXPECT(gbc.pc(), 0xc697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc696), 0x29);
        // 29 03C0
        gbc.setState(0x71cd, 0xafbb, 0x5910, 0xe23e, 0xb045, 0xa44c, 0x0, 0x1);
        gbc.writeMem(0x71cd, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xafbb);
        EXPECT(gbc.pc(), 0x71ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 03C1
        gbc.setState(0xa9d6, 0xd3ba, 0xa290, 0x4dd3, 0xd49a, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0xa9d6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd3ba);
        EXPECT(gbc.pc(), 0xa9d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d6), 0x29);
        // 29 03C3
        gbc.setState(0xae33, 0x911d, 0x100, 0x4513, 0xdd8b, 0xf103, 0x1, 0x1);
        gbc.writeMem(0xae33, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x911d);
        EXPECT(gbc.pc(), 0xae34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae33), 0x29);
        // 29 03C4
        gbc.setState(0xc3bb, 0x2ad7, 0xe3d0, 0x7cde, 0xad2d, 0xfebf, 0x0, 0x0);
        gbc.writeMem(0xc3bb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0xc3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3bb), 0x29);
        // 29 03C5
        gbc.setState(0x2060, 0x8326, 0xd590, 0x2e54, 0xec23, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x2060, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8326);
        EXPECT(gbc.pc(), 0x2061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03C6
        gbc.setState(0x8293, 0x2696, 0x31e0, 0x3f95, 0x3b9d, 0x8323, 0x1, 0x0);
        gbc.writeMem(0x8293, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2696);
        EXPECT(gbc.pc(), 0x8294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8293), 0x29);
        // 29 03C7
        gbc.setState(0x7854, 0xc8a1, 0x3be0, 0x610d, 0x7b9e, 0x3ee0, 0x1, 0x0);
        gbc.writeMem(0x7854, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc8a1);
        EXPECT(gbc.pc(), 0x7855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 03C8
        gbc.setState(0xbfb2, 0x85b0, 0x3380, 0x3590, 0xef56, 0x2273, 0x1, 0x0);
        gbc.writeMem(0xbfb2, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x85b0);
        EXPECT(gbc.pc(), 0xbfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb2), 0x29);
        // 29 03C9
        gbc.setState(0x6b0f, 0xd5f8, 0x8110, 0x3f4e, 0xa9a7, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x6b0f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd5f8);
        EXPECT(gbc.pc(), 0x6b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03CA
        gbc.setState(0xad89, 0x3edd, 0xd480, 0x5e32, 0xb620, 0xb084, 0x1, 0x1);
        gbc.writeMem(0xad89, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3edd);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad89), 0x29);
        // 29 03CB
        gbc.setState(0xadf5, 0xf971, 0xed00, 0x82fe, 0x8a05, 0xc802, 0x1, 0x0);
        gbc.writeMem(0xadf5, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf971);
        EXPECT(gbc.pc(), 0xadf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf5), 0x29);
        // 29 03CC
        gbc.setState(0xe3bc, 0x63ec, 0xd280, 0x7cf1, 0xb99f, 0x7fd3, 0x0, 0x1);
        gbc.writeMem(0xe3bc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x63ec);
        EXPECT(gbc.pc(), 0xe3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bc), 0x29);
        // 29 03CD
        gbc.setState(0x95ca, 0x433d, 0xd190, 0x7ed4, 0x7c69, 0x1048, 0x1, 0x0);
        gbc.writeMem(0x95ca, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x433d);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ca), 0x29);
        // 29 03CE
        gbc.setState(0xceb6, 0x7ff4, 0x3960, 0x1e6f, 0xd721, 0xa894, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7ff4);
        EXPECT(gbc.pc(), 0xceb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0x29);
        // 29 03CF
        gbc.setState(0x14b6, 0xe239, 0x6ad0, 0x1f80, 0x4a7, 0x29a, 0x0, 0x0);
        gbc.writeMem(0x14b6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03D0
        gbc.setState(0x69c8, 0x3335, 0x6f10, 0xf4b7, 0xeadc, 0x88a9, 0x0, 0x1);
        gbc.writeMem(0x69c8, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3335);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03D1
        gbc.setState(0x404d, 0xb817, 0x6ff0, 0x7546, 0xe7a2, 0xb95b, 0x0, 0x1);
        gbc.writeMem(0x404d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0x404e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03D2
        gbc.setState(0x5edb, 0xd1b2, 0x200, 0x795b, 0x5768, 0xa453, 0x1, 0x1);
        gbc.writeMem(0x5edb, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x5edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 03D3
        gbc.setState(0xd82e, 0xf98c, 0xcb00, 0xab7c, 0x6f7d, 0x8f21, 0x1, 0x0);
        gbc.writeMem(0xd82e, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf98c);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82e), 0x29);
        // 29 03D4
        gbc.setState(0x8c00, 0xab8e, 0x7e50, 0x91d5, 0xfbf, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0x8c00, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xab8e);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c00), 0x29);
        // 29 03D5
        gbc.setState(0xc31f, 0x13b3, 0xe010, 0x2580, 0xd982, 0x1b8b, 0x1, 0x1);
        gbc.writeMem(0xc31f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x13b3);
        EXPECT(gbc.pc(), 0xc320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0x29);
        // 29 03D6
        gbc.setState(0xb7ab, 0x7fcd, 0x3f20, 0x3206, 0x2de, 0x4231, 0x0, 0x1);
        gbc.writeMem(0xb7ab, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7fcd);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ab), 0x29);
        // 29 03D7
        gbc.setState(0x8627, 0x6fca, 0xce50, 0x2bd6, 0xe5c1, 0xcb64, 0x0, 0x1);
        gbc.writeMem(0x8627, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x8628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8627), 0x29);
        // 29 03D8
        gbc.setState(0x5945, 0xd012, 0xb930, 0xd7af, 0x926c, 0x304b, 0x1, 0x1);
        gbc.writeMem(0x5945, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd012);
        EXPECT(gbc.pc(), 0x5946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03D9
        gbc.setState(0x811c, 0xf637, 0xbf50, 0x52a8, 0x82b3, 0xf90f, 0x0, 0x0);
        gbc.writeMem(0x811c, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf637);
        EXPECT(gbc.pc(), 0x811d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811c), 0x29);
        // 29 03DA
        gbc.setState(0x2c55, 0xd356, 0x2e0, 0x110b, 0x9cc1, 0x33eb, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd356);
        EXPECT(gbc.pc(), 0x2c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03DB
        gbc.setState(0xb48d, 0xbd73, 0xfa70, 0xb80c, 0xa029, 0x71f4, 0x0, 0x1);
        gbc.writeMem(0xb48d, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbd73);
        EXPECT(gbc.pc(), 0xb48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48d), 0x29);
        // 29 03DC
        gbc.setState(0x1812, 0xb6ad, 0xbed0, 0xc76f, 0x4067, 0x4637, 0x1, 0x1);
        gbc.writeMem(0x1812, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb6ad);
        EXPECT(gbc.pc(), 0x1813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 29 03DD
        gbc.setState(0x8796, 0x57de, 0x2590, 0x781f, 0xcd87, 0x3415, 0x1, 0x0);
        gbc.writeMem(0x8796, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x57de);
        EXPECT(gbc.pc(), 0x8797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8796), 0x29);
        // 29 03DE
        gbc.setState(0x3612, 0x3eca, 0xf830, 0x65aa, 0x2e99, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0x3612, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3eca);
        EXPECT(gbc.pc(), 0x3613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 03DF
        gbc.setState(0x1970, 0xc568, 0xe450, 0xa59e, 0x4525, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0x1970, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc568);
        EXPECT(gbc.pc(), 0x1971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 29 03E0
        gbc.setState(0xcf94, 0xce44, 0xb790, 0xa985, 0xef93, 0x2d2f, 0x0, 0x0);
        gbc.writeMem(0xcf94, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0xcf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf94), 0x29);
        // 29 03E1
        gbc.setState(0x1f05, 0xe29, 0x19c0, 0x95c7, 0x481, 0xb8f1, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe29);
        EXPECT(gbc.pc(), 0x1f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03E2
        gbc.setState(0xc98, 0x12b, 0x2fc0, 0xb685, 0xd774, 0xbc02, 0x0, 0x1);
        gbc.writeMem(0xc98, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x12b);
        EXPECT(gbc.pc(), 0xc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03E3
        gbc.setState(0x4470, 0x7edf, 0x1760, 0x2bbf, 0x3ce1, 0xadc0, 0x1, 0x0);
        gbc.writeMem(0x4470, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7edf);
        EXPECT(gbc.pc(), 0x4471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03E4
        gbc.setState(0x3e6f, 0x7f1d, 0x7ed0, 0x93c, 0x41bb, 0xb794, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7f1d);
        EXPECT(gbc.pc(), 0x3e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 29 03E6
        gbc.setState(0x379f, 0x4746, 0x3990, 0x5dd1, 0x7d3c, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0x379f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4746);
        EXPECT(gbc.pc(), 0x37a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 29 03E7
        gbc.setState(0xae73, 0x9df, 0xb7b0, 0xa288, 0x1492, 0x6560, 0x1, 0x1);
        gbc.writeMem(0xae73, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9df);
        EXPECT(gbc.pc(), 0xae74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae73), 0x29);
    }
}
#endif
