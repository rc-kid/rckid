    TEST(gbcemu, opcode_07) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 07 0000
        gbc.setState(0x24f3, 0xd509, 0xa500, 0x144a, 0x6b3, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x24f3, { 0x7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd509, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0001
        gbc.setState(0x7471, 0x22be, 0x1590, 0x1508, 0x4780, 0x3d29, 0x0, 0x0);
        gbc.writeMem(0x7471, { 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x22be, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0002
        gbc.setState(0x830c, 0x1ffb, 0x3ba0, 0xdfba, 0x72fb, 0x6149, 0x0, 0x1);
        gbc.writeMem(0x830c, { 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1ffb, gbc.sp());
        EXPECT(0x830d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x830c));
        // 07 0003
        gbc.setState(0x6b29, 0x5e23, 0x2e0, 0xac38, 0x70ef, 0xcff2, 0x0, 0x1);
        gbc.writeMem(0x6b29, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e23, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0004
        gbc.setState(0x2c21, 0xd74f, 0xc770, 0x281d, 0x97d4, 0x540b, 0x1, 0x1);
        gbc.writeMem(0x2c21, { 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0005
        gbc.setState(0x2312, 0x8ea3, 0x6460, 0x6799, 0x83a9, 0x7509, 0x0, 0x0);
        gbc.writeMem(0x2312, { 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8ea3, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0006
        gbc.setState(0xc605, 0xabff, 0xfdc0, 0x24f, 0x5223, 0xd3e2, 0x1, 0x1);
        gbc.writeMem(0xc605, { 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc605));
        // 07 0007
        gbc.setState(0x8062, 0xd6b3, 0x3240, 0xe274, 0x62a8, 0x455e, 0x1, 0x0);
        gbc.writeMem(0x8062, { 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd6b3, gbc.sp());
        EXPECT(0x8063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8062));
        // 07 0009
        gbc.setState(0x16cd, 0xe768, 0x9890, 0xb9d6, 0x6b6c, 0x7260, 0x1, 0x0);
        gbc.writeMem(0x16cd, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x16ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 000A
        gbc.setState(0xd4e0, 0xb1c2, 0x6390, 0x46c1, 0xf3e5, 0xe76e, 0x1, 0x0);
        gbc.writeMem(0xd4e0, { 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0xd4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd4e0));
        // 07 000B
        gbc.setState(0xbfcb, 0xefc8, 0xe230, 0x80d5, 0x4678, 0x552, 0x0, 0x0);
        gbc.writeMem(0xbfcb, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbfcb));
        // 07 000C
        gbc.setState(0x6770, 0x9532, 0xcd00, 0x79a0, 0xc0c7, 0x9520, 0x0, 0x0);
        gbc.writeMem(0x6770, { 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9532, gbc.sp());
        EXPECT(0x6771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 000D
        gbc.setState(0xb2b2, 0x97f4, 0x7ed0, 0x1457, 0x7df0, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0xb2b2, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x97f4, gbc.sp());
        EXPECT(0xb2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb2b2));
        // 07 000E
        gbc.setState(0x1c58, 0x541a, 0xf160, 0x34da, 0xd2f4, 0x577d, 0x0, 0x1);
        gbc.writeMem(0x1c58, { 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x541a, gbc.sp());
        EXPECT(0x1c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 000F
        gbc.setState(0x5a76, 0x43e2, 0xe680, 0x3014, 0xb853, 0xb063, 0x1, 0x1);
        gbc.writeMem(0x5a76, { 0x7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x43e2, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0010
        gbc.setState(0x2b97, 0x7fc, 0x8e40, 0xb2a8, 0xda4f, 0x1ccd, 0x1, 0x0);
        gbc.writeMem(0x2b97, { 0x7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0x2b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0011
        gbc.setState(0xa866, 0xae14, 0x2140, 0xffe4, 0x4761, 0xd100, 0x0, 0x1);
        gbc.writeMem(0xa866, { 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa866));
        // 07 0012
        gbc.setState(0x5cea, 0x9c0e, 0x8b00, 0xdf87, 0x925e, 0x1c43, 0x0, 0x1);
        gbc.writeMem(0x5cea, { 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0013
        gbc.setState(0x453e, 0x1cac, 0x1d40, 0xdcea, 0x449a, 0x2935, 0x1, 0x0);
        gbc.writeMem(0x453e, { 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1cac, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0014
        gbc.setState(0xae82, 0x5dbd, 0x3580, 0xf5e9, 0x21c8, 0x1059, 0x0, 0x0);
        gbc.writeMem(0xae82, { 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0xae83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xae82));
        // 07 0015
        gbc.setState(0x9960, 0x98b1, 0xfdc0, 0x3558, 0xd52, 0x3b71, 0x1, 0x0);
        gbc.writeMem(0x9960, { 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0x9961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9960));
        // 07 0016
        gbc.setState(0xeed7, 0x5b5c, 0x7430, 0xbac8, 0x5d28, 0x3ccb, 0x0, 0x1);
        gbc.writeMem(0xeed7, { 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xeed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeed7));
        // 07 0017
        gbc.setState(0xefdb, 0xe580, 0xa8d0, 0xfe66, 0x337e, 0xe754, 0x0, 0x1);
        gbc.writeMem(0xefdb, { 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe580, gbc.sp());
        EXPECT(0xefdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xefdb));
        // 07 0018
        gbc.setState(0x8164, 0x14f, 0xc9b0, 0x7e14, 0x7171, 0x402e, 0x1, 0x1);
        gbc.writeMem(0x8164, { 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x14f, gbc.sp());
        EXPECT(0x8165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8164));
        // 07 0019
        gbc.setState(0x5c1c, 0x9764, 0xd7d0, 0x5fba, 0x1201, 0x6043, 0x0, 0x0);
        gbc.writeMem(0x5c1c, { 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 001A
        gbc.setState(0x5a26, 0xd03, 0x6e40, 0xebba, 0xb3d0, 0xd799, 0x0, 0x0);
        gbc.writeMem(0x5a26, { 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0x5a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 001B
        gbc.setState(0x60c1, 0xf44e, 0x4bb0, 0xba33, 0x37f5, 0x1f90, 0x0, 0x1);
        gbc.writeMem(0x60c1, { 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x60c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 001C
        gbc.setState(0x8b3f, 0xa61c, 0xeaa0, 0xcf03, 0xb047, 0xe670, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa61c, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8b3f));
        // 07 001D
        gbc.setState(0x9495, 0x711b, 0xd30, 0xb858, 0x83c6, 0x520f, 0x1, 0x0);
        gbc.writeMem(0x9495, { 0x7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x711b, gbc.sp());
        EXPECT(0x9496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9495));
        // 07 001E
        gbc.setState(0x3bb0, 0x2927, 0x8f10, 0xecb0, 0xb2bd, 0xdbd6, 0x1, 0x0);
        gbc.writeMem(0x3bb0, { 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2927, gbc.sp());
        EXPECT(0x3bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 001F
        gbc.setState(0x1726, 0x300d, 0x3ae0, 0xe190, 0xf2b1, 0x6a65, 0x0, 0x1);
        gbc.writeMem(0x1726, { 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x300d, gbc.sp());
        EXPECT(0x1727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0020
        gbc.setState(0x94df, 0xf719, 0x6530, 0x8edb, 0x93f8, 0x5096, 0x0, 0x1);
        gbc.writeMem(0x94df, { 0x7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf719, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x94df));
        // 07 0021
        gbc.setState(0xd615, 0x72eb, 0x6a30, 0x620d, 0x2d20, 0x55f3, 0x0, 0x1);
        gbc.writeMem(0xd615, { 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x72eb, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd615));
        // 07 0022
        gbc.setState(0x5e87, 0x68a7, 0xc1e0, 0x9ae8, 0x9809, 0x2d76, 0x1, 0x0);
        gbc.writeMem(0x5e87, { 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x68a7, gbc.sp());
        EXPECT(0x5e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0023
        gbc.setState(0xee5b, 0x34d0, 0x3b90, 0x1c10, 0xf64f, 0x35a3, 0x0, 0x1);
        gbc.writeMem(0xee5b, { 0x7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xee5b));
        // 07 0024
        gbc.setState(0x4c82, 0xdde8, 0x3040, 0x4eb7, 0x6abc, 0xe618, 0x0, 0x0);
        gbc.writeMem(0x4c82, { 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0025
        gbc.setState(0x264c, 0x8f6b, 0x4160, 0x2971, 0x9c7c, 0x2707, 0x0, 0x1);
        gbc.writeMem(0x264c, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8f6b, gbc.sp());
        EXPECT(0x264d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0026
        gbc.setState(0x6d74, 0xc72a, 0x80, 0x42ab, 0xa8d4, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0x6d74, { 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc72a, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0027
        gbc.setState(0x9f00, 0xc1b3, 0x85d0, 0x813f, 0xb8c1, 0x7645, 0x1, 0x0);
        gbc.writeMem(0x9f00, { 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0x9f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9f00));
        // 07 0028
        gbc.setState(0x2431, 0x2b8c, 0xb050, 0xfbd, 0x6aa4, 0x2d2b, 0x0, 0x1);
        gbc.writeMem(0x2431, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b8c, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0029
        gbc.setState(0x2e37, 0xceab, 0xf950, 0xb0f6, 0x1029, 0x88ef, 0x1, 0x1);
        gbc.writeMem(0x2e37, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xceab, gbc.sp());
        EXPECT(0x2e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 002A
        gbc.setState(0x1085, 0x58c8, 0x4630, 0x1563, 0xd75c, 0x5aee, 0x0, 0x0);
        gbc.writeMem(0x1085, { 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 002B
        gbc.setState(0x2aad, 0x6b62, 0xa90, 0x48d3, 0xb43, 0xa7d8, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0x2aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 002C
        gbc.setState(0xdf92, 0xd6d, 0x1a90, 0x307b, 0x7580, 0xf0d7, 0x1, 0x0);
        gbc.writeMem(0xdf92, { 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd6d, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdf92));
        // 07 002D
        gbc.setState(0xeb8e, 0x9a8c, 0xb590, 0x3a2c, 0x2364, 0x610b, 0x1, 0x0);
        gbc.writeMem(0xeb8e, { 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9a8c, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeb8e));
        // 07 002E
        gbc.setState(0xd044, 0x1d36, 0xc1e0, 0x7c87, 0xc05b, 0x4b77, 0x0, 0x1);
        gbc.writeMem(0xd044, { 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd044));
        // 07 002F
        gbc.setState(0xd3a6, 0x5f72, 0x1330, 0x5756, 0xb68d, 0x66c7, 0x0, 0x0);
        gbc.writeMem(0xd3a6, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd3a6));
        // 07 0030
        gbc.setState(0x7ebd, 0x9680, 0x4d60, 0x84c0, 0xb0a1, 0x4903, 0x1, 0x1);
        gbc.writeMem(0x7ebd, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0x7ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0031
        gbc.setState(0xd2e8, 0x42a3, 0x7a00, 0xe6b3, 0xa190, 0xce5e, 0x0, 0x1);
        gbc.writeMem(0xd2e8, { 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x42a3, gbc.sp());
        EXPECT(0xd2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd2e8));
        // 07 0032
        gbc.setState(0x6bc, 0xdecf, 0xb330, 0xa6f2, 0x2337, 0xaf0d, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0x7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0033
        gbc.setState(0x6700, 0xad1d, 0x3ea0, 0x50d3, 0x5d85, 0x9745, 0x1, 0x1);
        gbc.writeMem(0x6700, { 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad1d, gbc.sp());
        EXPECT(0x6701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0034
        gbc.setState(0x919e, 0xbe6c, 0x55b0, 0x798d, 0xf987, 0x8ad4, 0x0, 0x0);
        gbc.writeMem(0x919e, { 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0x919f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x919e));
        // 07 0035
        gbc.setState(0xb3fa, 0xa68a, 0x7a90, 0x8a1b, 0x4b89, 0x36bb, 0x1, 0x0);
        gbc.writeMem(0xb3fa, { 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb3fa));
        // 07 0036
        gbc.setState(0x6c77, 0xb5dc, 0x9bf0, 0x24cf, 0x86c4, 0x2ce8, 0x0, 0x0);
        gbc.writeMem(0x6c77, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0038
        gbc.setState(0x4ec5, 0x8387, 0xe4c0, 0xa6d2, 0x8b15, 0xdbde, 0x0, 0x1);
        gbc.writeMem(0x4ec5, { 0x7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0x4ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0039
        gbc.setState(0x5cae, 0x6f03, 0xf460, 0xc8b6, 0x719e, 0xf7bf, 0x0, 0x1);
        gbc.writeMem(0x5cae, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6f03, gbc.sp());
        EXPECT(0x5caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 003A
        gbc.setState(0x925c, 0x4dcf, 0xdcd0, 0xc788, 0xa076, 0x87ac, 0x0, 0x1);
        gbc.writeMem(0x925c, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x925c));
        // 07 003B
        gbc.setState(0x5173, 0x43a3, 0xbc60, 0x68b0, 0xe9b2, 0xb766, 0x0, 0x0);
        gbc.writeMem(0x5173, { 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x5174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 003C
        gbc.setState(0x182, 0x35b4, 0x8760, 0xf642, 0xc785, 0xa989, 0x1, 0x1);
        gbc.writeMem(0x182, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x35b4, gbc.sp());
        EXPECT(0x183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 003D
        gbc.setState(0xd771, 0xebcc, 0xd380, 0x53b4, 0x97b4, 0xd81d, 0x1, 0x0);
        gbc.writeMem(0xd771, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0xd772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd771));
        // 07 003E
        gbc.setState(0x90d3, 0x95ff, 0x35e0, 0x735e, 0xae15, 0xa5cd, 0x1, 0x1);
        gbc.writeMem(0x90d3, { 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x90d3));
        // 07 003F
        gbc.setState(0x7d2c, 0x8676, 0x5980, 0x342, 0x93c2, 0x6d52, 0x0, 0x1);
        gbc.writeMem(0x7d2c, { 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8676, gbc.sp());
        EXPECT(0x7d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0040
        gbc.setState(0xccde, 0xa14c, 0x3a0, 0x15b2, 0xe6cd, 0xbb05, 0x1, 0x0);
        gbc.writeMem(0xccde, { 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0xccdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xccde));
        // 07 0041
        gbc.setState(0x4fa4, 0xf593, 0xc800, 0xcdf9, 0x1f52, 0x8d68, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf593, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0042
        gbc.setState(0x102d, 0x3205, 0x50f0, 0x499f, 0x156f, 0x2a34, 0x1, 0x0);
        gbc.writeMem(0x102d, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3205, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0043
        gbc.setState(0xd8f0, 0x91d2, 0xda60, 0x97ea, 0x607a, 0x4965, 0x1, 0x0);
        gbc.writeMem(0xd8f0, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x91d2, gbc.sp());
        EXPECT(0xd8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd8f0));
        // 07 0044
        gbc.setState(0xaa3d, 0x1cd6, 0x7fe0, 0xd579, 0x5305, 0x3448, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1cd6, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaa3d));
        // 07 0045
        gbc.setState(0x939f, 0xe501, 0x70d0, 0x97df, 0xa64a, 0x91b8, 0x0, 0x1);
        gbc.writeMem(0x939f, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe501, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x939f));
        // 07 0046
        gbc.setState(0x3174, 0x3249, 0x8840, 0x297b, 0x6cda, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x3174, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3249, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0047
        gbc.setState(0x109f, 0x8fe8, 0x9fb0, 0x95b4, 0xe41c, 0xa7dc, 0x1, 0x1);
        gbc.writeMem(0x109f, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8fe8, gbc.sp());
        EXPECT(0x10a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0048
        gbc.setState(0xa4a, 0x6afb, 0x6a10, 0x1993, 0xa532, 0x7767, 0x0, 0x0);
        gbc.writeMem(0xa4a, { 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6afb, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0049
        gbc.setState(0xc8a5, 0xa85e, 0x68d0, 0x7658, 0xa60f, 0x840, 0x0, 0x0);
        gbc.writeMem(0xc8a5, { 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc8a5));
        // 07 004A
        gbc.setState(0xb096, 0x28a2, 0x45a0, 0x9527, 0xa90e, 0x3a5b, 0x0, 0x0);
        gbc.writeMem(0xb096, { 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x28a2, gbc.sp());
        EXPECT(0xb097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb096));
        // 07 004B
        gbc.setState(0x3f06, 0x90bf, 0x200, 0x9a7c, 0x78d8, 0xeb4a, 0x1, 0x1);
        gbc.writeMem(0x3f06, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0x3f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 004C
        gbc.setState(0x875, 0xe53c, 0x6770, 0xfba1, 0xa19b, 0x1aa2, 0x1, 0x0);
        gbc.writeMem(0x875, { 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe53c, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 004D
        gbc.setState(0xc4e9, 0x5327, 0xc640, 0xa0cb, 0xfbd4, 0xdc72, 0x1, 0x0);
        gbc.writeMem(0xc4e9, { 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5327, gbc.sp());
        EXPECT(0xc4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc4e9));
        // 07 004F
        gbc.setState(0x8091, 0xbd8d, 0xb290, 0x4ed9, 0x950f, 0xafba, 0x0, 0x1);
        gbc.writeMem(0x8091, { 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbd8d, gbc.sp());
        EXPECT(0x8092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8091));
        // 07 0050
        gbc.setState(0xbc46, 0x54db, 0xd6d0, 0x85a8, 0x8078, 0x95da, 0x1, 0x1);
        gbc.writeMem(0xbc46, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0xbc47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbc46));
        // 07 0051
        gbc.setState(0xa078, 0x4d36, 0xb200, 0xeefb, 0x9296, 0x339b, 0x0, 0x1);
        gbc.writeMem(0xa078, { 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa078));
        // 07 0052
        gbc.setState(0xa25d, 0xd224, 0xf9a0, 0xbda9, 0x1ecd, 0x7b15, 0x1, 0x1);
        gbc.writeMem(0xa25d, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa25d));
        // 07 0053
        gbc.setState(0xbd80, 0x4051, 0xac00, 0x8fa7, 0x8d97, 0xdd64, 0x0, 0x0);
        gbc.writeMem(0xbd80, { 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0xbd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbd80));
        // 07 0054
        gbc.setState(0x4e78, 0xac34, 0x41a0, 0xd9d4, 0xfb11, 0x6d92, 0x1, 0x0);
        gbc.writeMem(0x4e78, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x4e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0055
        gbc.setState(0x25de, 0x8888, 0x24d0, 0xcdd1, 0x78e6, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0x25de, { 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8888, gbc.sp());
        EXPECT(0x25df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0056
        gbc.setState(0xe417, 0x3c30, 0x1010, 0x709b, 0xcd84, 0xd54e, 0x1, 0x0);
        gbc.writeMem(0xe417, { 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0xe418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe417));
        // 07 0057
        gbc.setState(0x1708, 0x8d59, 0xf4e0, 0xec43, 0x1452, 0xe699, 0x1, 0x1);
        gbc.writeMem(0x1708, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0x1709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0058
        gbc.setState(0x1fe4, 0xf837, 0x67a0, 0x1f91, 0x8bdb, 0x9c14, 0x0, 0x1);
        gbc.writeMem(0x1fe4, { 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf837, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 005A
        gbc.setState(0x8e8f, 0x49e4, 0x4310, 0xe37c, 0x2ba5, 0xcf6b, 0x0, 0x1);
        gbc.writeMem(0x8e8f, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x49e4, gbc.sp());
        EXPECT(0x8e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e8f));
        // 07 005B
        gbc.setState(0x9e65, 0x1f41, 0xaa0, 0xb6ab, 0x5dde, 0xd827, 0x0, 0x1);
        gbc.writeMem(0x9e65, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9e65));
        // 07 005C
        gbc.setState(0xb892, 0xccae, 0x9af0, 0xb005, 0x9b97, 0xd2d1, 0x1, 0x0);
        gbc.writeMem(0xb892, { 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb892));
        // 07 005D
        gbc.setState(0xab59, 0xffdd, 0x6810, 0xb0c1, 0x1080, 0xa3cc, 0x0, 0x0);
        gbc.writeMem(0xab59, { 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0xab5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xab59));
        // 07 005E
        gbc.setState(0xcd59, 0xd2c, 0xe520, 0x95b2, 0xe7ae, 0xa3d9, 0x0, 0x0);
        gbc.writeMem(0xcd59, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0xcd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcd59));
        // 07 005F
        gbc.setState(0x2aed, 0x942, 0x96a0, 0xfe53, 0x19d3, 0xe976, 0x0, 0x0);
        gbc.writeMem(0x2aed, { 0x7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x942, gbc.sp());
        EXPECT(0x2aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0060
        gbc.setState(0xeffc, 0xa4a, 0x41c0, 0x122d, 0x7a81, 0x5b6a, 0x1, 0x1);
        gbc.writeMem(0xeffc, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa4a, gbc.sp());
        EXPECT(0xeffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeffc));
        // 07 0061
        gbc.setState(0xd8b, 0x296b, 0x13a0, 0x9973, 0xb4d7, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0xd8b, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x296b, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0062
        gbc.setState(0x6356, 0xb7c2, 0x68d0, 0xd88b, 0x1199, 0xf777, 0x0, 0x0);
        gbc.writeMem(0x6356, { 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0x6357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0063
        gbc.setState(0x1614, 0x8f81, 0x89c0, 0x44d7, 0x97b6, 0xd510, 0x0, 0x0);
        gbc.writeMem(0x1614, { 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8f81, gbc.sp());
        EXPECT(0x1615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0064
        gbc.setState(0xd006, 0xffd2, 0xfe0, 0xc09b, 0xbda0, 0x4431, 0x1, 0x1);
        gbc.writeMem(0xd006, { 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xffd2, gbc.sp());
        EXPECT(0xd007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd006));
        // 07 0065
        gbc.setState(0xd843, 0x97fa, 0x3690, 0x5e74, 0xd570, 0x29f1, 0x0, 0x0);
        gbc.writeMem(0xd843, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x97fa, gbc.sp());
        EXPECT(0xd844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd843));
        // 07 0066
        gbc.setState(0x6b51, 0xb9d7, 0x86f0, 0xd256, 0xb3a0, 0x9280, 0x0, 0x0);
        gbc.writeMem(0x6b51, { 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0067
        gbc.setState(0x9df0, 0x5b92, 0x4070, 0xdc26, 0xc6d, 0x363f, 0x0, 0x1);
        gbc.writeMem(0x9df0, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5b92, gbc.sp());
        EXPECT(0x9df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9df0));
        // 07 0068
        gbc.setState(0xc592, 0xb70a, 0x96f0, 0xad78, 0x461e, 0x828f, 0x1, 0x1);
        gbc.writeMem(0xc592, { 0x7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0xc593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc592));
        // 07 0069
        gbc.setState(0xd27, 0x27ef, 0x60b0, 0x47b2, 0xac1f, 0x4f7a, 0x0, 0x1);
        gbc.writeMem(0xd27, { 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x27ef, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 006A
        gbc.setState(0x21a8, 0xbfde, 0xf510, 0xefe3, 0x188, 0xf4a6, 0x0, 0x1);
        gbc.writeMem(0x21a8, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 006B
        gbc.setState(0xa85f, 0x641e, 0x2570, 0x81d9, 0xcec3, 0x8437, 0x0, 0x0);
        gbc.writeMem(0xa85f, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x641e, gbc.sp());
        EXPECT(0xa860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa85f));
        // 07 006C
        gbc.setState(0x7160, 0x2088, 0x8110, 0x1dcb, 0xfeac, 0x81b, 0x0, 0x0);
        gbc.writeMem(0x7160, { 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x7161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 006D
        gbc.setState(0x4e59, 0xe80f, 0x6930, 0xecb0, 0x8458, 0xcd8d, 0x1, 0x1);
        gbc.writeMem(0x4e59, { 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x4e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 006E
        gbc.setState(0x75f0, 0xf07e, 0x5470, 0xe60e, 0x194c, 0x933f, 0x1, 0x1);
        gbc.writeMem(0x75f0, { 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0x75f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 006F
        gbc.setState(0xcb88, 0xe9c0, 0x6cd0, 0xcc1c, 0x2118, 0x5e38, 0x0, 0x0);
        gbc.writeMem(0xcb88, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe9c0, gbc.sp());
        EXPECT(0xcb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcb88));
        // 07 0070
        gbc.setState(0xd756, 0x2bfc, 0x2ff0, 0xb702, 0x5150, 0x15a8, 0x0, 0x1);
        gbc.writeMem(0xd756, { 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2bfc, gbc.sp());
        EXPECT(0xd757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd756));
        // 07 0071
        gbc.setState(0x8e5f, 0xaa75, 0x95e0, 0xfd8c, 0xa17f, 0x6a02, 0x0, 0x1);
        gbc.writeMem(0x8e5f, { 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaa75, gbc.sp());
        EXPECT(0x8e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e5f));
        // 07 0072
        gbc.setState(0x2f03, 0x5582, 0x2730, 0x1f2d, 0x7d5, 0xd852, 0x0, 0x1);
        gbc.writeMem(0x2f03, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5582, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0073
        gbc.setState(0xccf5, 0x91e4, 0x9980, 0xea54, 0xeab2, 0xd1d5, 0x1, 0x0);
        gbc.writeMem(0xccf5, { 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x91e4, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xccf5));
        // 07 0074
        gbc.setState(0x6df4, 0xd3e, 0x94c0, 0xcaa6, 0xeb26, 0x32e4, 0x1, 0x1);
        gbc.writeMem(0x6df4, { 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd3e, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0075
        gbc.setState(0x7d00, 0x4118, 0x9f80, 0xbcf0, 0x583c, 0x3f70, 0x1, 0x0);
        gbc.writeMem(0x7d00, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4118, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0076
        gbc.setState(0x3ad6, 0x1dd1, 0xf700, 0x1e08, 0x36f4, 0xe343, 0x1, 0x1);
        gbc.writeMem(0x3ad6, { 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1dd1, gbc.sp());
        EXPECT(0x3ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0077
        gbc.setState(0x9edb, 0xcb12, 0xec30, 0xae7c, 0xae7a, 0xf9c, 0x0, 0x1);
        gbc.writeMem(0x9edb, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcb12, gbc.sp());
        EXPECT(0x9edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9edb));
        // 07 0078
        gbc.setState(0x360, 0x6a4b, 0x9920, 0xc0b5, 0x56c5, 0x7433, 0x1, 0x0);
        gbc.writeMem(0x360, { 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6a4b, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0079
        gbc.setState(0x7dad, 0x8f8b, 0xeb30, 0xe7fb, 0x3c47, 0xe698, 0x0, 0x0);
        gbc.writeMem(0x7dad, { 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 007A
        gbc.setState(0x3679, 0xfa13, 0x4b80, 0x2f40, 0x7c01, 0x96ca, 0x1, 0x1);
        gbc.writeMem(0x3679, { 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfa13, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 007B
        gbc.setState(0xb0e3, 0x9882, 0xdb60, 0x698d, 0xc154, 0x79bd, 0x1, 0x0);
        gbc.writeMem(0xb0e3, { 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9882, gbc.sp());
        EXPECT(0xb0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb0e3));
        // 07 007C
        gbc.setState(0xc6b5, 0x86a5, 0x2f70, 0x6333, 0xbf18, 0xf20c, 0x0, 0x0);
        gbc.writeMem(0xc6b5, { 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x86a5, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc6b5));
        // 07 007D
        gbc.setState(0xd56, 0x46d5, 0x5780, 0x9189, 0xfa6e, 0xf550, 0x1, 0x1);
        gbc.writeMem(0xd56, { 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x46d5, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 007E
        gbc.setState(0x7706, 0x82bc, 0x1c30, 0x2203, 0xdc8, 0x1ba9, 0x0, 0x1);
        gbc.writeMem(0x7706, { 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x82bc, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 007F
        gbc.setState(0xa6e9, 0xc7a3, 0xd3c0, 0x2923, 0x5aea, 0x89f6, 0x0, 0x0);
        gbc.writeMem(0xa6e9, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc7a3, gbc.sp());
        EXPECT(0xa6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa6e9));
        // 07 0080
        gbc.setState(0xa7f, 0x9213, 0xffc0, 0x45fa, 0xe356, 0x58bd, 0x0, 0x1);
        gbc.writeMem(0xa7f, { 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xa80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0081
        gbc.setState(0x2440, 0xcfb2, 0x5dc0, 0xcaf3, 0x63b0, 0xaa29, 0x0, 0x0);
        gbc.writeMem(0x2440, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x2441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0082
        gbc.setState(0x8f2a, 0x6767, 0xe090, 0xf829, 0x75f5, 0x6a, 0x0, 0x0);
        gbc.writeMem(0x8f2a, { 0x7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6767, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8f2a));
        // 07 0083
        gbc.setState(0xbd04, 0x3c3, 0x9670, 0x9b2b, 0x5fea, 0xfa7c, 0x0, 0x1);
        gbc.writeMem(0xbd04, { 0x7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbd04));
        // 07 0084
        gbc.setState(0x9981, 0xc456, 0x7e30, 0x7b48, 0xea16, 0xf78a, 0x1, 0x1);
        gbc.writeMem(0x9981, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9981));
        // 07 0085
        gbc.setState(0x43ff, 0xbc4d, 0x3e80, 0x2a5, 0x924, 0xa7d3, 0x1, 0x0);
        gbc.writeMem(0x43ff, { 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbc4d, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0086
        gbc.setState(0x9c58, 0x6699, 0x2ad0, 0x97a3, 0x59f, 0x63c5, 0x0, 0x1);
        gbc.writeMem(0x9c58, { 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9c58));
        // 07 0087
        gbc.setState(0xd394, 0xc9f9, 0xae00, 0x322f, 0xe0bf, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0xd394, { 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc9f9, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd394));
        // 07 0088
        gbc.setState(0xf81, 0x5752, 0x8190, 0xea67, 0x252b, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0xf81, { 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0xf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0089
        gbc.setState(0x754c, 0xc683, 0x1bb0, 0xd4c0, 0xeb8b, 0x9347, 0x0, 0x0);
        gbc.writeMem(0x754c, { 0x7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 008A
        gbc.setState(0x4901, 0x62ad, 0xf510, 0x9eec, 0xe914, 0xbe5, 0x0, 0x0);
        gbc.writeMem(0x4901, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 008B
        gbc.setState(0x46c6, 0x4c1, 0x43b0, 0xa73a, 0x130e, 0x805b, 0x0, 0x1);
        gbc.writeMem(0x46c6, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c1, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 008C
        gbc.setState(0xbab8, 0x4ad6, 0xd470, 0xb9dd, 0xb7a2, 0x553b, 0x0, 0x0);
        gbc.writeMem(0xbab8, { 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0xbab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbab8));
        // 07 008D
        gbc.setState(0xb399, 0xce54, 0xdb70, 0xd116, 0x99b1, 0xf2a8, 0x0, 0x1);
        gbc.writeMem(0xb399, { 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xce54, gbc.sp());
        EXPECT(0xb39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb399));
        // 07 008E
        gbc.setState(0x28e, 0x2ea4, 0x37c0, 0x7945, 0x5d28, 0xe5f0, 0x1, 0x0);
        gbc.writeMem(0x28e, { 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2ea4, gbc.sp());
        EXPECT(0x28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 008F
        gbc.setState(0x9756, 0x45b6, 0x2e00, 0xce8, 0x14a6, 0x9d4b, 0x0, 0x1);
        gbc.writeMem(0x9756, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9756));
        // 07 0091
        gbc.setState(0x2eea, 0xd53d, 0x68b0, 0x22dc, 0x2b97, 0x1320, 0x1, 0x1);
        gbc.writeMem(0x2eea, { 0x7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0092
        gbc.setState(0x8f0e, 0x3aa2, 0x58b0, 0xf5af, 0x2e8c, 0xc0b8, 0x0, 0x1);
        gbc.writeMem(0x8f0e, { 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0x8f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8f0e));
        // 07 0093
        gbc.setState(0xb103, 0xd5be, 0xd190, 0xb886, 0xe548, 0xe678, 0x0, 0x0);
        gbc.writeMem(0xb103, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5be, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb103));
        // 07 0094
        gbc.setState(0x8c9b, 0x1c1e, 0x67a0, 0xa2f9, 0x27ea, 0x2243, 0x1, 0x1);
        gbc.writeMem(0x8c9b, { 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1c1e, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8c9b));
        // 07 0095
        gbc.setState(0xdb9b, 0xa0fb, 0xbdf0, 0xa47b, 0x273f, 0x8d, 0x0, 0x1);
        gbc.writeMem(0xdb9b, { 0x7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0xdb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdb9b));
        // 07 0096
        gbc.setState(0x98c1, 0x123d, 0xef70, 0xb8e8, 0xf025, 0x304c, 0x1, 0x1);
        gbc.writeMem(0x98c1, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x123d, gbc.sp());
        EXPECT(0x98c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x98c1));
        // 07 0098
        gbc.setState(0x9f7, 0xb1f9, 0xe5f0, 0x7817, 0x34b7, 0xf557, 0x1, 0x0);
        gbc.writeMem(0x9f7, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb1f9, gbc.sp());
        EXPECT(0x9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0099
        gbc.setState(0x8a29, 0xa703, 0x38b0, 0x3fda, 0xc3c6, 0x2280, 0x1, 0x0);
        gbc.writeMem(0x8a29, { 0x7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa703, gbc.sp());
        EXPECT(0x8a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a29));
        // 07 009A
        gbc.setState(0xbd73, 0xbd96, 0x1ba0, 0xf544, 0xb1f0, 0x1ccd, 0x1, 0x0);
        gbc.writeMem(0xbd73, { 0x7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd96, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbd73));
        // 07 009C
        gbc.setState(0x1197, 0x7318, 0x7d20, 0x6c8f, 0xe498, 0xc0f, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0x7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7318, gbc.sp());
        EXPECT(0x1198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 009D
        gbc.setState(0x213e, 0xa45, 0x5ed0, 0xca42, 0x5564, 0xc5c9, 0x1, 0x1);
        gbc.writeMem(0x213e, { 0x7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x213f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 009E
        gbc.setState(0xb00f, 0xdf46, 0x1750, 0x5d4d, 0x6b54, 0x2e75, 0x0, 0x0);
        gbc.writeMem(0xb00f, { 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdf46, gbc.sp());
        EXPECT(0xb010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb00f));
        // 07 009F
        gbc.setState(0xc006, 0xd7f, 0xf9a0, 0x5872, 0xee06, 0xcb05, 0x1, 0x0);
        gbc.writeMem(0xc006, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0xc007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc006));
        // 07 00A0
        gbc.setState(0x5426, 0xbc6f, 0xb3e0, 0xa643, 0x3bff, 0x7512, 0x0, 0x1);
        gbc.writeMem(0x5426, { 0x7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc6f, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00A1
        gbc.setState(0xec13, 0x2bd6, 0x1870, 0x45f2, 0x4aa2, 0x4965, 0x0, 0x1);
        gbc.writeMem(0xec13, { 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xec13));
        // 07 00A2
        gbc.setState(0xcd85, 0xb31, 0xa7e0, 0xb694, 0x34bb, 0x2f0d, 0x1, 0x0);
        gbc.writeMem(0xcd85, { 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb31, gbc.sp());
        EXPECT(0xcd86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcd85));
        // 07 00A3
        gbc.setState(0xb4cb, 0x82ca, 0x8ad0, 0x9593, 0x11b4, 0x19b0, 0x0, 0x1);
        gbc.writeMem(0xb4cb, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0xb4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb4cb));
        // 07 00A4
        gbc.setState(0xd59, 0x19a8, 0x77a0, 0xf57f, 0x6b73, 0xa2fa, 0x1, 0x1);
        gbc.writeMem(0xd59, { 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x19a8, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00A5
        gbc.setState(0xa3d4, 0x25f2, 0xb980, 0xb731, 0x350e, 0xc213, 0x0, 0x0);
        gbc.writeMem(0xa3d4, { 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0xa3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa3d4));
        // 07 00A8
        gbc.setState(0x87c6, 0xfb19, 0x2730, 0x891, 0x4928, 0xd22d, 0x1, 0x0);
        gbc.writeMem(0x87c6, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0x87c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87c6));
        // 07 00A9
        gbc.setState(0x6a6d, 0x1feb, 0xf930, 0x53fd, 0xf4b5, 0x8322, 0x0, 0x1);
        gbc.writeMem(0x6a6d, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1feb, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00AA
        gbc.setState(0x5986, 0x5cb1, 0x87f0, 0xe120, 0x2fe4, 0x7fac, 0x0, 0x0);
        gbc.writeMem(0x5986, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5cb1, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00AB
        gbc.setState(0xb8d1, 0x22e5, 0x620, 0x5426, 0x7bdf, 0x797d, 0x1, 0x0);
        gbc.writeMem(0xb8d1, { 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x22e5, gbc.sp());
        EXPECT(0xb8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb8d1));
        // 07 00AD
        gbc.setState(0xaba3, 0x211d, 0xd970, 0xc957, 0xaace, 0x4535, 0x1, 0x0);
        gbc.writeMem(0xaba3, { 0x7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x211d, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaba3));
        // 07 00AE
        gbc.setState(0x5db3, 0xf4d7, 0x3eb0, 0xa138, 0x8047, 0x8ead, 0x0, 0x1);
        gbc.writeMem(0x5db3, { 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf4d7, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00AF
        gbc.setState(0x86e, 0x50ee, 0x8bc0, 0x9818, 0x9c7d, 0x7fb5, 0x0, 0x1);
        gbc.writeMem(0x86e, { 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0x86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00B0
        gbc.setState(0x378, 0xea9e, 0x2ef0, 0x7ec7, 0x96f9, 0x14ef, 0x0, 0x1);
        gbc.writeMem(0x378, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0x379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00B1
        gbc.setState(0x609f, 0xadd1, 0xcd50, 0xf842, 0x5821, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0x609f, { 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xadd1, gbc.sp());
        EXPECT(0x60a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00B2
        gbc.setState(0xd743, 0xabc3, 0x2740, 0x181b, 0x4026, 0xb155, 0x1, 0x1);
        gbc.writeMem(0xd743, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0xd744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd743));
        // 07 00B3
        gbc.setState(0x65e1, 0x9fed, 0xd090, 0x9eba, 0xdcb8, 0xc3df, 0x0, 0x0);
        gbc.writeMem(0x65e1, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9fed, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00B4
        gbc.setState(0x3667, 0x8ee3, 0x13a0, 0xdb34, 0xea5a, 0x4fc1, 0x0, 0x0);
        gbc.writeMem(0x3667, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8ee3, gbc.sp());
        EXPECT(0x3668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00B5
        gbc.setState(0x61f7, 0xe1b3, 0x9060, 0xa3dc, 0x87ba, 0xf2db, 0x1, 0x1);
        gbc.writeMem(0x61f7, { 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0x61f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00B7
        gbc.setState(0x1a8e, 0x1562, 0x6340, 0x129e, 0x9674, 0x919, 0x0, 0x0);
        gbc.writeMem(0x1a8e, { 0x7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1562, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00B8
        gbc.setState(0x29d4, 0xb343, 0xa650, 0x30ce, 0xe1f3, 0xdd60, 0x0, 0x1);
        gbc.writeMem(0x29d4, { 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb343, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00B9
        gbc.setState(0x4483, 0x838d, 0x75f0, 0xa5c, 0x16b4, 0x9cba, 0x1, 0x0);
        gbc.writeMem(0x4483, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x838d, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00BA
        gbc.setState(0xbbf2, 0x891e, 0xf530, 0xfcc3, 0x8a85, 0xd24, 0x1, 0x1);
        gbc.writeMem(0xbbf2, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbbf2));
        // 07 00BC
        gbc.setState(0xa9b1, 0x1d11, 0xdcb0, 0x3fe7, 0xf587, 0xf367, 0x1, 0x0);
        gbc.writeMem(0xa9b1, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1d11, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa9b1));
        // 07 00BE
        gbc.setState(0xc0d7, 0x28a, 0xfe50, 0xa83d, 0x818d, 0x36b7, 0x0, 0x1);
        gbc.writeMem(0xc0d7, { 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x28a, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc0d7));
        // 07 00BF
        gbc.setState(0x8f4, 0x25fd, 0x8330, 0xdcce, 0x89e, 0xaacd, 0x1, 0x0);
        gbc.writeMem(0x8f4, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x25fd, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00C0
        gbc.setState(0xad58, 0x3e00, 0x4e40, 0xd4a0, 0x18d8, 0x1feb, 0x0, 0x0);
        gbc.writeMem(0xad58, { 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3e00, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xad58));
        // 07 00C1
        gbc.setState(0x8a4f, 0x197c, 0xef80, 0xee12, 0x6fd0, 0x99b6, 0x1, 0x0);
        gbc.writeMem(0x8a4f, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x197c, gbc.sp());
        EXPECT(0x8a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a4f));
        // 07 00C2
        gbc.setState(0xcca, 0xc541, 0x47b0, 0xaaef, 0x3633, 0x43b, 0x1, 0x1);
        gbc.writeMem(0xcca, { 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00C3
        gbc.setState(0x68c8, 0x84b5, 0xa5c0, 0x8e1a, 0x115, 0x8348, 0x1, 0x0);
        gbc.writeMem(0x68c8, { 0x7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00C4
        gbc.setState(0x9f9f, 0x68bf, 0xd680, 0xfee7, 0xd7fe, 0x3e28, 0x1, 0x0);
        gbc.writeMem(0x9f9f, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x68bf, gbc.sp());
        EXPECT(0x9fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9f9f));
        // 07 00C5
        gbc.setState(0x5b53, 0xacab, 0xcea0, 0xa01f, 0x6721, 0x14, 0x1, 0x1);
        gbc.writeMem(0x5b53, { 0x7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00C6
        gbc.setState(0x40b3, 0xc859, 0xa620, 0x5836, 0xbb93, 0xcd68, 0x0, 0x1);
        gbc.writeMem(0x40b3, { 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x40b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00C7
        gbc.setState(0x95a6, 0xca95, 0xcc10, 0xe520, 0x8650, 0xf4bb, 0x1, 0x1);
        gbc.writeMem(0x95a6, { 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0x95a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x95a6));
        // 07 00C8
        gbc.setState(0xd6eb, 0xce65, 0x7330, 0x42fc, 0x177b, 0xa891, 0x1, 0x1);
        gbc.writeMem(0xd6eb, { 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xd6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd6eb));
        // 07 00C9
        gbc.setState(0x9548, 0x1fae, 0x28c0, 0x828b, 0x902e, 0x9577, 0x0, 0x0);
        gbc.writeMem(0x9548, { 0x7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1fae, gbc.sp());
        EXPECT(0x9549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9548));
        // 07 00CA
        gbc.setState(0x915f, 0x86b1, 0xe320, 0xf2b2, 0xe882, 0x3d6c, 0x0, 0x0);
        gbc.writeMem(0x915f, { 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x915f));
        // 07 00CB
        gbc.setState(0x6231, 0xafde, 0x4df0, 0x86b6, 0xed40, 0x940a, 0x1, 0x0);
        gbc.writeMem(0x6231, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xafde, gbc.sp());
        EXPECT(0x6232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00CC
        gbc.setState(0xb8ec, 0x24a7, 0xd740, 0xb015, 0x8faa, 0xa94e, 0x1, 0x0);
        gbc.writeMem(0xb8ec, { 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0xb8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb8ec));
        // 07 00CD
        gbc.setState(0xa867, 0xaf9e, 0xba40, 0xacb, 0x7901, 0xcaf9, 0x1, 0x0);
        gbc.writeMem(0xa867, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaf9e, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa867));
        // 07 00CE
        gbc.setState(0xd524, 0x355d, 0x13d0, 0x46f2, 0x7df4, 0x36ce, 0x1, 0x1);
        gbc.writeMem(0xd524, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x355d, gbc.sp());
        EXPECT(0xd525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd524));
        // 07 00CF
        gbc.setState(0x976, 0xfe25, 0x97f0, 0x6686, 0x938e, 0xe42f, 0x1, 0x0);
        gbc.writeMem(0x976, { 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfe25, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00D0
        gbc.setState(0x8454, 0x1d58, 0x7010, 0x5a66, 0x5902, 0xc253, 0x0, 0x0);
        gbc.writeMem(0x8454, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8454));
        // 07 00D1
        gbc.setState(0xb745, 0xf547, 0x8e30, 0xfaaa, 0x2be2, 0x85f3, 0x0, 0x0);
        gbc.writeMem(0xb745, { 0x7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0xb746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb745));
        // 07 00D2
        gbc.setState(0xba63, 0x4206, 0x7100, 0xc953, 0x672, 0xe294, 0x1, 0x1);
        gbc.writeMem(0xba63, { 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4206, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xba63));
        // 07 00D3
        gbc.setState(0xc19f, 0xd184, 0x900, 0xd9c6, 0xc42d, 0xee7b, 0x1, 0x1);
        gbc.writeMem(0xc19f, { 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd184, gbc.sp());
        EXPECT(0xc1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc19f));
        // 07 00D4
        gbc.setState(0x2eb3, 0x60e3, 0xcf50, 0x5c2c, 0xde03, 0x38d9, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0x2eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00D6
        gbc.setState(0x7bf9, 0x53ee, 0x25d0, 0xb5bf, 0xb0ed, 0x24ee, 0x1, 0x1);
        gbc.writeMem(0x7bf9, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00D7
        gbc.setState(0x4ea6, 0x99ec, 0x9800, 0xba15, 0x37f9, 0xc7b2, 0x0, 0x1);
        gbc.writeMem(0x4ea6, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00D8
        gbc.setState(0xa222, 0x8942, 0xdc80, 0x992f, 0xbab0, 0x6276, 0x0, 0x0);
        gbc.writeMem(0xa222, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0xa223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa222));
        // 07 00D9
        gbc.setState(0xe356, 0xc1d4, 0x1d50, 0xd62b, 0xaa70, 0x37c6, 0x0, 0x0);
        gbc.writeMem(0xe356, { 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe356));
        // 07 00DA
        gbc.setState(0x6269, 0x4771, 0xcf40, 0x548e, 0x6cda, 0x6c, 0x1, 0x1);
        gbc.writeMem(0x6269, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4771, gbc.sp());
        EXPECT(0x626a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00DB
        gbc.setState(0x9973, 0x6052, 0xd2c0, 0xf, 0x3042, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0x9973, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6052, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9973));
        // 07 00DC
        gbc.setState(0xcb10, 0xdc9d, 0x1440, 0xd9e5, 0xd99f, 0x11e2, 0x0, 0x1);
        gbc.writeMem(0xcb10, { 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdc9d, gbc.sp());
        EXPECT(0xcb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcb10));
        // 07 00DD
        gbc.setState(0x7735, 0xf93b, 0xbd0, 0xaa7, 0x432b, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x7735, { 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf93b, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00DE
        gbc.setState(0x5e9b, 0xc75f, 0xd0e0, 0xc825, 0xc8c9, 0x787d, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00DF
        gbc.setState(0x5ce2, 0x5847, 0x88d0, 0x63f2, 0xe046, 0x493f, 0x0, 0x1);
        gbc.writeMem(0x5ce2, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5847, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00E0
        gbc.setState(0xcbe5, 0x7191, 0xde50, 0xc0f7, 0xf25f, 0xa39d, 0x0, 0x0);
        gbc.writeMem(0xcbe5, { 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7191, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcbe5));
        // 07 00E1
        gbc.setState(0x3f53, 0x1ade, 0xb850, 0x482f, 0xc49e, 0x7d11, 0x1, 0x1);
        gbc.writeMem(0x3f53, { 0x7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1ade, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00E2
        gbc.setState(0x9d83, 0xa3ee, 0x8740, 0x532b, 0x7250, 0x14fa, 0x0, 0x0);
        gbc.writeMem(0x9d83, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa3ee, gbc.sp());
        EXPECT(0x9d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9d83));
        // 07 00E3
        gbc.setState(0xed5c, 0xdfa0, 0xb5c0, 0x8424, 0xa566, 0x3764, 0x1, 0x1);
        gbc.writeMem(0xed5c, { 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xed5c));
        // 07 00E4
        gbc.setState(0x2e92, 0x555, 0x37a0, 0x47dc, 0x3832, 0x828b, 0x1, 0x0);
        gbc.writeMem(0x2e92, { 0x7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x555, gbc.sp());
        EXPECT(0x2e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00E5
        gbc.setState(0x9906, 0x8384, 0x75f0, 0x4677, 0x8aaf, 0xec8f, 0x0, 0x1);
        gbc.writeMem(0x9906, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8384, gbc.sp());
        EXPECT(0x9907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9906));
        // 07 00E6
        gbc.setState(0x617a, 0x9cac, 0xdec0, 0xd971, 0x37bd, 0x2934, 0x1, 0x1);
        gbc.writeMem(0x617a, { 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00E7
        gbc.setState(0x3709, 0xf060, 0xf140, 0x761c, 0x6c22, 0x5601, 0x1, 0x1);
        gbc.writeMem(0x3709, { 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x370a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00E8
        gbc.setState(0x87fc, 0xf3dd, 0x210, 0x6806, 0x940, 0xb7e5, 0x0, 0x1);
        gbc.writeMem(0x87fc, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x87fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87fc));
        // 07 00E9
        gbc.setState(0xc5e9, 0xdcc7, 0x6c90, 0x4b66, 0xc24, 0xa387, 0x0, 0x1);
        gbc.writeMem(0xc5e9, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0xc5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc5e9));
        // 07 00EB
        gbc.setState(0x66ef, 0xfb6e, 0x36b0, 0x7c35, 0x51d8, 0xb2a, 0x1, 0x0);
        gbc.writeMem(0x66ef, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0x66f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00EC
        gbc.setState(0x22cd, 0x1223, 0xdce0, 0xd51d, 0x829, 0xbe3e, 0x0, 0x1);
        gbc.writeMem(0x22cd, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00ED
        gbc.setState(0x50b3, 0x2071, 0xfd40, 0x8062, 0xdc94, 0xb57f, 0x0, 0x1);
        gbc.writeMem(0x50b3, { 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0x50b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00EE
        gbc.setState(0xd4f9, 0xa92f, 0x6c70, 0x1c87, 0xeca2, 0xbb85, 0x1, 0x0);
        gbc.writeMem(0xd4f9, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa92f, gbc.sp());
        EXPECT(0xd4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd4f9));
        // 07 00EF
        gbc.setState(0x43da, 0x2d79, 0x4450, 0x5dbe, 0xc6e6, 0xc38, 0x0, 0x0);
        gbc.writeMem(0x43da, { 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2d79, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00F0
        gbc.setState(0x964e, 0x4fa4, 0x9270, 0x686, 0x33ac, 0xa07f, 0x0, 0x1);
        gbc.writeMem(0x964e, { 0x7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4fa4, gbc.sp());
        EXPECT(0x964f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x964e));
        // 07 00F1
        gbc.setState(0x45f9, 0x54d, 0xfca0, 0x116a, 0xaa89, 0x3bff, 0x0, 0x1);
        gbc.writeMem(0x45f9, { 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00F2
        gbc.setState(0x146e, 0x32d0, 0x6c30, 0xaff4, 0x219a, 0x6ccf, 0x0, 0x1);
        gbc.writeMem(0x146e, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x146f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00F3
        gbc.setState(0x4f72, 0xd90c, 0xd3d0, 0xb64d, 0x2463, 0x756f, 0x0, 0x1);
        gbc.writeMem(0x4f72, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0x4f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 00F4
        gbc.setState(0x58a6, 0x3d9d, 0x1f50, 0x7198, 0x6f1d, 0xb452, 0x0, 0x1);
        gbc.writeMem(0x58a6, { 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00F5
        gbc.setState(0xd595, 0x84ba, 0x9870, 0xe4ad, 0x5803, 0x9abc, 0x0, 0x0);
        gbc.writeMem(0xd595, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0xd596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd595));
        // 07 00F6
        gbc.setState(0xbb73, 0x238, 0x7b60, 0x3af8, 0xdfc7, 0x3e8a, 0x1, 0x0);
        gbc.writeMem(0xbb73, { 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0xbb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbb73));
        // 07 00F7
        gbc.setState(0x279c, 0x7ddc, 0xcb0, 0xcf73, 0x7745, 0xe6c9, 0x0, 0x1);
        gbc.writeMem(0x279c, { 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 00F8
        gbc.setState(0xd91a, 0x5fc0, 0x6960, 0x46d7, 0x7a31, 0xd980, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xd91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd91a));
        // 07 00F9
        gbc.setState(0xd91a, 0x23f5, 0x7680, 0x7292, 0xb3cc, 0xf304, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0x7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x23f5, gbc.sp());
        EXPECT(0xd91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd91a));
        // 07 00FA
        gbc.setState(0xc759, 0x9d10, 0x2d20, 0x9e4, 0xfa1d, 0xa753, 0x0, 0x0);
        gbc.writeMem(0xc759, { 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9d10, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc759));
        // 07 00FC
        gbc.setState(0xd800, 0xc639, 0x9870, 0xbcaa, 0xf309, 0x9b03, 0x0, 0x0);
        gbc.writeMem(0xd800, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd800));
        // 07 00FD
        gbc.setState(0xc2ed, 0x595d, 0x18e0, 0x22b2, 0xa067, 0x4922, 0x1, 0x0);
        gbc.writeMem(0xc2ed, { 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x595d, gbc.sp());
        EXPECT(0xc2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc2ed));
        // 07 00FE
        gbc.setState(0xd773, 0x3deb, 0x3400, 0xf728, 0xd40, 0xaf2e, 0x0, 0x0);
        gbc.writeMem(0xd773, { 0x7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0xd774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd773));
        // 07 00FF
        gbc.setState(0xb5e, 0x8410, 0x1a40, 0x94b4, 0xf0b4, 0xda5, 0x1, 0x0);
        gbc.writeMem(0xb5e, { 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8410, gbc.sp());
        EXPECT(0xb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0101
        gbc.setState(0x9934, 0xb4cb, 0xc350, 0x8aab, 0xf14f, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x9934, { 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0x9935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9934));
        // 07 0103
        gbc.setState(0x958d, 0xad37, 0xfc50, 0x7cf8, 0x102a, 0xc7f6, 0x1, 0x0);
        gbc.writeMem(0x958d, { 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x958e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x958d));
        // 07 0104
        gbc.setState(0x80a3, 0x41cb, 0x3e60, 0x1e44, 0xc1af, 0xbb65, 0x0, 0x1);
        gbc.writeMem(0x80a3, { 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x80a3));
        // 07 0105
        gbc.setState(0x9ea9, 0xfa05, 0x96f0, 0xbc67, 0x4626, 0x3f17, 0x1, 0x0);
        gbc.writeMem(0x9ea9, { 0x7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfa05, gbc.sp());
        EXPECT(0x9eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9ea9));
        // 07 0106
        gbc.setState(0xa6f3, 0x4fa0, 0xf5b0, 0x3f92, 0x4424, 0x5a53, 0x1, 0x1);
        gbc.writeMem(0xa6f3, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa6f3));
        // 07 0107
        gbc.setState(0x5cec, 0xb4ce, 0x5db0, 0xfe35, 0xc090, 0xb0dc, 0x1, 0x0);
        gbc.writeMem(0x5cec, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0x5ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0108
        gbc.setState(0x9fa3, 0xc5c9, 0xa1e0, 0xe37f, 0x6353, 0xd9ec, 0x0, 0x0);
        gbc.writeMem(0x9fa3, { 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc5c9, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9fa3));
        // 07 0109
        gbc.setState(0xa1eb, 0x4fe1, 0xfa0, 0x496, 0xdb95, 0x2f9c, 0x0, 0x0);
        gbc.writeMem(0xa1eb, { 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4fe1, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa1eb));
        // 07 010A
        gbc.setState(0xa1bc, 0xc889, 0xc230, 0xd3c5, 0xc775, 0x1cd7, 0x1, 0x0);
        gbc.writeMem(0xa1bc, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa1bc));
        // 07 010C
        gbc.setState(0xdc85, 0xff0e, 0x2b50, 0x931f, 0xbd54, 0x8971, 0x1, 0x1);
        gbc.writeMem(0xdc85, { 0x7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xdc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdc85));
        // 07 010D
        gbc.setState(0xb406, 0x3d10, 0x2380, 0xbab4, 0x22d0, 0xa1e3, 0x1, 0x0);
        gbc.writeMem(0xb406, { 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0xb407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb406));
        // 07 010E
        gbc.setState(0x8fea, 0xee29, 0x4620, 0x804b, 0xe22a, 0x2250, 0x0, 0x1);
        gbc.writeMem(0x8fea, { 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0x8feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8fea));
        // 07 010F
        gbc.setState(0x3801, 0x4a54, 0x7d50, 0x9d51, 0x9cab, 0xdc9a, 0x0, 0x0);
        gbc.writeMem(0x3801, { 0x7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4a54, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0110
        gbc.setState(0x580c, 0x6390, 0x7050, 0x6b82, 0xeccc, 0xf0de, 0x1, 0x0);
        gbc.writeMem(0x580c, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6390, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0111
        gbc.setState(0x3df8, 0xa972, 0xd600, 0xa69f, 0xa37b, 0xe806, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa972, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0112
        gbc.setState(0x1221, 0xfee7, 0x260, 0x6b67, 0x3431, 0xc518, 0x1, 0x0);
        gbc.writeMem(0x1221, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfee7, gbc.sp());
        EXPECT(0x1222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0113
        gbc.setState(0x5f62, 0x5509, 0xfc90, 0x4ce, 0x9d06, 0xde69, 0x0, 0x1);
        gbc.writeMem(0x5f62, { 0x7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5509, gbc.sp());
        EXPECT(0x5f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0114
        gbc.setState(0x8c1f, 0x9ecf, 0xcb30, 0x21ce, 0x7119, 0xbb16, 0x0, 0x0);
        gbc.writeMem(0x8c1f, { 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8c1f));
        // 07 0115
        gbc.setState(0x75fc, 0xf6c3, 0x5900, 0x5e61, 0x9589, 0x8537, 0x0, 0x0);
        gbc.writeMem(0x75fc, { 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0116
        gbc.setState(0x7e1d, 0x2420, 0xe3f0, 0xec93, 0x3c, 0x260, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2420, gbc.sp());
        EXPECT(0x7e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0117
        gbc.setState(0x82a3, 0x99b1, 0x3920, 0x3061, 0x6f46, 0x770, 0x1, 0x0);
        gbc.writeMem(0x82a3, { 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x99b1, gbc.sp());
        EXPECT(0x82a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x82a3));
        // 07 0118
        gbc.setState(0x3bd, 0x47fc, 0xe080, 0xc00a, 0x3cc0, 0xedea, 0x1, 0x0);
        gbc.writeMem(0x3bd, { 0x7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x47fc, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0119
        gbc.setState(0x62b4, 0x7eb7, 0x6be0, 0x4826, 0x91aa, 0x133b, 0x1, 0x0);
        gbc.writeMem(0x62b4, { 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0x62b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 011A
        gbc.setState(0xa226, 0xae44, 0x6af0, 0xb09e, 0x866c, 0x8513, 0x1, 0x1);
        gbc.writeMem(0xa226, { 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa226));
        // 07 011B
        gbc.setState(0x4a9e, 0x18ba, 0xda00, 0x7c45, 0xec98, 0x1bd0, 0x0, 0x0);
        gbc.writeMem(0x4a9e, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0x4a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 011C
        gbc.setState(0x9d1a, 0xb1db, 0xe510, 0x1ccf, 0x7896, 0xebc2, 0x1, 0x1);
        gbc.writeMem(0x9d1a, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0x9d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9d1a));
        // 07 011D
        gbc.setState(0x2193, 0x10a0, 0x5f70, 0x86bc, 0xb883, 0xd1cf, 0x0, 0x0);
        gbc.writeMem(0x2193, { 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x10a0, gbc.sp());
        EXPECT(0x2194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 011E
        gbc.setState(0xc05d, 0xf5dc, 0xb9f0, 0x7f2f, 0xfa69, 0xf131, 0x1, 0x0);
        gbc.writeMem(0xc05d, { 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf5dc, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc05d));
        // 07 011F
        gbc.setState(0xa2e1, 0xb92b, 0x1000, 0x4ce4, 0x92c0, 0x63e1, 0x0, 0x0);
        gbc.writeMem(0xa2e1, { 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb92b, gbc.sp());
        EXPECT(0xa2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa2e1));
        // 07 0121
        gbc.setState(0xb440, 0x7173, 0xb350, 0x2c9d, 0xf5ef, 0x258, 0x1, 0x1);
        gbc.writeMem(0xb440, { 0x7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0xb441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb440));
        // 07 0122
        gbc.setState(0x6817, 0xfb8, 0x7610, 0xcebe, 0x373a, 0x4d03, 0x0, 0x1);
        gbc.writeMem(0x6817, { 0x7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x6818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0123
        gbc.setState(0x3c02, 0xa530, 0xd800, 0x280f, 0xcd6a, 0x7ceb, 0x0, 0x0);
        gbc.writeMem(0x3c02, { 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa530, gbc.sp());
        EXPECT(0x3c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0124
        gbc.setState(0x8df2, 0xed67, 0xd670, 0x5f5e, 0xa947, 0xa5b7, 0x1, 0x0);
        gbc.writeMem(0x8df2, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xed67, gbc.sp());
        EXPECT(0x8df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8df2));
        // 07 0125
        gbc.setState(0xcc2d, 0xee0c, 0x4140, 0x1b2c, 0x49d1, 0x685, 0x0, 0x0);
        gbc.writeMem(0xcc2d, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee0c, gbc.sp());
        EXPECT(0xcc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcc2d));
        // 07 0126
        gbc.setState(0xb48f, 0x83cd, 0x1ef0, 0xf5f4, 0x445c, 0xb734, 0x1, 0x0);
        gbc.writeMem(0xb48f, { 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb48f));
        // 07 0127
        gbc.setState(0x5707, 0xa928, 0x3080, 0xd70b, 0x3e14, 0xada2, 0x1, 0x0);
        gbc.writeMem(0x5707, { 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa928, gbc.sp());
        EXPECT(0x5708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0128
        gbc.setState(0x7931, 0x855c, 0xdb90, 0xc9b5, 0x759c, 0x315b, 0x1, 0x0);
        gbc.writeMem(0x7931, { 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0x7932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0129
        gbc.setState(0x7e28, 0xa553, 0x8290, 0x335b, 0xa69f, 0xf5bf, 0x0, 0x1);
        gbc.writeMem(0x7e28, { 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0x7e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 012A
        gbc.setState(0x42c9, 0xe945, 0x7710, 0x7438, 0x6a4b, 0x612f, 0x1, 0x1);
        gbc.writeMem(0x42c9, { 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe945, gbc.sp());
        EXPECT(0x42ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 012B
        gbc.setState(0x56af, 0xc74b, 0xd390, 0x983, 0x56f0, 0x719c, 0x0, 0x1);
        gbc.writeMem(0x56af, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 012C
        gbc.setState(0x1a85, 0x4f68, 0x5360, 0xa121, 0xaa37, 0xc776, 0x0, 0x1);
        gbc.writeMem(0x1a85, { 0x7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4f68, gbc.sp());
        EXPECT(0x1a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 012D
        gbc.setState(0x25e7, 0x119b, 0xb140, 0x8997, 0xf260, 0x9321, 0x1, 0x1);
        gbc.writeMem(0x25e7, { 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0x25e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 012F
        gbc.setState(0x1a8f, 0x3902, 0x20d0, 0xe8e5, 0x588b, 0xa27e, 0x0, 0x1);
        gbc.writeMem(0x1a8f, { 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3902, gbc.sp());
        EXPECT(0x1a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0130
        gbc.setState(0xb979, 0xcd77, 0x4080, 0x7835, 0xf8f2, 0xb436, 0x0, 0x1);
        gbc.writeMem(0xb979, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcd77, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb979));
        // 07 0131
        gbc.setState(0x6d56, 0xbdfe, 0xf6a0, 0xed30, 0xf67d, 0xb100, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0133
        gbc.setState(0x5a00, 0x12a5, 0x4d30, 0xb80e, 0xd429, 0x915d, 0x0, 0x1);
        gbc.writeMem(0x5a00, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0134
        gbc.setState(0x93ca, 0xb68e, 0x43c0, 0xc6ea, 0x918d, 0x3704, 0x1, 0x1);
        gbc.writeMem(0x93ca, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb68e, gbc.sp());
        EXPECT(0x93cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x93ca));
        // 07 0135
        gbc.setState(0x4be3, 0x859e, 0x5d30, 0x13e3, 0x6ddf, 0x20ae, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0136
        gbc.setState(0x1b39, 0x9ed7, 0x86f0, 0x2add, 0xb464, 0xb787, 0x1, 0x1);
        gbc.writeMem(0x1b39, { 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9ed7, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0137
        gbc.setState(0xb258, 0x7066, 0x5820, 0x1f7, 0x6817, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0xb258, { 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7066, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb258));
        // 07 0138
        gbc.setState(0x8217, 0x9d8c, 0xba10, 0xde3e, 0xb7fb, 0x2e54, 0x0, 0x0);
        gbc.writeMem(0x8217, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d8c, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8217));
        // 07 013A
        gbc.setState(0xab1e, 0x6156, 0x4300, 0xb36, 0x677a, 0xda43, 0x0, 0x0);
        gbc.writeMem(0xab1e, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6156, gbc.sp());
        EXPECT(0xab1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xab1e));
        // 07 013B
        gbc.setState(0xdeb3, 0xea98, 0xef50, 0xb892, 0xbfa3, 0xcde5, 0x0, 0x1);
        gbc.writeMem(0xdeb3, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0xdeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdeb3));
        // 07 013C
        gbc.setState(0xd336, 0xbede, 0x15a0, 0xe5d5, 0x20c4, 0xd6a, 0x0, 0x1);
        gbc.writeMem(0xd336, { 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd336));
        // 07 013D
        gbc.setState(0xeb2, 0x7fa1, 0x5090, 0x3d0b, 0x735d, 0x634a, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 013E
        gbc.setState(0xa0f0, 0x5280, 0xf090, 0xb44e, 0xbd54, 0x49e3, 0x1, 0x1);
        gbc.writeMem(0xa0f0, { 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa0f0));
        // 07 013F
        gbc.setState(0xb286, 0x555d, 0x83e0, 0x1b5e, 0x8b10, 0x8948, 0x1, 0x1);
        gbc.writeMem(0xb286, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0xb287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb286));
        // 07 0141
        gbc.setState(0x745, 0x33b0, 0x9cd0, 0x8190, 0x6924, 0xbedc, 0x1, 0x1);
        gbc.writeMem(0x745, { 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0142
        gbc.setState(0xa603, 0x1182, 0x4720, 0x7b08, 0xf482, 0x6c18, 0x1, 0x0);
        gbc.writeMem(0xa603, { 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1182, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa603));
        // 07 0143
        gbc.setState(0x77e7, 0xd091, 0x5bc0, 0x6bf2, 0x7d20, 0x9d81, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd091, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0144
        gbc.setState(0x9c78, 0xef91, 0x8760, 0x1088, 0x1656, 0x9c5f, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xef91, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9c78));
        // 07 0145
        gbc.setState(0x5729, 0xfaeb, 0x1770, 0x1f20, 0xbb75, 0xb73c, 0x1, 0x0);
        gbc.writeMem(0x5729, { 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0146
        gbc.setState(0x467, 0x72dd, 0x830, 0x616c, 0xd73d, 0xa244, 0x0, 0x0);
        gbc.writeMem(0x467, { 0x7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x72dd, gbc.sp());
        EXPECT(0x468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0147
        gbc.setState(0x17f6, 0x2953, 0xc060, 0xf2d2, 0xa704, 0x5bd4, 0x1, 0x1);
        gbc.writeMem(0x17f6, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x17f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0148
        gbc.setState(0x9ecb, 0xe705, 0x5840, 0x977e, 0xcd1, 0x379c, 0x0, 0x0);
        gbc.writeMem(0x9ecb, { 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x9ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9ecb));
        // 07 0149
        gbc.setState(0x3449, 0xc064, 0xaad0, 0xaceb, 0x93c1, 0x87c6, 0x0, 0x0);
        gbc.writeMem(0x3449, { 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x344a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 014A
        gbc.setState(0xc720, 0xfc52, 0x640, 0x6e75, 0x6eb6, 0xd40f, 0x0, 0x1);
        gbc.writeMem(0xc720, { 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0xc721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc720));
        // 07 014B
        gbc.setState(0x5719, 0x64d5, 0x1a40, 0x2c2f, 0x659b, 0x59a4, 0x1, 0x0);
        gbc.writeMem(0x5719, { 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64d5, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 014C
        gbc.setState(0xa878, 0x93f0, 0x9b90, 0x8232, 0xd711, 0x27f6, 0x0, 0x0);
        gbc.writeMem(0xa878, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x93f0, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa878));
        // 07 014D
        gbc.setState(0xa9fd, 0x87dc, 0x57f0, 0xb883, 0x6e87, 0x328d, 0x0, 0x1);
        gbc.writeMem(0xa9fd, { 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x87dc, gbc.sp());
        EXPECT(0xa9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa9fd));
        // 07 014E
        gbc.setState(0x1478, 0x534b, 0x3190, 0x4118, 0xe215, 0xe985, 0x0, 0x0);
        gbc.writeMem(0x1478, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x534b, gbc.sp());
        EXPECT(0x1479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 014F
        gbc.setState(0xd1b9, 0x84a9, 0x91b0, 0x5e95, 0xa502, 0x3ff, 0x0, 0x0);
        gbc.writeMem(0xd1b9, { 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x84a9, gbc.sp());
        EXPECT(0xd1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd1b9));
        // 07 0150
        gbc.setState(0x8647, 0x3b1e, 0x7a30, 0x9990, 0xbc59, 0x7a6c, 0x1, 0x0);
        gbc.writeMem(0x8647, { 0x7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3b1e, gbc.sp());
        EXPECT(0x8648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8647));
        // 07 0151
        gbc.setState(0x3d17, 0x887e, 0x99e0, 0x7af1, 0xe38, 0x26c7, 0x0, 0x0);
        gbc.writeMem(0x3d17, { 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0152
        gbc.setState(0xc1e1, 0x10da, 0x6630, 0x14be, 0x53fa, 0xc34e, 0x0, 0x0);
        gbc.writeMem(0xc1e1, { 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x10da, gbc.sp());
        EXPECT(0xc1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc1e1));
        // 07 0153
        gbc.setState(0x44a4, 0x8d76, 0xc180, 0xd0c0, 0xd6e5, 0x5e20, 0x1, 0x0);
        gbc.writeMem(0x44a4, { 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8d76, gbc.sp());
        EXPECT(0x44a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0154
        gbc.setState(0xddd7, 0x505d, 0x730, 0xb7a5, 0x40b4, 0x7dfb, 0x0, 0x0);
        gbc.writeMem(0xddd7, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x505d, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xddd7));
        // 07 0155
        gbc.setState(0xe412, 0xa330, 0xfe50, 0xb3e3, 0x416, 0x246f, 0x0, 0x1);
        gbc.writeMem(0xe412, { 0x7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa330, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe412));
        // 07 0157
        gbc.setState(0x713c, 0xc3c0, 0xee60, 0x73eb, 0xa624, 0x7bea, 0x0, 0x0);
        gbc.writeMem(0x713c, { 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc3c0, gbc.sp());
        EXPECT(0x713d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0158
        gbc.setState(0x7e03, 0xbb5b, 0x2e60, 0xdf7a, 0x4312, 0x999d, 0x0, 0x0);
        gbc.writeMem(0x7e03, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbb5b, gbc.sp());
        EXPECT(0x7e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0159
        gbc.setState(0x7d8a, 0xf218, 0xd2f0, 0xe551, 0x7107, 0x1e1c, 0x1, 0x0);
        gbc.writeMem(0x7d8a, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf218, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 015A
        gbc.setState(0x5d6a, 0x4cae, 0x4040, 0x3d80, 0x6b5c, 0xa08b, 0x1, 0x0);
        gbc.writeMem(0x5d6a, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x5d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 015B
        gbc.setState(0x440, 0xa986, 0x3a60, 0x2123, 0xaa2, 0x7060, 0x1, 0x1);
        gbc.writeMem(0x440, { 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 015D
        gbc.setState(0x7276, 0xef1c, 0x2520, 0xdbfd, 0x5502, 0xf31e, 0x0, 0x1);
        gbc.writeMem(0x7276, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0x7277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 015E
        gbc.setState(0x2f2, 0x93dd, 0xf130, 0x7454, 0xc821, 0x816, 0x1, 0x0);
        gbc.writeMem(0x2f2, { 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x93dd, gbc.sp());
        EXPECT(0x2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 015F
        gbc.setState(0xaf1c, 0x2eb8, 0x1a30, 0x47c, 0x4af9, 0xfc5b, 0x0, 0x0);
        gbc.writeMem(0xaf1c, { 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2eb8, gbc.sp());
        EXPECT(0xaf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf1c));
        // 07 0160
        gbc.setState(0x43a4, 0xe906, 0x2270, 0xde10, 0x11e8, 0xebbd, 0x0, 0x0);
        gbc.writeMem(0x43a4, { 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0161
        gbc.setState(0x84ce, 0x3be4, 0xe720, 0x7d72, 0x5412, 0x275b, 0x0, 0x0);
        gbc.writeMem(0x84ce, { 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0x84cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x84ce));
        // 07 0162
        gbc.setState(0x8602, 0x9986, 0x80f0, 0x376d, 0x34fd, 0xa85c, 0x1, 0x0);
        gbc.writeMem(0x8602, { 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9986, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8602));
        // 07 0163
        gbc.setState(0x1403, 0xc2da, 0xf640, 0x57ef, 0x13ec, 0xfe91, 0x1, 0x0);
        gbc.writeMem(0x1403, { 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0164
        gbc.setState(0xbf19, 0x6ca, 0x410, 0xc05e, 0x105c, 0x2ec3, 0x1, 0x1);
        gbc.writeMem(0xbf19, { 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0xbf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbf19));
        // 07 0165
        gbc.setState(0x3c18, 0x6848, 0xa9f0, 0x6fa3, 0xf975, 0xd517, 0x0, 0x0);
        gbc.writeMem(0x3c18, { 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x3c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0166
        gbc.setState(0xc405, 0xd455, 0xa800, 0x2188, 0x9c35, 0x3b8a, 0x1, 0x0);
        gbc.writeMem(0xc405, { 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0xc406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc405));
        // 07 0167
        gbc.setState(0x8e48, 0x53d4, 0xfb40, 0x269, 0x3c4d, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x8e48, { 0x7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x8e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e48));
        // 07 0168
        gbc.setState(0xcaf3, 0x8818, 0x7b90, 0x5ea3, 0xeae6, 0x4851, 0x0, 0x0);
        gbc.writeMem(0xcaf3, { 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8818, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcaf3));
        // 07 0169
        gbc.setState(0xc31a, 0x2ff4, 0xcf70, 0xd152, 0x4502, 0x313d, 0x0, 0x0);
        gbc.writeMem(0xc31a, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2ff4, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc31a));
        // 07 016A
        gbc.setState(0x12d3, 0x882, 0x1e00, 0x549a, 0x6ddc, 0xdbca, 0x1, 0x0);
        gbc.writeMem(0x12d3, { 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 016B
        gbc.setState(0x886d, 0xaaba, 0xbe40, 0x9174, 0x95e3, 0xb13d, 0x1, 0x0);
        gbc.writeMem(0x886d, { 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaaba, gbc.sp());
        EXPECT(0x886e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x886d));
        // 07 016C
        gbc.setState(0x8855, 0x38a7, 0x5800, 0xcb28, 0x1b03, 0x5c45, 0x0, 0x0);
        gbc.writeMem(0x8855, { 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8855));
        // 07 016D
        gbc.setState(0xafea, 0xa663, 0x83d0, 0x4a41, 0xf270, 0xae81, 0x0, 0x0);
        gbc.writeMem(0xafea, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa663, gbc.sp());
        EXPECT(0xafeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xafea));
        // 07 016F
        gbc.setState(0xdc9c, 0xbbff, 0x3270, 0x32de, 0x456, 0xcb11, 0x1, 0x0);
        gbc.writeMem(0xdc9c, { 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbbff, gbc.sp());
        EXPECT(0xdc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdc9c));
        // 07 0170
        gbc.setState(0x6b13, 0xccdd, 0xb2d0, 0x832d, 0x97f1, 0x1a85, 0x1, 0x0);
        gbc.writeMem(0x6b13, { 0x7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xccdd, gbc.sp());
        EXPECT(0x6b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0171
        gbc.setState(0xba6b, 0xc891, 0xf4d0, 0xf824, 0x310f, 0x6430, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc891, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xba6b));
        // 07 0172
        gbc.setState(0x1377, 0x4357, 0x1410, 0x5812, 0x24ed, 0xf73c, 0x1, 0x0);
        gbc.writeMem(0x1377, { 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0173
        gbc.setState(0xd785, 0x1038, 0x8ab0, 0x47a3, 0x1b09, 0x274f, 0x0, 0x0);
        gbc.writeMem(0xd785, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1038, gbc.sp());
        EXPECT(0xd786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd785));
        // 07 0174
        gbc.setState(0x87a3, 0x77b4, 0xa9d0, 0x24e6, 0xce0f, 0x9ad1, 0x0, 0x0);
        gbc.writeMem(0x87a3, { 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0x87a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87a3));
        // 07 0175
        gbc.setState(0x4dc6, 0xf4e7, 0x2e90, 0x7e43, 0x6174, 0xc946, 0x0, 0x0);
        gbc.writeMem(0x4dc6, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf4e7, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0176
        gbc.setState(0x5ba3, 0x6d2c, 0x31d0, 0xe447, 0x94e8, 0xa419, 0x1, 0x0);
        gbc.writeMem(0x5ba3, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6d2c, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0177
        gbc.setState(0x8bde, 0xb194, 0xb4d0, 0x1d7e, 0x888a, 0x7559, 0x0, 0x0);
        gbc.writeMem(0x8bde, { 0x7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb194, gbc.sp());
        EXPECT(0x8bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8bde));
        // 07 0178
        gbc.setState(0x7df9, 0x55f, 0x7b0, 0xd8ce, 0xe78f, 0x79d5, 0x1, 0x1);
        gbc.writeMem(0x7df9, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x55f, gbc.sp());
        EXPECT(0x7dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0179
        gbc.setState(0x9530, 0x127a, 0xd90, 0x36fd, 0x9cb6, 0x32cc, 0x0, 0x1);
        gbc.writeMem(0x9530, { 0x7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x127a, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9530));
        // 07 017A
        gbc.setState(0x7cb2, 0x2098, 0x790, 0xdd4d, 0xad8b, 0xede, 0x1, 0x0);
        gbc.writeMem(0x7cb2, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2098, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 017B
        gbc.setState(0x203, 0xaae7, 0x5f0, 0x5cdf, 0x6d5a, 0xcd04, 0x1, 0x0);
        gbc.writeMem(0x203, { 0x7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 017C
        gbc.setState(0xc238, 0x135f, 0x90d0, 0x8318, 0x3d20, 0x6f5, 0x1, 0x0);
        gbc.writeMem(0xc238, { 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x135f, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc238));
        // 07 017D
        gbc.setState(0xd550, 0x3229, 0xec70, 0x611e, 0x93ce, 0xa2d1, 0x1, 0x1);
        gbc.writeMem(0xd550, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3229, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd550));
        // 07 017E
        gbc.setState(0x5621, 0x95, 0x7ee0, 0x4a71, 0xb8af, 0x753d, 0x0, 0x1);
        gbc.writeMem(0x5621, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x95, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 017F
        gbc.setState(0x371f, 0x6cc, 0x88d0, 0x1873, 0x4d4, 0x9c19, 0x1, 0x1);
        gbc.writeMem(0x371f, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0180
        gbc.setState(0xd73d, 0xa44c, 0x4ef0, 0x1ebc, 0xa38d, 0x6a25, 0x0, 0x1);
        gbc.writeMem(0xd73d, { 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd73d));
        // 07 0181
        gbc.setState(0xbca8, 0x3b65, 0x4190, 0x90ca, 0xf3b6, 0xda3e, 0x1, 0x0);
        gbc.writeMem(0xbca8, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3b65, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbca8));
        // 07 0184
        gbc.setState(0x7fbe, 0x4b1d, 0x3940, 0x1176, 0xc906, 0x7b70, 0x0, 0x1);
        gbc.writeMem(0x7fbe, { 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x7fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0185
        gbc.setState(0x9f4e, 0x1182, 0xec80, 0xfdc3, 0xfba1, 0x78cd, 0x1, 0x1);
        gbc.writeMem(0x9f4e, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1182, gbc.sp());
        EXPECT(0x9f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9f4e));
        // 07 0186
        gbc.setState(0xcc45, 0x3d96, 0x6f0, 0xac75, 0x2594, 0xf5b1, 0x0, 0x1);
        gbc.writeMem(0xcc45, { 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0xcc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcc45));
        // 07 0187
        gbc.setState(0x9662, 0x469b, 0xdfb0, 0xb88b, 0xa914, 0xb45d, 0x1, 0x0);
        gbc.writeMem(0x9662, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x469b, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9662));
        // 07 0188
        gbc.setState(0xca8a, 0xe56d, 0xc5c0, 0x5b19, 0xcb28, 0x397f, 0x0, 0x0);
        gbc.writeMem(0xca8a, { 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe56d, gbc.sp());
        EXPECT(0xca8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xca8a));
        // 07 0189
        gbc.setState(0xc785, 0x17be, 0xab10, 0xd0d1, 0x3ce7, 0x8321, 0x1, 0x1);
        gbc.writeMem(0xc785, { 0x7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0xc786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc785));
        // 07 018A
        gbc.setState(0x2dca, 0xd735, 0xb390, 0x3882, 0x1ee8, 0x2f9e, 0x0, 0x0);
        gbc.writeMem(0x2dca, { 0x7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd735, gbc.sp());
        EXPECT(0x2dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 018B
        gbc.setState(0x4a74, 0x8b54, 0x8740, 0x19cd, 0x3cb0, 0x2e47, 0x1, 0x0);
        gbc.writeMem(0x4a74, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8b54, gbc.sp());
        EXPECT(0x4a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 018C
        gbc.setState(0x6e12, 0xd21f, 0x7c50, 0x25e4, 0xc552, 0x81fb, 0x0, 0x0);
        gbc.writeMem(0x6e12, { 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0x6e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 018D
        gbc.setState(0x4c0a, 0x1d8a, 0x3600, 0xe6ec, 0xe063, 0xa0b1, 0x0, 0x0);
        gbc.writeMem(0x4c0a, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1d8a, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 018E
        gbc.setState(0xea51, 0x3806, 0x7970, 0xd7df, 0xe1f3, 0x1376, 0x0, 0x1);
        gbc.writeMem(0xea51, { 0x7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3806, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xea51));
        // 07 018F
        gbc.setState(0x8eee, 0xe5f, 0xe5a0, 0xba3c, 0x2269, 0xabef, 0x0, 0x1);
        gbc.writeMem(0x8eee, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8eee));
        // 07 0190
        gbc.setState(0xe208, 0xe565, 0xba20, 0xba81, 0x945, 0x598c, 0x1, 0x0);
        gbc.writeMem(0xe208, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe565, gbc.sp());
        EXPECT(0xe209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe208));
        // 07 0191
        gbc.setState(0x9811, 0x5acb, 0x70a0, 0x9c1d, 0x74aa, 0xb837, 0x1, 0x0);
        gbc.writeMem(0x9811, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5acb, gbc.sp());
        EXPECT(0x9812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9811));
        // 07 0192
        gbc.setState(0x1108, 0x9214, 0x46d0, 0xbadc, 0x9b32, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0x1108, { 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9214, gbc.sp());
        EXPECT(0x1109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0193
        gbc.setState(0xd710, 0x5d9a, 0x7940, 0x6f6f, 0xaa31, 0x1f4, 0x1, 0x0);
        gbc.writeMem(0xd710, { 0x7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5d9a, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd710));
        // 07 0194
        gbc.setState(0x966d, 0xae39, 0xedd0, 0xc856, 0xbfa6, 0x9eb9, 0x0, 0x0);
        gbc.writeMem(0x966d, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae39, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x966d));
        // 07 0195
        gbc.setState(0x7fb4, 0x5136, 0x7cd0, 0x88d0, 0x1bb2, 0xe621, 0x0, 0x1);
        gbc.writeMem(0x7fb4, { 0x7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5136, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0196
        gbc.setState(0x7c8, 0x406c, 0xc100, 0x12cf, 0xb7dd, 0x1bd8, 0x0, 0x0);
        gbc.writeMem(0x7c8, { 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x406c, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0197
        gbc.setState(0x8e24, 0x8d35, 0x9830, 0xc1a9, 0xd289, 0x7973, 0x1, 0x1);
        gbc.writeMem(0x8e24, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8d35, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e24));
        // 07 0199
        gbc.setState(0x3df0, 0x23ff, 0xb20, 0x3fcb, 0x42bf, 0xda32, 0x1, 0x0);
        gbc.writeMem(0x3df0, { 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 019A
        gbc.setState(0x13e8, 0x8df0, 0xe7e0, 0xeaf4, 0xe8a9, 0x4c21, 0x1, 0x1);
        gbc.writeMem(0x13e8, { 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8df0, gbc.sp());
        EXPECT(0x13e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 019B
        gbc.setState(0x35d1, 0xbc0e, 0x7450, 0xd7be, 0xb1dc, 0xc4a, 0x1, 0x0);
        gbc.writeMem(0x35d1, { 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbc0e, gbc.sp());
        EXPECT(0x35d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 019C
        gbc.setState(0xdfac, 0xdc37, 0x7ee0, 0x9a6f, 0x8541, 0x854, 0x1, 0x0);
        gbc.writeMem(0xdfac, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdc37, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdfac));
        // 07 019D
        gbc.setState(0x899, 0x3b9c, 0x5620, 0x2323, 0x4c95, 0xf05e, 0x0, 0x0);
        gbc.writeMem(0x899, { 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 019E
        gbc.setState(0xaf40, 0xff6a, 0x44c0, 0x2ae8, 0x1c1a, 0x3074, 0x1, 0x0);
        gbc.writeMem(0xaf40, { 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf40));
        // 07 019F
        gbc.setState(0xc871, 0x86e, 0xa010, 0xd4cb, 0xa1a8, 0xa50b, 0x0, 0x0);
        gbc.writeMem(0xc871, { 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x86e, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc871));
        // 07 01A0
        gbc.setState(0x8ea, 0x1b58, 0xd1d0, 0x53bc, 0x74c0, 0x82ea, 0x0, 0x0);
        gbc.writeMem(0x8ea, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1b58, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01A1
        gbc.setState(0x29b5, 0x3153, 0x2360, 0xa53b, 0x3433, 0xec37, 0x0, 0x1);
        gbc.writeMem(0x29b5, { 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3153, gbc.sp());
        EXPECT(0x29b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01A2
        gbc.setState(0x9d2a, 0x3b1d, 0xd0c0, 0x1509, 0x3717, 0x2cef, 0x1, 0x1);
        gbc.writeMem(0x9d2a, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0x9d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9d2a));
        // 07 01A3
        gbc.setState(0x9dad, 0x62d2, 0xac50, 0x43e3, 0xde80, 0x99e5, 0x1, 0x0);
        gbc.writeMem(0x9dad, { 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x62d2, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9dad));
        // 07 01A4
        gbc.setState(0x8f6e, 0x8b3f, 0x4f70, 0xc552, 0x4d5c, 0x3c51, 0x0, 0x0);
        gbc.writeMem(0x8f6e, { 0x7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8b3f, gbc.sp());
        EXPECT(0x8f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8f6e));
        // 07 01A5
        gbc.setState(0xace4, 0x621c, 0xa0, 0x31e, 0x6343, 0x57e3, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x621c, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xace4));
        // 07 01A6
        gbc.setState(0xd7ff, 0xee36, 0xbae0, 0xdce6, 0x303a, 0xcfff, 0x1, 0x0);
        gbc.writeMem(0xd7ff, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xee36, gbc.sp());
        EXPECT(0xd800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd7ff));
        // 07 01A7
        gbc.setState(0x9ea8, 0x76b, 0x66b0, 0x7ac5, 0xd54d, 0x990e, 0x1, 0x0);
        gbc.writeMem(0x9ea8, { 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x76b, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9ea8));
        // 07 01AA
        gbc.setState(0xc40d, 0xf512, 0xe090, 0x5751, 0xf329, 0xa6ba, 0x0, 0x0);
        gbc.writeMem(0xc40d, { 0x7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf512, gbc.sp());
        EXPECT(0xc40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc40d));
        // 07 01AB
        gbc.setState(0xcb57, 0xea81, 0x13b0, 0xa1b6, 0xaef1, 0xb12d, 0x1, 0x1);
        gbc.writeMem(0xcb57, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea81, gbc.sp());
        EXPECT(0xcb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcb57));
        // 07 01AC
        gbc.setState(0x2458, 0x29b9, 0xaa60, 0x9e12, 0xa302, 0x7038, 0x0, 0x1);
        gbc.writeMem(0x2458, { 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01AD
        gbc.setState(0x163e, 0xad41, 0xde60, 0x864, 0x16e0, 0x2bd7, 0x0, 0x1);
        gbc.writeMem(0x163e, { 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xad41, gbc.sp());
        EXPECT(0x163f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01AE
        gbc.setState(0x9ac0, 0x496, 0x2fc0, 0xdf68, 0x19f5, 0x8fbb, 0x0, 0x0);
        gbc.writeMem(0x9ac0, { 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x496, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9ac0));
        // 07 01AF
        gbc.setState(0xc9b2, 0xbcc8, 0x4d60, 0xd354, 0x77c0, 0x7d54, 0x0, 0x1);
        gbc.writeMem(0xc9b2, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbcc8, gbc.sp());
        EXPECT(0xc9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc9b2));
        // 07 01B0
        gbc.setState(0x9330, 0xba7c, 0x5a40, 0x11c1, 0xaa9c, 0xc9f4, 0x0, 0x1);
        gbc.writeMem(0x9330, { 0x7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x9331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9330));
        // 07 01B1
        gbc.setState(0x9743, 0x8e9c, 0x8ce0, 0x8238, 0x59b, 0x5c2d, 0x1, 0x0);
        gbc.writeMem(0x9743, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8e9c, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9743));
        // 07 01B2
        gbc.setState(0x993a, 0xd76c, 0x4260, 0xa615, 0x9ffd, 0xaf2b, 0x1, 0x1);
        gbc.writeMem(0x993a, { 0x7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd76c, gbc.sp());
        EXPECT(0x993b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x993a));
        // 07 01B3
        gbc.setState(0x317c, 0xf68d, 0x8860, 0x9bd9, 0x2597, 0xf517, 0x1, 0x1);
        gbc.writeMem(0x317c, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf68d, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01B4
        gbc.setState(0x87c7, 0x500d, 0xa8d0, 0x85ab, 0xa1cc, 0x438d, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x500d, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87c7));
        // 07 01B5
        gbc.setState(0x26ec, 0xd2b9, 0xc20, 0x17d3, 0xe485, 0x6f9d, 0x0, 0x1);
        gbc.writeMem(0x26ec, { 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd2b9, gbc.sp());
        EXPECT(0x26ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01B6
        gbc.setState(0xbdb3, 0x8a06, 0xeaa0, 0x89e8, 0x1e0d, 0xabf3, 0x1, 0x0);
        gbc.writeMem(0xbdb3, { 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8a06, gbc.sp());
        EXPECT(0xbdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbdb3));
        // 07 01B7
        gbc.setState(0x6c7b, 0xec1d, 0xe220, 0x2a5, 0x8ef1, 0x348a, 0x1, 0x1);
        gbc.writeMem(0x6c7b, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xec1d, gbc.sp());
        EXPECT(0x6c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01B8
        gbc.setState(0xdfe2, 0x51c5, 0xc450, 0x54a1, 0xd390, 0xea05, 0x1, 0x1);
        gbc.writeMem(0xdfe2, { 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x51c5, gbc.sp());
        EXPECT(0xdfe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdfe2));
        // 07 01B9
        gbc.setState(0x5399, 0x8908, 0x46e0, 0xad05, 0x6c8e, 0xfc47, 0x0, 0x0);
        gbc.writeMem(0x5399, { 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8908, gbc.sp());
        EXPECT(0x539a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01BB
        gbc.setState(0x1b67, 0x52a4, 0x1190, 0xe90a, 0x3943, 0x40d1, 0x1, 0x0);
        gbc.writeMem(0x1b67, { 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x52a4, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01BC
        gbc.setState(0xa538, 0x979d, 0xe740, 0xe782, 0x5315, 0x163b, 0x1, 0x0);
        gbc.writeMem(0xa538, { 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x979d, gbc.sp());
        EXPECT(0xa539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa538));
        // 07 01BD
        gbc.setState(0x9936, 0xb207, 0xb000, 0x61b0, 0xd920, 0x5aaf, 0x1, 0x0);
        gbc.writeMem(0x9936, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0x9937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9936));
        // 07 01BE
        gbc.setState(0xc5b0, 0xbc, 0xd120, 0x4de1, 0x4249, 0xd4f2, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0xc5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc5b0));
        // 07 01BF
        gbc.setState(0xeaa5, 0xaf7, 0xea40, 0xdf33, 0xdb76, 0x6616, 0x0, 0x0);
        gbc.writeMem(0xeaa5, { 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaf7, gbc.sp());
        EXPECT(0xeaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeaa5));
        // 07 01C0
        gbc.setState(0x3fdf, 0x36b, 0xe2a0, 0x32db, 0x5bf5, 0xe001, 0x1, 0x0);
        gbc.writeMem(0x3fdf, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x36b, gbc.sp());
        EXPECT(0x3fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C1
        gbc.setState(0x14e2, 0x63ff, 0x8a30, 0xbb5e, 0xea9c, 0xdabd, 0x0, 0x0);
        gbc.writeMem(0x14e2, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63ff, gbc.sp());
        EXPECT(0x14e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C2
        gbc.setState(0x3a3c, 0x5f7, 0x9e00, 0x1d57, 0x909c, 0x97bf, 0x1, 0x0);
        gbc.writeMem(0x3a3c, { 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0x3a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C3
        gbc.setState(0x5ba7, 0x8280, 0x89f0, 0x83fe, 0x60fc, 0x9256, 0x0, 0x0);
        gbc.writeMem(0x5ba7, { 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8280, gbc.sp());
        EXPECT(0x5ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C4
        gbc.setState(0xd0e3, 0xa6bd, 0x6b00, 0xd61f, 0x329d, 0x99c, 0x1, 0x0);
        gbc.writeMem(0xd0e3, { 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0xd0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd0e3));
        // 07 01C5
        gbc.setState(0x57a9, 0x8ed5, 0x8750, 0x1718, 0x29f7, 0x4695, 0x0, 0x0);
        gbc.writeMem(0x57a9, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C6
        gbc.setState(0x9e29, 0x25b3, 0x8c90, 0x39c0, 0x81e2, 0x10f4, 0x1, 0x0);
        gbc.writeMem(0x9e29, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x9e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9e29));
        // 07 01C7
        gbc.setState(0xd4bc, 0xcdf5, 0x3ad0, 0xd0f4, 0xe7bf, 0x3c8e, 0x0, 0x0);
        gbc.writeMem(0xd4bc, { 0x7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcdf5, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd4bc));
        // 07 01C8
        gbc.setState(0x6839, 0xf36f, 0xd400, 0xe47c, 0xe00b, 0x5fcd, 0x1, 0x1);
        gbc.writeMem(0x6839, { 0x7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf36f, gbc.sp());
        EXPECT(0x683a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01C9
        gbc.setState(0xdf14, 0xf029, 0x7fa0, 0x72b9, 0x5e22, 0xd992, 0x1, 0x0);
        gbc.writeMem(0xdf14, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf029, gbc.sp());
        EXPECT(0xdf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdf14));
        // 07 01CA
        gbc.setState(0x543e, 0x2823, 0xd120, 0x890e, 0xf2f0, 0x7307, 0x1, 0x1);
        gbc.writeMem(0x543e, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01CB
        gbc.setState(0xaaad, 0x40d5, 0x5000, 0x9fb1, 0xcf33, 0x2523, 0x1, 0x1);
        gbc.writeMem(0xaaad, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x40d5, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaaad));
        // 07 01CC
        gbc.setState(0x898e, 0xd0f4, 0x33a0, 0x551b, 0x961c, 0x4e16, 0x1, 0x0);
        gbc.writeMem(0x898e, { 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd0f4, gbc.sp());
        EXPECT(0x898f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x898e));
        // 07 01CD
        gbc.setState(0x81a7, 0x5965, 0xa1e0, 0xdb7b, 0xe3a0, 0x1873, 0x0, 0x1);
        gbc.writeMem(0x81a7, { 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5965, gbc.sp());
        EXPECT(0x81a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x81a7));
        // 07 01CE
        gbc.setState(0x971c, 0xb5a3, 0xc420, 0xc0ef, 0x69d2, 0x6626, 0x1, 0x0);
        gbc.writeMem(0x971c, { 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb5a3, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x971c));
        // 07 01CF
        gbc.setState(0xc8c2, 0xa7b1, 0xf650, 0xa370, 0x1d23, 0xaa23, 0x1, 0x1);
        gbc.writeMem(0xc8c2, { 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa7b1, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc8c2));
        // 07 01D0
        gbc.setState(0x9e71, 0x38a9, 0xe7d0, 0x8414, 0xbec1, 0xf0dd, 0x0, 0x0);
        gbc.writeMem(0x9e71, { 0x7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x38a9, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9e71));
        // 07 01D1
        gbc.setState(0x1bae, 0xd2f5, 0xd0e0, 0x6e77, 0x8e47, 0xe92b, 0x0, 0x0);
        gbc.writeMem(0x1bae, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd2f5, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01D2
        gbc.setState(0xa6f8, 0x5a85, 0xc850, 0x9916, 0xb5c9, 0xe149, 0x1, 0x1);
        gbc.writeMem(0xa6f8, { 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa6f8));
        // 07 01D3
        gbc.setState(0xcbe3, 0x1163, 0x9bc0, 0x51c1, 0xa87a, 0x27ff, 0x0, 0x1);
        gbc.writeMem(0xcbe3, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1163, gbc.sp());
        EXPECT(0xcbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcbe3));
        // 07 01D5
        gbc.setState(0x3244, 0xff64, 0xb6f0, 0xf, 0x80f6, 0x44a8, 0x0, 0x1);
        gbc.writeMem(0x3244, { 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x3245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01D6
        gbc.setState(0x916a, 0x9447, 0xef20, 0x161f, 0x56c7, 0xf833, 0x0, 0x0);
        gbc.writeMem(0x916a, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x916b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x916a));
        // 07 01D7
        gbc.setState(0xc96, 0x2802, 0x2020, 0x3aa9, 0x49fe, 0xc09a, 0x1, 0x1);
        gbc.writeMem(0xc96, { 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2802, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01D8
        gbc.setState(0x362d, 0xdcc2, 0x66e0, 0x7c80, 0x93b6, 0x1d4b, 0x1, 0x0);
        gbc.writeMem(0x362d, { 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01D9
        gbc.setState(0x5136, 0xa435, 0xf280, 0xd55c, 0xfb12, 0x1744, 0x0, 0x1);
        gbc.writeMem(0x5136, { 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa435, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01DA
        gbc.setState(0x304, 0x557a, 0x3c60, 0xa95a, 0x8215, 0xea78, 0x1, 0x1);
        gbc.writeMem(0x304, { 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x557a, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01DB
        gbc.setState(0xae1c, 0x47ee, 0xcd60, 0x4b3d, 0x2d92, 0xcf69, 0x1, 0x1);
        gbc.writeMem(0xae1c, { 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xae1c));
        // 07 01DC
        gbc.setState(0x77d3, 0x25b8, 0x3150, 0xdda1, 0x2082, 0x18c2, 0x1, 0x1);
        gbc.writeMem(0x77d3, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x25b8, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01DD
        gbc.setState(0x60c, 0x5a38, 0xff50, 0x4478, 0x80c, 0x8d58, 0x0, 0x1);
        gbc.writeMem(0x60c, { 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5a38, gbc.sp());
        EXPECT(0x60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01DE
        gbc.setState(0x8382, 0x6b46, 0x5ec0, 0xd286, 0x60b7, 0xf71f, 0x1, 0x0);
        gbc.writeMem(0x8382, { 0x7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6b46, gbc.sp());
        EXPECT(0x8383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8382));
        // 07 01DF
        gbc.setState(0x48f1, 0x7baa, 0x2290, 0xfe64, 0xaae6, 0xb152, 0x0, 0x1);
        gbc.writeMem(0x48f1, { 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0x48f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01E0
        gbc.setState(0xc07f, 0x98a, 0x5270, 0x3c52, 0x9fb9, 0x4634, 0x0, 0x0);
        gbc.writeMem(0xc07f, { 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x98a, gbc.sp());
        EXPECT(0xc080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc07f));
        // 07 01E1
        gbc.setState(0x8864, 0xf18a, 0xed50, 0x4ef3, 0xb9b5, 0x4fdc, 0x1, 0x0);
        gbc.writeMem(0x8864, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0x8865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8864));
        // 07 01E2
        gbc.setState(0x4391, 0x7124, 0xba0, 0x5868, 0x7e12, 0x50a7, 0x0, 0x0);
        gbc.writeMem(0x4391, { 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01E3
        gbc.setState(0x38ba, 0xc0f5, 0x4cb0, 0xbde0, 0xc225, 0xa32d, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0x7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc0f5, gbc.sp());
        EXPECT(0x38bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01E4
        gbc.setState(0x6899, 0x2eec, 0x8130, 0x666b, 0x25cb, 0xbbda, 0x1, 0x1);
        gbc.writeMem(0x6899, { 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x689a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01E5
        gbc.setState(0x5961, 0x26cc, 0x25d0, 0xd624, 0xe1fd, 0x1b0b, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x26cc, gbc.sp());
        EXPECT(0x5962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01E6
        gbc.setState(0xc7d7, 0xca6d, 0x1f20, 0x13bc, 0x3497, 0xd985, 0x1, 0x1);
        gbc.writeMem(0xc7d7, { 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc7d7));
        // 07 01E7
        gbc.setState(0xb097, 0x652e, 0x9ad0, 0x51c8, 0x9ed, 0x6144, 0x0, 0x1);
        gbc.writeMem(0xb097, { 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x652e, gbc.sp());
        EXPECT(0xb098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb097));
        // 07 01E8
        gbc.setState(0x5f5c, 0xe8, 0x2ac0, 0xd20e, 0x3bc, 0xc56c, 0x0, 0x0);
        gbc.writeMem(0x5f5c, { 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe8, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01E9
        gbc.setState(0x40f1, 0xe3ed, 0xe070, 0x9c0f, 0xf497, 0x60b9, 0x0, 0x1);
        gbc.writeMem(0x40f1, { 0x7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x40f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 01EA
        gbc.setState(0xedd9, 0xf44, 0xc6e0, 0x61c8, 0x91ba, 0xc562, 0x0, 0x0);
        gbc.writeMem(0xedd9, { 0x7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0xedda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xedd9));
        // 07 01EB
        gbc.setState(0x5813, 0x6e66, 0x2180, 0xbb05, 0xd220, 0x7c5d, 0x0, 0x1);
        gbc.writeMem(0x5813, { 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6e66, gbc.sp());
        EXPECT(0x5814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01ED
        gbc.setState(0x4d8b, 0x25cd, 0x4530, 0xfce8, 0xa6ba, 0x741, 0x1, 0x0);
        gbc.writeMem(0x4d8b, { 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x25cd, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01EE
        gbc.setState(0xd119, 0xeb07, 0xaf30, 0x8281, 0x3ae7, 0xa5d8, 0x1, 0x0);
        gbc.writeMem(0xd119, { 0x7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xeb07, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd119));
        // 07 01F0
        gbc.setState(0xd7ba, 0x7d95, 0xc8b0, 0x244b, 0xa121, 0x9579, 0x0, 0x1);
        gbc.writeMem(0xd7ba, { 0x7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7d95, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd7ba));
        // 07 01F1
        gbc.setState(0xb05a, 0xcc60, 0xd8f0, 0xa1e4, 0x1cba, 0xe82a, 0x0, 0x1);
        gbc.writeMem(0xb05a, { 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcc60, gbc.sp());
        EXPECT(0xb05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb05a));
        // 07 01F2
        gbc.setState(0xea7b, 0x10c3, 0x3dc0, 0xf065, 0xa145, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0xea7b, { 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0xea7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xea7b));
        // 07 01F3
        gbc.setState(0x44b8, 0xe161, 0x4060, 0x6f27, 0x1864, 0xf1f8, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01F4
        gbc.setState(0xe45f, 0x4e63, 0x2aa0, 0x81f7, 0x3422, 0xecce, 0x1, 0x1);
        gbc.writeMem(0xe45f, { 0x7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4e63, gbc.sp());
        EXPECT(0xe460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe45f));
        // 07 01F5
        gbc.setState(0x5fd6, 0x27f6, 0x5930, 0xd202, 0x6c43, 0xb540, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0x5fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01F6
        gbc.setState(0xa8a, 0x1664, 0x5d90, 0x3847, 0x88f8, 0x4010, 0x0, 0x0);
        gbc.writeMem(0xa8a, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1664, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01F7
        gbc.setState(0x908b, 0x1641, 0x3d70, 0xe9da, 0x810, 0xd711, 0x0, 0x1);
        gbc.writeMem(0x908b, { 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x908b));
        // 07 01F8
        gbc.setState(0x3b8b, 0xd427, 0x43f0, 0xb4af, 0x80ea, 0x520e, 0x0, 0x0);
        gbc.writeMem(0x3b8b, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd427, gbc.sp());
        EXPECT(0x3b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01F9
        gbc.setState(0xdb44, 0x9037, 0x8550, 0x9eb0, 0x97ab, 0x7c46, 0x1, 0x0);
        gbc.writeMem(0xdb44, { 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9037, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdb44));
        // 07 01FA
        gbc.setState(0xa908, 0x9be6, 0x3f30, 0x8407, 0x64c7, 0x2f37, 0x0, 0x0);
        gbc.writeMem(0xa908, { 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa908));
        // 07 01FB
        gbc.setState(0x2b36, 0x6af9, 0x1460, 0xf0f9, 0x8b3a, 0x1aa2, 0x0, 0x0);
        gbc.writeMem(0x2b36, { 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x2b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 01FC
        gbc.setState(0xd75d, 0xbce5, 0x14a0, 0x9c54, 0xa9b9, 0x3148, 0x1, 0x1);
        gbc.writeMem(0xd75d, { 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbce5, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd75d));
        // 07 01FD
        gbc.setState(0xbea8, 0xf650, 0x6f0, 0x753c, 0xea2c, 0x18b7, 0x1, 0x1);
        gbc.writeMem(0xbea8, { 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbea8));
        // 07 01FE
        gbc.setState(0xb2ad, 0xcee, 0xf1e0, 0x385a, 0x2de9, 0xb4ca, 0x0, 0x0);
        gbc.writeMem(0xb2ad, { 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcee, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb2ad));
        // 07 01FF
        gbc.setState(0xba15, 0x34d, 0xea70, 0x6ea8, 0x35ca, 0xf68c, 0x0, 0x1);
        gbc.writeMem(0xba15, { 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x34d, gbc.sp());
        EXPECT(0xba16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xba15));
        // 07 0200
        gbc.setState(0xef91, 0x9d26, 0xff40, 0x6448, 0x2b46, 0x5765, 0x0, 0x1);
        gbc.writeMem(0xef91, { 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xef91));
        // 07 0201
        gbc.setState(0x204, 0xc10e, 0x36d0, 0x1cbf, 0xe0d6, 0x5a29, 0x0, 0x1);
        gbc.writeMem(0x204, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0x205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0202
        gbc.setState(0xddae, 0xb4ab, 0x7020, 0x8be7, 0x8fbf, 0xf235, 0x0, 0x0);
        gbc.writeMem(0xddae, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xddae));
        // 07 0203
        gbc.setState(0xd774, 0xb273, 0x3980, 0x8380, 0xc76a, 0x7ad8, 0x0, 0x1);
        gbc.writeMem(0xd774, { 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0xd775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd774));
        // 07 0204
        gbc.setState(0x4c76, 0x294c, 0x2760, 0x96ea, 0x694, 0x57dd, 0x0, 0x1);
        gbc.writeMem(0x4c76, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0205
        gbc.setState(0x524, 0x24ef, 0x95d0, 0x3b46, 0xc244, 0xf342, 0x0, 0x1);
        gbc.writeMem(0x524, { 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0x525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0206
        gbc.setState(0x2263, 0x5cad, 0x8a0, 0x865c, 0xc654, 0x14d2, 0x0, 0x0);
        gbc.writeMem(0x2263, { 0x7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0x2264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0207
        gbc.setState(0x930b, 0xf295, 0xa9b0, 0xd1a6, 0xb90b, 0x1ef5, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0x7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x930b));
        // 07 0208
        gbc.setState(0xc986, 0xf7b3, 0x4020, 0x8032, 0x56d0, 0x1c8f, 0x1, 0x1);
        gbc.writeMem(0xc986, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc986));
        // 07 020A
        gbc.setState(0x46e4, 0xbb77, 0x16e0, 0xa365, 0x447, 0x1101, 0x1, 0x1);
        gbc.writeMem(0x46e4, { 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 020B
        gbc.setState(0xcc7e, 0xc056, 0x7eb0, 0x6c8c, 0xa16, 0x31d6, 0x0, 0x0);
        gbc.writeMem(0xcc7e, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0xcc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcc7e));
        // 07 020D
        gbc.setState(0x7050, 0xeb4d, 0xbc30, 0x17db, 0xd3fd, 0x3595, 0x0, 0x1);
        gbc.writeMem(0x7050, { 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0x7051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 020E
        gbc.setState(0x7b53, 0x9cd8, 0x3680, 0x3162, 0x7893, 0xb5bd, 0x1, 0x1);
        gbc.writeMem(0x7b53, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 020F
        gbc.setState(0xc57, 0xe75e, 0xf3d0, 0x4c60, 0xe97, 0x5858, 0x0, 0x1);
        gbc.writeMem(0xc57, { 0x7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe75e, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0210
        gbc.setState(0xef3, 0x882c, 0x2630, 0x992e, 0x23c3, 0xe3ba, 0x1, 0x0);
        gbc.writeMem(0xef3, { 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0211
        gbc.setState(0x3813, 0xb62c, 0x8a80, 0xddf8, 0x7ea7, 0x6180, 0x1, 0x1);
        gbc.writeMem(0x3813, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0212
        gbc.setState(0x4f26, 0x7117, 0x7f70, 0x13bc, 0x30f, 0x9891, 0x1, 0x1);
        gbc.writeMem(0x4f26, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0213
        gbc.setState(0xcba4, 0x3a66, 0xe120, 0x54f5, 0x4f56, 0xe53c, 0x1, 0x1);
        gbc.writeMem(0xcba4, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcba4));
        // 07 0214
        gbc.setState(0x8e62, 0x7bf7, 0xffb0, 0xda96, 0xc0c7, 0x18a6, 0x1, 0x1);
        gbc.writeMem(0x8e62, { 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7bf7, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e62));
        // 07 0215
        gbc.setState(0x5623, 0xe42e, 0x8e30, 0xa74e, 0xeeda, 0x2cc9, 0x1, 0x0);
        gbc.writeMem(0x5623, { 0x7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe42e, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0216
        gbc.setState(0x3abf, 0x2da8, 0x5400, 0x41cd, 0x41b0, 0xb66a, 0x0, 0x1);
        gbc.writeMem(0x3abf, { 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0217
        gbc.setState(0x557f, 0xb8ca, 0xd750, 0xbe7, 0x63ad, 0xfc16, 0x0, 0x1);
        gbc.writeMem(0x557f, { 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb8ca, gbc.sp());
        EXPECT(0x5580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0218
        gbc.setState(0xc8c2, 0x1095, 0xa200, 0xfdf6, 0x34fb, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1095, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc8c2));
        // 07 0219
        gbc.setState(0x6a84, 0x504c, 0xe850, 0x4e75, 0x8b2f, 0x7e26, 0x0, 0x1);
        gbc.writeMem(0x6a84, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 021A
        gbc.setState(0xaf99, 0x7ad5, 0x2130, 0xaaca, 0x7cee, 0xc145, 0x1, 0x1);
        gbc.writeMem(0xaf99, { 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7ad5, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf99));
        // 07 021B
        gbc.setState(0x7a66, 0xf0a6, 0x4dd0, 0x5e94, 0xf67b, 0x53a0, 0x1, 0x0);
        gbc.writeMem(0x7a66, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf0a6, gbc.sp());
        EXPECT(0x7a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 021C
        gbc.setState(0x557a, 0xfd04, 0x3990, 0xcdc1, 0x1ce, 0xf7fa, 0x1, 0x0);
        gbc.writeMem(0x557a, { 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 021D
        gbc.setState(0x15d6, 0x69fc, 0x8d50, 0xb12f, 0x8d1c, 0x8249, 0x1, 0x0);
        gbc.writeMem(0x15d6, { 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x69fc, gbc.sp());
        EXPECT(0x15d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 021E
        gbc.setState(0x96e3, 0x3108, 0x50c0, 0xef3f, 0xf91a, 0x6f82, 0x1, 0x1);
        gbc.writeMem(0x96e3, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3108, gbc.sp());
        EXPECT(0x96e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x96e3));
        // 07 021F
        gbc.setState(0x4cbc, 0x1492, 0xdfd0, 0x8aee, 0xf127, 0xb373, 0x1, 0x0);
        gbc.writeMem(0x4cbc, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1492, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0220
        gbc.setState(0x8517, 0xecd7, 0xcc0, 0x59d6, 0xc969, 0x6a54, 0x1, 0x1);
        gbc.writeMem(0x8517, { 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8517));
        // 07 0221
        gbc.setState(0xac9, 0x261d, 0xbf0, 0xd1d, 0xb8c3, 0x70c8, 0x0, 0x0);
        gbc.writeMem(0xac9, { 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0xaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0223
        gbc.setState(0xd93e, 0x8ee5, 0x83f0, 0x70ce, 0xfd5b, 0x418e, 0x0, 0x0);
        gbc.writeMem(0xd93e, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0xd93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd93e));
        // 07 0224
        gbc.setState(0x5a49, 0xf644, 0xe2c0, 0xdb6b, 0xad2e, 0xfee0, 0x1, 0x1);
        gbc.writeMem(0x5a49, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x5a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0225
        gbc.setState(0xa66d, 0xdbe7, 0x7570, 0x25f8, 0xf507, 0xedf1, 0x0, 0x1);
        gbc.writeMem(0xa66d, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0xa66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa66d));
        // 07 0226
        gbc.setState(0x3f2b, 0xf7c7, 0xae0, 0x9af3, 0xdc5d, 0xf214, 0x1, 0x0);
        gbc.writeMem(0x3f2b, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0x3f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0228
        gbc.setState(0xb978, 0xff97, 0xa830, 0xa0a9, 0xbb79, 0x82dc, 0x0, 0x1);
        gbc.writeMem(0xb978, { 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xff97, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb978));
        // 07 0229
        gbc.setState(0xbfb9, 0x70bc, 0x8f10, 0xca24, 0x366d, 0xd938, 0x0, 0x1);
        gbc.writeMem(0xbfb9, { 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbfb9));
        // 07 022A
        gbc.setState(0xdbab, 0xfcdf, 0x5d60, 0xac4e, 0x442c, 0xce9d, 0x0, 0x1);
        gbc.writeMem(0xdbab, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfcdf, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdbab));
        // 07 022B
        gbc.setState(0xd9f3, 0x61db, 0x9860, 0xaaed, 0xf1c0, 0x3188, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x61db, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd9f3));
        // 07 022D
        gbc.setState(0xd0ac, 0x9f6c, 0xeb30, 0x9eb7, 0x4fdc, 0x8ae6, 0x1, 0x1);
        gbc.writeMem(0xd0ac, { 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd0ac));
        // 07 022E
        gbc.setState(0x9c8c, 0xdb4a, 0x7f80, 0x9d51, 0x68f, 0x8e9c, 0x1, 0x0);
        gbc.writeMem(0x9c8c, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x9c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9c8c));
        // 07 022F
        gbc.setState(0x1b0, 0x99c6, 0xd3e0, 0x5cca, 0xf521, 0x1425, 0x0, 0x1);
        gbc.writeMem(0x1b0, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x99c6, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0230
        gbc.setState(0x43d2, 0xc734, 0x59e0, 0xcf3c, 0xfde5, 0x814c, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc734, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0231
        gbc.setState(0xa88e, 0x14df, 0x8d30, 0x89aa, 0x137a, 0x6671, 0x0, 0x1);
        gbc.writeMem(0xa88e, { 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x14df, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa88e));
        // 07 0232
        gbc.setState(0x5e7b, 0x19cb, 0xc2d0, 0xdd36, 0x83ef, 0x288d, 0x1, 0x0);
        gbc.writeMem(0x5e7b, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x19cb, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0233
        gbc.setState(0x7e22, 0x530a, 0x1d40, 0xb253, 0xa216, 0xd4a0, 0x0, 0x0);
        gbc.writeMem(0x7e22, { 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x7e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0234
        gbc.setState(0xb51a, 0x5c62, 0xb7a0, 0x58e, 0x5c98, 0xc3d5, 0x0, 0x0);
        gbc.writeMem(0xb51a, { 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5c62, gbc.sp());
        EXPECT(0xb51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb51a));
        // 07 0235
        gbc.setState(0x365d, 0x79fc, 0xae20, 0x689d, 0x125f, 0x6b02, 0x1, 0x0);
        gbc.writeMem(0x365d, { 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x79fc, gbc.sp());
        EXPECT(0x365e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0236
        gbc.setState(0xa309, 0x3984, 0x3350, 0xab83, 0x9008, 0x9ef8, 0x1, 0x1);
        gbc.writeMem(0xa309, { 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3984, gbc.sp());
        EXPECT(0xa30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa309));
        // 07 0237
        gbc.setState(0x4cc7, 0xa6a9, 0x17c0, 0x34ed, 0x3059, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x4cc7, { 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0x4cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0238
        gbc.setState(0x4cb0, 0xc372, 0x47e0, 0xa312, 0x845c, 0xaada, 0x0, 0x1);
        gbc.writeMem(0x4cb0, { 0x7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc372, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0239
        gbc.setState(0x4fd1, 0xaf46, 0x9760, 0xa399, 0xf525, 0xa6a1, 0x0, 0x0);
        gbc.writeMem(0x4fd1, { 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0x4fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 023A
        gbc.setState(0xa851, 0x7058, 0x8da0, 0xdc51, 0x7c9e, 0x7b27, 0x1, 0x1);
        gbc.writeMem(0xa851, { 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7058, gbc.sp());
        EXPECT(0xa852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa851));
        // 07 023B
        gbc.setState(0x11bc, 0x221b, 0xe230, 0xc9f6, 0xb20, 0xba0b, 0x0, 0x1);
        gbc.writeMem(0x11bc, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0x11bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 023C
        gbc.setState(0xcbb8, 0x88ed, 0x3180, 0x1d3d, 0x2cbb, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0xcbb8, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x88ed, gbc.sp());
        EXPECT(0xcbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcbb8));
        // 07 023D
        gbc.setState(0x1db7, 0xcf0a, 0xab80, 0xe340, 0x10bf, 0xbf68, 0x0, 0x0);
        gbc.writeMem(0x1db7, { 0x7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0x1db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 023E
        gbc.setState(0x344d, 0x8166, 0xf1d0, 0x4d1a, 0x3dba, 0x912d, 0x1, 0x0);
        gbc.writeMem(0x344d, { 0x7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8166, gbc.sp());
        EXPECT(0x344e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 023F
        gbc.setState(0xe2b, 0xe16f, 0xec00, 0x3e21, 0x5472, 0xbaff, 0x0, 0x1);
        gbc.writeMem(0xe2b, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0240
        gbc.setState(0x545a, 0xf6b2, 0x4000, 0xd884, 0xef8a, 0x13ae, 0x1, 0x0);
        gbc.writeMem(0x545a, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf6b2, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0241
        gbc.setState(0xec15, 0x9292, 0x3d80, 0xcecb, 0x3e2e, 0xf6f7, 0x1, 0x0);
        gbc.writeMem(0xec15, { 0x7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xec15));
        // 07 0242
        gbc.setState(0x1fc6, 0x44d6, 0xe500, 0xa156, 0x3728, 0xd85d, 0x1, 0x1);
        gbc.writeMem(0x1fc6, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x44d6, gbc.sp());
        EXPECT(0x1fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0243
        gbc.setState(0xf23, 0x88f4, 0xa50, 0x7e99, 0xec62, 0xc4d8, 0x0, 0x0);
        gbc.writeMem(0xf23, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0xf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0244
        gbc.setState(0x971f, 0xbaae, 0x9be0, 0xacb9, 0x5139, 0x36f2, 0x1, 0x1);
        gbc.writeMem(0x971f, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbaae, gbc.sp());
        EXPECT(0x9720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x971f));
        // 07 0245
        gbc.setState(0x40a6, 0x2ee9, 0x7370, 0x4509, 0x2df1, 0xf212, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0x7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0246
        gbc.setState(0xb8c4, 0x56ce, 0x98c0, 0x877, 0x4660, 0x590e, 0x0, 0x0);
        gbc.writeMem(0xb8c4, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x56ce, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb8c4));
        // 07 0247
        gbc.setState(0x67a, 0x5fd7, 0xc570, 0x2c04, 0x478c, 0xa014, 0x1, 0x0);
        gbc.writeMem(0x67a, { 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0248
        gbc.setState(0x2530, 0xba9a, 0x57e0, 0xd028, 0xc665, 0xbd5a, 0x1, 0x0);
        gbc.writeMem(0x2530, { 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba9a, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0249
        gbc.setState(0x6b29, 0x9c5a, 0x5600, 0x914a, 0xaf35, 0x2f31, 0x0, 0x0);
        gbc.writeMem(0x6b29, { 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9c5a, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 024A
        gbc.setState(0xcfa, 0xa2ab, 0x7400, 0x5cf6, 0xf6c6, 0xc8b, 0x1, 0x1);
        gbc.writeMem(0xcfa, { 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa2ab, gbc.sp());
        EXPECT(0xcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 024B
        gbc.setState(0x6906, 0x16a2, 0x3cd0, 0xdbf8, 0xdb12, 0x3bf7, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 024C
        gbc.setState(0x4b02, 0x3b6f, 0x9860, 0xe724, 0x61ca, 0xd028, 0x1, 0x0);
        gbc.writeMem(0x4b02, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 024D
        gbc.setState(0xa993, 0x8986, 0x1610, 0x42c4, 0x349c, 0x55c6, 0x1, 0x1);
        gbc.writeMem(0xa993, { 0x7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8986, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa993));
        // 07 024E
        gbc.setState(0x1762, 0x3464, 0xe870, 0x1b58, 0x7d84, 0x7357, 0x1, 0x0);
        gbc.writeMem(0x1762, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3464, gbc.sp());
        EXPECT(0x1763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 024F
        gbc.setState(0xb924, 0x50fc, 0x75b0, 0x140, 0x1a72, 0x3269, 0x1, 0x1);
        gbc.writeMem(0xb924, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x50fc, gbc.sp());
        EXPECT(0xb925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb924));
        // 07 0250
        gbc.setState(0x4688, 0x2363, 0xd200, 0xc37a, 0x5b18, 0xe9c7, 0x0, 0x0);
        gbc.writeMem(0x4688, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x4689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0251
        gbc.setState(0xb1de, 0xa620, 0x7790, 0x5874, 0xc2b6, 0xb590, 0x1, 0x1);
        gbc.writeMem(0xb1de, { 0x7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb1de));
        // 07 0252
        gbc.setState(0xd216, 0x4d93, 0x1280, 0xba16, 0xc2a7, 0xa214, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0x7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd216));
        // 07 0253
        gbc.setState(0x13fe, 0xd75d, 0x7b50, 0xf56e, 0xb250, 0x34e, 0x1, 0x0);
        gbc.writeMem(0x13fe, { 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd75d, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0254
        gbc.setState(0x2b35, 0x2f60, 0x7800, 0x59a1, 0xf98a, 0xae2f, 0x1, 0x1);
        gbc.writeMem(0x2b35, { 0x7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0255
        gbc.setState(0xdab2, 0x9e30, 0xe190, 0x91ae, 0x962, 0x58f7, 0x1, 0x0);
        gbc.writeMem(0xdab2, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9e30, gbc.sp());
        EXPECT(0xdab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdab2));
        // 07 0256
        gbc.setState(0x4c67, 0xa833, 0xcad0, 0x627b, 0xabe9, 0x4477, 0x0, 0x0);
        gbc.writeMem(0x4c67, { 0x7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa833, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0257
        gbc.setState(0x1d87, 0xda72, 0xa080, 0xbcb0, 0x5cb, 0x19dc, 0x0, 0x1);
        gbc.writeMem(0x1d87, { 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xda72, gbc.sp());
        EXPECT(0x1d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0258
        gbc.setState(0x879d, 0x3393, 0xc2d0, 0x7cdc, 0x5407, 0x46bd, 0x1, 0x0);
        gbc.writeMem(0x879d, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x879d));
        // 07 0259
        gbc.setState(0x2192, 0xc0d1, 0x57a0, 0xaf7a, 0x4847, 0x4eb, 0x1, 0x0);
        gbc.writeMem(0x2192, { 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 025A
        gbc.setState(0x6e3f, 0x663e, 0xd3b0, 0x4ac4, 0xb01f, 0x5682, 0x1, 0x0);
        gbc.writeMem(0x6e3f, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x663e, gbc.sp());
        EXPECT(0x6e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 025B
        gbc.setState(0x6ae5, 0x7ebe, 0x26c0, 0x5acc, 0x8034, 0xad6f, 0x0, 0x0);
        gbc.writeMem(0x6ae5, { 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7ebe, gbc.sp());
        EXPECT(0x6ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 025C
        gbc.setState(0x70fb, 0xb90d, 0xb6c0, 0x752b, 0xb06b, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0x70fb, { 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 025D
        gbc.setState(0x574e, 0x1dbc, 0x7bf0, 0xd3ff, 0x6859, 0xa33e, 0x0, 0x0);
        gbc.writeMem(0x574e, { 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x574f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 025E
        gbc.setState(0x8fbf, 0x53bc, 0xf750, 0x1524, 0x97f9, 0x45c3, 0x1, 0x0);
        gbc.writeMem(0x8fbf, { 0x7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x53bc, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8fbf));
        // 07 025F
        gbc.setState(0x68b8, 0x6c3c, 0x7ea0, 0x2201, 0x1bb0, 0x2c9, 0x0, 0x1);
        gbc.writeMem(0x68b8, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x68b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0260
        gbc.setState(0x9b7c, 0x130f, 0xecf0, 0x272c, 0xf30e, 0x9814, 0x1, 0x0);
        gbc.writeMem(0x9b7c, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x130f, gbc.sp());
        EXPECT(0x9b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9b7c));
        // 07 0261
        gbc.setState(0xe92b, 0x2a15, 0xf420, 0x1bff, 0x904c, 0xc053, 0x1, 0x1);
        gbc.writeMem(0xe92b, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2a15, gbc.sp());
        EXPECT(0xe92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe92b));
        // 07 0262
        gbc.setState(0xc577, 0x7443, 0x39b0, 0xb5e9, 0xc693, 0xc7a7, 0x0, 0x1);
        gbc.writeMem(0xc577, { 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7443, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc577));
        // 07 0263
        gbc.setState(0x3141, 0xfea5, 0xed10, 0xbf1d, 0xcae1, 0x4b1a, 0x1, 0x0);
        gbc.writeMem(0x3141, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0x3142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0265
        gbc.setState(0x65a0, 0x81fc, 0x280, 0x4883, 0xca52, 0x1d51, 0x0, 0x0);
        gbc.writeMem(0x65a0, { 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0266
        gbc.setState(0x609c, 0xd43d, 0x1130, 0x82ba, 0x4087, 0x998f, 0x1, 0x1);
        gbc.writeMem(0x609c, { 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd43d, gbc.sp());
        EXPECT(0x609d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0267
        gbc.setState(0x5f18, 0x1838, 0x5f70, 0x1d7d, 0xff7c, 0x9753, 0x1, 0x0);
        gbc.writeMem(0x5f18, { 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x5f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0268
        gbc.setState(0x6e3a, 0xd1c, 0x5240, 0xaf35, 0x5a40, 0x180c, 0x1, 0x0);
        gbc.writeMem(0x6e3a, { 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x6e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0269
        gbc.setState(0x5a21, 0x4317, 0x9120, 0xf9a4, 0x895a, 0x3087, 0x0, 0x0);
        gbc.writeMem(0x5a21, { 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0x5a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 026A
        gbc.setState(0x5208, 0xace6, 0x9b20, 0xe222, 0x5d3d, 0xbc74, 0x0, 0x0);
        gbc.writeMem(0x5208, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xace6, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 026B
        gbc.setState(0x9909, 0x8f76, 0x8010, 0x8bd7, 0xc0f8, 0x1ac2, 0x1, 0x0);
        gbc.writeMem(0x9909, { 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9909));
        // 07 026C
        gbc.setState(0xa9f3, 0xa318, 0xa520, 0x272f, 0x1db8, 0x97e, 0x1, 0x0);
        gbc.writeMem(0xa9f3, { 0x7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa318, gbc.sp());
        EXPECT(0xa9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa9f3));
        // 07 026D
        gbc.setState(0x983f, 0x3a8a, 0x2820, 0x2688, 0x51b8, 0xf90d, 0x0, 0x0);
        gbc.writeMem(0x983f, { 0x7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a8a, gbc.sp());
        EXPECT(0x9840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x983f));
        // 07 026E
        gbc.setState(0x1746, 0xe6cd, 0xe1d0, 0xa439, 0x9e7c, 0xa700, 0x0, 0x1);
        gbc.writeMem(0x1746, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 026F
        gbc.setState(0xbfcc, 0xcaef, 0xabd0, 0x9c29, 0x1c86, 0xda5c, 0x0, 0x0);
        gbc.writeMem(0xbfcc, { 0x7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0xbfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbfcc));
        // 07 0270
        gbc.setState(0xc097, 0x7536, 0x6760, 0x8c50, 0xb37d, 0x4eca, 0x0, 0x1);
        gbc.writeMem(0xc097, { 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7536, gbc.sp());
        EXPECT(0xc098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc097));
        // 07 0271
        gbc.setState(0xae24, 0x5b8f, 0x8440, 0x8a84, 0x41b9, 0xeea7, 0x0, 0x1);
        gbc.writeMem(0xae24, { 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5b8f, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xae24));
        // 07 0272
        gbc.setState(0xc04d, 0x6c67, 0x2530, 0xdebe, 0x5912, 0x9843, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6c67, gbc.sp());
        EXPECT(0xc04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc04d));
        // 07 0273
        gbc.setState(0x9a39, 0x97ef, 0x50f0, 0x4b4, 0x1fef, 0x5a67, 0x1, 0x0);
        gbc.writeMem(0x9a39, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x97ef, gbc.sp());
        EXPECT(0x9a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9a39));
        // 07 0274
        gbc.setState(0x96a2, 0xcb2a, 0xaa20, 0xc768, 0x4ab3, 0x969b, 0x0, 0x1);
        gbc.writeMem(0x96a2, { 0x7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcb2a, gbc.sp());
        EXPECT(0x96a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x96a2));
        // 07 0275
        gbc.setState(0x18c6, 0xe540, 0x5bb0, 0x1a84, 0xb144, 0xf491, 0x0, 0x1);
        gbc.writeMem(0x18c6, { 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe540, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0276
        gbc.setState(0xcf76, 0xce87, 0x8730, 0xf9b7, 0xe75, 0x945, 0x0, 0x0);
        gbc.writeMem(0xcf76, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xce87, gbc.sp());
        EXPECT(0xcf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcf76));
        // 07 0278
        gbc.setState(0x8133, 0xfa4e, 0xe100, 0x164e, 0x315, 0xca2, 0x1, 0x1);
        gbc.writeMem(0x8133, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa4e, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8133));
        // 07 0279
        gbc.setState(0x5ae3, 0xb0e6, 0x8720, 0xb9b9, 0xcc1c, 0x4fbb, 0x0, 0x1);
        gbc.writeMem(0x5ae3, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb0e6, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027A
        gbc.setState(0x5040, 0x8bb, 0x8890, 0xe51a, 0xaf8e, 0x5914, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8bb, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027B
        gbc.setState(0x4e6f, 0xcac1, 0xd8e0, 0x5c5d, 0xb102, 0xf306, 0x0, 0x0);
        gbc.writeMem(0x4e6f, { 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0x4e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027C
        gbc.setState(0x4703, 0x288e, 0xc4b0, 0x1ab, 0xd6b5, 0xb0, 0x1, 0x1);
        gbc.writeMem(0x4703, { 0x7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027D
        gbc.setState(0x4468, 0x6445, 0xcbe0, 0xe0b2, 0x7e40, 0xecc2, 0x1, 0x0);
        gbc.writeMem(0x4468, { 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6445, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027E
        gbc.setState(0x798c, 0x9a8e, 0x91a0, 0x8416, 0xec8e, 0xd13b, 0x1, 0x1);
        gbc.writeMem(0x798c, { 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9a8e, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 027F
        gbc.setState(0x912, 0xc4a0, 0xd500, 0x8b2, 0x368, 0xa5cf, 0x0, 0x1);
        gbc.writeMem(0x912, { 0x7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0x913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0280
        gbc.setState(0xaa5d, 0x4abe, 0xc770, 0x35bd, 0x5af6, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0xaa5d, { 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4abe, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaa5d));
        // 07 0281
        gbc.setState(0xb77c, 0xce60, 0x3ed0, 0x526c, 0x872d, 0xdc60, 0x1, 0x0);
        gbc.writeMem(0xb77c, { 0x7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xce60, gbc.sp());
        EXPECT(0xb77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb77c));
        // 07 0282
        gbc.setState(0x61b4, 0x7e09, 0x7fa0, 0xc0a8, 0x3ab3, 0xd153, 0x1, 0x1);
        gbc.writeMem(0x61b4, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7e09, gbc.sp());
        EXPECT(0x61b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0283
        gbc.setState(0x5dfa, 0xfa65, 0x630, 0x420d, 0x7c09, 0x8acd, 0x0, 0x1);
        gbc.writeMem(0x5dfa, { 0x7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0284
        gbc.setState(0x565c, 0xa9d, 0xe60, 0x87e1, 0xcf1e, 0x8db7, 0x0, 0x0);
        gbc.writeMem(0x565c, { 0x7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa9d, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0285
        gbc.setState(0x17ad, 0x7064, 0x22b0, 0x648c, 0x79e8, 0x762e, 0x0, 0x1);
        gbc.writeMem(0x17ad, { 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7064, gbc.sp());
        EXPECT(0x17ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0287
        gbc.setState(0x3783, 0xa0b7, 0x57a0, 0xdde, 0xf4a9, 0x6117, 0x1, 0x0);
        gbc.writeMem(0x3783, { 0x7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa0b7, gbc.sp());
        EXPECT(0x3784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0288
        gbc.setState(0x22f8, 0xf8b0, 0x20, 0xc49c, 0x9e5d, 0x847e, 0x1, 0x0);
        gbc.writeMem(0x22f8, { 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0x22f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0289
        gbc.setState(0x2666, 0x87c0, 0x6e30, 0x754, 0x5e79, 0x4f91, 0x1, 0x1);
        gbc.writeMem(0x2666, { 0x7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 028A
        gbc.setState(0x509c, 0x84b8, 0x370, 0x478c, 0x73c3, 0x95c, 0x0, 0x0);
        gbc.writeMem(0x509c, { 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x84b8, gbc.sp());
        EXPECT(0x509d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 028B
        gbc.setState(0xda08, 0xe126, 0x15d0, 0x9e7a, 0x1194, 0x267d, 0x0, 0x1);
        gbc.writeMem(0xda08, { 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe126, gbc.sp());
        EXPECT(0xda09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xda08));
        // 07 028C
        gbc.setState(0x6b09, 0xd176, 0x2700, 0x245b, 0x1ace, 0x90c0, 0x0, 0x1);
        gbc.writeMem(0x6b09, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x6b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 028D
        gbc.setState(0x5f5b, 0xcbb0, 0x9f20, 0xd5e6, 0xda4a, 0xb2e5, 0x1, 0x0);
        gbc.writeMem(0x5f5b, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 028E
        gbc.setState(0x8a63, 0x5add, 0x8d60, 0x8bd3, 0xfa81, 0x7d24, 0x1, 0x0);
        gbc.writeMem(0x8a63, { 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5add, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a63));
        // 07 028F
        gbc.setState(0x896, 0x1050, 0xded0, 0x4541, 0xea49, 0x749b, 0x1, 0x0);
        gbc.writeMem(0x896, { 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1050, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0290
        gbc.setState(0xc35, 0x1771, 0xeef0, 0x29ae, 0x7547, 0xf761, 0x1, 0x0);
        gbc.writeMem(0xc35, { 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0291
        gbc.setState(0x21ea, 0xbead, 0x43d0, 0xb09b, 0x3a5b, 0xb73f, 0x0, 0x0);
        gbc.writeMem(0x21ea, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbead, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0292
        gbc.setState(0xe9cf, 0x2b0a, 0xe860, 0x78d4, 0x82c6, 0xa83, 0x0, 0x1);
        gbc.writeMem(0xe9cf, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2b0a, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe9cf));
        // 07 0293
        gbc.setState(0xa185, 0x3f63, 0xc530, 0xaa22, 0x999c, 0xf0f9, 0x0, 0x1);
        gbc.writeMem(0xa185, { 0x7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0xa186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa185));
        // 07 0294
        gbc.setState(0x5303, 0x40ab, 0xd0c0, 0xbec, 0x524d, 0x4bf1, 0x0, 0x1);
        gbc.writeMem(0x5303, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0x5304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0295
        gbc.setState(0x76e5, 0xa315, 0x42f0, 0xcfae, 0x406c, 0xdd0e, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0x7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0296
        gbc.setState(0x8c21, 0x96bb, 0x46f0, 0x5a87, 0xf0b0, 0x3a3d, 0x0, 0x1);
        gbc.writeMem(0x8c21, { 0x7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0x8c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8c21));
        // 07 0297
        gbc.setState(0xb00, 0x675b, 0x1a60, 0xc466, 0x6318, 0xb26c, 0x0, 0x1);
        gbc.writeMem(0xb00, { 0x7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x675b, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0298
        gbc.setState(0xd0ed, 0x7877, 0xd6c0, 0x7f18, 0xfd99, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0xd0ed, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0xd0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd0ed));
        // 07 0299
        gbc.setState(0x2cfa, 0xcd01, 0xa80, 0x2626, 0xd3b4, 0xec4c, 0x1, 0x1);
        gbc.writeMem(0x2cfa, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcd01, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 029A
        gbc.setState(0x5cfd, 0x6773, 0x80f0, 0xc001, 0x8c92, 0x537e, 0x0, 0x1);
        gbc.writeMem(0x5cfd, { 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6773, gbc.sp());
        EXPECT(0x5cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 029B
        gbc.setState(0x1518, 0x5f8f, 0xbb00, 0x5c57, 0x1143, 0x9063, 0x1, 0x0);
        gbc.writeMem(0x1518, { 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 029C
        gbc.setState(0xe715, 0x8aeb, 0x7650, 0xc80f, 0xbfe5, 0x7ff5, 0x0, 0x0);
        gbc.writeMem(0xe715, { 0x7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8aeb, gbc.sp());
        EXPECT(0xe716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe715));
        // 07 029D
        gbc.setState(0x7907, 0x7a9c, 0xe840, 0x6c75, 0x4a1, 0x9ebc, 0x1, 0x1);
        gbc.writeMem(0x7907, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7a9c, gbc.sp());
        EXPECT(0x7908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 029E
        gbc.setState(0x47d8, 0xabf8, 0x91a0, 0x4253, 0x4cb0, 0xb81e, 0x1, 0x1);
        gbc.writeMem(0x47d8, { 0x7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x47d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 029F
        gbc.setState(0x73c, 0xe1ad, 0x64a0, 0x4388, 0x4ac5, 0x593f, 0x0, 0x0);
        gbc.writeMem(0x73c, { 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe1ad, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02A0
        gbc.setState(0xda43, 0xd388, 0xe860, 0x5e26, 0xcc90, 0x4722, 0x0, 0x1);
        gbc.writeMem(0xda43, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd388, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xda43));
        // 07 02A1
        gbc.setState(0x6d1, 0x79f9, 0xef10, 0x25f4, 0xc1e4, 0x4155, 0x1, 0x1);
        gbc.writeMem(0x6d1, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x79f9, gbc.sp());
        EXPECT(0x6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02A2
        gbc.setState(0xbf68, 0xa19a, 0x8770, 0x6c95, 0xf6a8, 0x3ea1, 0x0, 0x0);
        gbc.writeMem(0xbf68, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0xbf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbf68));
        // 07 02A3
        gbc.setState(0xb782, 0x8d1b, 0x75d0, 0x695d, 0x22a9, 0x5281, 0x0, 0x1);
        gbc.writeMem(0xb782, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb782));
        // 07 02A4
        gbc.setState(0x2f73, 0x8075, 0xdaa0, 0xb222, 0x5a87, 0x77d3, 0x0, 0x0);
        gbc.writeMem(0x2f73, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8075, gbc.sp());
        EXPECT(0x2f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02A5
        gbc.setState(0xd26c, 0xb607, 0xdbf0, 0x6053, 0x1379, 0x4d51, 0x1, 0x1);
        gbc.writeMem(0xd26c, { 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd26c));
        // 07 02A6
        gbc.setState(0x52ec, 0xa120, 0x7610, 0x36ef, 0xe64f, 0x5e6a, 0x0, 0x0);
        gbc.writeMem(0x52ec, { 0x7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa120, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02A7
        gbc.setState(0xae00, 0xa07, 0xdc90, 0x3000, 0x9ce2, 0x646c, 0x0, 0x1);
        gbc.writeMem(0xae00, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa07, gbc.sp());
        EXPECT(0xae01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xae00));
        // 07 02A8
        gbc.setState(0x3f87, 0x7ed4, 0x48c0, 0x87e5, 0x134e, 0xa25f, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0x3f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02A9
        gbc.setState(0x625f, 0x8831, 0x60e0, 0x6a43, 0x3bbf, 0x720c, 0x1, 0x0);
        gbc.writeMem(0x625f, { 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8831, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02AA
        gbc.setState(0x41e4, 0x46a0, 0x2de0, 0xc40b, 0xfaac, 0xe547, 0x0, 0x1);
        gbc.writeMem(0x41e4, { 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x46a0, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02AB
        gbc.setState(0x7e1c, 0x9e7a, 0xe270, 0xcc0c, 0xddb3, 0x970c, 0x1, 0x0);
        gbc.writeMem(0x7e1c, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9e7a, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02AD
        gbc.setState(0xd9dd, 0x4919, 0x6910, 0x2d96, 0xd6c2, 0x6207, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4919, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd9dd));
        // 07 02AE
        gbc.setState(0x25c3, 0xde9e, 0xdff0, 0x3ab5, 0x83b2, 0xe0fb, 0x0, 0x1);
        gbc.writeMem(0x25c3, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xde9e, gbc.sp());
        EXPECT(0x25c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02AF
        gbc.setState(0x171a, 0xabee, 0xc340, 0xa0f7, 0xad1f, 0x77bf, 0x0, 0x0);
        gbc.writeMem(0x171a, { 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02B0
        gbc.setState(0x297, 0x2c86, 0x29c0, 0xaa1c, 0xbc4a, 0x368a, 0x0, 0x1);
        gbc.writeMem(0x297, { 0x7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0x298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02B1
        gbc.setState(0x6185, 0x29aa, 0xdc50, 0xe0b0, 0x7696, 0x8501, 0x1, 0x1);
        gbc.writeMem(0x6185, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x6186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02B2
        gbc.setState(0x55c, 0x3fd7, 0x2df0, 0x4b8e, 0x46f2, 0xeb06, 0x1, 0x0);
        gbc.writeMem(0x55c, { 0x7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3fd7, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02B3
        gbc.setState(0x10b8, 0x2f7e, 0xcf50, 0x34f3, 0x9e8d, 0xafb, 0x1, 0x0);
        gbc.writeMem(0x10b8, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02B4
        gbc.setState(0x39e3, 0x34e4, 0x5120, 0x2ab4, 0xa56d, 0x4e31, 0x0, 0x1);
        gbc.writeMem(0x39e3, { 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x34e4, gbc.sp());
        EXPECT(0x39e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02B6
        gbc.setState(0x8d07, 0xa189, 0xe370, 0xa923, 0x5593, 0xb145, 0x1, 0x0);
        gbc.writeMem(0x8d07, { 0x7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa189, gbc.sp());
        EXPECT(0x8d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8d07));
        // 07 02B7
        gbc.setState(0xdcf1, 0x8d70, 0x2600, 0x64c8, 0x4e37, 0xba74, 0x0, 0x1);
        gbc.writeMem(0xdcf1, { 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdcf1));
        // 07 02B8
        gbc.setState(0x4a92, 0x6ec3, 0x36b0, 0x6dee, 0xa079, 0xa501, 0x0, 0x1);
        gbc.writeMem(0x4a92, { 0x7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x4a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02B9
        gbc.setState(0x527e, 0x6376, 0x7020, 0x23be, 0x1b87, 0x89e7, 0x0, 0x1);
        gbc.writeMem(0x527e, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6376, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02BA
        gbc.setState(0x3606, 0x3bd, 0x3080, 0x723c, 0x3fb0, 0x539a, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3bd, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02BB
        gbc.setState(0x87a0, 0xd7ab, 0x3050, 0x7bba, 0x6d6e, 0xd58f, 0x0, 0x0);
        gbc.writeMem(0x87a0, { 0x7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd7ab, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87a0));
        // 07 02BC
        gbc.setState(0xd2a4, 0xa818, 0x11d0, 0xa216, 0x6384, 0x7747, 0x0, 0x1);
        gbc.writeMem(0xd2a4, { 0x7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa818, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd2a4));
        // 07 02BD
        gbc.setState(0xd81e, 0xe362, 0x18d0, 0xf73, 0xf33e, 0xd848, 0x0, 0x0);
        gbc.writeMem(0xd81e, { 0x7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd81e));
        // 07 02BE
        gbc.setState(0xb38e, 0xd085, 0xdfd0, 0x5ddc, 0x5006, 0x7418, 0x0, 0x0);
        gbc.writeMem(0xb38e, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0xb38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb38e));
        // 07 02BF
        gbc.setState(0x94d3, 0x86ac, 0x6f70, 0x55d6, 0xa86a, 0xf8d9, 0x0, 0x1);
        gbc.writeMem(0x94d3, { 0x7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x86ac, gbc.sp());
        EXPECT(0x94d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x94d3));
        // 07 02C0
        gbc.setState(0x8cab, 0x7c5d, 0x8800, 0x17fb, 0x448b, 0xbc31, 0x1, 0x0);
        gbc.writeMem(0x8cab, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0x8cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8cab));
        // 07 02C1
        gbc.setState(0xb6e0, 0x75e7, 0x14f0, 0x638a, 0x71a1, 0x6e0, 0x1, 0x0);
        gbc.writeMem(0xb6e0, { 0x7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb6e0));
        // 07 02C2
        gbc.setState(0x20d2, 0xd3a3, 0xe5c0, 0x95be, 0x3070, 0x3c6c, 0x0, 0x1);
        gbc.writeMem(0x20d2, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02C3
        gbc.setState(0xccf8, 0xda15, 0x9a80, 0xb280, 0x154b, 0xd082, 0x0, 0x0);
        gbc.writeMem(0xccf8, { 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xda15, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xccf8));
        // 07 02C4
        gbc.setState(0x141c, 0x2963, 0x4320, 0x1eae, 0xfbe1, 0x57ca, 0x1, 0x0);
        gbc.writeMem(0x141c, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02C6
        gbc.setState(0x9b98, 0x3f82, 0x4a30, 0x9103, 0xb242, 0xe364, 0x1, 0x0);
        gbc.writeMem(0x9b98, { 0x7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3f82, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9b98));
        // 07 02C7
        gbc.setState(0xb5d4, 0x152b, 0x7eb0, 0xcafd, 0xba65, 0xae7f, 0x0, 0x0);
        gbc.writeMem(0xb5d4, { 0x7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xb5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb5d4));
        // 07 02C8
        gbc.setState(0x3059, 0x28fb, 0xdb20, 0x8d41, 0x42e9, 0xe5c, 0x1, 0x0);
        gbc.writeMem(0x3059, { 0x7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x28fb, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02C9
        gbc.setState(0xa3e5, 0xda58, 0x1c20, 0xd4d7, 0xd75c, 0xa047, 0x0, 0x0);
        gbc.writeMem(0xa3e5, { 0x7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa3e5));
        // 07 02CB
        gbc.setState(0x6ab7, 0xbf4e, 0xe930, 0xa59e, 0x5032, 0x2f40, 0x1, 0x1);
        gbc.writeMem(0x6ab7, { 0x7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x6ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02CC
        gbc.setState(0xc434, 0x4243, 0xe1f0, 0xe83a, 0xd039, 0x489d, 0x0, 0x1);
        gbc.writeMem(0xc434, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc434));
        // 07 02CD
        gbc.setState(0xbe85, 0x9d35, 0x8ba0, 0x22bd, 0x9e90, 0x4642, 0x0, 0x1);
        gbc.writeMem(0xbe85, { 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9d35, gbc.sp());
        EXPECT(0xbe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbe85));
        // 07 02CE
        gbc.setState(0x3711, 0xb122, 0xde50, 0x3bd2, 0xb0de, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x3711, { 0x7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02CF
        gbc.setState(0x91df, 0x177b, 0xa690, 0x1ee5, 0x488, 0x6b95, 0x0, 0x0);
        gbc.writeMem(0x91df, { 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x177b, gbc.sp());
        EXPECT(0x91e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x91df));
        // 07 02D0
        gbc.setState(0x3e24, 0x3435, 0x9980, 0xbd32, 0x2e62, 0x40d9, 0x0, 0x1);
        gbc.writeMem(0x3e24, { 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x3e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02D1
        gbc.setState(0x360c, 0x6700, 0xda60, 0x5985, 0x889, 0xcbba, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02D2
        gbc.setState(0xad1b, 0xaee5, 0x5600, 0x4b3e, 0x86a9, 0x5e43, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xad1b));
        // 07 02D3
        gbc.setState(0x9876, 0x6a64, 0xc7f0, 0xe5d0, 0xf442, 0x2dcb, 0x1, 0x0);
        gbc.writeMem(0x9876, { 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6a64, gbc.sp());
        EXPECT(0x9877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9876));
        // 07 02D4
        gbc.setState(0x1ae2, 0xa468, 0xf4a0, 0x7c67, 0xfcb6, 0x8e7a, 0x1, 0x0);
        gbc.writeMem(0x1ae2, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0x1ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02D6
        gbc.setState(0xea66, 0x7470, 0x7500, 0x6b53, 0xc5, 0x1da7, 0x1, 0x1);
        gbc.writeMem(0xea66, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7470, gbc.sp());
        EXPECT(0xea67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xea66));
        // 07 02D7
        gbc.setState(0x2687, 0xb931, 0x3370, 0x8f1b, 0xdcf4, 0x59c1, 0x1, 0x1);
        gbc.writeMem(0x2687, { 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0x2688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02D8
        gbc.setState(0x4541, 0x3c33, 0x38d0, 0x30e2, 0xcfd9, 0xa0c3, 0x1, 0x1);
        gbc.writeMem(0x4541, { 0x7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0x4542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02D9
        gbc.setState(0x4548, 0x974b, 0x8940, 0x824f, 0x5208, 0x5c38, 0x0, 0x1);
        gbc.writeMem(0x4548, { 0x7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x974b, gbc.sp());
        EXPECT(0x4549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02DA
        gbc.setState(0xc371, 0xa37e, 0xa1f0, 0xc06f, 0x2eff, 0xc76a, 0x0, 0x1);
        gbc.writeMem(0xc371, { 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa37e, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc371));
        // 07 02DB
        gbc.setState(0xa49d, 0x8bb0, 0xb1a0, 0x6c59, 0x9dbb, 0x87f7, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8bb0, gbc.sp());
        EXPECT(0xa49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa49d));
        // 07 02DC
        gbc.setState(0x6c2f, 0x8d9a, 0x15b0, 0xc818, 0x7ac5, 0x67dc, 0x0, 0x1);
        gbc.writeMem(0x6c2f, { 0x7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8d9a, gbc.sp());
        EXPECT(0x6c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02DE
        gbc.setState(0x15a2, 0x860b, 0xf650, 0x6191, 0x678d, 0x9c28, 0x0, 0x1);
        gbc.writeMem(0x15a2, { 0x7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0x15a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02DF
        gbc.setState(0x676d, 0xbf48, 0x3850, 0xae40, 0xd0f0, 0x5b81, 0x1, 0x1);
        gbc.writeMem(0x676d, { 0x7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf48, gbc.sp());
        EXPECT(0x676e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02E2
        gbc.setState(0x57ad, 0xbcd5, 0xd7e0, 0x52be, 0x28b2, 0x9da0, 0x0, 0x1);
        gbc.writeMem(0x57ad, { 0x7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbcd5, gbc.sp());
        EXPECT(0x57ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02E3
        gbc.setState(0x762f, 0x16f1, 0xdc50, 0x73b0, 0xfac9, 0xe8d3, 0x1, 0x1);
        gbc.writeMem(0x762f, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x16f1, gbc.sp());
        EXPECT(0x7630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02E4
        gbc.setState(0xbdf1, 0x6896, 0xf0b0, 0x314, 0x3aed, 0x8a52, 0x1, 0x1);
        gbc.writeMem(0xbdf1, { 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6896, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbdf1));
        // 07 02E5
        gbc.setState(0x6e57, 0x8c18, 0xcc50, 0x874e, 0x82aa, 0x28fd, 0x0, 0x0);
        gbc.writeMem(0x6e57, { 0x7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8c18, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02E6
        gbc.setState(0x55e0, 0x8911, 0x1fa0, 0x39bd, 0xe251, 0x3233, 0x0, 0x0);
        gbc.writeMem(0x55e0, { 0x7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8911, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02E7
        gbc.setState(0x20cb, 0x11ee, 0x7200, 0x2a31, 0x5879, 0xbd2f, 0x0, 0x1);
        gbc.writeMem(0x20cb, { 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x11ee, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02E8
        gbc.setState(0xc003, 0xadef, 0x54b0, 0x2171, 0x15fa, 0xf1df, 0x1, 0x0);
        gbc.writeMem(0xc003, { 0x7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc003));
        // 07 02E9
        gbc.setState(0x1687, 0x51c0, 0x9d90, 0x1c55, 0xbb6c, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0x1687, { 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x51c0, gbc.sp());
        EXPECT(0x1688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02EA
        gbc.setState(0xc798, 0xb97d, 0x5d90, 0x6b52, 0x1fa3, 0xdc63, 0x1, 0x1);
        gbc.writeMem(0xc798, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0xc799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc798));
        // 07 02EB
        gbc.setState(0x6ba9, 0xa2e6, 0x6630, 0x8d69, 0x887b, 0xbcc3, 0x0, 0x0);
        gbc.writeMem(0x6ba9, { 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0x6baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02EC
        gbc.setState(0x1503, 0xa35c, 0xf4b0, 0xcf2c, 0xc2e9, 0xa516, 0x1, 0x0);
        gbc.writeMem(0x1503, { 0x7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02ED
        gbc.setState(0xb420, 0xeee6, 0x41c0, 0xa550, 0x501c, 0x729b, 0x0, 0x0);
        gbc.writeMem(0xb420, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb420));
        // 07 02EE
        gbc.setState(0x1d8, 0x5c75, 0x21e0, 0x8be6, 0x109f, 0xc7b8, 0x0, 0x0);
        gbc.writeMem(0x1d8, { 0x7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02EF
        gbc.setState(0xce67, 0x9c32, 0x80e0, 0x9ae9, 0x4a95, 0x6330, 0x0, 0x0);
        gbc.writeMem(0xce67, { 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xce67));
        // 07 02F0
        gbc.setState(0x8be3, 0xdcd1, 0x4df0, 0x1ea4, 0xf9ce, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x8be3, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x8be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8be3));
        // 07 02F1
        gbc.setState(0xaad4, 0xb223, 0xadc0, 0xa4d, 0xadb4, 0x46, 0x0, 0x0);
        gbc.writeMem(0xaad4, { 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaad4));
        // 07 02F2
        gbc.setState(0x333f, 0x9c8e, 0x72f0, 0x808d, 0x118e, 0x1efd, 0x0, 0x1);
        gbc.writeMem(0x333f, { 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02F3
        gbc.setState(0xcf8f, 0x5037, 0x5c00, 0x5070, 0xa270, 0x823b, 0x0, 0x1);
        gbc.writeMem(0xcf8f, { 0x7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5037, gbc.sp());
        EXPECT(0xcf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcf8f));
        // 07 02F4
        gbc.setState(0xa1a1, 0xff3d, 0x7180, 0xd5c5, 0x6a43, 0x6ac5, 0x1, 0x1);
        gbc.writeMem(0xa1a1, { 0x7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa1a1));
        // 07 02F5
        gbc.setState(0xd670, 0x225d, 0x8360, 0x39c6, 0x40e6, 0xf81d, 0x0, 0x1);
        gbc.writeMem(0xd670, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd670));
        // 07 02F6
        gbc.setState(0x460c, 0x36b1, 0x7550, 0x295, 0xbf1b, 0x9332, 0x1, 0x0);
        gbc.writeMem(0x460c, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x36b1, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02F7
        gbc.setState(0x6d2f, 0x9439, 0x3140, 0x6397, 0x7b44, 0xe5ae, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02F9
        gbc.setState(0x25d4, 0x4303, 0xe200, 0x8f1, 0x3bfc, 0xa00f, 0x0, 0x0);
        gbc.writeMem(0x25d4, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4303, gbc.sp());
        EXPECT(0x25d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02FA
        gbc.setState(0x1162, 0x4147, 0xc9e0, 0xe84d, 0x96c5, 0xd9de, 0x1, 0x1);
        gbc.writeMem(0x1162, { 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0x1163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 02FB
        gbc.setState(0x7fa7, 0xb398, 0x52f0, 0x4866, 0xf14f, 0x7e42, 0x0, 0x1);
        gbc.writeMem(0x7fa7, { 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb398, gbc.sp());
        EXPECT(0x7fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02FC
        gbc.setState(0xb2eb, 0x5e31, 0x1d50, 0x852e, 0x8e93, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0xb2eb, { 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5e31, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb2eb));
        // 07 02FD
        gbc.setState(0xc617, 0x6a4d, 0x3c70, 0xcdfe, 0xf318, 0x381d, 0x0, 0x0);
        gbc.writeMem(0xc617, { 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6a4d, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc617));
        // 07 02FE
        gbc.setState(0x7fd7, 0xba0d, 0x6a60, 0x31b, 0x2f73, 0xdbb8, 0x1, 0x0);
        gbc.writeMem(0x7fd7, { 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 02FF
        gbc.setState(0xdc31, 0xc5a7, 0x8590, 0x8f11, 0xac2f, 0x117c, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0x7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc5a7, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdc31));
        // 07 0300
        gbc.setState(0x98a, 0x74d3, 0x67c0, 0x91cd, 0x23ae, 0xa11, 0x1, 0x1);
        gbc.writeMem(0x98a, { 0x7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x74d3, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0301
        gbc.setState(0xd69b, 0xfafa, 0x9410, 0x8a2c, 0xb688, 0x586b, 0x0, 0x1);
        gbc.writeMem(0xd69b, { 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd69b));
        // 07 0302
        gbc.setState(0x8370, 0x53b9, 0x7f70, 0xd294, 0xc98e, 0x7371, 0x1, 0x0);
        gbc.writeMem(0x8370, { 0x7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8370));
        // 07 0304
        gbc.setState(0xb4e1, 0xb59e, 0xbf70, 0x646e, 0xcfa4, 0xda22, 0x1, 0x1);
        gbc.writeMem(0xb4e1, { 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb4e1));
        // 07 0305
        gbc.setState(0x6e3c, 0x24d0, 0xb600, 0xb66f, 0xd0ad, 0x840f, 0x0, 0x1);
        gbc.writeMem(0x6e3c, { 0x7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x24d0, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0306
        gbc.setState(0xc14a, 0x2220, 0x9980, 0x998e, 0xa8fd, 0x123e, 0x0, 0x1);
        gbc.writeMem(0xc14a, { 0x7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2220, gbc.sp());
        EXPECT(0xc14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc14a));
        // 07 0307
        gbc.setState(0x6a83, 0x7136, 0x1bb0, 0x348a, 0x61ed, 0xd9f6, 0x0, 0x1);
        gbc.writeMem(0x6a83, { 0x7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7136, gbc.sp());
        EXPECT(0x6a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0308
        gbc.setState(0x21fa, 0x5bce, 0x9a30, 0x8b52, 0xa07c, 0xc968, 0x0, 0x0);
        gbc.writeMem(0x21fa, { 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0x21fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0309
        gbc.setState(0x181d, 0xf474, 0xc190, 0x5ed6, 0x8b35, 0xf8d6, 0x0, 0x0);
        gbc.writeMem(0x181d, { 0x7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf474, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 030A
        gbc.setState(0x3d11, 0xf20c, 0x4020, 0xbab0, 0x2edb, 0x832f, 0x0, 0x1);
        gbc.writeMem(0x3d11, { 0x7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf20c, gbc.sp());
        EXPECT(0x3d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 030B
        gbc.setState(0x1bab, 0x9b02, 0xa3f0, 0x77e6, 0xf251, 0x9f1e, 0x1, 0x1);
        gbc.writeMem(0x1bab, { 0x7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9b02, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 030C
        gbc.setState(0x26f8, 0x4e74, 0x9870, 0xc319, 0x35c5, 0x9966, 0x1, 0x1);
        gbc.writeMem(0x26f8, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4e74, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 030D
        gbc.setState(0x4540, 0xf72c, 0x5110, 0x8ed1, 0x40c8, 0xe17a, 0x1, 0x1);
        gbc.writeMem(0x4540, { 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 030E
        gbc.setState(0x8642, 0xab4e, 0x74b0, 0x8d4, 0x38ba, 0xc58a, 0x1, 0x0);
        gbc.writeMem(0x8642, { 0x7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0x8643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8642));
        // 07 030F
        gbc.setState(0x3279, 0x7530, 0xa220, 0x30c9, 0x9fc9, 0x1b9f, 0x0, 0x1);
        gbc.writeMem(0x3279, { 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0310
        gbc.setState(0x3b88, 0x4506, 0x8180, 0x3054, 0x77cf, 0x8f1, 0x0, 0x0);
        gbc.writeMem(0x3b88, { 0x7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0311
        gbc.setState(0xa409, 0x9139, 0x45c0, 0x46ab, 0x274d, 0x4cb3, 0x0, 0x1);
        gbc.writeMem(0xa409, { 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0xa40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa409));
        // 07 0312
        gbc.setState(0x1198, 0x5e85, 0x6c60, 0x1ae, 0xbb46, 0x66e7, 0x1, 0x0);
        gbc.writeMem(0x1198, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5e85, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0313
        gbc.setState(0xd916, 0x587, 0x27d0, 0xf936, 0xe0dc, 0x5183, 0x0, 0x0);
        gbc.writeMem(0xd916, { 0x7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd916));
        // 07 0314
        gbc.setState(0x1884, 0x6b66, 0xa750, 0x595, 0xd6ab, 0xe57e, 0x1, 0x0);
        gbc.writeMem(0x1884, { 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0x1885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0315
        gbc.setState(0x8ba2, 0x7cf9, 0x8a10, 0x2f52, 0xaa7a, 0x9e59, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0x8ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8ba2));
        // 07 0316
        gbc.setState(0x3de3, 0xd8e3, 0x5220, 0x357c, 0x3690, 0x5edf, 0x0, 0x0);
        gbc.writeMem(0x3de3, { 0x7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0x3de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0317
        gbc.setState(0xaba3, 0x4ebc, 0xefb0, 0xb2f2, 0x9923, 0xc3d5, 0x0, 0x0);
        gbc.writeMem(0xaba3, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4ebc, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaba3));
        // 07 0318
        gbc.setState(0x4426, 0xc3ff, 0x9f20, 0x83fb, 0xc881, 0x8435, 0x0, 0x1);
        gbc.writeMem(0x4426, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3ff, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0319
        gbc.setState(0x6e3f, 0x7d26, 0xe9a0, 0xcc2, 0xa39c, 0xb4d7, 0x1, 0x0);
        gbc.writeMem(0x6e3f, { 0x7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x6e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 031B
        gbc.setState(0xa85b, 0x5e3, 0x5d30, 0x11da, 0x649, 0x2811, 0x1, 0x1);
        gbc.writeMem(0xa85b, { 0x7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e3, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa85b));
        // 07 031C
        gbc.setState(0x1e82, 0xa8ee, 0x8cf0, 0xb4ac, 0xfdfa, 0xdad2, 0x0, 0x1);
        gbc.writeMem(0x1e82, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0x1e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 031D
        gbc.setState(0x1d0a, 0x5f80, 0x4100, 0x8d4a, 0x6240, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0x1d0a, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f80, gbc.sp());
        EXPECT(0x1d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 031F
        gbc.setState(0xe608, 0x28c2, 0xe610, 0xb2df, 0x9b5e, 0xa95c, 0x1, 0x1);
        gbc.writeMem(0xe608, { 0x7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe608));
        // 07 0320
        gbc.setState(0x3d3f, 0x10a, 0xbe30, 0x293c, 0xfd77, 0x7a98, 0x0, 0x0);
        gbc.writeMem(0x3d3f, { 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x10a, gbc.sp());
        EXPECT(0x3d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0321
        gbc.setState(0xb6de, 0x6535, 0xa750, 0xe698, 0x8b57, 0x700c, 0x1, 0x0);
        gbc.writeMem(0xb6de, { 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0xb6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb6de));
        // 07 0322
        gbc.setState(0x4d0e, 0x770, 0x8f90, 0xf02b, 0x5b27, 0x8076, 0x0, 0x1);
        gbc.writeMem(0x4d0e, { 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x770, gbc.sp());
        EXPECT(0x4d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0324
        gbc.setState(0x24a4, 0xff02, 0xcfb0, 0x4b53, 0x8bc8, 0xa501, 0x0, 0x1);
        gbc.writeMem(0x24a4, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xff02, gbc.sp());
        EXPECT(0x24a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0325
        gbc.setState(0x381f, 0xe5c1, 0xec00, 0x39a9, 0x8662, 0xdfcb, 0x0, 0x0);
        gbc.writeMem(0x381f, { 0x7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe5c1, gbc.sp());
        EXPECT(0x3820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0326
        gbc.setState(0xd54b, 0xa8e0, 0x4f40, 0xb5ce, 0x6146, 0x8fcc, 0x1, 0x1);
        gbc.writeMem(0xd54b, { 0x7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0xd54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd54b));
        // 07 0327
        gbc.setState(0xb83f, 0xd3ef, 0xbe50, 0xe861, 0x3fcf, 0xb861, 0x0, 0x1);
        gbc.writeMem(0xb83f, { 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd3ef, gbc.sp());
        EXPECT(0xb840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb83f));
        // 07 0328
        gbc.setState(0xd616, 0x29, 0xfd10, 0xc91f, 0xaae5, 0x9179, 0x0, 0x0);
        gbc.writeMem(0xd616, { 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0xd617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd616));
        // 07 0329
        gbc.setState(0x4a19, 0x74dd, 0xf0f0, 0x33c0, 0x3594, 0x566f, 0x0, 0x0);
        gbc.writeMem(0x4a19, { 0x7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x74dd, gbc.sp());
        EXPECT(0x4a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 032A
        gbc.setState(0xac89, 0x7f, 0xd8f0, 0xee8, 0x456c, 0xf5d5, 0x1, 0x0);
        gbc.writeMem(0xac89, { 0x7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xac89));
        // 07 032C
        gbc.setState(0x7f46, 0x49d2, 0x60b0, 0xb40e, 0xe536, 0x7209, 0x0, 0x1);
        gbc.writeMem(0x7f46, { 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 032D
        gbc.setState(0xeb02, 0x67a3, 0xd3f0, 0xb62c, 0x90d7, 0xef09, 0x0, 0x1);
        gbc.writeMem(0xeb02, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x67a3, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeb02));
        // 07 032E
        gbc.setState(0x73c3, 0xb00, 0x5850, 0x50bc, 0x522, 0x1fc, 0x1, 0x1);
        gbc.writeMem(0x73c3, { 0x7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb00, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 032F
        gbc.setState(0x7121, 0x4274, 0x6bb0, 0x7ff9, 0x70e0, 0x9fbb, 0x1, 0x1);
        gbc.writeMem(0x7121, { 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4274, gbc.sp());
        EXPECT(0x7122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0331
        gbc.setState(0x2524, 0x481, 0x98b0, 0xfa2f, 0xcad5, 0x3567, 0x0, 0x0);
        gbc.writeMem(0x2524, { 0x7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x481, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0332
        gbc.setState(0x2a0a, 0x2a30, 0x9f70, 0xddc1, 0xabac, 0x1554, 0x0, 0x0);
        gbc.writeMem(0x2a0a, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0x2a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0333
        gbc.setState(0xd66e, 0x8997, 0x33f0, 0xcda, 0x1c26, 0x42c6, 0x1, 0x1);
        gbc.writeMem(0xd66e, { 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd66e));
        // 07 0334
        gbc.setState(0x5ea8, 0xe9f, 0xd6d0, 0xda66, 0xda19, 0x1709, 0x1, 0x0);
        gbc.writeMem(0x5ea8, { 0x7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0335
        gbc.setState(0x2f0, 0xf19f, 0xaea0, 0x75b0, 0x331f, 0xa877, 0x0, 0x1);
        gbc.writeMem(0x2f0, { 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf19f, gbc.sp());
        EXPECT(0x2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0336
        gbc.setState(0xbf69, 0xf31b, 0xed70, 0x5d32, 0x32ee, 0x7bd7, 0x1, 0x0);
        gbc.writeMem(0xbf69, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf31b, gbc.sp());
        EXPECT(0xbf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbf69));
        // 07 0337
        gbc.setState(0x6970, 0xc7cb, 0xef70, 0x11af, 0xa42a, 0x6222, 0x0, 0x1);
        gbc.writeMem(0x6970, { 0x7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc7cb, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0338
        gbc.setState(0x46a6, 0xeaa5, 0x4bb0, 0xd487, 0x139c, 0x18aa, 0x0, 0x1);
        gbc.writeMem(0x46a6, { 0x7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0x46a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0339
        gbc.setState(0xdd71, 0x5182, 0x9c60, 0xdc3e, 0x1b68, 0x3e93, 0x0, 0x1);
        gbc.writeMem(0xdd71, { 0x7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdd71));
        // 07 033A
        gbc.setState(0x8a14, 0xc434, 0xb1b0, 0x7dd8, 0x9fa, 0xe971, 0x0, 0x1);
        gbc.writeMem(0x8a14, { 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc434, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a14));
        // 07 033B
        gbc.setState(0xbc67, 0x80bb, 0xd060, 0x737d, 0x168c, 0x207b, 0x0, 0x1);
        gbc.writeMem(0xbc67, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x80bb, gbc.sp());
        EXPECT(0xbc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbc67));
        // 07 033E
        gbc.setState(0x543c, 0xabe4, 0x6c60, 0x2a8a, 0x74ea, 0x6840, 0x0, 0x1);
        gbc.writeMem(0x543c, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xabe4, gbc.sp());
        EXPECT(0x543d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 033F
        gbc.setState(0x3b13, 0x645, 0xc0c0, 0x6cb6, 0x62be, 0xb4fd, 0x1, 0x0);
        gbc.writeMem(0x3b13, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x645, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0340
        gbc.setState(0xc5b6, 0x40e9, 0xebb0, 0x795d, 0xd553, 0xead5, 0x1, 0x1);
        gbc.writeMem(0xc5b6, { 0x7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x40e9, gbc.sp());
        EXPECT(0xc5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc5b6));
        // 07 0342
        gbc.setState(0xed60, 0xff8b, 0x7f0, 0x3f13, 0x7b2e, 0x74e9, 0x1, 0x1);
        gbc.writeMem(0xed60, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0xed61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xed60));
        // 07 0343
        gbc.setState(0xd662, 0xd8a3, 0x9eb0, 0x8133, 0xa102, 0x4552, 0x0, 0x1);
        gbc.writeMem(0xd662, { 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd8a3, gbc.sp());
        EXPECT(0xd663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd662));
        // 07 0344
        gbc.setState(0x2d21, 0x194a, 0x4e50, 0x7b53, 0x9577, 0xf732, 0x0, 0x1);
        gbc.writeMem(0x2d21, { 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x194a, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0345
        gbc.setState(0xd81a, 0x262e, 0xcfc0, 0x5595, 0x17ea, 0xb25a, 0x0, 0x0);
        gbc.writeMem(0xd81a, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd81a));
        // 07 0346
        gbc.setState(0x593f, 0x2bc0, 0x9d50, 0x36b7, 0xf026, 0xbab6, 0x0, 0x0);
        gbc.writeMem(0x593f, { 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2bc0, gbc.sp());
        EXPECT(0x5940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0347
        gbc.setState(0xea88, 0x70e4, 0x4350, 0xa113, 0xd3fc, 0x275a, 0x1, 0x0);
        gbc.writeMem(0xea88, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x70e4, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xea88));
        // 07 0348
        gbc.setState(0x1f8, 0x5f7b, 0xb580, 0x28a6, 0x4784, 0xe4fc, 0x1, 0x1);
        gbc.writeMem(0x1f8, { 0x7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0349
        gbc.setState(0x948d, 0x879a, 0xba10, 0x1a82, 0xceb5, 0xc3bf, 0x1, 0x0);
        gbc.writeMem(0x948d, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0x948e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x948d));
        // 07 034A
        gbc.setState(0x8b4e, 0xda25, 0xa120, 0x1fb3, 0x4e09, 0xb42d, 0x1, 0x1);
        gbc.writeMem(0x8b4e, { 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8b4e));
        // 07 034B
        gbc.setState(0x8fa4, 0x9a2d, 0xcbe0, 0xcc56, 0x41e8, 0x47c5, 0x1, 0x1);
        gbc.writeMem(0x8fa4, { 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8fa4));
        // 07 034C
        gbc.setState(0x4085, 0xaa58, 0xb970, 0x99b2, 0x3d57, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0x4085, { 0x7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa58, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 034D
        gbc.setState(0x6a62, 0xcdea, 0x2200, 0x4ec9, 0xc14, 0x3a33, 0x0, 0x0);
        gbc.writeMem(0x6a62, { 0x7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0x6a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 034E
        gbc.setState(0xe173, 0x4b08, 0x31c0, 0x22a8, 0xf08d, 0x703e, 0x0, 0x0);
        gbc.writeMem(0xe173, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0xe174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe173));
        // 07 034F
        gbc.setState(0xb2ce, 0x111, 0x2e90, 0x2456, 0xd74a, 0x856e, 0x0, 0x1);
        gbc.writeMem(0xb2ce, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb2ce));
        // 07 0350
        gbc.setState(0xa7b9, 0x3008, 0x1970, 0xc659, 0x81a6, 0xc7a3, 0x0, 0x1);
        gbc.writeMem(0xa7b9, { 0x7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3008, gbc.sp());
        EXPECT(0xa7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa7b9));
        // 07 0351
        gbc.setState(0x141c, 0xf14d, 0x3320, 0xe960, 0xcf6, 0x6ac9, 0x1, 0x1);
        gbc.writeMem(0x141c, { 0x7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf14d, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0352
        gbc.setState(0x8ee2, 0xa4db, 0x3190, 0xa9e3, 0x774, 0x8d91, 0x1, 0x0);
        gbc.writeMem(0x8ee2, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0x8ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8ee2));
        // 07 0353
        gbc.setState(0xe2f6, 0xb13f, 0xe570, 0x53bf, 0x3c3a, 0x7d17, 0x1, 0x0);
        gbc.writeMem(0xe2f6, { 0x7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe2f6));
        // 07 0354
        gbc.setState(0x322, 0x272f, 0x3f50, 0xcbce, 0xbf85, 0x3857, 0x0, 0x0);
        gbc.writeMem(0x322, { 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0355
        gbc.setState(0x100c, 0x8442, 0xdf60, 0xe147, 0x5f31, 0xf6e8, 0x1, 0x0);
        gbc.writeMem(0x100c, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0356
        gbc.setState(0xd1b7, 0x90e7, 0xbc40, 0x4f5e, 0xf8fb, 0x9999, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0x7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x90e7, gbc.sp());
        EXPECT(0xd1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd1b7));
        // 07 0357
        gbc.setState(0x2297, 0x273e, 0x9f70, 0xa11a, 0x7db9, 0x14ba, 0x1, 0x0);
        gbc.writeMem(0x2297, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0x2298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0358
        gbc.setState(0x4597, 0xf3d4, 0x4e90, 0x32d5, 0x6db4, 0x7392, 0x1, 0x0);
        gbc.writeMem(0x4597, { 0x7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0x4598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 035A
        gbc.setState(0xb01a, 0x6bca, 0xc7a0, 0x7943, 0x655a, 0xae4, 0x1, 0x1);
        gbc.writeMem(0xb01a, { 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb01a));
        // 07 035B
        gbc.setState(0x62b6, 0x7cda, 0xdc60, 0xf59, 0xa497, 0x98a0, 0x0, 0x1);
        gbc.writeMem(0x62b6, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 035C
        gbc.setState(0x159f, 0xb04, 0x7010, 0x9494, 0xc471, 0xf113, 0x1, 0x0);
        gbc.writeMem(0x159f, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0x15a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 035D
        gbc.setState(0x925b, 0x1328, 0xa620, 0x5d92, 0xd868, 0x2b8b, 0x0, 0x1);
        gbc.writeMem(0x925b, { 0x7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1328, gbc.sp());
        EXPECT(0x925c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x925b));
        // 07 035E
        gbc.setState(0xbe48, 0x57f1, 0x3ca0, 0x6be7, 0x9e71, 0x2d61, 0x1, 0x1);
        gbc.writeMem(0xbe48, { 0x7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x57f1, gbc.sp());
        EXPECT(0xbe49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbe48));
        // 07 035F
        gbc.setState(0x1f1c, 0xf1bc, 0xa1f0, 0x630a, 0x78b0, 0x4109, 0x1, 0x0);
        gbc.writeMem(0x1f1c, { 0x7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0360
        gbc.setState(0x93e6, 0xe4f5, 0xc260, 0x19df, 0x1048, 0x9470, 0x1, 0x1);
        gbc.writeMem(0x93e6, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4f5, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x93e6));
        // 07 0361
        gbc.setState(0xec00, 0xdec4, 0xbdc0, 0xc73e, 0xec3a, 0x4e8e, 0x0, 0x0);
        gbc.writeMem(0xec00, { 0x7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdec4, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xec00));
        // 07 0362
        gbc.setState(0xe5a9, 0xb007, 0xbe60, 0x2bd0, 0xc3f6, 0x6767, 0x0, 0x0);
        gbc.writeMem(0xe5a9, { 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb007, gbc.sp());
        EXPECT(0xe5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe5a9));
        // 07 0363
        gbc.setState(0x6f14, 0x414e, 0x8bb0, 0xc3f1, 0x6204, 0x81d0, 0x0, 0x0);
        gbc.writeMem(0x6f14, { 0x7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x414e, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0364
        gbc.setState(0x29ac, 0x9f0a, 0xa830, 0x481b, 0x3d9f, 0xbcef, 0x1, 0x0);
        gbc.writeMem(0x29ac, { 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0365
        gbc.setState(0x875f, 0xaa4, 0x8a90, 0xaf59, 0xe620, 0xf531, 0x1, 0x0);
        gbc.writeMem(0x875f, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x875f));
        // 07 0366
        gbc.setState(0xa4da, 0x23af, 0xadf0, 0x25, 0xb18c, 0xc628, 0x1, 0x1);
        gbc.writeMem(0xa4da, { 0x7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa4da));
        // 07 0367
        gbc.setState(0x36d7, 0xfd42, 0x6170, 0x503b, 0xe442, 0xa5f2, 0x0, 0x0);
        gbc.writeMem(0x36d7, { 0x7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfd42, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0368
        gbc.setState(0xd892, 0xdcfe, 0xa2d0, 0xae2c, 0x4667, 0x2e7c, 0x0, 0x0);
        gbc.writeMem(0xd892, { 0x7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdcfe, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd892));
        // 07 0369
        gbc.setState(0xbb80, 0x2769, 0xee80, 0x2237, 0xa0e2, 0x78f, 0x1, 0x0);
        gbc.writeMem(0xbb80, { 0x7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2769, gbc.sp());
        EXPECT(0xbb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbb80));
        // 07 036A
        gbc.setState(0x6135, 0x9b8c, 0xd090, 0x7989, 0x2457, 0x832b, 0x1, 0x0);
        gbc.writeMem(0x6135, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0x6136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 036B
        gbc.setState(0x540e, 0x28c6, 0xe210, 0xb90f, 0xda3b, 0xd21b, 0x0, 0x1);
        gbc.writeMem(0x540e, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x28c6, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 036C
        gbc.setState(0x3eee, 0xbfc0, 0x2ed0, 0x69f2, 0x4471, 0x9ebb, 0x0, 0x1);
        gbc.writeMem(0x3eee, { 0x7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbfc0, gbc.sp());
        EXPECT(0x3eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 036D
        gbc.setState(0x1f31, 0xba33, 0x5f50, 0xa57f, 0x83bb, 0x1f67, 0x0, 0x1);
        gbc.writeMem(0x1f31, { 0x7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x1f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 036E
        gbc.setState(0x3fbf, 0x1692, 0xae20, 0xe450, 0xa9a9, 0xa95b, 0x0, 0x1);
        gbc.writeMem(0x3fbf, { 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1692, gbc.sp());
        EXPECT(0x3fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 036F
        gbc.setState(0xed6a, 0x7b2e, 0xf290, 0x2a37, 0x204b, 0x6a8, 0x1, 0x0);
        gbc.writeMem(0xed6a, { 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xed6a));
        // 07 0370
        gbc.setState(0x9229, 0x9568, 0x1710, 0xb77b, 0x831a, 0xdd10, 0x1, 0x1);
        gbc.writeMem(0x9229, { 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9568, gbc.sp());
        EXPECT(0x922a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9229));
        // 07 0371
        gbc.setState(0xb82a, 0x5699, 0x4960, 0xe584, 0x3d99, 0x615f, 0x1, 0x1);
        gbc.writeMem(0xb82a, { 0x7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5699, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb82a));
        // 07 0372
        gbc.setState(0xd89b, 0xe7d1, 0xed30, 0xe58a, 0x452c, 0xae2, 0x0, 0x0);
        gbc.writeMem(0xd89b, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7d1, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd89b));
        // 07 0373
        gbc.setState(0x46fa, 0x302d, 0xd1e0, 0x2eab, 0xa599, 0x279f, 0x1, 0x0);
        gbc.writeMem(0x46fa, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x302d, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0374
        gbc.setState(0x97e3, 0xd3a1, 0xc0e0, 0xf0c5, 0x8989, 0x2be1, 0x1, 0x1);
        gbc.writeMem(0x97e3, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x97e3));
        // 07 0375
        gbc.setState(0xa0a1, 0x5036, 0x69f0, 0x88ca, 0xd895, 0xb39e, 0x1, 0x1);
        gbc.writeMem(0xa0a1, { 0x7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa0a1));
        // 07 0376
        gbc.setState(0x42c2, 0x1aa9, 0x7550, 0xd2ba, 0x42f1, 0xa36d, 0x0, 0x1);
        gbc.writeMem(0x42c2, { 0x7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1aa9, gbc.sp());
        EXPECT(0x42c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0377
        gbc.setState(0x7564, 0x86f0, 0xf5e0, 0x6b05, 0xa407, 0x17ff, 0x1, 0x0);
        gbc.writeMem(0x7564, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x86f0, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0378
        gbc.setState(0xad24, 0x8a8b, 0xb040, 0x7d5, 0x4c78, 0xd3f0, 0x1, 0x0);
        gbc.writeMem(0xad24, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8a8b, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xad24));
        // 07 0379
        gbc.setState(0xd3fd, 0x87ab, 0x8ce0, 0xd454, 0x371d, 0x4468, 0x0, 0x1);
        gbc.writeMem(0xd3fd, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x87ab, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd3fd));
        // 07 037A
        gbc.setState(0xde85, 0x6d1d, 0xf9d0, 0x680b, 0xec87, 0x18e7, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0x7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6d1d, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xde85));
        // 07 037B
        gbc.setState(0x513f, 0x8a26, 0xcff0, 0xb194, 0xf1d2, 0x7f3c, 0x0, 0x0);
        gbc.writeMem(0x513f, { 0x7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 037C
        gbc.setState(0x66a6, 0x3f3e, 0x3150, 0xa71a, 0xd433, 0x6205, 0x0, 0x1);
        gbc.writeMem(0x66a6, { 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3f3e, gbc.sp());
        EXPECT(0x66a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 037D
        gbc.setState(0x4b43, 0xc49b, 0xe2d0, 0x3ba0, 0xd723, 0x2db3, 0x0, 0x1);
        gbc.writeMem(0x4b43, { 0x7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 037F
        gbc.setState(0xbad2, 0x6061, 0x2080, 0xbfb0, 0xda78, 0x3390, 0x1, 0x1);
        gbc.writeMem(0xbad2, { 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbad2));
        // 07 0380
        gbc.setState(0xa4c7, 0x9f30, 0xc980, 0x2c63, 0xbeac, 0x3aa0, 0x0, 0x1);
        gbc.writeMem(0xa4c7, { 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9f30, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa4c7));
        // 07 0381
        gbc.setState(0x360b, 0x3e3d, 0xc000, 0x554b, 0x8ab6, 0xdb81, 0x1, 0x0);
        gbc.writeMem(0x360b, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3e3d, gbc.sp());
        EXPECT(0x360c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0382
        gbc.setState(0xfa3, 0x2b11, 0x1390, 0xbb45, 0xd3d5, 0x85b6, 0x0, 0x1);
        gbc.writeMem(0xfa3, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2b11, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0383
        gbc.setState(0xab5d, 0x6775, 0xc040, 0x843a, 0xd33d, 0x5884, 0x1, 0x0);
        gbc.writeMem(0xab5d, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6775, gbc.sp());
        EXPECT(0xab5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xab5d));
        // 07 0384
        gbc.setState(0x5e4b, 0x7ed5, 0x1000, 0x3d, 0x9adb, 0x3eed, 0x0, 0x0);
        gbc.writeMem(0x5e4b, { 0x7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0385
        gbc.setState(0xe031, 0x5792, 0xc3b0, 0x6bdc, 0xda61, 0x5537, 0x0, 0x1);
        gbc.writeMem(0xe031, { 0x7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5792, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe031));
        // 07 0387
        gbc.setState(0x8e97, 0xf3da, 0xcbb0, 0x20f9, 0xaee1, 0xbadf, 0x1, 0x0);
        gbc.writeMem(0x8e97, { 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e97));
        // 07 0388
        gbc.setState(0x9568, 0xc9aa, 0x7030, 0xd9a4, 0x69c8, 0xb10b, 0x0, 0x0);
        gbc.writeMem(0x9568, { 0x7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9568));
        // 07 0389
        gbc.setState(0x3390, 0xd2c7, 0xdc90, 0xaf61, 0x273a, 0x4e0c, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0x7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x3391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 038A
        gbc.setState(0x203, 0xe187, 0x6080, 0x5cce, 0xf9f9, 0xf594, 0x1, 0x1);
        gbc.writeMem(0x203, { 0x7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0x204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 038B
        gbc.setState(0x9ecb, 0x2cda, 0xf270, 0x3868, 0x1d14, 0xb868, 0x1, 0x0);
        gbc.writeMem(0x9ecb, { 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0x9ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9ecb));
        // 07 038C
        gbc.setState(0xc3d0, 0x1bc6, 0x26a0, 0xc0cf, 0x8aec, 0xe5d2, 0x1, 0x1);
        gbc.writeMem(0xc3d0, { 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0xc3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc3d0));
        // 07 038D
        gbc.setState(0xc0a9, 0xd427, 0xd2a0, 0xae7e, 0x26aa, 0xccec, 0x1, 0x0);
        gbc.writeMem(0xc0a9, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd427, gbc.sp());
        EXPECT(0xc0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc0a9));
        // 07 038E
        gbc.setState(0xd2d6, 0x5e4e, 0x9040, 0x7418, 0x4703, 0xbc0a, 0x1, 0x1);
        gbc.writeMem(0xd2d6, { 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5e4e, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd2d6));
        // 07 038F
        gbc.setState(0x1797, 0x5d56, 0x8740, 0x79d4, 0xc923, 0x91c8, 0x0, 0x0);
        gbc.writeMem(0x1797, { 0x7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5d56, gbc.sp());
        EXPECT(0x1798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0390
        gbc.setState(0x772c, 0x9666, 0xd140, 0x9ec3, 0x92c8, 0x7370, 0x1, 0x1);
        gbc.writeMem(0x772c, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0391
        gbc.setState(0x3508, 0x3812, 0x9d20, 0x41fc, 0x9bf8, 0xef9d, 0x1, 0x1);
        gbc.writeMem(0x3508, { 0x7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0392
        gbc.setState(0xacff, 0x8d29, 0xf530, 0x17d7, 0x2aa, 0x8f8b, 0x0, 0x0);
        gbc.writeMem(0xacff, { 0x7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8d29, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xacff));
        // 07 0393
        gbc.setState(0xbc0, 0xe295, 0x730, 0x6b7c, 0x8536, 0x69d9, 0x1, 0x1);
        gbc.writeMem(0xbc0, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe295, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 0394
        gbc.setState(0x89d8, 0xd7de, 0xaa0, 0x1b80, 0xd9d9, 0x6e4a, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0x7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x89d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x89d8));
        // 07 0395
        gbc.setState(0x7411, 0xbc05, 0x88b0, 0xe274, 0xeabf, 0x273e, 0x0, 0x1);
        gbc.writeMem(0x7411, { 0x7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0x7412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0396
        gbc.setState(0x12c5, 0xc563, 0xd0a0, 0x334, 0x161f, 0xe846, 0x0, 0x1);
        gbc.writeMem(0x12c5, { 0x7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0x12c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 0397
        gbc.setState(0xd613, 0x6493, 0xdaa0, 0xb9c, 0xad7b, 0xd046, 0x0, 0x1);
        gbc.writeMem(0xd613, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6493, gbc.sp());
        EXPECT(0xd614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd613));
        // 07 0398
        gbc.setState(0xcd0f, 0xad43, 0x20, 0x857e, 0x3902, 0xdf45, 0x1, 0x1);
        gbc.writeMem(0xcd0f, { 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad43, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcd0f));
        // 07 039A
        gbc.setState(0x21e5, 0x826e, 0xd250, 0x3b7f, 0x74b6, 0xbb08, 0x0, 0x0);
        gbc.writeMem(0x21e5, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x826e, gbc.sp());
        EXPECT(0x21e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 039B
        gbc.setState(0x9300, 0x91b4, 0x4460, 0xa787, 0x1a0, 0x1e8e, 0x0, 0x0);
        gbc.writeMem(0x9300, { 0x7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x9301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9300));
        // 07 039C
        gbc.setState(0x5d7f, 0x487e, 0xb7c0, 0xaca6, 0x545c, 0x63f4, 0x0, 0x1);
        gbc.writeMem(0x5d7f, { 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x487e, gbc.sp());
        EXPECT(0x5d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 039D
        gbc.setState(0x2a5f, 0x6423, 0xd2c0, 0x89e, 0x1a3b, 0x281c, 0x0, 0x0);
        gbc.writeMem(0x2a5f, { 0x7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6423, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 039E
        gbc.setState(0xe723, 0x56b, 0x9f00, 0x5c32, 0xae97, 0xba31, 0x1, 0x0);
        gbc.writeMem(0xe723, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xe724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe723));
        // 07 039F
        gbc.setState(0x501b, 0xe071, 0xb020, 0x9299, 0xf251, 0x2dd5, 0x1, 0x1);
        gbc.writeMem(0x501b, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0x501c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03A0
        gbc.setState(0xc6ba, 0x402b, 0x9080, 0x8f6e, 0x1f52, 0x8545, 0x0, 0x0);
        gbc.writeMem(0xc6ba, { 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x402b, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc6ba));
        // 07 03A1
        gbc.setState(0x4e3a, 0x29f2, 0x4360, 0x5201, 0xb982, 0x566f, 0x0, 0x0);
        gbc.writeMem(0x4e3a, { 0x7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x29f2, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03A2
        gbc.setState(0x7101, 0x5b6b, 0xb080, 0x3553, 0xee69, 0xa085, 0x0, 0x0);
        gbc.writeMem(0x7101, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0x7102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03A3
        gbc.setState(0x62a2, 0x5f00, 0xf200, 0x10a0, 0xad1d, 0xa802, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0x7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03A4
        gbc.setState(0xd546, 0x47ef, 0xdf20, 0xa32d, 0xd00e, 0xffff, 0x0, 0x1);
        gbc.writeMem(0xd546, { 0x7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x47ef, gbc.sp());
        EXPECT(0xd547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd546));
        // 07 03A5
        gbc.setState(0xa40d, 0x30c1, 0x8cf0, 0x22bc, 0x91c, 0xb670, 0x1, 0x0);
        gbc.writeMem(0xa40d, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x30c1, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa40d));
        // 07 03A6
        gbc.setState(0x89c, 0xb571, 0x8af0, 0x8264, 0x2e35, 0x8d28, 0x1, 0x0);
        gbc.writeMem(0x89c, { 0x7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03A7
        gbc.setState(0x5942, 0x2871, 0x9b20, 0x2e10, 0xf2b0, 0xae12, 0x0, 0x1);
        gbc.writeMem(0x5942, { 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0x5943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03A8
        gbc.setState(0x3d9c, 0xeac4, 0x2530, 0x79ee, 0x402f, 0xb11, 0x1, 0x0);
        gbc.writeMem(0x3d9c, { 0x7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeac4, gbc.sp());
        EXPECT(0x3d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03A9
        gbc.setState(0x440, 0x527e, 0xdd40, 0x1198, 0xebee, 0x167d, 0x1, 0x0);
        gbc.writeMem(0x440, { 0x7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x527e, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03AA
        gbc.setState(0x4c02, 0xd80c, 0x6c70, 0xedbe, 0xfc62, 0x6016, 0x0, 0x0);
        gbc.writeMem(0x4c02, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd80c, gbc.sp());
        EXPECT(0x4c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03AB
        gbc.setState(0x1c1c, 0x361f, 0x4f90, 0xcd57, 0x73ae, 0xc02d, 0x0, 0x1);
        gbc.writeMem(0x1c1c, { 0x7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0x1c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03AC
        gbc.setState(0x610, 0x2fc0, 0xfd50, 0x7c60, 0xf2e4, 0x9ac5, 0x0, 0x1);
        gbc.writeMem(0x610, { 0x7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2fc0, gbc.sp());
        EXPECT(0x611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03AD
        gbc.setState(0xe382, 0x4ef1, 0xac10, 0xc11d, 0xe7eb, 0x16ad, 0x1, 0x0);
        gbc.writeMem(0xe382, { 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0xe383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe382));
        // 07 03AF
        gbc.setState(0xe337, 0xe4aa, 0xb150, 0x525f, 0x1382, 0xaa3c, 0x0, 0x1);
        gbc.writeMem(0xe337, { 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe4aa, gbc.sp());
        EXPECT(0xe338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe337));
        // 07 03B0
        gbc.setState(0x8c0a, 0x4da9, 0x95b0, 0xc2d1, 0x1473, 0x99d9, 0x0, 0x1);
        gbc.writeMem(0x8c0a, { 0x7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0x8c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8c0a));
        // 07 03B1
        gbc.setState(0x5a02, 0xb4d0, 0x8f00, 0x66c0, 0x2822, 0xffcc, 0x1, 0x0);
        gbc.writeMem(0x5a02, { 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb4d0, gbc.sp());
        EXPECT(0x5a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03B2
        gbc.setState(0x8a28, 0xc7a9, 0x8f30, 0x4e7c, 0x5320, 0xd578, 0x0, 0x0);
        gbc.writeMem(0x8a28, { 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc7a9, gbc.sp());
        EXPECT(0x8a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8a28));
        // 07 03B3
        gbc.setState(0x2f18, 0xcf41, 0x55d0, 0x2b6, 0xe5a1, 0xcfd3, 0x0, 0x1);
        gbc.writeMem(0x2f18, { 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcf41, gbc.sp());
        EXPECT(0x2f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03B4
        gbc.setState(0x7e48, 0xe64b, 0x26b0, 0x80ab, 0x4b51, 0xd8ee, 0x1, 0x0);
        gbc.writeMem(0x7e48, { 0x7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03B5
        gbc.setState(0xc939, 0x87c0, 0xbe80, 0x8047, 0xcca0, 0xe35, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0x7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0xc93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc939));
        // 07 03B6
        gbc.setState(0x7e10, 0xbfa2, 0xd9f0, 0xa015, 0xc058, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x7e10, { 0x7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbfa2, gbc.sp());
        EXPECT(0x7e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03B7
        gbc.setState(0x995c, 0x20d7, 0xac90, 0x2b33, 0xaf86, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0x995c, { 0x7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0x995d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x995c));
        // 07 03B8
        gbc.setState(0x27b7, 0x885a, 0xd3c0, 0xaea5, 0x974b, 0x9396, 0x0, 0x0);
        gbc.writeMem(0x27b7, { 0x7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x885a, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03B9
        gbc.setState(0x915e, 0x6c0, 0xdac0, 0x6db8, 0x17a7, 0xa3a4, 0x0, 0x1);
        gbc.writeMem(0x915e, { 0x7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0x915f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x915e));
        // 07 03BA
        gbc.setState(0xa3d4, 0x3bc0, 0x4df0, 0xfd2f, 0x2060, 0xa0d0, 0x0, 0x1);
        gbc.writeMem(0xa3d4, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0xa3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa3d4));
        // 07 03BB
        gbc.setState(0xcb7, 0xbfaa, 0xbb50, 0x9235, 0x4e1f, 0xe574, 0x0, 0x1);
        gbc.writeMem(0xcb7, { 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbfaa, gbc.sp());
        EXPECT(0xcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03BC
        gbc.setState(0xd5fe, 0x9308, 0x5ae0, 0xe0dd, 0x554e, 0x24ce, 0x0, 0x0);
        gbc.writeMem(0xd5fe, { 0x7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9308, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd5fe));
        // 07 03BD
        gbc.setState(0x4152, 0xe690, 0x8280, 0x10bd, 0xc423, 0xc96a, 0x0, 0x0);
        gbc.writeMem(0x4152, { 0x7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03BE
        gbc.setState(0xa4d6, 0x7921, 0x5b60, 0x2f9d, 0x85a1, 0x9a6d, 0x0, 0x1);
        gbc.writeMem(0xa4d6, { 0x7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa4d6));
        // 07 03BF
        gbc.setState(0x929a, 0xc799, 0x1780, 0x3350, 0xd228, 0x3d79, 0x0, 0x1);
        gbc.writeMem(0x929a, { 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x929a));
        // 07 03C0
        gbc.setState(0xc309, 0x674b, 0xff60, 0xdbc8, 0xdc13, 0xdbc6, 0x1, 0x0);
        gbc.writeMem(0xc309, { 0x7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0xc30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc309));
        // 07 03C1
        gbc.setState(0xa9a0, 0xe105, 0x8d00, 0x934d, 0xd4c3, 0xa7a, 0x0, 0x0);
        gbc.writeMem(0xa9a0, { 0x7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe105, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa9a0));
        // 07 03C2
        gbc.setState(0x7e2d, 0x1b71, 0xba20, 0xa593, 0x3270, 0xc66f, 0x1, 0x1);
        gbc.writeMem(0x7e2d, { 0x7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03C3
        gbc.setState(0x7083, 0x1059, 0xea50, 0xc03, 0xd3b0, 0x823f, 0x0, 0x0);
        gbc.writeMem(0x7083, { 0x7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03C4
        gbc.setState(0x4813, 0xade3, 0x1330, 0x6cea, 0x9e91, 0xec48, 0x1, 0x1);
        gbc.writeMem(0x4813, { 0x7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xade3, gbc.sp());
        EXPECT(0x4814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03C5
        gbc.setState(0x8810, 0x3a60, 0xb7d0, 0x2810, 0x9dad, 0xf7af, 0x1, 0x0);
        gbc.writeMem(0x8810, { 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8810));
        // 07 03C6
        gbc.setState(0x6cff, 0xa1b0, 0x2080, 0x7a93, 0x14a1, 0xfcaf, 0x1, 0x0);
        gbc.writeMem(0x6cff, { 0x7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa1b0, gbc.sp());
        EXPECT(0x6d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03C7
        gbc.setState(0xcc61, 0x3149, 0xc70, 0x8449, 0x32c6, 0x397d, 0x0, 0x0);
        gbc.writeMem(0xcc61, { 0x7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcc61));
        // 07 03C8
        gbc.setState(0x5b5a, 0x6b42, 0xcde0, 0xa883, 0xbda2, 0x759f, 0x0, 0x1);
        gbc.writeMem(0x5b5a, { 0x7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6b42, gbc.sp());
        EXPECT(0x5b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03CA
        gbc.setState(0x7c62, 0x4765, 0x5040, 0xf324, 0x4dc1, 0x3005, 0x1, 0x0);
        gbc.writeMem(0x7c62, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4765, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03CB
        gbc.setState(0x952d, 0x33, 0xe9f0, 0x7b0e, 0x774a, 0x9e6f, 0x0, 0x1);
        gbc.writeMem(0x952d, { 0x7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x33, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x952d));
        // 07 03CC
        gbc.setState(0xed58, 0x8c60, 0x5150, 0x33c9, 0xa01e, 0x5ac0, 0x0, 0x0);
        gbc.writeMem(0xed58, { 0x7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8c60, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xed58));
        // 07 03CD
        gbc.setState(0xbbf6, 0xaae2, 0x3550, 0x6b0c, 0x2380, 0xbed, 0x0, 0x1);
        gbc.writeMem(0xbbf6, { 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaae2, gbc.sp());
        EXPECT(0xbbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbbf6));
        // 07 03CE
        gbc.setState(0xbef8, 0x501b, 0xc0e0, 0xdded, 0x6def, 0xe49c, 0x0, 0x0);
        gbc.writeMem(0xbef8, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbef8));
        // 07 03CF
        gbc.setState(0x1045, 0x52fc, 0x3550, 0xdac2, 0x998b, 0x4f3c, 0x0, 0x1);
        gbc.writeMem(0x1045, { 0x7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x52fc, gbc.sp());
        EXPECT(0x1046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03D0
        gbc.setState(0xc3ba, 0x8155, 0xa730, 0xb1fe, 0xb7c5, 0x5492, 0x0, 0x0);
        gbc.writeMem(0xc3ba, { 0x7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc3ba));
        // 07 03D2
        gbc.setState(0xef08, 0x7fe4, 0x3f40, 0xf4fd, 0x888b, 0xd968, 0x1, 0x1);
        gbc.writeMem(0xef08, { 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xef08));
        // 07 03D3
        gbc.setState(0xd2a7, 0xefb8, 0xc060, 0xa549, 0xed95, 0xedb7, 0x1, 0x1);
        gbc.writeMem(0xd2a7, { 0x7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xefb8, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd2a7));
        // 07 03D4
        gbc.setState(0x95a6, 0x2532, 0x340, 0xa863, 0x8e92, 0x74bb, 0x0, 0x0);
        gbc.writeMem(0x95a6, { 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2532, gbc.sp());
        EXPECT(0x95a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x95a6));
        // 07 03D5
        gbc.setState(0xb885, 0x69b5, 0x4180, 0x881e, 0xe2ee, 0x64f7, 0x1, 0x1);
        gbc.writeMem(0xb885, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x69b5, gbc.sp());
        EXPECT(0xb886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb885));
        // 07 03D6
        gbc.setState(0xb980, 0x9ed2, 0x5940, 0xbac9, 0x60b6, 0xb99f, 0x1, 0x1);
        gbc.writeMem(0xb980, { 0x7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0xb981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb980));
        // 07 03D7
        gbc.setState(0x3737, 0xb8f9, 0x48f0, 0xe299, 0x863c, 0xcbdb, 0x1, 0x0);
        gbc.writeMem(0x3737, { 0x7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0x3738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03D8
        gbc.setState(0xbd9f, 0xd95d, 0x8c00, 0xc463, 0xe41f, 0x203d, 0x0, 0x1);
        gbc.writeMem(0xbd9f, { 0x7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd95d, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbd9f));
        // 07 03D9
        gbc.setState(0xef0f, 0x4925, 0xa0f0, 0x18bf, 0x404a, 0xb365, 0x1, 0x0);
        gbc.writeMem(0xef0f, { 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4925, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xef0f));
        // 07 03DA
        gbc.setState(0xe357, 0xf66d, 0x4da0, 0xf53, 0x2b6b, 0xc8b0, 0x0, 0x0);
        gbc.writeMem(0xe357, { 0x7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf66d, gbc.sp());
        EXPECT(0xe358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe357));
        // 07 03DD
        gbc.setState(0xc8a7, 0x5bb3, 0x6a00, 0x32c1, 0x2e47, 0xc975, 0x1, 0x1);
        gbc.writeMem(0xc8a7, { 0x7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5bb3, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc8a7));
        // 07 03DE
        gbc.setState(0xbee2, 0x1755, 0x2f60, 0xa89d, 0xaac7, 0xec19, 0x0, 0x0);
        gbc.writeMem(0xbee2, { 0x7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1755, gbc.sp());
        EXPECT(0xbee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbee2));
        // 07 03DF
        gbc.setState(0xe003, 0x45e7, 0x4d0, 0xaaed, 0xdcc5, 0x601e, 0x1, 0x0);
        gbc.writeMem(0xe003, { 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0xe004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe003));
        // 07 03E1
        gbc.setState(0x3daf, 0x5e1e, 0x6690, 0xfc4d, 0x2ac7, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x3daf, { 0x7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5e1e, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03E2
        gbc.setState(0x6792, 0xd164, 0x50e0, 0xbc93, 0x29f4, 0xa3de, 0x0, 0x1);
        gbc.writeMem(0x6792, { 0x7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd164, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03E3
        gbc.setState(0x60bc, 0xb59f, 0x0, 0xc589, 0xa700, 0x3196, 0x0, 0x1);
        gbc.writeMem(0x60bc, { 0x7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb59f, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 07 03E4
        gbc.setState(0x2f66, 0x4fd1, 0x90e0, 0xde9, 0x958b, 0x8017, 0x0, 0x1);
        gbc.writeMem(0x2f66, { 0x7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0x2f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 07 03E7
        gbc.setState(0x63ed, 0x871c, 0xbf30, 0xe754, 0x7f24, 0xfd58, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0x7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0x63ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
