    TEST(gbcemu, opcode_66) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 66 0000
        gbc.setState(0xdf8d, 0xaf46, 0xabb0, 0x7b33, 0x5bf2, 0x7d91, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0x9a });
        gbc.writeMem(0xdf8d, { 0x66 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdf8d));
        // 66 0001
        gbc.setState(0x2e74, 0xd4b3, 0xc730, 0x63f0, 0xf3ca, 0x309e, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0x66 });
        gbc.writeMem(0x309e, { 0x59 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd4b3, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0002
        gbc.setState(0xae37, 0x122b, 0x1c00, 0x42ec, 0xd375, 0x6542, 0x0, 0x1);
        gbc.writeMem(0x6542, { 0x8d });
        gbc.writeMem(0xae37, { 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xae38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xae37));
        // 66 0003
        gbc.setState(0x5870, 0xa0c9, 0xf670, 0x1fb2, 0x1e14, 0x7e9f, 0x1, 0x0);
        gbc.writeMem(0x5870, { 0x66 });
        gbc.writeMem(0x7e9f, { 0xcf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x5871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0004
        gbc.setState(0xd7e8, 0xf405, 0xfe70, 0xaff6, 0xc75, 0x1e9d, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0x1c });
        gbc.writeMem(0xd7e8, { 0x66 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf405, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd7e8));
        // 66 0005
        gbc.setState(0xb440, 0xe074, 0x3e10, 0x17a7, 0x8933, 0x4479, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0xf6 });
        gbc.writeMem(0xb440, { 0x66 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe074, gbc.sp());
        EXPECT(0xb441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb440));
        // 66 0006
        gbc.setState(0xdc9e, 0x5826, 0x370, 0xc8de, 0x5427, 0x6ef6, 0x0, 0x1);
        gbc.writeMem(0x6ef6, { 0xa6 });
        gbc.writeMem(0xdc9e, { 0x66 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5826, gbc.sp());
        EXPECT(0xdc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc9e));
        // 66 0007
        gbc.setState(0x3ae, 0x8d0d, 0x9c50, 0x5280, 0xd29d, 0xf23e, 0x0, 0x0);
        gbc.writeMem(0x3ae, { 0x66 });
        gbc.writeMem(0xf23e, { 0xc4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8d0d, gbc.sp());
        EXPECT(0x3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xf23e));
        // 66 0008
        gbc.setState(0xa891, 0x7cb9, 0x5d30, 0x4d46, 0x2c57, 0x5cac, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0x2e });
        gbc.writeMem(0xa891, { 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7cb9, gbc.sp());
        EXPECT(0xa892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa891));
        // 66 0009
        gbc.setState(0x11b2, 0xb3f8, 0xf2b0, 0xdca0, 0x6e47, 0x924d, 0x1, 0x1);
        gbc.writeMem(0x11b2, { 0x66 });
        gbc.writeMem(0x924d, { 0xfa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb3f8, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x924d));
        // 66 000A
        gbc.setState(0xb606, 0x5f9b, 0xe520, 0xbde2, 0xe8e9, 0x4ca8, 0x0, 0x1);
        gbc.writeMem(0x4ca8, { 0x82 });
        gbc.writeMem(0xb606, { 0x66 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f9b, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb606));
        // 66 000B
        gbc.setState(0x589c, 0xa8c0, 0x8160, 0x2503, 0xdbae, 0xd782, 0x0, 0x1);
        gbc.writeMem(0x589c, { 0x66 });
        gbc.writeMem(0xd782, { 0x6b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa8c0, gbc.sp());
        EXPECT(0x589d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd782));
        // 66 000D
        gbc.setState(0x7399, 0x465c, 0x8270, 0xaadd, 0xa67e, 0x16ce, 0x0, 0x1);
        gbc.writeMem(0x16ce, { 0x6d });
        gbc.writeMem(0x7399, { 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x739a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 000E
        gbc.setState(0xb812, 0xa5bc, 0xa0a0, 0x45a5, 0xe416, 0x3592, 0x0, 0x0);
        gbc.writeMem(0x3592, { 0x19 });
        gbc.writeMem(0xb812, { 0x66 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb812));
        // 66 000F
        gbc.setState(0x7419, 0x621e, 0xade0, 0xe7c0, 0xf31, 0xee75, 0x1, 0x0);
        gbc.writeMem(0x7419, { 0x66 });
        gbc.writeMem(0xee75, { 0xab });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xee75));
        // 66 0010
        gbc.setState(0x118c, 0xa3fa, 0xfc20, 0x2e4c, 0xd0b2, 0x7950, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0x66 });
        gbc.writeMem(0x7950, { 0xd6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa3fa, gbc.sp());
        EXPECT(0x118d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0011
        gbc.setState(0xb81c, 0x8c18, 0xd9c0, 0x19b5, 0xcd54, 0xb96b, 0x0, 0x0);
        gbc.writeMem(0xb81c, { 0x66 });
        gbc.writeMem(0xb96b, { 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8c18, gbc.sp());
        EXPECT(0xb81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb81c));
        EXPECT(0xf7, gbc.readMem(0xb96b));
        // 66 0012
        gbc.setState(0x5524, 0x9c80, 0x5b90, 0x95fc, 0xdede, 0x4647, 0x0, 0x1);
        gbc.writeMem(0x4647, { 0x93 });
        gbc.writeMem(0x5524, { 0x66 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9c80, gbc.sp());
        EXPECT(0x5525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0014
        gbc.setState(0x6d6, 0x4152, 0x9340, 0xe361, 0x6ab3, 0xb079, 0x1, 0x1);
        gbc.writeMem(0x6d6, { 0x66 });
        gbc.writeMem(0xb079, { 0x99 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb079));
        // 66 0015
        gbc.setState(0x10da, 0x2b3a, 0xa290, 0x702b, 0x8cd, 0x3c76, 0x0, 0x1);
        gbc.writeMem(0x10da, { 0x66 });
        gbc.writeMem(0x3c76, { 0xd2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b3a, gbc.sp());
        EXPECT(0x10db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0016
        gbc.setState(0x33c2, 0xc5fc, 0x6430, 0x3ed4, 0xac4a, 0xd1cf, 0x0, 0x1);
        gbc.writeMem(0x33c2, { 0x66 });
        gbc.writeMem(0xd1cf, { 0x98 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc5fc, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd1cf));
        // 66 0017
        gbc.setState(0xd7b4, 0xa5e5, 0x15f0, 0x6043, 0xc852, 0x9c02, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x2b });
        gbc.writeMem(0xd7b4, { 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa5e5, gbc.sp());
        EXPECT(0xd7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9c02));
        EXPECT(0x66, gbc.readMem(0xd7b4));
        // 66 0018
        gbc.setState(0x396b, 0x5c63, 0x4a0, 0x708f, 0x27f7, 0xc3f9, 0x1, 0x1);
        gbc.writeMem(0x396b, { 0x66 });
        gbc.writeMem(0xc3f9, { 0x36 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5c63, gbc.sp());
        EXPECT(0x396c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc3f9));
        // 66 0019
        gbc.setState(0xc2b5, 0x605c, 0xd830, 0x4359, 0x26e3, 0x57d, 0x0, 0x1);
        gbc.writeMem(0x57d, { 0xc5 });
        gbc.writeMem(0xc2b5, { 0x66 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x605c, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc2b5));
        // 66 001A
        gbc.setState(0x9123, 0x9017, 0x7130, 0x4584, 0x80c3, 0xe9b5, 0x1, 0x0);
        gbc.writeMem(0x9123, { 0x66 });
        gbc.writeMem(0xe9b5, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9017, gbc.sp());
        EXPECT(0x9124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9123));
        EXPECT(0xb9, gbc.readMem(0xe9b5));
        // 66 001B
        gbc.setState(0x3d1b, 0x79f1, 0xa3b0, 0x2eb6, 0x9ca2, 0x7339, 0x1, 0x1);
        gbc.writeMem(0x3d1b, { 0x66 });
        gbc.writeMem(0x7339, { 0xbc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x79f1, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 001C
        gbc.setState(0x40c1, 0xe5c7, 0x1d40, 0xb875, 0x9399, 0xcce1, 0x1, 0x0);
        gbc.writeMem(0x40c1, { 0x66 });
        gbc.writeMem(0xcce1, { 0x70 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0x40c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xcce1));
        // 66 001D
        gbc.setState(0x35e4, 0x14c9, 0x470, 0x9461, 0x74d, 0xca84, 0x1, 0x1);
        gbc.writeMem(0x35e4, { 0x66 });
        gbc.writeMem(0xca84, { 0x22 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0x35e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xca84));
        // 66 001E
        gbc.setState(0x6993, 0x323, 0x6630, 0x4616, 0x874d, 0x13ea, 0x0, 0x0);
        gbc.writeMem(0x13ea, { 0x73 });
        gbc.writeMem(0x6993, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 001F
        gbc.setState(0xb8ed, 0x6e6c, 0x350, 0xa59, 0xaf6e, 0xbf5e, 0x1, 0x0);
        gbc.writeMem(0xb8ed, { 0x66 });
        gbc.writeMem(0xbf5e, { 0x8b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0xb8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb8ed));
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        // 66 0020
        gbc.setState(0x8e0c, 0xaf3c, 0x400, 0xa574, 0x229c, 0xd7b6, 0x1, 0x0);
        gbc.writeMem(0x8e0c, { 0x66 });
        gbc.writeMem(0xd7b6, { 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x8e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8e0c));
        EXPECT(0xd9, gbc.readMem(0xd7b6));
        // 66 0021
        gbc.setState(0xa259, 0x821d, 0xa5f0, 0xd9e7, 0x9434, 0xeb0b, 0x0, 0x0);
        gbc.writeMem(0xa259, { 0x66 });
        gbc.writeMem(0xeb0b, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x821d, gbc.sp());
        EXPECT(0xa25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa259));
        EXPECT(0x2f, gbc.readMem(0xeb0b));
        // 66 0022
        gbc.setState(0xe995, 0x2f5, 0xdd20, 0x9ee9, 0x8b85, 0x151d, 0x0, 0x0);
        gbc.writeMem(0x151d, { 0xde });
        gbc.writeMem(0xe995, { 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe995));
        // 66 0023
        gbc.setState(0xa7e6, 0xa00a, 0xae20, 0x765a, 0x97bd, 0x4d1f, 0x1, 0x0);
        gbc.writeMem(0x4d1f, { 0xeb });
        gbc.writeMem(0xa7e6, { 0x66 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa00a, gbc.sp());
        EXPECT(0xa7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa7e6));
        // 66 0024
        gbc.setState(0x59f8, 0xdc01, 0x9370, 0x8ed, 0xd6ef, 0xb86e, 0x0, 0x1);
        gbc.writeMem(0x59f8, { 0x66 });
        gbc.writeMem(0xb86e, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc01, gbc.sp());
        EXPECT(0x59f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb86e));
        // 66 0025
        gbc.setState(0x7db5, 0xaee3, 0xac60, 0xa45b, 0x930, 0xe36, 0x1, 0x0);
        gbc.writeMem(0xe36, { 0x5d });
        gbc.writeMem(0x7db5, { 0x66 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0026
        gbc.setState(0x4c3d, 0x3196, 0x8c00, 0xf4b5, 0x109d, 0x4366, 0x0, 0x0);
        gbc.writeMem(0x4366, { 0x2e });
        gbc.writeMem(0x4c3d, { 0x66 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3196, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0027
        gbc.setState(0x6ca1, 0x82bf, 0xc8a0, 0xc1a2, 0x9c87, 0x203b, 0x1, 0x0);
        gbc.writeMem(0x203b, { 0xcd });
        gbc.writeMem(0x6ca1, { 0x66 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x82bf, gbc.sp());
        EXPECT(0x6ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0028
        gbc.setState(0x113b, 0xa914, 0x30, 0x663f, 0xf461, 0x4b52, 0x0, 0x0);
        gbc.writeMem(0x113b, { 0x66 });
        gbc.writeMem(0x4b52, { 0x58 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa914, gbc.sp());
        EXPECT(0x113c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0029
        gbc.setState(0x83b0, 0x2d30, 0x84e0, 0xa89e, 0x1e0e, 0x9c96, 0x0, 0x1);
        gbc.writeMem(0x83b0, { 0x66 });
        gbc.writeMem(0x9c96, { 0xfd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x83b0));
        EXPECT(0xfd, gbc.readMem(0x9c96));
        // 66 002B
        gbc.setState(0x19ec, 0x5775, 0xc0e0, 0x7a17, 0x3d2d, 0xe5af, 0x1, 0x1);
        gbc.writeMem(0x19ec, { 0x66 });
        gbc.writeMem(0xe5af, { 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5775, gbc.sp());
        EXPECT(0x19ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe5af));
        // 66 002C
        gbc.setState(0x3718, 0xc0b1, 0x170, 0x5fae, 0x5fc8, 0xc073, 0x0, 0x0);
        gbc.writeMem(0x3718, { 0x66 });
        gbc.writeMem(0xc073, { 0xee });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc073));
        // 66 002D
        gbc.setState(0x6f1, 0xf293, 0x7980, 0x510a, 0x3044, 0x8a94, 0x0, 0x1);
        gbc.writeMem(0x6f1, { 0x66 });
        gbc.writeMem(0x8a94, { 0x12 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf293, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8a94));
        // 66 002E
        gbc.setState(0xaef7, 0x61b8, 0x4b00, 0xb41d, 0x2ad0, 0xea82, 0x1, 0x1);
        gbc.writeMem(0xaef7, { 0x66 });
        gbc.writeMem(0xea82, { 0x32 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x61b8, gbc.sp());
        EXPECT(0xaef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaef7));
        EXPECT(0x32, gbc.readMem(0xea82));
        // 66 002F
        gbc.setState(0x6115, 0xa0b9, 0x45f0, 0x5566, 0x3c4b, 0xeb81, 0x1, 0x0);
        gbc.writeMem(0x6115, { 0x66 });
        gbc.writeMem(0xeb81, { 0x71 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xeb81));
        // 66 0030
        gbc.setState(0xba58, 0x9b2e, 0xee10, 0xb96e, 0x4974, 0x1dd1, 0x1, 0x0);
        gbc.writeMem(0x1dd1, { 0x34 });
        gbc.writeMem(0xba58, { 0x66 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0xba59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xba58));
        // 66 0031
        gbc.setState(0x2dd8, 0x578, 0xc8b0, 0x86b9, 0xed54, 0x300b, 0x0, 0x0);
        gbc.writeMem(0x2dd8, { 0x66 });
        gbc.writeMem(0x300b, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x578, gbc.sp());
        EXPECT(0x2dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0032
        gbc.setState(0xad2a, 0x4e4c, 0x3690, 0x4417, 0x2149, 0x1435, 0x1, 0x0);
        gbc.writeMem(0x1435, { 0x3d });
        gbc.writeMem(0xad2a, { 0x66 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4e4c, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad2a));
        // 66 0033
        gbc.setState(0x5466, 0x6eea, 0x3240, 0x3af2, 0x7087, 0xc0a0, 0x0, 0x1);
        gbc.writeMem(0x5466, { 0x66 });
        gbc.writeMem(0xc0a0, { 0x33 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0x5467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc0a0));
        // 66 0034
        gbc.setState(0xc6df, 0x7ecf, 0xef50, 0x974b, 0xb07a, 0xf66b, 0x0, 0x1);
        gbc.writeMem(0xc6df, { 0x66 });
        gbc.writeMem(0xf66b, { 0xe2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc6df));
        EXPECT(0xe2, gbc.readMem(0xf66b));
        // 66 0035
        gbc.setState(0xbdba, 0x85a6, 0x6fa0, 0x1b9b, 0x8630, 0xc939, 0x0, 0x0);
        gbc.writeMem(0xbdba, { 0x66 });
        gbc.writeMem(0xc939, { 0x74 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbdba));
        EXPECT(0x74, gbc.readMem(0xc939));
        // 66 0036
        gbc.setState(0x1e63, 0x3179, 0xd2b0, 0x82b0, 0x8c5, 0xdb25, 0x1, 0x0);
        gbc.writeMem(0x1e63, { 0x66 });
        gbc.writeMem(0xdb25, { 0x6f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0x1e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xdb25));
        // 66 0037
        gbc.setState(0x5ebb, 0xf71b, 0x4af0, 0x54c2, 0x66b4, 0x881d, 0x0, 0x0);
        gbc.writeMem(0x5ebb, { 0x66 });
        gbc.writeMem(0x881d, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x881d));
        // 66 0038
        gbc.setState(0x60ed, 0xa9ee, 0x6af0, 0xbda2, 0x8fbc, 0x3387, 0x1, 0x1);
        gbc.writeMem(0x3387, { 0x55 });
        gbc.writeMem(0x60ed, { 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa9ee, gbc.sp());
        EXPECT(0x60ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 003A
        gbc.setState(0x4ef2, 0x13f9, 0x6990, 0xa54c, 0xbd85, 0xa3f0, 0x1, 0x0);
        gbc.writeMem(0x4ef2, { 0x66 });
        gbc.writeMem(0xa3f0, { 0x5e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13f9, gbc.sp());
        EXPECT(0x4ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa3f0));
        // 66 003B
        gbc.setState(0xfe3, 0xf9f4, 0x44a0, 0xf529, 0xabd8, 0x884e, 0x0, 0x0);
        gbc.writeMem(0xfe3, { 0x66 });
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0xfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x884e));
        // 66 003C
        gbc.setState(0x7c6f, 0xf300, 0xc340, 0x75a2, 0xd4cb, 0xb73, 0x0, 0x1);
        gbc.writeMem(0xb73, { 0x83 });
        gbc.writeMem(0x7c6f, { 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf300, gbc.sp());
        EXPECT(0x7c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 003D
        gbc.setState(0x7c32, 0x2a19, 0x81e0, 0xf02e, 0x2dc9, 0x917b, 0x1, 0x1);
        gbc.writeMem(0x7c32, { 0x66 });
        gbc.writeMem(0x917b, { 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2a19, gbc.sp());
        EXPECT(0x7c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x917b));
        // 66 003E
        gbc.setState(0xef03, 0x6149, 0xc7f0, 0xd31e, 0xf9b8, 0xadd6, 0x0, 0x1);
        gbc.writeMem(0xadd6, { 0x41 });
        gbc.writeMem(0xef03, { 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xadd6));
        EXPECT(0x66, gbc.readMem(0xef03));
        // 66 003F
        gbc.setState(0xa19f, 0xbfcf, 0x8630, 0xeb7c, 0x3211, 0x884d, 0x0, 0x0);
        gbc.writeMem(0x884d, { 0x91 });
        gbc.writeMem(0xa19f, { 0x66 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbfcf, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x884d));
        EXPECT(0x66, gbc.readMem(0xa19f));
        // 66 0041
        gbc.setState(0xb83c, 0xd176, 0x7910, 0xfb37, 0xb394, 0x5362, 0x0, 0x0);
        gbc.writeMem(0x5362, { 0x17 });
        gbc.writeMem(0xb83c, { 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb83c));
        // 66 0042
        gbc.setState(0x93e, 0xabc9, 0xb280, 0xf57c, 0xd2e1, 0x2a14, 0x1, 0x1);
        gbc.writeMem(0x93e, { 0x66 });
        gbc.writeMem(0x2a14, { 0xb1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xabc9, gbc.sp());
        EXPECT(0x93f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0043
        gbc.setState(0x35f8, 0xa13, 0x34d0, 0x7f89, 0x2078, 0x5a5b, 0x0, 0x0);
        gbc.writeMem(0x35f8, { 0x66 });
        gbc.writeMem(0x5a5b, { 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa13, gbc.sp());
        EXPECT(0x35f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0044
        gbc.setState(0x7a7, 0x954b, 0x8360, 0xaa89, 0x4d4d, 0x1662, 0x0, 0x1);
        gbc.writeMem(0x7a7, { 0x66 });
        gbc.writeMem(0x1662, { 0xc4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0045
        gbc.setState(0x2d2e, 0xd242, 0x8880, 0x1ce1, 0x5ffc, 0x9f9d, 0x0, 0x0);
        gbc.writeMem(0x2d2e, { 0x66 });
        gbc.writeMem(0x9f9d, { 0x2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd242, gbc.sp());
        EXPECT(0x2d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9f9d));
        // 66 0046
        gbc.setState(0x959d, 0x1666, 0xbd30, 0xe5f5, 0x628, 0x2ad2, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0x16 });
        gbc.writeMem(0x959d, { 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1666, gbc.sp());
        EXPECT(0x959e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x959d));
        // 66 0048
        gbc.setState(0x36a8, 0xa4db, 0x6550, 0x1f39, 0x2413, 0x3a9f, 0x1, 0x1);
        gbc.writeMem(0x36a8, { 0x66 });
        gbc.writeMem(0x3a9f, { 0x3f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 004A
        gbc.setState(0x9bdb, 0xaaf7, 0xcb80, 0xa995, 0xe5ec, 0xf977, 0x1, 0x1);
        gbc.writeMem(0x9bdb, { 0x66 });
        gbc.writeMem(0xf977, { 0x56 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaaf7, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9bdb));
        EXPECT(0x56, gbc.readMem(0xf977));
        // 66 004B
        gbc.setState(0xeed, 0x2ddf, 0x3690, 0xead5, 0xd7cb, 0xc921, 0x0, 0x1);
        gbc.writeMem(0xeed, { 0x66 });
        gbc.writeMem(0xc921, { 0x52 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2ddf, gbc.sp());
        EXPECT(0xeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc921));
        // 66 004C
        gbc.setState(0xc725, 0xe626, 0x770, 0xa3a2, 0xb8d7, 0x6458, 0x1, 0x0);
        gbc.writeMem(0x6458, { 0x7d });
        gbc.writeMem(0xc725, { 0x66 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc725));
        // 66 004E
        gbc.setState(0x22ba, 0xf7ae, 0x75f0, 0x7272, 0x470, 0xa232, 0x1, 0x0);
        gbc.writeMem(0x22ba, { 0x66 });
        gbc.writeMem(0xa232, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf7ae, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa232));
        // 66 004F
        gbc.setState(0xbf50, 0x5367, 0x5eb0, 0xa772, 0x2506, 0xa824, 0x0, 0x1);
        gbc.writeMem(0xa824, { 0x16 });
        gbc.writeMem(0xbf50, { 0x66 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5367, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa824));
        EXPECT(0x66, gbc.readMem(0xbf50));
        // 66 0050
        gbc.setState(0xafd0, 0x7be9, 0xb8f0, 0x6b42, 0xcd3c, 0x42f6, 0x1, 0x1);
        gbc.writeMem(0x42f6, { 0xed });
        gbc.writeMem(0xafd0, { 0x66 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7be9, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xafd0));
        // 66 0051
        gbc.setState(0xc20a, 0x3af2, 0x3950, 0x94ca, 0x9569, 0xd6ad, 0x1, 0x0);
        gbc.writeMem(0xc20a, { 0x66 });
        gbc.writeMem(0xd6ad, { 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0xc20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc20a));
        EXPECT(0x97, gbc.readMem(0xd6ad));
        // 66 0052
        gbc.setState(0x63a0, 0xe3b0, 0x88e0, 0xdc82, 0x4dac, 0xab6a, 0x1, 0x0);
        gbc.writeMem(0x63a0, { 0x66 });
        gbc.writeMem(0xab6a, { 0xa1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe3b0, gbc.sp());
        EXPECT(0x63a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xab6a));
        // 66 0053
        gbc.setState(0xdab7, 0xb477, 0x8de0, 0xad93, 0x39bd, 0xd0cb, 0x1, 0x1);
        gbc.writeMem(0xd0cb, { 0x67 });
        gbc.writeMem(0xdab7, { 0x66 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xd0cb));
        EXPECT(0x66, gbc.readMem(0xdab7));
        // 66 0054
        gbc.setState(0x73d7, 0x56fd, 0xcb60, 0xb1ec, 0xd168, 0x6d3c, 0x1, 0x1);
        gbc.writeMem(0x6d3c, { 0x8a });
        gbc.writeMem(0x73d7, { 0x66 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0055
        gbc.setState(0x8a10, 0x169, 0x1fc0, 0x3e31, 0x125b, 0x2741, 0x1, 0x1);
        gbc.writeMem(0x2741, { 0x27 });
        gbc.writeMem(0x8a10, { 0x66 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x169, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a10));
        // 66 0056
        gbc.setState(0x3f51, 0xf31f, 0x5370, 0x86f, 0x9c41, 0xd881, 0x0, 0x0);
        gbc.writeMem(0x3f51, { 0x66 });
        gbc.writeMem(0xd881, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd881));
        // 66 0057
        gbc.setState(0x7a21, 0xb3c7, 0x6cb0, 0x2560, 0x9fb, 0x2a2, 0x0, 0x0);
        gbc.writeMem(0x2a2, { 0x9f });
        gbc.writeMem(0x7a21, { 0x66 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x7a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0058
        gbc.setState(0x3610, 0x9742, 0x2cb0, 0xe317, 0x8fb9, 0xa00b, 0x1, 0x0);
        gbc.writeMem(0x3610, { 0x66 });
        gbc.writeMem(0xa00b, { 0xcd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9742, gbc.sp());
        EXPECT(0x3611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa00b));
        // 66 0059
        gbc.setState(0xd94a, 0x6bad, 0x47d0, 0x83cb, 0x64a0, 0x396a, 0x0, 0x0);
        gbc.writeMem(0x396a, { 0x6b });
        gbc.writeMem(0xd94a, { 0x66 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6bad, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd94a));
        // 66 005A
        gbc.setState(0x4209, 0xb89a, 0xc6c0, 0xd91e, 0x59b0, 0x57e6, 0x0, 0x1);
        gbc.writeMem(0x4209, { 0x66 });
        gbc.writeMem(0x57e6, { 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb89a, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 005B
        gbc.setState(0xb557, 0x7313, 0x1d50, 0x647a, 0xe8f, 0xb41b, 0x0, 0x1);
        gbc.writeMem(0xb41b, { 0x36 });
        gbc.writeMem(0xb557, { 0x66 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0xb558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb41b));
        EXPECT(0x66, gbc.readMem(0xb557));
        // 66 005C
        gbc.setState(0x7162, 0x4d7, 0xad40, 0x7428, 0x9d04, 0x60c6, 0x0, 0x0);
        gbc.writeMem(0x60c6, { 0xfc });
        gbc.writeMem(0x7162, { 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d7, gbc.sp());
        EXPECT(0x7163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 005D
        gbc.setState(0x825b, 0x7dda, 0xb30, 0x98f7, 0x103c, 0xce5f, 0x0, 0x0);
        gbc.writeMem(0x825b, { 0x66 });
        gbc.writeMem(0xce5f, { 0x25 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7dda, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x825b));
        EXPECT(0x25, gbc.readMem(0xce5f));
        // 66 005E
        gbc.setState(0x5d87, 0xb4fb, 0x99a0, 0xa779, 0x8b99, 0x4b2b, 0x1, 0x1);
        gbc.writeMem(0x4b2b, { 0xfa });
        gbc.writeMem(0x5d87, { 0x66 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb4fb, gbc.sp());
        EXPECT(0x5d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 005F
        gbc.setState(0xecc6, 0xe544, 0x70, 0x35a8, 0xf58b, 0xf6ba, 0x1, 0x0);
        gbc.writeMem(0xecc6, { 0x66 });
        gbc.writeMem(0xf6ba, { 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe544, gbc.sp());
        EXPECT(0xecc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xecc6));
        EXPECT(0x2f, gbc.readMem(0xf6ba));
        // 66 0060
        gbc.setState(0x6b46, 0x4575, 0x3e70, 0x2548, 0x3880, 0xb18c, 0x0, 0x0);
        gbc.writeMem(0x6b46, { 0x66 });
        gbc.writeMem(0xb18c, { 0x29 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4575, gbc.sp());
        EXPECT(0x6b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb18c));
        // 66 0061
        gbc.setState(0xad4b, 0x7543, 0x2740, 0x9aee, 0xd001, 0x8303, 0x0, 0x0);
        gbc.writeMem(0x8303, { 0x77 });
        gbc.writeMem(0xad4b, { 0x66 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0xad4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8303));
        EXPECT(0x66, gbc.readMem(0xad4b));
        // 66 0062
        gbc.setState(0xc565, 0xe2a1, 0x4db0, 0x9724, 0x6572, 0x77e8, 0x0, 0x0);
        gbc.writeMem(0x77e8, { 0x55 });
        gbc.writeMem(0xc565, { 0x66 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0xc566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc565));
        // 66 0063
        gbc.setState(0xe80d, 0x3fb5, 0x6680, 0x13bf, 0xa6ca, 0xf3fb, 0x1, 0x1);
        gbc.writeMem(0xe80d, { 0x66 });
        gbc.writeMem(0xf3fb, { 0x40 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3fb5, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe80d));
        EXPECT(0x40, gbc.readMem(0xf3fb));
        // 66 0064
        gbc.setState(0x9db, 0x2b75, 0x61e0, 0x52d, 0x37c5, 0xe12b, 0x1, 0x0);
        gbc.writeMem(0x9db, { 0x66 });
        gbc.writeMem(0xe12b, { 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe12b));
        // 66 0066
        gbc.setState(0x82ec, 0xc6dc, 0xa10, 0xfaac, 0xc12c, 0x5062, 0x0, 0x0);
        gbc.writeMem(0x5062, { 0xb });
        gbc.writeMem(0x82ec, { 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x82ec));
        // 66 0067
        gbc.setState(0x6755, 0x72a7, 0x3df0, 0x1d2a, 0x946c, 0x99db, 0x0, 0x1);
        gbc.writeMem(0x6755, { 0x66 });
        gbc.writeMem(0x99db, { 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x72a7, gbc.sp());
        EXPECT(0x6756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x99db));
        // 66 0068
        gbc.setState(0x6e0f, 0x3275, 0x5940, 0xc58e, 0x97bd, 0x1ed4, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0x2a });
        gbc.writeMem(0x6e0f, { 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0069
        gbc.setState(0xe0dc, 0xe15b, 0x8090, 0x90b3, 0x2b66, 0x435a, 0x0, 0x1);
        gbc.writeMem(0x435a, { 0x87 });
        gbc.writeMem(0xe0dc, { 0x66 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe0dc));
        // 66 006B
        gbc.setState(0xe7ee, 0xeb0a, 0x5460, 0x3626, 0xc665, 0xb56c, 0x1, 0x1);
        gbc.writeMem(0xb56c, { 0xd4 });
        gbc.writeMem(0xe7ee, { 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb56c));
        EXPECT(0x66, gbc.readMem(0xe7ee));
        // 66 006C
        gbc.setState(0xde57, 0xe1d0, 0x1990, 0xd6d4, 0x9cb, 0x3394, 0x0, 0x1);
        gbc.writeMem(0x3394, { 0x80 });
        gbc.writeMem(0xde57, { 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe1d0, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xde57));
        // 66 006D
        gbc.setState(0xca97, 0x8a41, 0x4e30, 0x4249, 0x3ca9, 0x2cfc, 0x1, 0x1);
        gbc.writeMem(0x2cfc, { 0x15 });
        gbc.writeMem(0xca97, { 0x66 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8a41, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xca97));
        // 66 006E
        gbc.setState(0x9d0f, 0xee60, 0x6e20, 0x104c, 0x42cc, 0x1450, 0x0, 0x0);
        gbc.writeMem(0x1450, { 0xe2 });
        gbc.writeMem(0x9d0f, { 0x66 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xee60, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9d0f));
        // 66 006F
        gbc.setState(0x887e, 0x530, 0x74a0, 0xccd6, 0xeffa, 0x1890, 0x1, 0x1);
        gbc.writeMem(0x1890, { 0xdb });
        gbc.writeMem(0x887e, { 0x66 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x530, gbc.sp());
        EXPECT(0x887f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x887e));
        // 66 0071
        gbc.setState(0x6c, 0x5f12, 0xe5d0, 0x13e6, 0x1533, 0xff97, 0x0, 0x1);
        gbc.writeMem(0x6c, { 0x66 });
        gbc.writeMem(0xff97, { 0xfa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5f12, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xff97));
        // 66 0072
        gbc.setState(0x2419, 0xa429, 0x71c0, 0x2f57, 0xd0b, 0x9c28, 0x0, 0x1);
        gbc.writeMem(0x2419, { 0x66 });
        gbc.writeMem(0x9c28, { 0xf0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa429, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9c28));
        // 66 0073
        gbc.setState(0x2a78, 0xed8b, 0xfb60, 0xc0ee, 0x28a1, 0x8d4a, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0x66 });
        gbc.writeMem(0x8d4a, { 0x6b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0x2a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8d4a));
        // 66 0074
        gbc.setState(0x3eb2, 0xbb72, 0x1ae0, 0x3953, 0x5a91, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0x3eb2, { 0x66 });
        gbc.writeMem(0x81d9, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0x3eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x81d9));
        // 66 0075
        gbc.setState(0x3bc0, 0xd7f9, 0x9e10, 0x2a1d, 0x9302, 0x91b4, 0x1, 0x1);
        gbc.writeMem(0x3bc0, { 0x66 });
        gbc.writeMem(0x91b4, { 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd7f9, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x91b4));
        // 66 0076
        gbc.setState(0xd707, 0x68de, 0xceb0, 0x707c, 0x8493, 0xda5, 0x1, 0x1);
        gbc.writeMem(0xda5, { 0x9a });
        gbc.writeMem(0xd707, { 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0xd708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd707));
        // 66 0077
        gbc.setState(0x2972, 0xb9dd, 0x6a90, 0x9a58, 0x8e58, 0x4a04, 0x0, 0x1);
        gbc.writeMem(0x2972, { 0x66 });
        gbc.writeMem(0x4a04, { 0x32 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb9dd, gbc.sp());
        EXPECT(0x2973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0078
        gbc.setState(0xc8ea, 0x7d1b, 0xa890, 0x7c88, 0xc005, 0x4642, 0x0, 0x0);
        gbc.writeMem(0x4642, { 0x9a });
        gbc.writeMem(0xc8ea, { 0x66 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0xc8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc8ea));
        // 66 0079
        gbc.setState(0x9cf4, 0xd2c9, 0xe0c0, 0x5394, 0x2d1e, 0xc35, 0x0, 0x1);
        gbc.writeMem(0xc35, { 0x9d });
        gbc.writeMem(0x9cf4, { 0x66 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd2c9, gbc.sp());
        EXPECT(0x9cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9cf4));
        // 66 007A
        gbc.setState(0xb890, 0xd052, 0x7240, 0xab08, 0x222d, 0x5bcf, 0x0, 0x1);
        gbc.writeMem(0x5bcf, { 0x78 });
        gbc.writeMem(0xb890, { 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb890));
        // 66 007B
        gbc.setState(0x4e0a, 0x1b8e, 0xa490, 0x91fd, 0xd5f1, 0xfb7e, 0x1, 0x0);
        gbc.writeMem(0x4e0a, { 0x66 });
        gbc.writeMem(0xfb7e, { 0xad });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xfb7e));
        // 66 007C
        gbc.setState(0x70b2, 0xf26c, 0xbd40, 0xb89c, 0x42d2, 0xe2eb, 0x1, 0x1);
        gbc.writeMem(0x70b2, { 0x66 });
        gbc.writeMem(0xe2eb, { 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf26c, gbc.sp());
        EXPECT(0x70b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xe2eb));
        // 66 007D
        gbc.setState(0x2400, 0x7213, 0xf9c0, 0x3860, 0x7cc5, 0xd21f, 0x0, 0x1);
        gbc.writeMem(0x2400, { 0x66 });
        gbc.writeMem(0xd21f, { 0xfe });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd21f));
        // 66 007E
        gbc.setState(0xacdb, 0xcfd8, 0x62a0, 0x2055, 0x625d, 0xa66c, 0x1, 0x1);
        gbc.writeMem(0xa66c, { 0x19 });
        gbc.writeMem(0xacdb, { 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0xacdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa66c));
        EXPECT(0x66, gbc.readMem(0xacdb));
        // 66 007F
        gbc.setState(0xa2f6, 0xc435, 0xca60, 0xdb5, 0x67fe, 0x73da, 0x1, 0x1);
        gbc.writeMem(0x73da, { 0x84 });
        gbc.writeMem(0xa2f6, { 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa2f6));
        // 66 0080
        gbc.setState(0x71dd, 0xcbd3, 0x57d0, 0xe2f6, 0xc2ff, 0x695a, 0x1, 0x1);
        gbc.writeMem(0x695a, { 0xc2 });
        gbc.writeMem(0x71dd, { 0x66 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcbd3, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0081
        gbc.setState(0xdc2d, 0xa2bb, 0x2900, 0x21b0, 0x193b, 0xf01b, 0x1, 0x1);
        gbc.writeMem(0xdc2d, { 0x66 });
        gbc.writeMem(0xf01b, { 0x15 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc2d));
        EXPECT(0x15, gbc.readMem(0xf01b));
        // 66 0082
        gbc.setState(0x97ee, 0x619d, 0x37c0, 0x28cf, 0x108f, 0xdd87, 0x0, 0x0);
        gbc.writeMem(0x97ee, { 0x66 });
        gbc.writeMem(0xdd87, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x619d, gbc.sp());
        EXPECT(0x97ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x97ee));
        EXPECT(0x56, gbc.readMem(0xdd87));
        // 66 0083
        gbc.setState(0x8935, 0x4fd9, 0xd2b0, 0x3557, 0xdf50, 0x80f4, 0x1, 0x0);
        gbc.writeMem(0x80f4, { 0xe9 });
        gbc.writeMem(0x8935, { 0x66 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4fd9, gbc.sp());
        EXPECT(0x8936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x80f4));
        EXPECT(0x66, gbc.readMem(0x8935));
        // 66 0084
        gbc.setState(0x5ae6, 0x436e, 0x8290, 0x6dd0, 0xb5c0, 0x250b, 0x1, 0x0);
        gbc.writeMem(0x250b, { 0xa8 });
        gbc.writeMem(0x5ae6, { 0x66 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0085
        gbc.setState(0xb5c4, 0xfd09, 0x92f0, 0xb78e, 0x991, 0xef5b, 0x0, 0x1);
        gbc.writeMem(0xb5c4, { 0x66 });
        gbc.writeMem(0xef5b, { 0x58 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb5c4));
        EXPECT(0x58, gbc.readMem(0xef5b));
        // 66 0086
        gbc.setState(0x1863, 0xda76, 0xf430, 0xab4, 0x11fe, 0x3fd7, 0x0, 0x0);
        gbc.writeMem(0x1863, { 0x66 });
        gbc.writeMem(0x3fd7, { 0xae });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xda76, gbc.sp());
        EXPECT(0x1864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0087
        gbc.setState(0x307c, 0x3882, 0xaf40, 0x81cd, 0x80fa, 0x2c46, 0x0, 0x0);
        gbc.writeMem(0x2c46, { 0xa9 });
        gbc.writeMem(0x307c, { 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3882, gbc.sp());
        EXPECT(0x307d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0088
        gbc.setState(0x3211, 0x3fc6, 0x6980, 0xb7d2, 0x1288, 0x9c48, 0x1, 0x1);
        gbc.writeMem(0x3211, { 0x66 });
        gbc.writeMem(0x9c48, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3fc6, gbc.sp());
        EXPECT(0x3212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c48));
        // 66 0089
        gbc.setState(0x3aaa, 0xc3b2, 0x6230, 0x66e, 0xf8ad, 0x3b79, 0x0, 0x1);
        gbc.writeMem(0x3aaa, { 0x66 });
        gbc.writeMem(0x3b79, { 0x98 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc3b2, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 008A
        gbc.setState(0x4d09, 0x7bd0, 0xd00, 0x2ca3, 0x8be6, 0x84a8, 0x0, 0x0);
        gbc.writeMem(0x4d09, { 0x66 });
        gbc.writeMem(0x84a8, { 0xad });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0x4d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x84a8));
        // 66 008B
        gbc.setState(0x4962, 0xfe75, 0xd4f0, 0x6ddb, 0x266d, 0x6ea4, 0x1, 0x1);
        gbc.writeMem(0x4962, { 0x66 });
        gbc.writeMem(0x6ea4, { 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfe75, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 008C
        gbc.setState(0x35, 0xc11c, 0x1bb0, 0xd5ef, 0x48f8, 0x8a7d, 0x0, 0x0);
        gbc.writeMem(0x35, { 0x66 });
        gbc.writeMem(0x8a7d, { 0x71 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc11c, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a7d));
        // 66 008D
        gbc.setState(0x109c, 0x1250, 0xc3d0, 0xa0ce, 0xe528, 0xba2f, 0x0, 0x0);
        gbc.writeMem(0x109c, { 0x66 });
        gbc.writeMem(0xba2f, { 0xb6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba2f));
        // 66 008E
        gbc.setState(0x39ee, 0x8a37, 0x4180, 0xee7e, 0x7942, 0xb2d9, 0x1, 0x0);
        gbc.writeMem(0x39ee, { 0x66 });
        gbc.writeMem(0xb2d9, { 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x39ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb2d9));
        // 66 008F
        gbc.setState(0x8d31, 0xa110, 0x32e0, 0x33e9, 0x81bd, 0x5351, 0x1, 0x1);
        gbc.writeMem(0x5351, { 0x2f });
        gbc.writeMem(0x8d31, { 0x66 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa110, gbc.sp());
        EXPECT(0x8d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8d31));
        // 66 0090
        gbc.setState(0x4889, 0x91d7, 0x1380, 0xadc9, 0x9de1, 0x52eb, 0x0, 0x1);
        gbc.writeMem(0x4889, { 0x66 });
        gbc.writeMem(0x52eb, { 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0091
        gbc.setState(0x78fe, 0x379d, 0x6140, 0xbf13, 0x1abe, 0xa69a, 0x1, 0x0);
        gbc.writeMem(0x78fe, { 0x66 });
        gbc.writeMem(0xa69a, { 0x2f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x379d, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa69a));
        // 66 0092
        gbc.setState(0xba1c, 0x1cf0, 0x9f0, 0xa256, 0x2866, 0xe620, 0x0, 0x1);
        gbc.writeMem(0xba1c, { 0x66 });
        gbc.writeMem(0xe620, { 0x6b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1cf0, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xba1c));
        EXPECT(0x6b, gbc.readMem(0xe620));
        // 66 0093
        gbc.setState(0x8ed0, 0x9f97, 0xbd10, 0x209f, 0xc5f7, 0x983e, 0x1, 0x1);
        gbc.writeMem(0x8ed0, { 0x66 });
        gbc.writeMem(0x983e, { 0xd8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0x8ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8ed0));
        EXPECT(0xd8, gbc.readMem(0x983e));
        // 66 0094
        gbc.setState(0x4d73, 0xfa2d, 0xd450, 0x277d, 0x98e3, 0xfa2c, 0x1, 0x1);
        gbc.writeMem(0x4d73, { 0x66 });
        gbc.writeMem(0xfa2c, { 0x19 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfa2d, gbc.sp());
        EXPECT(0x4d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xfa2c));
        // 66 0095
        gbc.setState(0x6237, 0x2cff, 0x9d0, 0x4bf6, 0xfb46, 0x6076, 0x1, 0x0);
        gbc.writeMem(0x6076, { 0x88 });
        gbc.writeMem(0x6237, { 0x66 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0096
        gbc.setState(0xe6a, 0x36ca, 0x40c0, 0xce0c, 0x83ba, 0x40cd, 0x0, 0x1);
        gbc.writeMem(0xe6a, { 0x66 });
        gbc.writeMem(0x40cd, { 0xf4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x36ca, gbc.sp());
        EXPECT(0xe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0097
        gbc.setState(0x5a05, 0x2c86, 0x61e0, 0xa035, 0x103a, 0xf53, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0x6f });
        gbc.writeMem(0x5a05, { 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0x5a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0098
        gbc.setState(0xdb4e, 0x5699, 0xa0a0, 0x5be3, 0xac49, 0xc30e, 0x0, 0x0);
        gbc.writeMem(0xc30e, { 0xfe });
        gbc.writeMem(0xdb4e, { 0x66 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5699, gbc.sp());
        EXPECT(0xdb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc30e));
        EXPECT(0x66, gbc.readMem(0xdb4e));
        // 66 0099
        gbc.setState(0xef10, 0x8fe5, 0x9910, 0xbff1, 0xaf2a, 0x8754, 0x1, 0x0);
        gbc.writeMem(0x8754, { 0x59 });
        gbc.writeMem(0xef10, { 0x66 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0xef11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8754));
        EXPECT(0x66, gbc.readMem(0xef10));
        // 66 009A
        gbc.setState(0x7a83, 0x3ec4, 0x5260, 0x34a7, 0x1a22, 0x12d, 0x0, 0x0);
        gbc.writeMem(0x12d, { 0xda });
        gbc.writeMem(0x7a83, { 0x66 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3ec4, gbc.sp());
        EXPECT(0x7a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 009B
        gbc.setState(0xd989, 0x2087, 0x6a20, 0x132, 0x34f1, 0xb53d, 0x0, 0x1);
        gbc.writeMem(0xb53d, { 0x37 });
        gbc.writeMem(0xd989, { 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2087, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb53d));
        EXPECT(0x66, gbc.readMem(0xd989));
        // 66 009D
        gbc.setState(0x5c3f, 0x8e58, 0x260, 0xb302, 0xf4b, 0x7cdf, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0x66 });
        gbc.writeMem(0x7cdf, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8e58, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 009E
        gbc.setState(0x8f8c, 0x886f, 0x7c40, 0xf139, 0xce72, 0xadbc, 0x1, 0x0);
        gbc.writeMem(0x8f8c, { 0x66 });
        gbc.writeMem(0xadbc, { 0xa7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8f8c));
        EXPECT(0xa7, gbc.readMem(0xadbc));
        // 66 009F
        gbc.setState(0x1001, 0x78d4, 0xf90, 0x643b, 0xca57, 0x7d0c, 0x1, 0x1);
        gbc.writeMem(0x1001, { 0x66 });
        gbc.writeMem(0x7d0c, { 0xba });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x78d4, gbc.sp());
        EXPECT(0x1002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00A0
        gbc.setState(0x51c9, 0x72ad, 0x65a0, 0xbdae, 0x9c0c, 0xd734, 0x1, 0x1);
        gbc.writeMem(0x51c9, { 0x66 });
        gbc.writeMem(0xd734, { 0x3a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0x51ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xd734));
        // 66 00A1
        gbc.setState(0x9f73, 0x5a8c, 0x2a0, 0x2c56, 0x7e4c, 0x5386, 0x0, 0x1);
        gbc.writeMem(0x5386, { 0x13 });
        gbc.writeMem(0x9f73, { 0x66 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5a8c, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9f73));
        // 66 00A2
        gbc.setState(0x6c5a, 0x6e8f, 0xc340, 0x6bed, 0xf782, 0xb163, 0x0, 0x1);
        gbc.writeMem(0x6c5a, { 0x66 });
        gbc.writeMem(0xb163, { 0x58 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0x6c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb163));
        // 66 00A3
        gbc.setState(0xc10e, 0xf1a1, 0xaf80, 0xd27c, 0x2dee, 0xf722, 0x0, 0x1);
        gbc.writeMem(0xc10e, { 0x66 });
        gbc.writeMem(0xf722, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf1a1, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc10e));
        EXPECT(0xb5, gbc.readMem(0xf722));
        // 66 00A4
        gbc.setState(0xce4d, 0x9c36, 0xefd0, 0xd550, 0x867e, 0x8df2, 0x0, 0x1);
        gbc.writeMem(0x8df2, { 0x96 });
        gbc.writeMem(0xce4d, { 0x66 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c36, gbc.sp());
        EXPECT(0xce4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8df2));
        EXPECT(0x66, gbc.readMem(0xce4d));
        // 66 00A5
        gbc.setState(0x3701, 0xd0c0, 0x3ec0, 0x29e3, 0xf2a7, 0x818, 0x1, 0x0);
        gbc.writeMem(0x818, { 0xd });
        gbc.writeMem(0x3701, { 0x66 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd0c0, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00A7
        gbc.setState(0x7f70, 0x242d, 0xd7d0, 0x25ff, 0x99cb, 0xb90b, 0x1, 0x0);
        gbc.writeMem(0x7f70, { 0x66 });
        gbc.writeMem(0xb90b, { 0xd3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x242d, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb90b));
        // 66 00A8
        gbc.setState(0x31b6, 0xf8be, 0xd230, 0x8160, 0xc7d2, 0x357d, 0x1, 0x0);
        gbc.writeMem(0x31b6, { 0x66 });
        gbc.writeMem(0x357d, { 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf8be, gbc.sp());
        EXPECT(0x31b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00A9
        gbc.setState(0x5afc, 0x1be1, 0xaa60, 0xd8f, 0xe856, 0xdd03, 0x0, 0x0);
        gbc.writeMem(0x5afc, { 0x66 });
        gbc.writeMem(0xdd03, { 0x51 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1be1, gbc.sp());
        EXPECT(0x5afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdd03));
        // 66 00AB
        gbc.setState(0x7d7b, 0x4e42, 0xd5f0, 0x4cdd, 0x6e84, 0xd837, 0x0, 0x0);
        gbc.writeMem(0x7d7b, { 0x66 });
        gbc.writeMem(0xd837, { 0xbc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4e42, gbc.sp());
        EXPECT(0x7d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd837));
        // 66 00AC
        gbc.setState(0xe8ee, 0xfe63, 0xd30, 0x3361, 0xda99, 0x4df7, 0x1, 0x1);
        gbc.writeMem(0x4df7, { 0xe6 });
        gbc.writeMem(0xe8ee, { 0x66 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfe63, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe8ee));
        // 66 00AE
        gbc.setState(0xefcf, 0x31fb, 0x9480, 0x52f7, 0xe312, 0xb748, 0x0, 0x0);
        gbc.writeMem(0xb748, { 0x86 });
        gbc.writeMem(0xefcf, { 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x31fb, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb748));
        EXPECT(0x66, gbc.readMem(0xefcf));
        // 66 00B0
        gbc.setState(0x47d0, 0xdbf3, 0x6da0, 0xbcaf, 0x552c, 0x7018, 0x0, 0x1);
        gbc.writeMem(0x47d0, { 0x66 });
        gbc.writeMem(0x7018, { 0x92 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdbf3, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00B1
        gbc.setState(0x9832, 0x8a9a, 0xb200, 0x65c6, 0x3e4a, 0x2132, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0x48 });
        gbc.writeMem(0x9832, { 0x66 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8a9a, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9832));
        // 66 00B2
        gbc.setState(0x25e4, 0x6153, 0x40e0, 0x3a0d, 0x9d92, 0xb329, 0x0, 0x0);
        gbc.writeMem(0x25e4, { 0x66 });
        gbc.writeMem(0xb329, { 0xc7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb329));
        // 66 00B3
        gbc.setState(0x560a, 0x7962, 0x1b00, 0xf4b2, 0xbbe2, 0x5597, 0x1, 0x1);
        gbc.writeMem(0x5597, { 0x6 });
        gbc.writeMem(0x560a, { 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7962, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00B4
        gbc.setState(0x1faa, 0xdcb9, 0x46e0, 0xad08, 0xc5d3, 0x94c4, 0x0, 0x1);
        gbc.writeMem(0x1faa, { 0x66 });
        gbc.writeMem(0x94c4, { 0xfd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x1fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x94c4));
        // 66 00B5
        gbc.setState(0x74e0, 0xabd9, 0xd660, 0xaf63, 0x12dc, 0x451a, 0x1, 0x1);
        gbc.writeMem(0x451a, { 0x51 });
        gbc.writeMem(0x74e0, { 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xabd9, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00B7
        gbc.setState(0x52fa, 0x5c6b, 0x8a10, 0xd07a, 0x5c1e, 0x5a01, 0x1, 0x0);
        gbc.writeMem(0x52fa, { 0x66 });
        gbc.writeMem(0x5a01, { 0xa5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c6b, gbc.sp());
        EXPECT(0x52fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00B8
        gbc.setState(0xb183, 0x60b1, 0x17e0, 0x3d1c, 0x4a66, 0x2e30, 0x1, 0x1);
        gbc.writeMem(0x2e30, { 0x4a });
        gbc.writeMem(0xb183, { 0x66 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb183));
        // 66 00B9
        gbc.setState(0x3ef0, 0xd263, 0x3bb0, 0x8947, 0xb734, 0x99a4, 0x1, 0x0);
        gbc.writeMem(0x3ef0, { 0x66 });
        gbc.writeMem(0x99a4, { 0xa3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd263, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x99a4));
        // 66 00BA
        gbc.setState(0x5c5c, 0xdafd, 0x6bc0, 0xa793, 0x3d5a, 0xc367, 0x1, 0x1);
        gbc.writeMem(0x5c5c, { 0x66 });
        gbc.writeMem(0xc367, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc367));
        // 66 00BB
        gbc.setState(0xe36c, 0x12f4, 0xded0, 0xc3d4, 0x8c4a, 0x55f2, 0x0, 0x1);
        gbc.writeMem(0x55f2, { 0x34 });
        gbc.writeMem(0xe36c, { 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x12f4, gbc.sp());
        EXPECT(0xe36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe36c));
        // 66 00BC
        gbc.setState(0x7125, 0x2dbf, 0x75b0, 0x9c54, 0xa1c7, 0x6a41, 0x0, 0x0);
        gbc.writeMem(0x6a41, { 0x89 });
        gbc.writeMem(0x7125, { 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2dbf, gbc.sp());
        EXPECT(0x7126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00BD
        gbc.setState(0x6238, 0x79da, 0xce80, 0x9f6a, 0xf54, 0x97d1, 0x1, 0x1);
        gbc.writeMem(0x6238, { 0x66 });
        gbc.writeMem(0x97d1, { 0xdf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x79da, gbc.sp());
        EXPECT(0x6239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x97d1));
        // 66 00BE
        gbc.setState(0xc27f, 0x6356, 0xa7b0, 0x9c42, 0xbdf6, 0x54b, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0x61 });
        gbc.writeMem(0xc27f, { 0x66 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6356, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc27f));
        // 66 00BF
        gbc.setState(0x8aff, 0x5c2b, 0x4560, 0x9845, 0xd71b, 0xa10, 0x1, 0x0);
        gbc.writeMem(0xa10, { 0x62 });
        gbc.writeMem(0x8aff, { 0x66 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0x8b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8aff));
        // 66 00C0
        gbc.setState(0x909c, 0xb6da, 0xad30, 0x4eba, 0x8934, 0x6ecf, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0x9c });
        gbc.writeMem(0x909c, { 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb6da, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x909c));
        // 66 00C1
        gbc.setState(0xbadd, 0xfbec, 0x6e70, 0x725e, 0x7bf2, 0xaca3, 0x0, 0x1);
        gbc.writeMem(0xaca3, { 0xa3 });
        gbc.writeMem(0xbadd, { 0x66 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0xbade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaca3));
        EXPECT(0x66, gbc.readMem(0xbadd));
        // 66 00C2
        gbc.setState(0xc563, 0x6017, 0x6370, 0x1fe9, 0x84bd, 0xaa0e, 0x0, 0x1);
        gbc.writeMem(0xaa0e, { 0xef });
        gbc.writeMem(0xc563, { 0x66 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6017, gbc.sp());
        EXPECT(0xc564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xaa0e));
        EXPECT(0x66, gbc.readMem(0xc563));
        // 66 00C4
        gbc.setState(0x5c8d, 0x1637, 0x2af0, 0xbec1, 0x302a, 0xd7b5, 0x0, 0x1);
        gbc.writeMem(0x5c8d, { 0x66 });
        gbc.writeMem(0xd7b5, { 0x8d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1637, gbc.sp());
        EXPECT(0x5c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd7b5));
        // 66 00C5
        gbc.setState(0xeca4, 0x8143, 0x8820, 0x4505, 0x4c08, 0xafd7, 0x1, 0x1);
        gbc.writeMem(0xafd7, { 0x90 });
        gbc.writeMem(0xeca4, { 0x66 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8143, gbc.sp());
        EXPECT(0xeca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xafd7));
        EXPECT(0x66, gbc.readMem(0xeca4));
        // 66 00C6
        gbc.setState(0x810c, 0xb6c2, 0xf850, 0xd080, 0x4145, 0xa87a, 0x1, 0x1);
        gbc.writeMem(0x810c, { 0x66 });
        gbc.writeMem(0xa87a, { 0x2a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0x810d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x810c));
        EXPECT(0x2a, gbc.readMem(0xa87a));
        // 66 00C7
        gbc.setState(0xa58, 0xd3be, 0x640, 0xc7c1, 0xde73, 0x23b3, 0x0, 0x0);
        gbc.writeMem(0xa58, { 0x66 });
        gbc.writeMem(0x23b3, { 0xeb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd3be, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00C8
        gbc.setState(0xb85a, 0xf6ef, 0xf80, 0xde51, 0x621, 0x73e7, 0x0, 0x0);
        gbc.writeMem(0x73e7, { 0xb1 });
        gbc.writeMem(0xb85a, { 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf6ef, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb85a));
        // 66 00C9
        gbc.setState(0xa2d1, 0x5f83, 0x2b60, 0xe56e, 0xee22, 0xeab3, 0x1, 0x0);
        gbc.writeMem(0xa2d1, { 0x66 });
        gbc.writeMem(0xeab3, { 0xdc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa2d1));
        EXPECT(0xdc, gbc.readMem(0xeab3));
        // 66 00CA
        gbc.setState(0x565a, 0x976d, 0xcd90, 0xe92a, 0xedf7, 0xd1f3, 0x0, 0x1);
        gbc.writeMem(0x565a, { 0x66 });
        gbc.writeMem(0xd1f3, { 0x59 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xd1f3));
        // 66 00CC
        gbc.setState(0x7f1, 0x8509, 0xe170, 0x717c, 0xd33d, 0xac3c, 0x0, 0x1);
        gbc.writeMem(0x7f1, { 0x66 });
        gbc.writeMem(0xac3c, { 0x45 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8509, gbc.sp());
        EXPECT(0x7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xac3c));
        // 66 00CD
        gbc.setState(0x1251, 0xc34e, 0x78d0, 0x7103, 0xd1e8, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0x1251, { 0x66 });
        gbc.writeMem(0x2d3c, { 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00CE
        gbc.setState(0x288c, 0x3280, 0x5b70, 0x9caf, 0x3865, 0xf576, 0x0, 0x0);
        gbc.writeMem(0x288c, { 0x66 });
        gbc.writeMem(0xf576, { 0x14 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3280, gbc.sp());
        EXPECT(0x288d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf576));
        // 66 00CF
        gbc.setState(0x3d64, 0x9b2b, 0xd0a0, 0xea0c, 0xf1f6, 0x209d, 0x1, 0x0);
        gbc.writeMem(0x209d, { 0x79 });
        gbc.writeMem(0x3d64, { 0x66 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9b2b, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00D0
        gbc.setState(0x8a14, 0xc59c, 0xff60, 0xe803, 0x89a1, 0x61ab, 0x1, 0x0);
        gbc.writeMem(0x61ab, { 0x86 });
        gbc.writeMem(0x8a14, { 0x66 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a14));
        // 66 00D1
        gbc.setState(0xca61, 0xa782, 0x72a0, 0x1b8, 0x1db6, 0x37a5, 0x1, 0x1);
        gbc.writeMem(0x37a5, { 0x48 });
        gbc.writeMem(0xca61, { 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa782, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xca61));
        // 66 00D2
        gbc.setState(0xc2ab, 0xbd86, 0x780, 0xa57d, 0x7909, 0x1369, 0x1, 0x1);
        gbc.writeMem(0x1369, { 0x83 });
        gbc.writeMem(0xc2ab, { 0x66 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbd86, gbc.sp());
        EXPECT(0xc2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc2ab));
        // 66 00D3
        gbc.setState(0x28ed, 0x105f, 0x5880, 0xed3a, 0x7228, 0xca01, 0x1, 0x1);
        gbc.writeMem(0x28ed, { 0x66 });
        gbc.writeMem(0xca01, { 0x4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x105f, gbc.sp());
        EXPECT(0x28ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xca01));
        // 66 00D4
        gbc.setState(0x90a, 0x250b, 0xbb90, 0x6b13, 0xf70d, 0x32f4, 0x0, 0x0);
        gbc.writeMem(0x90a, { 0x66 });
        gbc.writeMem(0x32f4, { 0xc4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x250b, gbc.sp());
        EXPECT(0x90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00D5
        gbc.setState(0x631e, 0x3189, 0xee00, 0x4aaf, 0xe514, 0xaca3, 0x1, 0x1);
        gbc.writeMem(0x631e, { 0x66 });
        gbc.writeMem(0xaca3, { 0xa3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3189, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaca3));
        // 66 00D6
        gbc.setState(0x5dd1, 0xb98f, 0xec20, 0x8651, 0xae6d, 0x21db, 0x1, 0x1);
        gbc.writeMem(0x21db, { 0x2e });
        gbc.writeMem(0x5dd1, { 0x66 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb98f, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00D7
        gbc.setState(0x61cf, 0xf00, 0xcb00, 0xa5a6, 0xebed, 0xddcb, 0x1, 0x1);
        gbc.writeMem(0x61cf, { 0x66 });
        gbc.writeMem(0xddcb, { 0x5f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf00, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xddcb));
        // 66 00D8
        gbc.setState(0x4a45, 0x459f, 0x2730, 0x5e5f, 0x5e87, 0x656d, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0x66 });
        gbc.writeMem(0x656d, { 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x459f, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00DB
        gbc.setState(0x42e1, 0x1c4c, 0xb5b0, 0x9b84, 0x55bb, 0xb224, 0x1, 0x1);
        gbc.writeMem(0x42e1, { 0x66 });
        gbc.writeMem(0xb224, { 0xeb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb224));
        // 66 00DC
        gbc.setState(0x2aa5, 0x7fa6, 0x4610, 0x2cd3, 0x1006, 0x5478, 0x0, 0x1);
        gbc.writeMem(0x2aa5, { 0x66 });
        gbc.writeMem(0x5478, { 0x65 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0x2aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00DD
        gbc.setState(0x65a3, 0x1f55, 0xb8b0, 0x9b25, 0x385b, 0xc03f, 0x0, 0x0);
        gbc.writeMem(0x65a3, { 0x66 });
        gbc.writeMem(0xc03f, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1f55, gbc.sp());
        EXPECT(0x65a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc03f));
        // 66 00DE
        gbc.setState(0xdb05, 0x16c4, 0x20a0, 0x1bdc, 0xbe28, 0x7a3a, 0x0, 0x0);
        gbc.writeMem(0x7a3a, { 0x7 });
        gbc.writeMem(0xdb05, { 0x66 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdb05));
        // 66 00DF
        gbc.setState(0x1153, 0xce3c, 0xe310, 0xdde9, 0x34dd, 0xa962, 0x1, 0x1);
        gbc.writeMem(0x1153, { 0x66 });
        gbc.writeMem(0xa962, { 0x23 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0x1154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa962));
        // 66 00E1
        gbc.setState(0x850e, 0x84a8, 0xde80, 0xd6d6, 0xa226, 0x58e, 0x1, 0x0);
        gbc.writeMem(0x58e, { 0xa2 });
        gbc.writeMem(0x850e, { 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x84a8, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x850e));
        // 66 00E2
        gbc.setState(0x3ad5, 0x935c, 0x3bd0, 0x58c1, 0xc364, 0x7f02, 0x1, 0x0);
        gbc.writeMem(0x3ad5, { 0x66 });
        gbc.writeMem(0x7f02, { 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x3ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00E3
        gbc.setState(0x9cc7, 0xa50, 0xdb00, 0xe9ab, 0x8d62, 0xe1, 0x1, 0x1);
        gbc.writeMem(0xe1, { 0xba });
        gbc.writeMem(0x9cc7, { 0x66 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa50, gbc.sp());
        EXPECT(0x9cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9cc7));
        // 66 00E4
        gbc.setState(0x9593, 0x2769, 0x92a0, 0x9aed, 0xe40, 0xe13d, 0x0, 0x0);
        gbc.writeMem(0x9593, { 0x66 });
        gbc.writeMem(0xe13d, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2769, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9593));
        EXPECT(0x8c, gbc.readMem(0xe13d));
        // 66 00E5
        gbc.setState(0x1d0c, 0x9844, 0xec00, 0xb938, 0x418, 0x8b72, 0x0, 0x1);
        gbc.writeMem(0x1d0c, { 0x66 });
        gbc.writeMem(0x8b72, { 0xe2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b72));
        // 66 00E6
        gbc.setState(0xb49d, 0x481c, 0xed40, 0x9e98, 0x72b6, 0x944b, 0x0, 0x0);
        gbc.writeMem(0x944b, { 0x2e });
        gbc.writeMem(0xb49d, { 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x481c, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x944b));
        EXPECT(0x66, gbc.readMem(0xb49d));
        // 66 00E7
        gbc.setState(0xc413, 0xcc3c, 0x9510, 0xe64d, 0xfe23, 0x4e37, 0x0, 0x1);
        gbc.writeMem(0x4e37, { 0x77 });
        gbc.writeMem(0xc413, { 0x66 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc413));
        // 66 00E8
        gbc.setState(0xe861, 0x50fa, 0x68a0, 0x5cd, 0x7f06, 0x9652, 0x1, 0x0);
        gbc.writeMem(0x9652, { 0x59 });
        gbc.writeMem(0xe861, { 0x66 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x50fa, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9652));
        EXPECT(0x66, gbc.readMem(0xe861));
        // 66 00E9
        gbc.setState(0xd467, 0x2f80, 0x2840, 0x6ef6, 0x3c77, 0xf044, 0x0, 0x1);
        gbc.writeMem(0xd467, { 0x66 });
        gbc.writeMem(0xf044, { 0xd3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd467));
        EXPECT(0xd3, gbc.readMem(0xf044));
        // 66 00EA
        gbc.setState(0xd116, 0x6891, 0x7080, 0xa378, 0x6051, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x2fa6, { 0x49 });
        gbc.writeMem(0xd116, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6891, gbc.sp());
        EXPECT(0xd117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd116));
        // 66 00EB
        gbc.setState(0xa952, 0xd220, 0x3630, 0x731d, 0xfffa, 0x215c, 0x0, 0x1);
        gbc.writeMem(0x215c, { 0x21 });
        gbc.writeMem(0xa952, { 0x66 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0xa953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa952));
        // 66 00EC
        gbc.setState(0x431c, 0xaa89, 0x6970, 0xea8f, 0x9ec0, 0x19fc, 0x1, 0x0);
        gbc.writeMem(0x19fc, { 0x87 });
        gbc.writeMem(0x431c, { 0x66 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaa89, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00ED
        gbc.setState(0x7480, 0xab6e, 0x34d0, 0x2cf6, 0x464c, 0x5047, 0x0, 0x0);
        gbc.writeMem(0x5047, { 0x93 });
        gbc.writeMem(0x7480, { 0x66 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab6e, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00EE
        gbc.setState(0x798, 0xd69d, 0x9f20, 0x7fc7, 0xeb78, 0x4cfd, 0x0, 0x1);
        gbc.writeMem(0x798, { 0x66 });
        gbc.writeMem(0x4cfd, { 0x1e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00EF
        gbc.setState(0x394f, 0xd203, 0xf60, 0xf0f1, 0x9171, 0x36ba, 0x0, 0x0);
        gbc.writeMem(0x36ba, { 0x1 });
        gbc.writeMem(0x394f, { 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00F0
        gbc.setState(0x2353, 0x7037, 0xbe0, 0x7078, 0xa35a, 0xe2ff, 0x1, 0x0);
        gbc.writeMem(0x2353, { 0x66 });
        gbc.writeMem(0xe2ff, { 0xb3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7037, gbc.sp());
        EXPECT(0x2354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe2ff));
        // 66 00F1
        gbc.setState(0x3094, 0x3b91, 0x9c70, 0x16d7, 0xdc0d, 0xaccb, 0x0, 0x0);
        gbc.writeMem(0x3094, { 0x66 });
        gbc.writeMem(0xaccb, { 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3b91, gbc.sp());
        EXPECT(0x3095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xaccb));
        // 66 00F2
        gbc.setState(0x3e21, 0x2756, 0x2b10, 0xfa73, 0x4b63, 0x5231, 0x0, 0x1);
        gbc.writeMem(0x3e21, { 0x66 });
        gbc.writeMem(0x5231, { 0x8b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2756, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00F3
        gbc.setState(0x9722, 0xbb4e, 0xc440, 0x3b28, 0x77ea, 0xfaa3, 0x1, 0x0);
        gbc.writeMem(0x9722, { 0x66 });
        gbc.writeMem(0xfaa3, { 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9722));
        EXPECT(0x2, gbc.readMem(0xfaa3));
        // 66 00F4
        gbc.setState(0x368d, 0xc160, 0xbd40, 0x6935, 0x86a1, 0x1d50, 0x0, 0x0);
        gbc.writeMem(0x1d50, { 0x5e });
        gbc.writeMem(0x368d, { 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc160, gbc.sp());
        EXPECT(0x368e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00F5
        gbc.setState(0x7f4e, 0x56f6, 0xe670, 0x360a, 0xe221, 0xe04, 0x0, 0x0);
        gbc.writeMem(0xe04, { 0xd9 });
        gbc.writeMem(0x7f4e, { 0x66 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x56f6, gbc.sp());
        EXPECT(0x7f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 00F6
        gbc.setState(0x13b6, 0xe3ad, 0x5640, 0xc66b, 0x4292, 0xc72b, 0x0, 0x1);
        gbc.writeMem(0x13b6, { 0x66 });
        gbc.writeMem(0xc72b, { 0x8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe3ad, gbc.sp());
        EXPECT(0x13b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc72b));
        // 66 00F7
        gbc.setState(0x3cbc, 0x3ddf, 0x13a0, 0x51a0, 0x36d3, 0x310a, 0x0, 0x0);
        gbc.writeMem(0x310a, { 0xe9 });
        gbc.writeMem(0x3cbc, { 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3ddf, gbc.sp());
        EXPECT(0x3cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00F8
        gbc.setState(0x674e, 0xbc7d, 0xc860, 0x637c, 0x24e2, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0x1a });
        gbc.writeMem(0x674e, { 0x66 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbc7d, gbc.sp());
        EXPECT(0x674f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 00F9
        gbc.setState(0x7ee7, 0x268a, 0x8df0, 0x5991, 0x1536, 0xd9d9, 0x1, 0x1);
        gbc.writeMem(0x7ee7, { 0x66 });
        gbc.writeMem(0xd9d9, { 0x97 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0x7ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd9d9));
        // 66 00FA
        gbc.setState(0xdc31, 0x4cf6, 0xc420, 0x124b, 0x2d9f, 0xe946, 0x0, 0x0);
        gbc.writeMem(0xdc31, { 0x66 });
        gbc.writeMem(0xe946, { 0x28 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4cf6, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc31));
        EXPECT(0x28, gbc.readMem(0xe946));
        // 66 00FB
        gbc.setState(0xe9a6, 0xfca4, 0xcad0, 0xbbb8, 0xc14e, 0x2483, 0x0, 0x1);
        gbc.writeMem(0x2483, { 0x25 });
        gbc.writeMem(0xe9a6, { 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0xe9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe9a6));
        // 66 00FC
        gbc.setState(0xbf4f, 0xabd0, 0xa4e0, 0x4090, 0x88a6, 0xedb9, 0x0, 0x1);
        gbc.writeMem(0xbf4f, { 0x66 });
        gbc.writeMem(0xedb9, { 0x59 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xabd0, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbf4f));
        EXPECT(0x59, gbc.readMem(0xedb9));
        // 66 00FD
        gbc.setState(0xede, 0xd3ef, 0x5700, 0x124e, 0x9e7d, 0xdcdb, 0x1, 0x1);
        gbc.writeMem(0xede, { 0x66 });
        gbc.writeMem(0xdcdb, { 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd3ef, gbc.sp());
        EXPECT(0xedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdcdb));
        // 66 00FE
        gbc.setState(0x9fc9, 0xdf54, 0xabd0, 0xde50, 0x7dff, 0x1c88, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0x5 });
        gbc.writeMem(0x9fc9, { 0x66 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf54, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9fc9));
        // 66 00FF
        gbc.setState(0x158d, 0x6037, 0x1d20, 0xbfc4, 0x9b51, 0xa85f, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0x66 });
        gbc.writeMem(0xa85f, { 0xf8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6037, gbc.sp());
        EXPECT(0x158e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa85f));
        // 66 0100
        gbc.setState(0x14f5, 0xf01d, 0xd40, 0xd3ad, 0x374e, 0x1ef, 0x0, 0x0);
        gbc.writeMem(0x1ef, { 0x9 });
        gbc.writeMem(0x14f5, { 0x66 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf01d, gbc.sp());
        EXPECT(0x14f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0101
        gbc.setState(0x5bc4, 0xb88a, 0x29c0, 0x744e, 0x30cf, 0xc8a1, 0x0, 0x0);
        gbc.writeMem(0x5bc4, { 0x66 });
        gbc.writeMem(0xc8a1, { 0x42 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0x5bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc8a1));
        // 66 0102
        gbc.setState(0xcc29, 0x387a, 0xcb10, 0xbb4f, 0xf565, 0x50bf, 0x1, 0x0);
        gbc.writeMem(0x50bf, { 0xaf });
        gbc.writeMem(0xcc29, { 0x66 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x387a, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcc29));
        // 66 0103
        gbc.setState(0x4f50, 0xff03, 0xd620, 0xd77e, 0xe969, 0x880, 0x1, 0x1);
        gbc.writeMem(0x880, { 0xc4 });
        gbc.writeMem(0x4f50, { 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xff03, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0104
        gbc.setState(0x529f, 0x9616, 0xbeb0, 0x80bb, 0xb5d6, 0x4e98, 0x0, 0x1);
        gbc.writeMem(0x4e98, { 0xd6 });
        gbc.writeMem(0x529f, { 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0105
        gbc.setState(0xb7cd, 0x472d, 0xa80, 0x93fd, 0xf961, 0xb952, 0x1, 0x1);
        gbc.writeMem(0xb7cd, { 0x66 });
        gbc.writeMem(0xb952, { 0x6c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x472d, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb7cd));
        EXPECT(0x6c, gbc.readMem(0xb952));
        // 66 0106
        gbc.setState(0x61c2, 0x6c29, 0xf870, 0x6250, 0x6f7, 0x9c4f, 0x1, 0x0);
        gbc.writeMem(0x61c2, { 0x66 });
        gbc.writeMem(0x9c4f, { 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x61c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9c4f));
        // 66 0107
        gbc.setState(0xb196, 0x5511, 0xa900, 0x95b8, 0x3c29, 0x96d7, 0x1, 0x1);
        gbc.writeMem(0x96d7, { 0xc3 });
        gbc.writeMem(0xb196, { 0x66 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5511, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x96d7));
        EXPECT(0x66, gbc.readMem(0xb196));
        // 66 0108
        gbc.setState(0xb35b, 0xef94, 0x6b0, 0x9f54, 0x8b67, 0x5ef8, 0x0, 0x1);
        gbc.writeMem(0x5ef8, { 0xf8 });
        gbc.writeMem(0xb35b, { 0x66 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xef94, gbc.sp());
        EXPECT(0xb35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb35b));
        // 66 0109
        gbc.setState(0x488e, 0x62aa, 0x40b0, 0x33df, 0x9c78, 0x3ccb, 0x1, 0x1);
        gbc.writeMem(0x3ccb, { 0x5 });
        gbc.writeMem(0x488e, { 0x66 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x62aa, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 010A
        gbc.setState(0x296a, 0x978c, 0x9d10, 0x90bb, 0x52ab, 0x9338, 0x1, 0x1);
        gbc.writeMem(0x296a, { 0x66 });
        gbc.writeMem(0x9338, { 0x16 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x978c, gbc.sp());
        EXPECT(0x296b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9338));
        // 66 010B
        gbc.setState(0x68e3, 0x7846, 0x7c90, 0x4f81, 0x513f, 0x97a8, 0x1, 0x1);
        gbc.writeMem(0x68e3, { 0x66 });
        gbc.writeMem(0x97a8, { 0xaf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0x68e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x97a8));
        // 66 010C
        gbc.setState(0xed0e, 0x7c69, 0xfe90, 0xf94, 0xa310, 0xbf3d, 0x0, 0x0);
        gbc.writeMem(0xbf3d, { 0x88 });
        gbc.writeMem(0xed0e, { 0x66 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7c69, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbf3d));
        EXPECT(0x66, gbc.readMem(0xed0e));
        // 66 010D
        gbc.setState(0xda60, 0x9518, 0x72b0, 0xf57f, 0x241c, 0xbfde, 0x0, 0x0);
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.writeMem(0xda60, { 0x66 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0xda61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbfde));
        EXPECT(0x66, gbc.readMem(0xda60));
        // 66 010E
        gbc.setState(0x4738, 0xd6c, 0xad80, 0xcef7, 0xd11c, 0x421f, 0x0, 0x0);
        gbc.writeMem(0x421f, { 0x24 });
        gbc.writeMem(0x4738, { 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 010F
        gbc.setState(0x6230, 0x498a, 0x5420, 0xdf55, 0x6fb1, 0x55ed, 0x1, 0x0);
        gbc.writeMem(0x55ed, { 0x77 });
        gbc.writeMem(0x6230, { 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0110
        gbc.setState(0x1ea1, 0x179, 0xf2e0, 0x4324, 0x6440, 0x28fd, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0x66 });
        gbc.writeMem(0x28fd, { 0xcb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x179, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0111
        gbc.setState(0x8a32, 0x2d2b, 0xc100, 0xaba0, 0xb96, 0x7bb1, 0x0, 0x0);
        gbc.writeMem(0x7bb1, { 0x79 });
        gbc.writeMem(0x8a32, { 0x66 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2d2b, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a32));
        // 66 0112
        gbc.setState(0x80b4, 0x766c, 0xfd20, 0x3328, 0xff8d, 0xfa6f, 0x0, 0x0);
        gbc.writeMem(0x80b4, { 0x66 });
        gbc.writeMem(0xfa6f, { 0xfa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x80b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x80b4));
        EXPECT(0xfa, gbc.readMem(0xfa6f));
        // 66 0113
        gbc.setState(0xa7c0, 0xf82a, 0xf00, 0x4168, 0x1dff, 0x3374, 0x0, 0x1);
        gbc.writeMem(0x3374, { 0x53 });
        gbc.writeMem(0xa7c0, { 0x66 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa7c0));
        // 66 0114
        gbc.setState(0x89b4, 0xfa27, 0x1900, 0x2c4c, 0x566, 0x2d1a, 0x0, 0x0);
        gbc.writeMem(0x2d1a, { 0x7f });
        gbc.writeMem(0x89b4, { 0x66 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x89b4));
        // 66 0115
        gbc.setState(0x95be, 0x44cb, 0xc470, 0x3b4, 0x76b3, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0x95be, { 0x66 });
        gbc.writeMem(0xdb32, { 0xad });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x44cb, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x95be));
        EXPECT(0xad, gbc.readMem(0xdb32));
        // 66 0116
        gbc.setState(0xc04, 0x65c3, 0xa8a0, 0xd85f, 0xccd1, 0x9089, 0x0, 0x1);
        gbc.writeMem(0xc04, { 0x66 });
        gbc.writeMem(0x9089, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0xc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9089));
        // 66 0117
        gbc.setState(0x23b7, 0x758a, 0x89f0, 0x817d, 0xd17d, 0x8ed, 0x0, 0x0);
        gbc.writeMem(0x8ed, { 0x1a });
        gbc.writeMem(0x23b7, { 0x66 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x758a, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0119
        gbc.setState(0x3f8, 0xea7, 0x5340, 0xe0bc, 0xf3cb, 0x24f6, 0x1, 0x0);
        gbc.writeMem(0x3f8, { 0x66 });
        gbc.writeMem(0x24f6, { 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 011A
        gbc.setState(0x495a, 0xfa5f, 0x22d0, 0xe908, 0x8778, 0xb099, 0x0, 0x0);
        gbc.writeMem(0x495a, { 0x66 });
        gbc.writeMem(0xb099, { 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x495b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb099));
        // 66 011B
        gbc.setState(0x787c, 0x8876, 0x8590, 0x15af, 0xc180, 0x67f3, 0x1, 0x0);
        gbc.writeMem(0x67f3, { 0xb });
        gbc.writeMem(0x787c, { 0x66 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8876, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 011C
        gbc.setState(0x9dd7, 0xc239, 0x6930, 0xd885, 0xa9c, 0x1c2e, 0x1, 0x0);
        gbc.writeMem(0x1c2e, { 0xb1 });
        gbc.writeMem(0x9dd7, { 0x66 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc239, gbc.sp());
        EXPECT(0x9dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9dd7));
        // 66 011D
        gbc.setState(0xb92f, 0xd643, 0x2440, 0xf52e, 0x15f4, 0x73a9, 0x1, 0x1);
        gbc.writeMem(0x73a9, { 0xf9 });
        gbc.writeMem(0xb92f, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd643, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb92f));
        // 66 011E
        gbc.setState(0xd99e, 0xf4cc, 0xce90, 0xb523, 0x2a5f, 0x517f, 0x1, 0x0);
        gbc.writeMem(0x517f, { 0x5b });
        gbc.writeMem(0xd99e, { 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf4cc, gbc.sp());
        EXPECT(0xd99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd99e));
        // 66 011F
        gbc.setState(0xc791, 0xd129, 0x3e90, 0xb958, 0xbefb, 0xd75f, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0x66 });
        gbc.writeMem(0xd75f, { 0xd2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0xc792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc791));
        EXPECT(0xd2, gbc.readMem(0xd75f));
        // 66 0120
        gbc.setState(0xd897, 0x5cbe, 0xe410, 0x17e1, 0x8bf, 0x175b, 0x1, 0x0);
        gbc.writeMem(0x175b, { 0xd5 });
        gbc.writeMem(0xd897, { 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd897));
        // 66 0121
        gbc.setState(0x3cb1, 0xf7d0, 0xcf50, 0xe7c4, 0x68d3, 0x7e92, 0x0, 0x0);
        gbc.writeMem(0x3cb1, { 0x66 });
        gbc.writeMem(0x7e92, { 0xe6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x3cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0122
        gbc.setState(0xb08b, 0xe3be, 0x6480, 0x6dbd, 0xf70f, 0x729c, 0x0, 0x0);
        gbc.writeMem(0x729c, { 0xd8 });
        gbc.writeMem(0xb08b, { 0x66 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe3be, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb08b));
        // 66 0123
        gbc.setState(0x5343, 0x6a48, 0x3df0, 0xf9c5, 0x4251, 0x731e, 0x1, 0x0);
        gbc.writeMem(0x5343, { 0x66 });
        gbc.writeMem(0x731e, { 0xdd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0124
        gbc.setState(0xb43c, 0x3c1b, 0x9690, 0xf57a, 0xddc5, 0xe297, 0x0, 0x0);
        gbc.writeMem(0xb43c, { 0x66 });
        gbc.writeMem(0xe297, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3c1b, gbc.sp());
        EXPECT(0xb43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb43c));
        EXPECT(0x10, gbc.readMem(0xe297));
        // 66 0125
        gbc.setState(0x846d, 0xa380, 0x2ef0, 0x2566, 0x45ff, 0x2e2a, 0x1, 0x0);
        gbc.writeMem(0x2e2a, { 0x67 });
        gbc.writeMem(0x846d, { 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa380, gbc.sp());
        EXPECT(0x846e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x846d));
        // 66 0126
        gbc.setState(0xacec, 0x462d, 0x47a0, 0xce68, 0x8498, 0xed10, 0x0, 0x0);
        gbc.writeMem(0xacec, { 0x66 });
        gbc.writeMem(0xed10, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xaced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xacec));
        EXPECT(0x2c, gbc.readMem(0xed10));
        // 66 0127
        gbc.setState(0xeeab, 0x3ced, 0x2570, 0xce9e, 0xe96a, 0xff98, 0x0, 0x1);
        gbc.writeMem(0xeeab, { 0x66 });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3ced, gbc.sp());
        EXPECT(0xeeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xeeab));
        EXPECT(0x95, gbc.readMem(0xff98));
        // 66 0128
        gbc.setState(0xd85a, 0xdc8e, 0xeb20, 0xd1fe, 0x4175, 0xda49, 0x0, 0x1);
        gbc.writeMem(0xd85a, { 0x66 });
        gbc.writeMem(0xda49, { 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdc8e, gbc.sp());
        EXPECT(0xd85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd85a));
        EXPECT(0x1, gbc.readMem(0xda49));
        // 66 0129
        gbc.setState(0x5990, 0x29aa, 0x85e0, 0xa8e9, 0x9e25, 0x5e2, 0x0, 0x0);
        gbc.writeMem(0x5e2, { 0xe1 });
        gbc.writeMem(0x5990, { 0x66 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 012A
        gbc.setState(0xdc5b, 0x11a7, 0xb3a0, 0xbb95, 0xc780, 0x5c28, 0x0, 0x0);
        gbc.writeMem(0x5c28, { 0x3c });
        gbc.writeMem(0xdc5b, { 0x66 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0xdc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc5b));
        // 66 012B
        gbc.setState(0x61aa, 0xe49c, 0x1820, 0xd6a, 0x53a0, 0xc35f, 0x1, 0x1);
        gbc.writeMem(0x61aa, { 0x66 });
        gbc.writeMem(0xc35f, { 0x57 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0x61ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc35f));
        // 66 012C
        gbc.setState(0xe7e, 0xb36f, 0x1bd0, 0xd4e8, 0xa015, 0xacc6, 0x1, 0x1);
        gbc.writeMem(0xe7e, { 0x66 });
        gbc.writeMem(0xacc6, { 0x1c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0xe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xacc6));
        // 66 012D
        gbc.setState(0x8707, 0xa6e4, 0x4390, 0x7e8c, 0x6612, 0x48db, 0x0, 0x0);
        gbc.writeMem(0x48db, { 0x9c });
        gbc.writeMem(0x8707, { 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa6e4, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8707));
        // 66 012E
        gbc.setState(0x481e, 0xa23d, 0xb7f0, 0xf049, 0x2eb9, 0x95e1, 0x0, 0x0);
        gbc.writeMem(0x481e, { 0x66 });
        gbc.writeMem(0x95e1, { 0x87 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x95e1));
        // 66 012F
        gbc.setState(0xef62, 0x6ec2, 0x6730, 0x6bbd, 0xd15, 0x552a, 0x1, 0x0);
        gbc.writeMem(0x552a, { 0x2 });
        gbc.writeMem(0xef62, { 0x66 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0xef63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xef62));
        // 66 0130
        gbc.setState(0x56c5, 0x64d3, 0xc780, 0x2508, 0x2231, 0x116, 0x1, 0x0);
        gbc.writeMem(0x116, { 0x58 });
        gbc.writeMem(0x56c5, { 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0x56c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0131
        gbc.setState(0x1801, 0xf2b1, 0xf430, 0x78f6, 0x751c, 0xf7cc, 0x0, 0x1);
        gbc.writeMem(0x1801, { 0x66 });
        gbc.writeMem(0xf7cc, { 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x1802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xf7cc));
        // 66 0132
        gbc.setState(0x2d7f, 0x820b, 0x76d0, 0xf244, 0x189f, 0x7f18, 0x1, 0x1);
        gbc.writeMem(0x2d7f, { 0x66 });
        gbc.writeMem(0x7f18, { 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x820b, gbc.sp());
        EXPECT(0x2d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0133
        gbc.setState(0x9a10, 0xa60b, 0x6600, 0x2d5e, 0x9988, 0x8f1a, 0x0, 0x1);
        gbc.writeMem(0x8f1a, { 0x1b });
        gbc.writeMem(0x9a10, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa60b, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8f1a));
        EXPECT(0x66, gbc.readMem(0x9a10));
        // 66 0134
        gbc.setState(0x7b57, 0x362e, 0xfd80, 0x355b, 0xe1c1, 0x1c7c, 0x0, 0x0);
        gbc.writeMem(0x1c7c, { 0xdf });
        gbc.writeMem(0x7b57, { 0x66 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x362e, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0135
        gbc.setState(0x281, 0xfc6f, 0xfe70, 0xc669, 0x9a24, 0xf7a6, 0x0, 0x0);
        gbc.writeMem(0x281, { 0x66 });
        gbc.writeMem(0xf7a6, { 0xf3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0x282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf7a6));
        // 66 0136
        gbc.setState(0xb002, 0xd70c, 0x3cd0, 0x1212, 0x74c0, 0x6c36, 0x0, 0x1);
        gbc.writeMem(0x6c36, { 0x45 });
        gbc.writeMem(0xb002, { 0x66 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb002));
        // 66 0137
        gbc.setState(0x410d, 0xaa35, 0xe3b0, 0x5bd6, 0x201, 0xdc46, 0x0, 0x1);
        gbc.writeMem(0x410d, { 0x66 });
        gbc.writeMem(0xdc46, { 0x73 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xdc46));
        // 66 0138
        gbc.setState(0xd5db, 0x476d, 0x8510, 0xdab0, 0x8d29, 0x691d, 0x0, 0x1);
        gbc.writeMem(0x691d, { 0x13 });
        gbc.writeMem(0xd5db, { 0x66 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x476d, gbc.sp());
        EXPECT(0xd5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd5db));
        // 66 0139
        gbc.setState(0xddb2, 0x53c9, 0xea50, 0xd8f2, 0xc492, 0x29c8, 0x0, 0x1);
        gbc.writeMem(0x29c8, { 0xc0 });
        gbc.writeMem(0xddb2, { 0x66 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0xddb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xddb2));
        // 66 013A
        gbc.setState(0xc363, 0x6c48, 0xd00, 0xa218, 0x1976, 0x3340, 0x1, 0x1);
        gbc.writeMem(0x3340, { 0x92 });
        gbc.writeMem(0xc363, { 0x66 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6c48, gbc.sp());
        EXPECT(0xc364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc363));
        // 66 013B
        gbc.setState(0xdefb, 0xe711, 0x9e50, 0x7120, 0x7974, 0x285, 0x1, 0x1);
        gbc.writeMem(0x285, { 0x2d });
        gbc.writeMem(0xdefb, { 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe711, gbc.sp());
        EXPECT(0xdefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdefb));
        // 66 013D
        gbc.setState(0x1769, 0x19f4, 0xf9a0, 0xe5c0, 0x37f5, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0x1769, { 0x66 });
        gbc.writeMem(0xd6dd, { 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x19f4, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd6dd));
        // 66 013F
        gbc.setState(0xae07, 0xe5e4, 0x1d20, 0xef62, 0x8f42, 0xe422, 0x1, 0x1);
        gbc.writeMem(0xae07, { 0x66 });
        gbc.writeMem(0xe422, { 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xae07));
        EXPECT(0x76, gbc.readMem(0xe422));
        // 66 0140
        gbc.setState(0x648a, 0x1f0, 0x1090, 0x6786, 0x45b1, 0x4257, 0x1, 0x1);
        gbc.writeMem(0x4257, { 0x93 });
        gbc.writeMem(0x648a, { 0x66 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1f0, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0141
        gbc.setState(0xc266, 0xaab7, 0x2170, 0xfe26, 0x7ce, 0xf54e, 0x0, 0x1);
        gbc.writeMem(0xc266, { 0x66 });
        gbc.writeMem(0xf54e, { 0xad });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaab7, gbc.sp());
        EXPECT(0xc267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc266));
        EXPECT(0xad, gbc.readMem(0xf54e));
        // 66 0142
        gbc.setState(0x6e30, 0xaad8, 0xe710, 0x1714, 0x1920, 0x105f, 0x0, 0x0);
        gbc.writeMem(0x105f, { 0x36 });
        gbc.writeMem(0x6e30, { 0x66 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaad8, gbc.sp());
        EXPECT(0x6e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0146
        gbc.setState(0x58e6, 0x37f5, 0x62b0, 0x971f, 0x85c7, 0xf383, 0x1, 0x1);
        gbc.writeMem(0x58e6, { 0x66 });
        gbc.writeMem(0xf383, { 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x37f5, gbc.sp());
        EXPECT(0x58e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf383));
        // 66 0147
        gbc.setState(0x77bc, 0xe1ba, 0xc6c0, 0x8f88, 0x44cd, 0x4d87, 0x1, 0x1);
        gbc.writeMem(0x4d87, { 0x88 });
        gbc.writeMem(0x77bc, { 0x66 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe1ba, gbc.sp());
        EXPECT(0x77bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0149
        gbc.setState(0x94b9, 0xc843, 0xbd60, 0x9c9c, 0xf512, 0x6545, 0x1, 0x1);
        gbc.writeMem(0x6545, { 0x4c });
        gbc.writeMem(0x94b9, { 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc843, gbc.sp());
        EXPECT(0x94ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x94b9));
        // 66 014A
        gbc.setState(0x4ab5, 0x8e7b, 0xdf50, 0xc7b, 0x134c, 0x222a, 0x1, 0x0);
        gbc.writeMem(0x222a, { 0x52 });
        gbc.writeMem(0x4ab5, { 0x66 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 014B
        gbc.setState(0x9ccb, 0xea28, 0x5d50, 0x4f7c, 0xe102, 0x9ddb, 0x1, 0x0);
        gbc.writeMem(0x9ccb, { 0x66 });
        gbc.writeMem(0x9ddb, { 0x2a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ccb));
        EXPECT(0x2a, gbc.readMem(0x9ddb));
        // 66 014C
        gbc.setState(0x65fc, 0x5e4d, 0x4ca0, 0x3633, 0x9365, 0x29f1, 0x1, 0x0);
        gbc.writeMem(0x29f1, { 0xd9 });
        gbc.writeMem(0x65fc, { 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 014D
        gbc.setState(0x284f, 0x73c2, 0xe470, 0x9189, 0xdc50, 0x7a81, 0x0, 0x0);
        gbc.writeMem(0x284f, { 0x66 });
        gbc.writeMem(0x7a81, { 0x2e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x73c2, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 014E
        gbc.setState(0x8f39, 0x5df4, 0xf310, 0x4929, 0x1888, 0xaf13, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0x66 });
        gbc.writeMem(0xaf13, { 0xd4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5df4, gbc.sp());
        EXPECT(0x8f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8f39));
        EXPECT(0xd4, gbc.readMem(0xaf13));
        // 66 014F
        gbc.setState(0xd78d, 0xff57, 0x3f60, 0x73bc, 0x2108, 0x2079, 0x0, 0x0);
        gbc.writeMem(0x2079, { 0x6b });
        gbc.writeMem(0xd78d, { 0x66 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd78d));
        // 66 0150
        gbc.setState(0x7733, 0x35b, 0x3d80, 0x4784, 0x1d36, 0xced0, 0x0, 0x1);
        gbc.writeMem(0x7733, { 0x66 });
        gbc.writeMem(0xced0, { 0xee });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xced0));
        // 66 0152
        gbc.setState(0xa4e8, 0x733c, 0xf280, 0x7c4, 0x3123, 0xc43, 0x0, 0x1);
        gbc.writeMem(0xc43, { 0x81 });
        gbc.writeMem(0xa4e8, { 0x66 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa4e8));
        // 66 0153
        gbc.setState(0x8d5a, 0xfef1, 0x80c0, 0xb2aa, 0xe6e9, 0xed96, 0x0, 0x0);
        gbc.writeMem(0x8d5a, { 0x66 });
        gbc.writeMem(0xed96, { 0x56 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfef1, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8d5a));
        EXPECT(0x56, gbc.readMem(0xed96));
        // 66 0154
        gbc.setState(0x870b, 0x21c5, 0xf890, 0x8dfe, 0xfe7b, 0xb2b1, 0x0, 0x1);
        gbc.writeMem(0x870b, { 0x66 });
        gbc.writeMem(0xb2b1, { 0xc7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x21c5, gbc.sp());
        EXPECT(0x870c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x870b));
        EXPECT(0xc7, gbc.readMem(0xb2b1));
        // 66 0155
        gbc.setState(0xeb7e, 0x7f69, 0x6d50, 0xfd0, 0x4f40, 0x9abb, 0x1, 0x0);
        gbc.writeMem(0x9abb, { 0x9a });
        gbc.writeMem(0xeb7e, { 0x66 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0xeb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9abb));
        EXPECT(0x66, gbc.readMem(0xeb7e));
        // 66 0156
        gbc.setState(0xd2dc, 0x3b1c, 0x3880, 0xea7, 0x165b, 0x9c06, 0x1, 0x1);
        gbc.writeMem(0x9c06, { 0x7b });
        gbc.writeMem(0xd2dc, { 0x66 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b1c, gbc.sp());
        EXPECT(0xd2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c06));
        EXPECT(0x66, gbc.readMem(0xd2dc));
        // 66 0157
        gbc.setState(0x18dd, 0xf0c9, 0x5f70, 0x4cc1, 0x1892, 0xfc9f, 0x0, 0x1);
        gbc.writeMem(0x18dd, { 0x66 });
        gbc.writeMem(0xfc9f, { 0xe4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xfc9f));
        // 66 0158
        gbc.setState(0xe0e2, 0x34f6, 0xc50, 0xb6a9, 0x5a1e, 0xa2fe, 0x1, 0x1);
        gbc.writeMem(0xa2fe, { 0xd1 });
        gbc.writeMem(0xe0e2, { 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x34f6, gbc.sp());
        EXPECT(0xe0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa2fe));
        EXPECT(0x66, gbc.readMem(0xe0e2));
        // 66 0159
        gbc.setState(0x73cf, 0xc9ea, 0x8860, 0xe0ff, 0x76f0, 0x9d17, 0x0, 0x1);
        gbc.writeMem(0x73cf, { 0x66 });
        gbc.writeMem(0x9d17, { 0xde });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc9ea, gbc.sp());
        EXPECT(0x73d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9d17));
        // 66 015A
        gbc.setState(0x55d3, 0x5a59, 0xa000, 0x5e51, 0xae51, 0xa711, 0x0, 0x0);
        gbc.writeMem(0x55d3, { 0x66 });
        gbc.writeMem(0xa711, { 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0x55d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa711));
        // 66 015B
        gbc.setState(0xb180, 0xfae2, 0xcfd0, 0x31a5, 0xba7f, 0xf22c, 0x1, 0x1);
        gbc.writeMem(0xb180, { 0x66 });
        gbc.writeMem(0xf22c, { 0x65 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb180));
        EXPECT(0x65, gbc.readMem(0xf22c));
        // 66 015C
        gbc.setState(0x4dd7, 0xee10, 0x98b0, 0xb416, 0xd0ee, 0x26a8, 0x0, 0x0);
        gbc.writeMem(0x26a8, { 0x73 });
        gbc.writeMem(0x4dd7, { 0x66 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0x4dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 015D
        gbc.setState(0xc1b2, 0x5876, 0x3a30, 0xf3c1, 0xfb22, 0x92fb, 0x0, 0x1);
        gbc.writeMem(0x92fb, { 0xf });
        gbc.writeMem(0xc1b2, { 0x66 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5876, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x92fb));
        EXPECT(0x66, gbc.readMem(0xc1b2));
        // 66 015E
        gbc.setState(0x6cb1, 0x65b9, 0x4d90, 0xa484, 0x15a3, 0x6854, 0x1, 0x0);
        gbc.writeMem(0x6854, { 0x49 });
        gbc.writeMem(0x6cb1, { 0x66 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x65b9, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 015F
        gbc.setState(0xd9f3, 0x8829, 0x3770, 0xaa7e, 0x79f6, 0xa3d0, 0x0, 0x1);
        gbc.writeMem(0xa3d0, { 0x68 });
        gbc.writeMem(0xd9f3, { 0x66 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa3d0));
        EXPECT(0x66, gbc.readMem(0xd9f3));
        // 66 0160
        gbc.setState(0xcb89, 0x5daa, 0x6b70, 0x16e5, 0x3552, 0x4350, 0x1, 0x1);
        gbc.writeMem(0x4350, { 0x22 });
        gbc.writeMem(0xcb89, { 0x66 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0xcb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcb89));
        // 66 0161
        gbc.setState(0x62ac, 0x962c, 0x8bf0, 0x20c6, 0xa2f3, 0xe801, 0x0, 0x0);
        gbc.writeMem(0x62ac, { 0x66 });
        gbc.writeMem(0xe801, { 0xca });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x962c, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe801));
        // 66 0162
        gbc.setState(0xe182, 0x393a, 0xb4f0, 0x2362, 0x4563, 0x2f10, 0x0, 0x0);
        gbc.writeMem(0x2f10, { 0x31 });
        gbc.writeMem(0xe182, { 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0xe183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe182));
        // 66 0163
        gbc.setState(0x44fa, 0x7441, 0x7700, 0xa93, 0x378, 0xb474, 0x1, 0x1);
        gbc.writeMem(0x44fa, { 0x66 });
        gbc.writeMem(0xb474, { 0xfe });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x44fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb474));
        // 66 0164
        gbc.setState(0xa26e, 0x93c0, 0xf290, 0x8f95, 0x7812, 0x36fd, 0x0, 0x0);
        gbc.writeMem(0x36fd, { 0x1f });
        gbc.writeMem(0xa26e, { 0x66 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x93c0, gbc.sp());
        EXPECT(0xa26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa26e));
        // 66 0165
        gbc.setState(0x2673, 0xd9aa, 0xfe60, 0xf336, 0xef41, 0xe305, 0x0, 0x1);
        gbc.writeMem(0x2673, { 0x66 });
        gbc.writeMem(0xe305, { 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe305));
        // 66 0166
        gbc.setState(0x478, 0xe071, 0x60a0, 0x77d3, 0xb0e9, 0x63d4, 0x0, 0x0);
        gbc.writeMem(0x478, { 0x66 });
        gbc.writeMem(0x63d4, { 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0167
        gbc.setState(0xa33c, 0x83b1, 0xd580, 0xe101, 0x97e3, 0xd055, 0x1, 0x1);
        gbc.writeMem(0xa33c, { 0x66 });
        gbc.writeMem(0xd055, { 0x95 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa33c));
        EXPECT(0x95, gbc.readMem(0xd055));
        // 66 0168
        gbc.setState(0x71e6, 0x1e7b, 0xf580, 0x460f, 0xc92d, 0x148d, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0x6d });
        gbc.writeMem(0x71e6, { 0x66 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1e7b, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0169
        gbc.setState(0xc924, 0x72e6, 0xc9c0, 0x626c, 0xa29f, 0xa2dd, 0x1, 0x0);
        gbc.writeMem(0xa2dd, { 0x3d });
        gbc.writeMem(0xc924, { 0x66 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x72e6, gbc.sp());
        EXPECT(0xc925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa2dd));
        EXPECT(0x66, gbc.readMem(0xc924));
        // 66 016B
        gbc.setState(0x8495, 0xf9f4, 0x7060, 0xca5e, 0xd67b, 0x5aa0, 0x1, 0x1);
        gbc.writeMem(0x5aa0, { 0xc1 });
        gbc.writeMem(0x8495, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0x8496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8495));
        // 66 016C
        gbc.setState(0x1def, 0x42d1, 0xb9d0, 0x28a, 0xf83, 0x6d68, 0x1, 0x1);
        gbc.writeMem(0x1def, { 0x66 });
        gbc.writeMem(0x6d68, { 0xa8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0x1df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 016D
        gbc.setState(0x506, 0xff42, 0xbd40, 0xb8f5, 0x485c, 0xd856, 0x0, 0x0);
        gbc.writeMem(0x506, { 0x66 });
        gbc.writeMem(0xd856, { 0x2b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd856));
        // 66 016E
        gbc.setState(0x19c3, 0x292b, 0xb830, 0x6c2b, 0xc175, 0xeebc, 0x1, 0x1);
        gbc.writeMem(0x19c3, { 0x66 });
        gbc.writeMem(0xeebc, { 0x69 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x19c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xeebc));
        // 66 016F
        gbc.setState(0x3775, 0x86, 0x5ef0, 0xad, 0x4aab, 0xb39d, 0x0, 0x0);
        gbc.writeMem(0x3775, { 0x66 });
        gbc.writeMem(0xb39d, { 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0x3776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb39d));
        // 66 0170
        gbc.setState(0x23b3, 0x7955, 0xa630, 0x35fa, 0x9a43, 0x57a5, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0x66 });
        gbc.writeMem(0x57a5, { 0x8c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0x23b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0171
        gbc.setState(0xc42c, 0x62c2, 0xb040, 0xda14, 0xe65d, 0xabef, 0x0, 0x1);
        gbc.writeMem(0xabef, { 0xfc });
        gbc.writeMem(0xc42c, { 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x62c2, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xabef));
        EXPECT(0x66, gbc.readMem(0xc42c));
        // 66 0172
        gbc.setState(0x99b, 0x765c, 0x3fd0, 0x2151, 0xcf0b, 0xb5a, 0x1, 0x1);
        gbc.writeMem(0x99b, { 0x66 });
        gbc.writeMem(0xb5a, { 0xe7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x765c, gbc.sp());
        EXPECT(0x99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0173
        gbc.setState(0xaa77, 0x6c37, 0x9b60, 0x50b9, 0x98f7, 0x92a9, 0x1, 0x0);
        gbc.writeMem(0x92a9, { 0xf0 });
        gbc.writeMem(0xaa77, { 0x66 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x92a9));
        EXPECT(0x66, gbc.readMem(0xaa77));
        // 66 0174
        gbc.setState(0x5787, 0xfb89, 0x7940, 0xf8bf, 0xaee3, 0x23b9, 0x1, 0x1);
        gbc.writeMem(0x23b9, { 0xc8 });
        gbc.writeMem(0x5787, { 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0175
        gbc.setState(0xe8a5, 0xd7c5, 0xf9b0, 0x51ac, 0x63d5, 0x4e76, 0x0, 0x1);
        gbc.writeMem(0x4e76, { 0xaf });
        gbc.writeMem(0xe8a5, { 0x66 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0xe8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe8a5));
        // 66 0176
        gbc.setState(0x9221, 0x8577, 0x4f60, 0x54b4, 0x5d08, 0x1d06, 0x0, 0x1);
        gbc.writeMem(0x1d06, { 0x5d });
        gbc.writeMem(0x9221, { 0x66 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8577, gbc.sp());
        EXPECT(0x9222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9221));
        // 66 0177
        gbc.setState(0x8ab6, 0x7f46, 0x7b70, 0xd033, 0x2e98, 0x95b3, 0x1, 0x0);
        gbc.writeMem(0x8ab6, { 0x66 });
        gbc.writeMem(0x95b3, { 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8ab6));
        EXPECT(0x72, gbc.readMem(0x95b3));
        // 66 0178
        gbc.setState(0x81e6, 0x60ac, 0xf1e0, 0x2a5a, 0x7962, 0xc71, 0x1, 0x0);
        gbc.writeMem(0xc71, { 0x88 });
        gbc.writeMem(0x81e6, { 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x60ac, gbc.sp());
        EXPECT(0x81e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x81e6));
        // 66 0179
        gbc.setState(0x1ecb, 0x575e, 0x2f00, 0xb602, 0xa447, 0x1b6e, 0x0, 0x1);
        gbc.writeMem(0x1b6e, { 0x78 });
        gbc.writeMem(0x1ecb, { 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 017A
        gbc.setState(0x2cb2, 0xd518, 0xabf0, 0x7b0b, 0x8170, 0xfa11, 0x0, 0x0);
        gbc.writeMem(0x2cb2, { 0x66 });
        gbc.writeMem(0xfa11, { 0xf3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0x2cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xfa11));
        // 66 017B
        gbc.setState(0x96b4, 0xd1de, 0xfc00, 0xf4fd, 0x4cb9, 0xae3e, 0x1, 0x1);
        gbc.writeMem(0x96b4, { 0x66 });
        gbc.writeMem(0xae3e, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd1de, gbc.sp());
        EXPECT(0x96b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x96b4));
        EXPECT(0x93, gbc.readMem(0xae3e));
        // 66 017C
        gbc.setState(0x7034, 0x3531, 0x2c0, 0x4b71, 0xb11, 0x8712, 0x1, 0x1);
        gbc.writeMem(0x7034, { 0x66 });
        gbc.writeMem(0x8712, { 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3531, gbc.sp());
        EXPECT(0x7035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8712));
        // 66 017D
        gbc.setState(0xb4c4, 0x969, 0xba00, 0x49a0, 0x5d2a, 0x88a8, 0x0, 0x0);
        gbc.writeMem(0x88a8, { 0xe0 });
        gbc.writeMem(0xb4c4, { 0x66 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x88a8));
        EXPECT(0x66, gbc.readMem(0xb4c4));
        // 66 017E
        gbc.setState(0xa502, 0x485, 0xccf0, 0x3128, 0x5318, 0x149e, 0x0, 0x1);
        gbc.writeMem(0x149e, { 0xa2 });
        gbc.writeMem(0xa502, { 0x66 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa502));
        // 66 017F
        gbc.setState(0x923, 0x9b72, 0x3de0, 0xc282, 0x2d98, 0xb0d7, 0x1, 0x0);
        gbc.writeMem(0x923, { 0x66 });
        gbc.writeMem(0xb0d7, { 0x8d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb0d7));
        // 66 0180
        gbc.setState(0x7ba3, 0x7327, 0xc2e0, 0xa683, 0x27c4, 0xda11, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0x66 });
        gbc.writeMem(0xda11, { 0x6c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7327, gbc.sp());
        EXPECT(0x7ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xda11));
        // 66 0181
        gbc.setState(0x454e, 0xf371, 0x3f80, 0x6354, 0x972b, 0xfdca, 0x1, 0x1);
        gbc.writeMem(0x454e, { 0x66 });
        gbc.writeMem(0xfdca, { 0x8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf371, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xfdca));
        // 66 0182
        gbc.setState(0xb859, 0x4817, 0x75c0, 0xb009, 0x4d8a, 0xfe28, 0x1, 0x1);
        gbc.writeMem(0xb859, { 0x66 });
        gbc.writeMem(0xfe28, { 0xce });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4817, gbc.sp());
        EXPECT(0xb85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb859));
        EXPECT(0xce, gbc.readMem(0xfe28));
        // 66 0183
        gbc.setState(0x1194, 0x2b1e, 0x6980, 0xcbef, 0xb80e, 0xfcaf, 0x1, 0x0);
        gbc.writeMem(0x1194, { 0x66 });
        gbc.writeMem(0xfcaf, { 0xbb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0x1195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xfcaf));
        // 66 0184
        gbc.setState(0x3441, 0x52d3, 0x400, 0x4e87, 0xab7b, 0x50d1, 0x0, 0x0);
        gbc.writeMem(0x3441, { 0x66 });
        gbc.writeMem(0x50d1, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x52d3, gbc.sp());
        EXPECT(0x3442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0185
        gbc.setState(0xc089, 0x9c10, 0x4b70, 0xd6c7, 0xade8, 0xd7e1, 0x0, 0x0);
        gbc.writeMem(0xc089, { 0x66 });
        gbc.writeMem(0xd7e1, { 0xf0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c10, gbc.sp());
        EXPECT(0xc08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc089));
        EXPECT(0xf0, gbc.readMem(0xd7e1));
        // 66 0186
        gbc.setState(0x3b28, 0x9c9e, 0xcb60, 0xe89d, 0x3e86, 0x60a0, 0x0, 0x1);
        gbc.writeMem(0x3b28, { 0x66 });
        gbc.writeMem(0x60a0, { 0x67 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0x3b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0187
        gbc.setState(0x69cc, 0xb7f9, 0xcee0, 0x4abc, 0x3dfe, 0x9a16, 0x1, 0x1);
        gbc.writeMem(0x69cc, { 0x66 });
        gbc.writeMem(0x9a16, { 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb7f9, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9a16));
        // 66 0188
        gbc.setState(0x8e3e, 0xd3e1, 0x5500, 0x2612, 0xc025, 0xc707, 0x0, 0x0);
        gbc.writeMem(0x8e3e, { 0x66 });
        gbc.writeMem(0xc707, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0x8e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8e3e));
        EXPECT(0x51, gbc.readMem(0xc707));
        // 66 0189
        gbc.setState(0xad39, 0x9d04, 0x4fb0, 0xa2e1, 0x11b0, 0xe43b, 0x0, 0x0);
        gbc.writeMem(0xad39, { 0x66 });
        gbc.writeMem(0xe43b, { 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad39));
        EXPECT(0x6e, gbc.readMem(0xe43b));
        // 66 018A
        gbc.setState(0xeaaf, 0x8c8, 0x62f0, 0x1016, 0xffa9, 0x17df, 0x1, 0x1);
        gbc.writeMem(0x17df, { 0x52 });
        gbc.writeMem(0xeaaf, { 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xeaaf));
        // 66 018B
        gbc.setState(0x8551, 0x21d4, 0x1c0, 0x6ee8, 0x7cd7, 0x13ec, 0x1, 0x0);
        gbc.writeMem(0x13ec, { 0x74 });
        gbc.writeMem(0x8551, { 0x66 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21d4, gbc.sp());
        EXPECT(0x8552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8551));
        // 66 018C
        gbc.setState(0x79a8, 0x357a, 0xa020, 0x3908, 0xbcd, 0x71a0, 0x1, 0x1);
        gbc.writeMem(0x71a0, { 0x80 });
        gbc.writeMem(0x79a8, { 0x66 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 018E
        gbc.setState(0xcb59, 0x321c, 0xec40, 0x7cee, 0x3bd, 0x581b, 0x1, 0x0);
        gbc.writeMem(0x581b, { 0xa4 });
        gbc.writeMem(0xcb59, { 0x66 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x321c, gbc.sp());
        EXPECT(0xcb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcb59));
        // 66 018F
        gbc.setState(0x6cc2, 0x3693, 0x1600, 0x2833, 0x89c1, 0x3ad0, 0x0, 0x1);
        gbc.writeMem(0x3ad0, { 0xd7 });
        gbc.writeMem(0x6cc2, { 0x66 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3693, gbc.sp());
        EXPECT(0x6cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0190
        gbc.setState(0xba48, 0x2a4b, 0xc690, 0xcda5, 0xf299, 0x9368, 0x0, 0x1);
        gbc.writeMem(0x9368, { 0x36 });
        gbc.writeMem(0xba48, { 0x66 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0xba49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9368));
        EXPECT(0x66, gbc.readMem(0xba48));
        // 66 0191
        gbc.setState(0x9501, 0xf17d, 0x55c0, 0x1953, 0xe822, 0xf6a2, 0x1, 0x0);
        gbc.writeMem(0x9501, { 0x66 });
        gbc.writeMem(0xf6a2, { 0x7f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf17d, gbc.sp());
        EXPECT(0x9502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9501));
        EXPECT(0x7f, gbc.readMem(0xf6a2));
        // 66 0192
        gbc.setState(0x4db3, 0x93de, 0x2300, 0x8635, 0xb80, 0x51ac, 0x1, 0x0);
        gbc.writeMem(0x4db3, { 0x66 });
        gbc.writeMem(0x51ac, { 0x62 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0193
        gbc.setState(0x4164, 0xf945, 0x55d0, 0x245f, 0x7101, 0x8ab5, 0x1, 0x0);
        gbc.writeMem(0x4164, { 0x66 });
        gbc.writeMem(0x8ab5, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf945, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ab5));
        // 66 0194
        gbc.setState(0xcc4b, 0xd4e9, 0xe150, 0x4440, 0x71ab, 0x4ab8, 0x0, 0x1);
        gbc.writeMem(0x4ab8, { 0x18 });
        gbc.writeMem(0xcc4b, { 0x66 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd4e9, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcc4b));
        // 66 0195
        gbc.setState(0x6660, 0xa4a4, 0x1ca0, 0xce7, 0x9088, 0x24b, 0x0, 0x0);
        gbc.writeMem(0x24b, { 0x30 });
        gbc.writeMem(0x6660, { 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa4a4, gbc.sp());
        EXPECT(0x6661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0196
        gbc.setState(0x1ef1, 0xc3cb, 0x81b0, 0xf2f5, 0x430b, 0x7b6c, 0x1, 0x1);
        gbc.writeMem(0x1ef1, { 0x66 });
        gbc.writeMem(0x7b6c, { 0x6d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc3cb, gbc.sp());
        EXPECT(0x1ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0197
        gbc.setState(0xabc2, 0x8d27, 0xc120, 0x90e6, 0xabef, 0xeefb, 0x0, 0x0);
        gbc.writeMem(0xabc2, { 0x66 });
        gbc.writeMem(0xeefb, { 0x58 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0xabc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xabc2));
        EXPECT(0x58, gbc.readMem(0xeefb));
        // 66 0198
        gbc.setState(0xb22f, 0xcd71, 0xea50, 0xdda, 0x594, 0xe29b, 0x1, 0x0);
        gbc.writeMem(0xb22f, { 0x66 });
        gbc.writeMem(0xe29b, { 0x77 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcd71, gbc.sp());
        EXPECT(0xb230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb22f));
        EXPECT(0x77, gbc.readMem(0xe29b));
        // 66 0199
        gbc.setState(0xb000, 0xc2e3, 0x1350, 0x2ca1, 0xc6e1, 0x480f, 0x0, 0x0);
        gbc.writeMem(0x480f, { 0x75 });
        gbc.writeMem(0xb000, { 0x66 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2e3, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb000));
        // 66 019A
        gbc.setState(0xc0fa, 0xab63, 0x8b00, 0xe0c2, 0x14a4, 0x48bf, 0x1, 0x0);
        gbc.writeMem(0x48bf, { 0x2a });
        gbc.writeMem(0xc0fa, { 0x66 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0xc0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc0fa));
        // 66 019B
        gbc.setState(0x8ce2, 0xcd50, 0x2460, 0x5742, 0xce2e, 0x5c61, 0x0, 0x0);
        gbc.writeMem(0x5c61, { 0x3e });
        gbc.writeMem(0x8ce2, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8ce2));
        // 66 019C
        gbc.setState(0xbc8f, 0xb883, 0x4c30, 0xc4ed, 0xe4f7, 0x8037, 0x0, 0x0);
        gbc.writeMem(0x8037, { 0xb0 });
        gbc.writeMem(0xbc8f, { 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb883, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8037));
        EXPECT(0x66, gbc.readMem(0xbc8f));
        // 66 019D
        gbc.setState(0xb0de, 0xb182, 0x6cc0, 0x8263, 0x620, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0xb0de, { 0x66 });
        gbc.writeMem(0xb73b, { 0x88 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb182, gbc.sp());
        EXPECT(0xb0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb0de));
        EXPECT(0x88, gbc.readMem(0xb73b));
        // 66 019E
        gbc.setState(0x5810, 0x4946, 0x1e20, 0x11, 0x78ed, 0x837f, 0x1, 0x1);
        gbc.writeMem(0x5810, { 0x66 });
        gbc.writeMem(0x837f, { 0xc1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4946, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x837f));
        // 66 019F
        gbc.setState(0x1c46, 0x329a, 0xc3b0, 0x38dd, 0x3266, 0x1495, 0x1, 0x0);
        gbc.writeMem(0x1495, { 0x7e });
        gbc.writeMem(0x1c46, { 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x329a, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01A0
        gbc.setState(0x206b, 0xc882, 0xb1d0, 0x8d49, 0x8699, 0xae46, 0x0, 0x1);
        gbc.writeMem(0x206b, { 0x66 });
        gbc.writeMem(0xae46, { 0x83 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc882, gbc.sp());
        EXPECT(0x206c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xae46));
        // 66 01A1
        gbc.setState(0xd13e, 0xb1f7, 0x6b20, 0x4d13, 0xec06, 0xe8a0, 0x1, 0x1);
        gbc.writeMem(0xd13e, { 0x66 });
        gbc.writeMem(0xe8a0, { 0xe7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb1f7, gbc.sp());
        EXPECT(0xd13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd13e));
        EXPECT(0xe7, gbc.readMem(0xe8a0));
        // 66 01A2
        gbc.setState(0x990d, 0x5e12, 0x93b0, 0xe4ec, 0x7abe, 0xa23f, 0x1, 0x0);
        gbc.writeMem(0x990d, { 0x66 });
        gbc.writeMem(0xa23f, { 0x26 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5e12, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x990d));
        EXPECT(0x26, gbc.readMem(0xa23f));
        // 66 01A3
        gbc.setState(0xa9c4, 0x8d5, 0x40b0, 0x5c07, 0x336c, 0x5894, 0x0, 0x1);
        gbc.writeMem(0x5894, { 0xfa });
        gbc.writeMem(0xa9c4, { 0x66 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8d5, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa9c4));
        // 66 01A4
        gbc.setState(0xad3c, 0xd65f, 0x1510, 0x81f1, 0x9b0e, 0x1688, 0x0, 0x1);
        gbc.writeMem(0x1688, { 0xff });
        gbc.writeMem(0xad3c, { 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd65f, gbc.sp());
        EXPECT(0xad3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad3c));
        // 66 01A5
        gbc.setState(0x894f, 0x950c, 0x8b70, 0xdac, 0x855c, 0xede3, 0x0, 0x0);
        gbc.writeMem(0x894f, { 0x66 });
        gbc.writeMem(0xede3, { 0x88 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x950c, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x894f));
        EXPECT(0x88, gbc.readMem(0xede3));
        // 66 01A6
        gbc.setState(0xc536, 0x3a54, 0x1f20, 0xa4f5, 0x4440, 0xf7a3, 0x1, 0x0);
        gbc.writeMem(0xc536, { 0x66 });
        gbc.writeMem(0xf7a3, { 0x9a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0xc537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc536));
        EXPECT(0x9a, gbc.readMem(0xf7a3));
        // 66 01A8
        gbc.setState(0x6adb, 0xadb, 0x9590, 0xad58, 0x73d5, 0xd7af, 0x1, 0x1);
        gbc.writeMem(0x6adb, { 0x66 });
        gbc.writeMem(0xd7af, { 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xadb, gbc.sp());
        EXPECT(0x6adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd7af));
        // 66 01A9
        gbc.setState(0xd1af, 0x3942, 0xd930, 0xb4fe, 0xaed2, 0xe446, 0x0, 0x1);
        gbc.writeMem(0xd1af, { 0x66 });
        gbc.writeMem(0xe446, { 0xd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0xd1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd1af));
        EXPECT(0xd, gbc.readMem(0xe446));
        // 66 01AA
        gbc.setState(0x17ab, 0x7c0e, 0x2440, 0x3554, 0xaea7, 0x8400, 0x1, 0x0);
        gbc.writeMem(0x17ab, { 0x66 });
        gbc.writeMem(0x8400, { 0x90 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8400));
        // 66 01AC
        gbc.setState(0xee0d, 0xb326, 0x6340, 0xb774, 0xdb65, 0x84ba, 0x1, 0x0);
        gbc.writeMem(0x84ba, { 0xf6 });
        gbc.writeMem(0xee0d, { 0x66 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb326, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x84ba));
        EXPECT(0x66, gbc.readMem(0xee0d));
        // 66 01AD
        gbc.setState(0xd81b, 0xe6ff, 0x2280, 0x5c10, 0x1d33, 0x8ee7, 0x1, 0x1);
        gbc.writeMem(0x8ee7, { 0xe1 });
        gbc.writeMem(0xd81b, { 0x66 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe6ff, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8ee7));
        EXPECT(0x66, gbc.readMem(0xd81b));
        // 66 01AE
        gbc.setState(0x9f0, 0x55bd, 0x56e0, 0xfbcd, 0x6c13, 0xac, 0x1, 0x0);
        gbc.writeMem(0xac, { 0xaf });
        gbc.writeMem(0x9f0, { 0x66 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x55bd, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01AF
        gbc.setState(0x5c49, 0x890d, 0xd310, 0x1c43, 0xebd7, 0x1f26, 0x0, 0x0);
        gbc.writeMem(0x1f26, { 0x23 });
        gbc.writeMem(0x5c49, { 0x66 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01B1
        gbc.setState(0x9405, 0x22a6, 0xa400, 0xf275, 0x721e, 0xb83c, 0x0, 0x0);
        gbc.writeMem(0x9405, { 0x66 });
        gbc.writeMem(0xb83c, { 0xdb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x22a6, gbc.sp());
        EXPECT(0x9406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9405));
        EXPECT(0xdb, gbc.readMem(0xb83c));
        // 66 01B2
        gbc.setState(0xe032, 0xc639, 0x6230, 0x7491, 0xd029, 0x386c, 0x0, 0x0);
        gbc.writeMem(0x386c, { 0x8e });
        gbc.writeMem(0xe032, { 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe032));
        // 66 01B3
        gbc.setState(0x8ddd, 0xfa74, 0x300, 0x8d58, 0xb946, 0x5098, 0x1, 0x0);
        gbc.writeMem(0x5098, { 0x6 });
        gbc.writeMem(0x8ddd, { 0x66 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfa74, gbc.sp());
        EXPECT(0x8dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8ddd));
        // 66 01B4
        gbc.setState(0x4df1, 0xf020, 0x21d0, 0x83a1, 0xd467, 0x7746, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0x66 });
        gbc.writeMem(0x7746, { 0x99 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf020, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01B5
        gbc.setState(0xb130, 0xb524, 0x4d40, 0xcac1, 0xf91, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0xb130, { 0x66 });
        gbc.writeMem(0xce6c, { 0x74 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb524, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb130));
        EXPECT(0x74, gbc.readMem(0xce6c));
        // 66 01B6
        gbc.setState(0x7d11, 0x8744, 0xed0, 0x72cd, 0xe229, 0x1ce6, 0x1, 0x0);
        gbc.writeMem(0x1ce6, { 0x43 });
        gbc.writeMem(0x7d11, { 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8744, gbc.sp());
        EXPECT(0x7d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01B7
        gbc.setState(0x6768, 0x79b, 0x10c0, 0xd18c, 0xfc70, 0x4ab5, 0x1, 0x1);
        gbc.writeMem(0x4ab5, { 0x58 });
        gbc.writeMem(0x6768, { 0x66 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0x6769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01B8
        gbc.setState(0xa2ed, 0x9990, 0x39c0, 0x54c8, 0x378f, 0x7ae, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0x2f });
        gbc.writeMem(0xa2ed, { 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9990, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa2ed));
        // 66 01B9
        gbc.setState(0x705b, 0x14ce, 0xaa40, 0xc281, 0x110, 0x2087, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0x85 });
        gbc.writeMem(0x705b, { 0x66 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x14ce, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01BA
        gbc.setState(0xc47c, 0x520f, 0x8730, 0x5c60, 0xcfbc, 0x748e, 0x0, 0x0);
        gbc.writeMem(0x748e, { 0x22 });
        gbc.writeMem(0xc47c, { 0x66 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0xc47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc47c));
        // 66 01BB
        gbc.setState(0x548c, 0x3686, 0x8370, 0x8de3, 0xaf7b, 0x625f, 0x1, 0x0);
        gbc.writeMem(0x548c, { 0x66 });
        gbc.writeMem(0x625f, { 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3686, gbc.sp());
        EXPECT(0x548d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01BC
        gbc.setState(0x8b1e, 0x9b79, 0x8ab0, 0xf2ef, 0xadb0, 0xc5f0, 0x0, 0x1);
        gbc.writeMem(0x8b1e, { 0x66 });
        gbc.writeMem(0xc5f0, { 0xa6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9b79, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8b1e));
        EXPECT(0xa6, gbc.readMem(0xc5f0));
        // 66 01BD
        gbc.setState(0x2ee0, 0xf7d6, 0xf890, 0xc3fe, 0x86a9, 0xe9a5, 0x0, 0x0);
        gbc.writeMem(0x2ee0, { 0x66 });
        gbc.writeMem(0xe9a5, { 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf7d6, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe9a5));
        // 66 01BE
        gbc.setState(0x1ca6, 0xffcf, 0xb940, 0x5cb1, 0xc9a2, 0xe5c7, 0x0, 0x0);
        gbc.writeMem(0x1ca6, { 0x66 });
        gbc.writeMem(0xe5c7, { 0xb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe5c7));
        // 66 01BF
        gbc.setState(0x99a5, 0x6c31, 0x43a0, 0xd846, 0xe4d9, 0x3f9, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0x66 });
        gbc.writeMem(0x99a5, { 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6c31, gbc.sp());
        EXPECT(0x99a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x99a5));
        // 66 01C0
        gbc.setState(0xdb79, 0x9911, 0x1f90, 0x4d0d, 0x5bc9, 0xf5bf, 0x1, 0x0);
        gbc.writeMem(0xdb79, { 0x66 });
        gbc.writeMem(0xf5bf, { 0x60 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdb79));
        EXPECT(0x60, gbc.readMem(0xf5bf));
        // 66 01C1
        gbc.setState(0x892, 0x9311, 0x59d0, 0x2f8d, 0x8059, 0xfa23, 0x0, 0x1);
        gbc.writeMem(0x892, { 0x66 });
        gbc.writeMem(0xfa23, { 0x7c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xfa23));
        // 66 01C2
        gbc.setState(0x62f9, 0x7b1f, 0xca30, 0x7b22, 0x26ab, 0xd800, 0x1, 0x0);
        gbc.writeMem(0x62f9, { 0x66 });
        gbc.writeMem(0xd800, { 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7b1f, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd800));
        // 66 01C3
        gbc.setState(0x9a62, 0xacc3, 0x4f90, 0xb09, 0x3a72, 0x7030, 0x1, 0x1);
        gbc.writeMem(0x7030, { 0x9e });
        gbc.writeMem(0x9a62, { 0x66 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xacc3, gbc.sp());
        EXPECT(0x9a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9a62));
        // 66 01C4
        gbc.setState(0x7520, 0xa40e, 0x74d0, 0xada5, 0x51a5, 0xe9fc, 0x0, 0x1);
        gbc.writeMem(0x7520, { 0x66 });
        gbc.writeMem(0xe9fc, { 0x15 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa40e, gbc.sp());
        EXPECT(0x7521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe9fc));
        // 66 01C5
        gbc.setState(0xb72e, 0x84a7, 0xca10, 0x969, 0x1a10, 0x519, 0x1, 0x0);
        gbc.writeMem(0x519, { 0x4d });
        gbc.writeMem(0xb72e, { 0x66 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x84a7, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb72e));
        // 66 01C6
        gbc.setState(0xbc9e, 0xfebd, 0xf540, 0x51c5, 0xe8e5, 0xedd, 0x0, 0x0);
        gbc.writeMem(0xedd, { 0x4f });
        gbc.writeMem(0xbc9e, { 0x66 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfebd, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbc9e));
        // 66 01C7
        gbc.setState(0x84f3, 0x87a, 0x9d80, 0x6c94, 0xc19, 0x9013, 0x1, 0x1);
        gbc.writeMem(0x84f3, { 0x66 });
        gbc.writeMem(0x9013, { 0x1f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x87a, gbc.sp());
        EXPECT(0x84f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x84f3));
        EXPECT(0x1f, gbc.readMem(0x9013));
        // 66 01C8
        gbc.setState(0x8d4e, 0x912b, 0xd760, 0x9e12, 0x861a, 0xf8a4, 0x0, 0x0);
        gbc.writeMem(0x8d4e, { 0x66 });
        gbc.writeMem(0xf8a4, { 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x8d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8d4e));
        EXPECT(0x43, gbc.readMem(0xf8a4));
        // 66 01C9
        gbc.setState(0x2c5f, 0xb067, 0x2d40, 0xebb5, 0x27d2, 0xd4a2, 0x0, 0x1);
        gbc.writeMem(0x2c5f, { 0x66 });
        gbc.writeMem(0xd4a2, { 0x78 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb067, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd4a2));
        // 66 01CA
        gbc.setState(0x98e5, 0x9899, 0x49d0, 0x5196, 0xfed7, 0x789a, 0x1, 0x1);
        gbc.writeMem(0x789a, { 0xe4 });
        gbc.writeMem(0x98e5, { 0x66 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x98e5));
        // 66 01CB
        gbc.setState(0x4b1, 0x6ede, 0x6570, 0xeaaa, 0x3d88, 0x2be2, 0x0, 0x0);
        gbc.writeMem(0x4b1, { 0x66 });
        gbc.writeMem(0x2be2, { 0xd5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ede, gbc.sp());
        EXPECT(0x4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01CC
        gbc.setState(0x53e, 0xa689, 0xd1c0, 0x33aa, 0xa805, 0x92a5, 0x1, 0x0);
        gbc.writeMem(0x53e, { 0x66 });
        gbc.writeMem(0x92a5, { 0x27 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92a5));
        // 66 01CD
        gbc.setState(0x3147, 0x93b2, 0x1840, 0x33df, 0x1076, 0x9acd, 0x1, 0x1);
        gbc.writeMem(0x3147, { 0x66 });
        gbc.writeMem(0x9acd, { 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x93b2, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9acd));
        // 66 01CE
        gbc.setState(0xa262, 0x58b8, 0xf750, 0x86da, 0x8fc8, 0xf7c0, 0x0, 0x1);
        gbc.writeMem(0xa262, { 0x66 });
        gbc.writeMem(0xf7c0, { 0x50 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x58b8, gbc.sp());
        EXPECT(0xa263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa262));
        EXPECT(0x50, gbc.readMem(0xf7c0));
        // 66 01CF
        gbc.setState(0x49b6, 0x4fc2, 0xc110, 0x612c, 0x1403, 0xd9a9, 0x0, 0x1);
        gbc.writeMem(0x49b6, { 0x66 });
        gbc.writeMem(0xd9a9, { 0x4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd9a9));
        // 66 01D0
        gbc.setState(0xe4d3, 0xc7cf, 0x360, 0xd036, 0xbe37, 0x8686, 0x1, 0x1);
        gbc.writeMem(0x8686, { 0x45 });
        gbc.writeMem(0xe4d3, { 0x66 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc7cf, gbc.sp());
        EXPECT(0xe4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8686));
        EXPECT(0x66, gbc.readMem(0xe4d3));
        // 66 01D1
        gbc.setState(0xaff8, 0x98a4, 0x43d0, 0x6cfa, 0x4b1a, 0x76f, 0x0, 0x1);
        gbc.writeMem(0x76f, { 0x73 });
        gbc.writeMem(0xaff8, { 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98a4, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaff8));
        // 66 01D2
        gbc.setState(0xaaf7, 0x16a9, 0xe980, 0x7375, 0xbc83, 0x878e, 0x0, 0x1);
        gbc.writeMem(0x878e, { 0x66 });
        gbc.writeMem(0xaaf7, { 0x66 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x16a9, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x878e));
        EXPECT(0x66, gbc.readMem(0xaaf7));
        // 66 01D3
        gbc.setState(0x2e5f, 0xd6ad, 0x95c0, 0x9f3f, 0xb3c9, 0xd71a, 0x0, 0x1);
        gbc.writeMem(0x2e5f, { 0x66 });
        gbc.writeMem(0xd71a, { 0xdd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x2e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd71a));
        // 66 01D4
        gbc.setState(0x1456, 0x56d, 0x590, 0x352a, 0x6f0b, 0x9566, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0x66 });
        gbc.writeMem(0x9566, { 0xdd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x56d, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9566));
        // 66 01D6
        gbc.setState(0x9c8, 0xacbc, 0x80e0, 0xc27d, 0x9eb4, 0x1abe, 0x1, 0x0);
        gbc.writeMem(0x9c8, { 0x66 });
        gbc.writeMem(0x1abe, { 0x20 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xacbc, gbc.sp());
        EXPECT(0x9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01D7
        gbc.setState(0x1999, 0x7af8, 0xf450, 0xfa61, 0xcf1d, 0x2210, 0x1, 0x1);
        gbc.writeMem(0x1999, { 0x66 });
        gbc.writeMem(0x2210, { 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7af8, gbc.sp());
        EXPECT(0x199a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01D8
        gbc.setState(0xe022, 0x8192, 0x77e0, 0xb27b, 0x601f, 0xffd3, 0x0, 0x0);
        gbc.writeMem(0xe022, { 0x66 });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8192, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe022));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // 66 01D9
        gbc.setState(0x85f3, 0x5ace, 0x1e30, 0x77d9, 0x8392, 0xf38d, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0x66 });
        gbc.writeMem(0xf38d, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ace, gbc.sp());
        EXPECT(0x85f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x85f3));
        EXPECT(0xc, gbc.readMem(0xf38d));
        // 66 01DA
        gbc.setState(0xb1b, 0xb7dd, 0x44c0, 0x64d9, 0xc11d, 0x6c2, 0x0, 0x0);
        gbc.writeMem(0x6c2, { 0xe7 });
        gbc.writeMem(0xb1b, { 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb7dd, gbc.sp());
        EXPECT(0xb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01DB
        gbc.setState(0x8e2c, 0xed93, 0x1a10, 0x695, 0x7f7e, 0x2ae8, 0x0, 0x0);
        gbc.writeMem(0x2ae8, { 0x66 });
        gbc.writeMem(0x8e2c, { 0x66 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x8e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8e2c));
        // 66 01DC
        gbc.setState(0x7b01, 0x5ece, 0xd2b0, 0xb3e7, 0xf935, 0xf1f1, 0x0, 0x1);
        gbc.writeMem(0x7b01, { 0x66 });
        gbc.writeMem(0xf1f1, { 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5ece, gbc.sp());
        EXPECT(0x7b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf1f1));
        // 66 01DD
        gbc.setState(0x2453, 0x1d13, 0x9b00, 0xbfa0, 0x89f6, 0x5c9d, 0x1, 0x1);
        gbc.writeMem(0x2453, { 0x66 });
        gbc.writeMem(0x5c9d, { 0xfa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x2454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01DE
        gbc.setState(0xe322, 0xacfb, 0x2e10, 0xcf04, 0xdce3, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x1ee5, { 0xd });
        gbc.writeMem(0xe322, { 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe322));
        // 66 01DF
        gbc.setState(0x8756, 0xed06, 0x2e30, 0x6e6b, 0xab71, 0xaa60, 0x1, 0x1);
        gbc.writeMem(0x8756, { 0x66 });
        gbc.writeMem(0xaa60, { 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xed06, gbc.sp());
        EXPECT(0x8757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8756));
        EXPECT(0x1, gbc.readMem(0xaa60));
        // 66 01E0
        gbc.setState(0x3262, 0x5917, 0x61d0, 0xdc7e, 0xe33c, 0x2605, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0x71 });
        gbc.writeMem(0x3262, { 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5917, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01E1
        gbc.setState(0x5731, 0x8a03, 0x9cb0, 0xfeb1, 0x9f, 0x6c72, 0x0, 0x0);
        gbc.writeMem(0x5731, { 0x66 });
        gbc.writeMem(0x6c72, { 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x5732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01E2
        gbc.setState(0x6e92, 0xb228, 0xaa80, 0xfaf1, 0x4838, 0xbb14, 0x0, 0x0);
        gbc.writeMem(0x6e92, { 0x66 });
        gbc.writeMem(0xbb14, { 0x11 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb228, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb14));
        // 66 01E3
        gbc.setState(0x48a7, 0xdda6, 0x8be0, 0x2944, 0x7b9b, 0xb0c8, 0x1, 0x1);
        gbc.writeMem(0x48a7, { 0x66 });
        gbc.writeMem(0xb0c8, { 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb0c8));
        // 66 01E4
        gbc.setState(0x3fc2, 0xa0f1, 0xe6e0, 0xaaf8, 0x7aa7, 0x34dc, 0x0, 0x1);
        gbc.writeMem(0x34dc, { 0xe1 });
        gbc.writeMem(0x3fc2, { 0x66 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x3fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01E6
        gbc.setState(0x9252, 0x9831, 0x3170, 0x44e, 0x9b9, 0xcdba, 0x0, 0x0);
        gbc.writeMem(0x9252, { 0x66 });
        gbc.writeMem(0xcdba, { 0xfe });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9831, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9252));
        EXPECT(0xfe, gbc.readMem(0xcdba));
        // 66 01E8
        gbc.setState(0x7ac0, 0xb06e, 0x21f0, 0x8ebe, 0x493e, 0x615a, 0x0, 0x1);
        gbc.writeMem(0x615a, { 0x37 });
        gbc.writeMem(0x7ac0, { 0x66 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb06e, gbc.sp());
        EXPECT(0x7ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01E9
        gbc.setState(0xb62c, 0x2e4b, 0xc420, 0x2159, 0xe14e, 0xd035, 0x1, 0x0);
        gbc.writeMem(0xb62c, { 0x66 });
        gbc.writeMem(0xd035, { 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0xb62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb62c));
        EXPECT(0x85, gbc.readMem(0xd035));
        // 66 01EA
        gbc.setState(0x2c46, 0xdf0d, 0x1530, 0xc655, 0x1aaa, 0xf980, 0x0, 0x0);
        gbc.writeMem(0x2c46, { 0x66 });
        gbc.writeMem(0xf980, { 0xae });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0x2c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xf980));
        // 66 01EB
        gbc.setState(0xe027, 0x5d5c, 0xcd40, 0x7860, 0x8295, 0x861e, 0x1, 0x1);
        gbc.writeMem(0x861e, { 0x18 });
        gbc.writeMem(0xe027, { 0x66 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x861e));
        EXPECT(0x66, gbc.readMem(0xe027));
        // 66 01EC
        gbc.setState(0x7c7b, 0x48fa, 0xecc0, 0xf05c, 0x3ab0, 0x1b29, 0x0, 0x1);
        gbc.writeMem(0x1b29, { 0xea });
        gbc.writeMem(0x7c7b, { 0x66 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0x7c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 01ED
        gbc.setState(0x203b, 0xb668, 0xc080, 0xe613, 0x4b1b, 0x8dfd, 0x1, 0x0);
        gbc.writeMem(0x203b, { 0x66 });
        gbc.writeMem(0x8dfd, { 0xe4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb668, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8dfd));
        // 66 01EE
        gbc.setState(0x2ba1, 0xafbb, 0x3390, 0xb0e, 0xeba, 0xe650, 0x1, 0x0);
        gbc.writeMem(0x2ba1, { 0x66 });
        gbc.writeMem(0xe650, { 0x2b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xafbb, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe650));
        // 66 01EF
        gbc.setState(0x193f, 0x1f63, 0x77e0, 0xb41d, 0x4478, 0x9887, 0x1, 0x1);
        gbc.writeMem(0x193f, { 0x66 });
        gbc.writeMem(0x9887, { 0x4d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1f63, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9887));
        // 66 01F0
        gbc.setState(0xb257, 0xdabb, 0x4f90, 0x366f, 0xfdd0, 0xfa3f, 0x1, 0x1);
        gbc.writeMem(0xb257, { 0x66 });
        gbc.writeMem(0xfa3f, { 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdabb, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb257));
        EXPECT(0xad, gbc.readMem(0xfa3f));
        // 66 01F1
        gbc.setState(0x3e00, 0x3148, 0x9ff0, 0x6030, 0x1b54, 0x7cb0, 0x0, 0x1);
        gbc.writeMem(0x3e00, { 0x66 });
        gbc.writeMem(0x7cb0, { 0xd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3148, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 01F2
        gbc.setState(0x3212, 0x5375, 0x5b30, 0xd311, 0xffcf, 0x86e6, 0x1, 0x1);
        gbc.writeMem(0x3212, { 0x66 });
        gbc.writeMem(0x86e6, { 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5375, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x86e6));
        // 66 01F3
        gbc.setState(0xbd27, 0xd4c, 0xdff0, 0xd59f, 0x3760, 0x177, 0x0, 0x0);
        gbc.writeMem(0x177, { 0x12 });
        gbc.writeMem(0xbd27, { 0x66 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0xbd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbd27));
        // 66 01F4
        gbc.setState(0x8078, 0x129c, 0xf410, 0x7144, 0x37ab, 0x201e, 0x0, 0x0);
        gbc.writeMem(0x201e, { 0xaf });
        gbc.writeMem(0x8078, { 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x129c, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8078));
        // 66 01F5
        gbc.setState(0x5ed9, 0x4e72, 0x660, 0xc559, 0x6e29, 0xb7b1, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0x66 });
        gbc.writeMem(0xb7b1, { 0xde });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb7b1));
        // 66 01F6
        gbc.setState(0xb699, 0xcc94, 0x59e0, 0x1c01, 0xe519, 0x3f4b, 0x1, 0x0);
        gbc.writeMem(0x3f4b, { 0x7 });
        gbc.writeMem(0xb699, { 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0xb69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb699));
        // 66 01F7
        gbc.setState(0xbd94, 0xa53c, 0x94b0, 0x40f3, 0xb30b, 0x9fa9, 0x0, 0x0);
        gbc.writeMem(0x9fa9, { 0xc });
        gbc.writeMem(0xbd94, { 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa53c, gbc.sp());
        EXPECT(0xbd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9fa9));
        EXPECT(0x66, gbc.readMem(0xbd94));
        // 66 01F8
        gbc.setState(0x69a6, 0xf95d, 0xd120, 0x3f56, 0x5f89, 0xcc7a, 0x1, 0x0);
        gbc.writeMem(0x69a6, { 0x66 });
        gbc.writeMem(0xcc7a, { 0xcc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf95d, gbc.sp());
        EXPECT(0x69a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xcc7a));
        // 66 01F9
        gbc.setState(0xcaf, 0x3b9, 0x17f0, 0x5db0, 0xbc34, 0xd95f, 0x1, 0x0);
        gbc.writeMem(0xcaf, { 0x66 });
        gbc.writeMem(0xd95f, { 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3b9, gbc.sp());
        EXPECT(0xcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd95f));
        // 66 01FA
        gbc.setState(0x851e, 0x6c7f, 0xcd80, 0xab46, 0x7560, 0x4b3e, 0x1, 0x0);
        gbc.writeMem(0x4b3e, { 0x7a });
        gbc.writeMem(0x851e, { 0x66 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c7f, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x851e));
        // 66 01FB
        gbc.setState(0x83c6, 0xb021, 0x53a0, 0x4bbf, 0x1db5, 0x65c7, 0x0, 0x1);
        gbc.writeMem(0x65c7, { 0x55 });
        gbc.writeMem(0x83c6, { 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x83c6));
        // 66 01FC
        gbc.setState(0xba90, 0x648e, 0x7750, 0x2446, 0xec78, 0xd9a6, 0x0, 0x1);
        gbc.writeMem(0xba90, { 0x66 });
        gbc.writeMem(0xd9a6, { 0x67 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x648e, gbc.sp());
        EXPECT(0xba91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xba90));
        EXPECT(0x67, gbc.readMem(0xd9a6));
        // 66 01FD
        gbc.setState(0xdce, 0x28f1, 0x39f0, 0x257f, 0x85b1, 0xe15a, 0x0, 0x1);
        gbc.writeMem(0xdce, { 0x66 });
        gbc.writeMem(0xe15a, { 0xd6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28f1, gbc.sp());
        EXPECT(0xdcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe15a));
        // 66 01FE
        gbc.setState(0xc6a6, 0xd7b0, 0x2ec0, 0xdb75, 0x2a16, 0xb8f2, 0x0, 0x1);
        gbc.writeMem(0xb8f2, { 0x4d });
        gbc.writeMem(0xc6a6, { 0x66 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd7b0, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb8f2));
        EXPECT(0x66, gbc.readMem(0xc6a6));
        // 66 01FF
        gbc.setState(0x56bf, 0xc481, 0x6eb0, 0x54a0, 0x3da7, 0xafa1, 0x1, 0x1);
        gbc.writeMem(0x56bf, { 0x66 });
        gbc.writeMem(0xafa1, { 0xcf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x56c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xafa1));
        // 66 0200
        gbc.setState(0x6a9, 0x3f3e, 0xa250, 0xe4ef, 0x9d2, 0x6ce4, 0x1, 0x0);
        gbc.writeMem(0x6a9, { 0x66 });
        gbc.writeMem(0x6ce4, { 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3f3e, gbc.sp());
        EXPECT(0x6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0201
        gbc.setState(0x19ed, 0x509f, 0xf9b0, 0xe2ae, 0x5580, 0x3530, 0x1, 0x0);
        gbc.writeMem(0x19ed, { 0x66 });
        gbc.writeMem(0x3530, { 0x44 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x509f, gbc.sp());
        EXPECT(0x19ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0203
        gbc.setState(0x598b, 0xab76, 0x6a00, 0x47ad, 0x7487, 0x58ec, 0x1, 0x0);
        gbc.writeMem(0x58ec, { 0x10 });
        gbc.writeMem(0x598b, { 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xab76, gbc.sp());
        EXPECT(0x598c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0204
        gbc.setState(0x6399, 0xf41a, 0x8ab0, 0x8d62, 0x2211, 0x3674, 0x1, 0x0);
        gbc.writeMem(0x3674, { 0xfe });
        gbc.writeMem(0x6399, { 0x66 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x639a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0205
        gbc.setState(0x2944, 0xf76c, 0x1570, 0x5b99, 0x6428, 0xcc45, 0x1, 0x1);
        gbc.writeMem(0x2944, { 0x66 });
        gbc.writeMem(0xcc45, { 0xa6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf76c, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcc45));
        // 66 0207
        gbc.setState(0xda0c, 0x263d, 0xbf80, 0x27c1, 0x85b2, 0xff30, 0x1, 0x1);
        gbc.writeMem(0xda0c, { 0x66 });
        gbc.writeMem(0xff30, { 0xab });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x263d, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xda0c));
        EXPECT(0xab, gbc.readMem(0xff30));
        // 66 0209
        gbc.setState(0xef83, 0x6088, 0xe1f0, 0x2a5, 0x2c5e, 0x62fc, 0x0, 0x1);
        gbc.writeMem(0x62fc, { 0x73 });
        gbc.writeMem(0xef83, { 0x66 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6088, gbc.sp());
        EXPECT(0xef84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xef83));
        // 66 020A
        gbc.setState(0x16f7, 0x807e, 0xd500, 0xc12f, 0x6fd2, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0x16f7, { 0x66 });
        gbc.writeMem(0x57a3, { 0x8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x807e, gbc.sp());
        EXPECT(0x16f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 020B
        gbc.setState(0x8729, 0xb5ae, 0xd0b0, 0xd012, 0xb16f, 0x14d2, 0x1, 0x0);
        gbc.writeMem(0x14d2, { 0x35 });
        gbc.writeMem(0x8729, { 0x66 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8729));
        // 66 020C
        gbc.setState(0x43a7, 0x7260, 0x2da0, 0x9d86, 0xb7e1, 0xfd8, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0x4 });
        gbc.writeMem(0x43a7, { 0x66 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 020D
        gbc.setState(0x5e21, 0x2464, 0xc10, 0xb4c9, 0xdd43, 0x971d, 0x1, 0x1);
        gbc.writeMem(0x5e21, { 0x66 });
        gbc.writeMem(0x971d, { 0x12 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x5e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x971d));
        // 66 020E
        gbc.setState(0x720b, 0x23ff, 0xfc20, 0xeacb, 0x1783, 0x722, 0x0, 0x0);
        gbc.writeMem(0x722, { 0xb0 });
        gbc.writeMem(0x720b, { 0x66 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 020F
        gbc.setState(0xa087, 0x4b05, 0xcfe0, 0x266f, 0x8bbd, 0xdd20, 0x1, 0x1);
        gbc.writeMem(0xa087, { 0x66 });
        gbc.writeMem(0xdd20, { 0x87 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4b05, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa087));
        EXPECT(0x87, gbc.readMem(0xdd20));
        // 66 0210
        gbc.setState(0x9c98, 0x7f07, 0x10b0, 0xe901, 0xaba1, 0xa016, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0x66 });
        gbc.writeMem(0xa016, { 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9c98));
        EXPECT(0x13, gbc.readMem(0xa016));
        // 66 0211
        gbc.setState(0x786b, 0x5aa3, 0x2d30, 0xdb5e, 0x1da6, 0x881c, 0x1, 0x1);
        gbc.writeMem(0x786b, { 0x66 });
        gbc.writeMem(0x881c, { 0xb2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x786c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x881c));
        // 66 0212
        gbc.setState(0xea26, 0xf5e6, 0xadd0, 0xb761, 0x2fab, 0xa653, 0x1, 0x1);
        gbc.writeMem(0xa653, { 0x28 });
        gbc.writeMem(0xea26, { 0x66 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0xea27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa653));
        EXPECT(0x66, gbc.readMem(0xea26));
        // 66 0213
        gbc.setState(0x628c, 0x729a, 0x2000, 0x93a1, 0x41ce, 0x8762, 0x0, 0x1);
        gbc.writeMem(0x628c, { 0x66 });
        gbc.writeMem(0x8762, { 0x4c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8762));
        // 66 0214
        gbc.setState(0xe671, 0x8772, 0xf980, 0xf57d, 0x88df, 0xf23f, 0x0, 0x1);
        gbc.writeMem(0xe671, { 0x66 });
        gbc.writeMem(0xf23f, { 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8772, gbc.sp());
        EXPECT(0xe672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe671));
        EXPECT(0x37, gbc.readMem(0xf23f));
        // 66 0215
        gbc.setState(0xacd, 0x67ed, 0x8d50, 0x653e, 0x5238, 0x6432, 0x1, 0x0);
        gbc.writeMem(0xacd, { 0x66 });
        gbc.writeMem(0x6432, { 0x5a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0xace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0216
        gbc.setState(0x989, 0xdd1d, 0xc160, 0x6de7, 0xa02d, 0x5b43, 0x0, 0x0);
        gbc.writeMem(0x989, { 0x66 });
        gbc.writeMem(0x5b43, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdd1d, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0217
        gbc.setState(0x184f, 0xfcd6, 0xf0d0, 0x121b, 0x8b1a, 0xd687, 0x0, 0x1);
        gbc.writeMem(0x184f, { 0x66 });
        gbc.writeMem(0xd687, { 0x14 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfcd6, gbc.sp());
        EXPECT(0x1850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd687));
        // 66 0218
        gbc.setState(0x2b45, 0xa22a, 0x6fc0, 0x412d, 0xcd20, 0x82db, 0x1, 0x0);
        gbc.writeMem(0x2b45, { 0x66 });
        gbc.writeMem(0x82db, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa22a, gbc.sp());
        EXPECT(0x2b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x82db));
        // 66 0219
        gbc.setState(0x8281, 0x50a6, 0x7080, 0xba2, 0x19c0, 0x2597, 0x1, 0x1);
        gbc.writeMem(0x2597, { 0xd4 });
        gbc.writeMem(0x8281, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x8282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8281));
        // 66 021A
        gbc.setState(0x3fd4, 0xe6e3, 0x8bc0, 0xc006, 0x764e, 0xf6a6, 0x1, 0x1);
        gbc.writeMem(0x3fd4, { 0x66 });
        gbc.writeMem(0xf6a6, { 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0x3fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xf6a6));
        // 66 021B
        gbc.setState(0x8784, 0x7ed5, 0x1080, 0x8019, 0x4979, 0x8843, 0x1, 0x0);
        gbc.writeMem(0x8784, { 0x66 });
        gbc.writeMem(0x8843, { 0xfc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8784));
        EXPECT(0xfc, gbc.readMem(0x8843));
        // 66 021C
        gbc.setState(0x9f49, 0xda42, 0x82c0, 0xc2dd, 0x7720, 0xa356, 0x1, 0x1);
        gbc.writeMem(0x9f49, { 0x66 });
        gbc.writeMem(0xa356, { 0x8e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xda42, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9f49));
        EXPECT(0x8e, gbc.readMem(0xa356));
        // 66 021D
        gbc.setState(0xc17, 0xb294, 0x1bb0, 0x1cf3, 0xb965, 0x10f, 0x1, 0x1);
        gbc.writeMem(0x10f, { 0xe8 });
        gbc.writeMem(0xc17, { 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb294, gbc.sp());
        EXPECT(0xc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 021E
        gbc.setState(0xc273, 0xbf7a, 0xe4f0, 0x5883, 0xbb39, 0xb190, 0x0, 0x0);
        gbc.writeMem(0xb190, { 0xc3 });
        gbc.writeMem(0xc273, { 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbf7a, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb190));
        EXPECT(0x66, gbc.readMem(0xc273));
        // 66 021F
        gbc.setState(0x54c8, 0x2c3d, 0xeb20, 0xa241, 0xa819, 0xee56, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0x66 });
        gbc.writeMem(0xee56, { 0x27 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2c3d, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xee56));
        // 66 0220
        gbc.setState(0x5fdb, 0x30bb, 0x3340, 0xbe3b, 0xaca1, 0x96c, 0x0, 0x0);
        gbc.writeMem(0x96c, { 0xb5 });
        gbc.writeMem(0x5fdb, { 0x66 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x30bb, gbc.sp());
        EXPECT(0x5fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0221
        gbc.setState(0x949e, 0xfc80, 0xd700, 0x7b7c, 0x87a1, 0x89eb, 0x1, 0x1);
        gbc.writeMem(0x89eb, { 0x43 });
        gbc.writeMem(0x949e, { 0x66 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc80, gbc.sp());
        EXPECT(0x949f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x89eb));
        EXPECT(0x66, gbc.readMem(0x949e));
        // 66 0222
        gbc.setState(0xd3f8, 0x75bb, 0x2aa0, 0xcd73, 0x51e9, 0x76e3, 0x1, 0x1);
        gbc.writeMem(0x76e3, { 0x42 });
        gbc.writeMem(0xd3f8, { 0x66 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x75bb, gbc.sp());
        EXPECT(0xd3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd3f8));
        // 66 0223
        gbc.setState(0xd9f3, 0xb102, 0x30c0, 0x6381, 0xae38, 0xa581, 0x1, 0x1);
        gbc.writeMem(0xa581, { 0xa7 });
        gbc.writeMem(0xd9f3, { 0x66 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb102, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa581));
        EXPECT(0x66, gbc.readMem(0xd9f3));
        // 66 0224
        gbc.setState(0x31a6, 0x7129, 0x3b00, 0xec4d, 0x1a03, 0x55ba, 0x0, 0x1);
        gbc.writeMem(0x31a6, { 0x66 });
        gbc.writeMem(0x55ba, { 0xfe });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7129, gbc.sp());
        EXPECT(0x31a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0225
        gbc.setState(0x7a1b, 0x7c15, 0xedc0, 0x645f, 0xa95c, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0x4e59, { 0xb0 });
        gbc.writeMem(0x7a1b, { 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0x7a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0226
        gbc.setState(0x9ba4, 0xa96d, 0x4520, 0xc510, 0xa891, 0xe15f, 0x0, 0x0);
        gbc.writeMem(0x9ba4, { 0x66 });
        gbc.writeMem(0xe15f, { 0x66 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ba4));
        EXPECT(0x66, gbc.readMem(0xe15f));
        // 66 0227
        gbc.setState(0x8647, 0x33f6, 0x9380, 0x1f7a, 0xed53, 0xf476, 0x0, 0x0);
        gbc.writeMem(0x8647, { 0x66 });
        gbc.writeMem(0xf476, { 0x6c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0x8648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8647));
        EXPECT(0x6c, gbc.readMem(0xf476));
        // 66 0228
        gbc.setState(0x7e8d, 0x4dce, 0x5f20, 0x9fa8, 0xb994, 0xb856, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0x66 });
        gbc.writeMem(0xb856, { 0x50 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4dce, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb856));
        // 66 0229
        gbc.setState(0x6854, 0xc9ac, 0x16d0, 0x6a69, 0x544f, 0xd303, 0x1, 0x0);
        gbc.writeMem(0x6854, { 0x66 });
        gbc.writeMem(0xd303, { 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0x6855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd303));
        // 66 022A
        gbc.setState(0x6d43, 0x9691, 0x6190, 0x8c3c, 0x63c7, 0x28a3, 0x0, 0x1);
        gbc.writeMem(0x28a3, { 0x19 });
        gbc.writeMem(0x6d43, { 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9691, gbc.sp());
        EXPECT(0x6d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 022B
        gbc.setState(0x8371, 0xfda7, 0x24d0, 0xf154, 0x29cd, 0x99fe, 0x1, 0x1);
        gbc.writeMem(0x8371, { 0x66 });
        gbc.writeMem(0x99fe, { 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfda7, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8371));
        EXPECT(0x38, gbc.readMem(0x99fe));
        // 66 022C
        gbc.setState(0xb329, 0x5bcf, 0x8f30, 0x2c30, 0x6ba0, 0x32bf, 0x1, 0x1);
        gbc.writeMem(0x32bf, { 0xea });
        gbc.writeMem(0xb329, { 0x66 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xb32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb329));
        // 66 022D
        gbc.setState(0x5929, 0xed8e, 0xafa0, 0x9e1e, 0x34d2, 0x2624, 0x1, 0x0);
        gbc.writeMem(0x2624, { 0x86 });
        gbc.writeMem(0x5929, { 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 022F
        gbc.setState(0x5206, 0xc3f1, 0x8290, 0xf742, 0x3647, 0x8b2a, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0x66 });
        gbc.writeMem(0x8b2a, { 0x4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc3f1, gbc.sp());
        EXPECT(0x5207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8b2a));
        // 66 0230
        gbc.setState(0x383b, 0xec6, 0x3800, 0x78d6, 0xf5a8, 0xc3e8, 0x0, 0x1);
        gbc.writeMem(0x383b, { 0x66 });
        gbc.writeMem(0xc3e8, { 0x8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xec6, gbc.sp());
        EXPECT(0x383c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc3e8));
        // 66 0231
        gbc.setState(0x911a, 0x8e24, 0xab00, 0x1fbd, 0x16f7, 0x521e, 0x1, 0x0);
        gbc.writeMem(0x521e, { 0x66 });
        gbc.writeMem(0x911a, { 0x66 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8e24, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x911a));
        // 66 0232
        gbc.setState(0x69a0, 0xe847, 0x2ba0, 0xba0b, 0x2fe3, 0x63ed, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0x48 });
        gbc.writeMem(0x69a0, { 0x66 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe847, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0234
        gbc.setState(0x4048, 0xc2a9, 0x84e0, 0x1349, 0x307c, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x4048, { 0x66 });
        gbc.writeMem(0xd695, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd695));
        // 66 0235
        gbc.setState(0x8ea5, 0xaf6f, 0x11a0, 0xb7af, 0x2734, 0x4113, 0x1, 0x1);
        gbc.writeMem(0x4113, { 0xbd });
        gbc.writeMem(0x8ea5, { 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0x8ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8ea5));
        // 66 0236
        gbc.setState(0x1d80, 0x7bec, 0x130, 0x7c42, 0x36f6, 0x91aa, 0x0, 0x0);
        gbc.writeMem(0x1d80, { 0x66 });
        gbc.writeMem(0x91aa, { 0x46 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x91aa));
        // 66 0238
        gbc.setState(0xa6af, 0x1083, 0xef0, 0xe267, 0x1814, 0xc41a, 0x0, 0x0);
        gbc.writeMem(0xa6af, { 0x66 });
        gbc.writeMem(0xc41a, { 0x2a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1083, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa6af));
        EXPECT(0x2a, gbc.readMem(0xc41a));
        // 66 0239
        gbc.setState(0x4e62, 0xc662, 0x6b20, 0x8c5d, 0x1e8d, 0x8559, 0x0, 0x0);
        gbc.writeMem(0x4e62, { 0x66 });
        gbc.writeMem(0x8559, { 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc662, gbc.sp());
        EXPECT(0x4e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8559));
        // 66 023A
        gbc.setState(0x41d2, 0xd613, 0xfdb0, 0xb7ff, 0x6f36, 0x7ea8, 0x0, 0x1);
        gbc.writeMem(0x41d2, { 0x66 });
        gbc.writeMem(0x7ea8, { 0x96 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd613, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 023B
        gbc.setState(0x6ae0, 0xb7de, 0xf460, 0x6d3e, 0x3ae, 0xbb2b, 0x1, 0x1);
        gbc.writeMem(0x6ae0, { 0x66 });
        gbc.writeMem(0xbb2b, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb7de, gbc.sp());
        EXPECT(0x6ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbb2b));
        // 66 023C
        gbc.setState(0x9feb, 0xe4ab, 0x1b0, 0xdd18, 0xb412, 0x4540, 0x0, 0x0);
        gbc.writeMem(0x4540, { 0x57 });
        gbc.writeMem(0x9feb, { 0x66 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe4ab, gbc.sp());
        EXPECT(0x9fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9feb));
        // 66 023D
        gbc.setState(0x18b1, 0xa637, 0x1880, 0x6f56, 0x9bad, 0x5fad, 0x0, 0x0);
        gbc.writeMem(0x18b1, { 0x66 });
        gbc.writeMem(0x5fad, { 0x22 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa637, gbc.sp());
        EXPECT(0x18b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 023E
        gbc.setState(0xddc2, 0xa3c7, 0x3950, 0x9343, 0x64f7, 0xcfb, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0xbb });
        gbc.writeMem(0xddc2, { 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xddc2));
        // 66 023F
        gbc.setState(0x23c3, 0xf93d, 0x44c0, 0xca7d, 0x560e, 0xfaaa, 0x0, 0x0);
        gbc.writeMem(0x23c3, { 0x66 });
        gbc.writeMem(0xfaaa, { 0x68 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf93d, gbc.sp());
        EXPECT(0x23c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xfaaa));
        // 66 0240
        gbc.setState(0x89d7, 0x7a8e, 0xf060, 0xed6f, 0x117, 0x489, 0x1, 0x0);
        gbc.writeMem(0x489, { 0xe0 });
        gbc.writeMem(0x89d7, { 0x66 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7a8e, gbc.sp());
        EXPECT(0x89d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x89d7));
        // 66 0241
        gbc.setState(0x7a85, 0x12b9, 0xc780, 0x6ecd, 0x312f, 0x4485, 0x1, 0x0);
        gbc.writeMem(0x4485, { 0x85 });
        gbc.writeMem(0x7a85, { 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x12b9, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0242
        gbc.setState(0xb565, 0x89ce, 0xda10, 0x8a9f, 0xca47, 0x10e0, 0x0, 0x1);
        gbc.writeMem(0x10e0, { 0xe3 });
        gbc.writeMem(0xb565, { 0x66 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0xb566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb565));
        // 66 0243
        gbc.setState(0x87e, 0x7208, 0x1b70, 0x7528, 0x8385, 0xe372, 0x0, 0x0);
        gbc.writeMem(0x87e, { 0x66 });
        gbc.writeMem(0xe372, { 0xb4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0x87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xe372));
        // 66 0244
        gbc.setState(0xd28d, 0x3923, 0x8540, 0xc4da, 0xd623, 0x795, 0x1, 0x1);
        gbc.writeMem(0x795, { 0xb1 });
        gbc.writeMem(0xd28d, { 0x66 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3923, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd28d));
        // 66 0245
        gbc.setState(0xc297, 0xd21c, 0x2920, 0x963f, 0x4bd7, 0x6f92, 0x1, 0x1);
        gbc.writeMem(0x6f92, { 0x90 });
        gbc.writeMem(0xc297, { 0x66 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd21c, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc297));
        // 66 0246
        gbc.setState(0x7578, 0xd931, 0x5880, 0x2661, 0x54c7, 0x78de, 0x1, 0x0);
        gbc.writeMem(0x7578, { 0x66 });
        gbc.writeMem(0x78de, { 0x20 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd931, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0247
        gbc.setState(0xd81a, 0x18eb, 0x5350, 0x1dd0, 0x1a7c, 0xc5f6, 0x0, 0x0);
        gbc.writeMem(0xc5f6, { 0x91 });
        gbc.writeMem(0xd81a, { 0x66 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xc5f6));
        EXPECT(0x66, gbc.readMem(0xd81a));
        // 66 0248
        gbc.setState(0xecb1, 0xfb86, 0x71a0, 0xf922, 0x9b58, 0x8176, 0x0, 0x0);
        gbc.writeMem(0x8176, { 0xd4 });
        gbc.writeMem(0xecb1, { 0x66 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfb86, gbc.sp());
        EXPECT(0xecb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8176));
        EXPECT(0x66, gbc.readMem(0xecb1));
        // 66 0249
        gbc.setState(0x664e, 0x3dcb, 0x75e0, 0xe2b6, 0xb306, 0x3a7d, 0x0, 0x0);
        gbc.writeMem(0x3a7d, { 0x30 });
        gbc.writeMem(0x664e, { 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3dcb, gbc.sp());
        EXPECT(0x664f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 024A
        gbc.setState(0xed7d, 0xcacd, 0x5d10, 0xe7da, 0xf965, 0xc58b, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0x44 });
        gbc.writeMem(0xed7d, { 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc58b));
        EXPECT(0x66, gbc.readMem(0xed7d));
        // 66 024B
        gbc.setState(0x498, 0x41ab, 0x54d0, 0x5532, 0xaf05, 0xd097, 0x1, 0x0);
        gbc.writeMem(0x498, { 0x66 });
        gbc.writeMem(0xd097, { 0xd2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd097));
        // 66 024D
        gbc.setState(0xaa15, 0xa6e3, 0x9470, 0x5ea, 0xeaf7, 0x344d, 0x1, 0x1);
        gbc.writeMem(0x344d, { 0xfa });
        gbc.writeMem(0xaa15, { 0x66 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaa15));
        // 66 024E
        gbc.setState(0xaf5d, 0xe363, 0x7950, 0xb0ce, 0x27b9, 0x6335, 0x1, 0x0);
        gbc.writeMem(0x6335, { 0xe8 });
        gbc.writeMem(0xaf5d, { 0x66 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0xaf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaf5d));
        // 66 024F
        gbc.setState(0x4780, 0x52f6, 0xd710, 0xe938, 0x13b5, 0xb5ca, 0x0, 0x1);
        gbc.writeMem(0x4780, { 0x66 });
        gbc.writeMem(0xb5ca, { 0x83 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x52f6, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xb5ca));
        // 66 0250
        gbc.setState(0x2110, 0x59a2, 0xbdd0, 0x7a09, 0x3f6e, 0x21e6, 0x1, 0x1);
        gbc.writeMem(0x2110, { 0x66 });
        gbc.writeMem(0x21e6, { 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0251
        gbc.setState(0x63c1, 0x43be, 0xc4b0, 0xd280, 0xb32e, 0xda10, 0x1, 0x1);
        gbc.writeMem(0x63c1, { 0x66 });
        gbc.writeMem(0xda10, { 0x8b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xda10));
        // 66 0252
        gbc.setState(0xa94d, 0xf584, 0xed70, 0xa64b, 0x234a, 0xa9f8, 0x1, 0x1);
        gbc.writeMem(0xa94d, { 0x66 });
        gbc.writeMem(0xa9f8, { 0x18 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf584, gbc.sp());
        EXPECT(0xa94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa94d));
        EXPECT(0x18, gbc.readMem(0xa9f8));
        // 66 0253
        gbc.setState(0x62ae, 0xafaf, 0x27c0, 0x72b3, 0x71e, 0x133e, 0x1, 0x1);
        gbc.writeMem(0x133e, { 0x7b });
        gbc.writeMem(0x62ae, { 0x66 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x62af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0254
        gbc.setState(0x861a, 0xc51d, 0x6680, 0x2370, 0xffa, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0xb5d, { 0xf8 });
        gbc.writeMem(0x861a, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0x861b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x861a));
        // 66 0255
        gbc.setState(0xe6f8, 0x1b6c, 0x43b0, 0x18c3, 0x9981, 0x67f, 0x0, 0x1);
        gbc.writeMem(0x67f, { 0x8e });
        gbc.writeMem(0xe6f8, { 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0xe6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe6f8));
        // 66 0257
        gbc.setState(0x5ca5, 0xdb46, 0xf860, 0x2df, 0xd62e, 0xba2, 0x1, 0x0);
        gbc.writeMem(0xba2, { 0x2 });
        gbc.writeMem(0x5ca5, { 0x66 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdb46, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0258
        gbc.setState(0x9ad0, 0x7d5d, 0x4050, 0xaf9d, 0x12a8, 0xd1e5, 0x1, 0x0);
        gbc.writeMem(0x9ad0, { 0x66 });
        gbc.writeMem(0xd1e5, { 0x85 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x9ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ad0));
        EXPECT(0x85, gbc.readMem(0xd1e5));
        // 66 0259
        gbc.setState(0x9cc0, 0x75b6, 0x4bf0, 0x8516, 0x6aed, 0x8c6a, 0x0, 0x0);
        gbc.writeMem(0x8c6a, { 0x87 });
        gbc.writeMem(0x9cc0, { 0x66 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8c6a));
        EXPECT(0x66, gbc.readMem(0x9cc0));
        // 66 025A
        gbc.setState(0x4f55, 0x37ed, 0x6680, 0xff86, 0xc76c, 0x1cdf, 0x1, 0x0);
        gbc.writeMem(0x1cdf, { 0x29 });
        gbc.writeMem(0x4f55, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x37ed, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 025B
        gbc.setState(0xbf74, 0xa1d3, 0x7e60, 0xf03c, 0xdf78, 0x8b8a, 0x1, 0x1);
        gbc.writeMem(0x8b8a, { 0x3 });
        gbc.writeMem(0xbf74, { 0x66 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa1d3, gbc.sp());
        EXPECT(0xbf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8b8a));
        EXPECT(0x66, gbc.readMem(0xbf74));
        // 66 025C
        gbc.setState(0x9f1a, 0x4c87, 0x9ee0, 0x30de, 0x711b, 0x159, 0x0, 0x1);
        gbc.writeMem(0x159, { 0x61 });
        gbc.writeMem(0x9f1a, { 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9f1a));
        // 66 025D
        gbc.setState(0xd0ec, 0x67f9, 0x40a0, 0x1916, 0x3383, 0xd352, 0x1, 0x1);
        gbc.writeMem(0xd0ec, { 0x66 });
        gbc.writeMem(0xd352, { 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x67f9, gbc.sp());
        EXPECT(0xd0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd0ec));
        EXPECT(0xd5, gbc.readMem(0xd352));
        // 66 025E
        gbc.setState(0xda36, 0x2722, 0xf570, 0x6dc3, 0xaeaa, 0x574e, 0x1, 0x1);
        gbc.writeMem(0x574e, { 0x77 });
        gbc.writeMem(0xda36, { 0x66 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xda36));
        // 66 025F
        gbc.setState(0x246f, 0xa753, 0x6a80, 0x38d9, 0xabbc, 0x7628, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0x66 });
        gbc.writeMem(0x7628, { 0xd4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa753, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0260
        gbc.setState(0x9836, 0xaf67, 0x5800, 0x924, 0xca11, 0x7297, 0x1, 0x0);
        gbc.writeMem(0x7297, { 0xbe });
        gbc.writeMem(0x9836, { 0x66 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaf67, gbc.sp());
        EXPECT(0x9837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9836));
        // 66 0261
        gbc.setState(0x6921, 0x495a, 0xec0, 0x3b78, 0xdf4c, 0x370f, 0x1, 0x0);
        gbc.writeMem(0x370f, { 0xb });
        gbc.writeMem(0x6921, { 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0262
        gbc.setState(0x63d7, 0xc1d0, 0xed20, 0xc71b, 0x261e, 0x8d0c, 0x0, 0x0);
        gbc.writeMem(0x63d7, { 0x66 });
        gbc.writeMem(0x8d0c, { 0x6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc1d0, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8d0c));
        // 66 0263
        gbc.setState(0xba99, 0xcfa3, 0xf940, 0xb920, 0xc1d5, 0xa845, 0x0, 0x0);
        gbc.writeMem(0xa845, { 0xcd });
        gbc.writeMem(0xba99, { 0x66 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0xba9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa845));
        EXPECT(0x66, gbc.readMem(0xba99));
        // 66 0264
        gbc.setState(0x502d, 0xac81, 0xb1b0, 0xda80, 0xe548, 0xf3c6, 0x0, 0x0);
        gbc.writeMem(0x502d, { 0x66 });
        gbc.writeMem(0xf3c6, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x502e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf3c6));
        // 66 0266
        gbc.setState(0xbbc4, 0x7b3d, 0xdd40, 0x2df2, 0x6f7e, 0xc484, 0x0, 0x1);
        gbc.writeMem(0xbbc4, { 0x66 });
        gbc.writeMem(0xc484, { 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b3d, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbbc4));
        EXPECT(0x8d, gbc.readMem(0xc484));
        // 66 0267
        gbc.setState(0x81ac, 0xf7d1, 0x8240, 0x77be, 0xa4cd, 0xc07a, 0x0, 0x1);
        gbc.writeMem(0x81ac, { 0x66 });
        gbc.writeMem(0xc07a, { 0x7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0x81ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x81ac));
        EXPECT(0x7, gbc.readMem(0xc07a));
        // 66 0268
        gbc.setState(0x5dab, 0xd15d, 0x4ce0, 0xa218, 0xdf74, 0x187d, 0x0, 0x1);
        gbc.writeMem(0x187d, { 0xc9 });
        gbc.writeMem(0x5dab, { 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x5dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0269
        gbc.setState(0x53c4, 0x4266, 0x1b20, 0x77f0, 0xaf88, 0x6940, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0x66 });
        gbc.writeMem(0x6940, { 0xfa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 026A
        gbc.setState(0x91c, 0x34bd, 0x8b40, 0x97d, 0xbabb, 0x1c3c, 0x0, 0x0);
        gbc.writeMem(0x91c, { 0x66 });
        gbc.writeMem(0x1c3c, { 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x34bd, gbc.sp());
        EXPECT(0x91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 026B
        gbc.setState(0xa565, 0x1180, 0xa20, 0xd590, 0xdaaa, 0x573e, 0x0, 0x1);
        gbc.writeMem(0x573e, { 0xe0 });
        gbc.writeMem(0xa565, { 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0xa566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa565));
        // 66 026C
        gbc.setState(0x1e46, 0xa8cf, 0x8980, 0x9b90, 0xff6e, 0x57d5, 0x1, 0x1);
        gbc.writeMem(0x1e46, { 0x66 });
        gbc.writeMem(0x57d5, { 0x1c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 026D
        gbc.setState(0x8a0a, 0xe33, 0x9cb0, 0x621c, 0x5d51, 0x2140, 0x1, 0x1);
        gbc.writeMem(0x2140, { 0x90 });
        gbc.writeMem(0x8a0a, { 0x66 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe33, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a0a));
        // 66 026F
        gbc.setState(0x2efe, 0x7a84, 0x4340, 0x642d, 0xa1ea, 0x9c4e, 0x0, 0x1);
        gbc.writeMem(0x2efe, { 0x66 });
        gbc.writeMem(0x9c4e, { 0xd8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7a84, gbc.sp());
        EXPECT(0x2eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9c4e));
        // 66 0270
        gbc.setState(0xb858, 0x11ea, 0x44a0, 0xc3e6, 0x9fe5, 0x281c, 0x1, 0x0);
        gbc.writeMem(0x281c, { 0xe2 });
        gbc.writeMem(0xb858, { 0x66 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb858));
        // 66 0271
        gbc.setState(0xa49, 0x10f8, 0x1ad0, 0x8a14, 0xcefb, 0x9458, 0x0, 0x0);
        gbc.writeMem(0xa49, { 0x66 });
        gbc.writeMem(0x9458, { 0xee });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x10f8, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9458));
        // 66 0272
        gbc.setState(0x19b7, 0xbae8, 0x7670, 0x6b09, 0xfe6b, 0x646d, 0x1, 0x1);
        gbc.writeMem(0x19b7, { 0x66 });
        gbc.writeMem(0x646d, { 0x82 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0273
        gbc.setState(0x922f, 0xdc81, 0x1bd0, 0x78e3, 0xaf3c, 0x5f5d, 0x1, 0x0);
        gbc.writeMem(0x5f5d, { 0x62 });
        gbc.writeMem(0x922f, { 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0x9230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x922f));
        // 66 0274
        gbc.setState(0x591a, 0x6f60, 0x6ab0, 0xcd96, 0x1903, 0x8c70, 0x1, 0x0);
        gbc.writeMem(0x591a, { 0x66 });
        gbc.writeMem(0x8c70, { 0x9c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6f60, gbc.sp());
        EXPECT(0x591b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c70));
        // 66 0275
        gbc.setState(0x2d63, 0xc9b1, 0x1950, 0x75d1, 0x8a5b, 0x63b5, 0x0, 0x0);
        gbc.writeMem(0x2d63, { 0x66 });
        gbc.writeMem(0x63b5, { 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc9b1, gbc.sp());
        EXPECT(0x2d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0276
        gbc.setState(0x9465, 0x7075, 0x1e0, 0xd2ab, 0x91d5, 0x9932, 0x1, 0x1);
        gbc.writeMem(0x9465, { 0x66 });
        gbc.writeMem(0x9932, { 0x3c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7075, gbc.sp());
        EXPECT(0x9466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9465));
        EXPECT(0x3c, gbc.readMem(0x9932));
        // 66 0277
        gbc.setState(0xc398, 0x9a23, 0x8df0, 0xb6ff, 0x971c, 0x7225, 0x0, 0x1);
        gbc.writeMem(0x7225, { 0x75 });
        gbc.writeMem(0xc398, { 0x66 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9a23, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc398));
        // 66 0278
        gbc.setState(0x4525, 0xb16f, 0xa330, 0xffd2, 0xaf8b, 0xdaa0, 0x1, 0x0);
        gbc.writeMem(0x4525, { 0x66 });
        gbc.writeMem(0xdaa0, { 0xf4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xdaa0));
        // 66 0279
        gbc.setState(0x9117, 0xbe63, 0x7360, 0x3e66, 0x498d, 0xc1a1, 0x1, 0x1);
        gbc.writeMem(0x9117, { 0x66 });
        gbc.writeMem(0xc1a1, { 0x74 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbe63, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9117));
        EXPECT(0x74, gbc.readMem(0xc1a1));
        // 66 027A
        gbc.setState(0x9a96, 0x591d, 0x75b0, 0xfb56, 0xb4d4, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x9a96, { 0x66 });
        gbc.writeMem(0xab47, { 0x5a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x591d, gbc.sp());
        EXPECT(0x9a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9a96));
        EXPECT(0x5a, gbc.readMem(0xab47));
        // 66 027B
        gbc.setState(0x7324, 0xe7ce, 0xd120, 0x9096, 0x25b5, 0x58e2, 0x1, 0x1);
        gbc.writeMem(0x58e2, { 0x21 });
        gbc.writeMem(0x7324, { 0x66 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7ce, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 027C
        gbc.setState(0xe92b, 0x446c, 0x150, 0x8134, 0x89ca, 0x6257, 0x0, 0x1);
        gbc.writeMem(0x6257, { 0x1d });
        gbc.writeMem(0xe92b, { 0x66 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x446c, gbc.sp());
        EXPECT(0xe92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe92b));
        // 66 027D
        gbc.setState(0x2287, 0x9cd2, 0x32f0, 0xa372, 0x10fb, 0x92ec, 0x0, 0x1);
        gbc.writeMem(0x2287, { 0x66 });
        gbc.writeMem(0x92ec, { 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x92ec));
        // 66 027E
        gbc.setState(0xbdcf, 0xef18, 0xe0d0, 0x2e10, 0x2d73, 0xb023, 0x1, 0x0);
        gbc.writeMem(0xb023, { 0xe4 });
        gbc.writeMem(0xbdcf, { 0x66 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xb023));
        EXPECT(0x66, gbc.readMem(0xbdcf));
        // 66 027F
        gbc.setState(0xb356, 0x577b, 0xd480, 0x5d24, 0x615a, 0x2b14, 0x1, 0x0);
        gbc.writeMem(0x2b14, { 0xd5 });
        gbc.writeMem(0xb356, { 0x66 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb356));
        // 66 0280
        gbc.setState(0xe561, 0xee86, 0x3a40, 0x3ed7, 0xd1ad, 0x5261, 0x1, 0x1);
        gbc.writeMem(0x5261, { 0xd8 });
        gbc.writeMem(0xe561, { 0x66 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xee86, gbc.sp());
        EXPECT(0xe562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe561));
        // 66 0281
        gbc.setState(0x67a4, 0x17c2, 0x33a0, 0xcd41, 0xb8a8, 0x32c0, 0x1, 0x1);
        gbc.writeMem(0x32c0, { 0x5 });
        gbc.writeMem(0x67a4, { 0x66 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x17c2, gbc.sp());
        EXPECT(0x67a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0283
        gbc.setState(0x5a3f, 0x2f2a, 0xe8a0, 0xb7d7, 0xd4c0, 0x2a87, 0x1, 0x0);
        gbc.writeMem(0x2a87, { 0xa8 });
        gbc.writeMem(0x5a3f, { 0x66 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2f2a, gbc.sp());
        EXPECT(0x5a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0284
        gbc.setState(0x130b, 0xf654, 0x1c10, 0xc45d, 0x4489, 0xebb, 0x0, 0x0);
        gbc.writeMem(0xebb, { 0x23 });
        gbc.writeMem(0x130b, { 0x66 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0286
        gbc.setState(0x38e3, 0x39b8, 0x1ed0, 0x48c2, 0xbda9, 0x969f, 0x0, 0x0);
        gbc.writeMem(0x38e3, { 0x66 });
        gbc.writeMem(0x969f, { 0xde });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x39b8, gbc.sp());
        EXPECT(0x38e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x969f));
        // 66 0287
        gbc.setState(0x9a70, 0x6ee7, 0x4270, 0x8356, 0x6acf, 0xe034, 0x1, 0x1);
        gbc.writeMem(0x9a70, { 0x66 });
        gbc.writeMem(0xe034, { 0x17 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9a70));
        EXPECT(0x17, gbc.readMem(0xe034));
        // 66 0288
        gbc.setState(0xe50a, 0x799f, 0x43c0, 0xe45d, 0xdb6f, 0x6302, 0x1, 0x0);
        gbc.writeMem(0x6302, { 0xdd });
        gbc.writeMem(0xe50a, { 0x66 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x799f, gbc.sp());
        EXPECT(0xe50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe50a));
        // 66 0289
        gbc.setState(0xadaa, 0xf5a7, 0x1d20, 0xffa6, 0x4efb, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0xadaa, { 0x66 });
        gbc.writeMem(0xc85c, { 0x50 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf5a7, gbc.sp());
        EXPECT(0xadab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xadaa));
        EXPECT(0x50, gbc.readMem(0xc85c));
        // 66 028A
        gbc.setState(0x5bcd, 0x6361, 0x6410, 0x806d, 0xaffe, 0xded2, 0x1, 0x0);
        gbc.writeMem(0x5bcd, { 0x66 });
        gbc.writeMem(0xded2, { 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6361, gbc.sp());
        EXPECT(0x5bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xded2));
        // 66 028B
        gbc.setState(0xb844, 0xdcc8, 0x2c20, 0xfe3c, 0x667d, 0x21fb, 0x0, 0x0);
        gbc.writeMem(0x21fb, { 0xa7 });
        gbc.writeMem(0xb844, { 0x66 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdcc8, gbc.sp());
        EXPECT(0xb845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb844));
        // 66 028C
        gbc.setState(0x42e0, 0x35d0, 0x88c0, 0x1a0c, 0x47de, 0x88c3, 0x1, 0x0);
        gbc.writeMem(0x42e0, { 0x66 });
        gbc.writeMem(0x88c3, { 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0x42e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x88c3));
        // 66 028D
        gbc.setState(0x82d3, 0xd7cb, 0xd400, 0xec78, 0x1f36, 0x1fd9, 0x0, 0x1);
        gbc.writeMem(0x1fd9, { 0xf4 });
        gbc.writeMem(0x82d3, { 0x66 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd7cb, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x82d3));
        // 66 028E
        gbc.setState(0xcc76, 0x1ccb, 0x57f0, 0x47f9, 0x6917, 0x3d0c, 0x1, 0x0);
        gbc.writeMem(0x3d0c, { 0x5a });
        gbc.writeMem(0xcc76, { 0x66 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0xcc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcc76));
        // 66 028F
        gbc.setState(0x342, 0x3633, 0xc30, 0x8f82, 0xd85f, 0x414d, 0x0, 0x0);
        gbc.writeMem(0x342, { 0x66 });
        gbc.writeMem(0x414d, { 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3633, gbc.sp());
        EXPECT(0x343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0290
        gbc.setState(0xcc74, 0xfdbe, 0xed80, 0x3b63, 0x594c, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0x6f00, { 0x1f });
        gbc.writeMem(0xcc74, { 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0xcc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcc74));
        // 66 0292
        gbc.setState(0xb2d7, 0x6ce0, 0x9070, 0xe4a0, 0xc02, 0xc069, 0x1, 0x1);
        gbc.writeMem(0xb2d7, { 0x66 });
        gbc.writeMem(0xc069, { 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0xb2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb2d7));
        EXPECT(0xd2, gbc.readMem(0xc069));
        // 66 0294
        gbc.setState(0x409b, 0x6034, 0x3360, 0xe3b0, 0xfbd2, 0x6121, 0x1, 0x1);
        gbc.writeMem(0x409b, { 0x66 });
        gbc.writeMem(0x6121, { 0xe8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0x409c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0295
        gbc.setState(0xe956, 0xdfa9, 0x84c0, 0x6482, 0x99ec, 0xa400, 0x0, 0x0);
        gbc.writeMem(0xa400, { 0xed });
        gbc.writeMem(0xe956, { 0x66 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdfa9, gbc.sp());
        EXPECT(0xe957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa400));
        EXPECT(0x66, gbc.readMem(0xe956));
        // 66 0296
        gbc.setState(0xaf24, 0x23a8, 0x7a00, 0xc917, 0xabde, 0xfcef, 0x1, 0x0);
        gbc.writeMem(0xaf24, { 0x66 });
        gbc.writeMem(0xfcef, { 0x4f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaf24));
        EXPECT(0x4f, gbc.readMem(0xfcef));
        // 66 0297
        gbc.setState(0xaa74, 0x3a8a, 0x1740, 0x8f7c, 0x8bb, 0x5d66, 0x1, 0x1);
        gbc.writeMem(0x5d66, { 0xd0 });
        gbc.writeMem(0xaa74, { 0x66 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3a8a, gbc.sp());
        EXPECT(0xaa75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaa74));
        // 66 0298
        gbc.setState(0xbe9a, 0xaa68, 0x5160, 0xf1f3, 0xc629, 0x4429, 0x1, 0x0);
        gbc.writeMem(0x4429, { 0x43 });
        gbc.writeMem(0xbe9a, { 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaa68, gbc.sp());
        EXPECT(0xbe9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbe9a));
        // 66 0299
        gbc.setState(0x32e2, 0xfa6b, 0xc660, 0xfb11, 0x4638, 0xb567, 0x0, 0x1);
        gbc.writeMem(0x32e2, { 0x66 });
        gbc.writeMem(0xb567, { 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb567));
        // 66 029A
        gbc.setState(0x28f2, 0xc83c, 0x9b70, 0x54b9, 0xbeea, 0xd053, 0x1, 0x1);
        gbc.writeMem(0x28f2, { 0x66 });
        gbc.writeMem(0xd053, { 0xa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc83c, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd053));
        // 66 029B
        gbc.setState(0x1ea6, 0x6f2f, 0xd690, 0xa77e, 0x8d15, 0xd872, 0x1, 0x1);
        gbc.writeMem(0x1ea6, { 0x66 });
        gbc.writeMem(0xd872, { 0x30 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd872));
        // 66 029C
        gbc.setState(0xec2d, 0xa4d1, 0xdcb0, 0x22c8, 0x8597, 0x7163, 0x0, 0x1);
        gbc.writeMem(0x7163, { 0xfa });
        gbc.writeMem(0xec2d, { 0x66 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0xec2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec2d));
        // 66 029D
        gbc.setState(0x8188, 0xf668, 0xa930, 0x6f4e, 0xb59f, 0x633b, 0x1, 0x0);
        gbc.writeMem(0x633b, { 0x14 });
        gbc.writeMem(0x8188, { 0x66 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf668, gbc.sp());
        EXPECT(0x8189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8188));
        // 66 029E
        gbc.setState(0xdd79, 0x43d1, 0x4b80, 0x67c1, 0x9969, 0xf7d5, 0x1, 0x0);
        gbc.writeMem(0xdd79, { 0x66 });
        gbc.writeMem(0xf7d5, { 0x7c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0xdd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdd79));
        EXPECT(0x7c, gbc.readMem(0xf7d5));
        // 66 029F
        gbc.setState(0x657a, 0x7ced, 0xa20, 0xbd48, 0x8c1d, 0xf8ec, 0x0, 0x0);
        gbc.writeMem(0x657a, { 0x66 });
        gbc.writeMem(0xf8ec, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ced, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf8ec));
        // 66 02A0
        gbc.setState(0x241d, 0x1504, 0x6e20, 0x4386, 0x66da, 0x42bb, 0x0, 0x0);
        gbc.writeMem(0x241d, { 0x66 });
        gbc.writeMem(0x42bb, { 0x85 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0x241e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02A2
        gbc.setState(0xbef3, 0xda2e, 0xfff0, 0xd3c6, 0x139e, 0x8164, 0x1, 0x1);
        gbc.writeMem(0x8164, { 0x42 });
        gbc.writeMem(0xbef3, { 0x66 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xda2e, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8164));
        EXPECT(0x66, gbc.readMem(0xbef3));
        // 66 02A4
        gbc.setState(0xc97d, 0x8923, 0x2470, 0xc521, 0x447d, 0x46fd, 0x0, 0x0);
        gbc.writeMem(0x46fd, { 0xe4 });
        gbc.writeMem(0xc97d, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8923, gbc.sp());
        EXPECT(0xc97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc97d));
        // 66 02A5
        gbc.setState(0x96f9, 0x96cb, 0x5940, 0xfc3, 0x6fa8, 0xa954, 0x1, 0x1);
        gbc.writeMem(0x96f9, { 0x66 });
        gbc.writeMem(0xa954, { 0x8b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x96cb, gbc.sp());
        EXPECT(0x96fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x96f9));
        EXPECT(0x8b, gbc.readMem(0xa954));
        // 66 02A6
        gbc.setState(0x354a, 0x2b41, 0x4ee0, 0x803e, 0x819, 0xb2f3, 0x1, 0x1);
        gbc.writeMem(0x354a, { 0x66 });
        gbc.writeMem(0xb2f3, { 0xbe });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb2f3));
        // 66 02A7
        gbc.setState(0x6d86, 0x3443, 0xddc0, 0xb9e6, 0xebac, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0x60e6, { 0x6a });
        gbc.writeMem(0x6d86, { 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02A8
        gbc.setState(0x99e2, 0x123a, 0xd6f0, 0x85bf, 0xd171, 0x656b, 0x0, 0x0);
        gbc.writeMem(0x656b, { 0x1d });
        gbc.writeMem(0x99e2, { 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x99e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x99e2));
        // 66 02A9
        gbc.setState(0x21e6, 0xa20d, 0x8b10, 0x4c15, 0xa2e9, 0xbef5, 0x0, 0x1);
        gbc.writeMem(0x21e6, { 0x66 });
        gbc.writeMem(0xbef5, { 0x3a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x21e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xbef5));
        // 66 02AA
        gbc.setState(0x5f99, 0xaacd, 0x4910, 0x74d3, 0x7d6d, 0x8837, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0x66 });
        gbc.writeMem(0x8837, { 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaacd, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8837));
        // 66 02AB
        gbc.setState(0xdc11, 0xce69, 0x20, 0xd1a8, 0x336d, 0xbaba, 0x0, 0x0);
        gbc.writeMem(0xbaba, { 0x58 });
        gbc.writeMem(0xdc11, { 0x66 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce69, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbaba));
        EXPECT(0x66, gbc.readMem(0xdc11));
        // 66 02AC
        gbc.setState(0xab9b, 0x6c8b, 0xaf60, 0xbedc, 0xd5a6, 0x71b6, 0x1, 0x0);
        gbc.writeMem(0x71b6, { 0x8b });
        gbc.writeMem(0xab9b, { 0x66 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xab9b));
        // 66 02AD
        gbc.setState(0xe6b9, 0x65f6, 0xed40, 0xf046, 0x8d75, 0x44e1, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0xe4 });
        gbc.writeMem(0xe6b9, { 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x65f6, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe6b9));
        // 66 02AE
        gbc.setState(0xe484, 0xf6a, 0xe400, 0xe30d, 0xb8eb, 0x7a4c, 0x1, 0x0);
        gbc.writeMem(0x7a4c, { 0xf4 });
        gbc.writeMem(0xe484, { 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf6a, gbc.sp());
        EXPECT(0xe485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe484));
        // 66 02AF
        gbc.setState(0x8f4e, 0x7089, 0xdcd0, 0x48b5, 0xb366, 0xd91f, 0x1, 0x1);
        gbc.writeMem(0x8f4e, { 0x66 });
        gbc.writeMem(0xd91f, { 0xec });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7089, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8f4e));
        EXPECT(0xec, gbc.readMem(0xd91f));
        // 66 02B0
        gbc.setState(0x49b8, 0x6381, 0x18c0, 0x6b1d, 0x42f0, 0x4363, 0x0, 0x0);
        gbc.writeMem(0x4363, { 0xd0 });
        gbc.writeMem(0x49b8, { 0x66 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6381, gbc.sp());
        EXPECT(0x49b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02B1
        gbc.setState(0x9ae7, 0xc6cb, 0x3800, 0x1a09, 0xbfbe, 0xdf22, 0x1, 0x1);
        gbc.writeMem(0x9ae7, { 0x66 });
        gbc.writeMem(0xdf22, { 0x33 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc6cb, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ae7));
        EXPECT(0x33, gbc.readMem(0xdf22));
        // 66 02B2
        gbc.setState(0x732b, 0xccf2, 0x6ab0, 0x2090, 0x755d, 0xcb16, 0x1, 0x0);
        gbc.writeMem(0x732b, { 0x66 });
        gbc.writeMem(0xcb16, { 0x32 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xccf2, gbc.sp());
        EXPECT(0x732c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcb16));
        // 66 02B3
        gbc.setState(0x9abb, 0x72f0, 0x4520, 0x33be, 0x9ea7, 0x1a6d, 0x1, 0x1);
        gbc.writeMem(0x1a6d, { 0xc });
        gbc.writeMem(0x9abb, { 0x66 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x9abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9abb));
        // 66 02B4
        gbc.setState(0x102e, 0x874, 0xcbe0, 0xd01e, 0x863b, 0x51b9, 0x0, 0x1);
        gbc.writeMem(0x102e, { 0x66 });
        gbc.writeMem(0x51b9, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02B5
        gbc.setState(0x5db0, 0xaae0, 0x80d0, 0xa7f6, 0x23dc, 0xb559, 0x0, 0x0);
        gbc.writeMem(0x5db0, { 0x66 });
        gbc.writeMem(0xb559, { 0x9c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaae0, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb559));
        // 66 02B6
        gbc.setState(0x5d42, 0xf697, 0x8510, 0x9af9, 0x3a41, 0x82a6, 0x0, 0x0);
        gbc.writeMem(0x5d42, { 0x66 });
        gbc.writeMem(0x82a6, { 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf697, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x82a6));
        // 66 02B7
        gbc.setState(0xd0d, 0x827f, 0xfef0, 0x644b, 0x58f2, 0xd18b, 0x0, 0x1);
        gbc.writeMem(0xd0d, { 0x66 });
        gbc.writeMem(0xd18b, { 0x8b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x827f, gbc.sp());
        EXPECT(0xd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd18b));
        // 66 02B8
        gbc.setState(0xa4cc, 0x3e8e, 0xb3c0, 0xd5ce, 0xd028, 0xbb98, 0x0, 0x1);
        gbc.writeMem(0xa4cc, { 0x66 });
        gbc.writeMem(0xbb98, { 0x26 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0xa4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa4cc));
        EXPECT(0x26, gbc.readMem(0xbb98));
        // 66 02B9
        gbc.setState(0x6baa, 0xec01, 0x7c30, 0x61b1, 0xd19a, 0x8b3f, 0x1, 0x1);
        gbc.writeMem(0x6baa, { 0x66 });
        gbc.writeMem(0x8b3f, { 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xec01, gbc.sp());
        EXPECT(0x6bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8b3f));
        // 66 02BA
        gbc.setState(0xa450, 0x5780, 0x2a60, 0x6d4f, 0x9a8e, 0x5bd2, 0x1, 0x0);
        gbc.writeMem(0x5bd2, { 0x28 });
        gbc.writeMem(0xa450, { 0x66 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5780, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa450));
        // 66 02BB
        gbc.setState(0x3aff, 0x5e1b, 0xdaa0, 0x5b4c, 0x9f1f, 0x356e, 0x1, 0x1);
        gbc.writeMem(0x356e, { 0xb6 });
        gbc.writeMem(0x3aff, { 0x66 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02BC
        gbc.setState(0x54d, 0xe665, 0xe5a0, 0xe74, 0xc456, 0x621a, 0x1, 0x0);
        gbc.writeMem(0x54d, { 0x66 });
        gbc.writeMem(0x621a, { 0xfd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe665, gbc.sp());
        EXPECT(0x54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02BD
        gbc.setState(0x9d17, 0xce05, 0xa730, 0x76a0, 0x18ab, 0xe836, 0x0, 0x1);
        gbc.writeMem(0x9d17, { 0x66 });
        gbc.writeMem(0xe836, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xce05, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9d17));
        EXPECT(0x2d, gbc.readMem(0xe836));
        // 66 02BE
        gbc.setState(0x44e6, 0xf8ee, 0x520, 0xb398, 0x4b0a, 0xbffc, 0x1, 0x1);
        gbc.writeMem(0x44e6, { 0x66 });
        gbc.writeMem(0xbffc, { 0x45 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf8ee, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xbffc));
        // 66 02BF
        gbc.setState(0x1a2e, 0x2e8, 0xd4d0, 0xd83a, 0xfa3c, 0x6658, 0x0, 0x1);
        gbc.writeMem(0x1a2e, { 0x66 });
        gbc.writeMem(0x6658, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2e8, gbc.sp());
        EXPECT(0x1a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02C0
        gbc.setState(0x589e, 0x47a7, 0x6e40, 0xee13, 0xbfc8, 0x6322, 0x0, 0x1);
        gbc.writeMem(0x589e, { 0x66 });
        gbc.writeMem(0x6322, { 0x54 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0x589f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02C1
        gbc.setState(0x8911, 0xab48, 0xb140, 0x4a23, 0x156b, 0x9dda, 0x1, 0x0);
        gbc.writeMem(0x8911, { 0x66 });
        gbc.writeMem(0x9dda, { 0x1c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0x8912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8911));
        EXPECT(0x1c, gbc.readMem(0x9dda));
        // 66 02C2
        gbc.setState(0x7cdd, 0x789a, 0xfd10, 0x3ddf, 0x2699, 0x4a94, 0x1, 0x0);
        gbc.writeMem(0x4a94, { 0xb0 });
        gbc.writeMem(0x7cdd, { 0x66 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x789a, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02C3
        gbc.setState(0x7048, 0x2606, 0x1ad0, 0xee3b, 0x3c9b, 0x970b, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0x66 });
        gbc.writeMem(0x970b, { 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2606, gbc.sp());
        EXPECT(0x7049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x970b));
        // 66 02C4
        gbc.setState(0x993d, 0xd0af, 0xee40, 0x77de, 0xa171, 0x8742, 0x1, 0x1);
        gbc.writeMem(0x8742, { 0xe4 });
        gbc.writeMem(0x993d, { 0x66 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd0af, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8742));
        EXPECT(0x66, gbc.readMem(0x993d));
        // 66 02C5
        gbc.setState(0x6ce9, 0xb3b1, 0x8a30, 0xfca3, 0x230, 0x1567, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0x7 });
        gbc.writeMem(0x6ce9, { 0x66 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb3b1, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02C7
        gbc.setState(0x1a7e, 0x1222, 0x8110, 0xeeb, 0x2459, 0x753a, 0x1, 0x1);
        gbc.writeMem(0x1a7e, { 0x66 });
        gbc.writeMem(0x753a, { 0xdc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1222, gbc.sp());
        EXPECT(0x1a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02C8
        gbc.setState(0x96b4, 0x3ce0, 0x6650, 0x71f1, 0x2e0c, 0x274a, 0x1, 0x0);
        gbc.writeMem(0x274a, { 0x89 });
        gbc.writeMem(0x96b4, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3ce0, gbc.sp());
        EXPECT(0x96b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x96b4));
        // 66 02C9
        gbc.setState(0x1d7c, 0x1523, 0xd220, 0xfc89, 0xde1f, 0x6e23, 0x0, 0x0);
        gbc.writeMem(0x1d7c, { 0x66 });
        gbc.writeMem(0x6e23, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1523, gbc.sp());
        EXPECT(0x1d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02CA
        gbc.setState(0x50af, 0x9a10, 0xf170, 0xc0aa, 0xe257, 0x389f, 0x0, 0x0);
        gbc.writeMem(0x389f, { 0x12 });
        gbc.writeMem(0x50af, { 0x66 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9a10, gbc.sp());
        EXPECT(0x50b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02CB
        gbc.setState(0xa0e4, 0xe632, 0xe00, 0x6e7f, 0xb5b3, 0xff78, 0x1, 0x0);
        gbc.writeMem(0xa0e4, { 0x66 });
        gbc.writeMem(0xff78, { 0x9e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0xa0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa0e4));
        EXPECT(0x9e, gbc.readMem(0xff78));
        // 66 02CC
        gbc.setState(0x79c9, 0xa3ad, 0x6f80, 0x2414, 0x6b74, 0x66e3, 0x1, 0x1);
        gbc.writeMem(0x66e3, { 0x25 });
        gbc.writeMem(0x79c9, { 0x66 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa3ad, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02CD
        gbc.setState(0xe94f, 0xb3f2, 0x15b0, 0xf88, 0x8326, 0xd5c0, 0x0, 0x1);
        gbc.writeMem(0xd5c0, { 0x49 });
        gbc.writeMem(0xe94f, { 0x66 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb3f2, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd5c0));
        EXPECT(0x66, gbc.readMem(0xe94f));
        // 66 02CE
        gbc.setState(0x3dab, 0x6ef2, 0x4980, 0x7d6c, 0x8ec5, 0xb39e, 0x0, 0x1);
        gbc.writeMem(0x3dab, { 0x66 });
        gbc.writeMem(0xb39e, { 0x6c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb39e));
        // 66 02CF
        gbc.setState(0x763f, 0x4727, 0x2650, 0x4370, 0xc733, 0x17d1, 0x0, 0x0);
        gbc.writeMem(0x17d1, { 0xef });
        gbc.writeMem(0x763f, { 0x66 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02D0
        gbc.setState(0x9737, 0x140, 0xe460, 0xd7c, 0xcf8c, 0xbf30, 0x1, 0x0);
        gbc.writeMem(0x9737, { 0x66 });
        gbc.writeMem(0xbf30, { 0x1f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x140, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9737));
        EXPECT(0x1f, gbc.readMem(0xbf30));
        // 66 02D1
        gbc.setState(0xe36f, 0x5869, 0x8bd0, 0x37cf, 0x4717, 0x450a, 0x1, 0x0);
        gbc.writeMem(0x450a, { 0xa5 });
        gbc.writeMem(0xe36f, { 0x66 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0xe370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe36f));
        // 66 02D2
        gbc.setState(0x3605, 0x7ef1, 0xbb60, 0xe8aa, 0xffde, 0xf85c, 0x0, 0x1);
        gbc.writeMem(0x3605, { 0x66 });
        gbc.writeMem(0xf85c, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf85c));
        // 66 02D3
        gbc.setState(0x6004, 0x976b, 0xbc70, 0xeac2, 0x6cdd, 0x8e1d, 0x0, 0x1);
        gbc.writeMem(0x6004, { 0x66 });
        gbc.writeMem(0x8e1d, { 0xfc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8e1d));
        // 66 02D4
        gbc.setState(0x37de, 0x526, 0xf450, 0xb95e, 0xb39f, 0x9d50, 0x1, 0x0);
        gbc.writeMem(0x37de, { 0x66 });
        gbc.writeMem(0x9d50, { 0xa6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x526, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9d50));
        // 66 02D5
        gbc.setState(0x141b, 0x7133, 0xe6d0, 0x75a1, 0x9344, 0x682d, 0x1, 0x0);
        gbc.writeMem(0x141b, { 0x66 });
        gbc.writeMem(0x682d, { 0x65 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7133, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02D6
        gbc.setState(0x6230, 0xbc9e, 0x7450, 0x5ea8, 0xdc81, 0x345c, 0x1, 0x0);
        gbc.writeMem(0x345c, { 0xa5 });
        gbc.writeMem(0x6230, { 0x66 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02D7
        gbc.setState(0xb584, 0x92b7, 0xa2e0, 0x27b6, 0x83b, 0xd115, 0x1, 0x0);
        gbc.writeMem(0xb584, { 0x66 });
        gbc.writeMem(0xd115, { 0x96 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0xb585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb584));
        EXPECT(0x96, gbc.readMem(0xd115));
        // 66 02D8
        gbc.setState(0xd529, 0x4c8f, 0x89f0, 0x8bd9, 0xe628, 0x2b0b, 0x1, 0x0);
        gbc.writeMem(0x2b0b, { 0xdf });
        gbc.writeMem(0xd529, { 0x66 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd529));
        // 66 02D9
        gbc.setState(0x32ac, 0x2f8, 0x6bc0, 0xf326, 0xe9e7, 0x4b21, 0x1, 0x0);
        gbc.writeMem(0x32ac, { 0x66 });
        gbc.writeMem(0x4b21, { 0x14 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02DA
        gbc.setState(0x3c0d, 0x496f, 0x8ae0, 0xda46, 0x5e36, 0x9223, 0x0, 0x1);
        gbc.writeMem(0x3c0d, { 0x66 });
        gbc.writeMem(0x9223, { 0x42 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x496f, gbc.sp());
        EXPECT(0x3c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9223));
        // 66 02DB
        gbc.setState(0x62ab, 0x667a, 0x73e0, 0x76c0, 0x9aa8, 0xaa56, 0x0, 0x0);
        gbc.writeMem(0x62ab, { 0x66 });
        gbc.writeMem(0xaa56, { 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x667a, gbc.sp());
        EXPECT(0x62ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa56));
        // 66 02DC
        gbc.setState(0x7e55, 0x8e1e, 0x8e60, 0x6394, 0x38b6, 0xe516, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0x66 });
        gbc.writeMem(0xe516, { 0xad });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e1e, gbc.sp());
        EXPECT(0x7e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe516));
        // 66 02DD
        gbc.setState(0x64c8, 0xa9d9, 0xe20, 0xe7f3, 0x915c, 0x6f4a, 0x1, 0x1);
        gbc.writeMem(0x64c8, { 0x66 });
        gbc.writeMem(0x6f4a, { 0x1e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02DE
        gbc.setState(0x9a3e, 0x436c, 0xc280, 0x5231, 0x6ecc, 0xb714, 0x1, 0x0);
        gbc.writeMem(0x9a3e, { 0x66 });
        gbc.writeMem(0xb714, { 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x436c, gbc.sp());
        EXPECT(0x9a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9a3e));
        EXPECT(0x4a, gbc.readMem(0xb714));
        // 66 02DF
        gbc.setState(0xed46, 0x8ba, 0x9c10, 0x8a81, 0x57d7, 0x2cc7, 0x0, 0x0);
        gbc.writeMem(0x2cc7, { 0x3b });
        gbc.writeMem(0xed46, { 0x66 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xed46));
        // 66 02E0
        gbc.setState(0x2521, 0x862f, 0x4f50, 0xe101, 0xb197, 0xe2ef, 0x1, 0x0);
        gbc.writeMem(0x2521, { 0x66 });
        gbc.writeMem(0xe2ef, { 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x862f, gbc.sp());
        EXPECT(0x2522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe2ef));
        // 66 02E1
        gbc.setState(0x850f, 0x5d82, 0x7530, 0x7b85, 0x9ec1, 0x8f52, 0x1, 0x1);
        gbc.writeMem(0x850f, { 0x66 });
        gbc.writeMem(0x8f52, { 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0x8510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x850f));
        EXPECT(0x37, gbc.readMem(0x8f52));
        // 66 02E2
        gbc.setState(0xab2, 0x2406, 0xe8b0, 0x3119, 0xab8f, 0x1693, 0x0, 0x0);
        gbc.writeMem(0xab2, { 0x66 });
        gbc.writeMem(0x1693, { 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2406, gbc.sp());
        EXPECT(0xab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02E3
        gbc.setState(0x5d4c, 0x3dd2, 0xffd0, 0x78e2, 0xb656, 0x18a1, 0x0, 0x1);
        gbc.writeMem(0x18a1, { 0x59 });
        gbc.writeMem(0x5d4c, { 0x66 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0x5d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02E5
        gbc.setState(0x6601, 0xd5ec, 0x4860, 0x66a7, 0x3f8d, 0x89f7, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0x66 });
        gbc.writeMem(0x89f7, { 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd5ec, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x89f7));
        // 66 02E6
        gbc.setState(0x2881, 0x6ecb, 0x3180, 0x975a, 0x9e5f, 0xbcdc, 0x1, 0x1);
        gbc.writeMem(0x2881, { 0x66 });
        gbc.writeMem(0xbcdc, { 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xbcdc));
        // 66 02E7
        gbc.setState(0x13ba, 0x706, 0x81b0, 0x7605, 0x72f1, 0xa27d, 0x0, 0x0);
        gbc.writeMem(0x13ba, { 0x66 });
        gbc.writeMem(0xa27d, { 0xaa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x706, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa27d));
        // 66 02E8
        gbc.setState(0x4f3, 0x3117, 0x1650, 0xd0db, 0xc358, 0x757d, 0x0, 0x1);
        gbc.writeMem(0x4f3, { 0x66 });
        gbc.writeMem(0x757d, { 0x14 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3117, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02E9
        gbc.setState(0xad89, 0x8dff, 0xc590, 0x879d, 0x542c, 0x7d4b, 0x0, 0x1);
        gbc.writeMem(0x7d4b, { 0x92 });
        gbc.writeMem(0xad89, { 0x66 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8dff, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad89));
        // 66 02EA
        gbc.setState(0x412e, 0x8cc, 0x1650, 0x31e, 0x9b24, 0xbaac, 0x1, 0x0);
        gbc.writeMem(0x412e, { 0x66 });
        gbc.writeMem(0xbaac, { 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8cc, gbc.sp());
        EXPECT(0x412f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbaac));
        // 66 02EB
        gbc.setState(0x987d, 0x78cc, 0x24f0, 0x41c6, 0x50ea, 0x9a69, 0x0, 0x1);
        gbc.writeMem(0x987d, { 0x66 });
        gbc.writeMem(0x9a69, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0x987e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x987d));
        EXPECT(0x66, gbc.readMem(0x9a69));
        // 66 02EC
        gbc.setState(0xe163, 0xe759, 0xbfc0, 0xaccb, 0xaed6, 0x7935, 0x1, 0x1);
        gbc.writeMem(0x7935, { 0x83 });
        gbc.writeMem(0xe163, { 0x66 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe759, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe163));
        // 66 02ED
        gbc.setState(0x7081, 0xe1bb, 0x74e0, 0x3608, 0xff7f, 0xed, 0x1, 0x0);
        gbc.writeMem(0xed, { 0x84 });
        gbc.writeMem(0x7081, { 0x66 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02EE
        gbc.setState(0x8dc9, 0xb1b1, 0xb000, 0xfd52, 0x50ad, 0xdc7d, 0x1, 0x1);
        gbc.writeMem(0x8dc9, { 0x66 });
        gbc.writeMem(0xdc7d, { 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8dc9));
        EXPECT(0xa1, gbc.readMem(0xdc7d));
        // 66 02EF
        gbc.setState(0x4762, 0x513e, 0x1e80, 0xb5f6, 0x52ea, 0x694e, 0x0, 0x1);
        gbc.writeMem(0x4762, { 0x66 });
        gbc.writeMem(0x694e, { 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x513e, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 02F0
        gbc.setState(0x7688, 0x49d8, 0x7360, 0xcfd2, 0xddd9, 0xbc8f, 0x1, 0x0);
        gbc.writeMem(0x7688, { 0x66 });
        gbc.writeMem(0xbc8f, { 0x62 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbc8f));
        // 66 02F1
        gbc.setState(0x22ba, 0x5010, 0x8050, 0x31bf, 0x505e, 0x6b49, 0x1, 0x0);
        gbc.writeMem(0x22ba, { 0x66 });
        gbc.writeMem(0x6b49, { 0x1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5010, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02F2
        gbc.setState(0x295, 0xbdf4, 0x39b0, 0x5bd6, 0xc3a4, 0x1541, 0x0, 0x1);
        gbc.writeMem(0x295, { 0x66 });
        gbc.writeMem(0x1541, { 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0x296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02F3
        gbc.setState(0x8659, 0x9465, 0xe1c0, 0xd90d, 0x953b, 0x2954, 0x1, 0x0);
        gbc.writeMem(0x2954, { 0xad });
        gbc.writeMem(0x8659, { 0x66 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8659));
        // 66 02F4
        gbc.setState(0xc40f, 0x988e, 0xcdf0, 0x14d0, 0x8917, 0xf778, 0x0, 0x1);
        gbc.writeMem(0xc40f, { 0x66 });
        gbc.writeMem(0xf778, { 0x75 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x988e, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc40f));
        EXPECT(0x75, gbc.readMem(0xf778));
        // 66 02F5
        gbc.setState(0x8bf6, 0x12c8, 0xa500, 0xa26e, 0x715b, 0x5f37, 0x1, 0x0);
        gbc.writeMem(0x5f37, { 0x36 });
        gbc.writeMem(0x8bf6, { 0x66 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x12c8, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8bf6));
        // 66 02F6
        gbc.setState(0x958b, 0xdd23, 0x50a0, 0xb945, 0x9c54, 0x94b1, 0x0, 0x1);
        gbc.writeMem(0x94b1, { 0xad });
        gbc.writeMem(0x958b, { 0x66 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdd23, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x94b1));
        EXPECT(0x66, gbc.readMem(0x958b));
        // 66 02F7
        gbc.setState(0x377f, 0x9bd0, 0x490, 0xf262, 0xf0a, 0x9d5e, 0x1, 0x1);
        gbc.writeMem(0x377f, { 0x66 });
        gbc.writeMem(0x9d5e, { 0x57 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9bd0, gbc.sp());
        EXPECT(0x3780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9d5e));
        // 66 02F8
        gbc.setState(0xc981, 0xcff4, 0x4190, 0x6137, 0xb8ef, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0xc981, { 0x66 });
        gbc.writeMem(0xdeb0, { 0x8e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0xc982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc981));
        EXPECT(0x8e, gbc.readMem(0xdeb0));
        // 66 02F9
        gbc.setState(0x9194, 0xafe8, 0xecc0, 0x6202, 0x941e, 0xad35, 0x1, 0x0);
        gbc.writeMem(0x9194, { 0x66 });
        gbc.writeMem(0xad35, { 0x4b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9194));
        EXPECT(0x4b, gbc.readMem(0xad35));
        // 66 02FA
        gbc.setState(0x357b, 0xa3e2, 0xcb0, 0xcccf, 0xe827, 0x1875, 0x1, 0x1);
        gbc.writeMem(0x1875, { 0x24 });
        gbc.writeMem(0x357b, { 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02FB
        gbc.setState(0xe86f, 0xe02c, 0x96d0, 0xa2a7, 0xcae5, 0xa117, 0x1, 0x0);
        gbc.writeMem(0xa117, { 0xd5 });
        gbc.writeMem(0xe86f, { 0x66 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe02c, gbc.sp());
        EXPECT(0xe870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa117));
        EXPECT(0x66, gbc.readMem(0xe86f));
        // 66 02FC
        gbc.setState(0xe997, 0x8b53, 0xdd60, 0xef86, 0xfb7b, 0x9527, 0x0, 0x1);
        gbc.writeMem(0x9527, { 0x50 });
        gbc.writeMem(0xe997, { 0x66 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9527));
        EXPECT(0x66, gbc.readMem(0xe997));
        // 66 02FD
        gbc.setState(0x3343, 0x6e14, 0xd50, 0xe5e1, 0x1462, 0x6095, 0x1, 0x1);
        gbc.writeMem(0x3343, { 0x66 });
        gbc.writeMem(0x6095, { 0x9e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6e14, gbc.sp());
        EXPECT(0x3344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 02FE
        gbc.setState(0xdf97, 0xdb3c, 0x7420, 0xd6ea, 0xa92, 0x75d5, 0x0, 0x0);
        gbc.writeMem(0x75d5, { 0x4c });
        gbc.writeMem(0xdf97, { 0x66 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdb3c, gbc.sp());
        EXPECT(0xdf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdf97));
        // 66 02FF
        gbc.setState(0x914e, 0xb03c, 0x650, 0xabe3, 0xa4b6, 0xb6cd, 0x1, 0x0);
        gbc.writeMem(0x914e, { 0x66 });
        gbc.writeMem(0xb6cd, { 0x93 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb03c, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x914e));
        EXPECT(0x93, gbc.readMem(0xb6cd));
        // 66 0300
        gbc.setState(0xe26d, 0x15f5, 0xe190, 0xf81d, 0x35be, 0x4e97, 0x1, 0x0);
        gbc.writeMem(0x4e97, { 0x16 });
        gbc.writeMem(0xe26d, { 0x66 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0xe26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe26d));
        // 66 0301
        gbc.setState(0x4f68, 0xfd8b, 0xd1c0, 0x7139, 0x963, 0x17da, 0x0, 0x0);
        gbc.writeMem(0x17da, { 0x9f });
        gbc.writeMem(0x4f68, { 0x66 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0x4f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0302
        gbc.setState(0x2e7a, 0x5de0, 0xfa00, 0xc1db, 0xef2c, 0x24c8, 0x1, 0x0);
        gbc.writeMem(0x24c8, { 0xb0 });
        gbc.writeMem(0x2e7a, { 0x66 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5de0, gbc.sp());
        EXPECT(0x2e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0303
        gbc.setState(0x53f5, 0x2f8d, 0x56d0, 0x4d9a, 0x75dd, 0x34fb, 0x0, 0x1);
        gbc.writeMem(0x34fb, { 0xeb });
        gbc.writeMem(0x53f5, { 0x66 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0304
        gbc.setState(0x90c5, 0xb90b, 0x6660, 0x46a7, 0x961a, 0x93c4, 0x0, 0x0);
        gbc.writeMem(0x90c5, { 0x66 });
        gbc.writeMem(0x93c4, { 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb90b, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x90c5));
        EXPECT(0xb3, gbc.readMem(0x93c4));
        // 66 0305
        gbc.setState(0x2b67, 0xa923, 0xdac0, 0xb3b8, 0xbf95, 0x403a, 0x0, 0x1);
        gbc.writeMem(0x2b67, { 0x66 });
        gbc.writeMem(0x403a, { 0x6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0x2b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0306
        gbc.setState(0x7d2e, 0xeea, 0xf460, 0x7910, 0xf8c3, 0x2943, 0x0, 0x0);
        gbc.writeMem(0x2943, { 0xf2 });
        gbc.writeMem(0x7d2e, { 0x66 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeea, gbc.sp());
        EXPECT(0x7d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0307
        gbc.setState(0x20d8, 0x9a88, 0xbee0, 0x4c37, 0x7250, 0x2c3, 0x0, 0x1);
        gbc.writeMem(0x2c3, { 0x15 });
        gbc.writeMem(0x20d8, { 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0x20d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0308
        gbc.setState(0x82e0, 0x35bc, 0xeaa0, 0x5ab2, 0xbbef, 0x36, 0x1, 0x1);
        gbc.writeMem(0x36, { 0xd1 });
        gbc.writeMem(0x82e0, { 0x66 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x82e0));
        // 66 0309
        gbc.setState(0xb727, 0x9ff2, 0x4ce0, 0xa549, 0xb574, 0x2045, 0x1, 0x0);
        gbc.writeMem(0x2045, { 0x74 });
        gbc.writeMem(0xb727, { 0x66 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9ff2, gbc.sp());
        EXPECT(0xb728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb727));
        // 66 030A
        gbc.setState(0xbf5b, 0xe8cb, 0xc7e0, 0x929c, 0x94db, 0x3b3a, 0x1, 0x0);
        gbc.writeMem(0x3b3a, { 0x72 });
        gbc.writeMem(0xbf5b, { 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0xbf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbf5b));
        // 66 030B
        gbc.setState(0x71ef, 0xef00, 0x5420, 0xb753, 0xf67d, 0x37e9, 0x1, 0x1);
        gbc.writeMem(0x37e9, { 0x6f });
        gbc.writeMem(0x71ef, { 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0x71f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 030C
        gbc.setState(0x8846, 0x1b9e, 0xa1a0, 0x494b, 0xef27, 0x9b0f, 0x0, 0x1);
        gbc.writeMem(0x8846, { 0x66 });
        gbc.writeMem(0x9b0f, { 0x2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0x8847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8846));
        EXPECT(0x2, gbc.readMem(0x9b0f));
        // 66 030D
        gbc.setState(0xcf9d, 0x9401, 0xe360, 0x648a, 0x6810, 0xb92d, 0x1, 0x0);
        gbc.writeMem(0xb92d, { 0x69 });
        gbc.writeMem(0xcf9d, { 0x66 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9401, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb92d));
        EXPECT(0x66, gbc.readMem(0xcf9d));
        // 66 030E
        gbc.setState(0xe7e9, 0x6c91, 0xef90, 0x4a8f, 0x151c, 0xd691, 0x0, 0x1);
        gbc.writeMem(0xd691, { 0xf });
        gbc.writeMem(0xe7e9, { 0x66 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6c91, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xd691));
        EXPECT(0x66, gbc.readMem(0xe7e9));
        // 66 030F
        gbc.setState(0x1c74, 0xd41, 0xe60, 0xf05c, 0x1033, 0x1293, 0x0, 0x1);
        gbc.writeMem(0x1293, { 0xe5 });
        gbc.writeMem(0x1c74, { 0x66 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd41, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0310
        gbc.setState(0xb9d9, 0x2827, 0x26f0, 0x8bc4, 0x6c30, 0x788e, 0x1, 0x1);
        gbc.writeMem(0x788e, { 0xe7 });
        gbc.writeMem(0xb9d9, { 0x66 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2827, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb9d9));
        // 66 0311
        gbc.setState(0x21d0, 0x3a23, 0x31f0, 0x21dc, 0x81bb, 0x2302, 0x1, 0x0);
        gbc.writeMem(0x21d0, { 0x66 });
        gbc.writeMem(0x2302, { 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0312
        gbc.setState(0xa06b, 0x5dfb, 0x61d0, 0xbff6, 0x177a, 0xbbcd, 0x1, 0x0);
        gbc.writeMem(0xa06b, { 0x66 });
        gbc.writeMem(0xbbcd, { 0xcd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa06b));
        EXPECT(0xcd, gbc.readMem(0xbbcd));
        // 66 0313
        gbc.setState(0x6814, 0x7f, 0xb250, 0x774c, 0x4066, 0xf568, 0x0, 0x1);
        gbc.writeMem(0x6814, { 0x66 });
        gbc.writeMem(0xf568, { 0x41 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f, gbc.sp());
        EXPECT(0x6815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xf568));
        // 66 0314
        gbc.setState(0x6e08, 0xe3b1, 0xe380, 0x732c, 0xdc0e, 0x153f, 0x1, 0x0);
        gbc.writeMem(0x153f, { 0x0 });
        gbc.writeMem(0x6e08, { 0x66 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0x6e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0315
        gbc.setState(0x757e, 0x7b43, 0xb9c0, 0xc8b1, 0x956a, 0x6036, 0x0, 0x1);
        gbc.writeMem(0x6036, { 0x48 });
        gbc.writeMem(0x757e, { 0x66 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7b43, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0316
        gbc.setState(0x7b4f, 0x2ea6, 0x2c90, 0xa291, 0x9db, 0x47da, 0x1, 0x0);
        gbc.writeMem(0x47da, { 0x40 });
        gbc.writeMem(0x7b4f, { 0x66 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0x7b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0317
        gbc.setState(0x8c0f, 0x4e11, 0xf870, 0x6ee8, 0x27de, 0xbc81, 0x1, 0x1);
        gbc.writeMem(0x8c0f, { 0x66 });
        gbc.writeMem(0xbc81, { 0xae });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8c0f));
        EXPECT(0xae, gbc.readMem(0xbc81));
        // 66 0318
        gbc.setState(0x5010, 0xc98c, 0xa650, 0x2e11, 0x6e2e, 0xbf90, 0x0, 0x0);
        gbc.writeMem(0x5010, { 0x66 });
        gbc.writeMem(0xbf90, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc98c, gbc.sp());
        EXPECT(0x5011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf90));
        // 66 0319
        gbc.setState(0x4e2c, 0x3826, 0xba10, 0x57f, 0x793c, 0x90e9, 0x1, 0x1);
        gbc.writeMem(0x4e2c, { 0x66 });
        gbc.writeMem(0x90e9, { 0xc7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3826, gbc.sp());
        EXPECT(0x4e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x90e9));
        // 66 031A
        gbc.setState(0x7dca, 0x4679, 0xa170, 0x173b, 0xd71b, 0x1e67, 0x0, 0x1);
        gbc.writeMem(0x1e67, { 0x8d });
        gbc.writeMem(0x7dca, { 0x66 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0x7dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 031B
        gbc.setState(0x876f, 0x9718, 0x4060, 0x2082, 0xfd1e, 0x314b, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0x6f });
        gbc.writeMem(0x876f, { 0x66 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x8770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x876f));
        // 66 031C
        gbc.setState(0xc669, 0xa0c2, 0xd6a0, 0x7019, 0xf13d, 0xe42e, 0x0, 0x1);
        gbc.writeMem(0xc669, { 0x66 });
        gbc.writeMem(0xe42e, { 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa0c2, gbc.sp());
        EXPECT(0xc66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc669));
        EXPECT(0xd7, gbc.readMem(0xe42e));
        // 66 031D
        gbc.setState(0x29e2, 0x457b, 0x3810, 0x87c1, 0x9264, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x29e2, { 0x66 });
        gbc.writeMem(0x66c4, { 0xed });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x29e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 031E
        gbc.setState(0x36d0, 0x3e7e, 0x7da0, 0x1cdd, 0x5105, 0xfa05, 0x0, 0x1);
        gbc.writeMem(0x36d0, { 0x66 });
        gbc.writeMem(0xfa05, { 0x56 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0x36d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xfa05));
        // 66 031F
        gbc.setState(0x33f8, 0xbb19, 0xcf30, 0x2c30, 0xd681, 0x3a7d, 0x1, 0x0);
        gbc.writeMem(0x33f8, { 0x66 });
        gbc.writeMem(0x3a7d, { 0x30 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbb19, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0320
        gbc.setState(0x779e, 0x3e9a, 0xd740, 0x7eb7, 0x8f8b, 0x3bfa, 0x1, 0x0);
        gbc.writeMem(0x3bfa, { 0x75 });
        gbc.writeMem(0x779e, { 0x66 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0321
        gbc.setState(0xa822, 0xec35, 0xfc00, 0xf94b, 0xd689, 0x9412, 0x0, 0x0);
        gbc.writeMem(0x9412, { 0xff });
        gbc.writeMem(0xa822, { 0x66 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9412));
        EXPECT(0x66, gbc.readMem(0xa822));
        // 66 0322
        gbc.setState(0xec71, 0x527c, 0x7100, 0x3151, 0xedff, 0x2b0a, 0x1, 0x1);
        gbc.writeMem(0x2b0a, { 0x6c });
        gbc.writeMem(0xec71, { 0x66 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0xec72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec71));
        // 66 0323
        gbc.setState(0xa6f6, 0x4ad8, 0x5210, 0x4fab, 0x6b9a, 0x713e, 0x1, 0x1);
        gbc.writeMem(0x713e, { 0xb4 });
        gbc.writeMem(0xa6f6, { 0x66 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0xa6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa6f6));
        // 66 0324
        gbc.setState(0x9760, 0xac4f, 0x1b00, 0x95b0, 0xff09, 0xce3, 0x1, 0x0);
        gbc.writeMem(0xce3, { 0xd3 });
        gbc.writeMem(0x9760, { 0x66 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x9761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9760));
        // 66 0327
        gbc.setState(0x6092, 0xbef8, 0x9d40, 0x3bcb, 0xa145, 0x4e37, 0x1, 0x1);
        gbc.writeMem(0x4e37, { 0x77 });
        gbc.writeMem(0x6092, { 0x66 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0x6093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0328
        gbc.setState(0x6a5b, 0x67b4, 0xc570, 0x1c60, 0x6699, 0x305f, 0x0, 0x1);
        gbc.writeMem(0x305f, { 0x9c });
        gbc.writeMem(0x6a5b, { 0x66 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x67b4, gbc.sp());
        EXPECT(0x6a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0329
        gbc.setState(0x7dae, 0xb13b, 0xe980, 0x36ef, 0xbf02, 0xb044, 0x1, 0x0);
        gbc.writeMem(0x7dae, { 0x66 });
        gbc.writeMem(0xb044, { 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb13b, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb044));
        // 66 032A
        gbc.setState(0xc23d, 0x6c6, 0x6270, 0x3d07, 0x63d6, 0xe7d4, 0x0, 0x1);
        gbc.writeMem(0xc23d, { 0x66 });
        gbc.writeMem(0xe7d4, { 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6c6, gbc.sp());
        EXPECT(0xc23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc23d));
        EXPECT(0xd0, gbc.readMem(0xe7d4));
        // 66 032B
        gbc.setState(0x3d4d, 0x8149, 0xa200, 0xe629, 0x7428, 0xfa0, 0x0, 0x1);
        gbc.writeMem(0xfa0, { 0x2a });
        gbc.writeMem(0x3d4d, { 0x66 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 032C
        gbc.setState(0x1b64, 0xd25b, 0x88c0, 0xb9fe, 0xeee1, 0x3738, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0x66 });
        gbc.writeMem(0x3738, { 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd25b, gbc.sp());
        EXPECT(0x1b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 032D
        gbc.setState(0x91ef, 0x6f8f, 0xdfa0, 0x807e, 0x650, 0x715d, 0x1, 0x1);
        gbc.writeMem(0x715d, { 0x7e });
        gbc.writeMem(0x91ef, { 0x66 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6f8f, gbc.sp());
        EXPECT(0x91f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x91ef));
        // 66 032E
        gbc.setState(0xdf68, 0x5fba, 0xa270, 0x24cd, 0xe4d9, 0x731d, 0x1, 0x0);
        gbc.writeMem(0x731d, { 0x33 });
        gbc.writeMem(0xdf68, { 0x66 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5fba, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdf68));
        // 66 032F
        gbc.setState(0x596, 0x94d9, 0x3ea0, 0xf32f, 0x4faa, 0x5fec, 0x0, 0x1);
        gbc.writeMem(0x596, { 0x66 });
        gbc.writeMem(0x5fec, { 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x94d9, gbc.sp());
        EXPECT(0x597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0330
        gbc.setState(0x9995, 0x6ae1, 0xede0, 0xe045, 0x23d7, 0x936, 0x0, 0x1);
        gbc.writeMem(0x936, { 0x1d });
        gbc.writeMem(0x9995, { 0x66 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6ae1, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9995));
        // 66 0331
        gbc.setState(0x911a, 0xdb4a, 0x1100, 0xfa68, 0x99ca, 0x1a75, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0x1a });
        gbc.writeMem(0x911a, { 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x911a));
        // 66 0332
        gbc.setState(0x70cf, 0x29f4, 0xc670, 0xa1fd, 0xc8b0, 0xa25a, 0x1, 0x0);
        gbc.writeMem(0x70cf, { 0x66 });
        gbc.writeMem(0xa25a, { 0x40 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x29f4, gbc.sp());
        EXPECT(0x70d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa25a));
        // 66 0333
        gbc.setState(0x5672, 0xc555, 0xd370, 0xe9a9, 0xbe5b, 0x8569, 0x0, 0x0);
        gbc.writeMem(0x5672, { 0x66 });
        gbc.writeMem(0x8569, { 0x59 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc555, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8569));
        // 66 0334
        gbc.setState(0x899d, 0x804a, 0x9180, 0x48d3, 0x6718, 0xb7b1, 0x1, 0x0);
        gbc.writeMem(0x899d, { 0x66 });
        gbc.writeMem(0xb7b1, { 0xde });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x899d));
        EXPECT(0xde, gbc.readMem(0xb7b1));
        // 66 0335
        gbc.setState(0xaf2d, 0xaa51, 0x1630, 0x638f, 0x66be, 0x4564, 0x1, 0x0);
        gbc.writeMem(0x4564, { 0x3c });
        gbc.writeMem(0xaf2d, { 0x66 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0xaf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaf2d));
        // 66 0336
        gbc.setState(0xabbf, 0x8ad, 0x9f90, 0x656d, 0x9eaf, 0x24dc, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0x7b });
        gbc.writeMem(0xabbf, { 0x66 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8ad, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xabbf));
        // 66 0337
        gbc.setState(0x5304, 0xbace, 0x1820, 0x5c49, 0x1f9e, 0x410a, 0x0, 0x0);
        gbc.writeMem(0x410a, { 0x14 });
        gbc.writeMem(0x5304, { 0x66 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0338
        gbc.setState(0x4d26, 0xd229, 0x1ce0, 0x68d0, 0xf4a7, 0xf9d6, 0x1, 0x1);
        gbc.writeMem(0x4d26, { 0x66 });
        gbc.writeMem(0xf9d6, { 0x91 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x4d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf9d6));
        // 66 0339
        gbc.setState(0x7afb, 0xd4d2, 0x2a20, 0xa559, 0x1df0, 0xa03d, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0x66 });
        gbc.writeMem(0xa03d, { 0xa1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4d2, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa03d));
        // 66 033A
        gbc.setState(0x2f21, 0xa19a, 0x36f0, 0xcbb0, 0xf517, 0xbef, 0x1, 0x0);
        gbc.writeMem(0xbef, { 0xad });
        gbc.writeMem(0x2f21, { 0x66 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x2f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 033B
        gbc.setState(0xd795, 0xeec2, 0x3a10, 0x161c, 0xc7bb, 0xf884, 0x0, 0x0);
        gbc.writeMem(0xd795, { 0x66 });
        gbc.writeMem(0xf884, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0xd796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd795));
        EXPECT(0x94, gbc.readMem(0xf884));
        // 66 033D
        gbc.setState(0xaf34, 0x390, 0x5d00, 0xf54d, 0xe2d5, 0x4283, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0x8e });
        gbc.writeMem(0xaf34, { 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0xaf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaf34));
        // 66 033E
        gbc.setState(0x7411, 0x9720, 0xc270, 0x32c, 0x591d, 0x2df6, 0x0, 0x1);
        gbc.writeMem(0x2df6, { 0x31 });
        gbc.writeMem(0x7411, { 0x66 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9720, gbc.sp());
        EXPECT(0x7412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 033F
        gbc.setState(0x26d, 0x6db, 0x2f50, 0x2aa4, 0x862a, 0x3fb4, 0x0, 0x1);
        gbc.writeMem(0x26d, { 0x66 });
        gbc.writeMem(0x3fb4, { 0x5f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6db, gbc.sp());
        EXPECT(0x26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0340
        gbc.setState(0x4b03, 0xf11d, 0x2870, 0x36de, 0x45d3, 0x804c, 0x0, 0x0);
        gbc.writeMem(0x4b03, { 0x66 });
        gbc.writeMem(0x804c, { 0xdd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf11d, gbc.sp());
        EXPECT(0x4b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x804c));
        // 66 0341
        gbc.setState(0x883b, 0x2922, 0xfe50, 0xc00a, 0xf9d0, 0xbe14, 0x0, 0x0);
        gbc.writeMem(0x883b, { 0x66 });
        gbc.writeMem(0xbe14, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2922, gbc.sp());
        EXPECT(0x883c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x883b));
        EXPECT(0xb2, gbc.readMem(0xbe14));
        // 66 0342
        gbc.setState(0x26f0, 0x2f50, 0xac60, 0x9f3a, 0xf77a, 0xe675, 0x1, 0x0);
        gbc.writeMem(0x26f0, { 0x66 });
        gbc.writeMem(0xe675, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0x26f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe675));
        // 66 0343
        gbc.setState(0x27fb, 0x464b, 0xe400, 0x22bd, 0x696a, 0xc0f, 0x1, 0x0);
        gbc.writeMem(0xc0f, { 0xe0 });
        gbc.writeMem(0x27fb, { 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x464b, gbc.sp());
        EXPECT(0x27fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0344
        gbc.setState(0x807, 0xf9a8, 0x2180, 0xb15a, 0xda99, 0x6a8, 0x0, 0x0);
        gbc.writeMem(0x6a8, { 0x30 });
        gbc.writeMem(0x807, { 0x66 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0345
        gbc.setState(0xe298, 0xb70e, 0x6af0, 0x660b, 0x6a85, 0x5051, 0x0, 0x0);
        gbc.writeMem(0x5051, { 0xe0 });
        gbc.writeMem(0xe298, { 0x66 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb70e, gbc.sp());
        EXPECT(0xe299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xe298));
        // 66 0346
        gbc.setState(0xacf2, 0x578e, 0x6fb0, 0xc769, 0xc538, 0xe833, 0x0, 0x0);
        gbc.writeMem(0xacf2, { 0x66 });
        gbc.writeMem(0xe833, { 0xbc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xacf2));
        EXPECT(0xbc, gbc.readMem(0xe833));
        // 66 0347
        gbc.setState(0xdd48, 0x4d9e, 0x9f10, 0x9378, 0x9278, 0xe40b, 0x0, 0x1);
        gbc.writeMem(0xdd48, { 0x66 });
        gbc.writeMem(0xe40b, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4d9e, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdd48));
        EXPECT(0x4d, gbc.readMem(0xe40b));
        // 66 0348
        gbc.setState(0x6948, 0x5547, 0x6ab0, 0xe592, 0x34cd, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0x6948, { 0x66 });
        gbc.writeMem(0xdd4c, { 0x16 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5547, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdd4c));
        // 66 0349
        gbc.setState(0xd5e9, 0x19d6, 0x7570, 0xf5f6, 0x656f, 0x844c, 0x1, 0x1);
        gbc.writeMem(0x844c, { 0x99 });
        gbc.writeMem(0xd5e9, { 0x66 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x19d6, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x844c));
        EXPECT(0x66, gbc.readMem(0xd5e9));
        // 66 034A
        gbc.setState(0x20e4, 0x9ae7, 0x1db0, 0x1124, 0x6832, 0x1baf, 0x1, 0x0);
        gbc.writeMem(0x1baf, { 0x9c });
        gbc.writeMem(0x20e4, { 0x66 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ae7, gbc.sp());
        EXPECT(0x20e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 034B
        gbc.setState(0xc312, 0x8011, 0x9ca0, 0xee49, 0x1389, 0x26ce, 0x1, 0x0);
        gbc.writeMem(0x26ce, { 0x7e });
        gbc.writeMem(0xc312, { 0x66 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0xc313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc312));
        // 66 034C
        gbc.setState(0xd548, 0xfa94, 0x6480, 0xf4ed, 0x6499, 0x3e90, 0x0, 0x0);
        gbc.writeMem(0x3e90, { 0xa0 });
        gbc.writeMem(0xd548, { 0x66 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0xd549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd548));
        // 66 034D
        gbc.setState(0xdfb9, 0x29bf, 0x7060, 0x1040, 0xd539, 0xb823, 0x1, 0x0);
        gbc.writeMem(0xb823, { 0x38 });
        gbc.writeMem(0xdfb9, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb823));
        EXPECT(0x66, gbc.readMem(0xdfb9));
        // 66 034E
        gbc.setState(0x235a, 0xb696, 0x8ed0, 0xed9f, 0xe08d, 0xb6cc, 0x1, 0x1);
        gbc.writeMem(0x235a, { 0x66 });
        gbc.writeMem(0xb6cc, { 0x8d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb696, gbc.sp());
        EXPECT(0x235b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb6cc));
        // 66 034F
        gbc.setState(0x55ac, 0x8e7a, 0xccc0, 0x5504, 0xfebb, 0xbcc8, 0x1, 0x1);
        gbc.writeMem(0x55ac, { 0x66 });
        gbc.writeMem(0xbcc8, { 0xf9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8e7a, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xbcc8));
        // 66 0350
        gbc.setState(0xd166, 0x6c65, 0x2fe0, 0x1b24, 0xaea, 0x764, 0x1, 0x0);
        gbc.writeMem(0x764, { 0xfb });
        gbc.writeMem(0xd166, { 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0xd167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd166));
        // 66 0351
        gbc.setState(0x4769, 0x4d7f, 0x2780, 0xd9c9, 0xde3b, 0x56df, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0x66 });
        gbc.writeMem(0x56df, { 0xca });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0352
        gbc.setState(0xb167, 0x6c52, 0x9ed0, 0xa254, 0x5c3, 0xb9f8, 0x1, 0x1);
        gbc.writeMem(0xb167, { 0x66 });
        gbc.writeMem(0xb9f8, { 0x5e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0xb168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb167));
        EXPECT(0x5e, gbc.readMem(0xb9f8));
        // 66 0353
        gbc.setState(0xe8fd, 0x8caa, 0xe950, 0x21ee, 0xa7db, 0xbf08, 0x1, 0x1);
        gbc.writeMem(0xbf08, { 0xa6 });
        gbc.writeMem(0xe8fd, { 0x66 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8caa, gbc.sp());
        EXPECT(0xe8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf08));
        EXPECT(0x66, gbc.readMem(0xe8fd));
        // 66 0354
        gbc.setState(0x6f6d, 0xb241, 0x2160, 0xb4a2, 0xea93, 0x8808, 0x0, 0x0);
        gbc.writeMem(0x6f6d, { 0x66 });
        gbc.writeMem(0x8808, { 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb241, gbc.sp());
        EXPECT(0x6f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8808));
        // 66 0355
        gbc.setState(0xa764, 0xea37, 0x6330, 0xcc7, 0xa8c, 0x22d4, 0x0, 0x0);
        gbc.writeMem(0x22d4, { 0xaa });
        gbc.writeMem(0xa764, { 0x66 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa764));
        // 66 0356
        gbc.setState(0x12ee, 0x16d1, 0x8840, 0xced1, 0xd27b, 0xf214, 0x1, 0x1);
        gbc.writeMem(0x12ee, { 0x66 });
        gbc.writeMem(0xf214, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x16d1, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf214));
        // 66 0357
        gbc.setState(0x26fd, 0x468e, 0xdc20, 0x8d57, 0x6073, 0x1971, 0x0, 0x1);
        gbc.writeMem(0x1971, { 0x58 });
        gbc.writeMem(0x26fd, { 0x66 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0x26fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0358
        gbc.setState(0x9b62, 0x1af5, 0x45b0, 0x65da, 0xf63b, 0xe59f, 0x0, 0x0);
        gbc.writeMem(0x9b62, { 0x66 });
        gbc.writeMem(0xe59f, { 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1af5, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9b62));
        EXPECT(0x1a, gbc.readMem(0xe59f));
        // 66 0359
        gbc.setState(0xa018, 0x3259, 0x20e0, 0x8be2, 0xbe07, 0xb815, 0x0, 0x0);
        gbc.writeMem(0xa018, { 0x66 });
        gbc.writeMem(0xb815, { 0x54 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0xa019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa018));
        EXPECT(0x54, gbc.readMem(0xb815));
        // 66 035A
        gbc.setState(0x4afa, 0x8c50, 0x8160, 0x9767, 0x5011, 0x41b4, 0x1, 0x0);
        gbc.writeMem(0x41b4, { 0xe4 });
        gbc.writeMem(0x4afa, { 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 035B
        gbc.setState(0x8034, 0xf023, 0x3800, 0x6359, 0x847, 0xa0fd, 0x1, 0x0);
        gbc.writeMem(0x8034, { 0x66 });
        gbc.writeMem(0xa0fd, { 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8034));
        EXPECT(0x72, gbc.readMem(0xa0fd));
        // 66 035C
        gbc.setState(0x1cd6, 0x72b4, 0xd2a0, 0xcfc, 0x5f4b, 0x4a20, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0x66 });
        gbc.writeMem(0x4a20, { 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 035D
        gbc.setState(0x481c, 0x8361, 0xb250, 0x2d26, 0xa829, 0x6e12, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0x66 });
        gbc.writeMem(0x6e12, { 0x82 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8361, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 035E
        gbc.setState(0x28cd, 0xf23c, 0xd650, 0xab3a, 0x97a9, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0x66 });
        gbc.writeMem(0x8f6d, { 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f6d));
        // 66 035F
        gbc.setState(0x2dd6, 0x6038, 0x3a80, 0xdb89, 0x143d, 0x5159, 0x0, 0x0);
        gbc.writeMem(0x2dd6, { 0x66 });
        gbc.writeMem(0x5159, { 0xd6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0x2dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0360
        gbc.setState(0x2432, 0x31c, 0x66d0, 0x7f46, 0x4f86, 0x88a5, 0x0, 0x0);
        gbc.writeMem(0x2432, { 0x66 });
        gbc.writeMem(0x88a5, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x31c, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x88a5));
        // 66 0361
        gbc.setState(0x98aa, 0xbf4, 0x84b0, 0x13ea, 0xc450, 0x7cab, 0x0, 0x0);
        gbc.writeMem(0x7cab, { 0x65 });
        gbc.writeMem(0x98aa, { 0x66 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbf4, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x98aa));
        // 66 0362
        gbc.setState(0xc6e, 0x16ca, 0xf1c0, 0xd52d, 0x4c53, 0x8d12, 0x0, 0x0);
        gbc.writeMem(0xc6e, { 0x66 });
        gbc.writeMem(0x8d12, { 0x31 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x16ca, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8d12));
        // 66 0363
        gbc.setState(0x8a1, 0x9260, 0x2230, 0x36ef, 0x8ee3, 0x5440, 0x1, 0x0);
        gbc.writeMem(0x8a1, { 0x66 });
        gbc.writeMem(0x5440, { 0xb4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0x8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0364
        gbc.setState(0xefe8, 0x4a59, 0xf2f0, 0x201, 0x1c70, 0x7a70, 0x0, 0x1);
        gbc.writeMem(0x7a70, { 0x71 });
        gbc.writeMem(0xefe8, { 0x66 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4a59, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xefe8));
        // 66 0365
        gbc.setState(0x330c, 0x754f, 0xbe40, 0x75b3, 0xd9c3, 0xf546, 0x1, 0x0);
        gbc.writeMem(0x330c, { 0x66 });
        gbc.writeMem(0xf546, { 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0x330d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xf546));
        // 66 0366
        gbc.setState(0xea1e, 0x3ab4, 0xf000, 0x1220, 0x7ff6, 0x977, 0x1, 0x0);
        gbc.writeMem(0x977, { 0xb1 });
        gbc.writeMem(0xea1e, { 0x66 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0xea1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xea1e));
        // 66 0367
        gbc.setState(0x2bd2, 0x4f51, 0xc320, 0x3a77, 0x7c97, 0x66b1, 0x0, 0x0);
        gbc.writeMem(0x2bd2, { 0x66 });
        gbc.writeMem(0x66b1, { 0xc4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4f51, gbc.sp());
        EXPECT(0x2bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0368
        gbc.setState(0x20d3, 0x9591, 0x9ee0, 0xdb69, 0x26c9, 0xf87, 0x1, 0x1);
        gbc.writeMem(0xf87, { 0x66 });
        gbc.writeMem(0x20d3, { 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9591, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0369
        gbc.setState(0x3650, 0xe1d6, 0xb0a0, 0xff43, 0xf8dd, 0x69b5, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0x66 });
        gbc.writeMem(0x69b5, { 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe1d6, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 036A
        gbc.setState(0xac05, 0xea3f, 0xdc90, 0x4b0c, 0xfce0, 0x9de3, 0x0, 0x1);
        gbc.writeMem(0x9de3, { 0x92 });
        gbc.writeMem(0xac05, { 0x66 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xea3f, gbc.sp());
        EXPECT(0xac06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9de3));
        EXPECT(0x66, gbc.readMem(0xac05));
        // 66 036B
        gbc.setState(0x3808, 0x12a4, 0x8a50, 0x65b4, 0x9727, 0xfad9, 0x0, 0x0);
        gbc.writeMem(0x3808, { 0x66 });
        gbc.writeMem(0xfad9, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xfad9));
        // 66 036C
        gbc.setState(0xcaf7, 0x4ec1, 0x7000, 0x4402, 0xe03e, 0xa1f4, 0x1, 0x1);
        gbc.writeMem(0xa1f4, { 0xcb });
        gbc.writeMem(0xcaf7, { 0x66 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0xcaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f4));
        EXPECT(0x66, gbc.readMem(0xcaf7));
        // 66 036D
        gbc.setState(0xcbc9, 0xe602, 0x71b0, 0xbab5, 0x1a44, 0x596e, 0x1, 0x1);
        gbc.writeMem(0x596e, { 0xc1 });
        gbc.writeMem(0xcbc9, { 0x66 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe602, gbc.sp());
        EXPECT(0xcbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcbc9));
        // 66 036E
        gbc.setState(0xd889, 0xcb77, 0x92b0, 0xdc3d, 0xc978, 0x3b88, 0x0, 0x1);
        gbc.writeMem(0x3b88, { 0xae });
        gbc.writeMem(0xd889, { 0x66 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcb77, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd889));
        // 66 036F
        gbc.setState(0x5aee, 0x953, 0x3110, 0xfef5, 0x116, 0xb96a, 0x1, 0x0);
        gbc.writeMem(0x5aee, { 0x66 });
        gbc.writeMem(0xb96a, { 0x75 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x5aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb96a));
        // 66 0370
        gbc.setState(0x1676, 0xef6b, 0xa450, 0x3860, 0xd0ad, 0x3108, 0x0, 0x0);
        gbc.writeMem(0x1676, { 0x66 });
        gbc.writeMem(0x3108, { 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xef6b, gbc.sp());
        EXPECT(0x1677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0371
        gbc.setState(0x8fd9, 0xa735, 0x5b20, 0xaba5, 0x2b02, 0x44ff, 0x1, 0x0);
        gbc.writeMem(0x44ff, { 0xd2 });
        gbc.writeMem(0x8fd9, { 0x66 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa735, gbc.sp());
        EXPECT(0x8fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8fd9));
        // 66 0372
        gbc.setState(0x8311, 0xcf76, 0x9130, 0x30fd, 0xd87c, 0xaf51, 0x0, 0x1);
        gbc.writeMem(0x8311, { 0x66 });
        gbc.writeMem(0xaf51, { 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcf76, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8311));
        EXPECT(0xff, gbc.readMem(0xaf51));
        // 66 0373
        gbc.setState(0xaa9b, 0x2bf0, 0xcbb0, 0x5327, 0x18e1, 0x9673, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xbb });
        gbc.writeMem(0xaa9b, { 0x66 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9673));
        EXPECT(0x66, gbc.readMem(0xaa9b));
        // 66 0374
        gbc.setState(0x9e79, 0xd529, 0x5890, 0xa154, 0x3a37, 0x219e, 0x1, 0x0);
        gbc.writeMem(0x219e, { 0x5 });
        gbc.writeMem(0x9e79, { 0x66 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd529, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9e79));
        // 66 0376
        gbc.setState(0x72a1, 0x3426, 0xe0, 0xbf29, 0x140e, 0xd931, 0x1, 0x1);
        gbc.writeMem(0x72a1, { 0x66 });
        gbc.writeMem(0xd931, { 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x72a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xd931));
        // 66 0377
        gbc.setState(0x8e0f, 0x4a23, 0xb440, 0x815f, 0xcfe7, 0x2919, 0x1, 0x1);
        gbc.writeMem(0x2919, { 0xd3 });
        gbc.writeMem(0x8e0f, { 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a23, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8e0f));
        // 66 0378
        gbc.setState(0x9f12, 0x2069, 0xc370, 0x33c5, 0xae6a, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0x91c3, { 0x23 });
        gbc.writeMem(0x9f12, { 0x66 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2069, gbc.sp());
        EXPECT(0x9f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x91c3));
        EXPECT(0x66, gbc.readMem(0x9f12));
        // 66 0379
        gbc.setState(0xbc4a, 0x7bb1, 0xb5b0, 0x2cec, 0xa025, 0x911d, 0x0, 0x1);
        gbc.writeMem(0x911d, { 0xdd });
        gbc.writeMem(0xbc4a, { 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7bb1, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x911d));
        EXPECT(0x66, gbc.readMem(0xbc4a));
        // 66 037A
        gbc.setState(0x9cce, 0x2363, 0x5a90, 0x9c84, 0xdb37, 0xe319, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0x66 });
        gbc.writeMem(0xe319, { 0x36 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9cce));
        EXPECT(0x36, gbc.readMem(0xe319));
        // 66 037B
        gbc.setState(0x9ef5, 0x50d8, 0xb920, 0xee16, 0x3914, 0x50b0, 0x1, 0x0);
        gbc.writeMem(0x50b0, { 0xfa });
        gbc.writeMem(0x9ef5, { 0x66 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x50d8, gbc.sp());
        EXPECT(0x9ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ef5));
        // 66 037C
        gbc.setState(0x39ea, 0xacf, 0xdb20, 0x74b1, 0x7e44, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0x39ea, { 0x66 });
        gbc.writeMem(0xb91c, { 0x17 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xacf, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb91c));
        // 66 037D
        gbc.setState(0x44d, 0x82e3, 0x4a30, 0x4792, 0x57b1, 0x7f85, 0x1, 0x1);
        gbc.writeMem(0x44d, { 0x66 });
        gbc.writeMem(0x7f85, { 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x82e3, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 037E
        gbc.setState(0x342b, 0x6276, 0x7eb0, 0x11ad, 0x6f3a, 0xb646, 0x1, 0x0);
        gbc.writeMem(0x342b, { 0x66 });
        gbc.writeMem(0xb646, { 0x82 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6276, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb646));
        // 66 037F
        gbc.setState(0x488a, 0x999d, 0xc4e0, 0x6adc, 0xccd, 0xcfbf, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0x66 });
        gbc.writeMem(0xcfbf, { 0x35 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x488b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcfbf));
        // 66 0381
        gbc.setState(0x14a5, 0xc31, 0xd780, 0x14ee, 0x6799, 0x2436, 0x0, 0x0);
        gbc.writeMem(0x14a5, { 0x66 });
        gbc.writeMem(0x2436, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc31, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0382
        gbc.setState(0x6bdf, 0x3174, 0xb490, 0x9caa, 0xe3e2, 0x1f0d, 0x0, 0x0);
        gbc.writeMem(0x1f0d, { 0xf5 });
        gbc.writeMem(0x6bdf, { 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0x6be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0384
        gbc.setState(0xd820, 0xea2f, 0x9510, 0xb5db, 0x5b20, 0x6a7, 0x0, 0x1);
        gbc.writeMem(0x6a7, { 0x2f });
        gbc.writeMem(0xd820, { 0x66 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd820));
        // 66 0385
        gbc.setState(0x37d7, 0x8a3, 0xae70, 0x83e1, 0xde6d, 0x459e, 0x1, 0x0);
        gbc.writeMem(0x37d7, { 0x66 });
        gbc.writeMem(0x459e, { 0xb6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8a3, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0386
        gbc.setState(0x2066, 0x15ac, 0x9ce0, 0x7b8a, 0xf986, 0x33fe, 0x0, 0x1);
        gbc.writeMem(0x2066, { 0x66 });
        gbc.writeMem(0x33fe, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x15ac, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0387
        gbc.setState(0x900b, 0x8b52, 0x9240, 0x581a, 0x6c43, 0xcc10, 0x0, 0x1);
        gbc.writeMem(0x900b, { 0x66 });
        gbc.writeMem(0xcc10, { 0x5f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b52, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x900b));
        EXPECT(0x5f, gbc.readMem(0xcc10));
        // 66 0388
        gbc.setState(0xc149, 0x17bd, 0x86a0, 0xcac7, 0x1543, 0x2d1d, 0x1, 0x0);
        gbc.writeMem(0x2d1d, { 0x51 });
        gbc.writeMem(0xc149, { 0x66 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc149));
        // 66 0389
        gbc.setState(0x30c7, 0x9403, 0x2410, 0x89a6, 0x247f, 0x2394, 0x1, 0x0);
        gbc.writeMem(0x2394, { 0x3 });
        gbc.writeMem(0x30c7, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 038A
        gbc.setState(0xd1d, 0x15bc, 0xb170, 0x8221, 0x443f, 0x9f97, 0x1, 0x1);
        gbc.writeMem(0xd1d, { 0x66 });
        gbc.writeMem(0x9f97, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x15bc, gbc.sp());
        EXPECT(0xd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9f97));
        // 66 038B
        gbc.setState(0xa91d, 0x6975, 0xd870, 0x3c96, 0x8573, 0xd3a0, 0x1, 0x1);
        gbc.writeMem(0xa91d, { 0x66 });
        gbc.writeMem(0xd3a0, { 0x69 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa91d));
        EXPECT(0x69, gbc.readMem(0xd3a0));
        // 66 038C
        gbc.setState(0x7e4, 0x3381, 0xb4b0, 0x3e11, 0xd6ec, 0x5379, 0x0, 0x1);
        gbc.writeMem(0x7e4, { 0x66 });
        gbc.writeMem(0x5379, { 0x5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3381, gbc.sp());
        EXPECT(0x7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 038D
        gbc.setState(0xa6e7, 0x28b7, 0x9040, 0xed44, 0x5a30, 0xd057, 0x1, 0x0);
        gbc.writeMem(0xa6e7, { 0x66 });
        gbc.writeMem(0xd057, { 0x68 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x28b7, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa6e7));
        EXPECT(0x68, gbc.readMem(0xd057));
        // 66 038E
        gbc.setState(0xafca, 0x4abd, 0x2400, 0xe69, 0x2720, 0x4149, 0x1, 0x1);
        gbc.writeMem(0x4149, { 0x45 });
        gbc.writeMem(0xafca, { 0x66 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xafca));
        // 66 038F
        gbc.setState(0x7de5, 0xb241, 0x7db0, 0x1b87, 0x285, 0x28cc, 0x1, 0x1);
        gbc.writeMem(0x28cc, { 0x86 });
        gbc.writeMem(0x7de5, { 0x66 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb241, gbc.sp());
        EXPECT(0x7de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 0390
        gbc.setState(0x257a, 0x8478, 0x5a70, 0x9be2, 0x4fcd, 0xb400, 0x0, 0x1);
        gbc.writeMem(0x257a, { 0x66 });
        gbc.writeMem(0xb400, { 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8478, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb400));
        // 66 0391
        gbc.setState(0x8a78, 0x3799, 0xcb40, 0x14f9, 0x5773, 0xce6, 0x0, 0x0);
        gbc.writeMem(0xce6, { 0x30 });
        gbc.writeMem(0x8a78, { 0x66 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3799, gbc.sp());
        EXPECT(0x8a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a78));
        // 66 0392
        gbc.setState(0x99b6, 0xbf4d, 0x4ab0, 0x2cf6, 0x505b, 0xdb34, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0x66 });
        gbc.writeMem(0xdb34, { 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbf4d, gbc.sp());
        EXPECT(0x99b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x99b6));
        EXPECT(0x61, gbc.readMem(0xdb34));
        // 66 0393
        gbc.setState(0x5961, 0x370, 0x6740, 0x3c40, 0x5dd8, 0xbccd, 0x0, 0x1);
        gbc.writeMem(0x5961, { 0x66 });
        gbc.writeMem(0xbccd, { 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0x5962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbccd));
        // 66 0394
        gbc.setState(0x639, 0x7617, 0x33a0, 0x9228, 0x13bc, 0x2bc5, 0x1, 0x1);
        gbc.writeMem(0x639, { 0x66 });
        gbc.writeMem(0x2bc5, { 0x11 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 0396
        gbc.setState(0x4f8d, 0x46d5, 0x8b60, 0x7b65, 0xc71c, 0xa3a8, 0x1, 0x0);
        gbc.writeMem(0x4f8d, { 0x66 });
        gbc.writeMem(0xa3a8, { 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x46d5, gbc.sp());
        EXPECT(0x4f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa3a8));
        // 66 0397
        gbc.setState(0xd9de, 0xbee7, 0xde20, 0x4f9a, 0xb36f, 0x526b, 0x1, 0x0);
        gbc.writeMem(0x526b, { 0x1e });
        gbc.writeMem(0xd9de, { 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd9de));
        // 66 0398
        gbc.setState(0x8937, 0xb63, 0x1ad0, 0xacb3, 0x4d21, 0x2ac4, 0x0, 0x0);
        gbc.writeMem(0x2ac4, { 0x13 });
        gbc.writeMem(0x8937, { 0x66 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x8938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8937));
        // 66 0399
        gbc.setState(0xd329, 0x647c, 0xf670, 0xa49, 0x6094, 0x1f1c, 0x0, 0x0);
        gbc.writeMem(0x1f1c, { 0x2f });
        gbc.writeMem(0xd329, { 0x66 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd329));
        // 66 039A
        gbc.setState(0x15fb, 0xbf11, 0xd060, 0x8313, 0xdb17, 0x7821, 0x1, 0x0);
        gbc.writeMem(0x15fb, { 0x66 });
        gbc.writeMem(0x7821, { 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbf11, gbc.sp());
        EXPECT(0x15fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 039B
        gbc.setState(0xaaf, 0x8806, 0x3790, 0x91c8, 0x65ec, 0xa6d0, 0x0, 0x0);
        gbc.writeMem(0xaaf, { 0x66 });
        gbc.writeMem(0xa6d0, { 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8806, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa6d0));
        // 66 039D
        gbc.setState(0x8295, 0x426a, 0xc260, 0x4b9b, 0xc839, 0x1e21, 0x0, 0x1);
        gbc.writeMem(0x1e21, { 0x5e });
        gbc.writeMem(0x8295, { 0x66 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x426a, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8295));
        // 66 039E
        gbc.setState(0x7421, 0x4571, 0x1650, 0x351d, 0xdcfa, 0x35bb, 0x0, 0x0);
        gbc.writeMem(0x35bb, { 0xfa });
        gbc.writeMem(0x7421, { 0x66 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4571, gbc.sp());
        EXPECT(0x7422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 039F
        gbc.setState(0x1dba, 0x764e, 0x8c0, 0x2500, 0x8052, 0x6d08, 0x0, 0x0);
        gbc.writeMem(0x1dba, { 0x66 });
        gbc.writeMem(0x6d08, { 0xd1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x1dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03A0
        gbc.setState(0xdc81, 0x398d, 0xbe50, 0xe943, 0xc7cd, 0x54f4, 0x1, 0x1);
        gbc.writeMem(0x54f4, { 0x99 });
        gbc.writeMem(0xdc81, { 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x398d, gbc.sp());
        EXPECT(0xdc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc81));
        // 66 03A1
        gbc.setState(0x59af, 0x397d, 0x93d0, 0xefc8, 0x741b, 0xc909, 0x0, 0x1);
        gbc.writeMem(0x59af, { 0x66 });
        gbc.writeMem(0xc909, { 0x3a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x59b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc909));
        // 66 03A2
        gbc.setState(0x7bcd, 0xb73d, 0xaf80, 0x5552, 0x6fb2, 0xd828, 0x1, 0x1);
        gbc.writeMem(0x7bcd, { 0x66 });
        gbc.writeMem(0xd828, { 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0x7bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd828));
        // 66 03A3
        gbc.setState(0xb5e0, 0xb7d6, 0xde60, 0x7b8b, 0xd527, 0xb2ce, 0x0, 0x1);
        gbc.writeMem(0xb2ce, { 0x9b });
        gbc.writeMem(0xb5e0, { 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb7d6, gbc.sp());
        EXPECT(0xb5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb2ce));
        EXPECT(0x66, gbc.readMem(0xb5e0));
        // 66 03A4
        gbc.setState(0xca7f, 0x503b, 0x3da0, 0xf6a3, 0xba75, 0xe162, 0x1, 0x1);
        gbc.writeMem(0xca7f, { 0x66 });
        gbc.writeMem(0xe162, { 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xca7f));
        EXPECT(0x2c, gbc.readMem(0xe162));
        // 66 03A5
        gbc.setState(0x3fb9, 0xda15, 0x54d0, 0x1006, 0x731, 0x3150, 0x0, 0x0);
        gbc.writeMem(0x3150, { 0x75 });
        gbc.writeMem(0x3fb9, { 0x66 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xda15, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03A6
        gbc.setState(0x37e5, 0xf439, 0x1af0, 0xf9ec, 0x89be, 0x6c11, 0x0, 0x1);
        gbc.writeMem(0x37e5, { 0x66 });
        gbc.writeMem(0x6c11, { 0x1c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03A7
        gbc.setState(0x723c, 0xf2ad, 0x6fb0, 0x2b13, 0x97b2, 0xc615, 0x0, 0x1);
        gbc.writeMem(0x723c, { 0x66 });
        gbc.writeMem(0xc615, { 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc615));
        // 66 03A8
        gbc.setState(0x9828, 0x5db8, 0x7aa0, 0x4f0a, 0x58cb, 0x507c, 0x1, 0x1);
        gbc.writeMem(0x507c, { 0x39 });
        gbc.writeMem(0x9828, { 0x66 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9828));
        // 66 03A9
        gbc.setState(0x5f8e, 0x74d8, 0xd680, 0xfa32, 0xefed, 0x831f, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0x66 });
        gbc.writeMem(0x831f, { 0xf2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x831f));
        // 66 03AA
        gbc.setState(0x8d3f, 0xb8a3, 0xe60, 0x5c94, 0x80a8, 0xda6a, 0x1, 0x0);
        gbc.writeMem(0x8d3f, { 0x66 });
        gbc.writeMem(0xda6a, { 0x2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb8a3, gbc.sp());
        EXPECT(0x8d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8d3f));
        EXPECT(0x2, gbc.readMem(0xda6a));
        // 66 03AB
        gbc.setState(0xb5d3, 0x7809, 0x4190, 0xe06a, 0x724a, 0x80d6, 0x1, 0x0);
        gbc.writeMem(0x80d6, { 0x93 });
        gbc.writeMem(0xb5d3, { 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0xb5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x80d6));
        EXPECT(0x66, gbc.readMem(0xb5d3));
        // 66 03AC
        gbc.setState(0xa993, 0x2a05, 0x86c0, 0x520a, 0xa659, 0xb843, 0x1, 0x1);
        gbc.writeMem(0xa993, { 0x66 });
        gbc.writeMem(0xb843, { 0xcf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa993));
        EXPECT(0xcf, gbc.readMem(0xb843));
        // 66 03AD
        gbc.setState(0x71bb, 0xd6e6, 0x5370, 0xe7d, 0x5e91, 0xbfdd, 0x0, 0x1);
        gbc.writeMem(0x71bb, { 0x66 });
        gbc.writeMem(0xbfdd, { 0x91 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd6e6, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfdd));
        // 66 03AE
        gbc.setState(0x633d, 0xc474, 0x9100, 0x9fc3, 0x20b7, 0x8afb, 0x0, 0x0);
        gbc.writeMem(0x633d, { 0x66 });
        gbc.writeMem(0x8afb, { 0xa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc474, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8afb));
        // 66 03AF
        gbc.setState(0x9eb4, 0x428, 0xaa30, 0x84a, 0x389, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0x9eb4, { 0x66 });
        gbc.writeMem(0xd42c, { 0xe7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0x9eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9eb4));
        EXPECT(0xe7, gbc.readMem(0xd42c));
        // 66 03B0
        gbc.setState(0x3a78, 0x6696, 0x2f50, 0xef99, 0xb4ae, 0x370, 0x1, 0x1);
        gbc.writeMem(0x370, { 0xdf });
        gbc.writeMem(0x3a78, { 0x66 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03B1
        gbc.setState(0x57b8, 0x7303, 0xd320, 0xd5ac, 0x6447, 0x65d1, 0x1, 0x0);
        gbc.writeMem(0x57b8, { 0x66 });
        gbc.writeMem(0x65d1, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03B2
        gbc.setState(0x4377, 0xace0, 0x3a20, 0x5375, 0xcde6, 0xb76c, 0x0, 0x1);
        gbc.writeMem(0x4377, { 0x66 });
        gbc.writeMem(0xb76c, { 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xace0, gbc.sp());
        EXPECT(0x4378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb76c));
        // 66 03B3
        gbc.setState(0xb436, 0xebcf, 0x8c70, 0x666b, 0xfc4b, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0x2af4, { 0xa0 });
        gbc.writeMem(0xb436, { 0x66 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0xb437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb436));
        // 66 03B4
        gbc.setState(0xa756, 0x7768, 0x22d0, 0x5dd8, 0x6f1, 0xac27, 0x1, 0x0);
        gbc.writeMem(0xa756, { 0x66 });
        gbc.writeMem(0xac27, { 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7768, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa756));
        EXPECT(0x97, gbc.readMem(0xac27));
        // 66 03B5
        gbc.setState(0xdf4a, 0xe9ff, 0x3ce0, 0x390b, 0x1ea, 0x7dea, 0x1, 0x0);
        gbc.writeMem(0x7dea, { 0x7f });
        gbc.writeMem(0xdf4a, { 0x66 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe9ff, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdf4a));
        // 66 03B6
        gbc.setState(0xc748, 0x53a5, 0xada0, 0xa1c8, 0x89b1, 0xe2cb, 0x1, 0x0);
        gbc.writeMem(0xc748, { 0x66 });
        gbc.writeMem(0xe2cb, { 0x23 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc748));
        EXPECT(0x23, gbc.readMem(0xe2cb));
        // 66 03B7
        gbc.setState(0x9461, 0x6fa7, 0x8ac0, 0x257, 0x6f02, 0x8003, 0x1, 0x0);
        gbc.writeMem(0x8003, { 0x23 });
        gbc.writeMem(0x9461, { 0x66 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6fa7, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8003));
        EXPECT(0x66, gbc.readMem(0x9461));
        // 66 03B8
        gbc.setState(0x7267, 0x7bc, 0x1f20, 0x80d4, 0x4449, 0xe852, 0x1, 0x1);
        gbc.writeMem(0x7267, { 0x66 });
        gbc.writeMem(0xe852, { 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7bc, gbc.sp());
        EXPECT(0x7268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe852));
        // 66 03B9
        gbc.setState(0x4a45, 0x8f54, 0x98f0, 0x4f4a, 0xa737, 0x6fef, 0x0, 0x0);
        gbc.writeMem(0x4a45, { 0x66 });
        gbc.writeMem(0x6fef, { 0xfe });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8f54, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03BA
        gbc.setState(0x302a, 0x1cb9, 0xa90, 0x4f3f, 0x4f2f, 0x1e90, 0x1, 0x0);
        gbc.writeMem(0x1e90, { 0x96 });
        gbc.writeMem(0x302a, { 0x66 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1cb9, gbc.sp());
        EXPECT(0x302b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03BB
        gbc.setState(0xacf1, 0xf2ac, 0x3c10, 0xf35b, 0xc36b, 0x59b3, 0x0, 0x1);
        gbc.writeMem(0x59b3, { 0x31 });
        gbc.writeMem(0xacf1, { 0x66 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf2ac, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xacf1));
        // 66 03BC
        gbc.setState(0xb283, 0xbccb, 0x9cc0, 0x8c30, 0xa9c6, 0xde41, 0x0, 0x1);
        gbc.writeMem(0xb283, { 0x66 });
        gbc.writeMem(0xde41, { 0x6c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbccb, gbc.sp());
        EXPECT(0xb284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb283));
        EXPECT(0x6c, gbc.readMem(0xde41));
        // 66 03BD
        gbc.setState(0x3125, 0xe2f1, 0x2a60, 0x25f, 0x7411, 0xc948, 0x1, 0x0);
        gbc.writeMem(0x3125, { 0x66 });
        gbc.writeMem(0xc948, { 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe2f1, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc948));
        // 66 03BE
        gbc.setState(0x32cd, 0xc151, 0x2d0, 0xd299, 0x6ec, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0x1dfc, { 0x26 });
        gbc.writeMem(0x32cd, { 0x66 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc151, gbc.sp());
        EXPECT(0x32ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03BF
        gbc.setState(0x5f0d, 0xfd05, 0x65c0, 0xca27, 0x8b87, 0x296f, 0x0, 0x1);
        gbc.writeMem(0x296f, { 0xca });
        gbc.writeMem(0x5f0d, { 0x66 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03C0
        gbc.setState(0xb619, 0x77f, 0x8050, 0x10f9, 0xf054, 0xde2b, 0x0, 0x0);
        gbc.writeMem(0xb619, { 0x66 });
        gbc.writeMem(0xde2b, { 0x58 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77f, gbc.sp());
        EXPECT(0xb61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb619));
        EXPECT(0x58, gbc.readMem(0xde2b));
        // 66 03C1
        gbc.setState(0xc99b, 0x4275, 0x6c50, 0xc0d7, 0xb408, 0x43ad, 0x0, 0x1);
        gbc.writeMem(0x43ad, { 0x83 });
        gbc.writeMem(0xc99b, { 0x66 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc99b));
        // 66 03C2
        gbc.setState(0x9b4f, 0x5c9d, 0x2f70, 0xf1c4, 0x33f3, 0xc3fd, 0x1, 0x0);
        gbc.writeMem(0x9b4f, { 0x66 });
        gbc.writeMem(0xc3fd, { 0x73 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5c9d, gbc.sp());
        EXPECT(0x9b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9b4f));
        EXPECT(0x73, gbc.readMem(0xc3fd));
        // 66 03C3
        gbc.setState(0x30c4, 0xf332, 0x17a0, 0x554a, 0xc732, 0x52c, 0x0, 0x0);
        gbc.writeMem(0x52c, { 0xaa });
        gbc.writeMem(0x30c4, { 0x66 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf332, gbc.sp());
        EXPECT(0x30c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03C4
        gbc.setState(0xd79f, 0xe136, 0xb0f0, 0xc094, 0x72d6, 0x90ea, 0x0, 0x1);
        gbc.writeMem(0x90ea, { 0x35 });
        gbc.writeMem(0xd79f, { 0x66 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe136, gbc.sp());
        EXPECT(0xd7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x90ea));
        EXPECT(0x66, gbc.readMem(0xd79f));
        // 66 03C6
        gbc.setState(0x25e6, 0x8e87, 0x3030, 0xf9, 0x35f7, 0xe01, 0x0, 0x1);
        gbc.writeMem(0xe01, { 0x53 });
        gbc.writeMem(0x25e6, { 0x66 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03C7
        gbc.setState(0xf41, 0x7148, 0x25f0, 0xa6d7, 0x58ed, 0x3716, 0x0, 0x1);
        gbc.writeMem(0xf41, { 0x66 });
        gbc.writeMem(0x3716, { 0x70 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03C8
        gbc.setState(0xad0f, 0x82b8, 0xf5b0, 0xceba, 0x6b7e, 0x49d4, 0x1, 0x0);
        gbc.writeMem(0x49d4, { 0xfa });
        gbc.writeMem(0xad0f, { 0x66 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0xad10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad0f));
        // 66 03C9
        gbc.setState(0xcd2e, 0xf50d, 0xdef0, 0x25e6, 0x9714, 0xe231, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0x66 });
        gbc.writeMem(0xe231, { 0xbe });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcd2e));
        EXPECT(0xbe, gbc.readMem(0xe231));
        // 66 03CA
        gbc.setState(0x3fdb, 0x80d9, 0x20e0, 0xa27a, 0x6022, 0x80e6, 0x0, 0x1);
        gbc.writeMem(0x3fdb, { 0x66 });
        gbc.writeMem(0x80e6, { 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x80d9, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80e6));
        // 66 03CB
        gbc.setState(0x3905, 0xb1db, 0x3bd0, 0xb070, 0xb09d, 0x3f2c, 0x1, 0x1);
        gbc.writeMem(0x3905, { 0x66 });
        gbc.writeMem(0x3f2c, { 0xa4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03CC
        gbc.setState(0x425, 0x5c45, 0x9d90, 0xb714, 0x18aa, 0x9044, 0x1, 0x1);
        gbc.writeMem(0x425, { 0x66 });
        gbc.writeMem(0x9044, { 0x82 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0x426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9044));
        // 66 03CD
        gbc.setState(0x95fa, 0x1ae3, 0x2640, 0x2c5, 0x8bb4, 0xca81, 0x0, 0x0);
        gbc.writeMem(0x95fa, { 0x66 });
        gbc.writeMem(0xca81, { 0x99 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0x95fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x95fa));
        EXPECT(0x99, gbc.readMem(0xca81));
        // 66 03CE
        gbc.setState(0x8a24, 0x8fc, 0xbe70, 0xee0b, 0x78a6, 0x51ea, 0x0, 0x0);
        gbc.writeMem(0x51ea, { 0x28 });
        gbc.writeMem(0x8a24, { 0x66 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8fc, gbc.sp());
        EXPECT(0x8a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a24));
        // 66 03CF
        gbc.setState(0xad29, 0xb027, 0xe3d0, 0x6b8e, 0x58d6, 0xe1a, 0x1, 0x1);
        gbc.writeMem(0xe1a, { 0x24 });
        gbc.writeMem(0xad29, { 0x66 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0xad2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xad29));
        // 66 03D0
        gbc.setState(0x285a, 0xcc85, 0x1fd0, 0x5a42, 0x93de, 0x2355, 0x1, 0x1);
        gbc.writeMem(0x2355, { 0x8d });
        gbc.writeMem(0x285a, { 0x66 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0x285b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03D1
        gbc.setState(0x36e7, 0x18da, 0x52c0, 0x5d58, 0x6c6f, 0xd217, 0x0, 0x1);
        gbc.writeMem(0x36e7, { 0x66 });
        gbc.writeMem(0xd217, { 0xcf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x18da, gbc.sp());
        EXPECT(0x36e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd217));
        // 66 03D2
        gbc.setState(0x5472, 0xac32, 0x19a0, 0x316a, 0x8172, 0x6c48, 0x0, 0x1);
        gbc.writeMem(0x5472, { 0x66 });
        gbc.writeMem(0x6c48, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x5473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03D3
        gbc.setState(0x8f18, 0x1202, 0x8ec0, 0xb60b, 0xfc6c, 0x9f2b, 0x0, 0x0);
        gbc.writeMem(0x8f18, { 0x66 });
        gbc.writeMem(0x9f2b, { 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1202, gbc.sp());
        EXPECT(0x8f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8f18));
        EXPECT(0xc2, gbc.readMem(0x9f2b));
        // 66 03D4
        gbc.setState(0x30d4, 0x244f, 0x2e60, 0xb44d, 0x921d, 0x8571, 0x0, 0x0);
        gbc.writeMem(0x30d4, { 0x66 });
        gbc.writeMem(0x8571, { 0x12 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0x30d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8571));
        // 66 03D5
        gbc.setState(0x4c54, 0xce79, 0xdad0, 0xe019, 0x5eab, 0xfdba, 0x1, 0x0);
        gbc.writeMem(0x4c54, { 0x66 });
        gbc.writeMem(0xfdba, { 0x8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce79, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xfdba));
        // 66 03D6
        gbc.setState(0xe170, 0xb8ba, 0x3a70, 0x1ff1, 0x80bb, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0xb5e6, { 0x48 });
        gbc.writeMem(0xe170, { 0x66 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0xe171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb5e6));
        EXPECT(0x66, gbc.readMem(0xe170));
        // 66 03D7
        gbc.setState(0xd923, 0xebc9, 0x86c0, 0xd1e6, 0xe428, 0x28d3, 0x0, 0x1);
        gbc.writeMem(0x28d3, { 0x2d });
        gbc.writeMem(0xd923, { 0x66 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd923));
        // 66 03D8
        gbc.setState(0x9ae6, 0x124d, 0x57b0, 0xcfac, 0x99db, 0x53a0, 0x0, 0x0);
        gbc.writeMem(0x53a0, { 0xe0 });
        gbc.writeMem(0x9ae6, { 0x66 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x124d, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9ae6));
        // 66 03D9
        gbc.setState(0xa0f4, 0xfae, 0x65b0, 0x53c4, 0xd327, 0xc11e, 0x1, 0x1);
        gbc.writeMem(0xa0f4, { 0x66 });
        gbc.writeMem(0xc11e, { 0x6d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa0f4));
        EXPECT(0x6d, gbc.readMem(0xc11e));
        // 66 03DA
        gbc.setState(0x54cb, 0xa46, 0x81f0, 0x10b5, 0x2d7a, 0x4d68, 0x1, 0x1);
        gbc.writeMem(0x4d68, { 0xa9 });
        gbc.writeMem(0x54cb, { 0x66 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03DB
        gbc.setState(0x69e1, 0xd2b, 0x1660, 0x6cae, 0xd22a, 0xf332, 0x1, 0x1);
        gbc.writeMem(0x69e1, { 0x66 });
        gbc.writeMem(0xf332, { 0x40 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd2b, gbc.sp());
        EXPECT(0x69e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf332));
        // 66 03DC
        gbc.setState(0x84dd, 0x5609, 0xc4a0, 0xa474, 0x6642, 0x1c31, 0x1, 0x0);
        gbc.writeMem(0x1c31, { 0xbd });
        gbc.writeMem(0x84dd, { 0x66 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5609, gbc.sp());
        EXPECT(0x84de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x84dd));
        // 66 03DD
        gbc.setState(0xabcd, 0x17ac, 0xb580, 0x6f59, 0xd699, 0xce3, 0x0, 0x1);
        gbc.writeMem(0xce3, { 0xd3 });
        gbc.writeMem(0xabcd, { 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x17ac, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xabcd));
        // 66 03DE
        gbc.setState(0x1230, 0xba0e, 0xbcb0, 0x5f, 0x9079, 0xd41, 0x0, 0x0);
        gbc.writeMem(0xd41, { 0xdc });
        gbc.writeMem(0x1230, { 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xba0e, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03DF
        gbc.setState(0x4a77, 0x4aea, 0x5d40, 0xa007, 0x7b27, 0x34b9, 0x0, 0x1);
        gbc.writeMem(0x34b9, { 0x60 });
        gbc.writeMem(0x4a77, { 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4aea, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 66 03E1
        gbc.setState(0xaa34, 0xcc6, 0xe360, 0x7ae9, 0xd1e7, 0xaed8, 0x0, 0x1);
        gbc.writeMem(0xaa34, { 0x66 });
        gbc.writeMem(0xaed8, { 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc6, gbc.sp());
        EXPECT(0xaa35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xaa34));
        EXPECT(0xf7, gbc.readMem(0xaed8));
        // 66 03E2
        gbc.setState(0xa4f5, 0xbe3, 0x3940, 0xcfc7, 0x283a, 0xf60, 0x1, 0x1);
        gbc.writeMem(0xf60, { 0xf7 });
        gbc.writeMem(0xa4f5, { 0x66 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe3, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa4f5));
        // 66 03E4
        gbc.setState(0x301b, 0x7d23, 0x9c40, 0x54d0, 0x80c7, 0x80fa, 0x1, 0x1);
        gbc.writeMem(0x301b, { 0x66 });
        gbc.writeMem(0x80fa, { 0xe3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7d23, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x80fa));
        // 66 03E5
        gbc.setState(0x8562, 0x3096, 0xa7b0, 0x5d08, 0x958c, 0x437f, 0x0, 0x0);
        gbc.writeMem(0x437f, { 0xc9 });
        gbc.writeMem(0x8562, { 0x66 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3096, gbc.sp());
        EXPECT(0x8563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8562));
        // 66 03E6
        gbc.setState(0x3cac, 0x58bd, 0x1290, 0x30ed, 0x31bd, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0x30e8, { 0x73 });
        gbc.writeMem(0x3cac, { 0x66 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x58bd, gbc.sp());
        EXPECT(0x3cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 66 03E7
        gbc.setState(0x897e, 0xa45c, 0x2c30, 0x843e, 0x606d, 0x856f, 0x0, 0x0);
        gbc.writeMem(0x856f, { 0x68 });
        gbc.writeMem(0x897e, { 0x66 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x856f));
        EXPECT(0x66, gbc.readMem(0x897e));
    }
