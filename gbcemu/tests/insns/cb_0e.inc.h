    TEST(gbcemu, opcode_cb_0e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0E 0002
        gbc.setState(0x8217, 0x39c5, 0x1310, 0xc288, 0xe61, 0xd1b2, 0x0, 0x1);
        gbc.writeMem(0x8217, { 0xcb, 0xe });
        gbc.writeMem(0xd1b2, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x39c5);
        EXPECT(gbc.pc(), 0x8219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8217), 0xcb);
        EXPECT(gbc.readMem(0x8218), 0xe);
        EXPECT(gbc.readMem(0xd1b2), 0x9d);
        // CB 0E 0003
        gbc.setState(0x9390, 0xa34d, 0x7090, 0x4aa2, 0x8f1f, 0xdb43, 0x0, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0xe });
        gbc.writeMem(0xdb43, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0x9392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9390), 0xcb);
        EXPECT(gbc.readMem(0x9391), 0xe);
        EXPECT(gbc.readMem(0xdb43), 0xf1);
        // CB 0E 0005
        gbc.setState(0x29d1, 0x53ef, 0x6bd0, 0xe004, 0xcd43, 0xdf26, 0x1, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0xe });
        gbc.writeMem(0xdf26, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x53ef);
        EXPECT(gbc.pc(), 0x29d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf26), 0xb0);
        // CB 0E 0006
        gbc.setState(0xe7f8, 0x97a, 0x740, 0x7420, 0x1cc7, 0xe0c2, 0x0, 0x1);
        gbc.writeMem(0xe0c2, { 0xea });
        gbc.writeMem(0xe7f8, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x97a);
        EXPECT(gbc.pc(), 0xe7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c2), 0x75);
        EXPECT(gbc.readMem(0xe7f8), 0xcb);
        EXPECT(gbc.readMem(0xe7f9), 0xe);
        // CB 0E 0008
        gbc.setState(0xb017, 0x1f5f, 0xe150, 0x1be0, 0x4522, 0xbc2e, 0x1, 0x1);
        gbc.writeMem(0xb017, { 0xcb, 0xe });
        gbc.writeMem(0xbc2e, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f5f);
        EXPECT(gbc.pc(), 0xb019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb017), 0xcb);
        EXPECT(gbc.readMem(0xb018), 0xe);
        EXPECT(gbc.readMem(0xbc2e), 0x70);
        // CB 0E 000B
        gbc.setState(0xe805, 0xe1ff, 0xc250, 0x1ed6, 0xb820, 0x93c4, 0x1, 0x0);
        gbc.writeMem(0x93c4, { 0xb3 });
        gbc.writeMem(0xe805, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0xe807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c4), 0xd9);
        EXPECT(gbc.readMem(0xe805), 0xcb);
        EXPECT(gbc.readMem(0xe806), 0xe);
        // CB 0E 0011
        gbc.setState(0x6fde, 0x880a, 0xfc90, 0xc9a, 0x2f2f, 0x9b65, 0x1, 0x0);
        gbc.writeMem(0x6fde, { 0xcb, 0xe });
        gbc.writeMem(0x9b65, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x880a);
        EXPECT(gbc.pc(), 0x6fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b65), 0xe1);
        // CB 0E 0012
        gbc.setState(0xa565, 0x20bf, 0x8380, 0xb8d7, 0x2966, 0x91ce, 0x1, 0x0);
        gbc.writeMem(0x91ce, { 0x76 });
        gbc.writeMem(0xa565, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x20bf);
        EXPECT(gbc.pc(), 0xa567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ce), 0x3b);
        EXPECT(gbc.readMem(0xa565), 0xcb);
        EXPECT(gbc.readMem(0xa566), 0xe);
        // CB 0E 0013
        gbc.setState(0xd13a, 0xe094, 0x8070, 0xc71a, 0xa5b0, 0xb376, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xa1 });
        gbc.writeMem(0xd13a, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe094);
        EXPECT(gbc.pc(), 0xd13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb376), 0xd0);
        EXPECT(gbc.readMem(0xd13a), 0xcb);
        EXPECT(gbc.readMem(0xd13b), 0xe);
        // CB 0E 0015
        gbc.setState(0xd86d, 0x7309, 0x8c0, 0x6004, 0x2ddb, 0xe78e, 0x1, 0x1);
        gbc.writeMem(0xd86d, { 0xcb, 0xe });
        gbc.writeMem(0xe78e, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7309);
        EXPECT(gbc.pc(), 0xd86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86d), 0xcb);
        EXPECT(gbc.readMem(0xd86e), 0xe);
        EXPECT(gbc.readMem(0xe78e), 0xb8);
        // CB 0E 0016
        gbc.setState(0xb0e0, 0x2a2d, 0xb790, 0x6eee, 0xb44f, 0xab0d, 0x1, 0x1);
        gbc.writeMem(0xab0d, { 0x99 });
        gbc.writeMem(0xb0e0, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2a2d);
        EXPECT(gbc.pc(), 0xb0e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab0d), 0xcc);
        EXPECT(gbc.readMem(0xb0e0), 0xcb);
        EXPECT(gbc.readMem(0xb0e1), 0xe);
        // CB 0E 0018
        gbc.setState(0x6813, 0x4baf, 0x7930, 0xc729, 0x41e6, 0xb763, 0x0, 0x0);
        gbc.writeMem(0x6813, { 0xcb, 0xe });
        gbc.writeMem(0xb763, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4baf);
        EXPECT(gbc.pc(), 0x6815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb763), 0xf8);
        // CB 0E 0019
        gbc.setState(0x7ea0, 0x30db, 0xd1d0, 0xa32f, 0x912c, 0xb0e7, 0x1, 0x0);
        gbc.writeMem(0x7ea0, { 0xcb, 0xe });
        gbc.writeMem(0xb0e7, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x30db);
        EXPECT(gbc.pc(), 0x7ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e7), 0xf5);
        // CB 0E 001D
        gbc.setState(0x5b02, 0xcf89, 0x7a80, 0x226d, 0x374e, 0xc437, 0x1, 0x0);
        gbc.writeMem(0x5b02, { 0xcb, 0xe });
        gbc.writeMem(0xc437, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcf89);
        EXPECT(gbc.pc(), 0x5b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc437), 0xe1);
        // CB 0E 001E
        gbc.setState(0xb878, 0x421a, 0x4a20, 0x4604, 0xe1e9, 0xee35, 0x0, 0x1);
        gbc.writeMem(0xb878, { 0xcb, 0xe });
        gbc.writeMem(0xee35, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x421a);
        EXPECT(gbc.pc(), 0xb87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb878), 0xcb);
        EXPECT(gbc.readMem(0xb879), 0xe);
        EXPECT(gbc.readMem(0xee35), 0x4d);
        // CB 0E 0024
        gbc.setState(0xe799, 0xf493, 0x9530, 0x5b08, 0x728c, 0x8584, 0x0, 0x1);
        gbc.writeMem(0x8584, { 0xd4 });
        gbc.writeMem(0xe799, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf493);
        EXPECT(gbc.pc(), 0xe79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8584), 0x6a);
        EXPECT(gbc.readMem(0xe799), 0xcb);
        EXPECT(gbc.readMem(0xe79a), 0xe);
        // CB 0E 0026
        gbc.setState(0x37d7, 0xfbdd, 0xf9a0, 0x9865, 0x52f2, 0xbe98, 0x1, 0x1);
        gbc.writeMem(0x37d7, { 0xcb, 0xe });
        gbc.writeMem(0xbe98, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfbdd);
        EXPECT(gbc.pc(), 0x37d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe98), 0xc1);
        // CB 0E 0027
        gbc.setState(0x6253, 0xa452, 0x7b70, 0x8c10, 0x9cdc, 0xba1c, 0x1, 0x1);
        gbc.writeMem(0x6253, { 0xcb, 0xe });
        gbc.writeMem(0xba1c, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa452);
        EXPECT(gbc.pc(), 0x6255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1c), 0x44);
        // CB 0E 0029
        gbc.setState(0x4109, 0x846d, 0x4b30, 0x8cb8, 0x6040, 0xba8c, 0x0, 0x1);
        gbc.writeMem(0x4109, { 0xcb, 0xe });
        gbc.writeMem(0xba8c, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x846d);
        EXPECT(gbc.pc(), 0x410b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0x6e);
        // CB 0E 0031
        gbc.setState(0x7df3, 0xa2bb, 0x4f90, 0x1bc2, 0x29bb, 0xfbb9, 0x0, 0x0);
        gbc.writeMem(0x7df3, { 0xcb, 0xe });
        gbc.writeMem(0xfbb9, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa2bb);
        EXPECT(gbc.pc(), 0x7df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbb9), 0x8a);
        // CB 0E 0038
        gbc.setState(0x2943, 0xcfc7, 0x9e90, 0xe96d, 0x834c, 0xb8ce, 0x1, 0x0);
        gbc.writeMem(0x2943, { 0xcb, 0xe });
        gbc.writeMem(0xb8ce, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcfc7);
        EXPECT(gbc.pc(), 0x2945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ce), 0xce);
        // CB 0E 003A
        gbc.setState(0x76f, 0xdcc, 0x4320, 0x2caa, 0x6b1e, 0xaced, 0x0, 0x0);
        gbc.writeMem(0x76f, { 0xcb, 0xe });
        gbc.writeMem(0xaced, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdcc);
        EXPECT(gbc.pc(), 0x771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaced), 0xee);
        // CB 0E 003F
        gbc.setState(0x776b, 0xbb3c, 0x37a0, 0x6a14, 0xa2f0, 0xfb6e, 0x1, 0x1);
        gbc.writeMem(0x776b, { 0xcb, 0xe });
        gbc.writeMem(0xfb6e, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbb3c);
        EXPECT(gbc.pc(), 0x776d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb6e), 0xe5);
        // CB 0E 0040
        gbc.setState(0x8e53, 0xe779, 0xc330, 0x3181, 0x7abc, 0x93df, 0x0, 0x0);
        gbc.writeMem(0x8e53, { 0xcb, 0xe });
        gbc.writeMem(0x93df, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe779);
        EXPECT(gbc.pc(), 0x8e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e53), 0xcb);
        EXPECT(gbc.readMem(0x8e54), 0xe);
        EXPECT(gbc.readMem(0x93df), 0x86);
        // CB 0E 0041
        gbc.setState(0xa9dd, 0x4801, 0xa2d0, 0x8b4b, 0xde6d, 0xe74e, 0x1, 0x0);
        gbc.writeMem(0xa9dd, { 0xcb, 0xe });
        gbc.writeMem(0xe74e, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4801);
        EXPECT(gbc.pc(), 0xa9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9dd), 0xcb);
        EXPECT(gbc.readMem(0xa9de), 0xe);
        EXPECT(gbc.readMem(0xe74e), 0x88);
        // CB 0E 0043
        gbc.setState(0x99f9, 0x9e6d, 0x4d60, 0x6ecb, 0x49c7, 0xe271, 0x0, 0x1);
        gbc.writeMem(0x99f9, { 0xcb, 0xe });
        gbc.writeMem(0xe271, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9e6d);
        EXPECT(gbc.pc(), 0x99fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f9), 0xcb);
        EXPECT(gbc.readMem(0x99fa), 0xe);
        EXPECT(gbc.readMem(0xe271), 0xbc);
        // CB 0E 0044
        gbc.setState(0x78c3, 0xbd42, 0x3cd0, 0x2702, 0x6334, 0xddef, 0x0, 0x0);
        gbc.writeMem(0x78c3, { 0xcb, 0xe });
        gbc.writeMem(0xddef, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbd42);
        EXPECT(gbc.pc(), 0x78c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddef), 0x19);
        // CB 0E 0045
        gbc.setState(0xc419, 0xc1a8, 0x62f0, 0xb0c5, 0xdaf6, 0xf19b, 0x0, 0x0);
        gbc.writeMem(0xc419, { 0xcb, 0xe });
        gbc.writeMem(0xf19b, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0xc41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc419), 0xcb);
        EXPECT(gbc.readMem(0xc41a), 0xe);
        EXPECT(gbc.readMem(0xf19b), 0x2d);
        // CB 0E 0047
        gbc.setState(0xc2dc, 0x1a5a, 0x5bf0, 0xa9e8, 0x3dd4, 0xcdc9, 0x1, 0x0);
        gbc.writeMem(0xc2dc, { 0xcb, 0xe });
        gbc.writeMem(0xcdc9, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1a5a);
        EXPECT(gbc.pc(), 0xc2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2dc), 0xcb);
        EXPECT(gbc.readMem(0xc2dd), 0xe);
        EXPECT(gbc.readMem(0xcdc9), 0xcd);
        // CB 0E 0049
        gbc.setState(0x3719, 0x3a38, 0x6a10, 0x1132, 0x9517, 0xbb7b, 0x0, 0x1);
        gbc.writeMem(0x3719, { 0xcb, 0xe });
        gbc.writeMem(0xbb7b, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3a38);
        EXPECT(gbc.pc(), 0x371b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7b), 0x7d);
        // CB 0E 004B
        gbc.setState(0x6677, 0xb62b, 0xb200, 0xecf3, 0x5eef, 0xdbe8, 0x1, 0x0);
        gbc.writeMem(0x6677, { 0xcb, 0xe });
        gbc.writeMem(0xdbe8, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb62b);
        EXPECT(gbc.pc(), 0x6679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe8), 0xc7);
        // CB 0E 004E
        gbc.setState(0x269a, 0x67c8, 0x5170, 0xc833, 0x21da, 0xee61, 0x0, 0x1);
        gbc.writeMem(0x269a, { 0xcb, 0xe });
        gbc.writeMem(0xee61, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0x269c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee61), 0x99);
        // CB 0E 004F
        gbc.setState(0x5166, 0x60dd, 0xd3e0, 0x53df, 0x6ed7, 0xb6e7, 0x1, 0x0);
        gbc.writeMem(0x5166, { 0xcb, 0xe });
        gbc.writeMem(0xb6e7, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0x5168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e7), 0x3b);
        // CB 0E 0050
        gbc.setState(0x8c72, 0x25f1, 0x6f80, 0x9c43, 0x9819, 0xd94b, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0xcb, 0xe });
        gbc.writeMem(0xd94b, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0x8c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c72), 0xcb);
        EXPECT(gbc.readMem(0x8c73), 0xe);
        EXPECT(gbc.readMem(0xd94b), 0x2a);
        // CB 0E 0054
        gbc.setState(0xccb9, 0x1ea1, 0x570, 0x8f51, 0xe58c, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0x8af7, { 0x6f });
        gbc.writeMem(0xccb9, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1ea1);
        EXPECT(gbc.pc(), 0xccbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af7), 0xb7);
        EXPECT(gbc.readMem(0xccb9), 0xcb);
        EXPECT(gbc.readMem(0xccba), 0xe);
        // CB 0E 0055
        gbc.setState(0x126a, 0xb8a5, 0x4900, 0xae04, 0xc418, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x126a, { 0xcb, 0xe });
        gbc.writeMem(0x8ece, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb8a5);
        EXPECT(gbc.pc(), 0x126c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ece), 0xc2);
        // CB 0E 005B
        gbc.setState(0x41d1, 0xd0b8, 0x8280, 0xaaba, 0xf7d8, 0x8910, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0xcb, 0xe });
        gbc.writeMem(0x8910, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd0b8);
        EXPECT(gbc.pc(), 0x41d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8910), 0x31);
        // CB 0E 005C
        gbc.setState(0xb415, 0x1318, 0x2950, 0xa702, 0xd079, 0x8bc0, 0x0, 0x1);
        gbc.writeMem(0x8bc0, { 0xa6 });
        gbc.writeMem(0xb415, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1318);
        EXPECT(gbc.pc(), 0xb417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc0), 0x53);
        EXPECT(gbc.readMem(0xb415), 0xcb);
        EXPECT(gbc.readMem(0xb416), 0xe);
        // CB 0E 005D
        gbc.setState(0x6a76, 0x6fd3, 0xbd60, 0xc05b, 0x78a5, 0xb6cd, 0x1, 0x1);
        gbc.writeMem(0x6a76, { 0xcb, 0xe });
        gbc.writeMem(0xb6cd, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6fd3);
        EXPECT(gbc.pc(), 0x6a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6cd), 0xc9);
        // CB 0E 0060
        gbc.setState(0x1569, 0xabf0, 0xc090, 0xa8b4, 0x4dd3, 0xec30, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0xe });
        gbc.writeMem(0xec30, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xabf0);
        EXPECT(gbc.pc(), 0x156b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec30), 0xd1);
        // CB 0E 0061
        gbc.setState(0x7784, 0xa328, 0xe3b0, 0x2e6, 0x3ac7, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0x7784, { 0xcb, 0xe });
        gbc.writeMem(0x96cf, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa328);
        EXPECT(gbc.pc(), 0x7786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cf), 0x26);
        // CB 0E 0062
        gbc.setState(0x434b, 0xc428, 0x43e0, 0x8f87, 0x49db, 0xfc4b, 0x0, 0x0);
        gbc.writeMem(0x434b, { 0xcb, 0xe });
        gbc.writeMem(0xfc4b, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc428);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc4b), 0x2e);
        // CB 0E 0064
        gbc.setState(0x655c, 0x5368, 0x6140, 0x653a, 0xaf80, 0xe6f8, 0x0, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0xe });
        gbc.writeMem(0xe6f8, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0x655e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f8), 0xa7);
        // CB 0E 0066
        gbc.setState(0xe225, 0xbf70, 0x8ff0, 0x6c75, 0x227d, 0xb660, 0x1, 0x1);
        gbc.writeMem(0xb660, { 0x3e });
        gbc.writeMem(0xe225, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbf70);
        EXPECT(gbc.pc(), 0xe227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb660), 0x1f);
        EXPECT(gbc.readMem(0xe225), 0xcb);
        EXPECT(gbc.readMem(0xe226), 0xe);
        // CB 0E 0067
        gbc.setState(0x1c7c, 0x8d65, 0x9330, 0xc8c0, 0x1561, 0x9ad4, 0x1, 0x0);
        gbc.writeMem(0x1c7c, { 0xcb, 0xe });
        gbc.writeMem(0x9ad4, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8d65);
        EXPECT(gbc.pc(), 0x1c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad4), 0xd4);
        // CB 0E 0068
        gbc.setState(0x1742, 0xdf71, 0x90c0, 0xbfbe, 0x475, 0xcb14, 0x0, 0x0);
        gbc.writeMem(0x1742, { 0xcb, 0xe });
        gbc.writeMem(0xcb14, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0x1744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb14), 0x47);
        // CB 0E 0069
        gbc.setState(0xe900, 0x2280, 0xb0, 0x58f0, 0x810a, 0xc5aa, 0x1, 0x1);
        gbc.writeMem(0xc5aa, { 0x3b });
        gbc.writeMem(0xe900, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0xe902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5aa), 0x9d);
        EXPECT(gbc.readMem(0xe900), 0xcb);
        EXPECT(gbc.readMem(0xe901), 0xe);
        // CB 0E 006B
        gbc.setState(0xcf7c, 0xa4cd, 0xe4a0, 0x8187, 0xa060, 0xd21f, 0x1, 0x0);
        gbc.writeMem(0xcf7c, { 0xcb, 0xe });
        gbc.writeMem(0xd21f, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa4cd);
        EXPECT(gbc.pc(), 0xcf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7c), 0xcb);
        EXPECT(gbc.readMem(0xcf7d), 0xe);
        EXPECT(gbc.readMem(0xd21f), 0x7f);
        // CB 0E 006C
        gbc.setState(0xe8d6, 0xc8fc, 0x9e90, 0x75cd, 0xda50, 0xa095, 0x0, 0x1);
        gbc.writeMem(0xa095, { 0x72 });
        gbc.writeMem(0xe8d6, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc8fc);
        EXPECT(gbc.pc(), 0xe8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa095), 0x39);
        EXPECT(gbc.readMem(0xe8d6), 0xcb);
        EXPECT(gbc.readMem(0xe8d7), 0xe);
        // CB 0E 006E
        gbc.setState(0xcfe0, 0xcf5f, 0x2260, 0xc4a8, 0x201, 0xde07, 0x1, 0x1);
        gbc.writeMem(0xcfe0, { 0xcb, 0xe });
        gbc.writeMem(0xde07, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcf5f);
        EXPECT(gbc.pc(), 0xcfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe0), 0xcb);
        EXPECT(gbc.readMem(0xcfe1), 0xe);
        EXPECT(gbc.readMem(0xde07), 0x76);
        // CB 0E 006F
        gbc.setState(0x88d0, 0x4e57, 0xb970, 0xec17, 0x6d02, 0xb9d1, 0x1, 0x1);
        gbc.writeMem(0x88d0, { 0xcb, 0xe });
        gbc.writeMem(0xb9d1, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4e57);
        EXPECT(gbc.pc(), 0x88d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d0), 0xcb);
        EXPECT(gbc.readMem(0x88d1), 0xe);
        EXPECT(gbc.readMem(0xb9d1), 0x7f);
        // CB 0E 0071
        gbc.setState(0xdcfc, 0x5d7e, 0xe3d0, 0x48d2, 0xc2ab, 0xbd4d, 0x0, 0x1);
        gbc.writeMem(0xbd4d, { 0xc6 });
        gbc.writeMem(0xdcfc, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5d7e);
        EXPECT(gbc.pc(), 0xdcfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4d), 0x63);
        EXPECT(gbc.readMem(0xdcfc), 0xcb);
        EXPECT(gbc.readMem(0xdcfd), 0xe);
        // CB 0E 0072
        gbc.setState(0xa41e, 0xff6, 0x80a0, 0xc298, 0x455d, 0x932d, 0x1, 0x1);
        gbc.writeMem(0x932d, { 0x2f });
        gbc.writeMem(0xa41e, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xff6);
        EXPECT(gbc.pc(), 0xa420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932d), 0x97);
        EXPECT(gbc.readMem(0xa41e), 0xcb);
        EXPECT(gbc.readMem(0xa41f), 0xe);
        // CB 0E 0075
        gbc.setState(0xee1c, 0x4d5, 0x6b10, 0xcb61, 0x2129, 0xbc45, 0x1, 0x0);
        gbc.writeMem(0xbc45, { 0xa0 });
        gbc.writeMem(0xee1c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4d5);
        EXPECT(gbc.pc(), 0xee1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc45), 0x50);
        EXPECT(gbc.readMem(0xee1c), 0xcb);
        EXPECT(gbc.readMem(0xee1d), 0xe);
        // CB 0E 0076
        gbc.setState(0x445c, 0xe6bf, 0xebd0, 0xaee, 0x7928, 0xd550, 0x1, 0x0);
        gbc.writeMem(0x445c, { 0xcb, 0xe });
        gbc.writeMem(0xd550, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe6bf);
        EXPECT(gbc.pc(), 0x445e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd550), 0x45);
        // CB 0E 0077
        gbc.setState(0xd5ec, 0x89, 0x30f0, 0x6fe6, 0xef1b, 0x80b6, 0x1, 0x0);
        gbc.writeMem(0x80b6, { 0x65 });
        gbc.writeMem(0xd5ec, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x89);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b6), 0xb2);
        EXPECT(gbc.readMem(0xd5ec), 0xcb);
        EXPECT(gbc.readMem(0xd5ed), 0xe);
        // CB 0E 0078
        gbc.setState(0x2ccf, 0x9b4a, 0x1940, 0x64d4, 0x1eb4, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x2ccf, { 0xcb, 0xe });
        gbc.writeMem(0xa7b9, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9b4a);
        EXPECT(gbc.pc(), 0x2cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b9), 0xc1);
        // CB 0E 0079
        gbc.setState(0x96a6, 0x4fee, 0xba10, 0x827a, 0x5ba9, 0x9959, 0x1, 0x1);
        gbc.writeMem(0x96a6, { 0xcb, 0xe });
        gbc.writeMem(0x9959, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4fee);
        EXPECT(gbc.pc(), 0x96a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a6), 0xcb);
        EXPECT(gbc.readMem(0x96a7), 0xe);
        EXPECT(gbc.readMem(0x9959), 0xea);
        // CB 0E 007B
        gbc.setState(0xc4de, 0xc5c5, 0xc6e0, 0x5ad, 0x820f, 0xb3a0, 0x1, 0x1);
        gbc.writeMem(0xb3a0, { 0x49 });
        gbc.writeMem(0xc4de, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc5c5);
        EXPECT(gbc.pc(), 0xc4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a0), 0xa4);
        EXPECT(gbc.readMem(0xc4de), 0xcb);
        EXPECT(gbc.readMem(0xc4df), 0xe);
        // CB 0E 007C
        gbc.setState(0x2eb, 0xfd, 0x4630, 0xfd17, 0x8308, 0xd53b, 0x0, 0x0);
        gbc.writeMem(0x2eb, { 0xcb, 0xe });
        gbc.writeMem(0xd53b, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfd);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53b), 0x1f);
        // CB 0E 007D
        gbc.setState(0x4d20, 0xff88, 0x4a60, 0x59ba, 0x81f5, 0xa755, 0x0, 0x0);
        gbc.writeMem(0x4d20, { 0xcb, 0xe });
        gbc.writeMem(0xa755, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xff88);
        EXPECT(gbc.pc(), 0x4d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa755), 0xcd);
        // CB 0E 007E
        gbc.setState(0x51b7, 0x1be6, 0x8cb0, 0xd29c, 0x8a40, 0xd08e, 0x1, 0x0);
        gbc.writeMem(0x51b7, { 0xcb, 0xe });
        gbc.writeMem(0xd08e, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1be6);
        EXPECT(gbc.pc(), 0x51b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08e), 0xe2);
        // CB 0E 0080
        gbc.setState(0x771, 0xafa6, 0xd890, 0x261d, 0x333e, 0xa038, 0x0, 0x1);
        gbc.writeMem(0x771, { 0xcb, 0xe });
        gbc.writeMem(0xa038, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xafa6);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa038), 0x9a);
        // CB 0E 0081
        gbc.setState(0x461f, 0x3d70, 0xc240, 0xd852, 0xe1ca, 0xe55a, 0x0, 0x0);
        gbc.writeMem(0x461f, { 0xcb, 0xe });
        gbc.writeMem(0xe55a, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3d70);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55a), 0x1b);
        // CB 0E 0082
        gbc.setState(0x5b2a, 0xe374, 0x1c90, 0xa618, 0xf628, 0xfcc0, 0x0, 0x0);
        gbc.writeMem(0x5b2a, { 0xcb, 0xe });
        gbc.writeMem(0xfcc0, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe374);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcc0), 0xff);
        // CB 0E 0083
        gbc.setState(0x8c65, 0x335, 0xd460, 0x76a3, 0x33dc, 0x9cab, 0x1, 0x1);
        gbc.writeMem(0x8c65, { 0xcb, 0xe });
        gbc.writeMem(0x9cab, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x335);
        EXPECT(gbc.pc(), 0x8c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c65), 0xcb);
        EXPECT(gbc.readMem(0x8c66), 0xe);
        EXPECT(gbc.readMem(0x9cab), 0x68);
        // CB 0E 0084
        gbc.setState(0x3be7, 0xe207, 0xa730, 0xa8f, 0x69a4, 0xe94f, 0x0, 0x0);
        gbc.writeMem(0x3be7, { 0xcb, 0xe });
        gbc.writeMem(0xe94f, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe207);
        EXPECT(gbc.pc(), 0x3be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94f), 0x2a);
        // CB 0E 0087
        gbc.setState(0x6b47, 0x5f36, 0x6660, 0x305f, 0x8e74, 0x8e10, 0x0, 0x1);
        gbc.writeMem(0x6b47, { 0xcb, 0xe });
        gbc.writeMem(0x8e10, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0x6b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e10), 0x6b);
        // CB 0E 008D
        gbc.setState(0x13cf, 0xb337, 0xc3d0, 0x6f3c, 0xb7, 0x8f6f, 0x0, 0x0);
        gbc.writeMem(0x13cf, { 0xcb, 0xe });
        gbc.writeMem(0x8f6f, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb337);
        EXPECT(gbc.pc(), 0x13d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6f), 0x2a);
        // CB 0E 0092
        gbc.setState(0x62ed, 0xbf61, 0x7dd0, 0x8bbf, 0x7daa, 0x9ca3, 0x1, 0x1);
        gbc.writeMem(0x62ed, { 0xcb, 0xe });
        gbc.writeMem(0x9ca3, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbf61);
        EXPECT(gbc.pc(), 0x62ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca3), 0xf4);
        // CB 0E 0093
        gbc.setState(0xd54f, 0x1fde, 0xbf80, 0x7e4a, 0x1250, 0xc1d5, 0x0, 0x0);
        gbc.writeMem(0xc1d5, { 0x6b });
        gbc.writeMem(0xd54f, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1fde);
        EXPECT(gbc.pc(), 0xd551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d5), 0xb5);
        EXPECT(gbc.readMem(0xd54f), 0xcb);
        EXPECT(gbc.readMem(0xd550), 0xe);
        // CB 0E 0094
        gbc.setState(0x8239, 0x1453, 0xbf00, 0xcf65, 0x28fc, 0xaef0, 0x0, 0x0);
        gbc.writeMem(0x8239, { 0xcb, 0xe });
        gbc.writeMem(0xaef0, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1453);
        EXPECT(gbc.pc(), 0x823b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8239), 0xcb);
        EXPECT(gbc.readMem(0x823a), 0xe);
        EXPECT(gbc.readMem(0xaef0), 0xb5);
        // CB 0E 0095
        gbc.setState(0xcee3, 0x386e, 0xca70, 0x56ec, 0xadce, 0xefcd, 0x1, 0x0);
        gbc.writeMem(0xcee3, { 0xcb, 0xe });
        gbc.writeMem(0xefcd, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x386e);
        EXPECT(gbc.pc(), 0xcee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee3), 0xcb);
        EXPECT(gbc.readMem(0xcee4), 0xe);
        EXPECT(gbc.readMem(0xefcd), 0x7e);
        // CB 0E 0096
        gbc.setState(0x2903, 0x7d3e, 0x1080, 0xa570, 0x3b90, 0x993e, 0x1, 0x0);
        gbc.writeMem(0x2903, { 0xcb, 0xe });
        gbc.writeMem(0x993e, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7d3e);
        EXPECT(gbc.pc(), 0x2905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993e), 0x73);
        // CB 0E 0099
        gbc.setState(0x48e0, 0x70e4, 0xe890, 0xb53d, 0x6847, 0x8512, 0x0, 0x1);
        gbc.writeMem(0x48e0, { 0xcb, 0xe });
        gbc.writeMem(0x8512, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x70e4);
        EXPECT(gbc.pc(), 0x48e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8512), 0x35);
        // CB 0E 009B
        gbc.setState(0xb8ce, 0x8d9f, 0x53e0, 0x2bf5, 0x69f, 0xf4e4, 0x1, 0x1);
        gbc.writeMem(0xb8ce, { 0xcb, 0xe });
        gbc.writeMem(0xf4e4, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8d9f);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ce), 0xcb);
        EXPECT(gbc.readMem(0xb8cf), 0xe);
        EXPECT(gbc.readMem(0xf4e4), 0x1b);
        // CB 0E 00A0
        gbc.setState(0xa5da, 0x9d0e, 0xa5d0, 0x399d, 0x4a72, 0x9d2e, 0x1, 0x0);
        gbc.writeMem(0x9d2e, { 0xf8 });
        gbc.writeMem(0xa5da, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0xa5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2e), 0x7c);
        EXPECT(gbc.readMem(0xa5da), 0xcb);
        EXPECT(gbc.readMem(0xa5db), 0xe);
        // CB 0E 00A2
        gbc.setState(0xa6b5, 0x5a49, 0x15b0, 0xacbc, 0x2705, 0xa0de, 0x0, 0x1);
        gbc.writeMem(0xa0de, { 0x1b });
        gbc.writeMem(0xa6b5, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5a49);
        EXPECT(gbc.pc(), 0xa6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0de), 0x8d);
        EXPECT(gbc.readMem(0xa6b5), 0xcb);
        EXPECT(gbc.readMem(0xa6b6), 0xe);
        // CB 0E 00A4
        gbc.setState(0x1121, 0x266a, 0xe0e0, 0x97af, 0x99d3, 0xa663, 0x1, 0x0);
        gbc.writeMem(0x1121, { 0xcb, 0xe });
        gbc.writeMem(0xa663, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0x1123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0xc4);
        // CB 0E 00A6
        gbc.setState(0x5a14, 0xf4fc, 0x4a90, 0x9423, 0xefd2, 0xa3a7, 0x1, 0x0);
        gbc.writeMem(0x5a14, { 0xcb, 0xe });
        gbc.writeMem(0xa3a7, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf4fc);
        EXPECT(gbc.pc(), 0x5a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a7), 0xb5);
        // CB 0E 00A8
        gbc.setState(0xbe20, 0xb9ef, 0x300, 0x4df9, 0x927a, 0x8f15, 0x0, 0x1);
        gbc.writeMem(0x8f15, { 0x16 });
        gbc.writeMem(0xbe20, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb9ef);
        EXPECT(gbc.pc(), 0xbe22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f15), 0xb);
        EXPECT(gbc.readMem(0xbe20), 0xcb);
        EXPECT(gbc.readMem(0xbe21), 0xe);
        // CB 0E 00AF
        gbc.setState(0xc008, 0xd194, 0x38a0, 0x6e02, 0xcaf3, 0xb49e, 0x1, 0x1);
        gbc.writeMem(0xb49e, { 0x52 });
        gbc.writeMem(0xc008, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd194);
        EXPECT(gbc.pc(), 0xc00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49e), 0x29);
        EXPECT(gbc.readMem(0xc008), 0xcb);
        EXPECT(gbc.readMem(0xc009), 0xe);
        // CB 0E 00B2
        gbc.setState(0x4420, 0x9798, 0xe20, 0x8df2, 0x2fef, 0x966f, 0x0, 0x1);
        gbc.writeMem(0x4420, { 0xcb, 0xe });
        gbc.writeMem(0x966f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9798);
        EXPECT(gbc.pc(), 0x4422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966f), 0x46);
        // CB 0E 00B3
        gbc.setState(0x38b3, 0x4e34, 0x8b40, 0xb0bb, 0x6ab0, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x38b3, { 0xcb, 0xe });
        gbc.writeMem(0xfea0, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4e34);
        EXPECT(gbc.pc(), 0x38b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfea0), 0xdd);
        // CB 0E 00B6
        gbc.setState(0x213a, 0x17, 0x6a10, 0x44bf, 0x1635, 0x84fa, 0x1, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0xe });
        gbc.writeMem(0x84fa, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x17);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fa), 0x45);
        // CB 0E 00BC
        gbc.setState(0x8dcb, 0x764b, 0x2cb0, 0x9f99, 0xd847, 0x8798, 0x1, 0x0);
        gbc.writeMem(0x8798, { 0x5d });
        gbc.writeMem(0x8dcb, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x764b);
        EXPECT(gbc.pc(), 0x8dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8798), 0xae);
        EXPECT(gbc.readMem(0x8dcb), 0xcb);
        EXPECT(gbc.readMem(0x8dcc), 0xe);
        // CB 0E 00BF
        gbc.setState(0x7c6a, 0x45f5, 0xbed0, 0xbba5, 0xa54, 0x9d56, 0x1, 0x1);
        gbc.writeMem(0x7c6a, { 0xcb, 0xe });
        gbc.writeMem(0x9d56, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x45f5);
        EXPECT(gbc.pc(), 0x7c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d56), 0xe2);
        // CB 0E 00C2
        gbc.setState(0x88cc, 0xe376, 0xad40, 0xa444, 0xdc0f, 0x8de1, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0xcb, 0xe });
        gbc.writeMem(0x8de1, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe376);
        EXPECT(gbc.pc(), 0x88ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cc), 0xcb);
        EXPECT(gbc.readMem(0x88cd), 0xe);
        EXPECT(gbc.readMem(0x8de1), 0x1b);
        // CB 0E 00C3
        gbc.setState(0xbab7, 0x4c6b, 0xaf60, 0x9f32, 0x98cf, 0xa240, 0x1, 0x0);
        gbc.writeMem(0xa240, { 0x65 });
        gbc.writeMem(0xbab7, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4c6b);
        EXPECT(gbc.pc(), 0xbab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa240), 0xb2);
        EXPECT(gbc.readMem(0xbab7), 0xcb);
        EXPECT(gbc.readMem(0xbab8), 0xe);
        // CB 0E 00C4
        gbc.setState(0x3769, 0xb6ae, 0xa430, 0xbbc6, 0x3065, 0xb17a, 0x0, 0x1);
        gbc.writeMem(0x3769, { 0xcb, 0xe });
        gbc.writeMem(0xb17a, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0x376b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17a), 0x14);
        // CB 0E 00C5
        gbc.setState(0x3627, 0x8629, 0x1a70, 0x90f8, 0x6941, 0xe499, 0x1, 0x1);
        gbc.writeMem(0x3627, { 0xcb, 0xe });
        gbc.writeMem(0xe499, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8629);
        EXPECT(gbc.pc(), 0x3629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe499), 0x83);
        // CB 0E 00C6
        gbc.setState(0xd32c, 0xe549, 0x4bf0, 0x771a, 0xe9f2, 0xcd73, 0x0, 0x0);
        gbc.writeMem(0xcd73, { 0x88 });
        gbc.writeMem(0xd32c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0x44);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0xe);
        // CB 0E 00C7
        gbc.setState(0x6e5a, 0xa854, 0xbf80, 0x8392, 0xd107, 0xe8c1, 0x0, 0x1);
        gbc.writeMem(0x6e5a, { 0xcb, 0xe });
        gbc.writeMem(0xe8c1, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa854);
        EXPECT(gbc.pc(), 0x6e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c1), 0x41);
        // CB 0E 00C8
        gbc.setState(0x3543, 0x89b0, 0x7930, 0x617, 0xba70, 0xe90e, 0x0, 0x1);
        gbc.writeMem(0x3543, { 0xcb, 0xe });
        gbc.writeMem(0xe90e, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x89b0);
        EXPECT(gbc.pc(), 0x3545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90e), 0x67);
        // CB 0E 00C9
        gbc.setState(0xe841, 0x9163, 0x3750, 0x4b5d, 0x5a46, 0xa9f5, 0x0, 0x1);
        gbc.writeMem(0xa9f5, { 0x38 });
        gbc.writeMem(0xe841, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9163);
        EXPECT(gbc.pc(), 0xe843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f5), 0x1c);
        EXPECT(gbc.readMem(0xe841), 0xcb);
        EXPECT(gbc.readMem(0xe842), 0xe);
        // CB 0E 00CA
        gbc.setState(0x2fce, 0x7881, 0x30d0, 0x44ec, 0x5bc2, 0xafb4, 0x1, 0x1);
        gbc.writeMem(0x2fce, { 0xcb, 0xe });
        gbc.writeMem(0xafb4, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7881);
        EXPECT(gbc.pc(), 0x2fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb4), 0xe0);
        // CB 0E 00CB
        gbc.setState(0x3be1, 0x12ff, 0xeeb0, 0x68f0, 0x6201, 0xf384, 0x1, 0x1);
        gbc.writeMem(0x3be1, { 0xcb, 0xe });
        gbc.writeMem(0xf384, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0x3be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf384), 0xd8);
        // CB 0E 00D0
        gbc.setState(0x91e2, 0x317c, 0x3210, 0x525e, 0x13dc, 0x8297, 0x0, 0x1);
        gbc.writeMem(0x8297, { 0x9c });
        gbc.writeMem(0x91e2, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x317c);
        EXPECT(gbc.pc(), 0x91e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8297), 0x4e);
        EXPECT(gbc.readMem(0x91e2), 0xcb);
        EXPECT(gbc.readMem(0x91e3), 0xe);
        // CB 0E 00D9
        gbc.setState(0x356, 0xc5e5, 0xffa0, 0x1034, 0x613e, 0xf60b, 0x0, 0x1);
        gbc.writeMem(0x356, { 0xcb, 0xe });
        gbc.writeMem(0xf60b, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc5e5);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf60b), 0x55);
        // CB 0E 00DB
        gbc.setState(0x4986, 0x87f, 0xc4f0, 0x84bf, 0x3d66, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x4986, { 0xcb, 0xe });
        gbc.writeMem(0x9936, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x87f);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9936), 0x4d);
        // CB 0E 00DE
        gbc.setState(0x8f31, 0x1990, 0x3bd0, 0xa1fc, 0x5fe2, 0xc013, 0x1, 0x0);
        gbc.writeMem(0x8f31, { 0xcb, 0xe });
        gbc.writeMem(0xc013, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1990);
        EXPECT(gbc.pc(), 0x8f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f31), 0xcb);
        EXPECT(gbc.readMem(0x8f32), 0xe);
        EXPECT(gbc.readMem(0xc013), 0x87);
        // CB 0E 00DF
        gbc.setState(0xc3bf, 0x6a51, 0x2550, 0x6ec8, 0x9607, 0xd825, 0x0, 0x0);
        gbc.writeMem(0xc3bf, { 0xcb, 0xe });
        gbc.writeMem(0xd825, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6a51);
        EXPECT(gbc.pc(), 0xc3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3bf), 0xcb);
        EXPECT(gbc.readMem(0xc3c0), 0xe);
        EXPECT(gbc.readMem(0xd825), 0xd0);
        // CB 0E 00E0
        gbc.setState(0x687, 0xb1be, 0xf170, 0x1f74, 0x2e4c, 0x9b37, 0x0, 0x0);
        gbc.writeMem(0x687, { 0xcb, 0xe });
        gbc.writeMem(0x9b37, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb1be);
        EXPECT(gbc.pc(), 0x689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b37), 0x16);
        // CB 0E 00E1
        gbc.setState(0x8a61, 0x96eb, 0x9570, 0x73d4, 0x6494, 0xb21d, 0x1, 0x0);
        gbc.writeMem(0x8a61, { 0xcb, 0xe });
        gbc.writeMem(0xb21d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0x8a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a61), 0xcb);
        EXPECT(gbc.readMem(0x8a62), 0xe);
        EXPECT(gbc.readMem(0xb21d), 0x5c);
        // CB 0E 00E4
        gbc.setState(0xda97, 0xc41a, 0x7590, 0xb086, 0xaed2, 0xb080, 0x1, 0x1);
        gbc.writeMem(0xb080, { 0x86 });
        gbc.writeMem(0xda97, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0xda99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb080), 0x43);
        EXPECT(gbc.readMem(0xda97), 0xcb);
        EXPECT(gbc.readMem(0xda98), 0xe);
        // CB 0E 00E6
        gbc.setState(0x909, 0x784, 0xf2e0, 0x7cda, 0x1673, 0x9155, 0x0, 0x1);
        gbc.writeMem(0x909, { 0xcb, 0xe });
        gbc.writeMem(0x9155, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0x90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9155), 0x6);
        // CB 0E 00E7
        gbc.setState(0x91db, 0xdfe5, 0x1840, 0xd309, 0xb089, 0x913a, 0x1, 0x0);
        gbc.writeMem(0x913a, { 0xf1 });
        gbc.writeMem(0x91db, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0x91dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913a), 0xf8);
        EXPECT(gbc.readMem(0x91db), 0xcb);
        EXPECT(gbc.readMem(0x91dc), 0xe);
        // CB 0E 00E8
        gbc.setState(0x4013, 0x1971, 0x7a00, 0x94c9, 0x4e76, 0xe231, 0x1, 0x0);
        gbc.writeMem(0x4013, { 0xcb, 0xe });
        gbc.writeMem(0xe231, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1971);
        EXPECT(gbc.pc(), 0x4015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe231), 0x5f);
        // CB 0E 00EB
        gbc.setState(0x2ba3, 0x96eb, 0x4380, 0x477d, 0x33e8, 0xde0b, 0x0, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xe });
        gbc.writeMem(0xde0b, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0x2ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0b), 0x50);
        // CB 0E 00EC
        gbc.setState(0x9e06, 0x2775, 0xc500, 0xd77b, 0x80f1, 0xef9e, 0x1, 0x0);
        gbc.writeMem(0x9e06, { 0xcb, 0xe });
        gbc.writeMem(0xef9e, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2775);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0xe);
        EXPECT(gbc.readMem(0xef9e), 0x3b);
        // CB 0E 00EE
        gbc.setState(0x37ea, 0xaffd, 0xe770, 0x65e6, 0x2ff, 0xdf6c, 0x1, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0xe });
        gbc.writeMem(0xdf6c, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaffd);
        EXPECT(gbc.pc(), 0x37ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf6c), 0xd4);
        // CB 0E 00F1
        gbc.setState(0x5dfa, 0x5700, 0x1190, 0x9db0, 0x3bf6, 0xe5b3, 0x1, 0x1);
        gbc.writeMem(0x5dfa, { 0xcb, 0xe });
        gbc.writeMem(0xe5b3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5700);
        EXPECT(gbc.pc(), 0x5dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b3), 0xca);
        // CB 0E 00F4
        gbc.setState(0x6dbd, 0x8f07, 0xa3e0, 0x53d6, 0x12d9, 0xa51f, 0x1, 0x1);
        gbc.writeMem(0x6dbd, { 0xcb, 0xe });
        gbc.writeMem(0xa51f, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8f07);
        EXPECT(gbc.pc(), 0x6dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51f), 0x1e);
        // CB 0E 00F8
        gbc.setState(0x7286, 0x8015, 0xe330, 0xf2e3, 0xa0e, 0xbb7c, 0x0, 0x0);
        gbc.writeMem(0x7286, { 0xcb, 0xe });
        gbc.writeMem(0xbb7c, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8015);
        EXPECT(gbc.pc(), 0x7288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7c), 0xe4);
        // CB 0E 00F9
        gbc.setState(0x52a7, 0x67c3, 0x20, 0xff2d, 0x4fdd, 0xfc8c, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0xcb, 0xe });
        gbc.writeMem(0xfc8c, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x67c3);
        EXPECT(gbc.pc(), 0x52a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc8c), 0x5b);
        // CB 0E 00FA
        gbc.setState(0xba40, 0x3105, 0xac0, 0x6f9c, 0x2a34, 0xa6e5, 0x1, 0x1);
        gbc.writeMem(0xa6e5, { 0xc3 });
        gbc.writeMem(0xba40, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3105);
        EXPECT(gbc.pc(), 0xba42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e5), 0xe1);
        EXPECT(gbc.readMem(0xba40), 0xcb);
        EXPECT(gbc.readMem(0xba41), 0xe);
        // CB 0E 00FC
        gbc.setState(0xeb50, 0x1f9c, 0x9850, 0x7305, 0x7cc1, 0xfb78, 0x1, 0x1);
        gbc.writeMem(0xeb50, { 0xcb, 0xe });
        gbc.writeMem(0xfb78, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1f9c);
        EXPECT(gbc.pc(), 0xeb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb50), 0xcb);
        EXPECT(gbc.readMem(0xeb51), 0xe);
        EXPECT(gbc.readMem(0xfb78), 0xf3);
        // CB 0E 00FD
        gbc.setState(0x34fc, 0xa147, 0xc840, 0x4dde, 0x31b, 0xcf2d, 0x1, 0x0);
        gbc.writeMem(0x34fc, { 0xcb, 0xe });
        gbc.writeMem(0xcf2d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa147);
        EXPECT(gbc.pc(), 0x34fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2d), 0xb9);
        // CB 0E 00FF
        gbc.setState(0x2fa3, 0xbf1a, 0x13d0, 0x2f9, 0x3da6, 0xc28a, 0x0, 0x0);
        gbc.writeMem(0x2fa3, { 0xcb, 0xe });
        gbc.writeMem(0xc28a, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbf1a);
        EXPECT(gbc.pc(), 0x2fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28a), 0x43);
        // CB 0E 0101
        gbc.setState(0x125c, 0xe384, 0x74e0, 0x7eec, 0x7e62, 0xdcd7, 0x1, 0x0);
        gbc.writeMem(0x125c, { 0xcb, 0xe });
        gbc.writeMem(0xdcd7, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe384);
        EXPECT(gbc.pc(), 0x125e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd7), 0x23);
        // CB 0E 0104
        gbc.setState(0x9216, 0xfd6, 0x9e60, 0x6c93, 0xfc71, 0xcc78, 0x1, 0x0);
        gbc.writeMem(0x9216, { 0xcb, 0xe });
        gbc.writeMem(0xcc78, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfd6);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9216), 0xcb);
        EXPECT(gbc.readMem(0x9217), 0xe);
        EXPECT(gbc.readMem(0xcc78), 0x25);
        // CB 0E 0106
        gbc.setState(0x795f, 0x440a, 0x26e0, 0xd996, 0x7897, 0xf0a8, 0x1, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0xe });
        gbc.writeMem(0xf0a8, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x440a);
        EXPECT(gbc.pc(), 0x7961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0a8), 0xdb);
        // CB 0E 0107
        gbc.setState(0x36c5, 0x2294, 0x130, 0x781d, 0x6bd4, 0xba8c, 0x0, 0x1);
        gbc.writeMem(0x36c5, { 0xcb, 0xe });
        gbc.writeMem(0xba8c, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x36c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0x6e);
        // CB 0E 0109
        gbc.setState(0xd611, 0xb190, 0xe920, 0x4389, 0x47c5, 0xf74b, 0x0, 0x1);
        gbc.writeMem(0xd611, { 0xcb, 0xe });
        gbc.writeMem(0xf74b, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb190);
        EXPECT(gbc.pc(), 0xd613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd611), 0xcb);
        EXPECT(gbc.readMem(0xd612), 0xe);
        EXPECT(gbc.readMem(0xf74b), 0xb5);
        // CB 0E 010A
        gbc.setState(0x101e, 0xfb47, 0x1dd0, 0xbaae, 0x5288, 0xdaac, 0x0, 0x0);
        gbc.writeMem(0x101e, { 0xcb, 0xe });
        gbc.writeMem(0xdaac, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfb47);
        EXPECT(gbc.pc(), 0x1020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaac), 0xe1);
        // CB 0E 010D
        gbc.setState(0x2a3e, 0xe0f1, 0x9530, 0xb35a, 0xe75a, 0xb181, 0x0, 0x1);
        gbc.writeMem(0x2a3e, { 0xcb, 0xe });
        gbc.writeMem(0xb181, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe0f1);
        EXPECT(gbc.pc(), 0x2a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb181), 0x77);
        // CB 0E 010F
        gbc.setState(0x56fe, 0xf419, 0xe890, 0xcb32, 0x928c, 0xf64f, 0x0, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xe });
        gbc.writeMem(0xf64f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf419);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf64f), 0xaa);
        // CB 0E 0114
        gbc.setState(0xd545, 0xa53b, 0xe3f0, 0xa1b2, 0x3801, 0xbeb7, 0x1, 0x1);
        gbc.writeMem(0xbeb7, { 0xd5 });
        gbc.writeMem(0xd545, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa53b);
        EXPECT(gbc.pc(), 0xd547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb7), 0xea);
        EXPECT(gbc.readMem(0xd545), 0xcb);
        EXPECT(gbc.readMem(0xd546), 0xe);
        // CB 0E 0117
        gbc.setState(0x9634, 0x8a4c, 0x5560, 0x3e06, 0xa862, 0xf76f, 0x0, 0x0);
        gbc.writeMem(0x9634, { 0xcb, 0xe });
        gbc.writeMem(0xf76f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8a4c);
        EXPECT(gbc.pc(), 0x9636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9634), 0xcb);
        EXPECT(gbc.readMem(0x9635), 0xe);
        EXPECT(gbc.readMem(0xf76f), 0x30);
        // CB 0E 0118
        gbc.setState(0x24d1, 0x9fcf, 0x9c00, 0x7889, 0x4f4d, 0xa288, 0x0, 0x1);
        gbc.writeMem(0x24d1, { 0xcb, 0xe });
        gbc.writeMem(0xa288, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9fcf);
        EXPECT(gbc.pc(), 0x24d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa288), 0x92);
        // CB 0E 011A
        gbc.setState(0x1a28, 0x1a84, 0x1ff0, 0x1d4c, 0x370f, 0xfebb, 0x1, 0x0);
        gbc.writeMem(0x1a28, { 0xcb, 0xe });
        gbc.writeMem(0xfebb, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1a84);
        EXPECT(gbc.pc(), 0x1a2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfebb), 0x2c);
        // CB 0E 011B
        gbc.setState(0xe1b6, 0x6f38, 0x83c0, 0xb6ee, 0xaa4a, 0x8f9a, 0x1, 0x1);
        gbc.writeMem(0x8f9a, { 0x6e });
        gbc.writeMem(0xe1b6, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0xe1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9a), 0x37);
        EXPECT(gbc.readMem(0xe1b6), 0xcb);
        EXPECT(gbc.readMem(0xe1b7), 0xe);
        // CB 0E 011C
        gbc.setState(0xef5, 0x87d4, 0xe4a0, 0x59ee, 0x7fa2, 0xa4a4, 0x1, 0x1);
        gbc.writeMem(0xef5, { 0xcb, 0xe });
        gbc.writeMem(0xa4a4, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x87d4);
        EXPECT(gbc.pc(), 0xef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a4), 0x43);
        // CB 0E 011D
        gbc.setState(0xb931, 0xd553, 0x5f40, 0x9339, 0xd53e, 0xf6dc, 0x1, 0x1);
        gbc.writeMem(0xb931, { 0xcb, 0xe });
        gbc.writeMem(0xf6dc, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd553);
        EXPECT(gbc.pc(), 0xb933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb931), 0xcb);
        EXPECT(gbc.readMem(0xb932), 0xe);
        EXPECT(gbc.readMem(0xf6dc), 0x1a);
        // CB 0E 011E
        gbc.setState(0x8bbc, 0xfd0c, 0xf390, 0x276d, 0x3c2c, 0x9638, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0xcb, 0xe });
        gbc.writeMem(0x9638, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfd0c);
        EXPECT(gbc.pc(), 0x8bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbc), 0xcb);
        EXPECT(gbc.readMem(0x8bbd), 0xe);
        EXPECT(gbc.readMem(0x9638), 0xf3);
        // CB 0E 0120
        gbc.setState(0xabcb, 0xa79d, 0x3600, 0xf366, 0x1b82, 0xd728, 0x1, 0x0);
        gbc.writeMem(0xabcb, { 0xcb, 0xe });
        gbc.writeMem(0xd728, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa79d);
        EXPECT(gbc.pc(), 0xabcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabcb), 0xcb);
        EXPECT(gbc.readMem(0xabcc), 0xe);
        EXPECT(gbc.readMem(0xd728), 0xef);
        // CB 0E 0123
        gbc.setState(0xd36, 0x4081, 0xba80, 0x2946, 0xbd7b, 0x8dc5, 0x0, 0x0);
        gbc.writeMem(0xd36, { 0xcb, 0xe });
        gbc.writeMem(0x8dc5, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4081);
        EXPECT(gbc.pc(), 0xd38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc5), 0x6b);
        // CB 0E 0124
        gbc.setState(0x34f9, 0xeef5, 0x9df0, 0xa36a, 0xeeb1, 0xeb28, 0x0, 0x0);
        gbc.writeMem(0x34f9, { 0xcb, 0xe });
        gbc.writeMem(0xeb28, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xeef5);
        EXPECT(gbc.pc(), 0x34fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb28), 0xa);
        // CB 0E 0125
        gbc.setState(0x2eb5, 0xda35, 0x7ce0, 0x655e, 0xa3df, 0xaaed, 0x0, 0x1);
        gbc.writeMem(0x2eb5, { 0xcb, 0xe });
        gbc.writeMem(0xaaed, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xda35);
        EXPECT(gbc.pc(), 0x2eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaed), 0x24);
        // CB 0E 0126
        gbc.setState(0x7ab0, 0x79f2, 0x8f00, 0x6a54, 0x5075, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x7ab0, { 0xcb, 0xe });
        gbc.writeMem(0xdbda, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x79f2);
        EXPECT(gbc.pc(), 0x7ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbda), 0xc5);
        // CB 0E 0127
        gbc.setState(0x2e2e, 0x8a63, 0xf5b0, 0xbf15, 0x82da, 0xa969, 0x1, 0x0);
        gbc.writeMem(0x2e2e, { 0xcb, 0xe });
        gbc.writeMem(0xa969, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8a63);
        EXPECT(gbc.pc(), 0x2e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa969), 0x28);
        // CB 0E 012B
        gbc.setState(0xb0c3, 0x4488, 0xd390, 0xeb53, 0x4343, 0x9209, 0x0, 0x0);
        gbc.writeMem(0x9209, { 0x6c });
        gbc.writeMem(0xb0c3, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4488);
        EXPECT(gbc.pc(), 0xb0c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9209), 0x36);
        EXPECT(gbc.readMem(0xb0c3), 0xcb);
        EXPECT(gbc.readMem(0xb0c4), 0xe);
        // CB 0E 012C
        gbc.setState(0xa447, 0x9058, 0x5f10, 0xa541, 0x9d98, 0x8953, 0x1, 0x0);
        gbc.writeMem(0x8953, { 0x3e });
        gbc.writeMem(0xa447, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9058);
        EXPECT(gbc.pc(), 0xa449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8953), 0x1f);
        EXPECT(gbc.readMem(0xa447), 0xcb);
        EXPECT(gbc.readMem(0xa448), 0xe);
        // CB 0E 012F
        gbc.setState(0x12e3, 0x14bf, 0x5710, 0x888f, 0xe4e0, 0xa469, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0xe });
        gbc.writeMem(0xa469, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x14bf);
        EXPECT(gbc.pc(), 0x12e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa469), 0xc);
        // CB 0E 0131
        gbc.setState(0x4c89, 0x9dad, 0xd60, 0x8f90, 0xc938, 0x8193, 0x1, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0xe });
        gbc.writeMem(0x8193, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0x4c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8193), 0x37);
        // CB 0E 0133
        gbc.setState(0xdced, 0x10fe, 0x75b0, 0xef1b, 0xca8c, 0xd3d1, 0x1, 0x1);
        gbc.writeMem(0xd3d1, { 0x3 });
        gbc.writeMem(0xdced, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x10fe);
        EXPECT(gbc.pc(), 0xdcef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d1), 0x81);
        EXPECT(gbc.readMem(0xdced), 0xcb);
        EXPECT(gbc.readMem(0xdcee), 0xe);
        // CB 0E 0134
        gbc.setState(0x8422, 0xe9, 0x5c90, 0x6b1f, 0x4585, 0x83a4, 0x0, 0x0);
        gbc.writeMem(0x83a4, { 0x98 });
        gbc.writeMem(0x8422, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe9);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a4), 0x4c);
        EXPECT(gbc.readMem(0x8422), 0xcb);
        EXPECT(gbc.readMem(0x8423), 0xe);
        // CB 0E 0135
        gbc.setState(0x7398, 0xf9, 0xe10, 0x930d, 0x7940, 0xd913, 0x1, 0x0);
        gbc.writeMem(0x7398, { 0xcb, 0xe });
        gbc.writeMem(0xd913, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf9);
        EXPECT(gbc.pc(), 0x739a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd913), 0x58);
        // CB 0E 0139
        gbc.setState(0x2ed6, 0xc806, 0xcc0, 0x74b8, 0x833c, 0x8ed6, 0x0, 0x0);
        gbc.writeMem(0x2ed6, { 0xcb, 0xe });
        gbc.writeMem(0x8ed6, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc806);
        EXPECT(gbc.pc(), 0x2ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed6), 0x7e);
        // CB 0E 013E
        gbc.setState(0x53a3, 0xfbf4, 0x95c0, 0x6a22, 0x7b5f, 0x863d, 0x1, 0x1);
        gbc.writeMem(0x53a3, { 0xcb, 0xe });
        gbc.writeMem(0x863d, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfbf4);
        EXPECT(gbc.pc(), 0x53a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863d), 0x20);
        // CB 0E 013F
        gbc.setState(0x52ce, 0xba3a, 0xee90, 0xde2, 0x5cb7, 0x8652, 0x1, 0x1);
        gbc.writeMem(0x52ce, { 0xcb, 0xe });
        gbc.writeMem(0x8652, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x52d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8652), 0xc8);
        // CB 0E 0140
        gbc.setState(0x27f, 0x5adc, 0xa9e0, 0xc474, 0x20b1, 0xe4c4, 0x1, 0x0);
        gbc.writeMem(0x27f, { 0xcb, 0xe });
        gbc.writeMem(0xe4c4, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5adc);
        EXPECT(gbc.pc(), 0x281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c4), 0x90);
        // CB 0E 0141
        gbc.setState(0x772b, 0x6b52, 0x20f0, 0xd7d5, 0x88aa, 0x946a, 0x1, 0x0);
        gbc.writeMem(0x772b, { 0xcb, 0xe });
        gbc.writeMem(0x946a, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6b52);
        EXPECT(gbc.pc(), 0x772d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946a), 0x36);
        // CB 0E 0144
        gbc.setState(0xd5d8, 0x8ae1, 0xa320, 0x9100, 0x4508, 0x82fa, 0x0, 0x0);
        gbc.writeMem(0x82fa, { 0x3 });
        gbc.writeMem(0xd5d8, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8ae1);
        EXPECT(gbc.pc(), 0xd5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fa), 0x81);
        EXPECT(gbc.readMem(0xd5d8), 0xcb);
        EXPECT(gbc.readMem(0xd5d9), 0xe);
        // CB 0E 0145
        gbc.setState(0x3136, 0x7f1e, 0x6770, 0xb69d, 0xe25f, 0x876d, 0x1, 0x0);
        gbc.writeMem(0x3136, { 0xcb, 0xe });
        gbc.writeMem(0x876d, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7f1e);
        EXPECT(gbc.pc(), 0x3138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876d), 0x82);
        // CB 0E 0147
        gbc.setState(0x21b1, 0x9e27, 0xccb0, 0xbdc1, 0xcfd2, 0xafd0, 0x1, 0x0);
        gbc.writeMem(0x21b1, { 0xcb, 0xe });
        gbc.writeMem(0xafd0, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9e27);
        EXPECT(gbc.pc(), 0x21b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd0), 0x9d);
        // CB 0E 0148
        gbc.setState(0xbd95, 0xaf85, 0x7010, 0x1cbe, 0x32be, 0xe6c2, 0x0, 0x1);
        gbc.writeMem(0xbd95, { 0xcb, 0xe });
        gbc.writeMem(0xe6c2, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaf85);
        EXPECT(gbc.pc(), 0xbd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd95), 0xcb);
        EXPECT(gbc.readMem(0xbd96), 0xe);
        EXPECT(gbc.readMem(0xe6c2), 0xdf);
        // CB 0E 014A
        gbc.setState(0xc281, 0x71d1, 0xc870, 0xf3d7, 0xccc2, 0x9314, 0x0, 0x0);
        gbc.writeMem(0x9314, { 0x3b });
        gbc.writeMem(0xc281, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x71d1);
        EXPECT(gbc.pc(), 0xc283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9314), 0x9d);
        EXPECT(gbc.readMem(0xc281), 0xcb);
        EXPECT(gbc.readMem(0xc282), 0xe);
        // CB 0E 014C
        gbc.setState(0xc056, 0x810b, 0xcb40, 0x8b4d, 0x7543, 0xdc8b, 0x1, 0x0);
        gbc.writeMem(0xc056, { 0xcb, 0xe });
        gbc.writeMem(0xdc8b, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x810b);
        EXPECT(gbc.pc(), 0xc058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc056), 0xcb);
        EXPECT(gbc.readMem(0xc057), 0xe);
        EXPECT(gbc.readMem(0xdc8b), 0x12);
        // CB 0E 014D
        gbc.setState(0x2e0b, 0xd61d, 0x3890, 0xafef, 0x3467, 0xd9f6, 0x1, 0x1);
        gbc.writeMem(0x2e0b, { 0xcb, 0xe });
        gbc.writeMem(0xd9f6, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd61d);
        EXPECT(gbc.pc(), 0x2e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f6), 0xb9);
        // CB 0E 014F
        gbc.setState(0x7d82, 0x585d, 0x6c30, 0x213, 0x35cc, 0xed37, 0x1, 0x0);
        gbc.writeMem(0x7d82, { 0xcb, 0xe });
        gbc.writeMem(0xed37, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0x7d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed37), 0xcd);
        // CB 0E 0152
        gbc.setState(0x54fc, 0x999b, 0xf70, 0xa45c, 0xf4d7, 0xca6b, 0x0, 0x1);
        gbc.writeMem(0x54fc, { 0xcb, 0xe });
        gbc.writeMem(0xca6b, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x999b);
        EXPECT(gbc.pc(), 0x54fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca6b), 0x1c);
        // CB 0E 0154
        gbc.setState(0x9017, 0x3447, 0x8c00, 0xe29, 0x86e6, 0xba4a, 0x1, 0x1);
        gbc.writeMem(0x9017, { 0xcb, 0xe });
        gbc.writeMem(0xba4a, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3447);
        EXPECT(gbc.pc(), 0x9019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9017), 0xcb);
        EXPECT(gbc.readMem(0x9018), 0xe);
        EXPECT(gbc.readMem(0xba4a), 0x9b);
        // CB 0E 0155
        gbc.setState(0x5b62, 0x7a2c, 0xf9a0, 0xbcac, 0x2e63, 0x9484, 0x0, 0x1);
        gbc.writeMem(0x5b62, { 0xcb, 0xe });
        gbc.writeMem(0x9484, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7a2c);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9484), 0x85);
        // CB 0E 0157
        gbc.setState(0x42c9, 0x2f31, 0x80d0, 0xb121, 0x5240, 0xe5bf, 0x1, 0x0);
        gbc.writeMem(0x42c9, { 0xcb, 0xe });
        gbc.writeMem(0xe5bf, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2f31);
        EXPECT(gbc.pc(), 0x42cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5bf), 0xa1);
        // CB 0E 015A
        gbc.setState(0xbfe5, 0xe680, 0xbc60, 0x1c49, 0x6280, 0xc42e, 0x0, 0x1);
        gbc.writeMem(0xbfe5, { 0xcb, 0xe });
        gbc.writeMem(0xc42e, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe680);
        EXPECT(gbc.pc(), 0xbfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe5), 0xcb);
        EXPECT(gbc.readMem(0xbfe6), 0xe);
        EXPECT(gbc.readMem(0xc42e), 0xc4);
        // CB 0E 0160
        gbc.setState(0xd79b, 0x6c77, 0x5950, 0x7c0, 0x7fd5, 0x9334, 0x0, 0x0);
        gbc.writeMem(0x9334, { 0x50 });
        gbc.writeMem(0xd79b, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9334), 0x28);
        EXPECT(gbc.readMem(0xd79b), 0xcb);
        EXPECT(gbc.readMem(0xd79c), 0xe);
        // CB 0E 0162
        gbc.setState(0x6d67, 0x5276, 0xeec0, 0x7a7f, 0x5b85, 0xc435, 0x1, 0x0);
        gbc.writeMem(0x6d67, { 0xcb, 0xe });
        gbc.writeMem(0xc435, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5276);
        EXPECT(gbc.pc(), 0x6d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc435), 0x3);
        // CB 0E 0164
        gbc.setState(0x2f30, 0xadc1, 0x7680, 0x4748, 0xd48c, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0xe });
        gbc.writeMem(0xadad, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xadc1);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadad), 0xc9);
        // CB 0E 0165
        gbc.setState(0x9fc, 0xba35, 0xc180, 0x8e67, 0x190f, 0xb373, 0x1, 0x0);
        gbc.writeMem(0x9fc, { 0xcb, 0xe });
        gbc.writeMem(0xb373, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xba35);
        EXPECT(gbc.pc(), 0x9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb373), 0x79);
        // CB 0E 0167
        gbc.setState(0x2745, 0x40cf, 0xf8b0, 0x87e0, 0x8b1f, 0x8ed6, 0x0, 0x1);
        gbc.writeMem(0x2745, { 0xcb, 0xe });
        gbc.writeMem(0x8ed6, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x40cf);
        EXPECT(gbc.pc(), 0x2747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed6), 0x7e);
        // CB 0E 0168
        gbc.setState(0xbca5, 0x8ac1, 0x1510, 0x6a6e, 0xff70, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xbca5, { 0xcb, 0xe });
        gbc.writeMem(0xd6a5, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0xbca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca5), 0xcb);
        EXPECT(gbc.readMem(0xbca6), 0xe);
        EXPECT(gbc.readMem(0xd6a5), 0x71);
        // CB 0E 0169
        gbc.setState(0xc0ed, 0xc8b1, 0xc2a0, 0x615d, 0xe4a9, 0x9fba, 0x0, 0x0);
        gbc.writeMem(0x9fba, { 0xab });
        gbc.writeMem(0xc0ed, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc8b1);
        EXPECT(gbc.pc(), 0xc0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fba), 0xd5);
        EXPECT(gbc.readMem(0xc0ed), 0xcb);
        EXPECT(gbc.readMem(0xc0ee), 0xe);
        // CB 0E 016A
        gbc.setState(0xd882, 0x6aa2, 0x8040, 0x7839, 0xc6a, 0xbc70, 0x0, 0x0);
        gbc.writeMem(0xbc70, { 0x66 });
        gbc.writeMem(0xd882, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6aa2);
        EXPECT(gbc.pc(), 0xd884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc70), 0x33);
        EXPECT(gbc.readMem(0xd882), 0xcb);
        EXPECT(gbc.readMem(0xd883), 0xe);
        // CB 0E 016B
        gbc.setState(0x3053, 0xe19, 0xed30, 0x5a08, 0xe25c, 0xaffc, 0x0, 0x1);
        gbc.writeMem(0x3053, { 0xcb, 0xe });
        gbc.writeMem(0xaffc, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0x3055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaffc), 0x5b);
        // CB 0E 016C
        gbc.setState(0x4b94, 0x54a9, 0x6d10, 0xb197, 0xadcb, 0xcaed, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0xcb, 0xe });
        gbc.writeMem(0xcaed, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x54a9);
        EXPECT(gbc.pc(), 0x4b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaed), 0x8a);
        // CB 0E 016D
        gbc.setState(0xe7c5, 0x7926, 0xfd90, 0xb8e0, 0xccd, 0xaa2b, 0x1, 0x1);
        gbc.writeMem(0xaa2b, { 0x58 });
        gbc.writeMem(0xe7c5, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7926);
        EXPECT(gbc.pc(), 0xe7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2b), 0x2c);
        EXPECT(gbc.readMem(0xe7c5), 0xcb);
        EXPECT(gbc.readMem(0xe7c6), 0xe);
        // CB 0E 016F
        gbc.setState(0x904d, 0x2d7, 0xe590, 0xe5a8, 0xb1ed, 0xeff7, 0x0, 0x1);
        gbc.writeMem(0x904d, { 0xcb, 0xe });
        gbc.writeMem(0xeff7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2d7);
        EXPECT(gbc.pc(), 0x904f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904d), 0xcb);
        EXPECT(gbc.readMem(0x904e), 0xe);
        EXPECT(gbc.readMem(0xeff7), 0xaa);
        // CB 0E 0170
        gbc.setState(0x9fa5, 0x7937, 0xedd0, 0x61e7, 0x2430, 0xb122, 0x0, 0x0);
        gbc.writeMem(0x9fa5, { 0xcb, 0xe });
        gbc.writeMem(0xb122, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0x9fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa5), 0xcb);
        EXPECT(gbc.readMem(0x9fa6), 0xe);
        EXPECT(gbc.readMem(0xb122), 0x16);
        // CB 0E 0175
        gbc.setState(0xcb6c, 0x422b, 0x730, 0xa1e6, 0x72, 0x9948, 0x1, 0x0);
        gbc.writeMem(0x9948, { 0x5d });
        gbc.writeMem(0xcb6c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0xcb6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9948), 0xae);
        EXPECT(gbc.readMem(0xcb6c), 0xcb);
        EXPECT(gbc.readMem(0xcb6d), 0xe);
        // CB 0E 0176
        gbc.setState(0x8cb9, 0xd369, 0xe980, 0x24e4, 0xe7bc, 0x8da5, 0x0, 0x1);
        gbc.writeMem(0x8cb9, { 0xcb, 0xe });
        gbc.writeMem(0x8da5, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd369);
        EXPECT(gbc.pc(), 0x8cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb9), 0xcb);
        EXPECT(gbc.readMem(0x8cba), 0xe);
        EXPECT(gbc.readMem(0x8da5), 0x27);
        // CB 0E 0178
        gbc.setState(0x7b7b, 0x276, 0x1be0, 0x21a1, 0xd665, 0xf504, 0x1, 0x0);
        gbc.writeMem(0x7b7b, { 0xcb, 0xe });
        gbc.writeMem(0xf504, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x276);
        EXPECT(gbc.pc(), 0x7b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf504), 0xd9);
        // CB 0E 0179
        gbc.setState(0x1a20, 0xc72d, 0x5070, 0xce60, 0x8ad, 0xa6bd, 0x1, 0x1);
        gbc.writeMem(0x1a20, { 0xcb, 0xe });
        gbc.writeMem(0xa6bd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc72d);
        EXPECT(gbc.pc(), 0x1a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6bd), 0xe8);
        // CB 0E 017B
        gbc.setState(0xc2b0, 0xe996, 0xa1d0, 0xfd4, 0x606e, 0xace9, 0x0, 0x1);
        gbc.writeMem(0xace9, { 0xd4 });
        gbc.writeMem(0xc2b0, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe996);
        EXPECT(gbc.pc(), 0xc2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace9), 0x6a);
        EXPECT(gbc.readMem(0xc2b0), 0xcb);
        EXPECT(gbc.readMem(0xc2b1), 0xe);
        // CB 0E 017E
        gbc.setState(0x2f8f, 0x6a7a, 0xa6d0, 0x6ab6, 0x3101, 0xa7df, 0x1, 0x1);
        gbc.writeMem(0x2f8f, { 0xcb, 0xe });
        gbc.writeMem(0xa7df, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0x2f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7df), 0xf2);
        // CB 0E 017F
        gbc.setState(0x233e, 0x34c7, 0x7550, 0xbb24, 0x61df, 0xbad5, 0x1, 0x0);
        gbc.writeMem(0x233e, { 0xcb, 0xe });
        gbc.writeMem(0xbad5, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x34c7);
        EXPECT(gbc.pc(), 0x2340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad5), 0xf0);
        // CB 0E 0182
        gbc.setState(0x1c8a, 0x252e, 0xe9f0, 0x6c3d, 0x3734, 0xdee6, 0x1, 0x1);
        gbc.writeMem(0x1c8a, { 0xcb, 0xe });
        gbc.writeMem(0xdee6, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x252e);
        EXPECT(gbc.pc(), 0x1c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee6), 0x8a);
        // CB 0E 0183
        gbc.setState(0xb0a1, 0x833d, 0x9170, 0x5e4b, 0xe835, 0xd067, 0x0, 0x0);
        gbc.writeMem(0xb0a1, { 0xcb, 0xe });
        gbc.writeMem(0xd067, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x833d);
        EXPECT(gbc.pc(), 0xb0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a1), 0xcb);
        EXPECT(gbc.readMem(0xb0a2), 0xe);
        EXPECT(gbc.readMem(0xd067), 0xa6);
        // CB 0E 0187
        gbc.setState(0x71f7, 0x8859, 0x8020, 0x5fb6, 0xe071, 0xb6e6, 0x0, 0x0);
        gbc.writeMem(0x71f7, { 0xcb, 0xe });
        gbc.writeMem(0xb6e6, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8859);
        EXPECT(gbc.pc(), 0x71f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e6), 0xe9);
        // CB 0E 018B
        gbc.setState(0xd358, 0xa989, 0x9d0, 0xafbe, 0x37e0, 0xe07e, 0x1, 0x0);
        gbc.writeMem(0xd358, { 0xcb, 0xe });
        gbc.writeMem(0xe07e, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa989);
        EXPECT(gbc.pc(), 0xd35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd358), 0xcb);
        EXPECT(gbc.readMem(0xd359), 0xe);
        EXPECT(gbc.readMem(0xe07e), 0x59);
        // CB 0E 018C
        gbc.setState(0x4ad, 0xfd52, 0xd750, 0x71f9, 0x7e87, 0xfa79, 0x0, 0x0);
        gbc.writeMem(0x4ad, { 0xcb, 0xe });
        gbc.writeMem(0xfa79, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfd52);
        EXPECT(gbc.pc(), 0x4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa79), 0x4a);
        // CB 0E 018F
        gbc.setState(0x7dde, 0x5c60, 0x79e0, 0x9eb2, 0x9686, 0xa88a, 0x0, 0x1);
        gbc.writeMem(0x7dde, { 0xcb, 0xe });
        gbc.writeMem(0xa88a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0x7de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88a), 0x5c);
        // CB 0E 0190
        gbc.setState(0x4008, 0x8b2c, 0x3e90, 0x2a1a, 0x182c, 0xadc5, 0x0, 0x1);
        gbc.writeMem(0x4008, { 0xcb, 0xe });
        gbc.writeMem(0xadc5, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8b2c);
        EXPECT(gbc.pc(), 0x400a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc5), 0x39);
        // CB 0E 0192
        gbc.setState(0xe228, 0x1b37, 0x1af0, 0x4454, 0xa592, 0xdb27, 0x0, 0x0);
        gbc.writeMem(0xdb27, { 0x63 });
        gbc.writeMem(0xe228, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1b37);
        EXPECT(gbc.pc(), 0xe22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb27), 0xb1);
        EXPECT(gbc.readMem(0xe228), 0xcb);
        EXPECT(gbc.readMem(0xe229), 0xe);
        // CB 0E 0193
        gbc.setState(0xe, 0xa771, 0x2c20, 0x64b0, 0x897a, 0xf774, 0x1, 0x1);
        gbc.writeMem(0xe, { 0xcb, 0xe });
        gbc.writeMem(0xf774, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa771);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf774), 0xce);
        // CB 0E 0194
        gbc.setState(0xb846, 0x4dea, 0x8400, 0x3d33, 0x74f4, 0xccdd, 0x0, 0x0);
        gbc.writeMem(0xb846, { 0xcb, 0xe });
        gbc.writeMem(0xccdd, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4dea);
        EXPECT(gbc.pc(), 0xb848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb846), 0xcb);
        EXPECT(gbc.readMem(0xb847), 0xe);
        EXPECT(gbc.readMem(0xccdd), 0xaf);
        // CB 0E 0198
        gbc.setState(0x8fed, 0xb9d8, 0x6040, 0x2a8b, 0xe1a3, 0xa042, 0x0, 0x1);
        gbc.writeMem(0x8fed, { 0xcb, 0xe });
        gbc.writeMem(0xa042, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb9d8);
        EXPECT(gbc.pc(), 0x8fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fed), 0xcb);
        EXPECT(gbc.readMem(0x8fee), 0xe);
        EXPECT(gbc.readMem(0xa042), 0x39);
        // CB 0E 019B
        gbc.setState(0x8436, 0x8288, 0x5b10, 0x9ec4, 0x9938, 0x9d5d, 0x1, 0x1);
        gbc.writeMem(0x8436, { 0xcb, 0xe });
        gbc.writeMem(0x9d5d, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8288);
        EXPECT(gbc.pc(), 0x8438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8436), 0xcb);
        EXPECT(gbc.readMem(0x8437), 0xe);
        EXPECT(gbc.readMem(0x9d5d), 0x2d);
        // CB 0E 019D
        gbc.setState(0x664, 0x4ca5, 0x4ba0, 0x777f, 0xbdb4, 0xe105, 0x1, 0x1);
        gbc.writeMem(0x664, { 0xcb, 0xe });
        gbc.writeMem(0xe105, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4ca5);
        EXPECT(gbc.pc(), 0x666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe105), 0x75);
        // CB 0E 019F
        gbc.setState(0xc159, 0xfb8b, 0xc9b0, 0x1a89, 0xadc, 0xb0ab, 0x0, 0x1);
        gbc.writeMem(0xb0ab, { 0xb9 });
        gbc.writeMem(0xc159, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfb8b);
        EXPECT(gbc.pc(), 0xc15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ab), 0xdc);
        EXPECT(gbc.readMem(0xc159), 0xcb);
        EXPECT(gbc.readMem(0xc15a), 0xe);
        // CB 0E 01A2
        gbc.setState(0x62c, 0xe67d, 0xb0d0, 0xeadb, 0x7b87, 0xcff4, 0x1, 0x0);
        gbc.writeMem(0x62c, { 0xcb, 0xe });
        gbc.writeMem(0xcff4, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe67d);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff4), 0xc9);
        // CB 0E 01A4
        gbc.setState(0x7108, 0xadb8, 0xeb80, 0xa2b9, 0xe675, 0x8d43, 0x0, 0x1);
        gbc.writeMem(0x7108, { 0xcb, 0xe });
        gbc.writeMem(0x8d43, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xadb8);
        EXPECT(gbc.pc(), 0x710a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d43), 0x6c);
        // CB 0E 01A6
        gbc.setState(0x516a, 0x9d97, 0x92f0, 0x93fe, 0x86d2, 0xd272, 0x1, 0x1);
        gbc.writeMem(0x516a, { 0xcb, 0xe });
        gbc.writeMem(0xd272, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9d97);
        EXPECT(gbc.pc(), 0x516c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd272), 0xec);
        // CB 0E 01A7
        gbc.setState(0xcd79, 0xa23f, 0x8030, 0x41fb, 0x324d, 0xf4bc, 0x0, 0x1);
        gbc.writeMem(0xcd79, { 0xcb, 0xe });
        gbc.writeMem(0xf4bc, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa23f);
        EXPECT(gbc.pc(), 0xcd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd79), 0xcb);
        EXPECT(gbc.readMem(0xcd7a), 0xe);
        EXPECT(gbc.readMem(0xf4bc), 0x3a);
        // CB 0E 01A8
        gbc.setState(0x8751, 0x24db, 0x6220, 0xc2e4, 0xc6dd, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0xcb, 0xe });
        gbc.writeMem(0xabb9, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x24db);
        EXPECT(gbc.pc(), 0x8753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8751), 0xcb);
        EXPECT(gbc.readMem(0x8752), 0xe);
        EXPECT(gbc.readMem(0xabb9), 0xd);
        // CB 0E 01AB
        gbc.setState(0x8d1b, 0x16ff, 0x11a0, 0x95ae, 0xb241, 0x81bc, 0x0, 0x1);
        gbc.writeMem(0x81bc, { 0x91 });
        gbc.writeMem(0x8d1b, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x16ff);
        EXPECT(gbc.pc(), 0x8d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bc), 0xc8);
        EXPECT(gbc.readMem(0x8d1b), 0xcb);
        EXPECT(gbc.readMem(0x8d1c), 0xe);
        // CB 0E 01AC
        gbc.setState(0xae62, 0x78ab, 0xb00, 0x58ba, 0x338, 0xb3f2, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0xcb, 0xe });
        gbc.writeMem(0xb3f2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x78ab);
        EXPECT(gbc.pc(), 0xae64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae62), 0xcb);
        EXPECT(gbc.readMem(0xae63), 0xe);
        EXPECT(gbc.readMem(0xb3f2), 0x60);
        // CB 0E 01AD
        gbc.setState(0xcfd5, 0x7374, 0xc810, 0x4d95, 0x5a53, 0x80ce, 0x0, 0x1);
        gbc.writeMem(0x80ce, { 0xc2 });
        gbc.writeMem(0xcfd5, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7374);
        EXPECT(gbc.pc(), 0xcfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ce), 0x61);
        EXPECT(gbc.readMem(0xcfd5), 0xcb);
        EXPECT(gbc.readMem(0xcfd6), 0xe);
        // CB 0E 01AF
        gbc.setState(0x40f1, 0x7f34, 0x4b30, 0x9a38, 0x9fec, 0xb1f7, 0x0, 0x1);
        gbc.writeMem(0x40f1, { 0xcb, 0xe });
        gbc.writeMem(0xb1f7, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7f34);
        EXPECT(gbc.pc(), 0x40f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f7), 0xee);
        // CB 0E 01B0
        gbc.setState(0x5615, 0xebaa, 0xd280, 0xc8ef, 0xa840, 0x968a, 0x0, 0x0);
        gbc.writeMem(0x5615, { 0xcb, 0xe });
        gbc.writeMem(0x968a, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xebaa);
        EXPECT(gbc.pc(), 0x5617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x968a), 0x99);
        // CB 0E 01B2
        gbc.setState(0xb5b6, 0x666, 0xdad0, 0xbbd7, 0x9da, 0xcc70, 0x1, 0x1);
        gbc.writeMem(0xb5b6, { 0xcb, 0xe });
        gbc.writeMem(0xcc70, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x666);
        EXPECT(gbc.pc(), 0xb5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b6), 0xcb);
        EXPECT(gbc.readMem(0xb5b7), 0xe);
        EXPECT(gbc.readMem(0xcc70), 0xf);
        // CB 0E 01B3
        gbc.setState(0xcfcb, 0x349a, 0x34e0, 0x9612, 0xf51, 0xa68c, 0x1, 0x1);
        gbc.writeMem(0xa68c, { 0xd7 });
        gbc.writeMem(0xcfcb, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x349a);
        EXPECT(gbc.pc(), 0xcfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0xeb);
        EXPECT(gbc.readMem(0xcfcb), 0xcb);
        EXPECT(gbc.readMem(0xcfcc), 0xe);
        // CB 0E 01B8
        gbc.setState(0x936b, 0x112e, 0xada0, 0x4bd5, 0x20f0, 0xe584, 0x0, 0x1);
        gbc.writeMem(0x936b, { 0xcb, 0xe });
        gbc.writeMem(0xe584, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x112e);
        EXPECT(gbc.pc(), 0x936d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936b), 0xcb);
        EXPECT(gbc.readMem(0x936c), 0xe);
        EXPECT(gbc.readMem(0xe584), 0xa7);
        // CB 0E 01BE
        gbc.setState(0x9147, 0xcfbc, 0xdf00, 0x896a, 0x1d65, 0xa801, 0x0, 0x0);
        gbc.writeMem(0x9147, { 0xcb, 0xe });
        gbc.writeMem(0xa801, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcfbc);
        EXPECT(gbc.pc(), 0x9149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9147), 0xcb);
        EXPECT(gbc.readMem(0x9148), 0xe);
        EXPECT(gbc.readMem(0xa801), 0x42);
        // CB 0E 01BF
        gbc.setState(0xddd1, 0x5b89, 0x9210, 0xd01c, 0x121c, 0xea07, 0x0, 0x0);
        gbc.writeMem(0xddd1, { 0xcb, 0xe });
        gbc.writeMem(0xea07, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5b89);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd1), 0xcb);
        EXPECT(gbc.readMem(0xddd2), 0xe);
        EXPECT(gbc.readMem(0xea07), 0xfb);
        // CB 0E 01C2
        gbc.setState(0xbe8, 0xc5c9, 0xeeb0, 0x80ca, 0xe552, 0xa0df, 0x1, 0x1);
        gbc.writeMem(0xbe8, { 0xcb, 0xe });
        gbc.writeMem(0xa0df, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc5c9);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0df), 0x1b);
        // CB 0E 01C9
        gbc.setState(0x198, 0xe685, 0xcbf0, 0x63d7, 0xee8e, 0x8570, 0x0, 0x1);
        gbc.writeMem(0x198, { 0xcb, 0xe });
        gbc.writeMem(0x8570, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe685);
        EXPECT(gbc.pc(), 0x19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8570), 0x56);
        // CB 0E 01CA
        gbc.setState(0x77e1, 0x2510, 0x6480, 0x7f29, 0x42e5, 0xbfbd, 0x1, 0x1);
        gbc.writeMem(0x77e1, { 0xcb, 0xe });
        gbc.writeMem(0xbfbd, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0x77e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbd), 0x86);
        // CB 0E 01CC
        gbc.setState(0x376e, 0x1808, 0xb730, 0x3f34, 0xff8e, 0xac38, 0x0, 0x1);
        gbc.writeMem(0x376e, { 0xcb, 0xe });
        gbc.writeMem(0xac38, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1808);
        EXPECT(gbc.pc(), 0x3770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac38), 0xb);
        // CB 0E 01CD
        gbc.setState(0xc9f7, 0x107, 0x8680, 0xc6c6, 0x94b, 0x868c, 0x0, 0x0);
        gbc.writeMem(0x868c, { 0xde });
        gbc.writeMem(0xc9f7, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x107);
        EXPECT(gbc.pc(), 0xc9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0x6f);
        EXPECT(gbc.readMem(0xc9f7), 0xcb);
        EXPECT(gbc.readMem(0xc9f8), 0xe);
        // CB 0E 01CE
        gbc.setState(0x4273, 0xa91a, 0x34c0, 0xd4e2, 0xc298, 0x57f6, 0x1, 0x1);
        gbc.writeMem(0x4273, { 0xcb, 0xe });
        gbc.writeMem(0x57f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa91a);
        EXPECT(gbc.pc(), 0x4275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 0E 01D0
        gbc.setState(0x86d9, 0x817d, 0xef10, 0x26d3, 0x377a, 0xe4af, 0x1, 0x0);
        gbc.writeMem(0x86d9, { 0xcb, 0xe });
        gbc.writeMem(0xe4af, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x817d);
        EXPECT(gbc.pc(), 0x86db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d9), 0xcb);
        EXPECT(gbc.readMem(0x86da), 0xe);
        EXPECT(gbc.readMem(0xe4af), 0xc7);
        // CB 0E 01D1
        gbc.setState(0xe1a7, 0xe1d, 0xfd40, 0x2383, 0x6654, 0xbaeb, 0x1, 0x0);
        gbc.writeMem(0xbaeb, { 0xf7 });
        gbc.writeMem(0xe1a7, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0xe1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaeb), 0xfb);
        EXPECT(gbc.readMem(0xe1a7), 0xcb);
        EXPECT(gbc.readMem(0xe1a8), 0xe);
        // CB 0E 01D2
        gbc.setState(0x9f8c, 0x3021, 0x6d60, 0x4102, 0x6b16, 0xba61, 0x1, 0x0);
        gbc.writeMem(0x9f8c, { 0xcb, 0xe });
        gbc.writeMem(0xba61, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3021);
        EXPECT(gbc.pc(), 0x9f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8c), 0xcb);
        EXPECT(gbc.readMem(0x9f8d), 0xe);
        EXPECT(gbc.readMem(0xba61), 0x59);
        // CB 0E 01D4
        gbc.setState(0x2085, 0x2900, 0xe020, 0x4768, 0xd511, 0xc046, 0x0, 0x0);
        gbc.writeMem(0x2085, { 0xcb, 0xe });
        gbc.writeMem(0xc046, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2900);
        EXPECT(gbc.pc(), 0x2087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc046), 0xbe);
        // CB 0E 01D5
        gbc.setState(0xbf56, 0xb9e4, 0x8f00, 0x1448, 0x61a7, 0x9926, 0x1, 0x1);
        gbc.writeMem(0x9926, { 0x53 });
        gbc.writeMem(0xbf56, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0xbf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9926), 0xa9);
        EXPECT(gbc.readMem(0xbf56), 0xcb);
        EXPECT(gbc.readMem(0xbf57), 0xe);
        // CB 0E 01D6
        gbc.setState(0xa81b, 0x6084, 0x1950, 0xb180, 0x3442, 0xc1e0, 0x1, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0xe });
        gbc.writeMem(0xc1e0, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6084);
        EXPECT(gbc.pc(), 0xa81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81b), 0xcb);
        EXPECT(gbc.readMem(0xa81c), 0xe);
        EXPECT(gbc.readMem(0xc1e0), 0xf7);
        // CB 0E 01D8
        gbc.setState(0xa279, 0xb7f1, 0x1bb0, 0x3c55, 0xf4ec, 0x9449, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0x24 });
        gbc.writeMem(0xa279, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb7f1);
        EXPECT(gbc.pc(), 0xa27b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9449), 0x12);
        EXPECT(gbc.readMem(0xa279), 0xcb);
        EXPECT(gbc.readMem(0xa27a), 0xe);
        // CB 0E 01D9
        gbc.setState(0xe79d, 0x41a8, 0x9a0, 0x2828, 0x2496, 0x9521, 0x0, 0x1);
        gbc.writeMem(0x9521, { 0xef });
        gbc.writeMem(0xe79d, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x41a8);
        EXPECT(gbc.pc(), 0xe79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9521), 0xf7);
        EXPECT(gbc.readMem(0xe79d), 0xcb);
        EXPECT(gbc.readMem(0xe79e), 0xe);
        // CB 0E 01DF
        gbc.setState(0x8594, 0xb33, 0xeac0, 0xdebf, 0xa754, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0x8594, { 0xcb, 0xe });
        gbc.writeMem(0xf97b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb33);
        EXPECT(gbc.pc(), 0x8596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8594), 0xcb);
        EXPECT(gbc.readMem(0x8595), 0xe);
        EXPECT(gbc.readMem(0xf97b), 0x4b);
        // CB 0E 01E1
        gbc.setState(0x3768, 0xc500, 0x7f00, 0xa805, 0xec22, 0xc498, 0x0, 0x0);
        gbc.writeMem(0x3768, { 0xcb, 0xe });
        gbc.writeMem(0xc498, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc500);
        EXPECT(gbc.pc(), 0x376a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc498), 0x1e);
        // CB 0E 01E2
        gbc.setState(0x1e14, 0xaec4, 0x230, 0x62f0, 0x1c5a, 0x8a6d, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xcb, 0xe });
        gbc.writeMem(0x8a6d, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0x1e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6d), 0x3d);
        // CB 0E 01E3
        gbc.setState(0x9470, 0x7619, 0x6960, 0xcbba, 0x807f, 0xea9a, 0x0, 0x1);
        gbc.writeMem(0x9470, { 0xcb, 0xe });
        gbc.writeMem(0xea9a, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7619);
        EXPECT(gbc.pc(), 0x9472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9470), 0xcb);
        EXPECT(gbc.readMem(0x9471), 0xe);
        EXPECT(gbc.readMem(0xea9a), 0xc9);
        // CB 0E 01E4
        gbc.setState(0xb957, 0x8aff, 0x5060, 0xfdc6, 0x2e8f, 0xea42, 0x0, 0x1);
        gbc.writeMem(0xb957, { 0xcb, 0xe });
        gbc.writeMem(0xea42, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8aff);
        EXPECT(gbc.pc(), 0xb959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb957), 0xcb);
        EXPECT(gbc.readMem(0xb958), 0xe);
        EXPECT(gbc.readMem(0xea42), 0xf1);
        // CB 0E 01EB
        gbc.setState(0xc278, 0xe074, 0xa6c0, 0xebe3, 0x2e89, 0xc1b2, 0x0, 0x1);
        gbc.writeMem(0xc1b2, { 0xa6 });
        gbc.writeMem(0xc278, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe074);
        EXPECT(gbc.pc(), 0xc27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b2), 0x53);
        EXPECT(gbc.readMem(0xc278), 0xcb);
        EXPECT(gbc.readMem(0xc279), 0xe);
        // CB 0E 01EE
        gbc.setState(0x324c, 0x428, 0xbe60, 0xde67, 0xc4d2, 0xdba4, 0x0, 0x0);
        gbc.writeMem(0x324c, { 0xcb, 0xe });
        gbc.writeMem(0xdba4, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x428);
        EXPECT(gbc.pc(), 0x324e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba4), 0xf4);
        // CB 0E 01F1
        gbc.setState(0xa53f, 0x993b, 0x8f50, 0x1e, 0xdbf, 0xdfc1, 0x0, 0x0);
        gbc.writeMem(0xa53f, { 0xcb, 0xe });
        gbc.writeMem(0xdfc1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x993b);
        EXPECT(gbc.pc(), 0xa541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53f), 0xcb);
        EXPECT(gbc.readMem(0xa540), 0xe);
        EXPECT(gbc.readMem(0xdfc1), 0x25);
        // CB 0E 01F3
        gbc.setState(0x47f9, 0xda51, 0x64e0, 0xa736, 0xc66b, 0xb79b, 0x0, 0x1);
        gbc.writeMem(0x47f9, { 0xcb, 0xe });
        gbc.writeMem(0xb79b, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xda51);
        EXPECT(gbc.pc(), 0x47fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79b), 0xf5);
        // CB 0E 01FA
        gbc.setState(0xcd31, 0xbe31, 0xcd30, 0xbbd4, 0xc674, 0x8e78, 0x1, 0x0);
        gbc.writeMem(0x8e78, { 0xc });
        gbc.writeMem(0xcd31, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbe31);
        EXPECT(gbc.pc(), 0xcd33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e78), 0x6);
        EXPECT(gbc.readMem(0xcd31), 0xcb);
        EXPECT(gbc.readMem(0xcd32), 0xe);
        // CB 0E 01FD
        gbc.setState(0x3a61, 0x6015, 0x7020, 0xbc6b, 0xf793, 0xb36e, 0x0, 0x0);
        gbc.writeMem(0x3a61, { 0xcb, 0xe });
        gbc.writeMem(0xb36e, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6015);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36e), 0xab);
        // CB 0E 01FE
        gbc.setState(0xd5eb, 0x7810, 0x7610, 0x706, 0xc3de, 0xa678, 0x1, 0x1);
        gbc.writeMem(0xa678, { 0xe6 });
        gbc.writeMem(0xd5eb, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7810);
        EXPECT(gbc.pc(), 0xd5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa678), 0x73);
        EXPECT(gbc.readMem(0xd5eb), 0xcb);
        EXPECT(gbc.readMem(0xd5ec), 0xe);
        // CB 0E 0200
        gbc.setState(0xc064, 0xf2a6, 0x5d30, 0x2de8, 0x42a8, 0xef43, 0x1, 0x1);
        gbc.writeMem(0xc064, { 0xcb, 0xe });
        gbc.writeMem(0xef43, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf2a6);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc064), 0xcb);
        EXPECT(gbc.readMem(0xc065), 0xe);
        EXPECT(gbc.readMem(0xef43), 0x68);
        // CB 0E 0201
        gbc.setState(0x8e08, 0x7295, 0xc560, 0xac26, 0x6d94, 0xa42f, 0x0, 0x0);
        gbc.writeMem(0x8e08, { 0xcb, 0xe });
        gbc.writeMem(0xa42f, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7295);
        EXPECT(gbc.pc(), 0x8e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e08), 0xcb);
        EXPECT(gbc.readMem(0x8e09), 0xe);
        EXPECT(gbc.readMem(0xa42f), 0x85);
        // CB 0E 0202
        gbc.setState(0x9d76, 0xf396, 0xc0a0, 0xd46b, 0x9d8e, 0x974e, 0x1, 0x0);
        gbc.writeMem(0x974e, { 0x18 });
        gbc.writeMem(0x9d76, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf396);
        EXPECT(gbc.pc(), 0x9d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974e), 0xc);
        EXPECT(gbc.readMem(0x9d76), 0xcb);
        EXPECT(gbc.readMem(0x9d77), 0xe);
        // CB 0E 0203
        gbc.setState(0x966b, 0x22a6, 0xa310, 0xd55b, 0x5257, 0xa96e, 0x0, 0x0);
        gbc.writeMem(0x966b, { 0xcb, 0xe });
        gbc.writeMem(0xa96e, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x22a6);
        EXPECT(gbc.pc(), 0x966d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966b), 0xcb);
        EXPECT(gbc.readMem(0x966c), 0xe);
        EXPECT(gbc.readMem(0xa96e), 0x97);
        // CB 0E 0206
        gbc.setState(0xbb68, 0xd4b4, 0x36a0, 0x5b0b, 0x530f, 0xd8f6, 0x1, 0x1);
        gbc.writeMem(0xbb68, { 0xcb, 0xe });
        gbc.writeMem(0xd8f6, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0xbb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb68), 0xcb);
        EXPECT(gbc.readMem(0xbb69), 0xe);
        EXPECT(gbc.readMem(0xd8f6), 0x22);
        // CB 0E 020C
        gbc.setState(0x463d, 0xeadb, 0x8990, 0x5862, 0x8cd5, 0xb58f, 0x0, 0x0);
        gbc.writeMem(0x463d, { 0xcb, 0xe });
        gbc.writeMem(0xb58f, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x463f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58f), 0x2b);
        // CB 0E 020E
        gbc.setState(0xde3e, 0xd50e, 0x24a0, 0x7f02, 0x6c4d, 0xe923, 0x0, 0x0);
        gbc.writeMem(0xde3e, { 0xcb, 0xe });
        gbc.writeMem(0xe923, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd50e);
        EXPECT(gbc.pc(), 0xde40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3e), 0xcb);
        EXPECT(gbc.readMem(0xde3f), 0xe);
        EXPECT(gbc.readMem(0xe923), 0xe3);
        // CB 0E 0213
        gbc.setState(0x783a, 0xb302, 0xb990, 0xc2db, 0xbbee, 0x8f0c, 0x1, 0x0);
        gbc.writeMem(0x783a, { 0xcb, 0xe });
        gbc.writeMem(0x8f0c, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb302);
        EXPECT(gbc.pc(), 0x783c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0c), 0xfe);
        // CB 0E 021C
        gbc.setState(0x7b21, 0x301c, 0x310, 0xb926, 0xbc8d, 0xea2b, 0x1, 0x0);
        gbc.writeMem(0x7b21, { 0xcb, 0xe });
        gbc.writeMem(0xea2b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x301c);
        EXPECT(gbc.pc(), 0x7b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2b), 0x8);
        // CB 0E 021E
        gbc.setState(0xe6c8, 0x9821, 0x9700, 0x435e, 0xada2, 0xffb8, 0x1, 0x1);
        gbc.writeMem(0xe6c8, { 0xcb, 0xe });
        gbc.writeMem(0xffb8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9821);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0xe);
        EXPECT(gbc.readMem(0xffb8), 0x8);
        // CB 0E 021F
        gbc.setState(0xe438, 0x1e63, 0x6c20, 0xdf9a, 0xdbde, 0xf82c, 0x1, 0x1);
        gbc.writeMem(0xe438, { 0xcb, 0xe });
        gbc.writeMem(0xf82c, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1e63);
        EXPECT(gbc.pc(), 0xe43a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe438), 0xcb);
        EXPECT(gbc.readMem(0xe439), 0xe);
        EXPECT(gbc.readMem(0xf82c), 0x51);
        // CB 0E 0220
        gbc.setState(0x4095, 0x893f, 0x6c40, 0x49a, 0xe4e8, 0xf356, 0x1, 0x0);
        gbc.writeMem(0x4095, { 0xcb, 0xe });
        gbc.writeMem(0xf356, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x893f);
        EXPECT(gbc.pc(), 0x4097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf356), 0x3a);
        // CB 0E 0221
        gbc.setState(0x6c1d, 0x6c5, 0x6610, 0x500d, 0xbc, 0xf35c, 0x1, 0x0);
        gbc.writeMem(0x6c1d, { 0xcb, 0xe });
        gbc.writeMem(0xf35c, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6c5);
        EXPECT(gbc.pc(), 0x6c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf35c), 0xfb);
        // CB 0E 0222
        gbc.setState(0xc21, 0x34ec, 0x6670, 0x4648, 0x62c0, 0x9f96, 0x1, 0x0);
        gbc.writeMem(0xc21, { 0xcb, 0xe });
        gbc.writeMem(0x9f96, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0xc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f96), 0x89);
        // CB 0E 0223
        gbc.setState(0xcf9e, 0x939b, 0xf780, 0x69c2, 0x2ce5, 0xd7f3, 0x1, 0x0);
        gbc.writeMem(0xcf9e, { 0xcb, 0xe });
        gbc.writeMem(0xd7f3, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x939b);
        EXPECT(gbc.pc(), 0xcfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9e), 0xcb);
        EXPECT(gbc.readMem(0xcf9f), 0xe);
        EXPECT(gbc.readMem(0xd7f3), 0x13);
        // CB 0E 0224
        gbc.setState(0x61cc, 0xade9, 0x6390, 0xa21b, 0x19b4, 0xe7f2, 0x1, 0x1);
        gbc.writeMem(0x61cc, { 0xcb, 0xe });
        gbc.writeMem(0xe7f2, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xade9);
        EXPECT(gbc.pc(), 0x61ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f2), 0xd7);
        // CB 0E 0225
        gbc.setState(0xe7fd, 0x8767, 0x710, 0xf31, 0x67d0, 0xcd95, 0x1, 0x1);
        gbc.writeMem(0xcd95, { 0x58 });
        gbc.writeMem(0xe7fd, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8767);
        EXPECT(gbc.pc(), 0xe7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd95), 0x2c);
        EXPECT(gbc.readMem(0xe7fd), 0xcb);
        EXPECT(gbc.readMem(0xe7fe), 0xe);
        // CB 0E 0226
        gbc.setState(0x74cd, 0x6694, 0xb0a0, 0x517a, 0xe6a, 0xaebb, 0x1, 0x0);
        gbc.writeMem(0x74cd, { 0xcb, 0xe });
        gbc.writeMem(0xaebb, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6694);
        EXPECT(gbc.pc(), 0x74cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebb), 0x24);
        // CB 0E 0227
        gbc.setState(0x1b96, 0x2097, 0x74d0, 0x24f3, 0x50fe, 0xe952, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0xe });
        gbc.writeMem(0xe952, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2097);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe952), 0x8b);
        // CB 0E 0228
        gbc.setState(0x6701, 0x7067, 0xafc0, 0x7b13, 0x143e, 0xf5b3, 0x1, 0x0);
        gbc.writeMem(0x6701, { 0xcb, 0xe });
        gbc.writeMem(0xf5b3, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7067);
        EXPECT(gbc.pc(), 0x6703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5b3), 0xc5);
        // CB 0E 0229
        gbc.setState(0xcb05, 0xcc60, 0xc6c0, 0xd67c, 0x67fe, 0x965d, 0x0, 0x1);
        gbc.writeMem(0x965d, { 0x71 });
        gbc.writeMem(0xcb05, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcc60);
        EXPECT(gbc.pc(), 0xcb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965d), 0xb8);
        EXPECT(gbc.readMem(0xcb05), 0xcb);
        EXPECT(gbc.readMem(0xcb06), 0xe);
        // CB 0E 022B
        gbc.setState(0x4075, 0x4a9c, 0xcf40, 0x9b9e, 0x25ef, 0xe4a5, 0x0, 0x0);
        gbc.writeMem(0x4075, { 0xcb, 0xe });
        gbc.writeMem(0xe4a5, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4a9c);
        EXPECT(gbc.pc(), 0x4077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a5), 0xd);
        // CB 0E 022C
        gbc.setState(0xab39, 0x4fa2, 0xade0, 0x7661, 0xfc53, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0x8cba, { 0x1 });
        gbc.writeMem(0xab39, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4fa2);
        EXPECT(gbc.pc(), 0xab3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cba), 0x80);
        EXPECT(gbc.readMem(0xab39), 0xcb);
        EXPECT(gbc.readMem(0xab3a), 0xe);
        // CB 0E 0231
        gbc.setState(0x542d, 0x4683, 0x3f0, 0x1c5e, 0xa63, 0xe7ef, 0x1, 0x0);
        gbc.writeMem(0x542d, { 0xcb, 0xe });
        gbc.writeMem(0xe7ef, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4683);
        EXPECT(gbc.pc(), 0x542f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ef), 0x90);
        // CB 0E 0233
        gbc.setState(0x90cf, 0x891e, 0xf70, 0x7be8, 0x9cbd, 0xe960, 0x1, 0x1);
        gbc.writeMem(0x90cf, { 0xcb, 0xe });
        gbc.writeMem(0xe960, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x891e);
        EXPECT(gbc.pc(), 0x90d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cf), 0xcb);
        EXPECT(gbc.readMem(0x90d0), 0xe);
        EXPECT(gbc.readMem(0xe960), 0xb4);
        // CB 0E 0235
        gbc.setState(0xa5b6, 0x58d4, 0x120, 0x977b, 0xd233, 0xc155, 0x1, 0x1);
        gbc.writeMem(0xa5b6, { 0xcb, 0xe });
        gbc.writeMem(0xc155, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x58d4);
        EXPECT(gbc.pc(), 0xa5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b6), 0xcb);
        EXPECT(gbc.readMem(0xa5b7), 0xe);
        EXPECT(gbc.readMem(0xc155), 0x9f);
        // CB 0E 0239
        gbc.setState(0x1329, 0x6cce, 0x36a0, 0x32ba, 0xd1d6, 0xe890, 0x0, 0x1);
        gbc.writeMem(0x1329, { 0xcb, 0xe });
        gbc.writeMem(0xe890, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6cce);
        EXPECT(gbc.pc(), 0x132b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe890), 0x70);
        // CB 0E 023B
        gbc.setState(0xd825, 0x124a, 0x8ca0, 0x5928, 0x1306, 0xd8d7, 0x0, 0x0);
        gbc.writeMem(0xd825, { 0xcb, 0xe });
        gbc.writeMem(0xd8d7, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x124a);
        EXPECT(gbc.pc(), 0xd827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd825), 0xcb);
        EXPECT(gbc.readMem(0xd826), 0xe);
        EXPECT(gbc.readMem(0xd8d7), 0xa5);
        // CB 0E 023D
        gbc.setState(0xd044, 0xf2fd, 0xe070, 0xd4ee, 0xb227, 0xb0e7, 0x0, 0x0);
        gbc.writeMem(0xb0e7, { 0xeb });
        gbc.writeMem(0xd044, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf2fd);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e7), 0xf5);
        EXPECT(gbc.readMem(0xd044), 0xcb);
        EXPECT(gbc.readMem(0xd045), 0xe);
        // CB 0E 023E
        gbc.setState(0xa2c7, 0xd7ec, 0x4ed0, 0xa5e4, 0xd279, 0xdf96, 0x0, 0x1);
        gbc.writeMem(0xa2c7, { 0xcb, 0xe });
        gbc.writeMem(0xdf96, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd7ec);
        EXPECT(gbc.pc(), 0xa2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c7), 0xcb);
        EXPECT(gbc.readMem(0xa2c8), 0xe);
        EXPECT(gbc.readMem(0xdf96), 0xdf);
        // CB 0E 0240
        gbc.setState(0x2042, 0x7b9b, 0xcf00, 0xfc3a, 0x6515, 0x83a5, 0x0, 0x0);
        gbc.writeMem(0x2042, { 0xcb, 0xe });
        gbc.writeMem(0x83a5, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7b9b);
        EXPECT(gbc.pc(), 0x2044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a5), 0xc7);
        // CB 0E 0243
        gbc.setState(0x9b84, 0x4d7c, 0x3a60, 0x5f9f, 0x76a2, 0xa7ff, 0x0, 0x0);
        gbc.writeMem(0x9b84, { 0xcb, 0xe });
        gbc.writeMem(0xa7ff, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4d7c);
        EXPECT(gbc.pc(), 0x9b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b84), 0xcb);
        EXPECT(gbc.readMem(0x9b85), 0xe);
        EXPECT(gbc.readMem(0xa7ff), 0xdc);
        // CB 0E 0248
        gbc.setState(0x2806, 0x502e, 0xd5f0, 0xdb62, 0xa26, 0x99f1, 0x1, 0x0);
        gbc.writeMem(0x2806, { 0xcb, 0xe });
        gbc.writeMem(0x99f1, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x502e);
        EXPECT(gbc.pc(), 0x2808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f1), 0x3a);
        // CB 0E 0249
        gbc.setState(0xe2b5, 0xfda8, 0xe9a0, 0x7ca2, 0xb880, 0x9b9e, 0x0, 0x1);
        gbc.writeMem(0x9b9e, { 0xd3 });
        gbc.writeMem(0xe2b5, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9e), 0xe9);
        EXPECT(gbc.readMem(0xe2b5), 0xcb);
        EXPECT(gbc.readMem(0xe2b6), 0xe);
        // CB 0E 024B
        gbc.setState(0x7f31, 0x6023, 0x5240, 0x26fc, 0x8b45, 0xfff8, 0x1, 0x0);
        gbc.writeMem(0x7f31, { 0xcb, 0xe });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0x7f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff8), 0x7c);
        // CB 0E 024C
        gbc.setState(0x4f6f, 0xef26, 0xf4a0, 0x87a8, 0xfd62, 0xd841, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0xe });
        gbc.writeMem(0xd841, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0x4f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd841), 0xe0);
        // CB 0E 024E
        gbc.setState(0xc1e4, 0x87a4, 0x4170, 0x9de8, 0x190d, 0x8aae, 0x1, 0x0);
        gbc.writeMem(0x8aae, { 0x69 });
        gbc.writeMem(0xc1e4, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x87a4);
        EXPECT(gbc.pc(), 0xc1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aae), 0xb4);
        EXPECT(gbc.readMem(0xc1e4), 0xcb);
        EXPECT(gbc.readMem(0xc1e5), 0xe);
        // CB 0E 024F
        gbc.setState(0x7bdd, 0xcc64, 0x15b0, 0x4c2a, 0x2a76, 0x8e19, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0xcb, 0xe });
        gbc.writeMem(0x8e19, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcc64);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e19), 0xfe);
        // CB 0E 0250
        gbc.setState(0x62a, 0xb469, 0x6510, 0xc76c, 0x94c9, 0xe830, 0x0, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0xe });
        gbc.writeMem(0xe830, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe830), 0xbe);
        // CB 0E 0251
        gbc.setState(0x9bde, 0x72c7, 0xb110, 0x8a71, 0x4def, 0x8b32, 0x1, 0x1);
        gbc.writeMem(0x8b32, { 0xe1 });
        gbc.writeMem(0x9bde, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x72c7);
        EXPECT(gbc.pc(), 0x9be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b32), 0xf0);
        EXPECT(gbc.readMem(0x9bde), 0xcb);
        EXPECT(gbc.readMem(0x9bdf), 0xe);
        // CB 0E 0252
        gbc.setState(0xb750, 0xf113, 0xc910, 0x4787, 0xf4d, 0xa11a, 0x0, 0x0);
        gbc.writeMem(0xa11a, { 0xe0 });
        gbc.writeMem(0xb750, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf113);
        EXPECT(gbc.pc(), 0xb752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11a), 0x70);
        EXPECT(gbc.readMem(0xb750), 0xcb);
        EXPECT(gbc.readMem(0xb751), 0xe);
        // CB 0E 0253
        gbc.setState(0x48fd, 0x4c39, 0x2860, 0xe881, 0x5583, 0x980d, 0x0, 0x1);
        gbc.writeMem(0x48fd, { 0xcb, 0xe });
        gbc.writeMem(0x980d, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0x48ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980d), 0x52);
        // CB 0E 0258
        gbc.setState(0x8561, 0xe32a, 0x2b50, 0x8072, 0xf1cc, 0xc705, 0x0, 0x1);
        gbc.writeMem(0x8561, { 0xcb, 0xe });
        gbc.writeMem(0xc705, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe32a);
        EXPECT(gbc.pc(), 0x8563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8561), 0xcb);
        EXPECT(gbc.readMem(0x8562), 0xe);
        EXPECT(gbc.readMem(0xc705), 0x47);
        // CB 0E 025A
        gbc.setState(0xcf92, 0x3544, 0xfd30, 0xc1a0, 0xa9ca, 0xd66d, 0x1, 0x1);
        gbc.writeMem(0xcf92, { 0xcb, 0xe });
        gbc.writeMem(0xd66d, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3544);
        EXPECT(gbc.pc(), 0xcf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf92), 0xcb);
        EXPECT(gbc.readMem(0xcf93), 0xe);
        EXPECT(gbc.readMem(0xd66d), 0xab);
        // CB 0E 025C
        gbc.setState(0x2be, 0xd002, 0x74b0, 0xcc91, 0xb673, 0xec55, 0x1, 0x0);
        gbc.writeMem(0x2be, { 0xcb, 0xe });
        gbc.writeMem(0xec55, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd002);
        EXPECT(gbc.pc(), 0x2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec55), 0x67);
        // CB 0E 025D
        gbc.setState(0x9181, 0xaab4, 0x6360, 0xc779, 0xa6ba, 0x822f, 0x1, 0x0);
        gbc.writeMem(0x822f, { 0xf6 });
        gbc.writeMem(0x9181, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaab4);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822f), 0x7b);
        EXPECT(gbc.readMem(0x9181), 0xcb);
        EXPECT(gbc.readMem(0x9182), 0xe);
        // CB 0E 025F
        gbc.setState(0x547c, 0x15b, 0x39c0, 0x38d6, 0xb327, 0x8cee, 0x0, 0x0);
        gbc.writeMem(0x547c, { 0xcb, 0xe });
        gbc.writeMem(0x8cee, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x15b);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cee), 0xa4);
        // CB 0E 0261
        gbc.setState(0xbdd6, 0xe7dd, 0x9fa0, 0xf00a, 0x34b4, 0x97f1, 0x0, 0x1);
        gbc.writeMem(0x97f1, { 0x1a });
        gbc.writeMem(0xbdd6, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe7dd);
        EXPECT(gbc.pc(), 0xbdd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f1), 0xd);
        EXPECT(gbc.readMem(0xbdd6), 0xcb);
        EXPECT(gbc.readMem(0xbdd7), 0xe);
        // CB 0E 0263
        gbc.setState(0x7d19, 0xb7, 0xf350, 0x1073, 0x1803, 0xc20e, 0x0, 0x1);
        gbc.writeMem(0x7d19, { 0xcb, 0xe });
        gbc.writeMem(0xc20e, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb7);
        EXPECT(gbc.pc(), 0x7d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20e), 0x99);
        // CB 0E 0264
        gbc.setState(0x7467, 0xf9c5, 0x99a0, 0xaad1, 0x389d, 0xc5e1, 0x1, 0x0);
        gbc.writeMem(0x7467, { 0xcb, 0xe });
        gbc.writeMem(0xc5e1, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf9c5);
        EXPECT(gbc.pc(), 0x7469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e1), 0xc3);
        // CB 0E 0268
        gbc.setState(0x81ed, 0x17ee, 0x4670, 0x7c77, 0x922a, 0x9559, 0x1, 0x1);
        gbc.writeMem(0x81ed, { 0xcb, 0xe });
        gbc.writeMem(0x9559, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x17ee);
        EXPECT(gbc.pc(), 0x81ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ed), 0xcb);
        EXPECT(gbc.readMem(0x81ee), 0xe);
        EXPECT(gbc.readMem(0x9559), 0xc9);
        // CB 0E 0269
        gbc.setState(0xddb0, 0x9110, 0xf700, 0x83ea, 0x45ca, 0xd9ae, 0x0, 0x1);
        gbc.writeMem(0xd9ae, { 0xfd });
        gbc.writeMem(0xddb0, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9110);
        EXPECT(gbc.pc(), 0xddb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ae), 0xfe);
        EXPECT(gbc.readMem(0xddb0), 0xcb);
        EXPECT(gbc.readMem(0xddb1), 0xe);
        // CB 0E 026B
        gbc.setState(0x2c53, 0x6f6d, 0x3100, 0x9525, 0x7026, 0x99c9, 0x0, 0x0);
        gbc.writeMem(0x2c53, { 0xcb, 0xe });
        gbc.writeMem(0x99c9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6f6d);
        EXPECT(gbc.pc(), 0x2c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c9), 0x8);
        // CB 0E 026D
        gbc.setState(0xfdb, 0xc9a8, 0xf390, 0x61e6, 0xdfaf, 0xd1eb, 0x1, 0x0);
        gbc.writeMem(0xfdb, { 0xcb, 0xe });
        gbc.writeMem(0xd1eb, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc9a8);
        EXPECT(gbc.pc(), 0xfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1eb), 0xb);
        // CB 0E 026E
        gbc.setState(0xfa0, 0x4f6, 0xf1b0, 0x41cb, 0xa2c9, 0xede2, 0x0, 0x1);
        gbc.writeMem(0xfa0, { 0xcb, 0xe });
        gbc.writeMem(0xede2, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4f6);
        EXPECT(gbc.pc(), 0xfa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede2), 0x99);
        // CB 0E 026F
        gbc.setState(0xb40, 0x991d, 0x49a0, 0x1637, 0xb3c, 0xa991, 0x0, 0x0);
        gbc.writeMem(0xb40, { 0xcb, 0xe });
        gbc.writeMem(0xa991, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x991d);
        EXPECT(gbc.pc(), 0xb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa991), 0xc2);
        // CB 0E 0270
        gbc.setState(0x7e5, 0xa3e9, 0x270, 0x56a8, 0x49b7, 0xd29d, 0x0, 0x0);
        gbc.writeMem(0x7e5, { 0xcb, 0xe });
        gbc.writeMem(0xd29d, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa3e9);
        EXPECT(gbc.pc(), 0x7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd29d), 0xb2);
        // CB 0E 0272
        gbc.setState(0x6f97, 0x51ac, 0xe2c0, 0x885a, 0x108c, 0x8cac, 0x0, 0x1);
        gbc.writeMem(0x6f97, { 0xcb, 0xe });
        gbc.writeMem(0x8cac, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x51ac);
        EXPECT(gbc.pc(), 0x6f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cac), 0xf0);
        // CB 0E 0273
        gbc.setState(0x4db1, 0x765, 0xe0a0, 0x1aaa, 0x2330, 0xd918, 0x1, 0x1);
        gbc.writeMem(0x4db1, { 0xcb, 0xe });
        gbc.writeMem(0xd918, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x765);
        EXPECT(gbc.pc(), 0x4db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd918), 0x2f);
        // CB 0E 0279
        gbc.setState(0xab84, 0xa6f2, 0xf230, 0x26f0, 0xa250, 0xc631, 0x0, 0x1);
        gbc.writeMem(0xab84, { 0xcb, 0xe });
        gbc.writeMem(0xc631, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa6f2);
        EXPECT(gbc.pc(), 0xab86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab84), 0xcb);
        EXPECT(gbc.readMem(0xab85), 0xe);
        EXPECT(gbc.readMem(0xc631), 0x32);
        // CB 0E 027B
        gbc.setState(0x8ed2, 0x99cd, 0xd520, 0xa11e, 0x7f4c, 0xf5ac, 0x0, 0x0);
        gbc.writeMem(0x8ed2, { 0xcb, 0xe });
        gbc.writeMem(0xf5ac, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0x8ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed2), 0xcb);
        EXPECT(gbc.readMem(0x8ed3), 0xe);
        EXPECT(gbc.readMem(0xf5ac), 0x59);
        // CB 0E 027C
        gbc.setState(0x59e9, 0x68cb, 0x12d0, 0x14ea, 0x2857, 0x9b0b, 0x0, 0x1);
        gbc.writeMem(0x59e9, { 0xcb, 0xe });
        gbc.writeMem(0x9b0b, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0x59eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0b), 0xc7);
        // CB 0E 027D
        gbc.setState(0x3ed9, 0x1424, 0x46d0, 0x6f86, 0xdf16, 0xe628, 0x0, 0x1);
        gbc.writeMem(0x3ed9, { 0xcb, 0xe });
        gbc.writeMem(0xe628, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1424);
        EXPECT(gbc.pc(), 0x3edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe628), 0xbf);
        // CB 0E 027E
        gbc.setState(0x53a3, 0xb78d, 0xdb70, 0x171, 0x5823, 0xa80f, 0x1, 0x0);
        gbc.writeMem(0x53a3, { 0xcb, 0xe });
        gbc.writeMem(0xa80f, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb78d);
        EXPECT(gbc.pc(), 0x53a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80f), 0x8b);
        // CB 0E 027F
        gbc.setState(0xe902, 0xf3fd, 0xd9b0, 0x679d, 0x5e1f, 0xa43c, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0x58 });
        gbc.writeMem(0xe902, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf3fd);
        EXPECT(gbc.pc(), 0xe904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43c), 0x2c);
        EXPECT(gbc.readMem(0xe902), 0xcb);
        EXPECT(gbc.readMem(0xe903), 0xe);
        // CB 0E 0281
        gbc.setState(0xe025, 0x9619, 0x2b70, 0x8ea8, 0xfe37, 0xbc82, 0x0, 0x0);
        gbc.writeMem(0xbc82, { 0x42 });
        gbc.writeMem(0xe025, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9619);
        EXPECT(gbc.pc(), 0xe027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc82), 0x21);
        EXPECT(gbc.readMem(0xe025), 0xcb);
        EXPECT(gbc.readMem(0xe026), 0xe);
        // CB 0E 0283
        gbc.setState(0xbc5c, 0xd98, 0xbfa0, 0xa44b, 0xe4cc, 0xb0c2, 0x0, 0x1);
        gbc.writeMem(0xb0c2, { 0xc6 });
        gbc.writeMem(0xbc5c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd98);
        EXPECT(gbc.pc(), 0xbc5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c2), 0x63);
        EXPECT(gbc.readMem(0xbc5c), 0xcb);
        EXPECT(gbc.readMem(0xbc5d), 0xe);
        // CB 0E 0285
        gbc.setState(0x2b6a, 0x6af6, 0xe430, 0xf1c9, 0x98e4, 0xce2b, 0x1, 0x1);
        gbc.writeMem(0x2b6a, { 0xcb, 0xe });
        gbc.writeMem(0xce2b, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6af6);
        EXPECT(gbc.pc(), 0x2b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2b), 0x95);
        // CB 0E 0287
        gbc.setState(0x1fe0, 0x3222, 0x9dc0, 0xa2ef, 0xa82, 0xbc67, 0x0, 0x1);
        gbc.writeMem(0x1fe0, { 0xcb, 0xe });
        gbc.writeMem(0xbc67, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3222);
        EXPECT(gbc.pc(), 0x1fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc67), 0x13);
        // CB 0E 0288
        gbc.setState(0x4446, 0xf704, 0xfe20, 0x814f, 0x581c, 0x9c53, 0x1, 0x1);
        gbc.writeMem(0x4446, { 0xcb, 0xe });
        gbc.writeMem(0x9c53, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf704);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c53), 0xc4);
        // CB 0E 028A
        gbc.setState(0x6907, 0x1b37, 0x23a0, 0xff5b, 0x6975, 0xa5ef, 0x0, 0x0);
        gbc.writeMem(0x6907, { 0xcb, 0xe });
        gbc.writeMem(0xa5ef, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1b37);
        EXPECT(gbc.pc(), 0x6909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ef), 0x65);
        // CB 0E 028C
        gbc.setState(0x6cdc, 0x2ac4, 0x5d40, 0x3adc, 0xcf60, 0xed1d, 0x0, 0x0);
        gbc.writeMem(0x6cdc, { 0xcb, 0xe });
        gbc.writeMem(0xed1d, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2ac4);
        EXPECT(gbc.pc(), 0x6cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1d), 0x17);
        // CB 0E 028D
        gbc.setState(0x88a9, 0x4e03, 0x3770, 0x1e7b, 0x8bb1, 0xb471, 0x0, 0x1);
        gbc.writeMem(0x88a9, { 0xcb, 0xe });
        gbc.writeMem(0xb471, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4e03);
        EXPECT(gbc.pc(), 0x88ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a9), 0xcb);
        EXPECT(gbc.readMem(0x88aa), 0xe);
        EXPECT(gbc.readMem(0xb471), 0x8a);
        // CB 0E 028E
        gbc.setState(0x91b7, 0x2983, 0x2f90, 0xc09a, 0xf4c0, 0xd050, 0x0, 0x1);
        gbc.writeMem(0x91b7, { 0xcb, 0xe });
        gbc.writeMem(0xd050, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x91b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b7), 0xcb);
        EXPECT(gbc.readMem(0x91b8), 0xe);
        EXPECT(gbc.readMem(0xd050), 0x1b);
        // CB 0E 028F
        gbc.setState(0x36b4, 0xe302, 0x46c0, 0x5cc, 0x1302, 0xb546, 0x0, 0x1);
        gbc.writeMem(0x36b4, { 0xcb, 0xe });
        gbc.writeMem(0xb546, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe302);
        EXPECT(gbc.pc(), 0x36b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb546), 0xc6);
        // CB 0E 0290
        gbc.setState(0x9e11, 0x278a, 0xc8d0, 0xc7cf, 0x2e89, 0x8d7c, 0x0, 0x0);
        gbc.writeMem(0x8d7c, { 0x95 });
        gbc.writeMem(0x9e11, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x278a);
        EXPECT(gbc.pc(), 0x9e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7c), 0xca);
        EXPECT(gbc.readMem(0x9e11), 0xcb);
        EXPECT(gbc.readMem(0x9e12), 0xe);
        // CB 0E 0293
        gbc.setState(0x3b11, 0x2505, 0x6a20, 0x25be, 0x7dfe, 0xf445, 0x1, 0x1);
        gbc.writeMem(0x3b11, { 0xcb, 0xe });
        gbc.writeMem(0xf445, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2505);
        EXPECT(gbc.pc(), 0x3b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf445), 0xb);
        // CB 0E 0296
        gbc.setState(0xdf15, 0xb3b2, 0xd480, 0xca78, 0x10ad, 0xb1a1, 0x1, 0x1);
        gbc.writeMem(0xb1a1, { 0x60 });
        gbc.writeMem(0xdf15, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb3b2);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a1), 0x30);
        EXPECT(gbc.readMem(0xdf15), 0xcb);
        EXPECT(gbc.readMem(0xdf16), 0xe);
        // CB 0E 0297
        gbc.setState(0x16b3, 0x21d2, 0xd0f0, 0x7374, 0xfef4, 0xdc9f, 0x1, 0x0);
        gbc.writeMem(0x16b3, { 0xcb, 0xe });
        gbc.writeMem(0xdc9f, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x21d2);
        EXPECT(gbc.pc(), 0x16b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9f), 0x9c);
        // CB 0E 0298
        gbc.setState(0x39dd, 0xd9f0, 0x1610, 0x5410, 0x9909, 0x9924, 0x0, 0x0);
        gbc.writeMem(0x39dd, { 0xcb, 0xe });
        gbc.writeMem(0x9924, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd9f0);
        EXPECT(gbc.pc(), 0x39df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9924), 0x60);
        // CB 0E 029B
        gbc.setState(0xa7d5, 0xde26, 0x1f00, 0x5342, 0xb439, 0xb754, 0x0, 0x0);
        gbc.writeMem(0xa7d5, { 0xcb, 0xe });
        gbc.writeMem(0xb754, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xde26);
        EXPECT(gbc.pc(), 0xa7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d5), 0xcb);
        EXPECT(gbc.readMem(0xa7d6), 0xe);
        EXPECT(gbc.readMem(0xb754), 0x37);
        // CB 0E 029C
        gbc.setState(0xc2, 0xfc9c, 0x5ed0, 0x6612, 0xee05, 0xa51e, 0x1, 0x0);
        gbc.writeMem(0xc2, { 0xcb, 0xe });
        gbc.writeMem(0xa51e, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfc9c);
        EXPECT(gbc.pc(), 0xc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0xc);
        // CB 0E 02A4
        gbc.setState(0x7d1d, 0x8dd6, 0xba30, 0x63ef, 0xf183, 0xe56c, 0x1, 0x0);
        gbc.writeMem(0x7d1d, { 0xcb, 0xe });
        gbc.writeMem(0xe56c, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8dd6);
        EXPECT(gbc.pc(), 0x7d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56c), 0xef);
        // CB 0E 02A6
        gbc.setState(0x8bff, 0xff8, 0x3880, 0x32ae, 0xd49e, 0xf1d1, 0x1, 0x0);
        gbc.writeMem(0x8bff, { 0xcb, 0xe });
        gbc.writeMem(0xf1d1, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bff), 0xcb);
        EXPECT(gbc.readMem(0x8c00), 0xe);
        EXPECT(gbc.readMem(0xf1d1), 0x63);
        // CB 0E 02AB
        gbc.setState(0x209c, 0xc23c, 0x3bb0, 0x97ce, 0x2ec2, 0xf2b2, 0x1, 0x0);
        gbc.writeMem(0x209c, { 0xcb, 0xe });
        gbc.writeMem(0xf2b2, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc23c);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2b2), 0x7c);
        // CB 0E 02AC
        gbc.setState(0x8990, 0x4610, 0x24b0, 0x2df7, 0x7107, 0xd805, 0x0, 0x1);
        gbc.writeMem(0x8990, { 0xcb, 0xe });
        gbc.writeMem(0xd805, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4610);
        EXPECT(gbc.pc(), 0x8992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8990), 0xcb);
        EXPECT(gbc.readMem(0x8991), 0xe);
        EXPECT(gbc.readMem(0xd805), 0xdb);
        // CB 0E 02B1
        gbc.setState(0x9c55, 0x8f14, 0x5950, 0x4e21, 0x8c6b, 0xeaf7, 0x1, 0x1);
        gbc.writeMem(0x9c55, { 0xcb, 0xe });
        gbc.writeMem(0xeaf7, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8f14);
        EXPECT(gbc.pc(), 0x9c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c55), 0xcb);
        EXPECT(gbc.readMem(0x9c56), 0xe);
        EXPECT(gbc.readMem(0xeaf7), 0xe0);
        // CB 0E 02B4
        gbc.setState(0x783, 0x2c67, 0x6ad0, 0x7f06, 0xecd6, 0xb9f8, 0x1, 0x0);
        gbc.writeMem(0x783, { 0xcb, 0xe });
        gbc.writeMem(0xb9f8, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2c67);
        EXPECT(gbc.pc(), 0x785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f8), 0x2f);
        // CB 0E 02B5
        gbc.setState(0xe8dc, 0x3104, 0x63d0, 0x65bf, 0x95bd, 0xcb6f, 0x0, 0x1);
        gbc.writeMem(0xcb6f, { 0x52 });
        gbc.writeMem(0xe8dc, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3104);
        EXPECT(gbc.pc(), 0xe8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6f), 0x29);
        EXPECT(gbc.readMem(0xe8dc), 0xcb);
        EXPECT(gbc.readMem(0xe8dd), 0xe);
        // CB 0E 02B6
        gbc.setState(0x1f9a, 0x5197, 0x4a50, 0x75a1, 0xbe70, 0xdd24, 0x1, 0x0);
        gbc.writeMem(0x1f9a, { 0xcb, 0xe });
        gbc.writeMem(0xdd24, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0x1f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd24), 0x53);
        // CB 0E 02B7
        gbc.setState(0x5603, 0x65dd, 0x9e40, 0xd851, 0x865d, 0x8b97, 0x1, 0x0);
        gbc.writeMem(0x5603, { 0xcb, 0xe });
        gbc.writeMem(0x8b97, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x65dd);
        EXPECT(gbc.pc(), 0x5605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b97), 0x71);
        // CB 0E 02BA
        gbc.setState(0xb6c8, 0x5de8, 0xa140, 0xf949, 0x5b83, 0xa1fe, 0x1, 0x0);
        gbc.writeMem(0xa1fe, { 0xf5 });
        gbc.writeMem(0xb6c8, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5de8);
        EXPECT(gbc.pc(), 0xb6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fe), 0xfa);
        EXPECT(gbc.readMem(0xb6c8), 0xcb);
        EXPECT(gbc.readMem(0xb6c9), 0xe);
        // CB 0E 02BC
        gbc.setState(0xcc93, 0x5562, 0x6060, 0x1ecd, 0x4334, 0xf873, 0x0, 0x1);
        gbc.writeMem(0xcc93, { 0xcb, 0xe });
        gbc.writeMem(0xf873, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5562);
        EXPECT(gbc.pc(), 0xcc95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc93), 0xcb);
        EXPECT(gbc.readMem(0xcc94), 0xe);
        EXPECT(gbc.readMem(0xf873), 0x76);
        // CB 0E 02BD
        gbc.setState(0x3f44, 0xe002, 0xbd10, 0xd4aa, 0x2f52, 0xfc81, 0x1, 0x1);
        gbc.writeMem(0x3f44, { 0xcb, 0xe });
        gbc.writeMem(0xfc81, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe002);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc81), 0x27);
        // CB 0E 02BE
        gbc.setState(0x5e67, 0x897b, 0x8f20, 0x424b, 0x5ebb, 0x865a, 0x1, 0x1);
        gbc.writeMem(0x5e67, { 0xcb, 0xe });
        gbc.writeMem(0x865a, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x897b);
        EXPECT(gbc.pc(), 0x5e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865a), 0xe9);
        // CB 0E 02BF
        gbc.setState(0x637a, 0xa002, 0x1b10, 0x15bd, 0x8a8a, 0x8af9, 0x0, 0x0);
        gbc.writeMem(0x637a, { 0xcb, 0xe });
        gbc.writeMem(0x8af9, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa002);
        EXPECT(gbc.pc(), 0x637c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af9), 0x44);
        // CB 0E 02C0
        gbc.setState(0xe138, 0xbc0d, 0x1350, 0x706f, 0x590d, 0xe0d5, 0x1, 0x0);
        gbc.writeMem(0xe0d5, { 0x19 });
        gbc.writeMem(0xe138, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbc0d);
        EXPECT(gbc.pc(), 0xe13a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d5), 0x8c);
        EXPECT(gbc.readMem(0xe138), 0xcb);
        EXPECT(gbc.readMem(0xe139), 0xe);
        // CB 0E 02C1
        gbc.setState(0xc98e, 0xe9d2, 0x9a50, 0x82c1, 0x664b, 0xa811, 0x1, 0x0);
        gbc.writeMem(0xa811, { 0xcd });
        gbc.writeMem(0xc98e, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe9d2);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa811), 0xe6);
        EXPECT(gbc.readMem(0xc98e), 0xcb);
        EXPECT(gbc.readMem(0xc98f), 0xe);
        // CB 0E 02C5
        gbc.setState(0xb9a9, 0xbf29, 0x6d00, 0x46f2, 0xbee7, 0xf534, 0x0, 0x1);
        gbc.writeMem(0xb9a9, { 0xcb, 0xe });
        gbc.writeMem(0xf534, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbf29);
        EXPECT(gbc.pc(), 0xb9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a9), 0xcb);
        EXPECT(gbc.readMem(0xb9aa), 0xe);
        EXPECT(gbc.readMem(0xf534), 0x92);
        // CB 0E 02C6
        gbc.setState(0x56d3, 0xbd97, 0x7a00, 0xb14e, 0x1dad, 0xac12, 0x1, 0x1);
        gbc.writeMem(0x56d3, { 0xcb, 0xe });
        gbc.writeMem(0xac12, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbd97);
        EXPECT(gbc.pc(), 0x56d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac12), 0x2f);
        // CB 0E 02C7
        gbc.setState(0xc94c, 0xb771, 0x14a0, 0x46aa, 0xf694, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0xc94c, { 0xcb, 0xe });
        gbc.writeMem(0xfa4a, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0xc94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94c), 0xcb);
        EXPECT(gbc.readMem(0xc94d), 0xe);
        EXPECT(gbc.readMem(0xfa4a), 0xa2);
        // CB 0E 02C8
        gbc.setState(0x7fb4, 0x156f, 0x30a0, 0x2f68, 0xa008, 0xfdbb, 0x0, 0x1);
        gbc.writeMem(0x7fb4, { 0xcb, 0xe });
        gbc.writeMem(0xfdbb, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x156f);
        EXPECT(gbc.pc(), 0x7fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdbb), 0x77);
        // CB 0E 02C9
        gbc.setState(0x9b2c, 0x717e, 0x58a0, 0x9bdd, 0x7d87, 0x89d3, 0x0, 0x0);
        gbc.writeMem(0x89d3, { 0x20 });
        gbc.writeMem(0x9b2c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x717e);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d3), 0x10);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0xe);
        // CB 0E 02CA
        gbc.setState(0x1ca7, 0xc44d, 0x1150, 0x730e, 0x5560, 0xb46b, 0x1, 0x0);
        gbc.writeMem(0x1ca7, { 0xcb, 0xe });
        gbc.writeMem(0xb46b, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc44d);
        EXPECT(gbc.pc(), 0x1ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46b), 0x87);
        // CB 0E 02CB
        gbc.setState(0x1da4, 0xfa7d, 0xab70, 0x4ff9, 0x896b, 0xb564, 0x0, 0x1);
        gbc.writeMem(0x1da4, { 0xcb, 0xe });
        gbc.writeMem(0xb564, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfa7d);
        EXPECT(gbc.pc(), 0x1da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb564), 0x9f);
        // CB 0E 02CC
        gbc.setState(0x4bbd, 0xa4f4, 0xfdb0, 0x6965, 0x793f, 0x9041, 0x1, 0x1);
        gbc.writeMem(0x4bbd, { 0xcb, 0xe });
        gbc.writeMem(0x9041, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa4f4);
        EXPECT(gbc.pc(), 0x4bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9041), 0xef);
        // CB 0E 02CE
        gbc.setState(0x4dce, 0x9eda, 0x6370, 0xea51, 0x28c1, 0xaa64, 0x1, 0x1);
        gbc.writeMem(0x4dce, { 0xcb, 0xe });
        gbc.writeMem(0xaa64, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0x4dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa64), 0xee);
        // CB 0E 02D1
        gbc.setState(0xda87, 0xfb7a, 0xd860, 0x50a, 0xf44c, 0x92b4, 0x1, 0x0);
        gbc.writeMem(0x92b4, { 0x85 });
        gbc.writeMem(0xda87, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0xda89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b4), 0xc2);
        EXPECT(gbc.readMem(0xda87), 0xcb);
        EXPECT(gbc.readMem(0xda88), 0xe);
        // CB 0E 02D3
        gbc.setState(0x300f, 0xb6a0, 0x63f0, 0xfea6, 0x6baa, 0x9c41, 0x0, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0xe });
        gbc.writeMem(0x9c41, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb6a0);
        EXPECT(gbc.pc(), 0x3011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c41), 0x6c);
        // CB 0E 02D6
        gbc.setState(0x60d7, 0xd945, 0x6cb0, 0xb22, 0xe15c, 0xbf08, 0x1, 0x1);
        gbc.writeMem(0x60d7, { 0xcb, 0xe });
        gbc.writeMem(0xbf08, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd945);
        EXPECT(gbc.pc(), 0x60d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf08), 0x53);
        // CB 0E 02D7
        gbc.setState(0x3998, 0xd796, 0x1d40, 0xf3db, 0x2628, 0x8aa8, 0x1, 0x0);
        gbc.writeMem(0x3998, { 0xcb, 0xe });
        gbc.writeMem(0x8aa8, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd796);
        EXPECT(gbc.pc(), 0x399a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa8), 0x6);
        // CB 0E 02D8
        gbc.setState(0xa471, 0x24a5, 0xb9e0, 0x7ed4, 0xa45d, 0xf152, 0x1, 0x0);
        gbc.writeMem(0xa471, { 0xcb, 0xe });
        gbc.writeMem(0xf152, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24a5);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa471), 0xcb);
        EXPECT(gbc.readMem(0xa472), 0xe);
        EXPECT(gbc.readMem(0xf152), 0xe2);
        // CB 0E 02DA
        gbc.setState(0xf19, 0xe928, 0x6d10, 0x301a, 0x14df, 0xd26b, 0x1, 0x1);
        gbc.writeMem(0xf19, { 0xcb, 0xe });
        gbc.writeMem(0xd26b, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe928);
        EXPECT(gbc.pc(), 0xf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26b), 0x65);
        // CB 0E 02DB
        gbc.setState(0x9881, 0xcd6e, 0xcad0, 0x60dd, 0x6665, 0xc5a1, 0x1, 0x1);
        gbc.writeMem(0x9881, { 0xcb, 0xe });
        gbc.writeMem(0xc5a1, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcd6e);
        EXPECT(gbc.pc(), 0x9883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9881), 0xcb);
        EXPECT(gbc.readMem(0x9882), 0xe);
        EXPECT(gbc.readMem(0xc5a1), 0x18);
        // CB 0E 02DD
        gbc.setState(0x143d, 0xcc7c, 0xb6c0, 0x676f, 0x5073, 0xc225, 0x1, 0x0);
        gbc.writeMem(0x143d, { 0xcb, 0xe });
        gbc.writeMem(0xc225, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0x143f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc225), 0xe2);
        // CB 0E 02E0
        gbc.setState(0x3894, 0xe2db, 0xe840, 0xdf9c, 0xb861, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x3894, { 0xcb, 0xe });
        gbc.writeMem(0xb609, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe2db);
        EXPECT(gbc.pc(), 0x3896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb609), 0x20);
        // CB 0E 02E1
        gbc.setState(0xd430, 0xba74, 0xe300, 0x8f48, 0x9371, 0x9ca7, 0x1, 0x1);
        gbc.writeMem(0x9ca7, { 0xe6 });
        gbc.writeMem(0xd430, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xba74);
        EXPECT(gbc.pc(), 0xd432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca7), 0x73);
        EXPECT(gbc.readMem(0xd430), 0xcb);
        EXPECT(gbc.readMem(0xd431), 0xe);
        // CB 0E 02E2
        gbc.setState(0xca72, 0xa9cb, 0x77b0, 0x6564, 0xee85, 0xf1c4, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0xcb, 0xe });
        gbc.writeMem(0xf1c4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa9cb);
        EXPECT(gbc.pc(), 0xca74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca72), 0xcb);
        EXPECT(gbc.readMem(0xca73), 0xe);
        EXPECT(gbc.readMem(0xf1c4), 0xec);
        // CB 0E 02E4
        gbc.setState(0x880, 0xc907, 0xe20, 0x5411, 0x49e5, 0xf366, 0x0, 0x1);
        gbc.writeMem(0x880, { 0xcb, 0xe });
        gbc.writeMem(0xf366, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc907);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf366), 0xdb);
        // CB 0E 02E6
        gbc.setState(0xaa7d, 0x61b0, 0x2940, 0x812e, 0xf9f5, 0xb4da, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0xe });
        gbc.writeMem(0xb4da, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x61b0);
        EXPECT(gbc.pc(), 0xaa7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7d), 0xcb);
        EXPECT(gbc.readMem(0xaa7e), 0xe);
        EXPECT(gbc.readMem(0xb4da), 0xf7);
        // CB 0E 02E7
        gbc.setState(0x4a16, 0x81f4, 0x4f40, 0x743a, 0x6320, 0xd623, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xcb, 0xe });
        gbc.writeMem(0xd623, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x81f4);
        EXPECT(gbc.pc(), 0x4a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd623), 0x7f);
        // CB 0E 02E9
        gbc.setState(0xba65, 0x850c, 0x10e0, 0x635b, 0xe9b2, 0xc1f2, 0x0, 0x1);
        gbc.writeMem(0xba65, { 0xcb, 0xe });
        gbc.writeMem(0xc1f2, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x850c);
        EXPECT(gbc.pc(), 0xba67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba65), 0xcb);
        EXPECT(gbc.readMem(0xba66), 0xe);
        EXPECT(gbc.readMem(0xc1f2), 0x5);
        // CB 0E 02EB
        gbc.setState(0x87e, 0x5721, 0x4130, 0x1102, 0x8c32, 0xe1ac, 0x0, 0x0);
        gbc.writeMem(0x87e, { 0xcb, 0xe });
        gbc.writeMem(0xe1ac, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5721);
        EXPECT(gbc.pc(), 0x880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ac), 0xc5);
        // CB 0E 02EC
        gbc.setState(0x8ae4, 0xf1c9, 0xaf90, 0xf16d, 0xb9e6, 0xc470, 0x0, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xe });
        gbc.writeMem(0xc470, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf1c9);
        EXPECT(gbc.pc(), 0x8ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae4), 0xcb);
        EXPECT(gbc.readMem(0x8ae5), 0xe);
        EXPECT(gbc.readMem(0xc470), 0xad);
        // CB 0E 02EE
        gbc.setState(0x340a, 0xdd, 0x7610, 0x8f0f, 0x58a1, 0xb528, 0x0, 0x1);
        gbc.writeMem(0x340a, { 0xcb, 0xe });
        gbc.writeMem(0xb528, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0x340c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb528), 0xee);
        // CB 0E 02EF
        gbc.setState(0x4395, 0x575d, 0x920, 0xd63b, 0x5862, 0x86b2, 0x1, 0x0);
        gbc.writeMem(0x4395, { 0xcb, 0xe });
        gbc.writeMem(0x86b2, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x575d);
        EXPECT(gbc.pc(), 0x4397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b2), 0xdb);
        // CB 0E 02F1
        gbc.setState(0x1b02, 0xd18b, 0xd240, 0x4476, 0x90de, 0xb4f7, 0x1, 0x0);
        gbc.writeMem(0x1b02, { 0xcb, 0xe });
        gbc.writeMem(0xb4f7, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd18b);
        EXPECT(gbc.pc(), 0x1b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0x8c);
        // CB 0E 02F2
        gbc.setState(0xd887, 0xe924, 0x9f90, 0xc7af, 0x73a7, 0xd1cb, 0x0, 0x0);
        gbc.writeMem(0xd1cb, { 0x89 });
        gbc.writeMem(0xd887, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0xd889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1cb), 0xc4);
        EXPECT(gbc.readMem(0xd887), 0xcb);
        EXPECT(gbc.readMem(0xd888), 0xe);
        // CB 0E 02F4
        gbc.setState(0x842f, 0xc3ce, 0x8e10, 0xf5c6, 0x1502, 0x9291, 0x1, 0x0);
        gbc.writeMem(0x842f, { 0xcb, 0xe });
        gbc.writeMem(0x9291, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc3ce);
        EXPECT(gbc.pc(), 0x8431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842f), 0xcb);
        EXPECT(gbc.readMem(0x8430), 0xe);
        EXPECT(gbc.readMem(0x9291), 0x74);
        // CB 0E 02F6
        gbc.setState(0x864b, 0xcf01, 0x810, 0xceb, 0x42f4, 0x82d2, 0x1, 0x1);
        gbc.writeMem(0x82d2, { 0x2a });
        gbc.writeMem(0x864b, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcf01);
        EXPECT(gbc.pc(), 0x864d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d2), 0x15);
        EXPECT(gbc.readMem(0x864b), 0xcb);
        EXPECT(gbc.readMem(0x864c), 0xe);
        // CB 0E 02F7
        gbc.setState(0x5dd5, 0xdb7d, 0x2440, 0xa67b, 0xc816, 0xd3f9, 0x0, 0x0);
        gbc.writeMem(0x5dd5, { 0xcb, 0xe });
        gbc.writeMem(0xd3f9, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdb7d);
        EXPECT(gbc.pc(), 0x5dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f9), 0xa3);
        // CB 0E 02FB
        gbc.setState(0xa64c, 0xd733, 0xe680, 0x9fcc, 0x6538, 0xc673, 0x1, 0x1);
        gbc.writeMem(0xa64c, { 0xcb, 0xe });
        gbc.writeMem(0xc673, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd733);
        EXPECT(gbc.pc(), 0xa64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64c), 0xcb);
        EXPECT(gbc.readMem(0xa64d), 0xe);
        EXPECT(gbc.readMem(0xc673), 0x88);
        // CB 0E 02FD
        gbc.setState(0xd59a, 0xaa5b, 0x69b0, 0x5556, 0x39a, 0x8242, 0x0, 0x0);
        gbc.writeMem(0x8242, { 0x54 });
        gbc.writeMem(0xd59a, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaa5b);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8242), 0x2a);
        EXPECT(gbc.readMem(0xd59a), 0xcb);
        EXPECT(gbc.readMem(0xd59b), 0xe);
        // CB 0E 02FE
        gbc.setState(0xbc73, 0x3c7a, 0x4320, 0x5614, 0x52c, 0xd820, 0x1, 0x1);
        gbc.writeMem(0xbc73, { 0xcb, 0xe });
        gbc.writeMem(0xd820, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3c7a);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0xcb);
        EXPECT(gbc.readMem(0xbc74), 0xe);
        EXPECT(gbc.readMem(0xd820), 0xf3);
        // CB 0E 02FF
        gbc.setState(0x5e66, 0xf045, 0xc5d0, 0xfc18, 0xfc41, 0xa566, 0x1, 0x0);
        gbc.writeMem(0x5e66, { 0xcb, 0xe });
        gbc.writeMem(0xa566, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf045);
        EXPECT(gbc.pc(), 0x5e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa566), 0xb9);
        // CB 0E 0303
        gbc.setState(0x5efd, 0x6d5c, 0x2ac0, 0xca2, 0x156d, 0xc665, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0xcb, 0xe });
        gbc.writeMem(0xc665, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6d5c);
        EXPECT(gbc.pc(), 0x5eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc665), 0xbd);
        // CB 0E 0305
        gbc.setState(0x902d, 0xec8d, 0xac0, 0x8a38, 0xee7c, 0xec9c, 0x0, 0x1);
        gbc.writeMem(0x902d, { 0xcb, 0xe });
        gbc.writeMem(0xec9c, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xec8d);
        EXPECT(gbc.pc(), 0x902f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902d), 0xcb);
        EXPECT(gbc.readMem(0x902e), 0xe);
        EXPECT(gbc.readMem(0xec9c), 0x3a);
        // CB 0E 0306
        gbc.setState(0x4bcd, 0x7ce4, 0x25a0, 0xa51b, 0x5dfb, 0x9ae8, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0xcb, 0xe });
        gbc.writeMem(0x9ae8, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7ce4);
        EXPECT(gbc.pc(), 0x4bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae8), 0x5e);
        // CB 0E 030A
        gbc.setState(0x80a1, 0xe71c, 0xdd20, 0x822b, 0x2487, 0xfd03, 0x1, 0x0);
        gbc.writeMem(0x80a1, { 0xcb, 0xe });
        gbc.writeMem(0xfd03, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe71c);
        EXPECT(gbc.pc(), 0x80a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a1), 0xcb);
        EXPECT(gbc.readMem(0x80a2), 0xe);
        EXPECT(gbc.readMem(0xfd03), 0x2d);
        // CB 0E 030B
        gbc.setState(0x9392, 0x7059, 0xd9a0, 0x328, 0x3d66, 0x825e, 0x0, 0x0);
        gbc.writeMem(0x825e, { 0xe9 });
        gbc.writeMem(0x9392, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7059);
        EXPECT(gbc.pc(), 0x9394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825e), 0xf4);
        EXPECT(gbc.readMem(0x9392), 0xcb);
        EXPECT(gbc.readMem(0x9393), 0xe);
        // CB 0E 030C
        gbc.setState(0xdca5, 0x3b93, 0x2d90, 0x2c9f, 0x7193, 0xd762, 0x1, 0x1);
        gbc.writeMem(0xd762, { 0x1a });
        gbc.writeMem(0xdca5, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3b93);
        EXPECT(gbc.pc(), 0xdca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd762), 0xd);
        EXPECT(gbc.readMem(0xdca5), 0xcb);
        EXPECT(gbc.readMem(0xdca6), 0xe);
        // CB 0E 0310
        gbc.setState(0x1457, 0x7fde, 0xdf90, 0xa4aa, 0x3fec, 0xbcc2, 0x1, 0x0);
        gbc.writeMem(0x1457, { 0xcb, 0xe });
        gbc.writeMem(0xbcc2, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7fde);
        EXPECT(gbc.pc(), 0x1459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc2), 0xd6);
        // CB 0E 0312
        gbc.setState(0x2ce2, 0x57af, 0xd930, 0xc934, 0xd51b, 0xcf08, 0x1, 0x1);
        gbc.writeMem(0x2ce2, { 0xcb, 0xe });
        gbc.writeMem(0xcf08, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x57af);
        EXPECT(gbc.pc(), 0x2ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf08), 0xa5);
        // CB 0E 0314
        gbc.setState(0x524f, 0xf55e, 0xbc80, 0x7917, 0x2b08, 0xbce2, 0x1, 0x1);
        gbc.writeMem(0x524f, { 0xcb, 0xe });
        gbc.writeMem(0xbce2, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf55e);
        EXPECT(gbc.pc(), 0x5251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce2), 0xa7);
        // CB 0E 0315
        gbc.setState(0x244f, 0x9564, 0x3150, 0xc997, 0x1d63, 0x957d, 0x1, 0x0);
        gbc.writeMem(0x244f, { 0xcb, 0xe });
        gbc.writeMem(0x957d, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9564);
        EXPECT(gbc.pc(), 0x2451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957d), 0x2f);
        // CB 0E 0316
        gbc.setState(0x7d15, 0xbbbb, 0xc660, 0x50bf, 0x7143, 0xe1d4, 0x1, 0x1);
        gbc.writeMem(0x7d15, { 0xcb, 0xe });
        gbc.writeMem(0xe1d4, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbbbb);
        EXPECT(gbc.pc(), 0x7d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d4), 0x50);
        // CB 0E 0318
        gbc.setState(0x84e9, 0xd7c2, 0x19e0, 0x8539, 0x88a8, 0xd098, 0x0, 0x1);
        gbc.writeMem(0x84e9, { 0xcb, 0xe });
        gbc.writeMem(0xd098, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x84eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e9), 0xcb);
        EXPECT(gbc.readMem(0x84ea), 0xe);
        EXPECT(gbc.readMem(0xd098), 0x45);
        // CB 0E 0319
        gbc.setState(0xe37a, 0x4ca5, 0x7f80, 0x4ed5, 0xf2da, 0xc8c5, 0x1, 0x0);
        gbc.writeMem(0xc8c5, { 0x63 });
        gbc.writeMem(0xe37a, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4ca5);
        EXPECT(gbc.pc(), 0xe37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c5), 0xb1);
        EXPECT(gbc.readMem(0xe37a), 0xcb);
        EXPECT(gbc.readMem(0xe37b), 0xe);
        // CB 0E 031C
        gbc.setState(0x30b3, 0x2364, 0xf360, 0xc7df, 0xbb77, 0xc5e0, 0x1, 0x0);
        gbc.writeMem(0x30b3, { 0xcb, 0xe });
        gbc.writeMem(0xc5e0, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2364);
        EXPECT(gbc.pc(), 0x30b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e0), 0x1d);
        // CB 0E 031D
        gbc.setState(0x59c, 0x4c9, 0xcbb0, 0xa8f2, 0x4d4, 0xbb4a, 0x0, 0x0);
        gbc.writeMem(0x59c, { 0xcb, 0xe });
        gbc.writeMem(0xbb4a, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4c9);
        EXPECT(gbc.pc(), 0x59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4a), 0x9f);
        // CB 0E 031F
        gbc.setState(0x571c, 0x241e, 0x64a0, 0x3bb5, 0x9887, 0x91e4, 0x0, 0x0);
        gbc.writeMem(0x571c, { 0xcb, 0xe });
        gbc.writeMem(0x91e4, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x241e);
        EXPECT(gbc.pc(), 0x571e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e4), 0xc5);
        // CB 0E 0320
        gbc.setState(0x7473, 0x65c9, 0xc290, 0x5bc0, 0x1d07, 0xec67, 0x0, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0xe });
        gbc.writeMem(0xec67, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x65c9);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec67), 0x16);
        // CB 0E 0322
        gbc.setState(0x7227, 0x11ea, 0xece0, 0x6069, 0xe7ad, 0xdbd4, 0x0, 0x1);
        gbc.writeMem(0x7227, { 0xcb, 0xe });
        gbc.writeMem(0xdbd4, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x11ea);
        EXPECT(gbc.pc(), 0x7229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd4), 0x3b);
        // CB 0E 0323
        gbc.setState(0x4fef, 0x9098, 0xaa0, 0xd6f2, 0x82a5, 0xa1ab, 0x1, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0xe });
        gbc.writeMem(0xa1ab, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9098);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ab), 0x32);
        // CB 0E 0326
        gbc.setState(0x42bc, 0x99d6, 0xc0a0, 0x4dba, 0x50f9, 0xccee, 0x0, 0x0);
        gbc.writeMem(0x42bc, { 0xcb, 0xe });
        gbc.writeMem(0xccee, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99d6);
        EXPECT(gbc.pc(), 0x42be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccee), 0x67);
        // CB 0E 0328
        gbc.setState(0xa2a7, 0xac77, 0x3fb0, 0x1a24, 0x4508, 0xdc44, 0x1, 0x1);
        gbc.writeMem(0xa2a7, { 0xcb, 0xe });
        gbc.writeMem(0xdc44, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xac77);
        EXPECT(gbc.pc(), 0xa2a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a7), 0xcb);
        EXPECT(gbc.readMem(0xa2a8), 0xe);
        EXPECT(gbc.readMem(0xdc44), 0x61);
        // CB 0E 032C
        gbc.setState(0x3055, 0xd06b, 0x1ee0, 0x8f07, 0x7b69, 0x8c24, 0x0, 0x0);
        gbc.writeMem(0x3055, { 0xcb, 0xe });
        gbc.writeMem(0x8c24, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd06b);
        EXPECT(gbc.pc(), 0x3057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c24), 0xf2);
        // CB 0E 032E
        gbc.setState(0x9165, 0x5b3c, 0x1490, 0x38fd, 0x3ea8, 0xfa97, 0x0, 0x1);
        gbc.writeMem(0x9165, { 0xcb, 0xe });
        gbc.writeMem(0xfa97, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5b3c);
        EXPECT(gbc.pc(), 0x9167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9165), 0xcb);
        EXPECT(gbc.readMem(0x9166), 0xe);
        EXPECT(gbc.readMem(0xfa97), 0x1d);
        // CB 0E 0330
        gbc.setState(0x11c2, 0x3e20, 0x6130, 0xf824, 0x4ab2, 0xaad7, 0x0, 0x1);
        gbc.writeMem(0x11c2, { 0xcb, 0xe });
        gbc.writeMem(0xaad7, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3e20);
        EXPECT(gbc.pc(), 0x11c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad7), 0x32);
        // CB 0E 0331
        gbc.setState(0xb811, 0x2a24, 0xb110, 0x7c6f, 0x6786, 0xc7d3, 0x0, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0xe });
        gbc.writeMem(0xc7d3, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2a24);
        EXPECT(gbc.pc(), 0xb813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb811), 0xcb);
        EXPECT(gbc.readMem(0xb812), 0xe);
        EXPECT(gbc.readMem(0xc7d3), 0x6);
        // CB 0E 0333
        gbc.setState(0xaef9, 0x9edb, 0x64d0, 0x5a9e, 0x9973, 0xf844, 0x0, 0x0);
        gbc.writeMem(0xaef9, { 0xcb, 0xe });
        gbc.writeMem(0xf844, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9edb);
        EXPECT(gbc.pc(), 0xaefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef9), 0xcb);
        EXPECT(gbc.readMem(0xaefa), 0xe);
        EXPECT(gbc.readMem(0xf844), 0x5b);
        // CB 0E 0334
        gbc.setState(0xc0b1, 0xe537, 0xbbf0, 0xa327, 0xf092, 0xab30, 0x1, 0x1);
        gbc.writeMem(0xab30, { 0xcb });
        gbc.writeMem(0xc0b1, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe537);
        EXPECT(gbc.pc(), 0xc0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab30), 0xe5);
        EXPECT(gbc.readMem(0xc0b1), 0xcb);
        EXPECT(gbc.readMem(0xc0b2), 0xe);
        // CB 0E 0336
        gbc.setState(0x7b86, 0x8a74, 0xc3b0, 0xc522, 0x550e, 0x57c5, 0x0, 0x0);
        gbc.writeMem(0x57c5, { 0xff });
        gbc.writeMem(0x7b86, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x7b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 0E 0339
        gbc.setState(0x54a5, 0x9239, 0x3740, 0xbff5, 0x2505, 0xf66a, 0x1, 0x0);
        gbc.writeMem(0x54a5, { 0xcb, 0xe });
        gbc.writeMem(0xf66a, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9239);
        EXPECT(gbc.pc(), 0x54a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf66a), 0x49);
        // CB 0E 033C
        gbc.setState(0x399d, 0x60d7, 0xc7e0, 0x2655, 0xde64, 0xd0b0, 0x1, 0x1);
        gbc.writeMem(0x399d, { 0xcb, 0xe });
        gbc.writeMem(0xd0b0, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x60d7);
        EXPECT(gbc.pc(), 0x399f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b0), 0xb6);
        // CB 0E 033E
        gbc.setState(0x5582, 0x6131, 0x5200, 0xf6a5, 0x716, 0x89c2, 0x1, 0x1);
        gbc.writeMem(0x5582, { 0xcb, 0xe });
        gbc.writeMem(0x89c2, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6131);
        EXPECT(gbc.pc(), 0x5584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c2), 0x5);
        // CB 0E 0342
        gbc.setState(0x5a24, 0x1a77, 0x2330, 0xcda9, 0x2f1b, 0x83e6, 0x1, 0x1);
        gbc.writeMem(0x5a24, { 0xcb, 0xe });
        gbc.writeMem(0x83e6, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a77);
        EXPECT(gbc.pc(), 0x5a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e6), 0x3d);
        // CB 0E 0343
        gbc.setState(0x2ddd, 0xb930, 0x6720, 0x2d24, 0x4b6b, 0xde25, 0x1, 0x1);
        gbc.writeMem(0x2ddd, { 0xcb, 0xe });
        gbc.writeMem(0xde25, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb930);
        EXPECT(gbc.pc(), 0x2ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde25), 0xf0);
        // CB 0E 0345
        gbc.setState(0xeedb, 0x8882, 0x1730, 0xcf75, 0x5bd5, 0x9807, 0x0, 0x1);
        gbc.writeMem(0x9807, { 0xc1 });
        gbc.writeMem(0xeedb, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8882);
        EXPECT(gbc.pc(), 0xeedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9807), 0xe0);
        EXPECT(gbc.readMem(0xeedb), 0xcb);
        EXPECT(gbc.readMem(0xeedc), 0xe);
        // CB 0E 0347
        gbc.setState(0x830, 0x7e6a, 0x6910, 0x65ac, 0x44c2, 0xa057, 0x0, 0x1);
        gbc.writeMem(0x830, { 0xcb, 0xe });
        gbc.writeMem(0xa057, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7e6a);
        EXPECT(gbc.pc(), 0x832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa057), 0x21);
        // CB 0E 0349
        gbc.setState(0x437a, 0x674f, 0x70, 0xd1fe, 0x7df2, 0xedda, 0x1, 0x0);
        gbc.writeMem(0x437a, { 0xcb, 0xe });
        gbc.writeMem(0xedda, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x674f);
        EXPECT(gbc.pc(), 0x437c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedda), 0xb8);
        // CB 0E 034A
        gbc.setState(0x577e, 0xcf47, 0x1ab0, 0x9268, 0x89cb, 0x9b45, 0x1, 0x0);
        gbc.writeMem(0x577e, { 0xcb, 0xe });
        gbc.writeMem(0x9b45, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcf47);
        EXPECT(gbc.pc(), 0x5780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b45), 0xe3);
        // CB 0E 034B
        gbc.setState(0xdb0c, 0x42b0, 0x5640, 0x11a2, 0x5a74, 0xd90b, 0x1, 0x1);
        gbc.writeMem(0xd90b, { 0xe6 });
        gbc.writeMem(0xdb0c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x42b0);
        EXPECT(gbc.pc(), 0xdb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd90b), 0x73);
        EXPECT(gbc.readMem(0xdb0c), 0xcb);
        EXPECT(gbc.readMem(0xdb0d), 0xe);
        // CB 0E 0350
        gbc.setState(0x8bb8, 0xf5c5, 0xb60, 0x9751, 0x2789, 0xf656, 0x0, 0x1);
        gbc.writeMem(0x8bb8, { 0xcb, 0xe });
        gbc.writeMem(0xf656, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf5c5);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0xe);
        EXPECT(gbc.readMem(0xf656), 0x1b);
        // CB 0E 0352
        gbc.setState(0x6dc8, 0x6802, 0xd8c0, 0x3191, 0x3d5b, 0xd3cc, 0x0, 0x1);
        gbc.writeMem(0x6dc8, { 0xcb, 0xe });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6802);
        EXPECT(gbc.pc(), 0x6dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cc), 0x56);
        // CB 0E 0356
        gbc.setState(0x603f, 0x82a0, 0xeca0, 0x8477, 0x8350, 0xda18, 0x1, 0x1);
        gbc.writeMem(0x603f, { 0xcb, 0xe });
        gbc.writeMem(0xda18, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x6041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda18), 0x3f);
        // CB 0E 0359
        gbc.setState(0x1475, 0x7ae4, 0xfea0, 0xab0e, 0x277a, 0xdfd6, 0x1, 0x0);
        gbc.writeMem(0x1475, { 0xcb, 0xe });
        gbc.writeMem(0xdfd6, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7ae4);
        EXPECT(gbc.pc(), 0x1477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd6), 0x56);
        // CB 0E 035A
        gbc.setState(0xec04, 0xb555, 0xcd30, 0x4e8e, 0xfe0c, 0xf320, 0x0, 0x1);
        gbc.writeMem(0xec04, { 0xcb, 0xe });
        gbc.writeMem(0xf320, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb555);
        EXPECT(gbc.pc(), 0xec06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec04), 0xcb);
        EXPECT(gbc.readMem(0xec05), 0xe);
        EXPECT(gbc.readMem(0xf320), 0xaf);
        // CB 0E 035B
        gbc.setState(0x43ab, 0x82f0, 0xfe40, 0x7e25, 0xb6e7, 0x8f98, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0xcb, 0xe });
        gbc.writeMem(0x8f98, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x82f0);
        EXPECT(gbc.pc(), 0x43ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f98), 0x5d);
        // CB 0E 035C
        gbc.setState(0x873c, 0xde19, 0x80a0, 0x771a, 0xbb9e, 0x843a, 0x1, 0x1);
        gbc.writeMem(0x843a, { 0xbe });
        gbc.writeMem(0x873c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xde19);
        EXPECT(gbc.pc(), 0x873e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843a), 0x5f);
        EXPECT(gbc.readMem(0x873c), 0xcb);
        EXPECT(gbc.readMem(0x873d), 0xe);
        // CB 0E 0360
        gbc.setState(0x32ba, 0xd545, 0xff10, 0x3aa0, 0x7a1c, 0xad0d, 0x0, 0x1);
        gbc.writeMem(0x32ba, { 0xcb, 0xe });
        gbc.writeMem(0xad0d, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd545);
        EXPECT(gbc.pc(), 0x32bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0d), 0x85);
        // CB 0E 0361
        gbc.setState(0x94b5, 0xd5ff, 0xd9a0, 0x219c, 0x80ff, 0xfa08, 0x1, 0x1);
        gbc.writeMem(0x94b5, { 0xcb, 0xe });
        gbc.writeMem(0xfa08, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd5ff);
        EXPECT(gbc.pc(), 0x94b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b5), 0xcb);
        EXPECT(gbc.readMem(0x94b6), 0xe);
        EXPECT(gbc.readMem(0xfa08), 0x13);
        // CB 0E 0362
        gbc.setState(0x3492, 0x3b4f, 0xfd40, 0xeeac, 0x865b, 0x939a, 0x1, 0x1);
        gbc.writeMem(0x3492, { 0xcb, 0xe });
        gbc.writeMem(0x939a, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3b4f);
        EXPECT(gbc.pc(), 0x3494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939a), 0x6b);
        // CB 0E 0363
        gbc.setState(0x4ca1, 0x3e83, 0x7120, 0x6ab0, 0x7942, 0xebc2, 0x1, 0x1);
        gbc.writeMem(0x4ca1, { 0xcb, 0xe });
        gbc.writeMem(0xebc2, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3e83);
        EXPECT(gbc.pc(), 0x4ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc2), 0xcc);
        // CB 0E 0366
        gbc.setState(0xc8b8, 0x8c5f, 0xd360, 0x14c1, 0xca36, 0xf2e2, 0x0, 0x0);
        gbc.writeMem(0xc8b8, { 0xcb, 0xe });
        gbc.writeMem(0xf2e2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0xc8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b8), 0xcb);
        EXPECT(gbc.readMem(0xc8b9), 0xe);
        EXPECT(gbc.readMem(0xf2e2), 0x8);
        // CB 0E 036D
        gbc.setState(0xbd7d, 0x70c3, 0x89d0, 0x4949, 0xc8a6, 0xe1cc, 0x1, 0x0);
        gbc.writeMem(0xbd7d, { 0xcb, 0xe });
        gbc.writeMem(0xe1cc, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x70c3);
        EXPECT(gbc.pc(), 0xbd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7d), 0xcb);
        EXPECT(gbc.readMem(0xbd7e), 0xe);
        EXPECT(gbc.readMem(0xe1cc), 0x95);
        // CB 0E 0372
        gbc.setState(0xdb7c, 0x5be3, 0x5630, 0xf923, 0xcab, 0x8ba6, 0x0, 0x0);
        gbc.writeMem(0x8ba6, { 0xf9 });
        gbc.writeMem(0xdb7c, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5be3);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xfc);
        EXPECT(gbc.readMem(0xdb7c), 0xcb);
        EXPECT(gbc.readMem(0xdb7d), 0xe);
        // CB 0E 0376
        gbc.setState(0xb786, 0x16dc, 0xa7c0, 0x38a6, 0x6cd5, 0x9410, 0x1, 0x1);
        gbc.writeMem(0x9410, { 0xf3 });
        gbc.writeMem(0xb786, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x16dc);
        EXPECT(gbc.pc(), 0xb788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9410), 0xf9);
        EXPECT(gbc.readMem(0xb786), 0xcb);
        EXPECT(gbc.readMem(0xb787), 0xe);
        // CB 0E 0377
        gbc.setState(0x284d, 0xd5c4, 0xe4f0, 0x5960, 0x8238, 0xc548, 0x0, 0x1);
        gbc.writeMem(0x284d, { 0xcb, 0xe });
        gbc.writeMem(0xc548, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd5c4);
        EXPECT(gbc.pc(), 0x284f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc548), 0x2f);
        // CB 0E 0379
        gbc.setState(0xdd3f, 0xbf0a, 0x59d0, 0x9bf6, 0xf558, 0xece9, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xcb, 0xe });
        gbc.writeMem(0xece9, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbf0a);
        EXPECT(gbc.pc(), 0xdd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3f), 0xcb);
        EXPECT(gbc.readMem(0xdd40), 0xe);
        EXPECT(gbc.readMem(0xece9), 0xe1);
        // CB 0E 037D
        gbc.setState(0x7e0a, 0x24c, 0xbe90, 0x4ed0, 0xfa5b, 0xc163, 0x1, 0x0);
        gbc.writeMem(0x7e0a, { 0xcb, 0xe });
        gbc.writeMem(0xc163, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x24c);
        EXPECT(gbc.pc(), 0x7e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc163), 0xd7);
        // CB 0E 037F
        gbc.setState(0xc651, 0x1f28, 0x9590, 0x57dd, 0x5abe, 0x8b2d, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0x9b });
        gbc.writeMem(0xc651, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1f28);
        EXPECT(gbc.pc(), 0xc653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2d), 0xcd);
        EXPECT(gbc.readMem(0xc651), 0xcb);
        EXPECT(gbc.readMem(0xc652), 0xe);
        // CB 0E 0381
        gbc.setState(0x9a70, 0x3f81, 0x140, 0xc4a, 0xeb0, 0xb040, 0x0, 0x1);
        gbc.writeMem(0x9a70, { 0xcb, 0xe });
        gbc.writeMem(0xb040, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3f81);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a70), 0xcb);
        EXPECT(gbc.readMem(0x9a71), 0xe);
        EXPECT(gbc.readMem(0xb040), 0x2e);
        // CB 0E 0383
        gbc.setState(0x21d8, 0x943, 0x5a80, 0xd759, 0xf6a1, 0x8db3, 0x1, 0x0);
        gbc.writeMem(0x21d8, { 0xcb, 0xe });
        gbc.writeMem(0x8db3, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x943);
        EXPECT(gbc.pc(), 0x21da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db3), 0xab);
        // CB 0E 0384
        gbc.setState(0xd95f, 0xa2f5, 0x3fd0, 0x6648, 0xcb3d, 0xa872, 0x1, 0x1);
        gbc.writeMem(0xa872, { 0x9b });
        gbc.writeMem(0xd95f, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa2f5);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa872), 0xcd);
        EXPECT(gbc.readMem(0xd95f), 0xcb);
        EXPECT(gbc.readMem(0xd960), 0xe);
        // CB 0E 0386
        gbc.setState(0xb386, 0xc79b, 0x5640, 0x6aa1, 0x8f6a, 0xd3e8, 0x1, 0x1);
        gbc.writeMem(0xb386, { 0xcb, 0xe });
        gbc.writeMem(0xd3e8, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc79b);
        EXPECT(gbc.pc(), 0xb388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb386), 0xcb);
        EXPECT(gbc.readMem(0xb387), 0xe);
        EXPECT(gbc.readMem(0xd3e8), 0xf2);
        // CB 0E 0387
        gbc.setState(0x8220, 0x6c26, 0x37f0, 0x4676, 0x6243, 0x9c8a, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0xe });
        gbc.writeMem(0x9c8a, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6c26);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8220), 0xcb);
        EXPECT(gbc.readMem(0x8221), 0xe);
        EXPECT(gbc.readMem(0x9c8a), 0x3f);
        // CB 0E 0389
        gbc.setState(0xc91, 0xac9a, 0xc970, 0xad59, 0x780, 0xba94, 0x0, 0x1);
        gbc.writeMem(0xc91, { 0xcb, 0xe });
        gbc.writeMem(0xba94, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xac9a);
        EXPECT(gbc.pc(), 0xc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba94), 0x1d);
        // CB 0E 038C
        gbc.setState(0x82d6, 0xd47d, 0x5730, 0xf12d, 0xd352, 0x92ee, 0x1, 0x0);
        gbc.writeMem(0x82d6, { 0xcb, 0xe });
        gbc.writeMem(0x92ee, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd47d);
        EXPECT(gbc.pc(), 0x82d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d6), 0xcb);
        EXPECT(gbc.readMem(0x82d7), 0xe);
        EXPECT(gbc.readMem(0x92ee), 0x4b);
        // CB 0E 038D
        gbc.setState(0x52f1, 0x5b0e, 0x9e80, 0x58b7, 0xa25d, 0xe362, 0x0, 0x0);
        gbc.writeMem(0x52f1, { 0xcb, 0xe });
        gbc.writeMem(0xe362, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5b0e);
        EXPECT(gbc.pc(), 0x52f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe362), 0xf9);
        // CB 0E 0392
        gbc.setState(0x680b, 0x96a4, 0x2e00, 0x184f, 0x3167, 0xf8c2, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0xe });
        gbc.writeMem(0xf8c2, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x96a4);
        EXPECT(gbc.pc(), 0x680d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8c2), 0x9e);
        // CB 0E 0393
        gbc.setState(0x3163, 0xd6f4, 0x5fb0, 0x232a, 0xd3a2, 0xac93, 0x0, 0x0);
        gbc.writeMem(0x3163, { 0xcb, 0xe });
        gbc.writeMem(0xac93, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd6f4);
        EXPECT(gbc.pc(), 0x3165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac93), 0x9);
        // CB 0E 0394
        gbc.setState(0xab4e, 0x2d80, 0x6120, 0x763e, 0x689e, 0xd170, 0x1, 0x0);
        gbc.writeMem(0xab4e, { 0xcb, 0xe });
        gbc.writeMem(0xd170, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0xab50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4e), 0xcb);
        EXPECT(gbc.readMem(0xab4f), 0xe);
        EXPECT(gbc.readMem(0xd170), 0x58);
        // CB 0E 0395
        gbc.setState(0x5db1, 0x4c19, 0xa3e0, 0x8995, 0xb656, 0xe548, 0x0, 0x0);
        gbc.writeMem(0x5db1, { 0xcb, 0xe });
        gbc.writeMem(0xe548, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4c19);
        EXPECT(gbc.pc(), 0x5db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe548), 0x39);
        // CB 0E 0396
        gbc.setState(0xb7d8, 0x50ab, 0x4950, 0x8e4, 0x6aa5, 0xd5ec, 0x1, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0xe });
        gbc.writeMem(0xd5ec, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x50ab);
        EXPECT(gbc.pc(), 0xb7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d8), 0xcb);
        EXPECT(gbc.readMem(0xb7d9), 0xe);
        EXPECT(gbc.readMem(0xd5ec), 0x6c);
        // CB 0E 0399
        gbc.setState(0xa638, 0xe2b6, 0x5a10, 0x8390, 0x5c29, 0x9929, 0x0, 0x1);
        gbc.writeMem(0x9929, { 0x30 });
        gbc.writeMem(0xa638, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe2b6);
        EXPECT(gbc.pc(), 0xa63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9929), 0x18);
        EXPECT(gbc.readMem(0xa638), 0xcb);
        EXPECT(gbc.readMem(0xa639), 0xe);
        // CB 0E 039D
        gbc.setState(0xce00, 0x5800, 0xd070, 0x9a66, 0x35be, 0x8f40, 0x0, 0x1);
        gbc.writeMem(0x8f40, { 0x45 });
        gbc.writeMem(0xce00, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0xce02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f40), 0xa2);
        EXPECT(gbc.readMem(0xce00), 0xcb);
        EXPECT(gbc.readMem(0xce01), 0xe);
        // CB 0E 03A0
        gbc.setState(0xa494, 0x5829, 0x9f00, 0x2e90, 0x34e2, 0xb586, 0x0, 0x1);
        gbc.writeMem(0xa494, { 0xcb, 0xe });
        gbc.writeMem(0xb586, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5829);
        EXPECT(gbc.pc(), 0xa496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa494), 0xcb);
        EXPECT(gbc.readMem(0xa495), 0xe);
        EXPECT(gbc.readMem(0xb586), 0x1);
        // CB 0E 03A3
        gbc.setState(0x4b6b, 0x88c4, 0xcc10, 0x42d1, 0x62b6, 0xfa74, 0x1, 0x1);
        gbc.writeMem(0x4b6b, { 0xcb, 0xe });
        gbc.writeMem(0xfa74, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x88c4);
        EXPECT(gbc.pc(), 0x4b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa74), 0xab);
        // CB 0E 03A4
        gbc.setState(0x4502, 0x2298, 0x3570, 0xf931, 0x1ade, 0xc3a7, 0x0, 0x0);
        gbc.writeMem(0x4502, { 0xcb, 0xe });
        gbc.writeMem(0xc3a7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2298);
        EXPECT(gbc.pc(), 0x4504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a7), 0x46);
        // CB 0E 03A5
        gbc.setState(0x848a, 0xc62c, 0x3540, 0x53c4, 0x96c8, 0xf04e, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0xe });
        gbc.writeMem(0xf04e, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x848c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848a), 0xcb);
        EXPECT(gbc.readMem(0x848b), 0xe);
        EXPECT(gbc.readMem(0xf04e), 0x4c);
        // CB 0E 03A7
        gbc.setState(0xb161, 0x2453, 0x39f0, 0x4842, 0x2b63, 0xd4f2, 0x1, 0x0);
        gbc.writeMem(0xb161, { 0xcb, 0xe });
        gbc.writeMem(0xd4f2, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2453);
        EXPECT(gbc.pc(), 0xb163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb161), 0xcb);
        EXPECT(gbc.readMem(0xb162), 0xe);
        EXPECT(gbc.readMem(0xd4f2), 0xad);
        // CB 0E 03AB
        gbc.setState(0x73dc, 0x7555, 0xc690, 0x2547, 0xd075, 0xd786, 0x1, 0x1);
        gbc.writeMem(0x73dc, { 0xcb, 0xe });
        gbc.writeMem(0xd786, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0x73de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd786), 0xd8);
        // CB 0E 03AC
        gbc.setState(0x9bcf, 0x73e3, 0x7070, 0xfb4d, 0x9334, 0x9243, 0x1, 0x0);
        gbc.writeMem(0x9243, { 0xd2 });
        gbc.writeMem(0x9bcf, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x73e3);
        EXPECT(gbc.pc(), 0x9bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9243), 0x69);
        EXPECT(gbc.readMem(0x9bcf), 0xcb);
        EXPECT(gbc.readMem(0x9bd0), 0xe);
        // CB 0E 03AF
        gbc.setState(0xb4b0, 0x2762, 0x4360, 0x793, 0x60d2, 0xfc4b, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0xe });
        gbc.writeMem(0xfc4b, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2762);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0xe);
        EXPECT(gbc.readMem(0xfc4b), 0x2e);
        // CB 0E 03B0
        gbc.setState(0xc143, 0x4189, 0x75b0, 0x6fcd, 0x3a75, 0xb8b1, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0x84 });
        gbc.writeMem(0xc143, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4189);
        EXPECT(gbc.pc(), 0xc145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b1), 0x42);
        EXPECT(gbc.readMem(0xc143), 0xcb);
        EXPECT(gbc.readMem(0xc144), 0xe);
        // CB 0E 03B2
        gbc.setState(0x1f36, 0xcb09, 0x2850, 0x3958, 0x993d, 0xfa72, 0x1, 0x1);
        gbc.writeMem(0x1f36, { 0xcb, 0xe });
        gbc.writeMem(0xfa72, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcb09);
        EXPECT(gbc.pc(), 0x1f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa72), 0xdd);
        // CB 0E 03B8
        gbc.setState(0x13af, 0xbf0f, 0xc870, 0x77ad, 0x7b9f, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x13af, { 0xcb, 0xe });
        gbc.writeMem(0x838d, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbf0f);
        EXPECT(gbc.pc(), 0x13b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838d), 0x79);
        // CB 0E 03BB
        gbc.setState(0x793, 0xe47b, 0x9120, 0x63a2, 0xe641, 0xd854, 0x0, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0xe });
        gbc.writeMem(0xd854, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe47b);
        EXPECT(gbc.pc(), 0x795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd854), 0xf3);
        // CB 0E 03BC
        gbc.setState(0x2107, 0x6ca0, 0x7850, 0xc582, 0x9f30, 0x907b, 0x1, 0x1);
        gbc.writeMem(0x2107, { 0xcb, 0xe });
        gbc.writeMem(0x907b, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907b), 0xf0);
        // CB 0E 03BD
        gbc.setState(0x72fd, 0x1d9a, 0xb20, 0x322e, 0x8430, 0xb70f, 0x0, 0x1);
        gbc.writeMem(0x72fd, { 0xcb, 0xe });
        gbc.writeMem(0xb70f, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1d9a);
        EXPECT(gbc.pc(), 0x72ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70f), 0x4);
        // CB 0E 03C0
        gbc.setState(0x5ea8, 0x8bf3, 0x10, 0xd2fa, 0x6968, 0xdbfa, 0x0, 0x0);
        gbc.writeMem(0x5ea8, { 0xcb, 0xe });
        gbc.writeMem(0xdbfa, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8bf3);
        EXPECT(gbc.pc(), 0x5eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfa), 0xc2);
        // CB 0E 03C1
        gbc.setState(0xb676, 0x3aa6, 0x3510, 0x2935, 0x10ef, 0xadde, 0x0, 0x0);
        gbc.writeMem(0xadde, { 0x27 });
        gbc.writeMem(0xb676, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3aa6);
        EXPECT(gbc.pc(), 0xb678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadde), 0x93);
        EXPECT(gbc.readMem(0xb676), 0xcb);
        EXPECT(gbc.readMem(0xb677), 0xe);
        // CB 0E 03C3
        gbc.setState(0x8b7d, 0x85c9, 0x7d70, 0x6e85, 0x22b8, 0xcf74, 0x0, 0x1);
        gbc.writeMem(0x8b7d, { 0xcb, 0xe });
        gbc.writeMem(0xcf74, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x85c9);
        EXPECT(gbc.pc(), 0x8b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7d), 0xcb);
        EXPECT(gbc.readMem(0x8b7e), 0xe);
        EXPECT(gbc.readMem(0xcf74), 0xc3);
        // CB 0E 03C5
        gbc.setState(0xc66e, 0x2a99, 0x2150, 0x22f4, 0x165d, 0xd22d, 0x0, 0x0);
        gbc.writeMem(0xc66e, { 0xcb, 0xe });
        gbc.writeMem(0xd22d, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2a99);
        EXPECT(gbc.pc(), 0xc670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66e), 0xcb);
        EXPECT(gbc.readMem(0xc66f), 0xe);
        EXPECT(gbc.readMem(0xd22d), 0xfb);
        // CB 0E 03C7
        gbc.setState(0x1bd8, 0x98d7, 0x21c0, 0x5f26, 0xcb72, 0xa707, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0xcb, 0xe });
        gbc.writeMem(0xa707, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x98d7);
        EXPECT(gbc.pc(), 0x1bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa707), 0x47);
        // CB 0E 03CA
        gbc.setState(0xd403, 0x169a, 0xf10, 0x325c, 0x75f0, 0xb723, 0x1, 0x0);
        gbc.writeMem(0xb723, { 0x0 });
        gbc.writeMem(0xd403, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x169a);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb723), 0x0);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0xe);
        // CB 0E 03CB
        gbc.setState(0x9683, 0xc583, 0x5ac0, 0x4400, 0x33a5, 0xe5fe, 0x0, 0x1);
        gbc.writeMem(0x9683, { 0xcb, 0xe });
        gbc.writeMem(0xe5fe, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x9685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9683), 0xcb);
        EXPECT(gbc.readMem(0x9684), 0xe);
        EXPECT(gbc.readMem(0xe5fe), 0xf0);
        // CB 0E 03CD
        gbc.setState(0x1251, 0xa116, 0x7780, 0xc1d7, 0x2b3c, 0xe8a2, 0x0, 0x0);
        gbc.writeMem(0x1251, { 0xcb, 0xe });
        gbc.writeMem(0xe8a2, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa116);
        EXPECT(gbc.pc(), 0x1253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a2), 0x71);
        // CB 0E 03D0
        gbc.setState(0x2736, 0x56e6, 0x22b0, 0xd433, 0xb8af, 0x89d1, 0x1, 0x0);
        gbc.writeMem(0x2736, { 0xcb, 0xe });
        gbc.writeMem(0x89d1, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x56e6);
        EXPECT(gbc.pc(), 0x2738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d1), 0x8c);
        // CB 0E 03D2
        gbc.setState(0x55cd, 0xc94e, 0x73b0, 0x4ddc, 0x35ff, 0xaa46, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0xcb, 0xe });
        gbc.writeMem(0xaa46, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc94e);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa46), 0xc1);
        // CB 0E 03D3
        gbc.setState(0x66b0, 0x1c04, 0xf0e0, 0xd5c7, 0x386f, 0x9b3c, 0x1, 0x1);
        gbc.writeMem(0x66b0, { 0xcb, 0xe });
        gbc.writeMem(0x9b3c, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1c04);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3c), 0x8c);
        // CB 0E 03D5
        gbc.setState(0x9901, 0x214e, 0x5690, 0x34f6, 0x71f9, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x860c, { 0xf2 });
        gbc.writeMem(0x9901, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x214e);
        EXPECT(gbc.pc(), 0x9903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860c), 0x79);
        EXPECT(gbc.readMem(0x9901), 0xcb);
        EXPECT(gbc.readMem(0x9902), 0xe);
        // CB 0E 03D6
        gbc.setState(0xd6e0, 0x70e8, 0x8780, 0x7dd7, 0x12d, 0xb5e1, 0x1, 0x0);
        gbc.writeMem(0xb5e1, { 0x5a });
        gbc.writeMem(0xd6e0, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x70e8);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e1), 0x2d);
        EXPECT(gbc.readMem(0xd6e0), 0xcb);
        EXPECT(gbc.readMem(0xd6e1), 0xe);
        // CB 0E 03D7
        gbc.setState(0x3aee, 0x5d88, 0xc560, 0xd84a, 0x2e7f, 0xda7c, 0x1, 0x0);
        gbc.writeMem(0x3aee, { 0xcb, 0xe });
        gbc.writeMem(0xda7c, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5d88);
        EXPECT(gbc.pc(), 0x3af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7c), 0x96);
        // CB 0E 03D9
        gbc.setState(0x2552, 0x87d5, 0x3e30, 0xf1fe, 0xe183, 0xbd0e, 0x1, 0x1);
        gbc.writeMem(0x2552, { 0xcb, 0xe });
        gbc.writeMem(0xbd0e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x87d5);
        EXPECT(gbc.pc(), 0x2554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0e), 0xa8);
        // CB 0E 03DB
        gbc.setState(0x707, 0xa2a6, 0x9b40, 0x77ad, 0xbb26, 0x9410, 0x0, 0x0);
        gbc.writeMem(0x707, { 0xcb, 0xe });
        gbc.writeMem(0x9410, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa2a6);
        EXPECT(gbc.pc(), 0x709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9410), 0xf9);
        // CB 0E 03DC
        gbc.setState(0x4151, 0x7b87, 0x6af0, 0x5227, 0xad12, 0xecfa, 0x0, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0xe });
        gbc.writeMem(0xecfa, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7b87);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfa), 0x78);
        // CB 0E 03DD
        gbc.setState(0x559c, 0x79b1, 0xd9e0, 0x9c27, 0xc17a, 0xa384, 0x0, 0x1);
        gbc.writeMem(0x559c, { 0xcb, 0xe });
        gbc.writeMem(0xa384, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x79b1);
        EXPECT(gbc.pc(), 0x559e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa384), 0x8);
        // CB 0E 03DE
        gbc.setState(0x241e, 0xa4cf, 0x1980, 0x32e4, 0x8356, 0xbef1, 0x0, 0x0);
        gbc.writeMem(0x241e, { 0xcb, 0xe });
        gbc.writeMem(0xbef1, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa4cf);
        EXPECT(gbc.pc(), 0x2420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef1), 0xc9);
        // CB 0E 03E0
        gbc.setState(0xbc5f, 0x790d, 0x2280, 0x8107, 0x2f82, 0xaba3, 0x0, 0x1);
        gbc.writeMem(0xaba3, { 0xe });
        gbc.writeMem(0xbc5f, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x790d);
        EXPECT(gbc.pc(), 0xbc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba3), 0x7);
        EXPECT(gbc.readMem(0xbc5f), 0xcb);
        EXPECT(gbc.readMem(0xbc60), 0xe);
        // CB 0E 03E2
        gbc.setState(0xe697, 0x3590, 0xef00, 0xfd38, 0x9a5b, 0xb1e3, 0x0, 0x1);
        gbc.writeMem(0xb1e3, { 0x8b });
        gbc.writeMem(0xe697, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3590);
        EXPECT(gbc.pc(), 0xe699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e3), 0xc5);
        EXPECT(gbc.readMem(0xe697), 0xcb);
        EXPECT(gbc.readMem(0xe698), 0xe);
        // CB 0E 03E3
        gbc.setState(0xa079, 0x1b87, 0xb7b0, 0xe495, 0xc136, 0x945b, 0x1, 0x0);
        gbc.writeMem(0x945b, { 0xad });
        gbc.writeMem(0xa079, { 0xcb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1b87);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945b), 0xd6);
        EXPECT(gbc.readMem(0xa079), 0xcb);
        EXPECT(gbc.readMem(0xa07a), 0xe);
        // CB 0E 03E4
        gbc.setState(0x41dd, 0x33e4, 0x3e70, 0x7596, 0x213b, 0x8a8f, 0x1, 0x0);
        gbc.writeMem(0x41dd, { 0xcb, 0xe });
        gbc.writeMem(0x8a8f, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x33e4);
        EXPECT(gbc.pc(), 0x41df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8f), 0x39);
    }
