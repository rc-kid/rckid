    TEST(gbcemu, opcode_80) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 80 0000
        gbc.setState(0xc8c7, 0xea62, 0x51a0, 0x5c86, 0xb1e6, 0xa67e, 0x0, 0x1);
        gbc.writeMem(0xc8c7, { 0x80 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0xc8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc8c7));
        // 80 0001
        gbc.setState(0x7e76, 0xb9ee, 0x5ad0, 0x7407, 0x5148, 0xdbe6, 0x0, 0x0);
        gbc.writeMem(0x7e76, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0002
        gbc.setState(0xbd36, 0x4844, 0xf320, 0x3748, 0xb2b, 0x18ab, 0x0, 0x0);
        gbc.writeMem(0xbd36, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4844, gbc.sp());
        EXPECT(0xbd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbd36));
        // 80 0003
        gbc.setState(0x9644, 0x95f2, 0x6280, 0xb0fc, 0xaa03, 0xba4a, 0x1, 0x0);
        gbc.writeMem(0x9644, { 0x80 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9644));
        // 80 0004
        gbc.setState(0xcdbf, 0xbd2a, 0xdad0, 0x49db, 0x222, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0xcdbf, { 0x80 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbd2a, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcdbf));
        // 80 0005
        gbc.setState(0x14ec, 0xfa75, 0xa250, 0x63f1, 0xfa08, 0x5820, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0x80 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfa75, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0006
        gbc.setState(0xe84a, 0xb1f4, 0x5eb0, 0xdf86, 0xa1e0, 0xbdf, 0x0, 0x0);
        gbc.writeMem(0xe84a, { 0x80 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb1f4, gbc.sp());
        EXPECT(0xe84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe84a));
        // 80 0007
        gbc.setState(0x5119, 0xbad1, 0x66f0, 0x2df1, 0xfbae, 0xd1, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0x80 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbad1, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0008
        gbc.setState(0x901, 0x7c8c, 0x8060, 0x5284, 0xda0e, 0x8bed, 0x0, 0x0);
        gbc.writeMem(0x901, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0009
        gbc.setState(0xe983, 0xc165, 0xc670, 0xcf0b, 0xe650, 0x85ee, 0x0, 0x1);
        gbc.writeMem(0xe983, { 0x80 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xe984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe983));
        // 80 000A
        gbc.setState(0xaaff, 0x423c, 0xe6b0, 0x7698, 0xe71b, 0x5f7b, 0x0, 0x1);
        gbc.writeMem(0xaaff, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x423c, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaaff));
        // 80 000B
        gbc.setState(0xf9a, 0xf174, 0x73e0, 0x5881, 0x3f11, 0x7fde, 0x1, 0x1);
        gbc.writeMem(0xf9a, { 0x80 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf174, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 000C
        gbc.setState(0x6cb9, 0x2b58, 0x8030, 0x73d1, 0xcea9, 0x7e98, 0x1, 0x1);
        gbc.writeMem(0x6cb9, { 0x80 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2b58, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 000D
        gbc.setState(0x7d99, 0x774a, 0xa550, 0x6eb, 0xade9, 0x9a18, 0x0, 0x1);
        gbc.writeMem(0x7d99, { 0x80 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x774a, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 000E
        gbc.setState(0xc8e0, 0x117d, 0x7b10, 0x89b8, 0xde6d, 0x5071, 0x0, 0x0);
        gbc.writeMem(0xc8e0, { 0x80 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x117d, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc8e0));
        // 80 000F
        gbc.setState(0x9b83, 0x16b6, 0x16c0, 0x8942, 0x1c2d, 0xdacb, 0x0, 0x1);
        gbc.writeMem(0x9b83, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9b83));
        // 80 0010
        gbc.setState(0x63a0, 0x76cd, 0xb080, 0x8e37, 0xce2d, 0xae75, 0x0, 0x1);
        gbc.writeMem(0x63a0, { 0x80 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x63a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0011
        gbc.setState(0x6316, 0xf00d, 0x6e90, 0x1d22, 0xb23, 0x8f33, 0x0, 0x0);
        gbc.writeMem(0x6316, { 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf00d, gbc.sp());
        EXPECT(0x6317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0012
        gbc.setState(0x351a, 0x8065, 0xf160, 0xb99f, 0x38bc, 0x34b0, 0x0, 0x1);
        gbc.writeMem(0x351a, { 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0013
        gbc.setState(0x20db, 0xe514, 0x7fb0, 0xc131, 0x8eda, 0x2815, 0x1, 0x0);
        gbc.writeMem(0x20db, { 0x80 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe514, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0014
        gbc.setState(0x7a2, 0x5f08, 0xf110, 0xfd13, 0x6a7e, 0x2dd0, 0x1, 0x1);
        gbc.writeMem(0x7a2, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0015
        gbc.setState(0xa7ca, 0x5631, 0xc50, 0x307c, 0x8ccd, 0x2382, 0x1, 0x0);
        gbc.writeMem(0xa7ca, { 0x80 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5631, gbc.sp());
        EXPECT(0xa7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa7ca));
        // 80 0016
        gbc.setState(0xe6ac, 0xb140, 0x3b50, 0xfbf0, 0x550b, 0xe253, 0x1, 0x1);
        gbc.writeMem(0xe6ac, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0xe6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe6ac));
        // 80 0017
        gbc.setState(0x377a, 0xfaf2, 0x7780, 0x8090, 0x9e40, 0xf3c5, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfaf2, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0018
        gbc.setState(0xaa1a, 0xaa6a, 0xcbd0, 0xd261, 0x806c, 0x74e6, 0x1, 0x0);
        gbc.writeMem(0xaa1a, { 0x80 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaa6a, gbc.sp());
        EXPECT(0xaa1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaa1a));
        // 80 0019
        gbc.setState(0x9bff, 0x7e4f, 0xc0d0, 0xd6bc, 0xbaed, 0x4215, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7e4f, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9bff));
        // 80 001A
        gbc.setState(0x4b2e, 0xa988, 0xdc00, 0xf87b, 0x9ab, 0x949b, 0x0, 0x0);
        gbc.writeMem(0x4b2e, { 0x80 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 001B
        gbc.setState(0xa79d, 0x2a02, 0x200, 0x4823, 0x579a, 0x1a61, 0x1, 0x1);
        gbc.writeMem(0xa79d, { 0x80 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2a02, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa79d));
        // 80 001C
        gbc.setState(0x7c8d, 0xe2f8, 0x44c0, 0x3019, 0x8af7, 0x9098, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x80 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 001D
        gbc.setState(0x46fc, 0xd373, 0x8e60, 0x2ec5, 0xe2d5, 0xe3a5, 0x0, 0x0);
        gbc.writeMem(0x46fc, { 0x80 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 001E
        gbc.setState(0xb274, 0x2aa0, 0x4ac0, 0xb575, 0x4f8a, 0xfbf8, 0x0, 0x1);
        gbc.writeMem(0xb274, { 0x80 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0xb275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb274));
        // 80 001F
        gbc.setState(0x2417, 0x76bb, 0xf120, 0x8905, 0xd549, 0x9286, 0x1, 0x1);
        gbc.writeMem(0x2417, { 0x80 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0020
        gbc.setState(0x2bc7, 0x4245, 0x5820, 0xb9db, 0xf41, 0xe51e, 0x0, 0x0);
        gbc.writeMem(0x2bc7, { 0x80 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4245, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0021
        gbc.setState(0xccd9, 0x735a, 0x6000, 0xb7bb, 0xde77, 0xf26b, 0x0, 0x1);
        gbc.writeMem(0xccd9, { 0x80 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x735a, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xccd9));
        // 80 0022
        gbc.setState(0x1cd7, 0x3425, 0x9970, 0xefee, 0x35fd, 0xadeb, 0x1, 0x0);
        gbc.writeMem(0x1cd7, { 0x80 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3425, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0023
        gbc.setState(0xbf87, 0x37e4, 0x740, 0x355d, 0x446f, 0xd8b5, 0x0, 0x0);
        gbc.writeMem(0xbf87, { 0x80 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0xbf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbf87));
        // 80 0024
        gbc.setState(0x6cd8, 0x3af9, 0xf430, 0xcc1, 0x98c5, 0x11b5, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x6cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0025
        gbc.setState(0xd847, 0x6971, 0xbef0, 0x8d76, 0xd014, 0x1e9c, 0x1, 0x0);
        gbc.writeMem(0xd847, { 0x80 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0xd848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd847));
        // 80 0027
        gbc.setState(0xc40a, 0x22e0, 0x1960, 0xe369, 0x25d3, 0xde01, 0x0, 0x0);
        gbc.writeMem(0xc40a, { 0x80 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0xc40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc40a));
        // 80 0028
        gbc.setState(0x6f91, 0x4eec, 0x7650, 0x78c, 0x8375, 0xa5bd, 0x1, 0x1);
        gbc.writeMem(0x6f91, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x6f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0029
        gbc.setState(0xcc3a, 0x92f9, 0xce80, 0x3cc6, 0x255e, 0x633a, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0x80 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0xcc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcc3a));
        // 80 002A
        gbc.setState(0x6c8, 0x4aab, 0xb5a0, 0x8ca9, 0x2370, 0xad4a, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4aab, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 002B
        gbc.setState(0x34b1, 0x8108, 0xaa00, 0x8db9, 0x9bb9, 0xfc46, 0x0, 0x0);
        gbc.writeMem(0x34b1, { 0x80 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 002C
        gbc.setState(0x31c5, 0x8dd, 0xae80, 0x622f, 0x4569, 0x7897, 0x0, 0x0);
        gbc.writeMem(0x31c5, { 0x80 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0x31c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 002E
        gbc.setState(0x1819, 0x1fee, 0x2f30, 0x1984, 0xba4f, 0x1127, 0x0, 0x0);
        gbc.writeMem(0x1819, { 0x80 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1fee, gbc.sp());
        EXPECT(0x181a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 002F
        gbc.setState(0x28fa, 0x3c28, 0xfe00, 0x7bd8, 0xbefc, 0x11f3, 0x1, 0x0);
        gbc.writeMem(0x28fa, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3c28, gbc.sp());
        EXPECT(0x28fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0030
        gbc.setState(0x8f4f, 0xa7f9, 0xf7a0, 0x8599, 0x4271, 0x31b1, 0x1, 0x1);
        gbc.writeMem(0x8f4f, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa7f9, gbc.sp());
        EXPECT(0x8f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8f4f));
        // 80 0031
        gbc.setState(0x21c1, 0xf3f3, 0x50a0, 0xc718, 0xad92, 0xb485, 0x1, 0x0);
        gbc.writeMem(0x21c1, { 0x80 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf3f3, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0032
        gbc.setState(0x4a6c, 0x727a, 0xe370, 0x7c08, 0xb98e, 0x7dbb, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0x80 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x727a, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0033
        gbc.setState(0x2a01, 0x209e, 0x9910, 0xfb11, 0x82aa, 0xa287, 0x0, 0x0);
        gbc.writeMem(0x2a01, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x209e, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0034
        gbc.setState(0x3598, 0xf5ab, 0xff30, 0x626d, 0xf816, 0x8cb3, 0x1, 0x1);
        gbc.writeMem(0x3598, { 0x80 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x3599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0035
        gbc.setState(0x12a2, 0x2883, 0x3550, 0x3d97, 0x46dc, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x12a2, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0036
        gbc.setState(0x4f6c, 0x7008, 0xb0f0, 0x975b, 0x9b76, 0x5896, 0x0, 0x0);
        gbc.writeMem(0x4f6c, { 0x80 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0x4f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0037
        gbc.setState(0xe746, 0x6f6c, 0x8220, 0x2a1b, 0x8aa9, 0xc4eb, 0x0, 0x0);
        gbc.writeMem(0xe746, { 0x80 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe746));
        // 80 0038
        gbc.setState(0xe1d5, 0xfeaa, 0xccf0, 0x6a87, 0xac8b, 0x1452, 0x1, 0x1);
        gbc.writeMem(0xe1d5, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfeaa, gbc.sp());
        EXPECT(0xe1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe1d5));
        // 80 0039
        gbc.setState(0x5d8d, 0xddcb, 0x1f0, 0x816e, 0x8d59, 0x10a7, 0x1, 0x1);
        gbc.writeMem(0x5d8d, { 0x80 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xddcb, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 003A
        gbc.setState(0x13d3, 0xdf24, 0x5130, 0x8fda, 0xb4c8, 0x1a77, 0x1, 0x0);
        gbc.writeMem(0x13d3, { 0x80 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 003B
        gbc.setState(0x1cb4, 0xaedd, 0xe850, 0x452d, 0xf9ac, 0xc85a, 0x0, 0x0);
        gbc.writeMem(0x1cb4, { 0x80 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaedd, gbc.sp());
        EXPECT(0x1cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 003C
        gbc.setState(0x1d53, 0x4257, 0xd0c0, 0xb609, 0x33a1, 0x5d7e, 0x0, 0x0);
        gbc.writeMem(0x1d53, { 0x80 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0x1d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 003D
        gbc.setState(0xa4ba, 0xa6cb, 0xf8b0, 0x8594, 0x3d55, 0x69ea, 0x0, 0x1);
        gbc.writeMem(0xa4ba, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0xa4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa4ba));
        // 80 003E
        gbc.setState(0xcf0, 0x5a33, 0x9020, 0x900a, 0x7d44, 0xc265, 0x1, 0x1);
        gbc.writeMem(0xcf0, { 0x80 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5a33, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 003F
        gbc.setState(0xb1f3, 0x7765, 0x1e30, 0x627f, 0x7e5f, 0x7438, 0x1, 0x0);
        gbc.writeMem(0xb1f3, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0xb1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb1f3));
        // 80 0040
        gbc.setState(0x822e, 0x22dd, 0x170, 0x9f07, 0xb2a3, 0x218c, 0x1, 0x0);
        gbc.writeMem(0x822e, { 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x22dd, gbc.sp());
        EXPECT(0x822f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x822e));
        // 80 0041
        gbc.setState(0xa9b5, 0x2cda, 0x3a40, 0xf1e7, 0xeabf, 0x123b, 0x1, 0x1);
        gbc.writeMem(0xa9b5, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa9b5));
        // 80 0042
        gbc.setState(0xef59, 0xd802, 0x29b0, 0xbd18, 0x2af8, 0x16f0, 0x0, 0x1);
        gbc.writeMem(0xef59, { 0x80 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd802, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef59));
        // 80 0043
        gbc.setState(0xccf4, 0xeab4, 0xd440, 0xd969, 0x5c9e, 0x9cf9, 0x0, 0x1);
        gbc.writeMem(0xccf4, { 0x80 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xccf4));
        // 80 0044
        gbc.setState(0x42b2, 0x37bf, 0x6b00, 0x7818, 0x3578, 0x6764, 0x0, 0x0);
        gbc.writeMem(0x42b2, { 0x80 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x37bf, gbc.sp());
        EXPECT(0x42b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0045
        gbc.setState(0xbf39, 0xd1d6, 0x17c0, 0x4193, 0x6fbb, 0x2aee, 0x0, 0x0);
        gbc.writeMem(0xbf39, { 0x80 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0xbf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbf39));
        // 80 0046
        gbc.setState(0x5391, 0x2bf6, 0x7eb0, 0xb363, 0xbf0f, 0x5b0a, 0x1, 0x0);
        gbc.writeMem(0x5391, { 0x80 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2bf6, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0047
        gbc.setState(0x8d56, 0x680f, 0x21a0, 0x8624, 0xac4a, 0x2e21, 0x0, 0x0);
        gbc.writeMem(0x8d56, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x680f, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8d56));
        // 80 0048
        gbc.setState(0x76fd, 0x78c, 0x88b0, 0x68ab, 0x7c69, 0x8a79, 0x1, 0x1);
        gbc.writeMem(0x76fd, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x78c, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0049
        gbc.setState(0x3dd6, 0x9ee6, 0xc8a0, 0xb040, 0xed32, 0x4c19, 0x0, 0x0);
        gbc.writeMem(0x3dd6, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 004A
        gbc.setState(0x15ad, 0xdfc4, 0x7860, 0xee8a, 0xfa8b, 0x94a8, 0x1, 0x0);
        gbc.writeMem(0x15ad, { 0x80 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0x15ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 004B
        gbc.setState(0x9acf, 0x28c9, 0xbbf0, 0xb665, 0x72fe, 0xcee8, 0x1, 0x0);
        gbc.writeMem(0x9acf, { 0x80 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x28c9, gbc.sp());
        EXPECT(0x9ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9acf));
        // 80 004C
        gbc.setState(0xb62b, 0xe0b4, 0x7260, 0x655c, 0x2b34, 0xab52, 0x0, 0x1);
        gbc.writeMem(0xb62b, { 0x80 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe0b4, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb62b));
        // 80 004D
        gbc.setState(0x8bf2, 0x8227, 0xffa0, 0x2836, 0x56d3, 0xcac2, 0x0, 0x1);
        gbc.writeMem(0x8bf2, { 0x80 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8bf2));
        // 80 004E
        gbc.setState(0x7e1a, 0x22b4, 0x1980, 0x3421, 0xea25, 0x500f, 0x1, 0x0);
        gbc.writeMem(0x7e1a, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0x7e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 004F
        gbc.setState(0x57f9, 0x6812, 0xea10, 0xc74d, 0x7aa2, 0xbf37, 0x1, 0x0);
        gbc.writeMem(0x57f9, { 0x80 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0050
        gbc.setState(0xe638, 0x458, 0x20f0, 0xa865, 0xf4a0, 0x7b25, 0x1, 0x0);
        gbc.writeMem(0xe638, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe638));
        // 80 0051
        gbc.setState(0x831a, 0x89dc, 0x89b0, 0xb888, 0x3a74, 0x88f4, 0x0, 0x1);
        gbc.writeMem(0x831a, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x89dc, gbc.sp());
        EXPECT(0x831b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x831a));
        // 80 0052
        gbc.setState(0xeba6, 0xae9e, 0xd5a0, 0x8fae, 0xc130, 0x4323, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0x80 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xeba6));
        // 80 0053
        gbc.setState(0xedd0, 0xc583, 0x4790, 0x7a5d, 0x1f7c, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0xedd0, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0xedd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xedd0));
        // 80 0054
        gbc.setState(0x60f4, 0xd4d4, 0x9d40, 0xbfa1, 0xe695, 0x9f75, 0x0, 0x0);
        gbc.writeMem(0x60f4, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0055
        gbc.setState(0xa27a, 0xc19e, 0x1890, 0x65f2, 0x7701, 0xa621, 0x0, 0x0);
        gbc.writeMem(0xa27a, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc19e, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa27a));
        // 80 0056
        gbc.setState(0x47c8, 0x1204, 0x31a0, 0xa1ff, 0xd0c8, 0xa13f, 0x0, 0x0);
        gbc.writeMem(0x47c8, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1204, gbc.sp());
        EXPECT(0x47c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0057
        gbc.setState(0x1a2d, 0xcf84, 0xc240, 0xc977, 0x8c7a, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x1a2d, { 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcf84, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0058
        gbc.setState(0xecdd, 0xb5fe, 0xf6e0, 0x6698, 0xe88, 0xe31f, 0x1, 0x1);
        gbc.writeMem(0xecdd, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0xecde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xecdd));
        // 80 0059
        gbc.setState(0x4ac0, 0xd072, 0x1140, 0x5531, 0x57df, 0xeef4, 0x1, 0x0);
        gbc.writeMem(0x4ac0, { 0x80 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd072, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 005A
        gbc.setState(0x3fe6, 0x5a72, 0xce30, 0x3988, 0x9c15, 0x4bdd, 0x0, 0x1);
        gbc.writeMem(0x3fe6, { 0x80 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0x3fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 005B
        gbc.setState(0x64c4, 0x3b57, 0xb6c0, 0xa42b, 0x2547, 0x934a, 0x0, 0x1);
        gbc.writeMem(0x64c4, { 0x80 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3b57, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 005C
        gbc.setState(0xafa0, 0x1eb3, 0xdb20, 0xe7a0, 0x2376, 0x7e28, 0x1, 0x1);
        gbc.writeMem(0xafa0, { 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1eb3, gbc.sp());
        EXPECT(0xafa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xafa0));
        // 80 005D
        gbc.setState(0xc969, 0xa64e, 0x2c00, 0x9964, 0xba38, 0xf490, 0x0, 0x0);
        gbc.writeMem(0xc969, { 0x80 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc969));
        // 80 005E
        gbc.setState(0x17db, 0x9846, 0xa510, 0x8061, 0xf3a6, 0x1f16, 0x1, 0x0);
        gbc.writeMem(0x17db, { 0x80 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0x17dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 005F
        gbc.setState(0x3c06, 0x6c43, 0x5390, 0x78ca, 0x8e24, 0xffbd, 0x0, 0x0);
        gbc.writeMem(0x3c06, { 0x80 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6c43, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0060
        gbc.setState(0xcc84, 0x2112, 0x10a0, 0x6044, 0xd54c, 0x91e, 0x0, 0x1);
        gbc.writeMem(0xcc84, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2112, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcc84));
        // 80 0061
        gbc.setState(0x681e, 0x53ec, 0xd190, 0xfc74, 0x4131, 0xdc65, 0x0, 0x0);
        gbc.writeMem(0x681e, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x53ec, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0063
        gbc.setState(0x7b07, 0xaf4e, 0xc330, 0xdd38, 0x9105, 0x2d8d, 0x0, 0x1);
        gbc.writeMem(0x7b07, { 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaf4e, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0064
        gbc.setState(0xd1c5, 0x7ba5, 0x5890, 0x289f, 0xc7ff, 0x977f, 0x0, 0x0);
        gbc.writeMem(0xd1c5, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7ba5, gbc.sp());
        EXPECT(0xd1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd1c5));
        // 80 0065
        gbc.setState(0xc2eb, 0xd3bd, 0x7d90, 0x6f4c, 0xde2b, 0xefe8, 0x1, 0x1);
        gbc.writeMem(0xc2eb, { 0x80 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd3bd, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc2eb));
        // 80 0066
        gbc.setState(0xd7b5, 0xbd35, 0x62c0, 0x672d, 0x8438, 0xbbf5, 0x1, 0x1);
        gbc.writeMem(0xd7b5, { 0x80 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd7b5));
        // 80 0067
        gbc.setState(0x2d54, 0x30a1, 0x7ca0, 0x23ec, 0xe7e, 0x7729, 0x1, 0x1);
        gbc.writeMem(0x2d54, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x30a1, gbc.sp());
        EXPECT(0x2d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0068
        gbc.setState(0x4269, 0x7299, 0x7e50, 0xadad, 0x8918, 0x1533, 0x0, 0x1);
        gbc.writeMem(0x4269, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7299, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 006A
        gbc.setState(0x4f25, 0x408b, 0xd840, 0x1b70, 0xa11d, 0x6d05, 0x1, 0x1);
        gbc.writeMem(0x4f25, { 0x80 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0x4f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 006B
        gbc.setState(0x8b9f, 0xcc2, 0xa70, 0xb9fe, 0xe2d0, 0x207, 0x0, 0x0);
        gbc.writeMem(0x8b9f, { 0x80 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b9f));
        // 80 006C
        gbc.setState(0x8777, 0x9181, 0xc130, 0x581, 0xf315, 0x6908, 0x1, 0x0);
        gbc.writeMem(0x8777, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8777));
        // 80 006D
        gbc.setState(0x3378, 0xece1, 0x8050, 0xb9d7, 0xbf0c, 0x7573, 0x0, 0x1);
        gbc.writeMem(0x3378, { 0x80 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0x3379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 006E
        gbc.setState(0x7b6, 0x9d96, 0x66e0, 0x6c57, 0x1470, 0x80a7, 0x1, 0x1);
        gbc.writeMem(0x7b6, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9d96, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 006F
        gbc.setState(0x1785, 0x39e6, 0xa430, 0xf50, 0x32d0, 0x67e1, 0x1, 0x0);
        gbc.writeMem(0x1785, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0x1786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0070
        gbc.setState(0x205a, 0x510f, 0x2cc0, 0x3153, 0x8851, 0x24e2, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0x80 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0071
        gbc.setState(0x4b02, 0x6be6, 0x6ea0, 0xb773, 0x5bb5, 0xe93b, 0x1, 0x0);
        gbc.writeMem(0x4b02, { 0x80 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0072
        gbc.setState(0x940a, 0xfe7d, 0xc240, 0x9795, 0x5f41, 0x2706, 0x1, 0x0);
        gbc.writeMem(0x940a, { 0x80 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x940a));
        // 80 0073
        gbc.setState(0x18d2, 0x43ad, 0x53c0, 0x31c, 0x816f, 0x1f34, 0x0, 0x0);
        gbc.writeMem(0x18d2, { 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x43ad, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0074
        gbc.setState(0x6c06, 0x3194, 0x2f00, 0xe13f, 0x3794, 0xc2ed, 0x1, 0x1);
        gbc.writeMem(0x6c06, { 0x80 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x6c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0075
        gbc.setState(0x9b3c, 0x992, 0xe4c0, 0x4c8f, 0xb277, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x9b3c, { 0x80 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x992, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9b3c));
        // 80 0076
        gbc.setState(0x15c3, 0xba31, 0xa6b0, 0x1a9a, 0x17d9, 0x5562, 0x0, 0x1);
        gbc.writeMem(0x15c3, { 0x80 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0x15c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0077
        gbc.setState(0x19ea, 0xedc9, 0x7190, 0x623f, 0x550b, 0x953c, 0x1, 0x0);
        gbc.writeMem(0x19ea, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xedc9, gbc.sp());
        EXPECT(0x19eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0078
        gbc.setState(0x82c7, 0xd15d, 0x9f60, 0x773a, 0xc582, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0x82c7, { 0x80 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x82c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x82c7));
        // 80 0079
        gbc.setState(0xeb47, 0x47bb, 0x630, 0xe282, 0xe3b8, 0xcb54, 0x0, 0x1);
        gbc.writeMem(0xeb47, { 0x80 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0xeb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xeb47));
        // 80 007B
        gbc.setState(0xc8e7, 0x9d0f, 0x3470, 0xe1ec, 0x7734, 0xa79f, 0x1, 0x1);
        gbc.writeMem(0xc8e7, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9d0f, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc8e7));
        // 80 007C
        gbc.setState(0x50f8, 0xf118, 0x74b0, 0xc0a6, 0x89c8, 0x3e6b, 0x1, 0x0);
        gbc.writeMem(0x50f8, { 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf118, gbc.sp());
        EXPECT(0x50f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 007D
        gbc.setState(0xc9f6, 0xc286, 0x8ea0, 0x4e8a, 0xe8ba, 0x10a9, 0x0, 0x1);
        gbc.writeMem(0xc9f6, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc286, gbc.sp());
        EXPECT(0xc9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc9f6));
        // 80 007E
        gbc.setState(0xaae, 0x4863, 0x7a0, 0x99f2, 0x7ad8, 0x1a20, 0x1, 0x0);
        gbc.writeMem(0xaae, { 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 007F
        gbc.setState(0x5635, 0x183d, 0xec60, 0x9658, 0x6fb, 0x8cec, 0x0, 0x0);
        gbc.writeMem(0x5635, { 0x80 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0080
        gbc.setState(0x9890, 0xc186, 0x3da0, 0x956a, 0x5841, 0x548, 0x1, 0x1);
        gbc.writeMem(0x9890, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9890));
        // 80 0081
        gbc.setState(0x90bb, 0x9095, 0x2d80, 0x41ba, 0x863, 0xacb6, 0x1, 0x0);
        gbc.writeMem(0x90bb, { 0x80 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0x90bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x90bb));
        // 80 0082
        gbc.setState(0x1500, 0x65d, 0x61f0, 0xb0b3, 0xd5b7, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0x1500, { 0x80 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x65d, gbc.sp());
        EXPECT(0x1501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0084
        gbc.setState(0x9675, 0x362c, 0x31d0, 0xc635, 0x5d12, 0xb921, 0x0, 0x1);
        gbc.writeMem(0x9675, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x362c, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9675));
        // 80 0085
        gbc.setState(0x6b2d, 0x5aae, 0x8390, 0x5969, 0x9dab, 0xa3e8, 0x0, 0x0);
        gbc.writeMem(0x6b2d, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5aae, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0086
        gbc.setState(0x2896, 0x2930, 0x4940, 0x4c52, 0x877, 0xa5c4, 0x0, 0x1);
        gbc.writeMem(0x2896, { 0x80 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0x2897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0087
        gbc.setState(0x1148, 0xee04, 0x7f30, 0x98c3, 0x18be, 0xe8f2, 0x1, 0x1);
        gbc.writeMem(0x1148, { 0x80 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0x1149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0088
        gbc.setState(0xb9bf, 0x1adb, 0x3e0, 0x2742, 0x9999, 0x47b7, 0x1, 0x1);
        gbc.writeMem(0xb9bf, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1adb, gbc.sp());
        EXPECT(0xb9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb9bf));
        // 80 0089
        gbc.setState(0xba18, 0x59d, 0x9f00, 0xcecd, 0xd12e, 0x7847, 0x1, 0x1);
        gbc.writeMem(0xba18, { 0x80 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0xba19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xba18));
        // 80 008A
        gbc.setState(0x225b, 0xd502, 0xac30, 0xf9de, 0xc8d1, 0x62cb, 0x0, 0x1);
        gbc.writeMem(0x225b, { 0x80 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd502, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 008B
        gbc.setState(0x33c2, 0xf150, 0x5360, 0xd55a, 0x101e, 0x49e9, 0x1, 0x1);
        gbc.writeMem(0x33c2, { 0x80 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 008C
        gbc.setState(0x99bf, 0xb1e5, 0x63e0, 0xc5ce, 0x42e2, 0x7691, 0x0, 0x1);
        gbc.writeMem(0x99bf, { 0x80 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x99bf));
        // 80 008D
        gbc.setState(0x3edb, 0x75da, 0x3210, 0x2ea4, 0x5ab0, 0xd249, 0x0, 0x1);
        gbc.writeMem(0x3edb, { 0x80 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x75da, gbc.sp());
        EXPECT(0x3edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 008E
        gbc.setState(0xa595, 0xc07, 0xc4b0, 0xaeec, 0x8501, 0x30ce, 0x1, 0x1);
        gbc.writeMem(0xa595, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc07, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa595));
        // 80 008F
        gbc.setState(0x1086, 0x2dc9, 0x55a0, 0x180f, 0xed7b, 0x83e0, 0x0, 0x0);
        gbc.writeMem(0x1086, { 0x80 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2dc9, gbc.sp());
        EXPECT(0x1087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0090
        gbc.setState(0x2e9d, 0x791c, 0x6b40, 0x417f, 0xf349, 0xa1f0, 0x1, 0x0);
        gbc.writeMem(0x2e9d, { 0x80 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0091
        gbc.setState(0x6488, 0x1cfe, 0x3eb0, 0xca63, 0x4e99, 0x6884, 0x0, 0x1);
        gbc.writeMem(0x6488, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1cfe, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0092
        gbc.setState(0x9647, 0xf514, 0xc5e0, 0x67d5, 0x2228, 0x8531, 0x0, 0x0);
        gbc.writeMem(0x9647, { 0x80 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0x9648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9647));
        // 80 0093
        gbc.setState(0xa9f0, 0x4ebd, 0x67c0, 0xdce6, 0x53bb, 0x2eac, 0x1, 0x0);
        gbc.writeMem(0xa9f0, { 0x80 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0xa9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa9f0));
        // 80 0094
        gbc.setState(0xdc77, 0x44a1, 0xb8c0, 0x972f, 0xe867, 0xd0d8, 0x0, 0x1);
        gbc.writeMem(0xdc77, { 0x80 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdc77));
        // 80 0095
        gbc.setState(0x600b, 0x3f33, 0x5f40, 0x705b, 0xe9dd, 0x3004, 0x0, 0x0);
        gbc.writeMem(0x600b, { 0x80 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3f33, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0096
        gbc.setState(0xe20e, 0xf817, 0xf7c0, 0x3b5c, 0xdf17, 0x2369, 0x0, 0x1);
        gbc.writeMem(0xe20e, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf817, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe20e));
        // 80 0097
        gbc.setState(0x956f, 0xc542, 0xad30, 0xd8b, 0xd27, 0x8b3d, 0x0, 0x0);
        gbc.writeMem(0x956f, { 0x80 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0x9570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x956f));
        // 80 0098
        gbc.setState(0x1253, 0xfcc9, 0xe4d0, 0xa439, 0x9636, 0xadb7, 0x0, 0x0);
        gbc.writeMem(0x1253, { 0x80 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfcc9, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0099
        gbc.setState(0x643d, 0xdaaa, 0x85d0, 0xc3b2, 0xb30b, 0xce64, 0x1, 0x0);
        gbc.writeMem(0x643d, { 0x80 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdaaa, gbc.sp());
        EXPECT(0x643e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 009A
        gbc.setState(0x37ae, 0xd734, 0xf6b0, 0x5499, 0xef28, 0x3028, 0x1, 0x0);
        gbc.writeMem(0x37ae, { 0x80 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x37af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 009B
        gbc.setState(0x71a1, 0x717b, 0x7ce0, 0xc66c, 0xbaaf, 0xf9e3, 0x1, 0x0);
        gbc.writeMem(0x71a1, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0x71a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 009C
        gbc.setState(0x6a15, 0x9227, 0x1e90, 0x9189, 0x673b, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x6a15, { 0x80 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9227, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 009D
        gbc.setState(0xdd37, 0x2dc3, 0x6570, 0x1984, 0x3b5a, 0x6fe6, 0x1, 0x1);
        gbc.writeMem(0xdd37, { 0x80 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2dc3, gbc.sp());
        EXPECT(0xdd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdd37));
        // 80 009E
        gbc.setState(0x10a6, 0xbe4d, 0xb0d0, 0xaf55, 0xc71d, 0xe919, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0x80 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbe4d, gbc.sp());
        EXPECT(0x10a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 009F
        gbc.setState(0x318, 0x1d13, 0x2530, 0xf05f, 0xe5de, 0xdde3, 0x1, 0x1);
        gbc.writeMem(0x318, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00A0
        gbc.setState(0x2269, 0xb442, 0xaca0, 0x4707, 0x94c5, 0x7827, 0x0, 0x0);
        gbc.writeMem(0x2269, { 0x80 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00A1
        gbc.setState(0xe1e3, 0x6f54, 0xde60, 0x5afa, 0x6562, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0xe1e3, { 0x80 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0xe1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe1e3));
        // 80 00A3
        gbc.setState(0xdb46, 0x159a, 0xa5f0, 0x354c, 0x6b9f, 0xc58c, 0x0, 0x0);
        gbc.writeMem(0xdb46, { 0x80 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xdb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdb46));
        // 80 00A4
        gbc.setState(0x3706, 0x3d27, 0xde0, 0x9a6c, 0x85c1, 0x8d19, 0x1, 0x1);
        gbc.writeMem(0x3706, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3d27, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00A5
        gbc.setState(0x83a5, 0xd063, 0x7090, 0xe880, 0xbcc7, 0xd364, 0x0, 0x0);
        gbc.writeMem(0x83a5, { 0x80 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd063, gbc.sp());
        EXPECT(0x83a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x83a5));
        // 80 00A6
        gbc.setState(0x90d3, 0xd315, 0xd490, 0x4536, 0x197b, 0xde35, 0x1, 0x1);
        gbc.writeMem(0x90d3, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd315, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x90d3));
        // 80 00A7
        gbc.setState(0x2329, 0x2881, 0x3d10, 0xb536, 0x8fdc, 0xc72e, 0x1, 0x0);
        gbc.writeMem(0x2329, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00A9
        gbc.setState(0x3fb0, 0x54ae, 0xcd80, 0xd119, 0x37f2, 0xd358, 0x1, 0x1);
        gbc.writeMem(0x3fb0, { 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00AA
        gbc.setState(0x4e95, 0x5d8f, 0x1ec0, 0xc8fd, 0x186c, 0xb87f, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0x80 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0x4e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00AB
        gbc.setState(0x459c, 0x7ed3, 0xa7a0, 0xd1b3, 0x3797, 0x6182, 0x0, 0x0);
        gbc.writeMem(0x459c, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ed3, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00AC
        gbc.setState(0xef8e, 0xbea0, 0x95e0, 0x7906, 0x2bf5, 0x7dcd, 0x0, 0x0);
        gbc.writeMem(0xef8e, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbea0, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef8e));
        // 80 00AD
        gbc.setState(0x7950, 0x584e, 0xf600, 0x6c00, 0x928f, 0x9c7, 0x1, 0x1);
        gbc.writeMem(0x7950, { 0x80 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x584e, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00AF
        gbc.setState(0x7333, 0xf5f, 0xf310, 0x860a, 0x101d, 0x9834, 0x1, 0x0);
        gbc.writeMem(0x7333, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x7334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00B0
        gbc.setState(0x4dfc, 0xdf48, 0x2d60, 0x9025, 0x3ab9, 0x9272, 0x1, 0x1);
        gbc.writeMem(0x4dfc, { 0x80 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf48, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00B1
        gbc.setState(0xabe, 0xdf47, 0x76b0, 0x1938, 0x6021, 0xe524, 0x1, 0x1);
        gbc.writeMem(0xabe, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdf47, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00B2
        gbc.setState(0xa22f, 0x4b8a, 0x4fd0, 0x6b13, 0xeb4b, 0x2898, 0x1, 0x1);
        gbc.writeMem(0xa22f, { 0x80 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0xa230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa22f));
        // 80 00B3
        gbc.setState(0x2998, 0x35f, 0x2820, 0x39a2, 0x1685, 0x763d, 0x0, 0x0);
        gbc.writeMem(0x2998, { 0x80 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x35f, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00B4
        gbc.setState(0x81c8, 0xbfc, 0xf870, 0x3999, 0x7040, 0xe8b9, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0x80 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbfc, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x81c8));
        // 80 00B5
        gbc.setState(0x3285, 0xdd84, 0x2040, 0x3cf8, 0xc691, 0x7b55, 0x1, 0x1);
        gbc.writeMem(0x3285, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x3286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00B6
        gbc.setState(0x449e, 0x38d8, 0x1620, 0xcb59, 0xf78, 0xd55b, 0x1, 0x1);
        gbc.writeMem(0x449e, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x38d8, gbc.sp());
        EXPECT(0x449f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00B7
        gbc.setState(0xa63e, 0x162, 0xa5d0, 0x2537, 0xb2fd, 0xf249, 0x0, 0x0);
        gbc.writeMem(0xa63e, { 0x80 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa63e));
        // 80 00B8
        gbc.setState(0x5a0e, 0x3fb8, 0x8730, 0x7c8b, 0x3ce6, 0xbb4f, 0x1, 0x0);
        gbc.writeMem(0x5a0e, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3fb8, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00B9
        gbc.setState(0x14c6, 0xace5, 0xa660, 0xc422, 0xba36, 0xc07f, 0x0, 0x1);
        gbc.writeMem(0x14c6, { 0x80 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00BA
        gbc.setState(0xd3b0, 0xfbe4, 0x3bb0, 0xfad, 0x3a2c, 0x91f9, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0x80 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfbe4, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd3b0));
        // 80 00BB
        gbc.setState(0x6e5e, 0x83b1, 0xd170, 0xb53c, 0x95ee, 0xdad3, 0x1, 0x1);
        gbc.writeMem(0x6e5e, { 0x80 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00BC
        gbc.setState(0x61a4, 0xe573, 0x6500, 0x2bbd, 0x8190, 0xf80e, 0x0, 0x1);
        gbc.writeMem(0x61a4, { 0x80 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe573, gbc.sp());
        EXPECT(0x61a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00BD
        gbc.setState(0x8def, 0xd0db, 0x7f00, 0x2a8a, 0x1b75, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0x8def, { 0x80 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd0db, gbc.sp());
        EXPECT(0x8df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8def));
        // 80 00BE
        gbc.setState(0x3377, 0x38f1, 0x7d30, 0x86b3, 0x94a8, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0x3377, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00BF
        gbc.setState(0xcbee, 0x5dc8, 0x1a20, 0x140e, 0x5790, 0xcb39, 0x1, 0x1);
        gbc.writeMem(0xcbee, { 0x80 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5dc8, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcbee));
        // 80 00C0
        gbc.setState(0xe83b, 0x6269, 0x460, 0x1699, 0xc566, 0x399, 0x1, 0x0);
        gbc.writeMem(0xe83b, { 0x80 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0xe83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe83b));
        // 80 00C1
        gbc.setState(0xb170, 0x7e8, 0xc750, 0xcec0, 0x81d1, 0xe54f, 0x1, 0x0);
        gbc.writeMem(0xb170, { 0x80 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0xb171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb170));
        // 80 00C2
        gbc.setState(0xc06b, 0x4f8b, 0x8de0, 0xe640, 0x686f, 0x29c8, 0x1, 0x0);
        gbc.writeMem(0xc06b, { 0x80 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4f8b, gbc.sp());
        EXPECT(0xc06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc06b));
        // 80 00C3
        gbc.setState(0x8432, 0xca9c, 0x3600, 0x2126, 0x91c7, 0xca5d, 0x0, 0x1);
        gbc.writeMem(0x8432, { 0x80 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca9c, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8432));
        // 80 00C4
        gbc.setState(0x7106, 0xe546, 0xf6a0, 0x9cff, 0x705f, 0x6ea8, 0x1, 0x0);
        gbc.writeMem(0x7106, { 0x80 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00C5
        gbc.setState(0xd1b2, 0xcfc4, 0x1a0, 0x162, 0x884e, 0xcb26, 0x0, 0x0);
        gbc.writeMem(0xd1b2, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd1b2));
        // 80 00C6
        gbc.setState(0xa3d4, 0x14b2, 0xb5c0, 0xc203, 0x9b80, 0x6582, 0x1, 0x0);
        gbc.writeMem(0xa3d4, { 0x80 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0xa3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa3d4));
        // 80 00C7
        gbc.setState(0x17fb, 0xfdce, 0x5640, 0xadb7, 0x712, 0xe35f, 0x1, 0x1);
        gbc.writeMem(0x17fb, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfdce, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00C8
        gbc.setState(0x209e, 0x2b9, 0x690, 0xed84, 0x4b1a, 0x66cf, 0x1, 0x0);
        gbc.writeMem(0x209e, { 0x80 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00C9
        gbc.setState(0xe776, 0x74b1, 0xe6a0, 0x9db1, 0x5592, 0xe0a5, 0x1, 0x1);
        gbc.writeMem(0xe776, { 0x80 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x74b1, gbc.sp());
        EXPECT(0xe777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe776));
        // 80 00CA
        gbc.setState(0xefbf, 0x50f8, 0xb740, 0x547a, 0xc69d, 0xedc5, 0x1, 0x1);
        gbc.writeMem(0xefbf, { 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xefbf));
        // 80 00CB
        gbc.setState(0x87ca, 0x3c96, 0x68b0, 0x4ba, 0x43ea, 0xb46e, 0x1, 0x1);
        gbc.writeMem(0x87ca, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3c96, gbc.sp());
        EXPECT(0x87cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x87ca));
        // 80 00CC
        gbc.setState(0xcdd5, 0x32a4, 0xb3e0, 0xc51d, 0x9187, 0x7546, 0x0, 0x0);
        gbc.writeMem(0xcdd5, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x32a4, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcdd5));
        // 80 00CD
        gbc.setState(0x1df6, 0x6b27, 0xdb00, 0x5e8d, 0x2b1, 0x8703, 0x1, 0x1);
        gbc.writeMem(0x1df6, { 0x80 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00CF
        gbc.setState(0x1110, 0x6b23, 0x85a0, 0x87d1, 0xa81f, 0x2549, 0x1, 0x0);
        gbc.writeMem(0x1110, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6b23, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00D0
        gbc.setState(0x5234, 0x8c67, 0xf230, 0xafd8, 0xd12, 0x85e9, 0x1, 0x0);
        gbc.writeMem(0x5234, { 0x80 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8c67, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00D1
        gbc.setState(0xc41e, 0x9f8e, 0x6120, 0x7a90, 0x6bcc, 0xd1bf, 0x0, 0x1);
        gbc.writeMem(0xc41e, { 0x80 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc41e));
        // 80 00D2
        gbc.setState(0x14c9, 0x5b5f, 0xaa50, 0xefa, 0x5e0f, 0xffe7, 0x0, 0x0);
        gbc.writeMem(0x14c9, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0x14ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00D3
        gbc.setState(0xa4, 0xd3d4, 0x7130, 0x6cf0, 0xc302, 0x47d3, 0x1, 0x0);
        gbc.writeMem(0xa4, { 0x80 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd3d4, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00D4
        gbc.setState(0xe2b3, 0x16cb, 0xf8d0, 0xe465, 0x7731, 0xf246, 0x0, 0x1);
        gbc.writeMem(0xe2b3, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0xe2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe2b3));
        // 80 00D5
        gbc.setState(0xc17d, 0x4f67, 0x3580, 0xe6f7, 0x6adb, 0x347, 0x0, 0x0);
        gbc.writeMem(0xc17d, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc17d));
        // 80 00D6
        gbc.setState(0x7141, 0xca3b, 0x15c0, 0xbaa9, 0xc5af, 0x3fdd, 0x0, 0x0);
        gbc.writeMem(0x7141, { 0x80 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00D7
        gbc.setState(0x2cdb, 0x2aef, 0xfe70, 0xef4b, 0xfa3e, 0xa33e, 0x1, 0x1);
        gbc.writeMem(0x2cdb, { 0x80 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2aef, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00D8
        gbc.setState(0xb9ab, 0xb41d, 0x1b20, 0x5fc9, 0xea7f, 0x5e5, 0x0, 0x1);
        gbc.writeMem(0xb9ab, { 0x80 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb9ab));
        // 80 00D9
        gbc.setState(0x9df3, 0xc7ac, 0x6730, 0x9cc, 0xa886, 0xc7df, 0x0, 0x0);
        gbc.writeMem(0x9df3, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9df3));
        // 80 00DA
        gbc.setState(0xc0f0, 0xbe18, 0xd5d0, 0x7c96, 0xd6e2, 0x7576, 0x0, 0x0);
        gbc.writeMem(0xc0f0, { 0x80 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc0f0));
        // 80 00DB
        gbc.setState(0x2c24, 0x2da8, 0x8660, 0xcedd, 0xda3d, 0x4d77, 0x0, 0x0);
        gbc.writeMem(0x2c24, { 0x80 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00DC
        gbc.setState(0x851c, 0x775d, 0x7c0, 0xdd50, 0xf56e, 0x506e, 0x1, 0x0);
        gbc.writeMem(0x851c, { 0x80 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x775d, gbc.sp());
        EXPECT(0x851d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x851c));
        // 80 00DD
        gbc.setState(0x8c55, 0x425c, 0xaf30, 0x7ba6, 0x235a, 0x10c9, 0x0, 0x1);
        gbc.writeMem(0x8c55, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x425c, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8c55));
        // 80 00DE
        gbc.setState(0x5ba4, 0x990c, 0x8250, 0x84bf, 0x5e00, 0xd10b, 0x1, 0x1);
        gbc.writeMem(0x5ba4, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0x5ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00DF
        gbc.setState(0xcdbb, 0x54c2, 0x3ef0, 0x9c8e, 0x3683, 0x7f63, 0x1, 0x0);
        gbc.writeMem(0xcdbb, { 0x80 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x54c2, gbc.sp());
        EXPECT(0xcdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcdbb));
        // 80 00E0
        gbc.setState(0x36dc, 0x952d, 0xc7d0, 0x196b, 0xab70, 0x7f6f, 0x0, 0x1);
        gbc.writeMem(0x36dc, { 0x80 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00E1
        gbc.setState(0x7c8b, 0x91a5, 0xa670, 0x870e, 0x4cc5, 0x4d4e, 0x0, 0x1);
        gbc.writeMem(0x7c8b, { 0x80 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x91a5, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00E2
        gbc.setState(0x662e, 0x5bd8, 0x2e30, 0x1419, 0x9fab, 0x431, 0x1, 0x0);
        gbc.writeMem(0x662e, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5bd8, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00E3
        gbc.setState(0x1176, 0x73e2, 0x55d0, 0xdef9, 0xaec7, 0x3a63, 0x0, 0x1);
        gbc.writeMem(0x1176, { 0x80 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73e2, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00E4
        gbc.setState(0x3dce, 0x5c, 0xbb90, 0xf15f, 0x272c, 0xf689, 0x0, 0x1);
        gbc.writeMem(0x3dce, { 0x80 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5c, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00E5
        gbc.setState(0x1744, 0x5e41, 0xc380, 0x43e1, 0xeb3e, 0x487b, 0x1, 0x1);
        gbc.writeMem(0x1744, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5e41, gbc.sp());
        EXPECT(0x1745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00E6
        gbc.setState(0xe569, 0xf1fa, 0xbd50, 0x4cf8, 0xba1e, 0x36c1, 0x1, 0x0);
        gbc.writeMem(0xe569, { 0x80 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1fa, gbc.sp());
        EXPECT(0xe56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe569));
        // 80 00E7
        gbc.setState(0x42ca, 0xf287, 0x9430, 0xf305, 0x927c, 0xa537, 0x1, 0x1);
        gbc.writeMem(0x42ca, { 0x80 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x42cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00E8
        gbc.setState(0xeecb, 0xb3e, 0xb30, 0x7b33, 0x77a0, 0x1dbb, 0x1, 0x0);
        gbc.writeMem(0xeecb, { 0x80 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb3e, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xeecb));
        // 80 00E9
        gbc.setState(0xab98, 0xedf8, 0x37d0, 0xb9f5, 0x376c, 0x7782, 0x1, 0x1);
        gbc.writeMem(0xab98, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xedf8, gbc.sp());
        EXPECT(0xab99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xab98));
        // 80 00EA
        gbc.setState(0x1f39, 0x860f, 0x5f90, 0xdc85, 0xa4, 0x5445, 0x0, 0x0);
        gbc.writeMem(0x1f39, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x1f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00EB
        gbc.setState(0x32ef, 0xb5bc, 0x55f0, 0x203c, 0x461, 0x47e1, 0x0, 0x1);
        gbc.writeMem(0x32ef, { 0x80 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x32f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00EC
        gbc.setState(0xbd9a, 0x4c1, 0x8670, 0xa415, 0x1bcb, 0x196d, 0x0, 0x1);
        gbc.writeMem(0xbd9a, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4c1, gbc.sp());
        EXPECT(0xbd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbd9a));
        // 80 00ED
        gbc.setState(0xd418, 0xcb75, 0x99e0, 0x8253, 0x5cdc, 0x1cec, 0x0, 0x0);
        gbc.writeMem(0xd418, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd418));
        // 80 00EE
        gbc.setState(0x49b2, 0xd659, 0xf360, 0x9c42, 0x6876, 0x39cd, 0x0, 0x0);
        gbc.writeMem(0x49b2, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00F0
        gbc.setState(0x6c7e, 0x28a9, 0x7d60, 0x8e17, 0xd906, 0xa6b0, 0x1, 0x1);
        gbc.writeMem(0x6c7e, { 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x28a9, gbc.sp());
        EXPECT(0x6c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00F1
        gbc.setState(0x68ae, 0x788, 0xe250, 0x8945, 0xda68, 0x8542, 0x0, 0x0);
        gbc.writeMem(0x68ae, { 0x80 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00F3
        gbc.setState(0x73c1, 0x39ae, 0x6700, 0x23ab, 0x6603, 0x4622, 0x1, 0x1);
        gbc.writeMem(0x73c1, { 0x80 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x39ae, gbc.sp());
        EXPECT(0x73c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00F4
        gbc.setState(0x6ab2, 0x562, 0xb3f0, 0xc091, 0x93d9, 0xef81, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0x80 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x562, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00F5
        gbc.setState(0xa835, 0xbdee, 0x5e00, 0xb2e2, 0xcd81, 0xc6ab, 0x0, 0x1);
        gbc.writeMem(0xa835, { 0x80 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbdee, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa835));
        // 80 00F6
        gbc.setState(0xebeb, 0x9724, 0x5ab0, 0x66a8, 0x8f4d, 0x5d02, 0x1, 0x1);
        gbc.writeMem(0xebeb, { 0x80 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9724, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xebeb));
        // 80 00F7
        gbc.setState(0xdb9e, 0x11f8, 0x9d0, 0xf765, 0x858c, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0xdb9e, { 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x11f8, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdb9e));
        // 80 00F8
        gbc.setState(0x8861, 0xc06d, 0x2de0, 0x44ce, 0x1151, 0x27ed, 0x1, 0x0);
        gbc.writeMem(0x8861, { 0x80 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc06d, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8861));
        // 80 00F9
        gbc.setState(0x6750, 0x5ac6, 0x3110, 0xf110, 0x747f, 0xab52, 0x1, 0x1);
        gbc.writeMem(0x6750, { 0x80 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ac6, gbc.sp());
        EXPECT(0x6751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 00FA
        gbc.setState(0x5cd8, 0x87c4, 0xc10, 0xc4c7, 0xb35a, 0xd963, 0x0, 0x1);
        gbc.writeMem(0x5cd8, { 0x80 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x87c4, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 00FB
        gbc.setState(0xe38c, 0xb82a, 0x6a20, 0x287a, 0xff65, 0x1791, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0x80 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb82a, gbc.sp());
        EXPECT(0xe38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe38c));
        // 80 00FD
        gbc.setState(0x6666, 0xdd2e, 0xa940, 0x6819, 0x7e6e, 0xb265, 0x1, 0x0);
        gbc.writeMem(0x6666, { 0x80 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0x6667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0100
        gbc.setState(0x1dbe, 0x21a5, 0xac30, 0x6326, 0x89f3, 0xd306, 0x0, 0x1);
        gbc.writeMem(0x1dbe, { 0x80 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0x1dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0101
        gbc.setState(0x5619, 0xc1f5, 0x4710, 0x1304, 0x356b, 0x163f, 0x1, 0x1);
        gbc.writeMem(0x5619, { 0x80 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0102
        gbc.setState(0x9b4b, 0x8908, 0x9a70, 0x7f1c, 0x86b6, 0xbdfb, 0x0, 0x0);
        gbc.writeMem(0x9b4b, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8908, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9b4b));
        // 80 0103
        gbc.setState(0xdd71, 0x99cf, 0x4f70, 0xe9d, 0x640c, 0x5af3, 0x1, 0x1);
        gbc.writeMem(0xdd71, { 0x80 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdd71));
        // 80 0104
        gbc.setState(0x930c, 0x8b2b, 0x9820, 0xa345, 0x628b, 0xa78a, 0x1, 0x0);
        gbc.writeMem(0x930c, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x930c));
        // 80 0105
        gbc.setState(0xdfa7, 0xc91e, 0xa760, 0xbc50, 0x308f, 0x7dc3, 0x0, 0x1);
        gbc.writeMem(0xdfa7, { 0x80 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdfa7));
        // 80 0106
        gbc.setState(0x336, 0xb074, 0x2730, 0xe0e7, 0xb4ba, 0xe18c, 0x1, 0x0);
        gbc.writeMem(0x336, { 0x80 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0107
        gbc.setState(0x5775, 0x2924, 0xed50, 0x812e, 0xf793, 0xdd74, 0x0, 0x1);
        gbc.writeMem(0x5775, { 0x80 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2924, gbc.sp());
        EXPECT(0x5776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0108
        gbc.setState(0x9aa4, 0x2b77, 0xeca0, 0x85aa, 0x1583, 0x3799, 0x1, 0x1);
        gbc.writeMem(0x9aa4, { 0x80 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0x9aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9aa4));
        // 80 0109
        gbc.setState(0xc182, 0x218b, 0x66e0, 0x8bff, 0xf70a, 0xff32, 0x0, 0x1);
        gbc.writeMem(0xc182, { 0x80 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0xc183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc182));
        // 80 010A
        gbc.setState(0x14c1, 0x2c65, 0xc710, 0xb9fc, 0xbe1a, 0xea3e, 0x0, 0x1);
        gbc.writeMem(0x14c1, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c65, gbc.sp());
        EXPECT(0x14c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 010B
        gbc.setState(0xa77f, 0xb640, 0xc960, 0xa37d, 0x6d10, 0x2b23, 0x1, 0x0);
        gbc.writeMem(0xa77f, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb640, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa77f));
        // 80 010C
        gbc.setState(0xbe20, 0x356a, 0xd680, 0xf2c4, 0x6f8d, 0x537a, 0x0, 0x0);
        gbc.writeMem(0xbe20, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0xbe21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbe20));
        // 80 010D
        gbc.setState(0xb70a, 0x1575, 0xdbd0, 0xa750, 0x76c1, 0xd075, 0x1, 0x1);
        gbc.writeMem(0xb70a, { 0x80 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1575, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb70a));
        // 80 010E
        gbc.setState(0xa835, 0x9da8, 0x23f0, 0xe380, 0xaa5b, 0x4827, 0x0, 0x0);
        gbc.writeMem(0xa835, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa835));
        // 80 010F
        gbc.setState(0x9d59, 0xf5d3, 0x98e0, 0x6ef1, 0x82b6, 0x1b5f, 0x1, 0x1);
        gbc.writeMem(0x9d59, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf5d3, gbc.sp());
        EXPECT(0x9d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d59));
        // 80 0110
        gbc.setState(0x8555, 0xb53, 0x3ca0, 0xb729, 0x2cb3, 0x1edf, 0x0, 0x0);
        gbc.writeMem(0x8555, { 0x80 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x8556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8555));
        // 80 0111
        gbc.setState(0xda05, 0x3c50, 0x1aa0, 0xd610, 0xa3cc, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0xda05, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3c50, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xda05));
        // 80 0112
        gbc.setState(0x4e84, 0xb163, 0x3c0, 0x3527, 0xa7b6, 0x1ef0, 0x1, 0x1);
        gbc.writeMem(0x4e84, { 0x80 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb163, gbc.sp());
        EXPECT(0x4e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0113
        gbc.setState(0x3d58, 0x9a15, 0x5000, 0xefc1, 0x51ae, 0x2133, 0x0, 0x1);
        gbc.writeMem(0x3d58, { 0x80 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9a15, gbc.sp());
        EXPECT(0x3d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0114
        gbc.setState(0xb664, 0xd878, 0xa850, 0x50b4, 0xfe86, 0xbfba, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd878, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb664));
        // 80 0115
        gbc.setState(0xb813, 0x9f19, 0x2c60, 0x516f, 0x51cf, 0x9465, 0x1, 0x0);
        gbc.writeMem(0xb813, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb813));
        // 80 0116
        gbc.setState(0xbcd2, 0x7aa7, 0x3f80, 0x673d, 0x4a72, 0xd074, 0x1, 0x1);
        gbc.writeMem(0xbcd2, { 0x80 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7aa7, gbc.sp());
        EXPECT(0xbcd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbcd2));
        // 80 0117
        gbc.setState(0x2f0c, 0x540d, 0xe7a0, 0x1e1, 0xbbde, 0xa79b, 0x0, 0x0);
        gbc.writeMem(0x2f0c, { 0x80 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x540d, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0118
        gbc.setState(0x9198, 0x6869, 0x38d0, 0x8138, 0x77da, 0xec57, 0x0, 0x0);
        gbc.writeMem(0x9198, { 0x80 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6869, gbc.sp());
        EXPECT(0x9199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9198));
        // 80 0119
        gbc.setState(0xd3a2, 0x83e8, 0x500, 0x2dc2, 0xed8a, 0x81c0, 0x1, 0x0);
        gbc.writeMem(0xd3a2, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd3a2));
        // 80 011A
        gbc.setState(0x9954, 0x9a6b, 0x5670, 0x4c9f, 0x530, 0xab81, 0x1, 0x0);
        gbc.writeMem(0x9954, { 0x80 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9954));
        // 80 011B
        gbc.setState(0x27e1, 0x3c39, 0xf600, 0xcea5, 0xf638, 0x6f47, 0x0, 0x1);
        gbc.writeMem(0x27e1, { 0x80 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3c39, gbc.sp());
        EXPECT(0x27e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 011C
        gbc.setState(0x2665, 0xaed2, 0x1ba0, 0x76a1, 0x8c, 0x1180, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0x80 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaed2, gbc.sp());
        EXPECT(0x2666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 011D
        gbc.setState(0xdbe4, 0xcd4, 0x88e0, 0x1096, 0xe892, 0x3fde, 0x0, 0x1);
        gbc.writeMem(0xdbe4, { 0x80 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcd4, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdbe4));
        // 80 011E
        gbc.setState(0x33f7, 0xe8a0, 0xfb80, 0x702, 0xdd42, 0x88c6, 0x0, 0x1);
        gbc.writeMem(0x33f7, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe8a0, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 011F
        gbc.setState(0x929d, 0xba35, 0x2db0, 0x5e40, 0x50a7, 0x6b98, 0x1, 0x1);
        gbc.writeMem(0x929d, { 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xba35, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x929d));
        // 80 0120
        gbc.setState(0x9d82, 0xc19b, 0xb750, 0x3927, 0x7488, 0x4a9c, 0x1, 0x1);
        gbc.writeMem(0x9d82, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d82));
        // 80 0121
        gbc.setState(0x6adb, 0xcbd0, 0xb6f0, 0x709f, 0x7b85, 0xd9cd, 0x1, 0x1);
        gbc.writeMem(0x6adb, { 0x80 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcbd0, gbc.sp());
        EXPECT(0x6adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0122
        gbc.setState(0xa8db, 0x2aae, 0xce60, 0xbd9, 0x9284, 0xface, 0x0, 0x0);
        gbc.writeMem(0xa8db, { 0x80 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2aae, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa8db));
        // 80 0123
        gbc.setState(0x1c9a, 0xf555, 0x8ed0, 0x59dc, 0x3fe2, 0x7cee, 0x0, 0x1);
        gbc.writeMem(0x1c9a, { 0x80 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf555, gbc.sp());
        EXPECT(0x1c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0124
        gbc.setState(0x13dc, 0x3c88, 0x5b70, 0xa923, 0x2de2, 0x2c35, 0x1, 0x1);
        gbc.writeMem(0x13dc, { 0x80 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3c88, gbc.sp());
        EXPECT(0x13dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0125
        gbc.setState(0xd583, 0x2620, 0xf030, 0x1991, 0xc102, 0x3a1d, 0x0, 0x1);
        gbc.writeMem(0xd583, { 0x80 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0xd584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd583));
        // 80 0126
        gbc.setState(0xda1f, 0x1535, 0xb260, 0x9bc1, 0xf3d, 0xb4e0, 0x0, 0x0);
        gbc.writeMem(0xda1f, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1535, gbc.sp());
        EXPECT(0xda20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xda1f));
        // 80 0128
        gbc.setState(0xcf17, 0x9192, 0xff10, 0x146d, 0x9955, 0x1a14, 0x1, 0x0);
        gbc.writeMem(0xcf17, { 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0xcf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf17));
        // 80 0129
        gbc.setState(0x3af7, 0x1d98, 0xc300, 0xa6f5, 0x3baa, 0xc132, 0x1, 0x1);
        gbc.writeMem(0x3af7, { 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1d98, gbc.sp());
        EXPECT(0x3af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 012A
        gbc.setState(0x6937, 0x568, 0xc70, 0x3565, 0x86a8, 0x3590, 0x1, 0x1);
        gbc.writeMem(0x6937, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x568, gbc.sp());
        EXPECT(0x6938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 012B
        gbc.setState(0xd820, 0x9e1c, 0x8270, 0x1c9f, 0xbd20, 0x671, 0x0, 0x1);
        gbc.writeMem(0xd820, { 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd820));
        // 80 012C
        gbc.setState(0x67f1, 0x4009, 0x71f0, 0x8974, 0x7e8c, 0xbf2, 0x0, 0x1);
        gbc.writeMem(0x67f1, { 0x80 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0x67f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 012D
        gbc.setState(0xdc6e, 0x81ac, 0x7510, 0xfb36, 0x5487, 0xf219, 0x1, 0x0);
        gbc.writeMem(0xdc6e, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0xdc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdc6e));
        // 80 012E
        gbc.setState(0x583, 0xc876, 0x5d60, 0x55dd, 0xd826, 0xfbb5, 0x1, 0x1);
        gbc.writeMem(0x583, { 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc876, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 012F
        gbc.setState(0x8244, 0x50c5, 0xfce0, 0x1cb5, 0x972, 0xbaa8, 0x0, 0x1);
        gbc.writeMem(0x8244, { 0x80 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x50c5, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8244));
        // 80 0130
        gbc.setState(0xc20d, 0x4005, 0x6810, 0x1819, 0x7adc, 0xb202, 0x1, 0x1);
        gbc.writeMem(0xc20d, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4005, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc20d));
        // 80 0131
        gbc.setState(0x33c0, 0xe428, 0xe020, 0xbaa8, 0x34e6, 0x2a35, 0x0, 0x1);
        gbc.writeMem(0x33c0, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0x33c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0132
        gbc.setState(0xefd9, 0xf9c6, 0x2580, 0xd8d4, 0xd872, 0x7487, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0x80 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0xefda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xefd9));
        // 80 0133
        gbc.setState(0x7a6c, 0xb8b, 0xba60, 0xe688, 0xe931, 0x6e70, 0x0, 0x1);
        gbc.writeMem(0x7a6c, { 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0134
        gbc.setState(0x8d1e, 0x36ae, 0x2120, 0xa56b, 0xfaf3, 0xad16, 0x1, 0x0);
        gbc.writeMem(0x8d1e, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x36ae, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8d1e));
        // 80 0135
        gbc.setState(0xefa3, 0xafeb, 0xd0, 0x23fd, 0xe9ae, 0x8597, 0x1, 0x0);
        gbc.writeMem(0xefa3, { 0x80 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xafeb, gbc.sp());
        EXPECT(0xefa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xefa3));
        // 80 0136
        gbc.setState(0x447e, 0xffcf, 0x8260, 0xc9ff, 0xa64e, 0xb01d, 0x1, 0x1);
        gbc.writeMem(0x447e, { 0x80 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x447f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0137
        gbc.setState(0x7f9a, 0xcf20, 0xadd0, 0x94d4, 0xd3f3, 0x80f0, 0x1, 0x1);
        gbc.writeMem(0x7f9a, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0x7f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0138
        gbc.setState(0x9528, 0xb450, 0x7a30, 0x1ef6, 0x5e8f, 0x1fa3, 0x0, 0x0);
        gbc.writeMem(0x9528, { 0x80 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x9529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9528));
        // 80 0139
        gbc.setState(0x5918, 0x352e, 0x26c0, 0xc91a, 0x7c8e, 0x7a6c, 0x0, 0x1);
        gbc.writeMem(0x5918, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0x5919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 013A
        gbc.setState(0x8cb6, 0xda2f, 0x76a0, 0x4f8b, 0x7553, 0xed00, 0x1, 0x0);
        gbc.writeMem(0x8cb6, { 0x80 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0x8cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8cb6));
        // 80 013B
        gbc.setState(0x32e4, 0xbe76, 0x22c0, 0x259d, 0x73f0, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0x32e4, { 0x80 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0x32e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 013C
        gbc.setState(0x44e2, 0x87b0, 0x5d50, 0x25f3, 0x7940, 0xf101, 0x1, 0x1);
        gbc.writeMem(0x44e2, { 0x80 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0x44e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 013D
        gbc.setState(0xcc95, 0x5793, 0xf910, 0x1199, 0xdc29, 0x41d4, 0x0, 0x1);
        gbc.writeMem(0xcc95, { 0x80 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5793, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcc95));
        // 80 013E
        gbc.setState(0x37e7, 0x97aa, 0x9750, 0xc04, 0x4c2a, 0xe420, 0x0, 0x1);
        gbc.writeMem(0x37e7, { 0x80 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x97aa, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 013F
        gbc.setState(0x77a9, 0x3321, 0xf3b0, 0x7556, 0x2b88, 0x9f58, 0x1, 0x0);
        gbc.writeMem(0x77a9, { 0x80 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0140
        gbc.setState(0x9d66, 0x84fb, 0x2c0, 0xb10c, 0x68ac, 0x1388, 0x1, 0x0);
        gbc.writeMem(0x9d66, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x84fb, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d66));
        // 80 0141
        gbc.setState(0xe709, 0x2d2, 0x9f50, 0x1568, 0x85b5, 0x1805, 0x1, 0x1);
        gbc.writeMem(0xe709, { 0x80 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2d2, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe709));
        // 80 0142
        gbc.setState(0xe4a4, 0xe595, 0x4270, 0x7c40, 0x6339, 0x33e6, 0x1, 0x1);
        gbc.writeMem(0xe4a4, { 0x80 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe4a4));
        // 80 0143
        gbc.setState(0x4c63, 0xdc31, 0xe700, 0xca85, 0x8d25, 0x4180, 0x0, 0x1);
        gbc.writeMem(0x4c63, { 0x80 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0145
        gbc.setState(0x197b, 0xde03, 0x1b0, 0xab89, 0xeb0f, 0x92d, 0x0, 0x0);
        gbc.writeMem(0x197b, { 0x80 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0146
        gbc.setState(0xbb92, 0x3278, 0xbe00, 0xf18, 0x8c40, 0xe617, 0x0, 0x0);
        gbc.writeMem(0xbb92, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3278, gbc.sp());
        EXPECT(0xbb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbb92));
        // 80 0147
        gbc.setState(0xaa47, 0xcf9c, 0x88c0, 0x1d7b, 0x7c8d, 0xefb7, 0x1, 0x1);
        gbc.writeMem(0xaa47, { 0x80 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcf9c, gbc.sp());
        EXPECT(0xaa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaa47));
        // 80 0148
        gbc.setState(0x976a, 0xa1bd, 0xd660, 0x35f1, 0x513e, 0x1780, 0x0, 0x1);
        gbc.writeMem(0x976a, { 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa1bd, gbc.sp());
        EXPECT(0x976b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x976a));
        // 80 0149
        gbc.setState(0xca4b, 0xa437, 0xcf0, 0x9ed6, 0xc2a5, 0x8da7, 0x0, 0x0);
        gbc.writeMem(0xca4b, { 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xca4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xca4b));
        // 80 014A
        gbc.setState(0x8ab4, 0x2ea6, 0x3aa0, 0x24bf, 0x567c, 0x2ba, 0x1, 0x0);
        gbc.writeMem(0x8ab4, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0x8ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8ab4));
        // 80 014C
        gbc.setState(0xd898, 0x82b7, 0x3f60, 0x7d6b, 0x1ff8, 0xa168, 0x1, 0x0);
        gbc.writeMem(0xd898, { 0x80 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0xd899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd898));
        // 80 014D
        gbc.setState(0xc754, 0xd048, 0xa520, 0x10c6, 0x7c45, 0x6cf9, 0x1, 0x1);
        gbc.writeMem(0xc754, { 0x80 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc754));
        // 80 014E
        gbc.setState(0xef7e, 0xee4b, 0x4ac0, 0xad41, 0xf389, 0xe1ed, 0x1, 0x1);
        gbc.writeMem(0xef7e, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xee4b, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef7e));
        // 80 014F
        gbc.setState(0x201f, 0x8114, 0xda40, 0xe782, 0x26a5, 0xa00a, 0x0, 0x1);
        gbc.writeMem(0x201f, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8114, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0151
        gbc.setState(0xe7b1, 0x498a, 0x5ea0, 0x89ae, 0x2aab, 0x465b, 0x1, 0x0);
        gbc.writeMem(0xe7b1, { 0x80 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0xe7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe7b1));
        // 80 0152
        gbc.setState(0x8226, 0x6761, 0x77f0, 0xd96a, 0xffba, 0x73e3, 0x1, 0x1);
        gbc.writeMem(0x8226, { 0x80 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8226));
        // 80 0153
        gbc.setState(0x4a08, 0xc90f, 0xa9e0, 0x95d, 0xe777, 0xdf91, 0x1, 0x1);
        gbc.writeMem(0x4a08, { 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc90f, gbc.sp());
        EXPECT(0x4a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0154
        gbc.setState(0x8793, 0x6a8d, 0xafd0, 0x4577, 0xd3b8, 0xd746, 0x1, 0x1);
        gbc.writeMem(0x8793, { 0x80 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0x8794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8793));
        // 80 0155
        gbc.setState(0xc80b, 0x2471, 0xdd20, 0xca4a, 0xfe, 0xc98a, 0x1, 0x1);
        gbc.writeMem(0xc80b, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2471, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc80b));
        // 80 0156
        gbc.setState(0x8c23, 0xef79, 0x9820, 0x9439, 0x348d, 0xf21, 0x0, 0x1);
        gbc.writeMem(0x8c23, { 0x80 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xef79, gbc.sp());
        EXPECT(0x8c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8c23));
        // 80 0158
        gbc.setState(0xe8e5, 0xcd1b, 0xc740, 0x11c3, 0x478a, 0x456d, 0x0, 0x1);
        gbc.writeMem(0xe8e5, { 0x80 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe8e5));
        // 80 0159
        gbc.setState(0x838b, 0xd46e, 0x3a00, 0xd436, 0x3f3b, 0xbaa4, 0x0, 0x1);
        gbc.writeMem(0x838b, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd46e, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x838b));
        // 80 015A
        gbc.setState(0xaee2, 0xa87, 0x6520, 0xbaed, 0x6522, 0xaeb2, 0x1, 0x1);
        gbc.writeMem(0xaee2, { 0x80 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa87, gbc.sp());
        EXPECT(0xaee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaee2));
        // 80 015B
        gbc.setState(0x80d3, 0x7e11, 0x5180, 0x5f26, 0xa1de, 0x8669, 0x0, 0x0);
        gbc.writeMem(0x80d3, { 0x80 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0x80d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x80d3));
        // 80 015C
        gbc.setState(0x774c, 0xa24b, 0xc250, 0x6890, 0xca98, 0x11a0, 0x0, 0x0);
        gbc.writeMem(0x774c, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0x774d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 015D
        gbc.setState(0xa8d2, 0x30bd, 0xea70, 0x9f62, 0xa319, 0x2114, 0x0, 0x1);
        gbc.writeMem(0xa8d2, { 0x80 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa8d2));
        // 80 015E
        gbc.setState(0x5e95, 0xe756, 0xb440, 0xad58, 0xad7c, 0xaa5a, 0x1, 0x0);
        gbc.writeMem(0x5e95, { 0x80 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0x5e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 015F
        gbc.setState(0xb88c, 0xdb39, 0x3720, 0x97aa, 0x2679, 0x178d, 0x0, 0x1);
        gbc.writeMem(0xb88c, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdb39, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb88c));
        // 80 0160
        gbc.setState(0x4649, 0xf630, 0xbf70, 0x4847, 0xf8d8, 0xaff9, 0x0, 0x0);
        gbc.writeMem(0x4649, { 0x80 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0x464a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0161
        gbc.setState(0x555f, 0x5b0c, 0xf960, 0xc1d5, 0xe445, 0x2c3a, 0x0, 0x1);
        gbc.writeMem(0x555f, { 0x80 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0162
        gbc.setState(0xa5cc, 0xf92c, 0xa1f0, 0xb51c, 0xd059, 0x4f3a, 0x1, 0x0);
        gbc.writeMem(0xa5cc, { 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0xa5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa5cc));
        // 80 0163
        gbc.setState(0xd6b3, 0xad86, 0x6700, 0x558f, 0x5a43, 0x73b4, 0x0, 0x1);
        gbc.writeMem(0xd6b3, { 0x80 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0xd6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd6b3));
        // 80 0164
        gbc.setState(0x7b99, 0x522d, 0xfc80, 0xe3e9, 0xd480, 0xbb16, 0x1, 0x0);
        gbc.writeMem(0x7b99, { 0x80 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x522d, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0166
        gbc.setState(0x1399, 0x7a87, 0xe5b0, 0x2994, 0x57fe, 0x5f25, 0x1, 0x0);
        gbc.writeMem(0x1399, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7a87, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0167
        gbc.setState(0xd16d, 0xb10f, 0x1070, 0x8370, 0x5033, 0x62b7, 0x0, 0x1);
        gbc.writeMem(0xd16d, { 0x80 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd16d));
        // 80 0168
        gbc.setState(0xd562, 0x6606, 0x3690, 0x72cd, 0xe258, 0x39e8, 0x0, 0x0);
        gbc.writeMem(0xd562, { 0x80 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6606, gbc.sp());
        EXPECT(0xd563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd562));
        // 80 0169
        gbc.setState(0xcf5c, 0x9bad, 0xf6f0, 0x8f29, 0xc3c8, 0xfeb0, 0x1, 0x1);
        gbc.writeMem(0xcf5c, { 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9bad, gbc.sp());
        EXPECT(0xcf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf5c));
        // 80 016B
        gbc.setState(0x1e6e, 0x66d7, 0x7320, 0x42f9, 0xb37f, 0x867d, 0x1, 0x1);
        gbc.writeMem(0x1e6e, { 0x80 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x66d7, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 016C
        gbc.setState(0xa058, 0x8c7d, 0xe390, 0x6b9f, 0xfd63, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0xa058, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0xa059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa058));
        // 80 016D
        gbc.setState(0xe2c9, 0x9a08, 0xa720, 0xfcd1, 0x9936, 0x7b5b, 0x1, 0x0);
        gbc.writeMem(0xe2c9, { 0x80 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9a08, gbc.sp());
        EXPECT(0xe2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe2c9));
        // 80 016E
        gbc.setState(0x63eb, 0xca60, 0xf0b0, 0x5683, 0xc354, 0x47b7, 0x1, 0x1);
        gbc.writeMem(0x63eb, { 0x80 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x63ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 016F
        gbc.setState(0x7a83, 0x6d74, 0xe5e0, 0x1d85, 0xf30a, 0x2331, 0x0, 0x1);
        gbc.writeMem(0x7a83, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0x7a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0171
        gbc.setState(0x94ce, 0xb016, 0x420, 0xa3f5, 0x6c7, 0x4b8a, 0x1, 0x1);
        gbc.writeMem(0x94ce, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb016, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x94ce));
        // 80 0172
        gbc.setState(0x87c8, 0xa201, 0x8840, 0x4849, 0x58d0, 0xbf8e, 0x0, 0x1);
        gbc.writeMem(0x87c8, { 0x80 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x87c8));
        // 80 0173
        gbc.setState(0x394e, 0x359d, 0x8a20, 0xe29c, 0xc4c8, 0x2c5e, 0x0, 0x1);
        gbc.writeMem(0x394e, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x359d, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0174
        gbc.setState(0x851a, 0xeba0, 0xcfe0, 0xf297, 0x5c4, 0xa090, 0x0, 0x0);
        gbc.writeMem(0x851a, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0x851b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x851a));
        // 80 0175
        gbc.setState(0x2918, 0xeff5, 0x8eb0, 0x8595, 0xc7b6, 0x119d, 0x1, 0x1);
        gbc.writeMem(0x2918, { 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeff5, gbc.sp());
        EXPECT(0x2919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0176
        gbc.setState(0xa7c5, 0x5d44, 0x12f0, 0xf685, 0x4edd, 0x6273, 0x0, 0x1);
        gbc.writeMem(0xa7c5, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5d44, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa7c5));
        // 80 0177
        gbc.setState(0x296f, 0x158c, 0xfdf0, 0x3eeb, 0xb989, 0xaf70, 0x1, 0x0);
        gbc.writeMem(0x296f, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x158c, gbc.sp());
        EXPECT(0x2970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0178
        gbc.setState(0x71f3, 0x9bcf, 0x2a70, 0x85d4, 0xa131, 0x96f4, 0x1, 0x0);
        gbc.writeMem(0x71f3, { 0x80 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x71f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0179
        gbc.setState(0xdbf6, 0xe097, 0x3e40, 0xa5f9, 0x9085, 0xa19e, 0x1, 0x1);
        gbc.writeMem(0xdbf6, { 0x80 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdbf6));
        // 80 017A
        gbc.setState(0x6da7, 0x617c, 0x1d20, 0x6d45, 0xaa05, 0x2917, 0x1, 0x1);
        gbc.writeMem(0x6da7, { 0x80 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 017B
        gbc.setState(0x6c93, 0xa618, 0xbb40, 0x355, 0xe554, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0x6c93, { 0x80 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 017C
        gbc.setState(0xc2e1, 0x26c6, 0xfbf0, 0xab05, 0xa284, 0x3655, 0x0, 0x0);
        gbc.writeMem(0xc2e1, { 0x80 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc2e1));
        // 80 017D
        gbc.setState(0xa900, 0x8108, 0xec20, 0x1784, 0x6642, 0x389, 0x0, 0x0);
        gbc.writeMem(0xa900, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa900));
        // 80 017E
        gbc.setState(0x9c3c, 0x5700, 0x5c80, 0x9349, 0xdb5c, 0xc29f, 0x0, 0x0);
        gbc.writeMem(0x9c3c, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0x9c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9c3c));
        // 80 017F
        gbc.setState(0x9655, 0x3547, 0x6380, 0xea83, 0xd547, 0xb756, 0x0, 0x1);
        gbc.writeMem(0x9655, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0x9656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9655));
        // 80 0180
        gbc.setState(0x9b04, 0xfb11, 0x12f0, 0x84e9, 0x9770, 0x1884, 0x1, 0x1);
        gbc.writeMem(0x9b04, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x9b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9b04));
        // 80 0181
        gbc.setState(0x9679, 0xd629, 0xe710, 0xe742, 0xa4b6, 0xc27f, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd629, gbc.sp());
        EXPECT(0x967a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9679));
        // 80 0182
        gbc.setState(0x585d, 0xaed0, 0x12b0, 0x6ef4, 0xa103, 0xc200, 0x0, 0x0);
        gbc.writeMem(0x585d, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaed0, gbc.sp());
        EXPECT(0x585e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0183
        gbc.setState(0xc488, 0xfde, 0x530, 0x3421, 0x697c, 0xe231, 0x0, 0x1);
        gbc.writeMem(0xc488, { 0x80 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfde, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc488));
        // 80 0184
        gbc.setState(0xd69, 0x7cfc, 0xd400, 0xded5, 0x3e, 0xc2b9, 0x1, 0x1);
        gbc.writeMem(0xd69, { 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7cfc, gbc.sp());
        EXPECT(0xd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0185
        gbc.setState(0x1963, 0xc8a4, 0xea30, 0x5e9b, 0x8f23, 0x6cad, 0x0, 0x0);
        gbc.writeMem(0x1963, { 0x80 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0186
        gbc.setState(0x22cf, 0xfbd1, 0x8620, 0xfc78, 0xe6a8, 0x98aa, 0x0, 0x0);
        gbc.writeMem(0x22cf, { 0x80 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0x22d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0187
        gbc.setState(0x6df4, 0xa832, 0xc50, 0x5798, 0x85b, 0x386e, 0x1, 0x0);
        gbc.writeMem(0x6df4, { 0x80 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0188
        gbc.setState(0x61e4, 0x3627, 0xb190, 0x7081, 0x800d, 0xa8aa, 0x0, 0x0);
        gbc.writeMem(0x61e4, { 0x80 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3627, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0189
        gbc.setState(0x5d2e, 0x528f, 0xa130, 0x547f, 0x5a3b, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x5d2e, { 0x80 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0x5d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 018A
        gbc.setState(0x37b4, 0xc304, 0x31c0, 0x6e02, 0x61ec, 0x9d9f, 0x1, 0x0);
        gbc.writeMem(0x37b4, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 018B
        gbc.setState(0x4fe4, 0x454a, 0x7f20, 0x848c, 0x378c, 0xec28, 0x0, 0x1);
        gbc.writeMem(0x4fe4, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 018C
        gbc.setState(0xd5c, 0xe512, 0x9fe0, 0x3603, 0x2f73, 0x25c7, 0x0, 0x0);
        gbc.writeMem(0xd5c, { 0x80 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0xd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 018D
        gbc.setState(0xa8b6, 0xfec4, 0xad10, 0x81cb, 0xfc78, 0x3c84, 0x0, 0x0);
        gbc.writeMem(0xa8b6, { 0x80 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfec4, gbc.sp());
        EXPECT(0xa8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa8b6));
        // 80 018E
        gbc.setState(0xefd4, 0xc4e4, 0xcad0, 0x7be1, 0xddbb, 0x9f7a, 0x0, 0x0);
        gbc.writeMem(0xefd4, { 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xefd4));
        // 80 018F
        gbc.setState(0x692c, 0x69c4, 0x950, 0x380, 0x36bf, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x692c, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0190
        gbc.setState(0xe74f, 0xf14e, 0xba10, 0x4b27, 0x74f0, 0x7f41, 0x0, 0x0);
        gbc.writeMem(0xe74f, { 0x80 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0xe750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe74f));
        // 80 0191
        gbc.setState(0xa264, 0x97fc, 0x7760, 0x96f5, 0xed34, 0xf555, 0x1, 0x1);
        gbc.writeMem(0xa264, { 0x80 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x97fc, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa264));
        // 80 0192
        gbc.setState(0x357, 0x691d, 0x2ce0, 0xeff6, 0x2be9, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x357, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x691d, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0193
        gbc.setState(0x2623, 0x4580, 0x5450, 0xba80, 0x6e4e, 0xc936, 0x0, 0x1);
        gbc.writeMem(0x2623, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4580, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0194
        gbc.setState(0x6122, 0x437e, 0xc9e0, 0x87ea, 0x84ec, 0x3fc7, 0x1, 0x0);
        gbc.writeMem(0x6122, { 0x80 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0x6123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0195
        gbc.setState(0xec52, 0xb75c, 0x54b0, 0xa732, 0x55fe, 0xc203, 0x1, 0x1);
        gbc.writeMem(0xec52, { 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb75c, gbc.sp());
        EXPECT(0xec53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xec52));
        // 80 0196
        gbc.setState(0x7c0, 0x5eb2, 0xfef0, 0xb87b, 0xcfe7, 0xf675, 0x1, 0x0);
        gbc.writeMem(0x7c0, { 0x80 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5eb2, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0197
        gbc.setState(0x8b79, 0xdf3f, 0x4990, 0xfa6d, 0xbf1f, 0x5bc, 0x0, 0x0);
        gbc.writeMem(0x8b79, { 0x80 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x8b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b79));
        // 80 0198
        gbc.setState(0xcd8, 0x1c0b, 0x4c20, 0x2690, 0x9412, 0x791a, 0x0, 0x1);
        gbc.writeMem(0xcd8, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1c0b, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0199
        gbc.setState(0xcc62, 0x403a, 0x7580, 0xad55, 0x842e, 0x1b82, 0x0, 0x0);
        gbc.writeMem(0xcc62, { 0x80 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcc62));
        // 80 019B
        gbc.setState(0x60f0, 0xa822, 0xa900, 0xfa34, 0x9e64, 0x53af, 0x0, 0x1);
        gbc.writeMem(0x60f0, { 0x80 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa822, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 019C
        gbc.setState(0x3ab8, 0x5bb4, 0x8970, 0x37d3, 0xb957, 0xf955, 0x1, 0x1);
        gbc.writeMem(0x3ab8, { 0x80 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5bb4, gbc.sp());
        EXPECT(0x3ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 019D
        gbc.setState(0xa39f, 0xda91, 0x1650, 0xbdc3, 0x72ec, 0x1072, 0x0, 0x0);
        gbc.writeMem(0xa39f, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xda91, gbc.sp());
        EXPECT(0xa3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa39f));
        // 80 019E
        gbc.setState(0x66b3, 0xde37, 0xf270, 0x26e6, 0x2b24, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0x66b3, { 0x80 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xde37, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 019F
        gbc.setState(0x2661, 0x1b9, 0xe10, 0x34ea, 0xbb8d, 0xc2b6, 0x1, 0x1);
        gbc.writeMem(0x2661, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b9, gbc.sp());
        EXPECT(0x2662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01A0
        gbc.setState(0xa1fb, 0x4145, 0x3390, 0x5910, 0x3df8, 0xd3bc, 0x1, 0x0);
        gbc.writeMem(0xa1fb, { 0x80 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0xa1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa1fb));
        // 80 01A1
        gbc.setState(0xa9d6, 0x8150, 0x49c0, 0x6d11, 0x8681, 0x42e8, 0x0, 0x1);
        gbc.writeMem(0xa9d6, { 0x80 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8150, gbc.sp());
        EXPECT(0xa9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa9d6));
        // 80 01A2
        gbc.setState(0x9d3b, 0x116a, 0xede0, 0x6164, 0x31de, 0xd728, 0x0, 0x1);
        gbc.writeMem(0x9d3b, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x116a, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d3b));
        // 80 01A3
        gbc.setState(0xd7d7, 0x329, 0x3f60, 0xa5a5, 0x3e2e, 0x97a0, 0x1, 0x1);
        gbc.writeMem(0xd7d7, { 0x80 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x329, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd7d7));
        // 80 01A4
        gbc.setState(0xc531, 0xce61, 0xa420, 0x3113, 0x166e, 0x1813, 0x1, 0x0);
        gbc.writeMem(0xc531, { 0x80 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0xc532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc531));
        // 80 01A5
        gbc.setState(0xedd5, 0xc699, 0x620, 0x4826, 0xce70, 0xa0a1, 0x1, 0x1);
        gbc.writeMem(0xedd5, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0xedd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xedd5));
        // 80 01A6
        gbc.setState(0x852d, 0xf044, 0x1820, 0x162, 0xe1e0, 0x62a4, 0x1, 0x0);
        gbc.writeMem(0x852d, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0x852e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x852d));
        // 80 01A7
        gbc.setState(0xc817, 0x9e64, 0x86c0, 0xf583, 0x7369, 0x9f17, 0x1, 0x0);
        gbc.writeMem(0xc817, { 0x80 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e64, gbc.sp());
        EXPECT(0xc818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc817));
        // 80 01A8
        gbc.setState(0x6b25, 0x1a36, 0xf880, 0xe000, 0xb7a5, 0xb6e5, 0x0, 0x1);
        gbc.writeMem(0x6b25, { 0x80 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a36, gbc.sp());
        EXPECT(0x6b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01A9
        gbc.setState(0xb4d2, 0x4ce2, 0x9400, 0x7bbb, 0xfb6e, 0x6332, 0x0, 0x0);
        gbc.writeMem(0xb4d2, { 0x80 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4ce2, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb4d2));
        // 80 01AA
        gbc.setState(0x670e, 0x6e04, 0xda80, 0x18ee, 0xbd6, 0x1d19, 0x0, 0x1);
        gbc.writeMem(0x670e, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0x670f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01AB
        gbc.setState(0xc1a9, 0x41a2, 0x7c70, 0x238f, 0x9bc4, 0xa8d3, 0x1, 0x0);
        gbc.writeMem(0xc1a9, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x41a2, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc1a9));
        // 80 01AC
        gbc.setState(0x7ff2, 0x7671, 0xdac0, 0x52ba, 0x5c9c, 0xcb0f, 0x0, 0x1);
        gbc.writeMem(0x7ff2, { 0x80 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7671, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01AD
        gbc.setState(0x4505, 0xf3ff, 0x7f40, 0xedf5, 0x2db4, 0xcc31, 0x1, 0x0);
        gbc.writeMem(0x4505, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf3ff, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01AE
        gbc.setState(0xa709, 0xcef0, 0xf3b0, 0xaa9e, 0x66bc, 0xc487, 0x1, 0x1);
        gbc.writeMem(0xa709, { 0x80 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0xa70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa709));
        // 80 01AF
        gbc.setState(0xd84a, 0xc4d4, 0x4730, 0x672, 0x145e, 0xc894, 0x1, 0x1);
        gbc.writeMem(0xd84a, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd84a));
        // 80 01B0
        gbc.setState(0x68cd, 0xd47b, 0xcca0, 0xd387, 0xe69, 0xd67, 0x0, 0x0);
        gbc.writeMem(0x68cd, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd47b, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01B2
        gbc.setState(0x55d4, 0xfdbb, 0xa0b0, 0x4d96, 0x5347, 0xb847, 0x1, 0x0);
        gbc.writeMem(0x55d4, { 0x80 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfdbb, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01B3
        gbc.setState(0x42f6, 0x4e32, 0xfee0, 0x2dcc, 0xd90c, 0x99f0, 0x1, 0x0);
        gbc.writeMem(0x42f6, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e32, gbc.sp());
        EXPECT(0x42f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01B4
        gbc.setState(0x5ca3, 0xdee8, 0xfc90, 0xa649, 0x19d8, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x5ca3, { 0x80 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01B5
        gbc.setState(0x825, 0x7e87, 0x9140, 0x61a2, 0xc21d, 0x9b6a, 0x0, 0x1);
        gbc.writeMem(0x825, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0x826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01B6
        gbc.setState(0x5b43, 0xb2da, 0x82e0, 0xa830, 0x644c, 0x8b71, 0x0, 0x1);
        gbc.writeMem(0x5b43, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb2da, gbc.sp());
        EXPECT(0x5b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01B7
        gbc.setState(0xa396, 0x2b10, 0xc950, 0xff94, 0xed83, 0xb70b, 0x0, 0x1);
        gbc.writeMem(0xa396, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0xa397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa396));
        // 80 01B8
        gbc.setState(0xa29a, 0x7008, 0xe50, 0x94af, 0x70ec, 0x748d, 0x1, 0x0);
        gbc.writeMem(0xa29a, { 0x80 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa29a));
        // 80 01B9
        gbc.setState(0x20cd, 0xe931, 0xac20, 0xfc35, 0xf641, 0x4afe, 0x0, 0x1);
        gbc.writeMem(0x20cd, { 0x80 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0x20ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01BA
        gbc.setState(0x2d23, 0x10d4, 0x1df0, 0xb187, 0xf9ce, 0x7fa2, 0x1, 0x1);
        gbc.writeMem(0x2d23, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0x2d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01BB
        gbc.setState(0x8618, 0x3abf, 0x28b0, 0x2139, 0x5f4e, 0x8f54, 0x0, 0x1);
        gbc.writeMem(0x8618, { 0x80 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8618));
        // 80 01BC
        gbc.setState(0x6923, 0xe8ac, 0x6580, 0xecbb, 0xbd96, 0xf5b0, 0x1, 0x1);
        gbc.writeMem(0x6923, { 0x80 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0x6924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01BD
        gbc.setState(0x5c2c, 0x953e, 0x4270, 0x8606, 0x82c8, 0x829d, 0x0, 0x0);
        gbc.writeMem(0x5c2c, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01BE
        gbc.setState(0xbba8, 0xff4e, 0xfb60, 0xf464, 0x948f, 0x4a27, 0x0, 0x1);
        gbc.writeMem(0xbba8, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0xbba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbba8));
        // 80 01BF
        gbc.setState(0xcbeb, 0x4024, 0xb720, 0xd79, 0x80be, 0x48ed, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0x80 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4024, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcbeb));
        // 80 01C0
        gbc.setState(0xe897, 0x9063, 0x8480, 0xd01d, 0x3a58, 0x920e, 0x1, 0x1);
        gbc.writeMem(0xe897, { 0x80 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9063, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe897));
        // 80 01C1
        gbc.setState(0xd7d4, 0xbfee, 0x7850, 0x283, 0xc60b, 0x40e6, 0x0, 0x1);
        gbc.writeMem(0xd7d4, { 0x80 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbfee, gbc.sp());
        EXPECT(0xd7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd7d4));
        // 80 01C2
        gbc.setState(0x808d, 0x54f4, 0xd1c0, 0xe76b, 0xa63, 0xf26d, 0x0, 0x0);
        gbc.writeMem(0x808d, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x54f4, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x808d));
        // 80 01C3
        gbc.setState(0x25d, 0x5bba, 0xce80, 0x4bb8, 0x275c, 0x844b, 0x0, 0x1);
        gbc.writeMem(0x25d, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0x25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01C4
        gbc.setState(0xa315, 0x1e6f, 0x62b0, 0x32fa, 0x7d48, 0x316b, 0x0, 0x1);
        gbc.writeMem(0xa315, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa315));
        // 80 01C5
        gbc.setState(0xe595, 0x4ebe, 0x6120, 0x22c1, 0x728d, 0xa315, 0x1, 0x1);
        gbc.writeMem(0xe595, { 0x80 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4ebe, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe595));
        // 80 01C6
        gbc.setState(0x3d2b, 0x8903, 0x52e0, 0x91a0, 0xc271, 0x4d15, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0x80 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01C7
        gbc.setState(0xcb6a, 0x981a, 0x9af0, 0xef1c, 0x9b47, 0x7e69, 0x0, 0x1);
        gbc.writeMem(0xcb6a, { 0x80 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x981a, gbc.sp());
        EXPECT(0xcb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcb6a));
        // 80 01C8
        gbc.setState(0x2338, 0x7723, 0xf300, 0xa710, 0x3273, 0x283f, 0x0, 0x1);
        gbc.writeMem(0x2338, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01C9
        gbc.setState(0xab70, 0x4bb8, 0xf520, 0xdb7e, 0xead7, 0x121c, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0x80 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xab70));
        // 80 01CA
        gbc.setState(0x602f, 0xd58f, 0x3140, 0x73e2, 0x668e, 0xd82b, 0x0, 0x1);
        gbc.writeMem(0x602f, { 0x80 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd58f, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01CB
        gbc.setState(0x2aa7, 0xa423, 0x11d0, 0xb41a, 0xdb75, 0xb94d, 0x1, 0x1);
        gbc.writeMem(0x2aa7, { 0x80 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa423, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01CC
        gbc.setState(0x1ce5, 0xdae3, 0x9d40, 0x66ec, 0xcae6, 0x40f5, 0x1, 0x0);
        gbc.writeMem(0x1ce5, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x1ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01CD
        gbc.setState(0x9d1e, 0x47f5, 0x5930, 0x738, 0x80ea, 0xa240, 0x0, 0x0);
        gbc.writeMem(0x9d1e, { 0x80 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0x9d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d1e));
        // 80 01CE
        gbc.setState(0xeb1b, 0xca58, 0xcf30, 0xa163, 0x6f22, 0x6781, 0x0, 0x0);
        gbc.writeMem(0xeb1b, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xca58, gbc.sp());
        EXPECT(0xeb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xeb1b));
        // 80 01CF
        gbc.setState(0x59ba, 0x2045, 0xa0e0, 0x9b23, 0xcfad, 0xe03f, 0x1, 0x1);
        gbc.writeMem(0x59ba, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2045, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01D1
        gbc.setState(0x3757, 0xdec, 0xfcc0, 0xb961, 0x805c, 0xf700, 0x0, 0x0);
        gbc.writeMem(0x3757, { 0x80 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0x3758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01D3
        gbc.setState(0x949d, 0x856f, 0xdc50, 0x4a81, 0xc549, 0x1cb, 0x1, 0x1);
        gbc.writeMem(0x949d, { 0x80 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0x949e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x949d));
        // 80 01D4
        gbc.setState(0x6d8b, 0xb81d, 0x84f0, 0x67b9, 0xee16, 0x5b9e, 0x1, 0x1);
        gbc.writeMem(0x6d8b, { 0x80 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0x6d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01D5
        gbc.setState(0x1cd2, 0xc23c, 0x5d50, 0xad, 0xbe6e, 0xbba1, 0x1, 0x0);
        gbc.writeMem(0x1cd2, { 0x80 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc23c, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01D6
        gbc.setState(0x52ac, 0x3a61, 0x4470, 0x1c13, 0xf65f, 0x1028, 0x1, 0x0);
        gbc.writeMem(0x52ac, { 0x80 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3a61, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01D7
        gbc.setState(0x56b1, 0x8c1f, 0x9440, 0x4ad3, 0xcada, 0x2774, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0x80 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8c1f, gbc.sp());
        EXPECT(0x56b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01D8
        gbc.setState(0x8e88, 0x374d, 0xed50, 0x2e30, 0x4d2a, 0x594b, 0x0, 0x0);
        gbc.writeMem(0x8e88, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8e88));
        // 80 01D9
        gbc.setState(0xa991, 0x961f, 0xeb40, 0x16e8, 0x842b, 0xd6e1, 0x1, 0x1);
        gbc.writeMem(0xa991, { 0x80 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa991));
        // 80 01DA
        gbc.setState(0x6419, 0xefa9, 0x57a0, 0x4f39, 0xca1d, 0x6313, 0x0, 0x1);
        gbc.writeMem(0x6419, { 0x80 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xefa9, gbc.sp());
        EXPECT(0x641a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01DB
        gbc.setState(0x7350, 0x9e33, 0x8d70, 0x4dc6, 0x5aab, 0xd16a, 0x0, 0x1);
        gbc.writeMem(0x7350, { 0x80 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9e33, gbc.sp());
        EXPECT(0x7351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01DC
        gbc.setState(0x6ee9, 0x2fb1, 0x9d80, 0x5b92, 0x6cb1, 0x2e22, 0x0, 0x0);
        gbc.writeMem(0x6ee9, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2fb1, gbc.sp());
        EXPECT(0x6eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01DD
        gbc.setState(0x54dc, 0xccf1, 0x790, 0x8fcf, 0x3b46, 0x93c3, 0x1, 0x1);
        gbc.writeMem(0x54dc, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xccf1, gbc.sp());
        EXPECT(0x54dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01DE
        gbc.setState(0x30e6, 0xaca7, 0xbe60, 0xb4ae, 0x9ee4, 0xf913, 0x0, 0x0);
        gbc.writeMem(0x30e6, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x30e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01DF
        gbc.setState(0xe23d, 0x21ca, 0x88b0, 0xf0d3, 0x3475, 0x4cc0, 0x1, 0x0);
        gbc.writeMem(0xe23d, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0xe23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe23d));
        // 80 01E0
        gbc.setState(0x3aba, 0x872, 0xbd10, 0xc2b7, 0x69cb, 0xc2cc, 0x0, 0x1);
        gbc.writeMem(0x3aba, { 0x80 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x872, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01E1
        gbc.setState(0x9a95, 0x6417, 0xe790, 0x31bd, 0xc8a0, 0xe540, 0x1, 0x1);
        gbc.writeMem(0x9a95, { 0x80 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9a95));
        // 80 01E2
        gbc.setState(0xcf2b, 0x7d57, 0x1a50, 0x955a, 0x7885, 0x86dd, 0x1, 0x1);
        gbc.writeMem(0xcf2b, { 0x80 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7d57, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf2b));
        // 80 01E3
        gbc.setState(0xbac0, 0x4b0d, 0xf650, 0xcfa, 0x39ca, 0xb093, 0x0, 0x0);
        gbc.writeMem(0xbac0, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0xbac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbac0));
        // 80 01E4
        gbc.setState(0x188a, 0xb674, 0xc590, 0xb517, 0x1171, 0xe0f5, 0x0, 0x1);
        gbc.writeMem(0x188a, { 0x80 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb674, gbc.sp());
        EXPECT(0x188b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01E5
        gbc.setState(0xc6b4, 0x7418, 0x98b0, 0x9e2c, 0xe940, 0xf7b0, 0x0, 0x1);
        gbc.writeMem(0xc6b4, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0xc6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc6b4));
        // 80 01E6
        gbc.setState(0xad35, 0x5809, 0x2cb0, 0x9cd9, 0x8d7f, 0x9618, 0x1, 0x0);
        gbc.writeMem(0xad35, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xad35));
        // 80 01E7
        gbc.setState(0x456d, 0x7791, 0x8ed0, 0xad08, 0x35ff, 0xc9c2, 0x0, 0x1);
        gbc.writeMem(0x456d, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7791, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01E8
        gbc.setState(0x5a0c, 0xcb19, 0x180, 0xeed9, 0x4171, 0xe2a2, 0x0, 0x1);
        gbc.writeMem(0x5a0c, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcb19, gbc.sp());
        EXPECT(0x5a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01E9
        gbc.setState(0xca3c, 0xc062, 0xe2c0, 0xc4c, 0xe7c9, 0xf65, 0x0, 0x1);
        gbc.writeMem(0xca3c, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc062, gbc.sp());
        EXPECT(0xca3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xca3c));
        // 80 01EA
        gbc.setState(0x918b, 0xa784, 0x1950, 0x5f8c, 0x7af5, 0x7741, 0x0, 0x1);
        gbc.writeMem(0x918b, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa784, gbc.sp());
        EXPECT(0x918c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x918b));
        // 80 01EB
        gbc.setState(0xc191, 0xc47b, 0x1100, 0xa3dc, 0xec2e, 0x599, 0x1, 0x1);
        gbc.writeMem(0xc191, { 0x80 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc47b, gbc.sp());
        EXPECT(0xc192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc191));
        // 80 01EC
        gbc.setState(0x71ed, 0xc225, 0xd200, 0x192, 0x22e1, 0x845f, 0x0, 0x1);
        gbc.writeMem(0x71ed, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc225, gbc.sp());
        EXPECT(0x71ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01ED
        gbc.setState(0x6edf, 0x7cfa, 0x7480, 0x2dab, 0x51f4, 0xec8c, 0x1, 0x0);
        gbc.writeMem(0x6edf, { 0x80 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01EE
        gbc.setState(0x9d05, 0xc59e, 0x3da0, 0xf7bb, 0x5357, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x9d05, { 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc59e, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d05));
        // 80 01EF
        gbc.setState(0x1f27, 0x60d3, 0x76f0, 0x5d40, 0x401d, 0xe511, 0x1, 0x0);
        gbc.writeMem(0x1f27, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x1f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01F0
        gbc.setState(0x20f6, 0x7e18, 0x66a0, 0x91bd, 0xe62a, 0x3840, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e18, gbc.sp());
        EXPECT(0x20f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01F1
        gbc.setState(0xd46b, 0xc4d0, 0xa430, 0x249d, 0x8bf4, 0x3787, 0x0, 0x0);
        gbc.writeMem(0xd46b, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc4d0, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd46b));
        // 80 01F2
        gbc.setState(0xf74, 0xe29f, 0x6530, 0xebe9, 0xe939, 0x9ea2, 0x1, 0x1);
        gbc.writeMem(0xf74, { 0x80 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01F3
        gbc.setState(0xd948, 0x8997, 0x1880, 0x16cc, 0x34e1, 0x52a, 0x1, 0x0);
        gbc.writeMem(0xd948, { 0x80 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd948));
        // 80 01F4
        gbc.setState(0x304a, 0x171, 0xdbb0, 0x10fe, 0xec11, 0xa6dc, 0x1, 0x1);
        gbc.writeMem(0x304a, { 0x80 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x171, gbc.sp());
        EXPECT(0x304b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 01F5
        gbc.setState(0xb2ac, 0x5897, 0xc7c0, 0xe100, 0xec08, 0xfe8f, 0x1, 0x1);
        gbc.writeMem(0xb2ac, { 0x80 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0xb2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb2ac));
        // 80 01F6
        gbc.setState(0x31ff, 0xefc8, 0x4310, 0xf3de, 0xdd61, 0xa68b, 0x0, 0x1);
        gbc.writeMem(0x31ff, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01F7
        gbc.setState(0x1886, 0xc9d8, 0x8580, 0xd2b0, 0x48ca, 0xbf47, 0x1, 0x1);
        gbc.writeMem(0x1886, { 0x80 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x1887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01F9
        gbc.setState(0xadd6, 0x3ec1, 0xdec0, 0xffd5, 0x2d8d, 0xa6dd, 0x1, 0x1);
        gbc.writeMem(0xadd6, { 0x80 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xadd6));
        // 80 01FA
        gbc.setState(0xcacd, 0x8bcd, 0x9c50, 0x65e9, 0xb52d, 0xbabd, 0x0, 0x1);
        gbc.writeMem(0xcacd, { 0x80 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8bcd, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcacd));
        // 80 01FB
        gbc.setState(0x57e7, 0x522b, 0x6b90, 0xe215, 0x52f1, 0x4e1c, 0x1, 0x1);
        gbc.writeMem(0x57e7, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0x57e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01FC
        gbc.setState(0x25b2, 0xa0e7, 0x7550, 0x9348, 0x35e8, 0xf764, 0x1, 0x0);
        gbc.writeMem(0x25b2, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa0e7, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 01FF
        gbc.setState(0x5ad0, 0xfb3a, 0x20d0, 0x6f53, 0x2f34, 0xed31, 0x0, 0x1);
        gbc.writeMem(0x5ad0, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfb3a, gbc.sp());
        EXPECT(0x5ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0200
        gbc.setState(0xc4fc, 0x418f, 0xb5a0, 0x2801, 0xd49d, 0x14a3, 0x1, 0x1);
        gbc.writeMem(0xc4fc, { 0x80 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc4fc));
        // 80 0201
        gbc.setState(0xc6f6, 0x6ba4, 0x2450, 0x72c9, 0xc41, 0x8402, 0x1, 0x1);
        gbc.writeMem(0xc6f6, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ba4, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc6f6));
        // 80 0202
        gbc.setState(0xdb91, 0xde1f, 0x8b40, 0xb7cf, 0xe58a, 0x4394, 0x0, 0x0);
        gbc.writeMem(0xdb91, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdb91));
        // 80 0203
        gbc.setState(0x3060, 0x90ef, 0xbe40, 0x77, 0xb30e, 0x271b, 0x1, 0x1);
        gbc.writeMem(0x3060, { 0x80 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x90ef, gbc.sp());
        EXPECT(0x3061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0204
        gbc.setState(0x8b90, 0x7173, 0x1ff0, 0x1a2d, 0x557a, 0x82dd, 0x1, 0x0);
        gbc.writeMem(0x8b90, { 0x80 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b90));
        // 80 0205
        gbc.setState(0xb257, 0x6f9c, 0x7160, 0xf5c0, 0xa0ac, 0xf8e8, 0x0, 0x1);
        gbc.writeMem(0xb257, { 0x80 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6f9c, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb257));
        // 80 0206
        gbc.setState(0x8e7, 0x7de6, 0x9a40, 0xeb2c, 0xa2ab, 0xe857, 0x1, 0x0);
        gbc.writeMem(0x8e7, { 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7de6, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0207
        gbc.setState(0xa610, 0xa36b, 0x7f00, 0x28e1, 0x4d3f, 0xa392, 0x1, 0x1);
        gbc.writeMem(0xa610, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa36b, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa610));
        // 80 0208
        gbc.setState(0x1549, 0x4d45, 0x8420, 0x333d, 0x2edc, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x1549, { 0x80 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4d45, gbc.sp());
        EXPECT(0x154a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 020A
        gbc.setState(0x6f81, 0x2db3, 0xec40, 0xc791, 0xab1d, 0xf3cc, 0x1, 0x1);
        gbc.writeMem(0x6f81, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2db3, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 020B
        gbc.setState(0x9db7, 0x1102, 0xdb60, 0x8343, 0x8c8b, 0x5b19, 0x0, 0x1);
        gbc.writeMem(0x9db7, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1102, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9db7));
        // 80 020C
        gbc.setState(0x2547, 0x3253, 0xe520, 0x842d, 0x905b, 0x2ae8, 0x1, 0x1);
        gbc.writeMem(0x2547, { 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 020D
        gbc.setState(0x906d, 0x1217, 0x2fe0, 0xbb7d, 0xc126, 0xda78, 0x1, 0x0);
        gbc.writeMem(0x906d, { 0x80 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0x906e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x906d));
        // 80 020E
        gbc.setState(0x33e8, 0x6080, 0x32a0, 0x443, 0x5fff, 0x5497, 0x0, 0x1);
        gbc.writeMem(0x33e8, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x33e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 020F
        gbc.setState(0x6c14, 0xfc87, 0xde60, 0x3a48, 0xa211, 0x3edb, 0x1, 0x1);
        gbc.writeMem(0x6c14, { 0x80 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfc87, gbc.sp());
        EXPECT(0x6c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0210
        gbc.setState(0x96ac, 0xf1ca, 0xfe50, 0xcea8, 0xa90b, 0x9bec, 0x0, 0x1);
        gbc.writeMem(0x96ac, { 0x80 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf1ca, gbc.sp());
        EXPECT(0x96ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x96ac));
        // 80 0211
        gbc.setState(0x4070, 0x7654, 0x13a0, 0xa13b, 0xfaf0, 0x2e00, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0x80 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7654, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0212
        gbc.setState(0xb633, 0xd2cb, 0x12c0, 0x3f53, 0xde12, 0x6fdf, 0x1, 0x0);
        gbc.writeMem(0xb633, { 0x80 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd2cb, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb633));
        // 80 0213
        gbc.setState(0xc843, 0x8b36, 0xdd90, 0x3e7, 0x350d, 0x88a, 0x0, 0x0);
        gbc.writeMem(0xc843, { 0x80 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8b36, gbc.sp());
        EXPECT(0xc844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc843));
        // 80 0214
        gbc.setState(0x7072, 0x62b7, 0xcc00, 0x3333, 0x548d, 0x65da, 0x0, 0x1);
        gbc.writeMem(0x7072, { 0x80 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0x7073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0215
        gbc.setState(0xb3af, 0x2af3, 0xfd00, 0x5267, 0x53ea, 0xea53, 0x0, 0x1);
        gbc.writeMem(0xb3af, { 0x80 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb3af));
        // 80 0216
        gbc.setState(0xa659, 0x5d46, 0x5130, 0x30d1, 0xae2e, 0x2b70, 0x1, 0x0);
        gbc.writeMem(0xa659, { 0x80 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa659));
        // 80 0217
        gbc.setState(0xca5a, 0xe24f, 0x20a0, 0xa586, 0x46e0, 0x8951, 0x0, 0x1);
        gbc.writeMem(0xca5a, { 0x80 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0xca5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xca5a));
        // 80 0218
        gbc.setState(0x7d32, 0xc6b7, 0xb240, 0xbee3, 0xc989, 0x3fe5, 0x1, 0x0);
        gbc.writeMem(0x7d32, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc6b7, gbc.sp());
        EXPECT(0x7d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0219
        gbc.setState(0x5462, 0x5008, 0x9190, 0x2d14, 0x893d, 0x475f, 0x1, 0x0);
        gbc.writeMem(0x5462, { 0x80 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5008, gbc.sp());
        EXPECT(0x5463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 021A
        gbc.setState(0x6a4b, 0xbc77, 0x7d50, 0x6498, 0xb39, 0x6c19, 0x1, 0x0);
        gbc.writeMem(0x6a4b, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbc77, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 021C
        gbc.setState(0x2ac5, 0x7c6d, 0x4390, 0xb207, 0xfaf5, 0x7f60, 0x0, 0x0);
        gbc.writeMem(0x2ac5, { 0x80 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0x2ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 021D
        gbc.setState(0xa9c4, 0xc430, 0xd660, 0x7e3f, 0xa54, 0xada9, 0x1, 0x0);
        gbc.writeMem(0xa9c4, { 0x80 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc430, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa9c4));
        // 80 021E
        gbc.setState(0x68d5, 0x7720, 0xeb30, 0x4b1d, 0x4e99, 0xb72a, 0x0, 0x1);
        gbc.writeMem(0x68d5, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7720, gbc.sp());
        EXPECT(0x68d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 021F
        gbc.setState(0x101a, 0xfcb, 0x3e30, 0x7a12, 0xf0fd, 0xe61c, 0x1, 0x1);
        gbc.writeMem(0x101a, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfcb, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0220
        gbc.setState(0x66f9, 0x9c6d, 0x1780, 0x7fb6, 0x2fc5, 0x2761, 0x0, 0x0);
        gbc.writeMem(0x66f9, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c6d, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0221
        gbc.setState(0x779f, 0x3f4c, 0x2c20, 0xcd78, 0x4bd6, 0xf7b, 0x0, 0x0);
        gbc.writeMem(0x779f, { 0x80 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0223
        gbc.setState(0x30dc, 0xc55e, 0x9910, 0x60da, 0x3600, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0x30dc, { 0x80 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc55e, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0224
        gbc.setState(0xecaf, 0xcaf7, 0x5b90, 0xe05a, 0xb30f, 0xf632, 0x1, 0x1);
        gbc.writeMem(0xecaf, { 0x80 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcaf7, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xecaf));
        // 80 0225
        gbc.setState(0x2807, 0x59f2, 0x6800, 0x7420, 0x256e, 0x7dd9, 0x1, 0x1);
        gbc.writeMem(0x2807, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0226
        gbc.setState(0x9e8c, 0x88d3, 0xc990, 0x7b20, 0x1231, 0xe6b4, 0x0, 0x1);
        gbc.writeMem(0x9e8c, { 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x88d3, gbc.sp());
        EXPECT(0x9e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9e8c));
        // 80 0227
        gbc.setState(0xb058, 0x456a, 0x420, 0x2f9, 0x3c85, 0x69c9, 0x0, 0x1);
        gbc.writeMem(0xb058, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x456a, gbc.sp());
        EXPECT(0xb059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb058));
        // 80 0228
        gbc.setState(0x5422, 0xac25, 0x8760, 0xe2e6, 0x50f9, 0x92dc, 0x1, 0x0);
        gbc.writeMem(0x5422, { 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x5423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0229
        gbc.setState(0x2dcd, 0x1b57, 0xb6e0, 0x4bb4, 0x6950, 0x4349, 0x0, 0x1);
        gbc.writeMem(0x2dcd, { 0x80 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1b57, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 022A
        gbc.setState(0x3110, 0x6407, 0x1250, 0xe094, 0x7803, 0x7572, 0x0, 0x0);
        gbc.writeMem(0x3110, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6407, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 022B
        gbc.setState(0x2c9e, 0x42c1, 0x6160, 0xfa8, 0x8368, 0x173a, 0x0, 0x1);
        gbc.writeMem(0x2c9e, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x42c1, gbc.sp());
        EXPECT(0x2c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 022C
        gbc.setState(0xc0c4, 0x10eb, 0xd6e0, 0x420d, 0x74e9, 0xd698, 0x1, 0x0);
        gbc.writeMem(0xc0c4, { 0x80 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x10eb, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc0c4));
        // 80 022D
        gbc.setState(0x6105, 0x561, 0xca40, 0xd510, 0xaf04, 0xf3bd, 0x1, 0x1);
        gbc.writeMem(0x6105, { 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 022E
        gbc.setState(0x1ced, 0xab89, 0xbd60, 0xdd2e, 0x7f51, 0xc5bf, 0x0, 0x1);
        gbc.writeMem(0x1ced, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x1cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 022F
        gbc.setState(0x983b, 0x7497, 0x4cc0, 0x434d, 0x17ea, 0xe4ff, 0x1, 0x1);
        gbc.writeMem(0x983b, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7497, gbc.sp());
        EXPECT(0x983c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x983b));
        // 80 0230
        gbc.setState(0xda3a, 0x48ec, 0x1220, 0x33f2, 0x47f8, 0x2a97, 0x0, 0x0);
        gbc.writeMem(0xda3a, { 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x48ec, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xda3a));
        // 80 0231
        gbc.setState(0xc6bd, 0xdcc4, 0x71a0, 0xc1ea, 0xab4, 0x2f9f, 0x0, 0x1);
        gbc.writeMem(0xc6bd, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdcc4, gbc.sp());
        EXPECT(0xc6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc6bd));
        // 80 0232
        gbc.setState(0x6941, 0x163, 0x1c40, 0x80f7, 0x1366, 0xdb79, 0x0, 0x1);
        gbc.writeMem(0x6941, { 0x80 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0x6942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0233
        gbc.setState(0x9aef, 0xb339, 0xe640, 0x8366, 0xafd3, 0xf7cd, 0x1, 0x0);
        gbc.writeMem(0x9aef, { 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9aef));
        // 80 0234
        gbc.setState(0x42f, 0xa484, 0xf7e0, 0xb33b, 0x4827, 0x11fe, 0x0, 0x0);
        gbc.writeMem(0x42f, { 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa484, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0235
        gbc.setState(0x1997, 0xe272, 0x8600, 0xf218, 0x96f5, 0x88a2, 0x1, 0x1);
        gbc.writeMem(0x1997, { 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe272, gbc.sp());
        EXPECT(0x1998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0236
        gbc.setState(0x8b16, 0xbd2, 0x5200, 0xfca6, 0xe5f6, 0xfc4e, 0x1, 0x1);
        gbc.writeMem(0x8b16, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x8b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b16));
        // 80 0237
        gbc.setState(0x1316, 0xfb02, 0x41d0, 0xc2e4, 0x5c12, 0x7d96, 0x0, 0x0);
        gbc.writeMem(0x1316, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0238
        gbc.setState(0xa9a, 0x9b90, 0xe4f0, 0x805a, 0x883e, 0x362a, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0x80 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0239
        gbc.setState(0x9907, 0xffa2, 0x2950, 0x3b6f, 0x4f24, 0x5fc, 0x0, 0x1);
        gbc.writeMem(0x9907, { 0x80 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xffa2, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9907));
        // 80 023A
        gbc.setState(0xd3e4, 0x3207, 0x5310, 0xbc1e, 0x3204, 0x8aca, 0x1, 0x0);
        gbc.writeMem(0xd3e4, { 0x80 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3207, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd3e4));
        // 80 023B
        gbc.setState(0x1f7f, 0x8d70, 0x4e00, 0xfcd7, 0xab62, 0xd3e5, 0x0, 0x1);
        gbc.writeMem(0x1f7f, { 0x80 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8d70, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 023C
        gbc.setState(0x1cfa, 0x6088, 0x4730, 0xfd53, 0x8916, 0x51df, 0x0, 0x0);
        gbc.writeMem(0x1cfa, { 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6088, gbc.sp());
        EXPECT(0x1cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 023D
        gbc.setState(0x473d, 0x92d3, 0xeea0, 0xa5b3, 0xab35, 0xda45, 0x1, 0x1);
        gbc.writeMem(0x473d, { 0x80 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 023E
        gbc.setState(0x46af, 0x750d, 0xb690, 0x234f, 0xc5b4, 0xa6d9, 0x0, 0x1);
        gbc.writeMem(0x46af, { 0x80 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x750d, gbc.sp());
        EXPECT(0x46b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 023F
        gbc.setState(0x9e12, 0x7897, 0xa370, 0xf6fe, 0xe177, 0x6c, 0x0, 0x1);
        gbc.writeMem(0x9e12, { 0x80 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7897, gbc.sp());
        EXPECT(0x9e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9e12));
        // 80 0240
        gbc.setState(0x3c8d, 0x1744, 0x5a60, 0xa0b4, 0xc599, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x3c8d, { 0x80 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0x3c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0241
        gbc.setState(0x53e6, 0xf7c5, 0xf9e0, 0xcfb9, 0xdeb6, 0xd377, 0x0, 0x0);
        gbc.writeMem(0x53e6, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf7c5, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0242
        gbc.setState(0x3803, 0x3fa7, 0xa8b0, 0x7271, 0xb3b8, 0x331f, 0x1, 0x0);
        gbc.writeMem(0x3803, { 0x80 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0x3804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0243
        gbc.setState(0x1c08, 0xdfef, 0x36f0, 0xe8ab, 0x1790, 0xc572, 0x1, 0x1);
        gbc.writeMem(0x1c08, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdfef, gbc.sp());
        EXPECT(0x1c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0244
        gbc.setState(0xac33, 0x9760, 0x4130, 0xad96, 0xfd37, 0xfd72, 0x1, 0x0);
        gbc.writeMem(0xac33, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0xac34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xac33));
        // 80 0247
        gbc.setState(0x7b7d, 0xaf08, 0x7430, 0xb9fb, 0xe031, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x7b7d, { 0x80 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0x7b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0248
        gbc.setState(0x8c56, 0x415a, 0x5000, 0xad39, 0x9d50, 0x12cc, 0x1, 0x1);
        gbc.writeMem(0x8c56, { 0x80 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x415a, gbc.sp());
        EXPECT(0x8c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8c56));
        // 80 0249
        gbc.setState(0x5c4, 0xa07b, 0x42f0, 0x22ee, 0x2dfc, 0x39d8, 0x1, 0x1);
        gbc.writeMem(0x5c4, { 0x80 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 024A
        gbc.setState(0x4bfe, 0x7955, 0xed10, 0xec66, 0x4351, 0x6e8e, 0x0, 0x1);
        gbc.writeMem(0x4bfe, { 0x80 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 024B
        gbc.setState(0x3b96, 0x8d01, 0x3250, 0x6eb1, 0x271f, 0xd462, 0x0, 0x0);
        gbc.writeMem(0x3b96, { 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8d01, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 024C
        gbc.setState(0x3624, 0x79d3, 0xf280, 0x42ed, 0x5657, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x3624, { 0x80 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x79d3, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 024D
        gbc.setState(0x800e, 0x169, 0xc8b0, 0xd2fa, 0xc79, 0x4221, 0x0, 0x1);
        gbc.writeMem(0x800e, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x169, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x800e));
        // 80 024E
        gbc.setState(0xee0a, 0x9051, 0x3130, 0xd7fa, 0x49cc, 0x980e, 0x0, 0x0);
        gbc.writeMem(0xee0a, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xee0a));
        // 80 024F
        gbc.setState(0x116e, 0x5cde, 0x1f10, 0x94f0, 0x28d1, 0xb47a, 0x1, 0x1);
        gbc.writeMem(0x116e, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0x116f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0250
        gbc.setState(0x57fe, 0x7580, 0x60f0, 0xca01, 0x7b08, 0x37c5, 0x0, 0x1);
        gbc.writeMem(0x57fe, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7580, gbc.sp());
        EXPECT(0x57ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0251
        gbc.setState(0xe1b4, 0xafaf, 0xab90, 0xdfd5, 0x859, 0x1d62, 0x0, 0x0);
        gbc.writeMem(0xe1b4, { 0x80 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe1b4));
        // 80 0252
        gbc.setState(0x9f59, 0x7ee7, 0x7820, 0x4157, 0x7e16, 0x797d, 0x1, 0x0);
        gbc.writeMem(0x9f59, { 0x80 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ee7, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9f59));
        // 80 0253
        gbc.setState(0xc491, 0x5fb7, 0x8f10, 0x70e, 0xdd3a, 0xe2b2, 0x0, 0x0);
        gbc.writeMem(0xc491, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0xc492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc491));
        // 80 0254
        gbc.setState(0xe373, 0xcf6d, 0x710, 0x722d, 0xcd83, 0x4f31, 0x1, 0x1);
        gbc.writeMem(0xe373, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0xe374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe373));
        // 80 0255
        gbc.setState(0x4c51, 0xd2a1, 0xdec0, 0x1922, 0x5aa2, 0x5bba, 0x0, 0x1);
        gbc.writeMem(0x4c51, { 0x80 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0256
        gbc.setState(0x3e5c, 0x19bc, 0x2860, 0x2e79, 0x280a, 0xe840, 0x0, 0x0);
        gbc.writeMem(0x3e5c, { 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x19bc, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0257
        gbc.setState(0xdade, 0x31af, 0xb230, 0xb978, 0x7fb3, 0xad16, 0x0, 0x1);
        gbc.writeMem(0xdade, { 0x80 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0xdadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdade));
        // 80 0258
        gbc.setState(0x92bb, 0xcac5, 0xad30, 0x430a, 0x39ac, 0x5039, 0x1, 0x1);
        gbc.writeMem(0x92bb, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x92bb));
        // 80 0259
        gbc.setState(0xc2f1, 0xf602, 0xf0f0, 0xdd8d, 0x71b, 0x6268, 0x0, 0x1);
        gbc.writeMem(0xc2f1, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc2f1));
        // 80 025A
        gbc.setState(0xc28b, 0x176b, 0x6ea0, 0x5499, 0xc536, 0x6965, 0x0, 0x1);
        gbc.writeMem(0xc28b, { 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0xc28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc28b));
        // 80 025B
        gbc.setState(0x5f04, 0x37ba, 0x83d0, 0xd082, 0x6330, 0x157, 0x1, 0x1);
        gbc.writeMem(0x5f04, { 0x80 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x37ba, gbc.sp());
        EXPECT(0x5f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 025C
        gbc.setState(0xdc42, 0x4340, 0xd070, 0x3033, 0x8e8f, 0xf10c, 0x1, 0x0);
        gbc.writeMem(0xdc42, { 0x80 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4340, gbc.sp());
        EXPECT(0xdc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdc42));
        // 80 025D
        gbc.setState(0x8022, 0xc4ac, 0xe150, 0x77ad, 0x98a3, 0xcb08, 0x0, 0x1);
        gbc.writeMem(0x8022, { 0x80 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x8023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8022));
        // 80 025E
        gbc.setState(0xb46f, 0xc4be, 0x4d40, 0xc7c, 0xa1f5, 0xbc1d, 0x0, 0x1);
        gbc.writeMem(0xb46f, { 0x80 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xb470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb46f));
        // 80 025F
        gbc.setState(0xd956, 0x1116, 0xf5d0, 0x5039, 0x548d, 0x476a, 0x1, 0x0);
        gbc.writeMem(0xd956, { 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0xd957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd956));
        // 80 0260
        gbc.setState(0x1b39, 0xed7d, 0x4290, 0xd84f, 0xbb7d, 0x8b12, 0x1, 0x0);
        gbc.writeMem(0x1b39, { 0x80 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xed7d, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0261
        gbc.setState(0x42bf, 0xf63f, 0xf130, 0xd66f, 0xcbe1, 0x2566, 0x0, 0x0);
        gbc.writeMem(0x42bf, { 0x80 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf63f, gbc.sp());
        EXPECT(0x42c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0262
        gbc.setState(0x4f42, 0xccf, 0xc7e0, 0x4856, 0x3933, 0xe252, 0x1, 0x1);
        gbc.writeMem(0x4f42, { 0x80 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0263
        gbc.setState(0xd5c9, 0x3e2f, 0xcd40, 0x6be5, 0x3059, 0xb021, 0x1, 0x1);
        gbc.writeMem(0xd5c9, { 0x80 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3e2f, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd5c9));
        // 80 0264
        gbc.setState(0x8f8c, 0xcf3b, 0x68d0, 0x1498, 0x87ac, 0x4f02, 0x1, 0x1);
        gbc.writeMem(0x8f8c, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf3b, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8f8c));
        // 80 0265
        gbc.setState(0x6a45, 0x6500, 0x4de0, 0xc7ee, 0xa2a8, 0xbd40, 0x1, 0x1);
        gbc.writeMem(0x6a45, { 0x80 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0x6a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0266
        gbc.setState(0xab54, 0x3d1c, 0x1ff0, 0x372a, 0x7562, 0x1ef4, 0x0, 0x0);
        gbc.writeMem(0xab54, { 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3d1c, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xab54));
        // 80 0267
        gbc.setState(0x75cd, 0x6df7, 0xef40, 0x5f4b, 0x3e01, 0x545c, 0x1, 0x0);
        gbc.writeMem(0x75cd, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6df7, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0268
        gbc.setState(0xc644, 0xd60b, 0xcd10, 0xe64a, 0xa4a6, 0x3017, 0x0, 0x0);
        gbc.writeMem(0xc644, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd60b, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc644));
        // 80 0269
        gbc.setState(0x2f41, 0xb7a6, 0xa2a0, 0x7cf7, 0x6a07, 0xedaf, 0x1, 0x0);
        gbc.writeMem(0x2f41, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 026A
        gbc.setState(0x46e9, 0xe51, 0x6780, 0xac51, 0x9d48, 0xec93, 0x0, 0x1);
        gbc.writeMem(0x46e9, { 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x46ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 026B
        gbc.setState(0xc36, 0x24b1, 0xda30, 0xf7f7, 0x7cef, 0x48b8, 0x1, 0x0);
        gbc.writeMem(0xc36, { 0x80 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 026C
        gbc.setState(0x4a34, 0x9182, 0x6e70, 0xe875, 0xac68, 0x477c, 0x0, 0x1);
        gbc.writeMem(0x4a34, { 0x80 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9182, gbc.sp());
        EXPECT(0x4a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 026D
        gbc.setState(0x3c67, 0xa522, 0xe760, 0x6cee, 0xec5f, 0xf6fc, 0x0, 0x0);
        gbc.writeMem(0x3c67, { 0x80 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0x3c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 026F
        gbc.setState(0x20f9, 0x2ebc, 0xc8b0, 0x3bf9, 0xef3a, 0x2c89, 0x1, 0x1);
        gbc.writeMem(0x20f9, { 0x80 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ebc, gbc.sp());
        EXPECT(0x20fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0270
        gbc.setState(0xcb3a, 0xe88e, 0xd330, 0x4ba, 0xbc1f, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0xcb3a, { 0x80 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe88e, gbc.sp());
        EXPECT(0xcb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcb3a));
        // 80 0271
        gbc.setState(0x2d5d, 0xc5d1, 0xfa50, 0x530e, 0x30a3, 0xfc26, 0x1, 0x0);
        gbc.writeMem(0x2d5d, { 0x80 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0x2d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0272
        gbc.setState(0x6163, 0xfba2, 0x0, 0x529d, 0x5087, 0xb924, 0x1, 0x0);
        gbc.writeMem(0x6163, { 0x80 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfba2, gbc.sp());
        EXPECT(0x6164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0273
        gbc.setState(0x9c14, 0x9b1, 0x3680, 0xe425, 0xabc5, 0x701c, 0x1, 0x0);
        gbc.writeMem(0x9c14, { 0x80 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9b1, gbc.sp());
        EXPECT(0x9c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9c14));
        // 80 0274
        gbc.setState(0x23da, 0xa6e7, 0x6dc0, 0x318e, 0x2899, 0xd835, 0x1, 0x1);
        gbc.writeMem(0x23da, { 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa6e7, gbc.sp());
        EXPECT(0x23db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0275
        gbc.setState(0x8b35, 0x9dc5, 0x9560, 0xad9f, 0x1047, 0x1e50, 0x1, 0x0);
        gbc.writeMem(0x8b35, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0x8b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b35));
        // 80 0276
        gbc.setState(0x8fac, 0xd398, 0xd530, 0x60be, 0x2a96, 0x9265, 0x0, 0x1);
        gbc.writeMem(0x8fac, { 0x80 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x8fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8fac));
        // 80 0277
        gbc.setState(0xe87e, 0xc4b2, 0x5dc0, 0x150, 0x87a8, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0xe87e, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe87e));
        // 80 0278
        gbc.setState(0x6b9d, 0x500a, 0x82b0, 0x4b46, 0xd12, 0x8924, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x500a, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0279
        gbc.setState(0x7bf3, 0x620d, 0x7e30, 0x2f44, 0x25e6, 0xaca6, 0x1, 0x0);
        gbc.writeMem(0x7bf3, { 0x80 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x620d, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 027A
        gbc.setState(0x5250, 0xda97, 0x8e20, 0x383b, 0x75f0, 0xf653, 0x1, 0x1);
        gbc.writeMem(0x5250, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 027B
        gbc.setState(0x3f03, 0x3ac3, 0x3260, 0xe4fc, 0x70fc, 0xc43a, 0x1, 0x1);
        gbc.writeMem(0x3f03, { 0x80 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3ac3, gbc.sp());
        EXPECT(0x3f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 027D
        gbc.setState(0x7d03, 0x3c30, 0x7d10, 0x429c, 0x1c85, 0xc362, 0x1, 0x0);
        gbc.writeMem(0x7d03, { 0x80 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x7d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 027E
        gbc.setState(0x9fc0, 0x5af8, 0xb8d0, 0x8443, 0xb6e4, 0x9b7d, 0x1, 0x0);
        gbc.writeMem(0x9fc0, { 0x80 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5af8, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9fc0));
        // 80 0281
        gbc.setState(0x60eb, 0xc86b, 0x3c10, 0x9adf, 0x8d7e, 0x6e32, 0x1, 0x0);
        gbc.writeMem(0x60eb, { 0x80 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc86b, gbc.sp());
        EXPECT(0x60ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0282
        gbc.setState(0xa57e, 0x7d0e, 0x82b0, 0xdc48, 0x3dee, 0x99df, 0x1, 0x1);
        gbc.writeMem(0xa57e, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7d0e, gbc.sp());
        EXPECT(0xa57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa57e));
        // 80 0283
        gbc.setState(0x1e27, 0xa356, 0x99c0, 0x43d3, 0x72a7, 0xe7e1, 0x0, 0x0);
        gbc.writeMem(0x1e27, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0x1e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0284
        gbc.setState(0xc9b, 0x842e, 0x2980, 0x4e7d, 0xfcb1, 0x3c71, 0x0, 0x1);
        gbc.writeMem(0xc9b, { 0x80 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x842e, gbc.sp());
        EXPECT(0xc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0285
        gbc.setState(0x1016, 0x3366, 0xf630, 0x1a40, 0x4810, 0xf80a, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0x80 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3366, gbc.sp());
        EXPECT(0x1017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0286
        gbc.setState(0x9bd4, 0xd432, 0xdb20, 0x274e, 0x4048, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0x9bd4, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9bd4));
        // 80 0287
        gbc.setState(0xef42, 0x78f8, 0x3480, 0xcca, 0x14ed, 0x76fe, 0x1, 0x1);
        gbc.writeMem(0xef42, { 0x80 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x78f8, gbc.sp());
        EXPECT(0xef43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef42));
        // 80 0288
        gbc.setState(0x9ec, 0xeef7, 0xac50, 0xc198, 0xdf15, 0x8c73, 0x1, 0x0);
        gbc.writeMem(0x9ec, { 0x80 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0289
        gbc.setState(0xc6eb, 0x85af, 0x14a0, 0x7bd0, 0x684a, 0x21cf, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc6eb));
        // 80 028A
        gbc.setState(0x60b1, 0x2abf, 0x2950, 0xa998, 0xb3b1, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2abf, gbc.sp());
        EXPECT(0x60b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 028B
        gbc.setState(0x6fac, 0x2da8, 0x5a30, 0xa3b9, 0xac67, 0x94a0, 0x0, 0x0);
        gbc.writeMem(0x6fac, { 0x80 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x6fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 028C
        gbc.setState(0x5d64, 0xad25, 0x6150, 0xd634, 0x9c82, 0xd1fd, 0x0, 0x0);
        gbc.writeMem(0x5d64, { 0x80 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xad25, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 028D
        gbc.setState(0xc1b5, 0x5671, 0x7730, 0xbf9a, 0x2499, 0x10f9, 0x0, 0x0);
        gbc.writeMem(0xc1b5, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0xc1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc1b5));
        // 80 028E
        gbc.setState(0xdc4c, 0x255f, 0x9280, 0x4ac3, 0x55d2, 0xbde2, 0x0, 0x0);
        gbc.writeMem(0xdc4c, { 0x80 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x255f, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdc4c));
        // 80 0290
        gbc.setState(0x4a03, 0x858e, 0xdf90, 0xb4a, 0xf38b, 0xb745, 0x1, 0x0);
        gbc.writeMem(0x4a03, { 0x80 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x858e, gbc.sp());
        EXPECT(0x4a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0291
        gbc.setState(0x23b9, 0xa67c, 0x4100, 0x9e38, 0x7168, 0xeadf, 0x0, 0x0);
        gbc.writeMem(0x23b9, { 0x80 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa67c, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0292
        gbc.setState(0x885c, 0x6547, 0xdc90, 0x47a0, 0xfd96, 0xc47b, 0x0, 0x1);
        gbc.writeMem(0x885c, { 0x80 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6547, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x885c));
        // 80 0293
        gbc.setState(0xea14, 0x9207, 0xcb20, 0x4a71, 0x1a87, 0xe253, 0x1, 0x0);
        gbc.writeMem(0xea14, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xea14));
        // 80 0294
        gbc.setState(0x8439, 0x3461, 0x2260, 0x2edb, 0xff81, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0x80 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3461, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8439));
        // 80 0295
        gbc.setState(0x346e, 0x5663, 0xaa60, 0x87f0, 0xfbfe, 0x819b, 0x1, 0x1);
        gbc.writeMem(0x346e, { 0x80 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0296
        gbc.setState(0xa5e, 0xec1a, 0x7760, 0x1f94, 0xb640, 0xc499, 0x1, 0x0);
        gbc.writeMem(0xa5e, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xec1a, gbc.sp());
        EXPECT(0xa5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0297
        gbc.setState(0xb865, 0xb29d, 0x27e0, 0x9d3, 0x4fde, 0x1d4e, 0x1, 0x1);
        gbc.writeMem(0xb865, { 0x80 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb29d, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb865));
        // 80 0298
        gbc.setState(0x5e48, 0xc2b4, 0xe00, 0xca2a, 0x2580, 0xec71, 0x1, 0x1);
        gbc.writeMem(0x5e48, { 0x80 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc2b4, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0299
        gbc.setState(0xa0b7, 0x938d, 0x4c70, 0xafb9, 0x2d19, 0x1de8, 0x0, 0x0);
        gbc.writeMem(0xa0b7, { 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x938d, gbc.sp());
        EXPECT(0xa0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa0b7));
        // 80 029A
        gbc.setState(0x6c37, 0xb77e, 0x1520, 0x1c50, 0x9b4f, 0x97a6, 0x0, 0x0);
        gbc.writeMem(0x6c37, { 0x80 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0x6c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 029B
        gbc.setState(0x401d, 0xfb40, 0x85e0, 0x3ca1, 0xa73, 0x35a0, 0x0, 0x1);
        gbc.writeMem(0x401d, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x401e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 029C
        gbc.setState(0xc680, 0xc493, 0xebd0, 0x2360, 0x570a, 0x57a1, 0x1, 0x0);
        gbc.writeMem(0xc680, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc680));
        // 80 029D
        gbc.setState(0x6182, 0xbdab, 0xca0, 0xbac1, 0xe749, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0x6182, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbdab, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 029E
        gbc.setState(0x991f, 0x331d, 0x5380, 0x2827, 0xfa7a, 0x738d, 0x0, 0x1);
        gbc.writeMem(0x991f, { 0x80 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x331d, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x991f));
        // 80 029F
        gbc.setState(0x938f, 0x92f4, 0x9ed0, 0x72b4, 0x37e5, 0x50ad, 0x1, 0x0);
        gbc.writeMem(0x938f, { 0x80 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x9390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x938f));
        // 80 02A0
        gbc.setState(0xe5ba, 0xfa2a, 0xaf40, 0x4b62, 0xa482, 0xa283, 0x0, 0x1);
        gbc.writeMem(0xe5ba, { 0x80 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfa2a, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe5ba));
        // 80 02A1
        gbc.setState(0xb9a2, 0x944c, 0x7a00, 0xb50e, 0x4861, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0xb9a2, { 0x80 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xb9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb9a2));
        // 80 02A2
        gbc.setState(0x8004, 0xdc68, 0x7fd0, 0x3440, 0xfc88, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0x8004, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdc68, gbc.sp());
        EXPECT(0x8005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8004));
        // 80 02A3
        gbc.setState(0x8f66, 0xdb2b, 0xa320, 0xd955, 0xe0f0, 0xdc94, 0x0, 0x1);
        gbc.writeMem(0x8f66, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdb2b, gbc.sp());
        EXPECT(0x8f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8f66));
        // 80 02A4
        gbc.setState(0xd7cc, 0x4242, 0x8a90, 0x981c, 0xc284, 0x56ca, 0x0, 0x1);
        gbc.writeMem(0xd7cc, { 0x80 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0xd7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd7cc));
        // 80 02A5
        gbc.setState(0x2f79, 0x147b, 0xe9d0, 0xab1b, 0xcc8e, 0x72e2, 0x0, 0x1);
        gbc.writeMem(0x2f79, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0x2f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02A6
        gbc.setState(0x5d23, 0xdef5, 0x3f30, 0xdabb, 0xfdf4, 0x6f32, 0x0, 0x0);
        gbc.writeMem(0x5d23, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdef5, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02A7
        gbc.setState(0x373f, 0xb4f8, 0xc860, 0x3d2b, 0x59d7, 0xb95a, 0x1, 0x0);
        gbc.writeMem(0x373f, { 0x80 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02A8
        gbc.setState(0x6b62, 0xb42c, 0x3740, 0xca79, 0x1e59, 0x9c6d, 0x1, 0x0);
        gbc.writeMem(0x6b62, { 0x80 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb42c, gbc.sp());
        EXPECT(0x6b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02A9
        gbc.setState(0xad18, 0xa3e1, 0xa760, 0x21e, 0xf7c8, 0x439e, 0x0, 0x1);
        gbc.writeMem(0xad18, { 0x80 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0xad19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xad18));
        // 80 02AA
        gbc.setState(0x1890, 0x1575, 0x370, 0x79b3, 0xaaee, 0xfa92, 0x0, 0x1);
        gbc.writeMem(0x1890, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1575, gbc.sp());
        EXPECT(0x1891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02AB
        gbc.setState(0x2da9, 0xe00e, 0x5280, 0x71ed, 0xbe9f, 0xa7ac, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0x80 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe00e, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02AC
        gbc.setState(0xdac8, 0x608e, 0xb680, 0x87db, 0xec82, 0x954d, 0x0, 0x1);
        gbc.writeMem(0xdac8, { 0x80 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0xdac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdac8));
        // 80 02AD
        gbc.setState(0xd9dd, 0x865f, 0x8bf0, 0x4280, 0x4339, 0xee91, 0x0, 0x0);
        gbc.writeMem(0xd9dd, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd9dd));
        // 80 02AF
        gbc.setState(0x43a7, 0x73f0, 0x25e0, 0x6609, 0x5e91, 0x1b75, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02B0
        gbc.setState(0x8764, 0x1a46, 0xb400, 0xc975, 0xeb5, 0xfabe, 0x1, 0x0);
        gbc.writeMem(0x8764, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a46, gbc.sp());
        EXPECT(0x8765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8764));
        // 80 02B1
        gbc.setState(0x991f, 0x673d, 0x2eb0, 0xb317, 0x820b, 0x50f7, 0x0, 0x1);
        gbc.writeMem(0x991f, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x673d, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x991f));
        // 80 02B2
        gbc.setState(0x292f, 0xd786, 0xbed0, 0x4a78, 0x802f, 0x67e, 0x1, 0x0);
        gbc.writeMem(0x292f, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd786, gbc.sp());
        EXPECT(0x2930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02B3
        gbc.setState(0x6cd2, 0x571, 0x82a0, 0x141a, 0x3621, 0xe8e7, 0x1, 0x1);
        gbc.writeMem(0x6cd2, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x571, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02B4
        gbc.setState(0x8534, 0x2431, 0x6c20, 0xc534, 0xcf00, 0x1594, 0x1, 0x1);
        gbc.writeMem(0x8534, { 0x80 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x8535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8534));
        // 80 02B5
        gbc.setState(0x6932, 0xd04e, 0xf0c0, 0x4df8, 0x99a, 0xe566, 0x0, 0x0);
        gbc.writeMem(0x6932, { 0x80 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd04e, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02B6
        gbc.setState(0x2465, 0x1dda, 0x7020, 0x25cd, 0x2ce5, 0xa2b9, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0x80 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1dda, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02B7
        gbc.setState(0xccf, 0xc875, 0x26f0, 0xa8fe, 0x6ae6, 0xd742, 0x0, 0x1);
        gbc.writeMem(0xccf, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc875, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02B8
        gbc.setState(0x7677, 0xc34b, 0x4230, 0xb655, 0x2ef7, 0x3a6f, 0x1, 0x1);
        gbc.writeMem(0x7677, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc34b, gbc.sp());
        EXPECT(0x7678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02B9
        gbc.setState(0xd297, 0x55a, 0x4ae0, 0x5047, 0xbedc, 0x55e4, 0x0, 0x1);
        gbc.writeMem(0xd297, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd297));
        // 80 02BA
        gbc.setState(0x5d82, 0x4acf, 0x2a50, 0xa57c, 0xa442, 0xe, 0x1, 0x1);
        gbc.writeMem(0x5d82, { 0x80 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4acf, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02BB
        gbc.setState(0x61a3, 0x8364, 0x1110, 0x3346, 0x4995, 0x47a4, 0x0, 0x1);
        gbc.writeMem(0x61a3, { 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8364, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02BC
        gbc.setState(0x82d2, 0x166a, 0x1600, 0x4aef, 0x652c, 0x10d0, 0x1, 0x0);
        gbc.writeMem(0x82d2, { 0x80 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x166a, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x82d2));
        // 80 02BD
        gbc.setState(0x20da, 0x4707, 0x4010, 0x1ad0, 0x207c, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0x20da, { 0x80 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0x20db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02BE
        gbc.setState(0xe81e, 0x306c, 0xa20, 0xa81d, 0x5743, 0x9d77, 0x1, 0x0);
        gbc.writeMem(0xe81e, { 0x80 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x306c, gbc.sp());
        EXPECT(0xe81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe81e));
        // 80 02BF
        gbc.setState(0x914b, 0x7b6a, 0x8730, 0xba5f, 0x37d9, 0x2168, 0x1, 0x0);
        gbc.writeMem(0x914b, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7b6a, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x914b));
        // 80 02C0
        gbc.setState(0xd16a, 0xa4e8, 0x5ac0, 0xcb6b, 0xcab9, 0x81b7, 0x1, 0x0);
        gbc.writeMem(0xd16a, { 0x80 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd16a));
        // 80 02C2
        gbc.setState(0xe737, 0x6a16, 0xed70, 0x5b3, 0x5b8b, 0x9387, 0x1, 0x1);
        gbc.writeMem(0xe737, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0xe738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe737));
        // 80 02C3
        gbc.setState(0x7d91, 0x7f8e, 0x51b0, 0x86f, 0x88b1, 0xfbc2, 0x0, 0x0);
        gbc.writeMem(0x7d91, { 0x80 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02C4
        gbc.setState(0x8e7f, 0xdd6a, 0x6e20, 0xb7cf, 0x64b5, 0x808c, 0x0, 0x1);
        gbc.writeMem(0x8e7f, { 0x80 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdd6a, gbc.sp());
        EXPECT(0x8e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8e7f));
        // 80 02C6
        gbc.setState(0x555c, 0xefb0, 0x4330, 0xe812, 0x680d, 0x5027, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xefb0, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02C7
        gbc.setState(0xa21e, 0x787a, 0x76f0, 0x8c61, 0x79d6, 0xac0f, 0x0, 0x0);
        gbc.writeMem(0xa21e, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x787a, gbc.sp());
        EXPECT(0xa21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa21e));
        // 80 02C8
        gbc.setState(0xef55, 0x4c05, 0x3be0, 0x59f7, 0x7391, 0x28fe, 0x1, 0x1);
        gbc.writeMem(0xef55, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4c05, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef55));
        // 80 02C9
        gbc.setState(0x6d15, 0x8515, 0xe230, 0xe5f1, 0xf668, 0x212f, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0x80 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8515, gbc.sp());
        EXPECT(0x6d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02CA
        gbc.setState(0x13ff, 0xc0ca, 0xc0, 0x7200, 0x6626, 0xefca, 0x1, 0x1);
        gbc.writeMem(0x13ff, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc0ca, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02CB
        gbc.setState(0x6525, 0x8676, 0x5230, 0x3ec1, 0x5dbf, 0xbbfb, 0x1, 0x1);
        gbc.writeMem(0x6525, { 0x80 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8676, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02CC
        gbc.setState(0x29e4, 0xaa7f, 0xb790, 0x9439, 0xb612, 0xd4bd, 0x1, 0x1);
        gbc.writeMem(0x29e4, { 0x80 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x29e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02CD
        gbc.setState(0x38e, 0x8822, 0x9670, 0xb35e, 0xb0dc, 0xee6b, 0x0, 0x1);
        gbc.writeMem(0x38e, { 0x80 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8822, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02CE
        gbc.setState(0x73f1, 0x41de, 0x7550, 0x4037, 0xb557, 0xd76a, 0x0, 0x0);
        gbc.writeMem(0x73f1, { 0x80 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x41de, gbc.sp());
        EXPECT(0x73f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02CF
        gbc.setState(0x382e, 0x5e8f, 0x3de0, 0xf607, 0x3ac4, 0xfea0, 0x0, 0x1);
        gbc.writeMem(0x382e, { 0x80 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x382f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02D0
        gbc.setState(0xdb20, 0x1d26, 0x9150, 0x4c78, 0xc169, 0xc55e, 0x0, 0x1);
        gbc.writeMem(0xdb20, { 0x80 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdb20));
        // 80 02D1
        gbc.setState(0x5869, 0xefa0, 0xc460, 0x4828, 0xfcb3, 0x72df, 0x1, 0x0);
        gbc.writeMem(0x5869, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xefa0, gbc.sp());
        EXPECT(0x586a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02D2
        gbc.setState(0x7bb9, 0x1e8, 0x74a0, 0x949f, 0x9e6d, 0x98ee, 0x0, 0x0);
        gbc.writeMem(0x7bb9, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02D3
        gbc.setState(0x14d1, 0xd643, 0x4100, 0xb152, 0xdfe0, 0x4f7a, 0x0, 0x0);
        gbc.writeMem(0x14d1, { 0x80 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd643, gbc.sp());
        EXPECT(0x14d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02D4
        gbc.setState(0x588c, 0xca37, 0x44f0, 0x90bb, 0x271d, 0x58af, 0x1, 0x1);
        gbc.writeMem(0x588c, { 0x80 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xca37, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02D5
        gbc.setState(0x8b64, 0xfdf7, 0x4280, 0xea5d, 0x225a, 0x1102, 0x1, 0x0);
        gbc.writeMem(0x8b64, { 0x80 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfdf7, gbc.sp());
        EXPECT(0x8b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b64));
        // 80 02D6
        gbc.setState(0xad57, 0x46ef, 0x3820, 0x9e99, 0x81d6, 0xbfbd, 0x1, 0x0);
        gbc.writeMem(0xad57, { 0x80 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x46ef, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xad57));
        // 80 02D7
        gbc.setState(0x173, 0x4e2d, 0xdf90, 0xb2bf, 0xb4ed, 0x3bff, 0x0, 0x1);
        gbc.writeMem(0x173, { 0x80 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02D8
        gbc.setState(0x4d8c, 0xddf1, 0xf5c0, 0x4bcc, 0xde4d, 0xf934, 0x1, 0x1);
        gbc.writeMem(0x4d8c, { 0x80 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x4d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02D9
        gbc.setState(0x22b3, 0x56cc, 0x98b0, 0xaa38, 0xd080, 0xc9de, 0x0, 0x1);
        gbc.writeMem(0x22b3, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x56cc, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02DA
        gbc.setState(0xec4c, 0x6ab8, 0x9fc0, 0x336a, 0x15f7, 0x54e4, 0x1, 0x0);
        gbc.writeMem(0xec4c, { 0x80 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6ab8, gbc.sp());
        EXPECT(0xec4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xec4c));
        // 80 02DB
        gbc.setState(0x18c6, 0xe2b7, 0xa0f0, 0x7d19, 0xf0e9, 0xb9a0, 0x1, 0x0);
        gbc.writeMem(0x18c6, { 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02DC
        gbc.setState(0xd3e6, 0x806d, 0x6fe0, 0x4267, 0x8e98, 0xa3ba, 0x1, 0x0);
        gbc.writeMem(0xd3e6, { 0x80 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x806d, gbc.sp());
        EXPECT(0xd3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd3e6));
        // 80 02DD
        gbc.setState(0xa8c1, 0x3bd, 0x9100, 0x4476, 0xfdd, 0x8898, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0x80 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3bd, gbc.sp());
        EXPECT(0xa8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa8c1));
        // 80 02DE
        gbc.setState(0x9074, 0xe0bc, 0x1e90, 0xf68a, 0xcf06, 0xff44, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0x80 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe0bc, gbc.sp());
        EXPECT(0x9075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9074));
        // 80 02DF
        gbc.setState(0x83ae, 0xd44c, 0xbc80, 0x6dff, 0x19ac, 0xca78, 0x1, 0x1);
        gbc.writeMem(0x83ae, { 0x80 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd44c, gbc.sp());
        EXPECT(0x83af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x83ae));
        // 80 02E0
        gbc.setState(0x5a5a, 0x2262, 0xfce0, 0xb217, 0xeb67, 0xd707, 0x0, 0x1);
        gbc.writeMem(0x5a5a, { 0x80 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E1
        gbc.setState(0x6ddb, 0xd443, 0x4050, 0xee62, 0x9375, 0xa258, 0x0, 0x1);
        gbc.writeMem(0x6ddb, { 0x80 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd443, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E2
        gbc.setState(0xd0b9, 0xbc0d, 0xad20, 0xd4c5, 0xca60, 0x93c3, 0x0, 0x0);
        gbc.writeMem(0xd0b9, { 0x80 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbc0d, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd0b9));
        // 80 02E3
        gbc.setState(0x8fd6, 0x98bd, 0xbf80, 0x6b3f, 0x43c6, 0xf34a, 0x0, 0x1);
        gbc.writeMem(0x8fd6, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8fd6));
        // 80 02E4
        gbc.setState(0x5c, 0xa226, 0x6b10, 0xa1db, 0x1047, 0x9d35, 0x0, 0x0);
        gbc.writeMem(0x5c, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa226, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E5
        gbc.setState(0x606a, 0xa2ee, 0xf140, 0xff7a, 0x9dfd, 0x881, 0x1, 0x0);
        gbc.writeMem(0x606a, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa2ee, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E6
        gbc.setState(0x4175, 0x2bea, 0xa590, 0x819d, 0x8c25, 0xde90, 0x0, 0x1);
        gbc.writeMem(0x4175, { 0x80 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2bea, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E7
        gbc.setState(0x9fbf, 0xa344, 0xb410, 0x8eda, 0x8517, 0xa35f, 0x0, 0x0);
        gbc.writeMem(0x9fbf, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa344, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9fbf));
        // 80 02E8
        gbc.setState(0x29e3, 0x7424, 0x9800, 0xa0c1, 0x8cee, 0xe155, 0x1, 0x1);
        gbc.writeMem(0x29e3, { 0x80 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7424, gbc.sp());
        EXPECT(0x29e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02E9
        gbc.setState(0x9e22, 0x97f, 0xf40, 0xc68c, 0x5982, 0x835b, 0x0, 0x1);
        gbc.writeMem(0x9e22, { 0x80 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x97f, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9e22));
        // 80 02EA
        gbc.setState(0x3bcb, 0x7d3b, 0xa8d0, 0x6e3e, 0x872, 0xaea8, 0x1, 0x1);
        gbc.writeMem(0x3bcb, { 0x80 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0x3bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02EC
        gbc.setState(0x5eda, 0x3c89, 0x4e60, 0x80f3, 0xa0a, 0xc233, 0x1, 0x1);
        gbc.writeMem(0x5eda, { 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02ED
        gbc.setState(0x370e, 0xfc00, 0x1c60, 0x6a20, 0x972c, 0xe663, 0x0, 0x1);
        gbc.writeMem(0x370e, { 0x80 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x370f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02EE
        gbc.setState(0xac37, 0xfa9c, 0xd8d0, 0xd106, 0x106c, 0x8e8, 0x0, 0x1);
        gbc.writeMem(0xac37, { 0x80 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0xac38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xac37));
        // 80 02EF
        gbc.setState(0x4a5e, 0x9ee3, 0x8ad0, 0xbf16, 0x5393, 0xbc30, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0x80 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9ee3, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02F0
        gbc.setState(0x49d, 0x7885, 0xf860, 0x4d7a, 0xbdda, 0xfbf1, 0x1, 0x0);
        gbc.writeMem(0x49d, { 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02F1
        gbc.setState(0x983a, 0x5c17, 0xae10, 0x42a5, 0x129f, 0x6992, 0x1, 0x1);
        gbc.writeMem(0x983a, { 0x80 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0x983b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x983a));
        // 80 02F2
        gbc.setState(0x77c3, 0xcaa4, 0x9df0, 0xd99b, 0x97a2, 0x8739, 0x0, 0x1);
        gbc.writeMem(0x77c3, { 0x80 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02F3
        gbc.setState(0xe291, 0x2eca, 0xded0, 0x3f6e, 0x5dc2, 0x3791, 0x1, 0x1);
        gbc.writeMem(0xe291, { 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0xe292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe291));
        // 80 02F4
        gbc.setState(0x6e57, 0x55c1, 0x9960, 0x5008, 0xdc29, 0xa5a2, 0x1, 0x1);
        gbc.writeMem(0x6e57, { 0x80 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02F6
        gbc.setState(0xd1a7, 0xf2ab, 0x6d30, 0x5e19, 0x7bca, 0x39c6, 0x1, 0x1);
        gbc.writeMem(0xd1a7, { 0x80 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf2ab, gbc.sp());
        EXPECT(0xd1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd1a7));
        // 80 02F7
        gbc.setState(0xd1cf, 0xb382, 0xbe80, 0x2af3, 0x6270, 0x819d, 0x0, 0x1);
        gbc.writeMem(0xd1cf, { 0x80 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd1cf));
        // 80 02F8
        gbc.setState(0x1fde, 0xde80, 0x3d10, 0x3fac, 0xcfff, 0x9f5f, 0x0, 0x0);
        gbc.writeMem(0x1fde, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02F9
        gbc.setState(0x6e55, 0xafac, 0xc100, 0xed8a, 0x5416, 0x1ab9, 0x0, 0x0);
        gbc.writeMem(0x6e55, { 0x80 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xafac, gbc.sp());
        EXPECT(0x6e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02FA
        gbc.setState(0x5477, 0x707b, 0x18c0, 0xb9ab, 0xe5b3, 0x8403, 0x1, 0x1);
        gbc.writeMem(0x5477, { 0x80 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x707b, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02FB
        gbc.setState(0xec64, 0x3d87, 0xffe0, 0x7d83, 0xcf63, 0x1334, 0x1, 0x0);
        gbc.writeMem(0xec64, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0xec65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xec64));
        // 80 02FC
        gbc.setState(0xc3dd, 0x64cf, 0xa000, 0xfc2b, 0x52ef, 0x698f, 0x0, 0x0);
        gbc.writeMem(0xc3dd, { 0x80 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x64cf, gbc.sp());
        EXPECT(0xc3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc3dd));
        // 80 02FD
        gbc.setState(0x7e4f, 0x5833, 0x9d40, 0x29c8, 0xeb6a, 0x784f, 0x1, 0x0);
        gbc.writeMem(0x7e4f, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 02FE
        gbc.setState(0x3a1e, 0x48f9, 0xd630, 0x611a, 0x9998, 0x8490, 0x0, 0x0);
        gbc.writeMem(0x3a1e, { 0x80 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x48f9, gbc.sp());
        EXPECT(0x3a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 02FF
        gbc.setState(0x5c8e, 0xccdd, 0xbd80, 0x4ff4, 0x8796, 0x560c, 0x1, 0x1);
        gbc.writeMem(0x5c8e, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xccdd, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0300
        gbc.setState(0xbb99, 0x1c38, 0x2bf0, 0x3fc8, 0xb03a, 0x685b, 0x1, 0x0);
        gbc.writeMem(0xbb99, { 0x80 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0xbb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbb99));
        // 80 0301
        gbc.setState(0xe4ec, 0x4a7b, 0x39a0, 0xc237, 0x4330, 0x9ded, 0x1, 0x0);
        gbc.writeMem(0xe4ec, { 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe4ec));
        // 80 0302
        gbc.setState(0x6fd6, 0x3ee3, 0x5950, 0x576b, 0x9a21, 0x2a58, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0x80 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3ee3, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0303
        gbc.setState(0xcbfc, 0x220f, 0xa360, 0x3fa2, 0x678d, 0x33e9, 0x1, 0x1);
        gbc.writeMem(0xcbfc, { 0x80 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x220f, gbc.sp());
        EXPECT(0xcbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcbfc));
        // 80 0304
        gbc.setState(0x419d, 0x477c, 0x6b80, 0xf0f2, 0x7d1, 0x4193, 0x0, 0x0);
        gbc.writeMem(0x419d, { 0x80 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0305
        gbc.setState(0x85db, 0x5773, 0xf060, 0x8264, 0xe813, 0xd416, 0x1, 0x0);
        gbc.writeMem(0x85db, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x85dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x85db));
        // 80 0306
        gbc.setState(0x98ba, 0xf1ea, 0x130, 0x73d3, 0x5e8a, 0x6766, 0x0, 0x0);
        gbc.writeMem(0x98ba, { 0x80 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf1ea, gbc.sp());
        EXPECT(0x98bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x98ba));
        // 80 0307
        gbc.setState(0x54ac, 0xc54f, 0x5090, 0x632f, 0x30e1, 0x2af, 0x0, 0x0);
        gbc.writeMem(0x54ac, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0308
        gbc.setState(0xdd18, 0xfc22, 0xfa30, 0xbf73, 0x5ba5, 0xee71, 0x1, 0x1);
        gbc.writeMem(0xdd18, { 0x80 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfc22, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdd18));
        // 80 0309
        gbc.setState(0xcea3, 0xb638, 0x7f0, 0x1990, 0xefda, 0x4171, 0x1, 0x1);
        gbc.writeMem(0xcea3, { 0x80 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcea3));
        // 80 030B
        gbc.setState(0x6761, 0x4fc2, 0x1460, 0xb34, 0x49b5, 0x6b38, 0x0, 0x1);
        gbc.writeMem(0x6761, { 0x80 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0x6762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 030C
        gbc.setState(0xdc0d, 0xddaa, 0xa650, 0x6294, 0x4691, 0x7694, 0x1, 0x1);
        gbc.writeMem(0xdc0d, { 0x80 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0xdc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdc0d));
        // 80 030D
        gbc.setState(0xd3ca, 0x1f16, 0x2a30, 0x94ec, 0xc648, 0x2b1c, 0x1, 0x1);
        gbc.writeMem(0xd3ca, { 0x80 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1f16, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd3ca));
        // 80 030E
        gbc.setState(0xa63f, 0xf6e5, 0xdc10, 0xa9c3, 0x7305, 0x72ce, 0x1, 0x0);
        gbc.writeMem(0xa63f, { 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0xa640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa63f));
        // 80 030F
        gbc.setState(0x7ae8, 0x54f1, 0x3fa0, 0x8ece, 0xd0b2, 0xfeac, 0x1, 0x0);
        gbc.writeMem(0x7ae8, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x54f1, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0310
        gbc.setState(0x422c, 0xd7fd, 0x3120, 0xc770, 0x4f31, 0x764b, 0x0, 0x1);
        gbc.writeMem(0x422c, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0311
        gbc.setState(0xa93b, 0xe20b, 0x2f70, 0xa5e6, 0x26e0, 0x1f6d, 0x0, 0x0);
        gbc.writeMem(0xa93b, { 0x80 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa93b));
        // 80 0312
        gbc.setState(0xa46c, 0x2690, 0x76d0, 0xb4b3, 0xb473, 0xe799, 0x0, 0x0);
        gbc.writeMem(0xa46c, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa46c));
        // 80 0313
        gbc.setState(0x25d9, 0x773b, 0x6d00, 0xc310, 0x7010, 0x5790, 0x0, 0x1);
        gbc.writeMem(0x25d9, { 0x80 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x773b, gbc.sp());
        EXPECT(0x25da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0314
        gbc.setState(0xe905, 0x4c68, 0x1920, 0x8167, 0x5187, 0x2f5, 0x1, 0x1);
        gbc.writeMem(0xe905, { 0x80 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4c68, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe905));
        // 80 0315
        gbc.setState(0x9100, 0x5d6e, 0x24d0, 0x414b, 0x817d, 0x281, 0x0, 0x1);
        gbc.writeMem(0x9100, { 0x80 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5d6e, gbc.sp());
        EXPECT(0x9101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9100));
        // 80 0317
        gbc.setState(0xc87f, 0xb1b1, 0x6d00, 0xcb60, 0xd1ba, 0xaf85, 0x1, 0x1);
        gbc.writeMem(0xc87f, { 0x80 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0xc880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc87f));
        // 80 0318
        gbc.setState(0x2cb9, 0x17c, 0xaf90, 0xddab, 0x9861, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x2cb9, { 0x80 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0x2cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0319
        gbc.setState(0x5a23, 0xfad5, 0xe7e0, 0x2e27, 0x1976, 0x31e0, 0x1, 0x1);
        gbc.writeMem(0x5a23, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfad5, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 031A
        gbc.setState(0x44c4, 0x3bcb, 0xae00, 0x70fc, 0x6646, 0xa2, 0x0, 0x1);
        gbc.writeMem(0x44c4, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 031B
        gbc.setState(0x95c1, 0x381a, 0xf50, 0x8c2, 0x21aa, 0xe147, 0x1, 0x0);
        gbc.writeMem(0x95c1, { 0x80 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0x95c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x95c1));
        // 80 031C
        gbc.setState(0x1393, 0xb20f, 0x9fb0, 0xf9f6, 0xac7b, 0x7f80, 0x0, 0x0);
        gbc.writeMem(0x1393, { 0x80 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb20f, gbc.sp());
        EXPECT(0x1394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 031D
        gbc.setState(0x876b, 0xd1a9, 0x8230, 0x28c1, 0x48c9, 0x7be4, 0x0, 0x0);
        gbc.writeMem(0x876b, { 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x876c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x876b));
        // 80 031E
        gbc.setState(0x74db, 0x1d79, 0x4000, 0x179b, 0xb29f, 0x5494, 0x1, 0x0);
        gbc.writeMem(0x74db, { 0x80 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1d79, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 031F
        gbc.setState(0xa4fc, 0x992, 0xe8e0, 0xb1f7, 0xce2b, 0xe6eb, 0x0, 0x0);
        gbc.writeMem(0xa4fc, { 0x80 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x992, gbc.sp());
        EXPECT(0xa4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa4fc));
        // 80 0320
        gbc.setState(0xdf66, 0x1f14, 0xbb40, 0x2462, 0xefdf, 0xc08c, 0x1, 0x0);
        gbc.writeMem(0xdf66, { 0x80 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1f14, gbc.sp());
        EXPECT(0xdf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdf66));
        // 80 0321
        gbc.setState(0x66a1, 0x6144, 0x94b0, 0x6937, 0xea26, 0xa2b8, 0x1, 0x0);
        gbc.writeMem(0x66a1, { 0x80 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x66a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0322
        gbc.setState(0x2ef6, 0x9b70, 0xf8c0, 0x6de1, 0xe7cb, 0x9f79, 0x1, 0x1);
        gbc.writeMem(0x2ef6, { 0x80 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x2ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0323
        gbc.setState(0xc5eb, 0x560, 0x8290, 0xdc81, 0xc44f, 0x356, 0x1, 0x0);
        gbc.writeMem(0xc5eb, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x560, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc5eb));
        // 80 0324
        gbc.setState(0x34f7, 0x6ed3, 0xea10, 0x5410, 0xc274, 0x6103, 0x0, 0x1);
        gbc.writeMem(0x34f7, { 0x80 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0x34f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0325
        gbc.setState(0x2509, 0x7d83, 0x8a90, 0x93a7, 0x8c7e, 0xb249, 0x0, 0x1);
        gbc.writeMem(0x2509, { 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0326
        gbc.setState(0x2d69, 0xf011, 0xab40, 0xfc06, 0x3369, 0x74b5, 0x1, 0x0);
        gbc.writeMem(0x2d69, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf011, gbc.sp());
        EXPECT(0x2d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0327
        gbc.setState(0xcd5b, 0xcaef, 0xc1f0, 0x90d8, 0xe3bf, 0xd8bb, 0x0, 0x0);
        gbc.writeMem(0xcd5b, { 0x80 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcd5b));
        // 80 0328
        gbc.setState(0x4314, 0xb7b, 0xe480, 0x2bf4, 0x2c84, 0xe1f6, 0x1, 0x1);
        gbc.writeMem(0x4314, { 0x80 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0329
        gbc.setState(0x711d, 0x79ca, 0xa9c0, 0xa5be, 0xad03, 0x248c, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 032A
        gbc.setState(0xa707, 0x2a5, 0xf30, 0x68eb, 0x4a88, 0xc2bf, 0x0, 0x0);
        gbc.writeMem(0xa707, { 0x80 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2a5, gbc.sp());
        EXPECT(0xa708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa707));
        // 80 032B
        gbc.setState(0x9d2e, 0xe39b, 0x4dc0, 0x97c8, 0x6034, 0x4a78, 0x0, 0x0);
        gbc.writeMem(0x9d2e, { 0x80 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe39b, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d2e));
        // 80 032C
        gbc.setState(0x9c66, 0x1216, 0xaf90, 0x6ce2, 0x39cf, 0x2613, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1216, gbc.sp());
        EXPECT(0x9c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9c66));
        // 80 032D
        gbc.setState(0x918, 0x3c04, 0x2e10, 0xb3f1, 0x88bc, 0xa588, 0x1, 0x1);
        gbc.writeMem(0x918, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3c04, gbc.sp());
        EXPECT(0x919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 032E
        gbc.setState(0xa9e8, 0x379c, 0x2fd0, 0x54aa, 0xa1cf, 0x6034, 0x0, 0x1);
        gbc.writeMem(0xa9e8, { 0x80 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x379c, gbc.sp());
        EXPECT(0xa9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa9e8));
        // 80 032F
        gbc.setState(0xb5f8, 0x3ecf, 0x2100, 0x9748, 0x230f, 0xeb62, 0x1, 0x0);
        gbc.writeMem(0xb5f8, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0xb5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb5f8));
        // 80 0330
        gbc.setState(0x2471, 0xbb64, 0x4dc0, 0xa0ec, 0xb154, 0x5311, 0x1, 0x1);
        gbc.writeMem(0x2471, { 0x80 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb64, gbc.sp());
        EXPECT(0x2472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0331
        gbc.setState(0x8dce, 0x86cd, 0x9530, 0xcddf, 0xfda7, 0x2766, 0x1, 0x1);
        gbc.writeMem(0x8dce, { 0x80 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x86cd, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8dce));
        // 80 0332
        gbc.setState(0xb3e, 0xb738, 0xf370, 0x359c, 0xca9b, 0xafe3, 0x0, 0x1);
        gbc.writeMem(0xb3e, { 0x80 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb738, gbc.sp());
        EXPECT(0xb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0333
        gbc.setState(0x8d5b, 0x35f4, 0x5620, 0x6cde, 0xfe89, 0x4e59, 0x1, 0x1);
        gbc.writeMem(0x8d5b, { 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x35f4, gbc.sp());
        EXPECT(0x8d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8d5b));
        // 80 0334
        gbc.setState(0x357a, 0x557c, 0x7f60, 0x5af5, 0xb7b0, 0xc02d, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0x80 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x357b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0335
        gbc.setState(0x6f65, 0x5310, 0x9350, 0x4e41, 0xc0f5, 0xdf45, 0x1, 0x1);
        gbc.writeMem(0x6f65, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0x6f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0336
        gbc.setState(0x1dc1, 0xc517, 0xa130, 0xfbe5, 0xbb41, 0x8f88, 0x1, 0x0);
        gbc.writeMem(0x1dc1, { 0x80 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0x1dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0337
        gbc.setState(0x10e4, 0x4803, 0x1250, 0x48cd, 0x8d79, 0x7f1c, 0x1, 0x0);
        gbc.writeMem(0x10e4, { 0x80 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4803, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0338
        gbc.setState(0xaa6e, 0x56df, 0x1120, 0x26fc, 0x2e84, 0x4be8, 0x0, 0x0);
        gbc.writeMem(0xaa6e, { 0x80 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x56df, gbc.sp());
        EXPECT(0xaa6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaa6e));
        // 80 0339
        gbc.setState(0x7c36, 0x77cb, 0x90f0, 0xed76, 0x269d, 0x886c, 0x0, 0x1);
        gbc.writeMem(0x7c36, { 0x80 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x77cb, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 033A
        gbc.setState(0xa8b7, 0x7664, 0x2d70, 0x9472, 0xf460, 0xee3c, 0x1, 0x1);
        gbc.writeMem(0xa8b7, { 0x80 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7664, gbc.sp());
        EXPECT(0xa8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa8b7));
        // 80 033B
        gbc.setState(0xe047, 0xb97f, 0xb730, 0xbd6, 0xde6c, 0x9a84, 0x0, 0x1);
        gbc.writeMem(0xe047, { 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb97f, gbc.sp());
        EXPECT(0xe048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe047));
        // 80 033C
        gbc.setState(0xd68a, 0x8cd, 0x9830, 0x52bf, 0x85f0, 0xc42b, 0x0, 0x0);
        gbc.writeMem(0xd68a, { 0x80 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd68a));
        // 80 033D
        gbc.setState(0xe348, 0x60e0, 0xb460, 0x1119, 0x4e1c, 0x4b31, 0x0, 0x0);
        gbc.writeMem(0xe348, { 0x80 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x60e0, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe348));
        // 80 033E
        gbc.setState(0xbdf2, 0x20d, 0xdc10, 0x6789, 0xe3a5, 0x651c, 0x0, 0x1);
        gbc.writeMem(0xbdf2, { 0x80 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbdf2));
        // 80 033F
        gbc.setState(0x7d47, 0xac63, 0x3510, 0xc8a4, 0xd1e8, 0x5c52, 0x1, 0x1);
        gbc.writeMem(0x7d47, { 0x80 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0x7d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0340
        gbc.setState(0x6ec4, 0x3f66, 0xe7e0, 0x8d66, 0x8fc9, 0xdfd7, 0x1, 0x1);
        gbc.writeMem(0x6ec4, { 0x80 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3f66, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0341
        gbc.setState(0x96c4, 0xf599, 0x250, 0x74e5, 0x68d8, 0x3dd, 0x1, 0x1);
        gbc.writeMem(0x96c4, { 0x80 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0x96c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x96c4));
        // 80 0342
        gbc.setState(0xfef, 0x3e34, 0xaa90, 0x98b, 0xc114, 0xb2ec, 0x1, 0x0);
        gbc.writeMem(0xfef, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0xff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0343
        gbc.setState(0xac05, 0x2ebb, 0x37c0, 0xe643, 0x9533, 0xc046, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2ebb, gbc.sp());
        EXPECT(0xac06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xac05));
        // 80 0344
        gbc.setState(0x8170, 0xc2b2, 0x91f0, 0xe888, 0xa221, 0x9f62, 0x1, 0x0);
        gbc.writeMem(0x8170, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2b2, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8170));
        // 80 0345
        gbc.setState(0xcf52, 0xda88, 0x6e60, 0xc4da, 0x7c9a, 0xafea, 0x1, 0x0);
        gbc.writeMem(0xcf52, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf52));
        // 80 0346
        gbc.setState(0xbd33, 0xe4e6, 0x5c40, 0x67a1, 0xd4bf, 0x1f1b, 0x1, 0x1);
        gbc.writeMem(0xbd33, { 0x80 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbd33));
        // 80 0348
        gbc.setState(0xc9ba, 0x5748, 0x8d70, 0xd15a, 0xe76e, 0xf4af, 0x1, 0x0);
        gbc.writeMem(0xc9ba, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0xc9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc9ba));
        // 80 0349
        gbc.setState(0xdfca, 0x9222, 0x79f0, 0x8673, 0x44ff, 0xf26, 0x1, 0x1);
        gbc.writeMem(0xdfca, { 0x80 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9222, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdfca));
        // 80 034A
        gbc.setState(0x9ed5, 0x93d3, 0x4040, 0x521d, 0xce55, 0x1c3c, 0x0, 0x0);
        gbc.writeMem(0x9ed5, { 0x80 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0x9ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9ed5));
        // 80 034B
        gbc.setState(0xacda, 0x4c9a, 0x1f70, 0x702f, 0x7165, 0x9892, 0x0, 0x0);
        gbc.writeMem(0xacda, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xacda));
        // 80 034C
        gbc.setState(0x5f7c, 0x222, 0x2380, 0x88aa, 0x9c28, 0x8819, 0x0, 0x0);
        gbc.writeMem(0x5f7c, { 0x80 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0x5f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 034D
        gbc.setState(0x70e4, 0x4965, 0xdb80, 0x41b0, 0x2a89, 0x9ed7, 0x0, 0x1);
        gbc.writeMem(0x70e4, { 0x80 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x70e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 034E
        gbc.setState(0xaa81, 0x5b93, 0x5b10, 0x6e74, 0x1fa7, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0xaa81, { 0x80 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaa81));
        // 80 034F
        gbc.setState(0x53d1, 0xd1cb, 0x58e0, 0xd253, 0xfc9a, 0xffea, 0x1, 0x0);
        gbc.writeMem(0x53d1, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd1cb, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0350
        gbc.setState(0xb91b, 0xe158, 0x5940, 0xd7, 0xe8bc, 0xdb86, 0x1, 0x1);
        gbc.writeMem(0xb91b, { 0x80 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb91b));
        // 80 0351
        gbc.setState(0x4dd7, 0x4d57, 0x9770, 0x5477, 0x7469, 0xd1f7, 0x1, 0x0);
        gbc.writeMem(0x4dd7, { 0x80 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0x4dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0352
        gbc.setState(0x4709, 0xcce9, 0x2950, 0x8efb, 0x585f, 0xc40f, 0x0, 0x1);
        gbc.writeMem(0x4709, { 0x80 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcce9, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0353
        gbc.setState(0x481b, 0x38e3, 0x1a50, 0xb9d6, 0x1060, 0x5a87, 0x0, 0x1);
        gbc.writeMem(0x481b, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x38e3, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0355
        gbc.setState(0x1e9, 0xeed6, 0x2310, 0x2d3b, 0x11d1, 0x62d6, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0x80 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeed6, gbc.sp());
        EXPECT(0x1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0356
        gbc.setState(0x550a, 0xbf5, 0xe940, 0xd93c, 0x6cc9, 0x4bb4, 0x1, 0x1);
        gbc.writeMem(0x550a, { 0x80 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf5, gbc.sp());
        EXPECT(0x550b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0357
        gbc.setState(0xd77a, 0x747e, 0x81e0, 0x3573, 0xc3cb, 0xa67b, 0x1, 0x1);
        gbc.writeMem(0xd77a, { 0x80 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0xd77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd77a));
        // 80 0358
        gbc.setState(0x70b3, 0xac26, 0xbbe0, 0x6856, 0xb342, 0xdcef, 0x1, 0x1);
        gbc.writeMem(0x70b3, { 0x80 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xac26, gbc.sp());
        EXPECT(0x70b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0359
        gbc.setState(0x55cb, 0x7ec7, 0xb40, 0x56d8, 0xb41a, 0x76ec, 0x0, 0x1);
        gbc.writeMem(0x55cb, { 0x80 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 035A
        gbc.setState(0x3131, 0xdd86, 0x4dc0, 0xfc1b, 0xe1bd, 0xe937, 0x1, 0x0);
        gbc.writeMem(0x3131, { 0x80 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 035B
        gbc.setState(0xb20b, 0xc09e, 0x1d60, 0xded1, 0xdd66, 0xa8aa, 0x0, 0x1);
        gbc.writeMem(0xb20b, { 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc09e, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb20b));
        // 80 035C
        gbc.setState(0x891c, 0xaa0a, 0xb880, 0x6914, 0xc6d2, 0x8282, 0x0, 0x1);
        gbc.writeMem(0x891c, { 0x80 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaa0a, gbc.sp());
        EXPECT(0x891d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x891c));
        // 80 035D
        gbc.setState(0x7fd5, 0x254c, 0xba70, 0xca7d, 0xe3d5, 0xdb0d, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0x80 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x254c, gbc.sp());
        EXPECT(0x7fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 035E
        gbc.setState(0xe5d2, 0x8c6b, 0xe000, 0x4a96, 0xb675, 0x712, 0x1, 0x1);
        gbc.writeMem(0xe5d2, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0xe5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe5d2));
        // 80 035F
        gbc.setState(0x1427, 0x94e, 0x1fa0, 0x9cef, 0xc281, 0xfda7, 0x1, 0x0);
        gbc.writeMem(0x1427, { 0x80 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0x1428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0360
        gbc.setState(0xb4b7, 0x6320, 0x4a90, 0xaed5, 0xb437, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0xb4b7, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6320, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb4b7));
        // 80 0361
        gbc.setState(0x5600, 0xdcb8, 0x9cd0, 0xb743, 0xbe50, 0x7fa0, 0x1, 0x0);
        gbc.writeMem(0x5600, { 0x80 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdcb8, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0362
        gbc.setState(0x993e, 0xfd97, 0x4cd0, 0xc927, 0xd5a7, 0x2d31, 0x0, 0x1);
        gbc.writeMem(0x993e, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x993e));
        // 80 0363
        gbc.setState(0x539f, 0xfe97, 0x2850, 0xe37b, 0xbe2a, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0x539f, { 0x80 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfe97, gbc.sp());
        EXPECT(0x53a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0364
        gbc.setState(0x1ff0, 0x96e4, 0x4960, 0x48f7, 0x3407, 0x228d, 0x0, 0x1);
        gbc.writeMem(0x1ff0, { 0x80 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0365
        gbc.setState(0x70e9, 0x9203, 0x7b70, 0x5152, 0x5693, 0x2890, 0x0, 0x1);
        gbc.writeMem(0x70e9, { 0x80 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9203, gbc.sp());
        EXPECT(0x70ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0366
        gbc.setState(0xe5ff, 0x318a, 0x2e00, 0xa29a, 0xacb9, 0x982a, 0x0, 0x1);
        gbc.writeMem(0xe5ff, { 0x80 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe5ff));
        // 80 0367
        gbc.setState(0x4d0f, 0x2087, 0xb3b0, 0xe0a4, 0x8f22, 0x653, 0x1, 0x0);
        gbc.writeMem(0x4d0f, { 0x80 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2087, gbc.sp());
        EXPECT(0x4d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0368
        gbc.setState(0xbc40, 0xca54, 0xa9d0, 0x80b9, 0xa2c1, 0x3537, 0x1, 0x1);
        gbc.writeMem(0xbc40, { 0x80 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbc40));
        // 80 0369
        gbc.setState(0x560b, 0x4288, 0x6590, 0xbc87, 0x514b, 0xb6cd, 0x0, 0x0);
        gbc.writeMem(0x560b, { 0x80 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 036A
        gbc.setState(0x2cca, 0x105a, 0xe380, 0xaf84, 0x832f, 0xb3cf, 0x1, 0x1);
        gbc.writeMem(0x2cca, { 0x80 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x105a, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 036B
        gbc.setState(0x5740, 0xca66, 0xc660, 0xa346, 0xdc3b, 0x39bd, 0x1, 0x1);
        gbc.writeMem(0x5740, { 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0x5741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 036C
        gbc.setState(0x864, 0x87a9, 0x7d10, 0x3622, 0xd67d, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0x864, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 036D
        gbc.setState(0x8b71, 0x1acb, 0x3b40, 0x1a76, 0x8aa0, 0x8324, 0x1, 0x0);
        gbc.writeMem(0x8b71, { 0x80 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x8b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8b71));
        // 80 036E
        gbc.setState(0x9540, 0x89c2, 0x2790, 0x4bbc, 0xfd5a, 0x9a5, 0x1, 0x0);
        gbc.writeMem(0x9540, { 0x80 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x89c2, gbc.sp());
        EXPECT(0x9541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9540));
        // 80 036F
        gbc.setState(0x4880, 0x32dd, 0x8960, 0xa4f8, 0x81cb, 0x5697, 0x0, 0x1);
        gbc.writeMem(0x4880, { 0x80 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0x4881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0370
        gbc.setState(0x3c42, 0xc14a, 0xae40, 0xfcc, 0x4b14, 0xd850, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0x80 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc14a, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0371
        gbc.setState(0x8e76, 0x24d0, 0x45d0, 0xd656, 0x269b, 0x580e, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0x80 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x24d0, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8e76));
        // 80 0373
        gbc.setState(0x3f1f, 0xe494, 0x6820, 0x271e, 0xfb67, 0x518d, 0x1, 0x1);
        gbc.writeMem(0x3f1f, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe494, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0374
        gbc.setState(0x9ee8, 0xec66, 0xa170, 0xfa8b, 0x4cb4, 0x5a60, 0x0, 0x0);
        gbc.writeMem(0x9ee8, { 0x80 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9ee8));
        // 80 0376
        gbc.setState(0xb0a6, 0x117b, 0x64c0, 0x9b5a, 0x1619, 0xa7b6, 0x0, 0x1);
        gbc.writeMem(0xb0a6, { 0x80 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x117b, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb0a6));
        // 80 0377
        gbc.setState(0x632a, 0x1c99, 0x1290, 0x7800, 0xa27f, 0x3980, 0x0, 0x1);
        gbc.writeMem(0x632a, { 0x80 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1c99, gbc.sp());
        EXPECT(0x632b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0378
        gbc.setState(0x995, 0x80f3, 0x1460, 0x25bb, 0x333d, 0x1558, 0x1, 0x0);
        gbc.writeMem(0x995, { 0x80 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x80f3, gbc.sp());
        EXPECT(0x996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0379
        gbc.setState(0xa14f, 0x3a2b, 0xa6d0, 0x484f, 0xac33, 0xaed1, 0x1, 0x0);
        gbc.writeMem(0xa14f, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3a2b, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa14f));
        // 80 037A
        gbc.setState(0x80fd, 0x65a, 0xe780, 0xf0f5, 0xd802, 0x2a9c, 0x0, 0x0);
        gbc.writeMem(0x80fd, { 0x80 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x65a, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x80fd));
        // 80 037B
        gbc.setState(0x1210, 0x1653, 0x1060, 0x5fd1, 0x58e2, 0x185f, 0x1, 0x1);
        gbc.writeMem(0x1210, { 0x80 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1653, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 037C
        gbc.setState(0x811, 0x16eb, 0x17e0, 0x2819, 0xf4a7, 0x78d, 0x1, 0x1);
        gbc.writeMem(0x811, { 0x80 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 037D
        gbc.setState(0xc652, 0x280a, 0x2960, 0xeacd, 0xd88f, 0x68bb, 0x0, 0x1);
        gbc.writeMem(0xc652, { 0x80 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x280a, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc652));
        // 80 037E
        gbc.setState(0x328e, 0xcc16, 0x1390, 0x2cf3, 0x6bf3, 0xd6c7, 0x1, 0x0);
        gbc.writeMem(0x328e, { 0x80 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcc16, gbc.sp());
        EXPECT(0x328f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 037F
        gbc.setState(0xb765, 0x5c72, 0x4800, 0x4132, 0xccf, 0x505b, 0x0, 0x1);
        gbc.writeMem(0xb765, { 0x80 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5c72, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb765));
        // 80 0380
        gbc.setState(0x6b6a, 0xd53e, 0xe070, 0xf36, 0x69ee, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0x6b6a, { 0x80 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x6b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0381
        gbc.setState(0x6082, 0xa64e, 0x2b90, 0x19c1, 0xe436, 0x31b9, 0x1, 0x0);
        gbc.writeMem(0x6082, { 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0382
        gbc.setState(0x78d0, 0xc721, 0xa220, 0x83e1, 0x5235, 0x24a5, 0x1, 0x1);
        gbc.writeMem(0x78d0, { 0x80 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc721, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0383
        gbc.setState(0x62b9, 0xff59, 0xc2c0, 0x110f, 0x6594, 0xf5be, 0x1, 0x0);
        gbc.writeMem(0x62b9, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x62ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0384
        gbc.setState(0x6847, 0x16c4, 0xc300, 0x8200, 0xebf9, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0x6847, { 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0385
        gbc.setState(0x8245, 0x37cb, 0x2230, 0xa8ab, 0x829b, 0xdf0c, 0x1, 0x1);
        gbc.writeMem(0x8245, { 0x80 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8245));
        // 80 0386
        gbc.setState(0x4165, 0xc3a6, 0xd100, 0xef1e, 0x62fe, 0xd15a, 0x1, 0x1);
        gbc.writeMem(0x4165, { 0x80 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc3a6, gbc.sp());
        EXPECT(0x4166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0387
        gbc.setState(0xaa7f, 0x2687, 0x7f20, 0x6aaa, 0x9b54, 0x2954, 0x1, 0x0);
        gbc.writeMem(0xaa7f, { 0x80 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2687, gbc.sp());
        EXPECT(0xaa80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xaa7f));
        // 80 0388
        gbc.setState(0x393e, 0xac4, 0x1430, 0xf880, 0xb30b, 0x1834, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xac4, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0389
        gbc.setState(0x9c32, 0x8794, 0x87a0, 0xe996, 0x20, 0xed02, 0x1, 0x1);
        gbc.writeMem(0x9c32, { 0x80 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0x9c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9c32));
        // 80 038A
        gbc.setState(0x8d73, 0xcb52, 0xb600, 0xec78, 0x2bc4, 0x7dee, 0x1, 0x1);
        gbc.writeMem(0x8d73, { 0x80 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcb52, gbc.sp());
        EXPECT(0x8d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8d73));
        // 80 038B
        gbc.setState(0xb80f, 0xa21a, 0x3170, 0x39c8, 0x4731, 0xda32, 0x0, 0x1);
        gbc.writeMem(0xb80f, { 0x80 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa21a, gbc.sp());
        EXPECT(0xb810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb80f));
        // 80 038C
        gbc.setState(0x1e22, 0x4b42, 0xbce0, 0x76cd, 0xdef, 0x39e5, 0x1, 0x1);
        gbc.writeMem(0x1e22, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4b42, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 038D
        gbc.setState(0xbb76, 0xcaf4, 0xade0, 0x207c, 0xef28, 0x200b, 0x1, 0x0);
        gbc.writeMem(0xbb76, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcaf4, gbc.sp());
        EXPECT(0xbb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbb76));
        // 80 038E
        gbc.setState(0xe528, 0xcd51, 0xd760, 0x4885, 0xbd94, 0x730f, 0x0, 0x0);
        gbc.writeMem(0xe528, { 0x80 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe528));
        // 80 038F
        gbc.setState(0x2558, 0xd88d, 0xdac0, 0xc195, 0xb6ba, 0x9344, 0x0, 0x0);
        gbc.writeMem(0x2558, { 0x80 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd88d, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0390
        gbc.setState(0x8f3d, 0x3142, 0xcba0, 0xa2b6, 0xf0b9, 0xa5f, 0x1, 0x1);
        gbc.writeMem(0x8f3d, { 0x80 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x8f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8f3d));
        // 80 0391
        gbc.setState(0x7c64, 0xbf77, 0xe900, 0xabe1, 0x177f, 0x886f, 0x0, 0x0);
        gbc.writeMem(0x7c64, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbf77, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0393
        gbc.setState(0x7758, 0x4772, 0xec40, 0x8df4, 0x5d64, 0x3603, 0x0, 0x1);
        gbc.writeMem(0x7758, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4772, gbc.sp());
        EXPECT(0x7759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 0395
        gbc.setState(0x9e9d, 0x3fd0, 0x5ed0, 0xd496, 0xb029, 0x69c7, 0x0, 0x1);
        gbc.writeMem(0x9e9d, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3fd0, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9e9d));
        // 80 0396
        gbc.setState(0xd921, 0xde5e, 0xa4a0, 0x6179, 0x412e, 0x7695, 0x0, 0x0);
        gbc.writeMem(0xd921, { 0x80 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0xd922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd921));
        // 80 0397
        gbc.setState(0xa855, 0x6002, 0x5e70, 0xa452, 0x830b, 0xdfdc, 0x1, 0x0);
        gbc.writeMem(0xa855, { 0x80 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6002, gbc.sp());
        EXPECT(0xa856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa855));
        // 80 0398
        gbc.setState(0x6740, 0x5e1e, 0x7dc0, 0x6bb, 0x2908, 0xb011, 0x1, 0x0);
        gbc.writeMem(0x6740, { 0x80 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e1e, gbc.sp());
        EXPECT(0x6741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 0399
        gbc.setState(0xc173, 0x8c02, 0xed60, 0x5a6c, 0x3c7b, 0x8df4, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0x80 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8c02, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc173));
        // 80 039A
        gbc.setState(0x6038, 0x921c, 0x6100, 0x2af5, 0x831, 0x5def, 0x0, 0x1);
        gbc.writeMem(0x6038, { 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x921c, gbc.sp());
        EXPECT(0x6039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 039B
        gbc.setState(0x8355, 0x7de, 0x1670, 0x2c7e, 0x3b7, 0x862a, 0x1, 0x0);
        gbc.writeMem(0x8355, { 0x80 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0x8356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8355));
        // 80 039C
        gbc.setState(0x1ffb, 0xc536, 0x6ac0, 0xa2bd, 0xc393, 0xa42b, 0x0, 0x0);
        gbc.writeMem(0x1ffb, { 0x80 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0x1ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 039D
        gbc.setState(0x4aa1, 0x6491, 0x32a0, 0x2a17, 0x96ce, 0x9d7b, 0x1, 0x0);
        gbc.writeMem(0x4aa1, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x4aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 039E
        gbc.setState(0xe609, 0x2488, 0x16f0, 0x1c92, 0x11e6, 0x8622, 0x1, 0x0);
        gbc.writeMem(0xe609, { 0x80 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe609));
        // 80 039F
        gbc.setState(0x6332, 0x1c66, 0x7890, 0x6908, 0x1285, 0xd340, 0x1, 0x0);
        gbc.writeMem(0x6332, { 0x80 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03A0
        gbc.setState(0xb41, 0xecbe, 0x6c00, 0x7ca, 0x1260, 0x2aa5, 0x1, 0x0);
        gbc.writeMem(0xb41, { 0x80 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xecbe, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03A1
        gbc.setState(0x8a6a, 0x7a28, 0xc00, 0xdc33, 0x27fb, 0xc53f, 0x1, 0x0);
        gbc.writeMem(0x8a6a, { 0x80 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8a6a));
        // 80 03A2
        gbc.setState(0x6837, 0x61fb, 0x7900, 0x5673, 0x6546, 0x8aae, 0x0, 0x1);
        gbc.writeMem(0x6837, { 0x80 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0x6838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03A3
        gbc.setState(0xef48, 0x70cf, 0x8150, 0xbb32, 0x426d, 0x31f, 0x1, 0x1);
        gbc.writeMem(0xef48, { 0x80 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x70cf, gbc.sp());
        EXPECT(0xef49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xef48));
        // 80 03A4
        gbc.setState(0xa06d, 0xa67d, 0xba50, 0x7934, 0x5112, 0x63f9, 0x0, 0x1);
        gbc.writeMem(0xa06d, { 0x80 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0xa06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa06d));
        // 80 03A5
        gbc.setState(0x1238, 0x1a21, 0xe960, 0xca7b, 0xc2d, 0xce28, 0x0, 0x0);
        gbc.writeMem(0x1238, { 0x80 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03A7
        gbc.setState(0x9f8d, 0x10e7, 0xc890, 0x63, 0x41f1, 0x93f6, 0x1, 0x0);
        gbc.writeMem(0x9f8d, { 0x80 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x10e7, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9f8d));
        // 80 03A8
        gbc.setState(0x903b, 0xa2bb, 0x2e10, 0x5b2c, 0x24a6, 0x1b17, 0x1, 0x1);
        gbc.writeMem(0x903b, { 0x80 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0x903c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x903b));
        // 80 03A9
        gbc.setState(0x449, 0x2377, 0xbec0, 0x9f2a, 0x40ee, 0x5bde, 0x1, 0x1);
        gbc.writeMem(0x449, { 0x80 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2377, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03AA
        gbc.setState(0x38f6, 0x5593, 0x19f0, 0xab1b, 0xd3a, 0x19c1, 0x1, 0x1);
        gbc.writeMem(0x38f6, { 0x80 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03AB
        gbc.setState(0x864b, 0x420c, 0x9550, 0xaf68, 0x856c, 0x8b6d, 0x1, 0x1);
        gbc.writeMem(0x864b, { 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x420c, gbc.sp());
        EXPECT(0x864c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x864b));
        // 80 03AC
        gbc.setState(0x5c80, 0x6780, 0x8030, 0x8900, 0x74ad, 0xb5b0, 0x0, 0x0);
        gbc.writeMem(0x5c80, { 0x80 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6780, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03AD
        gbc.setState(0x94f1, 0xc48e, 0xc6e0, 0xd08f, 0xc471, 0x2b28, 0x0, 0x1);
        gbc.writeMem(0x94f1, { 0x80 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc48e, gbc.sp());
        EXPECT(0x94f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x94f1));
        // 80 03AE
        gbc.setState(0x4911, 0xb1f0, 0x1b0, 0xf9ed, 0x36e7, 0x5564, 0x1, 0x1);
        gbc.writeMem(0x4911, { 0x80 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb1f0, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03AF
        gbc.setState(0xcf4a, 0xb482, 0x4070, 0x3909, 0xd4a5, 0x7e1c, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf4a));
        // 80 03B0
        gbc.setState(0x1730, 0x50ca, 0x1a40, 0x20d9, 0xa680, 0xead0, 0x0, 0x0);
        gbc.writeMem(0x1730, { 0x80 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x50ca, gbc.sp());
        EXPECT(0x1731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03B1
        gbc.setState(0x621a, 0x5ab2, 0x2a80, 0x6a2e, 0xdffe, 0xcce4, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5ab2, gbc.sp());
        EXPECT(0x621b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03B2
        gbc.setState(0x50fd, 0xbd19, 0x6f80, 0xf7c2, 0x112c, 0xa78e, 0x0, 0x0);
        gbc.writeMem(0x50fd, { 0x80 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbd19, gbc.sp());
        EXPECT(0x50fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03B3
        gbc.setState(0x8790, 0x52be, 0x1270, 0x9fc5, 0xd63d, 0x6de9, 0x0, 0x0);
        gbc.writeMem(0x8790, { 0x80 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x8791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8790));
        // 80 03B4
        gbc.setState(0x8998, 0x9e64, 0x2f90, 0x7c76, 0x325e, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0x8998, { 0x80 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9e64, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8998));
        // 80 03B5
        gbc.setState(0x83ff, 0x4ea2, 0xc8a0, 0x5104, 0xb4d, 0x6db4, 0x1, 0x1);
        gbc.writeMem(0x83ff, { 0x80 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x8400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x83ff));
        // 80 03B6
        gbc.setState(0x6782, 0x643b, 0x4bc0, 0xd2e3, 0xd518, 0xdfb9, 0x1, 0x1);
        gbc.writeMem(0x6782, { 0x80 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x6783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03B7
        gbc.setState(0xe949, 0xe2b3, 0x82b0, 0xe9cf, 0xe0f0, 0xe0f3, 0x1, 0x0);
        gbc.writeMem(0xe949, { 0x80 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe2b3, gbc.sp());
        EXPECT(0xe94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe949));
        // 80 03B8
        gbc.setState(0x5a0e, 0x67c5, 0xc730, 0x631d, 0x54bd, 0x6645, 0x0, 0x0);
        gbc.writeMem(0x5a0e, { 0x80 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03B9
        gbc.setState(0x76a3, 0x318d, 0xeb80, 0x937d, 0x9a65, 0x7707, 0x1, 0x0);
        gbc.writeMem(0x76a3, { 0x80 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x318d, gbc.sp());
        EXPECT(0x76a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03BA
        gbc.setState(0x8cfa, 0x318f, 0x1f00, 0x5daf, 0x7d9a, 0x311e, 0x1, 0x1);
        gbc.writeMem(0x8cfa, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x318f, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8cfa));
        // 80 03BB
        gbc.setState(0x4957, 0x7ee0, 0x4c10, 0x6c80, 0xad0a, 0x7c84, 0x1, 0x0);
        gbc.writeMem(0x4957, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ee0, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03BC
        gbc.setState(0x8463, 0x5f7c, 0xadb0, 0x416c, 0x7ac2, 0x2a57, 0x1, 0x0);
        gbc.writeMem(0x8463, { 0x80 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5f7c, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8463));
        // 80 03BD
        gbc.setState(0xded0, 0xb12c, 0x93f0, 0x1724, 0x625f, 0x4fea, 0x0, 0x0);
        gbc.writeMem(0xded0, { 0x80 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xded0));
        // 80 03BF
        gbc.setState(0xe008, 0x4e4b, 0x92f0, 0xfc17, 0x98e2, 0x38e, 0x0, 0x1);
        gbc.writeMem(0xe008, { 0x80 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4e4b, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe008));
        // 80 03C0
        gbc.setState(0xcbae, 0x758, 0x5e20, 0x9f, 0x638a, 0x3933, 0x1, 0x0);
        gbc.writeMem(0xcbae, { 0x80 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0xcbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcbae));
        // 80 03C1
        gbc.setState(0x3b90, 0x5e31, 0x9d20, 0x1428, 0x2b23, 0x8d74, 0x1, 0x1);
        gbc.writeMem(0x3b90, { 0x80 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e31, gbc.sp());
        EXPECT(0x3b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03C2
        gbc.setState(0x1a2d, 0x9bff, 0xd410, 0xd309, 0x764b, 0x817c, 0x1, 0x1);
        gbc.writeMem(0x1a2d, { 0x80 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03C3
        gbc.setState(0x1b96, 0x1d4e, 0xd9e0, 0x4f8c, 0x463c, 0x8802, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0x80 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03C4
        gbc.setState(0x5635, 0x3227, 0xab20, 0xd11d, 0x7db8, 0xebb3, 0x1, 0x0);
        gbc.writeMem(0x5635, { 0x80 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03C5
        gbc.setState(0x6f2d, 0x339f, 0xe00, 0xbf3b, 0xae93, 0x8a5, 0x0, 0x0);
        gbc.writeMem(0x6f2d, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x339f, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03C6
        gbc.setState(0xa500, 0xb6a0, 0x6d80, 0xf2f9, 0x91d2, 0xaa4b, 0x1, 0x1);
        gbc.writeMem(0xa500, { 0x80 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0xa501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa500));
        // 80 03C7
        gbc.setState(0xc986, 0xb167, 0xfa00, 0xcd5c, 0xaab3, 0x2cc5, 0x1, 0x1);
        gbc.writeMem(0xc986, { 0x80 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc986));
        // 80 03C8
        gbc.setState(0x9afa, 0xfa34, 0x4d90, 0x47b3, 0xdde0, 0x644c, 0x1, 0x0);
        gbc.writeMem(0x9afa, { 0x80 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfa34, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9afa));
        // 80 03C9
        gbc.setState(0x2612, 0xa13a, 0xc950, 0xd5dc, 0xdf42, 0x211c, 0x1, 0x1);
        gbc.writeMem(0x2612, { 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa13a, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03CA
        gbc.setState(0x3d74, 0xa34f, 0xa440, 0xc878, 0x3607, 0x4c6e, 0x0, 0x0);
        gbc.writeMem(0x3d74, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa34f, gbc.sp());
        EXPECT(0x3d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03CB
        gbc.setState(0x541c, 0x6fcc, 0x590, 0x6edf, 0x7342, 0x5d20, 0x1, 0x0);
        gbc.writeMem(0x541c, { 0x80 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6fcc, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03CC
        gbc.setState(0x65b4, 0x469b, 0x2540, 0xd7ce, 0x811e, 0x820, 0x0, 0x1);
        gbc.writeMem(0x65b4, { 0x80 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x469b, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03CD
        gbc.setState(0x1dd9, 0x51b1, 0xeb60, 0x4b8f, 0x80ad, 0x3ed7, 0x0, 0x0);
        gbc.writeMem(0x1dd9, { 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03CE
        gbc.setState(0x55e5, 0xf034, 0xbd70, 0x8c7e, 0xa873, 0x64a3, 0x1, 0x0);
        gbc.writeMem(0x55e5, { 0x80 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0x55e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03CF
        gbc.setState(0xc0f8, 0x54c2, 0x9b90, 0x3228, 0x8bca, 0x151a, 0x0, 0x0);
        gbc.writeMem(0xc0f8, { 0x80 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x54c2, gbc.sp());
        EXPECT(0xc0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc0f8));
        // 80 03D0
        gbc.setState(0x2ba7, 0x80a9, 0xbd0, 0x6f04, 0x7d1, 0xeabb, 0x0, 0x0);
        gbc.writeMem(0x2ba7, { 0x80 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0x2ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03D1
        gbc.setState(0x61fb, 0x40c8, 0x82b0, 0x34fc, 0xbf63, 0xd461, 0x1, 0x0);
        gbc.writeMem(0x61fb, { 0x80 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03D2
        gbc.setState(0x6a9e, 0xd039, 0x7070, 0xf8f2, 0xc7e, 0x5919, 0x1, 0x0);
        gbc.writeMem(0x6a9e, { 0x80 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0x6a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03D3
        gbc.setState(0xb1b6, 0x2389, 0xf1f0, 0x9bc8, 0x111b, 0x5270, 0x1, 0x1);
        gbc.writeMem(0xb1b6, { 0x80 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2389, gbc.sp());
        EXPECT(0xb1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb1b6));
        // 80 03D4
        gbc.setState(0x43d8, 0x6035, 0x32e0, 0x864a, 0xc7c9, 0xeb7e, 0x1, 0x0);
        gbc.writeMem(0x43d8, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6035, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03D5
        gbc.setState(0x30e5, 0x191, 0xc070, 0x563d, 0x2061, 0xd95, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0x80 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x191, gbc.sp());
        EXPECT(0x30e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03D7
        gbc.setState(0xab9e, 0xdddc, 0x61b0, 0x77b0, 0x241f, 0xcc84, 0x0, 0x1);
        gbc.writeMem(0xab9e, { 0x80 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0xab9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xab9e));
        // 80 03D8
        gbc.setState(0x76f9, 0x3295, 0x6180, 0x301f, 0x7398, 0xdc35, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0x80 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x76fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03D9
        gbc.setState(0x5e07, 0x650b, 0xbd20, 0xd09d, 0xbce4, 0xf9e8, 0x0, 0x1);
        gbc.writeMem(0x5e07, { 0x80 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x650b, gbc.sp());
        EXPECT(0x5e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03DA
        gbc.setState(0x852, 0xe559, 0x340, 0x3d04, 0x50d1, 0x15bd, 0x0, 0x1);
        gbc.writeMem(0x852, { 0x80 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe559, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03DC
        gbc.setState(0x682f, 0x5548, 0xa420, 0xfa1f, 0xae2d, 0xe0b8, 0x1, 0x1);
        gbc.writeMem(0x682f, { 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x6830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03DD
        gbc.setState(0xede3, 0x9297, 0x2e20, 0x77e4, 0xf965, 0xf27d, 0x1, 0x0);
        gbc.writeMem(0xede3, { 0x80 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9297, gbc.sp());
        EXPECT(0xede4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xede3));
        // 80 03DE
        gbc.setState(0xdf28, 0x79a9, 0xbfc0, 0xf59b, 0x136, 0x8965, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0x80 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x79a9, gbc.sp());
        EXPECT(0xdf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xdf28));
        // 80 03DF
        gbc.setState(0xa679, 0x510b, 0xa940, 0x64f3, 0xb291, 0xf321, 0x0, 0x1);
        gbc.writeMem(0xa679, { 0x80 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa679));
        // 80 03E0
        gbc.setState(0xe18a, 0xc38a, 0x6a60, 0x5239, 0x1424, 0x7f0a, 0x1, 0x0);
        gbc.writeMem(0xe18a, { 0x80 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc38a, gbc.sp());
        EXPECT(0xe18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xe18a));
        // 80 03E2
        gbc.setState(0x27be, 0xb991, 0xbf90, 0xceca, 0x1327, 0x8416, 0x0, 0x0);
        gbc.writeMem(0x27be, { 0x80 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb991, gbc.sp());
        EXPECT(0x27bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03E3
        gbc.setState(0x376b, 0x4434, 0x7a00, 0x43ba, 0xbd7c, 0xc7b3, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0x80 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4434, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 80 03E4
        gbc.setState(0xd2b0, 0xc583, 0x1050, 0x8b74, 0xa131, 0x3179, 0x0, 0x0);
        gbc.writeMem(0xd2b0, { 0x80 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0xd2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd2b0));
        // 80 03E5
        gbc.setState(0x4803, 0x6e5d, 0xe9f0, 0x69aa, 0x6740, 0xae, 0x1, 0x0);
        gbc.writeMem(0x4803, { 0x80 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6e5d, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03E6
        gbc.setState(0xc07, 0xc0e4, 0x4670, 0xc088, 0xefe4, 0x2563, 0x0, 0x1);
        gbc.writeMem(0xc07, { 0x80 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc0e4, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 80 03E7
        gbc.setState(0x54d2, 0x27f6, 0x94f0, 0x566c, 0x5184, 0x3698, 0x0, 0x0);
        gbc.writeMem(0x54d2, { 0x80 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0x54d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
