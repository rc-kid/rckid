    TEST(gbcemu, opcode_cb_f9) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F9 0000
        gbc.setState(0xc499, 0x3527, 0x7fd0, 0x38de, 0xcb93, 0xebf5, 0x1, 0x0);
        gbc.writeMem(0xc499, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0xc49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc499));
        EXPECT(0xf9, gbc.readMem(0xc49a));
        // CB F9 0001
        gbc.setState(0x23f, 0x7e81, 0x1a20, 0xa2d8, 0x75c6, 0xcedc, 0x1, 0x1);
        gbc.writeMem(0x23f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7e81, gbc.sp());
        EXPECT(0x241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0002
        gbc.setState(0xd1ff, 0xaaa5, 0xba60, 0x1e32, 0x176, 0x5d27, 0x0, 0x1);
        gbc.writeMem(0xd1ff, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ff));
        EXPECT(0xf9, gbc.readMem(0xd200));
        // CB F9 0003
        gbc.setState(0x543f, 0x9aa8, 0x5f20, 0xf800, 0x716, 0x4ad9, 0x1, 0x0);
        gbc.writeMem(0x543f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0x5441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0004
        gbc.setState(0x4d6a, 0xf472, 0x1810, 0x2ecc, 0x85b1, 0x6a53, 0x0, 0x0);
        gbc.writeMem(0x4d6a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0005
        gbc.setState(0x6eef, 0x7b8, 0x7260, 0x58da, 0xca3c, 0xd752, 0x1, 0x0);
        gbc.writeMem(0x6eef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x6ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0006
        gbc.setState(0xe8d0, 0xe236, 0xefa0, 0x5a0e, 0x3e51, 0xbad6, 0x1, 0x0);
        gbc.writeMem(0xe8d0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe236, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d0));
        EXPECT(0xf9, gbc.readMem(0xe8d1));
        // CB F9 0007
        gbc.setState(0x880c, 0x6fc8, 0x5430, 0xe932, 0x3414, 0x69a7, 0x1, 0x1);
        gbc.writeMem(0x880c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6fc8, gbc.sp());
        EXPECT(0x880e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880c));
        EXPECT(0xf9, gbc.readMem(0x880d));
        // CB F9 0008
        gbc.setState(0x5300, 0x58f6, 0xe00, 0x4338, 0xf661, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0x5300, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0009
        gbc.setState(0xcee8, 0x9806, 0xb0e0, 0xd3c8, 0x6ba, 0xfc9b, 0x1, 0x1);
        gbc.writeMem(0xcee8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9806, gbc.sp());
        EXPECT(0xceea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee8));
        EXPECT(0xf9, gbc.readMem(0xcee9));
        // CB F9 000B
        gbc.setState(0xb0f8, 0x6560, 0xe8b0, 0x82a, 0x8b36, 0x68d3, 0x1, 0x1);
        gbc.writeMem(0xb0f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6560, gbc.sp());
        EXPECT(0xb0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f8));
        EXPECT(0xf9, gbc.readMem(0xb0f9));
        // CB F9 000D
        gbc.setState(0x5056, 0x7178, 0xd650, 0x83c1, 0x6c4c, 0xf89d, 0x0, 0x1);
        gbc.writeMem(0x5056, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7178, gbc.sp());
        EXPECT(0x5058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 000E
        gbc.setState(0x25e4, 0xe13, 0x23f0, 0x271b, 0xc520, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x25e4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe13, gbc.sp());
        EXPECT(0x25e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0010
        gbc.setState(0x87d3, 0x9c7, 0x2730, 0x69d0, 0xcca8, 0x63a8, 0x1, 0x1);
        gbc.writeMem(0x87d3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d3));
        EXPECT(0xf9, gbc.readMem(0x87d4));
        // CB F9 0011
        gbc.setState(0x58e7, 0x9cb5, 0xf80, 0xad1e, 0xdc44, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0x58e7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9cb5, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0012
        gbc.setState(0x856d, 0xe62a, 0xc540, 0x962a, 0x829a, 0x4cc8, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe62a, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856d));
        EXPECT(0xf9, gbc.readMem(0x856e));
        // CB F9 0013
        gbc.setState(0xb058, 0x5d69, 0x4420, 0x7a32, 0xe7fa, 0x9bda, 0x1, 0x0);
        gbc.writeMem(0xb058, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5d69, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb058));
        EXPECT(0xf9, gbc.readMem(0xb059));
        // CB F9 0014
        gbc.setState(0xbd76, 0x3b22, 0x7700, 0x4d98, 0xc33f, 0xe9f3, 0x1, 0x1);
        gbc.writeMem(0xbd76, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0xbd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd76));
        EXPECT(0xf9, gbc.readMem(0xbd77));
        // CB F9 0015
        gbc.setState(0x1818, 0x7184, 0x5a00, 0x9cec, 0xc024, 0x39c2, 0x0, 0x0);
        gbc.writeMem(0x1818, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7184, gbc.sp());
        EXPECT(0x181a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0016
        gbc.setState(0x5119, 0x6ec1, 0xec60, 0x61ee, 0x28b2, 0x5874, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6ec1, gbc.sp());
        EXPECT(0x511b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0017
        gbc.setState(0x41c3, 0x28c4, 0xaac0, 0x38be, 0x8a82, 0xf5b9, 0x1, 0x1);
        gbc.writeMem(0x41c3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x28c4, gbc.sp());
        EXPECT(0x41c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0018
        gbc.setState(0x5336, 0x905a, 0x8d50, 0x6103, 0x8c7d, 0x31ac, 0x1, 0x1);
        gbc.writeMem(0x5336, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x905a, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0019
        gbc.setState(0x91ad, 0x5db2, 0x9440, 0xec3c, 0x9d05, 0xbc6f, 0x1, 0x1);
        gbc.writeMem(0x91ad, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ad));
        EXPECT(0xf9, gbc.readMem(0x91ae));
        // CB F9 001A
        gbc.setState(0x6646, 0x717a, 0x21a0, 0x9a53, 0x50c3, 0xc589, 0x1, 0x1);
        gbc.writeMem(0x6646, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x717a, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 001B
        gbc.setState(0x468d, 0x9439, 0xf640, 0x320c, 0x79f9, 0x9698, 0x1, 0x1);
        gbc.writeMem(0x468d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x468f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 001C
        gbc.setState(0x447, 0xe00d, 0xf580, 0x541a, 0x1dc6, 0xc0f7, 0x0, 0x1);
        gbc.writeMem(0x447, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 001D
        gbc.setState(0x1a8e, 0xa678, 0x4c00, 0xb0d8, 0x768a, 0xb58a, 0x1, 0x0);
        gbc.writeMem(0x1a8e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa678, gbc.sp());
        EXPECT(0x1a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 001E
        gbc.setState(0xded6, 0x383d, 0x6670, 0xf159, 0x4295, 0x22e7, 0x0, 0x0);
        gbc.writeMem(0xded6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0xded8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded6));
        EXPECT(0xf9, gbc.readMem(0xded7));
        // CB F9 0020
        gbc.setState(0x714f, 0xc37e, 0xc260, 0x248b, 0x8469, 0xcceb, 0x0, 0x1);
        gbc.writeMem(0x714f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0x7151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0021
        gbc.setState(0x3869, 0x4ece, 0xe520, 0x666c, 0x40f6, 0x49fa, 0x0, 0x0);
        gbc.writeMem(0x3869, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4ece, gbc.sp());
        EXPECT(0x386b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0022
        gbc.setState(0x4c07, 0xa015, 0xad00, 0xd1e6, 0xbac2, 0x361f, 0x0, 0x0);
        gbc.writeMem(0x4c07, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0023
        gbc.setState(0x2b55, 0x8142, 0x5a70, 0x15ee, 0x3d1e, 0x601e, 0x1, 0x0);
        gbc.writeMem(0x2b55, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8142, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0024
        gbc.setState(0x8e94, 0x1c0c, 0xa3f0, 0x6b6c, 0x571a, 0x7775, 0x1, 0x1);
        gbc.writeMem(0x8e94, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1c0c, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e94));
        EXPECT(0xf9, gbc.readMem(0x8e95));
        // CB F9 0025
        gbc.setState(0x6765, 0xd399, 0x3950, 0x84af, 0x5cfd, 0xd8f4, 0x1, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0026
        gbc.setState(0x59b9, 0x3873, 0x5bc0, 0x912, 0x6a59, 0xf5f2, 0x1, 0x1);
        gbc.writeMem(0x59b9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0027
        gbc.setState(0xfb, 0x1de3, 0x3ea0, 0x4488, 0x9ee0, 0x7f72, 0x0, 0x0);
        gbc.writeMem(0xfb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1de3, gbc.sp());
        EXPECT(0xfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0028
        gbc.setState(0xe55b, 0xadaa, 0x98b0, 0x81b0, 0xa7be, 0x8401, 0x1, 0x0);
        gbc.writeMem(0xe55b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xadaa, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55b));
        EXPECT(0xf9, gbc.readMem(0xe55c));
        // CB F9 0029
        gbc.setState(0xe42d, 0x825b, 0xfc60, 0xfaf2, 0xcec1, 0xc9ca, 0x0, 0x0);
        gbc.writeMem(0xe42d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0xe42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42d));
        EXPECT(0xf9, gbc.readMem(0xe42e));
        // CB F9 002A
        gbc.setState(0x97d, 0xb965, 0x8040, 0xc5e5, 0x1b29, 0x4076, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb965, gbc.sp());
        EXPECT(0x97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 002C
        gbc.setState(0x7785, 0x826a, 0x7780, 0x9744, 0x9f90, 0x2132, 0x0, 0x1);
        gbc.writeMem(0x7785, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x826a, gbc.sp());
        EXPECT(0x7787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 002D
        gbc.setState(0xaf12, 0x6b7f, 0xd590, 0x8ae0, 0xbb8, 0xbc33, 0x0, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6b7f, gbc.sp());
        EXPECT(0xaf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf12));
        EXPECT(0xf9, gbc.readMem(0xaf13));
        // CB F9 002E
        gbc.setState(0x860a, 0x849c, 0xe900, 0x99bd, 0x502d, 0x2573, 0x1, 0x0);
        gbc.writeMem(0x860a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x849c, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860a));
        EXPECT(0xf9, gbc.readMem(0x860b));
        // CB F9 002F
        gbc.setState(0xae3a, 0x29a2, 0xc4c0, 0xac73, 0x71fc, 0x1aca, 0x1, 0x1);
        gbc.writeMem(0xae3a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29a2, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3a));
        EXPECT(0xf9, gbc.readMem(0xae3b));
        // CB F9 0030
        gbc.setState(0x700d, 0xfc0e, 0x3a20, 0x3bea, 0x8a3e, 0xd369, 0x0, 0x1);
        gbc.writeMem(0x700d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfc0e, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0031
        gbc.setState(0x4ee4, 0x3ebd, 0xdee0, 0x4501, 0xe3e4, 0xe8d1, 0x1, 0x1);
        gbc.writeMem(0x4ee4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0x4ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0032
        gbc.setState(0x4249, 0xd042, 0x8b30, 0xee, 0xdbd2, 0xde65, 0x1, 0x0);
        gbc.writeMem(0x4249, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x424b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0033
        gbc.setState(0xaabe, 0xf662, 0xc9e0, 0x2623, 0xa794, 0x628d, 0x1, 0x1);
        gbc.writeMem(0xaabe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabe));
        EXPECT(0xf9, gbc.readMem(0xaabf));
        // CB F9 0034
        gbc.setState(0x414, 0xb1fd, 0xfa0, 0xd91b, 0xcb98, 0xf34f, 0x1, 0x0);
        gbc.writeMem(0x414, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0036
        gbc.setState(0x82a3, 0x7d7, 0x8ff0, 0xefa6, 0xac8d, 0x36bd, 0x0, 0x0);
        gbc.writeMem(0x82a3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7d7, gbc.sp());
        EXPECT(0x82a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a3));
        EXPECT(0xf9, gbc.readMem(0x82a4));
        // CB F9 0037
        gbc.setState(0x9f6b, 0x228e, 0x2de0, 0x3ae6, 0xfa00, 0xc80b, 0x0, 0x0);
        gbc.writeMem(0x9f6b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x228e, gbc.sp());
        EXPECT(0x9f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6b));
        EXPECT(0xf9, gbc.readMem(0x9f6c));
        // CB F9 0038
        gbc.setState(0x9ec9, 0x12a, 0xd5f0, 0x3914, 0x93b2, 0xf1b4, 0x0, 0x1);
        gbc.writeMem(0x9ec9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x12a, gbc.sp());
        EXPECT(0x9ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec9));
        EXPECT(0xf9, gbc.readMem(0x9eca));
        // CB F9 0039
        gbc.setState(0x1961, 0xd2af, 0x3500, 0x348a, 0xcca9, 0x207f, 0x0, 0x1);
        gbc.writeMem(0x1961, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd2af, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 003A
        gbc.setState(0xe925, 0xbe3a, 0xdf00, 0x69ec, 0xd0f8, 0xd061, 0x0, 0x1);
        gbc.writeMem(0xe925, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe925));
        EXPECT(0xf9, gbc.readMem(0xe926));
        // CB F9 003B
        gbc.setState(0xc4a7, 0x705e, 0xdfb0, 0x18e5, 0xe7ab, 0x8a95, 0x1, 0x0);
        gbc.writeMem(0xc4a7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x705e, gbc.sp());
        EXPECT(0xc4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a7));
        EXPECT(0xf9, gbc.readMem(0xc4a8));
        // CB F9 003C
        gbc.setState(0x4a18, 0x221d, 0x6050, 0xf006, 0xb38b, 0x971b, 0x0, 0x1);
        gbc.writeMem(0x4a18, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x221d, gbc.sp());
        EXPECT(0x4a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 003D
        gbc.setState(0x25a8, 0x4b14, 0xac40, 0xdf94, 0x6d66, 0xfdf4, 0x0, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4b14, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 003E
        gbc.setState(0x5228, 0x540a, 0x2a70, 0x105e, 0x130d, 0xe7d7, 0x1, 0x1);
        gbc.writeMem(0x5228, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0x522a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 003F
        gbc.setState(0xdf65, 0xa59a, 0x93d0, 0x20b6, 0x651b, 0xeee9, 0x1, 0x1);
        gbc.writeMem(0xdf65, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0xdf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf65));
        EXPECT(0xf9, gbc.readMem(0xdf66));
        // CB F9 0041
        gbc.setState(0x2bfc, 0x1ec5, 0x8fb0, 0x4221, 0x8c81, 0x780b, 0x1, 0x1);
        gbc.writeMem(0x2bfc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0x2bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0042
        gbc.setState(0x71bb, 0xdc24, 0x1cb0, 0xb2e5, 0xe3da, 0x28fd, 0x1, 0x1);
        gbc.writeMem(0x71bb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdc24, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0043
        gbc.setState(0x73d1, 0xca2e, 0x6330, 0x63a0, 0xc9c4, 0x7e0, 0x1, 0x0);
        gbc.writeMem(0x73d1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0044
        gbc.setState(0x8a3, 0x6330, 0x19f0, 0x361, 0x9d8e, 0x674d, 0x1, 0x1);
        gbc.writeMem(0x8a3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6330, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0045
        gbc.setState(0xc4c1, 0xb9fd, 0x5f10, 0xdd9a, 0xf7dd, 0xa86a, 0x0, 0x1);
        gbc.writeMem(0xc4c1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb9fd, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c1));
        EXPECT(0xf9, gbc.readMem(0xc4c2));
        // CB F9 0046
        gbc.setState(0x9b7b, 0x960d, 0xc000, 0xb7ed, 0xf882, 0x7d40, 0x0, 0x1);
        gbc.writeMem(0x9b7b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x960d, gbc.sp());
        EXPECT(0x9b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7b));
        EXPECT(0xf9, gbc.readMem(0x9b7c));
        // CB F9 0047
        gbc.setState(0x2644, 0x1d8b, 0x4820, 0xe212, 0xaf6f, 0xb34c, 0x1, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1d8b, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0048
        gbc.setState(0xb3cf, 0xf31c, 0x6920, 0x82fc, 0x89f8, 0x8d0b, 0x1, 0x1);
        gbc.writeMem(0xb3cf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf31c, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cf));
        EXPECT(0xf9, gbc.readMem(0xb3d0));
        // CB F9 0049
        gbc.setState(0x416b, 0xd15f, 0xfeb0, 0x617b, 0xe4c1, 0xf7c2, 0x0, 0x1);
        gbc.writeMem(0x416b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd15f, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 004A
        gbc.setState(0x6eda, 0x70c0, 0x6e70, 0xefec, 0x23ba, 0x5a49, 0x1, 0x0);
        gbc.writeMem(0x6eda, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 004B
        gbc.setState(0x9b8d, 0x3e3d, 0xd830, 0xf279, 0x159c, 0x627c, 0x1, 0x1);
        gbc.writeMem(0x9b8d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3e3d, gbc.sp());
        EXPECT(0x9b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8d));
        EXPECT(0xf9, gbc.readMem(0x9b8e));
        // CB F9 004C
        gbc.setState(0xa9db, 0xc3d1, 0x8650, 0x2184, 0x6d8f, 0xdf6e, 0x0, 0x0);
        gbc.writeMem(0xa9db, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0xa9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9db));
        EXPECT(0xf9, gbc.readMem(0xa9dc));
        // CB F9 004E
        gbc.setState(0xd7ce, 0x2ff9, 0x4300, 0x73d2, 0xa3e9, 0xb2ee, 0x0, 0x0);
        gbc.writeMem(0xd7ce, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ff9, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ce));
        EXPECT(0xf9, gbc.readMem(0xd7cf));
        // CB F9 004F
        gbc.setState(0xae01, 0x5b2d, 0xf780, 0x4fa8, 0xdb27, 0xab65, 0x0, 0x0);
        gbc.writeMem(0xae01, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5b2d, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae01));
        EXPECT(0xf9, gbc.readMem(0xae02));
        // CB F9 0050
        gbc.setState(0xa46d, 0x1856, 0xcf0, 0x581c, 0xc8fb, 0x51ca, 0x1, 0x0);
        gbc.writeMem(0xa46d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1856, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46d));
        EXPECT(0xf9, gbc.readMem(0xa46e));
        // CB F9 0052
        gbc.setState(0x1c03, 0x6138, 0x2cc0, 0x9be, 0x33c3, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x1c03, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0053
        gbc.setState(0xc6b7, 0x5f5, 0xa050, 0x46cf, 0xa4cd, 0x4915, 0x0, 0x0);
        gbc.writeMem(0xc6b7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b7));
        EXPECT(0xf9, gbc.readMem(0xc6b8));
        // CB F9 0054
        gbc.setState(0x43c4, 0xd28, 0xe6c0, 0x3111, 0x204f, 0x4610, 0x1, 0x1);
        gbc.writeMem(0x43c4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0x43c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0055
        gbc.setState(0x98bb, 0xd94f, 0xb1a0, 0x1ecc, 0x1f5b, 0x1770, 0x1, 0x0);
        gbc.writeMem(0x98bb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd94f, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0xf9, gbc.readMem(0x98bc));
        // CB F9 0056
        gbc.setState(0xbcba, 0xa83e, 0x4880, 0x7802, 0xde, 0xd5b, 0x1, 0x1);
        gbc.writeMem(0xbcba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa83e, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcba));
        EXPECT(0xf9, gbc.readMem(0xbcbb));
        // CB F9 0057
        gbc.setState(0x60c0, 0x7a92, 0xcbc0, 0x117f, 0x7385, 0xa0b7, 0x0, 0x0);
        gbc.writeMem(0x60c0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7a92, gbc.sp());
        EXPECT(0x60c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0058
        gbc.setState(0x1f37, 0xadc0, 0xd940, 0x6a0b, 0x2864, 0xe862, 0x0, 0x0);
        gbc.writeMem(0x1f37, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xadc0, gbc.sp());
        EXPECT(0x1f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0059
        gbc.setState(0xd80e, 0x2e26, 0x1a80, 0x866c, 0x2b5f, 0x8770, 0x0, 0x1);
        gbc.writeMem(0xd80e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2e26, gbc.sp());
        EXPECT(0xd810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80e));
        EXPECT(0xf9, gbc.readMem(0xd80f));
        // CB F9 005A
        gbc.setState(0x7193, 0x88cf, 0x8020, 0xf252, 0xfd2c, 0x2db6, 0x0, 0x1);
        gbc.writeMem(0x7193, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0x7195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 005B
        gbc.setState(0x8a2c, 0x55fc, 0x78e0, 0x1e13, 0x2fa1, 0x9c9d, 0x0, 0x1);
        gbc.writeMem(0x8a2c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2c));
        EXPECT(0xf9, gbc.readMem(0x8a2d));
        // CB F9 005C
        gbc.setState(0xcb45, 0x8afa, 0xf9e0, 0x8a8d, 0xcfd6, 0x173, 0x0, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8afa, gbc.sp());
        EXPECT(0xcb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb45));
        EXPECT(0xf9, gbc.readMem(0xcb46));
        // CB F9 005D
        gbc.setState(0x4c29, 0x573, 0x53c0, 0x8373, 0x10d9, 0x526b, 0x0, 0x0);
        gbc.writeMem(0x4c29, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x573, gbc.sp());
        EXPECT(0x4c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 005E
        gbc.setState(0x2b1e, 0xf503, 0xa300, 0xc00f, 0x2ca8, 0x4778, 0x0, 0x1);
        gbc.writeMem(0x2b1e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 005F
        gbc.setState(0xef3d, 0xeda2, 0xba80, 0xef4e, 0x5183, 0xa47a, 0x1, 0x1);
        gbc.writeMem(0xef3d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeda2, gbc.sp());
        EXPECT(0xef3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3d));
        EXPECT(0xf9, gbc.readMem(0xef3e));
        // CB F9 0060
        gbc.setState(0xc296, 0xf476, 0x40f0, 0x52f5, 0x27d5, 0x1e2c, 0x1, 0x0);
        gbc.writeMem(0xc296, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc296));
        EXPECT(0xf9, gbc.readMem(0xc297));
        // CB F9 0061
        gbc.setState(0xd69f, 0x61b6, 0xae30, 0xf600, 0x6a84, 0x258e, 0x1, 0x1);
        gbc.writeMem(0xd69f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0xd6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69f));
        EXPECT(0xf9, gbc.readMem(0xd6a0));
        // CB F9 0062
        gbc.setState(0xd5cc, 0x4ce2, 0x5130, 0x27a0, 0xf41a, 0xdba5, 0x1, 0x0);
        gbc.writeMem(0xd5cc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4ce2, gbc.sp());
        EXPECT(0xd5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cc));
        EXPECT(0xf9, gbc.readMem(0xd5cd));
        // CB F9 0063
        gbc.setState(0xc1de, 0xc727, 0x47b0, 0xf6ea, 0x9528, 0xedad, 0x1, 0x0);
        gbc.writeMem(0xc1de, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc727, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0xf9, gbc.readMem(0xc1df));
        // CB F9 0064
        gbc.setState(0xcaeb, 0xee21, 0x3bc0, 0xb913, 0x7656, 0x4b90, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaeb));
        EXPECT(0xf9, gbc.readMem(0xcaec));
        // CB F9 0065
        gbc.setState(0x6d6, 0x8ce, 0x8fd0, 0x4350, 0x5fd0, 0x912a, 0x0, 0x1);
        gbc.writeMem(0x6d6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8ce, gbc.sp());
        EXPECT(0x6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0066
        gbc.setState(0x27d6, 0x8202, 0x20a0, 0x9e93, 0x5b77, 0x93a, 0x0, 0x1);
        gbc.writeMem(0x27d6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0067
        gbc.setState(0x32f2, 0x29d3, 0x44a0, 0x650d, 0x3ccc, 0x4d07, 0x1, 0x0);
        gbc.writeMem(0x32f2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x29d3, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0068
        gbc.setState(0x94f6, 0x99d2, 0x9eb0, 0xc03c, 0x868c, 0x4886, 0x1, 0x0);
        gbc.writeMem(0x94f6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x99d2, gbc.sp());
        EXPECT(0x94f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f6));
        EXPECT(0xf9, gbc.readMem(0x94f7));
        // CB F9 0069
        gbc.setState(0x9a3f, 0x50c4, 0xd210, 0x63ea, 0x4783, 0x7692, 0x1, 0x0);
        gbc.writeMem(0x9a3f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0x9a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3f));
        EXPECT(0xf9, gbc.readMem(0x9a40));
        // CB F9 006A
        gbc.setState(0x5180, 0xf392, 0x8e10, 0xbdb2, 0xf03b, 0xdfb7, 0x1, 0x0);
        gbc.writeMem(0x5180, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf392, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 006B
        gbc.setState(0x6be3, 0x1af, 0xc540, 0x9e3d, 0x480e, 0x90d4, 0x0, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 006C
        gbc.setState(0x2d74, 0x1c98, 0xc010, 0x98bd, 0xc439, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x2d74, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 006D
        gbc.setState(0x49a0, 0x5978, 0xcc70, 0xa196, 0xb1e8, 0x1343, 0x0, 0x0);
        gbc.writeMem(0x49a0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 006E
        gbc.setState(0xe806, 0xbdd5, 0x2e80, 0x5f18, 0x681f, 0xc6d6, 0x1, 0x1);
        gbc.writeMem(0xe806, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbdd5, gbc.sp());
        EXPECT(0xe808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe806));
        EXPECT(0xf9, gbc.readMem(0xe807));
        // CB F9 006F
        gbc.setState(0x8a33, 0xb5ae, 0xe890, 0xbceb, 0xebca, 0xc0c1, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0xf9, gbc.readMem(0x8a34));
        // CB F9 0070
        gbc.setState(0x9597, 0x774b, 0xf0d0, 0x4d84, 0x37f2, 0x75e, 0x0, 0x0);
        gbc.writeMem(0x9597, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9597));
        EXPECT(0xf9, gbc.readMem(0x9598));
        // CB F9 0071
        gbc.setState(0x7f17, 0x5204, 0xf1a0, 0x4c7e, 0x9adc, 0xc2d3, 0x1, 0x0);
        gbc.writeMem(0x7f17, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x7f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0072
        gbc.setState(0xd5ee, 0xcc01, 0xa480, 0xd363, 0x3e1d, 0xb3fb, 0x0, 0x0);
        gbc.writeMem(0xd5ee, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0xd5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ee));
        EXPECT(0xf9, gbc.readMem(0xd5ef));
        // CB F9 0073
        gbc.setState(0x276d, 0xc470, 0xde70, 0x57e8, 0x551a, 0xa0b2, 0x1, 0x1);
        gbc.writeMem(0x276d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc470, gbc.sp());
        EXPECT(0x276f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0074
        gbc.setState(0xeede, 0x6655, 0x18e0, 0x6cad, 0xa95a, 0xf93, 0x0, 0x1);
        gbc.writeMem(0xeede, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6655, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeede));
        EXPECT(0xf9, gbc.readMem(0xeedf));
        // CB F9 0075
        gbc.setState(0x6bfc, 0x621d, 0x7600, 0x3700, 0x3a5e, 0x417e, 0x0, 0x1);
        gbc.writeMem(0x6bfc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x621d, gbc.sp());
        EXPECT(0x6bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0076
        gbc.setState(0x4e6d, 0xd2d9, 0x2c20, 0xfdbf, 0x1866, 0xc0b5, 0x0, 0x1);
        gbc.writeMem(0x4e6d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd2d9, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0077
        gbc.setState(0xd3c9, 0x3d79, 0xfd00, 0x202, 0x2a97, 0x7d9b, 0x0, 0x1);
        gbc.writeMem(0xd3c9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c9));
        EXPECT(0xf9, gbc.readMem(0xd3ca));
        // CB F9 0078
        gbc.setState(0x7b4, 0x50bf, 0x4e80, 0x7883, 0x2a1c, 0x825c, 0x0, 0x0);
        gbc.writeMem(0x7b4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x50bf, gbc.sp());
        EXPECT(0x7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0079
        gbc.setState(0x3541, 0x13a8, 0xfd20, 0x3b90, 0x74fb, 0x3bea, 0x0, 0x0);
        gbc.writeMem(0x3541, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x13a8, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 007A
        gbc.setState(0x7e3a, 0xf45f, 0x43c0, 0x741f, 0x7117, 0xe27f, 0x1, 0x0);
        gbc.writeMem(0x7e3a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 007B
        gbc.setState(0xd288, 0xf23e, 0x3b70, 0xd285, 0xfc7b, 0x58bc, 0x1, 0x0);
        gbc.writeMem(0xd288, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd288));
        EXPECT(0xf9, gbc.readMem(0xd289));
        // CB F9 007C
        gbc.setState(0x1e74, 0x1397, 0xf280, 0xfa50, 0x73, 0xd223, 0x1, 0x1);
        gbc.writeMem(0x1e74, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0x1e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 007D
        gbc.setState(0x62e5, 0xde80, 0xb140, 0xf682, 0x9e17, 0xad3b, 0x1, 0x0);
        gbc.writeMem(0x62e5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 007E
        gbc.setState(0x35cb, 0x2e42, 0x7900, 0xe621, 0xf741, 0xead, 0x1, 0x1);
        gbc.writeMem(0x35cb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 007F
        gbc.setState(0x9edf, 0xd819, 0x5b60, 0xfe6b, 0x520e, 0x13f, 0x1, 0x0);
        gbc.writeMem(0x9edf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd819, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9edf));
        EXPECT(0xf9, gbc.readMem(0x9ee0));
        // CB F9 0080
        gbc.setState(0x1a8c, 0x911a, 0x31a0, 0x4e96, 0x6b86, 0x1ef9, 0x1, 0x1);
        gbc.writeMem(0x1a8c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0081
        gbc.setState(0x1f74, 0x2126, 0x18d0, 0xe0e8, 0xa162, 0x5d4b, 0x1, 0x1);
        gbc.writeMem(0x1f74, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2126, gbc.sp());
        EXPECT(0x1f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0082
        gbc.setState(0x5bc2, 0xe3ab, 0xe7f0, 0x4bbf, 0xc32a, 0xfd9f, 0x0, 0x1);
        gbc.writeMem(0x5bc2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe3ab, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0083
        gbc.setState(0x74d1, 0xe444, 0x4560, 0xa24a, 0x6112, 0x3516, 0x1, 0x0);
        gbc.writeMem(0x74d1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe444, gbc.sp());
        EXPECT(0x74d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0084
        gbc.setState(0x42c, 0xcacd, 0xf780, 0x9dce, 0xa588, 0x6fff, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0085
        gbc.setState(0x93bc, 0xe740, 0xb5a0, 0x1ba0, 0xf494, 0x8cf6, 0x0, 0x0);
        gbc.writeMem(0x93bc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x93be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bc));
        EXPECT(0xf9, gbc.readMem(0x93bd));
        // CB F9 0086
        gbc.setState(0x5e5a, 0xc29b, 0x6770, 0xa9ee, 0x5ea0, 0xaac4, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc29b, gbc.sp());
        EXPECT(0x5e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0087
        gbc.setState(0xa768, 0x37d4, 0x7210, 0xdf19, 0x7036, 0x228d, 0x1, 0x0);
        gbc.writeMem(0xa768, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x37d4, gbc.sp());
        EXPECT(0xa76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa768));
        EXPECT(0xf9, gbc.readMem(0xa769));
        // CB F9 0088
        gbc.setState(0xaf28, 0x9793, 0x5dc0, 0x4f49, 0xb172, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0xaf28, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9793, gbc.sp());
        EXPECT(0xaf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf28));
        EXPECT(0xf9, gbc.readMem(0xaf29));
        // CB F9 0089
        gbc.setState(0x6996, 0x84d4, 0xc5a0, 0x76f3, 0xae67, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x6996, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 008A
        gbc.setState(0xe23b, 0x4fe8, 0x9f00, 0x6ffe, 0xf59d, 0x87c9, 0x1, 0x1);
        gbc.writeMem(0xe23b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4fe8, gbc.sp());
        EXPECT(0xe23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23b));
        EXPECT(0xf9, gbc.readMem(0xe23c));
        // CB F9 008B
        gbc.setState(0x8bb8, 0x3d75, 0x29b0, 0x9583, 0x82dd, 0x6eca, 0x1, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3d75, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0xf9, gbc.readMem(0x8bb9));
        // CB F9 008C
        gbc.setState(0x35e, 0xe938, 0x7b50, 0xd8af, 0x85e1, 0x660e, 0x0, 0x1);
        gbc.writeMem(0x35e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe938, gbc.sp());
        EXPECT(0x360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 008E
        gbc.setState(0xcc49, 0x3345, 0x7160, 0xaf8e, 0xf183, 0xf74b, 0x1, 0x1);
        gbc.writeMem(0xcc49, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc49));
        EXPECT(0xf9, gbc.readMem(0xcc4a));
        // CB F9 008F
        gbc.setState(0xba4a, 0x86da, 0xc430, 0xfa64, 0xa59c, 0xdaae, 0x1, 0x1);
        gbc.writeMem(0xba4a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x86da, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0xf9, gbc.readMem(0xba4b));
        // CB F9 0090
        gbc.setState(0x103f, 0x5884, 0xaa90, 0x1298, 0x1278, 0xb001, 0x1, 0x0);
        gbc.writeMem(0x103f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0091
        gbc.setState(0x9a06, 0x8efc, 0x30f0, 0xe117, 0x3ea2, 0xdd7a, 0x1, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a06));
        EXPECT(0xf9, gbc.readMem(0x9a07));
        // CB F9 0092
        gbc.setState(0x673c, 0x22d6, 0x6300, 0xc0c8, 0xc7e, 0x38d3, 0x0, 0x1);
        gbc.writeMem(0x673c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x22d6, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0093
        gbc.setState(0x8fda, 0x2006, 0xaf90, 0x80a, 0xf716, 0xdc91, 0x0, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fda));
        EXPECT(0xf9, gbc.readMem(0x8fdb));
        // CB F9 0094
        gbc.setState(0x715a, 0x9992, 0x45f0, 0xbc7, 0x80f9, 0x1eb9, 0x1, 0x1);
        gbc.writeMem(0x715a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0095
        gbc.setState(0x5d07, 0xa688, 0x1ac0, 0xef2b, 0xdc0d, 0x30bf, 0x1, 0x1);
        gbc.writeMem(0x5d07, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0096
        gbc.setState(0x5b1d, 0xa061, 0x5a60, 0xf51a, 0x3115, 0x636, 0x0, 0x1);
        gbc.writeMem(0x5b1d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa061, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0097
        gbc.setState(0x28e0, 0xffd, 0xf760, 0x1e08, 0xa2dd, 0x5d5, 0x1, 0x1);
        gbc.writeMem(0x28e0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xffd, gbc.sp());
        EXPECT(0x28e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0098
        gbc.setState(0x9bec, 0x205c, 0x570, 0x839c, 0xf240, 0xc9f7, 0x0, 0x0);
        gbc.writeMem(0x9bec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bec));
        EXPECT(0xf9, gbc.readMem(0x9bed));
        // CB F9 0099
        gbc.setState(0x4cbc, 0x5d83, 0x5010, 0x32c5, 0x3ed1, 0xf98, 0x0, 0x0);
        gbc.writeMem(0x4cbc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5d83, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 009A
        gbc.setState(0x2739, 0x686d, 0xb220, 0x5a39, 0xb74f, 0x8538, 0x1, 0x0);
        gbc.writeMem(0x2739, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x686d, gbc.sp());
        EXPECT(0x273b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 009B
        gbc.setState(0x6b24, 0xe58a, 0xa390, 0x5745, 0x9c1b, 0x172c, 0x1, 0x1);
        gbc.writeMem(0x6b24, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe58a, gbc.sp());
        EXPECT(0x6b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 009C
        gbc.setState(0xc619, 0x3bcd, 0x1cb0, 0x4675, 0xff03, 0xcb92, 0x1, 0x1);
        gbc.writeMem(0xc619, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3bcd, gbc.sp());
        EXPECT(0xc61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc619));
        EXPECT(0xf9, gbc.readMem(0xc61a));
        // CB F9 009D
        gbc.setState(0x6a17, 0x19e5, 0x6090, 0xeeb3, 0x7f1d, 0xa58b, 0x0, 0x0);
        gbc.writeMem(0x6a17, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0x6a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 009E
        gbc.setState(0xd928, 0x5d68, 0x8ed0, 0xec1e, 0xcbfc, 0x9df5, 0x0, 0x1);
        gbc.writeMem(0xd928, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5d68, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd928));
        EXPECT(0xf9, gbc.readMem(0xd929));
        // CB F9 009F
        gbc.setState(0xb6ab, 0xf281, 0xdd10, 0x9fe6, 0x410b, 0x9bcf, 0x1, 0x1);
        gbc.writeMem(0xb6ab, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf281, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ab));
        EXPECT(0xf9, gbc.readMem(0xb6ac));
        // CB F9 00A0
        gbc.setState(0x4602, 0xb5b8, 0xe800, 0xe466, 0x1aa0, 0xb67e, 0x0, 0x1);
        gbc.writeMem(0x4602, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00A2
        gbc.setState(0xaa3, 0xfac6, 0x5890, 0x9cb5, 0xa471, 0xd6f9, 0x1, 0x0);
        gbc.writeMem(0xaa3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfac6, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00A3
        gbc.setState(0x176d, 0x749f, 0x8dc0, 0x956a, 0x59c0, 0x3bcd, 0x0, 0x1);
        gbc.writeMem(0x176d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x749f, gbc.sp());
        EXPECT(0x176f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00A4
        gbc.setState(0xdd87, 0xa30e, 0x7a30, 0x25d9, 0x9212, 0x582, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0xdd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd87));
        EXPECT(0xf9, gbc.readMem(0xdd88));
        // CB F9 00A5
        gbc.setState(0x76b2, 0xde1d, 0x88f0, 0x55c4, 0xe893, 0xfa1c, 0x1, 0x1);
        gbc.writeMem(0x76b2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xde1d, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00A6
        gbc.setState(0xac19, 0xc925, 0x1cb0, 0x6b53, 0x30a2, 0x444d, 0x1, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac19));
        EXPECT(0xf9, gbc.readMem(0xac1a));
        // CB F9 00A7
        gbc.setState(0x13d7, 0x5cd, 0x27d0, 0x861d, 0xffe8, 0xaee, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5cd, gbc.sp());
        EXPECT(0x13d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00A8
        gbc.setState(0x880b, 0x4f63, 0x67e0, 0xac65, 0xf7bf, 0xad0a, 0x0, 0x0);
        gbc.writeMem(0x880b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880b));
        EXPECT(0xf9, gbc.readMem(0x880c));
        // CB F9 00A9
        gbc.setState(0x2860, 0xff9b, 0xac20, 0x4258, 0xf2a9, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0x2860, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xff9b, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00AA
        gbc.setState(0x7e5b, 0xcdb5, 0xda00, 0x186e, 0xe6b6, 0x1597, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00AB
        gbc.setState(0x9340, 0x36ef, 0x3910, 0x6942, 0x819a, 0xabd6, 0x1, 0x1);
        gbc.writeMem(0x9340, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x36ef, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9340));
        EXPECT(0xf9, gbc.readMem(0x9341));
        // CB F9 00AC
        gbc.setState(0x7d1d, 0x7e89, 0x1d20, 0xac7d, 0x4612, 0xb0ed, 0x1, 0x1);
        gbc.writeMem(0x7d1d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7e89, gbc.sp());
        EXPECT(0x7d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00AE
        gbc.setState(0xc8d7, 0x1512, 0x9c40, 0x9e04, 0x25ef, 0xe397, 0x1, 0x0);
        gbc.writeMem(0xc8d7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1512, gbc.sp());
        EXPECT(0xc8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d7));
        EXPECT(0xf9, gbc.readMem(0xc8d8));
        // CB F9 00AF
        gbc.setState(0xe864, 0x37f3, 0xc4e0, 0xabd7, 0xb5df, 0x40f, 0x1, 0x0);
        gbc.writeMem(0xe864, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x37f3, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe864));
        EXPECT(0xf9, gbc.readMem(0xe865));
        // CB F9 00B0
        gbc.setState(0x26b6, 0xdde4, 0x8ca0, 0x7cea, 0x4a4e, 0x5c4a, 0x1, 0x1);
        gbc.writeMem(0x26b6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0x26b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00B1
        gbc.setState(0x4e2f, 0x58f9, 0x27a0, 0x955d, 0x77fa, 0x954c, 0x1, 0x1);
        gbc.writeMem(0x4e2f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x58f9, gbc.sp());
        EXPECT(0x4e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00B2
        gbc.setState(0x4025, 0x493f, 0x6200, 0xb707, 0xea2e, 0xd00f, 0x0, 0x0);
        gbc.writeMem(0x4025, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00B3
        gbc.setState(0x20ab, 0x913a, 0x2c60, 0xc916, 0xd925, 0xcd98, 0x1, 0x0);
        gbc.writeMem(0x20ab, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x913a, gbc.sp());
        EXPECT(0x20ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00B4
        gbc.setState(0x8539, 0xeac8, 0x1950, 0x943a, 0x1b30, 0xa264, 0x0, 0x0);
        gbc.writeMem(0x8539, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeac8, gbc.sp());
        EXPECT(0x853b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8539));
        EXPECT(0xf9, gbc.readMem(0x853a));
        // CB F9 00B5
        gbc.setState(0x2824, 0x854c, 0x6890, 0xa41b, 0xdd0f, 0x2dd7, 0x0, 0x1);
        gbc.writeMem(0x2824, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x854c, gbc.sp());
        EXPECT(0x2826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00B6
        gbc.setState(0xb8ef, 0xf353, 0xd7e0, 0x7469, 0xd409, 0x7ab7, 0x0, 0x1);
        gbc.writeMem(0xb8ef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf353, gbc.sp());
        EXPECT(0xb8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ef));
        EXPECT(0xf9, gbc.readMem(0xb8f0));
        // CB F9 00B7
        gbc.setState(0xbabe, 0xcef3, 0xceb0, 0x61b5, 0x4cef, 0xec0a, 0x0, 0x0);
        gbc.writeMem(0xbabe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcef3, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabe));
        EXPECT(0xf9, gbc.readMem(0xbabf));
        // CB F9 00B8
        gbc.setState(0x26ec, 0x6b39, 0x5ed0, 0x18d4, 0xb6aa, 0x1cff, 0x0, 0x0);
        gbc.writeMem(0x26ec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0x26ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00B9
        gbc.setState(0x1fa2, 0x6a82, 0xb4a0, 0xb370, 0xcf60, 0xb6ad, 0x1, 0x1);
        gbc.writeMem(0x1fa2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6a82, gbc.sp());
        EXPECT(0x1fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00BB
        gbc.setState(0x1329, 0x1380, 0x1ef0, 0x9863, 0xb8a3, 0x843b, 0x0, 0x1);
        gbc.writeMem(0x1329, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00BD
        gbc.setState(0xe141, 0x50f7, 0x7290, 0xdf8b, 0xc013, 0x993a, 0x0, 0x1);
        gbc.writeMem(0xe141, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0xe143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe141));
        EXPECT(0xf9, gbc.readMem(0xe142));
        // CB F9 00BE
        gbc.setState(0xae0f, 0x5ed7, 0xe5e0, 0x9602, 0xdb97, 0xe3be, 0x1, 0x0);
        gbc.writeMem(0xae0f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5ed7, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0xf9, gbc.readMem(0xae10));
        // CB F9 00BF
        gbc.setState(0x3468, 0x888a, 0x7000, 0x7cf7, 0x5c25, 0x977a, 0x1, 0x1);
        gbc.writeMem(0x3468, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00C0
        gbc.setState(0x3a79, 0xe1f, 0xb6d0, 0x7155, 0xc935, 0x51f5, 0x1, 0x0);
        gbc.writeMem(0x3a79, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x3a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00C2
        gbc.setState(0x9d20, 0x4665, 0xad10, 0x385a, 0x81b1, 0xc7dc, 0x0, 0x0);
        gbc.writeMem(0x9d20, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4665, gbc.sp());
        EXPECT(0x9d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d20));
        EXPECT(0xf9, gbc.readMem(0x9d21));
        // CB F9 00C3
        gbc.setState(0xc9fb, 0x1a0b, 0x66f0, 0x27b0, 0x683a, 0x702, 0x1, 0x0);
        gbc.writeMem(0xc9fb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a0b, gbc.sp());
        EXPECT(0xc9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fb));
        EXPECT(0xf9, gbc.readMem(0xc9fc));
        // CB F9 00C4
        gbc.setState(0x1b55, 0x67e6, 0xee90, 0x9272, 0x6505, 0xdac, 0x1, 0x0);
        gbc.writeMem(0x1b55, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x67e6, gbc.sp());
        EXPECT(0x1b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00C5
        gbc.setState(0x6e6c, 0x405c, 0xeda0, 0x3192, 0x15b, 0xee14, 0x1, 0x1);
        gbc.writeMem(0x6e6c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x405c, gbc.sp());
        EXPECT(0x6e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00C6
        gbc.setState(0xa850, 0x2f62, 0x9ed0, 0xd021, 0x9871, 0x968b, 0x0, 0x0);
        gbc.writeMem(0xa850, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0xa852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa850));
        EXPECT(0xf9, gbc.readMem(0xa851));
        // CB F9 00C7
        gbc.setState(0xe5b9, 0x616f, 0xa670, 0x7659, 0x8d69, 0x47e6, 0x0, 0x0);
        gbc.writeMem(0xe5b9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b9));
        EXPECT(0xf9, gbc.readMem(0xe5ba));
        // CB F9 00C8
        gbc.setState(0x59ba, 0x8d10, 0x2a70, 0xddcb, 0x7964, 0xe009, 0x0, 0x1);
        gbc.writeMem(0x59ba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00C9
        gbc.setState(0xd, 0xd284, 0xbdc0, 0xf7b5, 0x75ba, 0xe9f4, 0x1, 0x0);
        gbc.writeMem(0xd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd284, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00CA
        gbc.setState(0xf2f, 0xa79e, 0x4b30, 0x3f19, 0xff0f, 0xc2c7, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa79e, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00CB
        gbc.setState(0xb3c, 0xb39f, 0xa590, 0xe234, 0x25a6, 0x9179, 0x0, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb39f, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00CC
        gbc.setState(0xed69, 0xe5ab, 0xe730, 0xca2c, 0x39bb, 0xf0dd, 0x1, 0x0);
        gbc.writeMem(0xed69, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe5ab, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed69));
        EXPECT(0xf9, gbc.readMem(0xed6a));
        // CB F9 00CD
        gbc.setState(0xc2a2, 0x360b, 0x1c30, 0x5184, 0x2603, 0xf407, 0x1, 0x1);
        gbc.writeMem(0xc2a2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x360b, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a2));
        EXPECT(0xf9, gbc.readMem(0xc2a3));
        // CB F9 00CE
        gbc.setState(0x6ad0, 0xbbc6, 0xea50, 0xc13d, 0xf491, 0x4224, 0x0, 0x1);
        gbc.writeMem(0x6ad0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00CF
        gbc.setState(0x5b1e, 0xa4b5, 0xa0b0, 0x4839, 0x6369, 0x25b9, 0x0, 0x0);
        gbc.writeMem(0x5b1e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa4b5, gbc.sp());
        EXPECT(0x5b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00D0
        gbc.setState(0x46d5, 0xdee5, 0x1d20, 0x5b69, 0x58c6, 0xdbe8, 0x1, 0x1);
        gbc.writeMem(0x46d5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdee5, gbc.sp());
        EXPECT(0x46d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00D1
        gbc.setState(0xd072, 0xac31, 0xdda0, 0xca3d, 0xc71c, 0x364d, 0x0, 0x0);
        gbc.writeMem(0xd072, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xac31, gbc.sp());
        EXPECT(0xd074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd072));
        EXPECT(0xf9, gbc.readMem(0xd073));
        // CB F9 00D2
        gbc.setState(0xb86d, 0xe4e6, 0xbb70, 0xf304, 0xa586, 0xf5b6, 0x0, 0x0);
        gbc.writeMem(0xb86d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0xb86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86d));
        EXPECT(0xf9, gbc.readMem(0xb86e));
        // CB F9 00D3
        gbc.setState(0xc222, 0x919, 0x6e50, 0x2373, 0xaae1, 0x837f, 0x1, 0x1);
        gbc.writeMem(0xc222, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x919, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc222));
        EXPECT(0xf9, gbc.readMem(0xc223));
        // CB F9 00D4
        gbc.setState(0x6685, 0x6042, 0x1fe0, 0xb449, 0x2fdc, 0x618c, 0x1, 0x1);
        gbc.writeMem(0x6685, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6042, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00D5
        gbc.setState(0xc23, 0x6651, 0xb340, 0x87b4, 0xcc61, 0xdc9b, 0x1, 0x1);
        gbc.writeMem(0xc23, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6651, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00D6
        gbc.setState(0x45c8, 0x342a, 0x7230, 0x85af, 0x7d24, 0x5f92, 0x1, 0x0);
        gbc.writeMem(0x45c8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00D7
        gbc.setState(0x813e, 0x2a12, 0x7390, 0xe8c8, 0x1433, 0x1041, 0x1, 0x1);
        gbc.writeMem(0x813e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a12, gbc.sp());
        EXPECT(0x8140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813e));
        EXPECT(0xf9, gbc.readMem(0x813f));
        // CB F9 00D8
        gbc.setState(0x86eb, 0x3c2e, 0x6680, 0xfbc7, 0x8e4f, 0x28b7, 0x0, 0x1);
        gbc.writeMem(0x86eb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0x86ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86eb));
        EXPECT(0xf9, gbc.readMem(0x86ec));
        // CB F9 00D9
        gbc.setState(0x23, 0xa329, 0x7e30, 0x6b3, 0x1811, 0xe641, 0x0, 0x0);
        gbc.writeMem(0x23, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa329, gbc.sp());
        EXPECT(0x25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00DA
        gbc.setState(0x2be5, 0x2ba3, 0x5310, 0x96d0, 0x3c44, 0xc548, 0x0, 0x0);
        gbc.writeMem(0x2be5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ba3, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00DB
        gbc.setState(0x5718, 0xd8c9, 0x6e00, 0x5d9c, 0x26e7, 0xa272, 0x0, 0x0);
        gbc.writeMem(0x5718, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00DC
        gbc.setState(0x3580, 0x5c00, 0xece0, 0xa765, 0xf0c2, 0x6f80, 0x0, 0x1);
        gbc.writeMem(0x3580, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5c00, gbc.sp());
        EXPECT(0x3582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00DD
        gbc.setState(0x8033, 0xcce, 0xb220, 0x294d, 0x4f21, 0x1beb, 0x1, 0x0);
        gbc.writeMem(0x8033, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8033));
        EXPECT(0xf9, gbc.readMem(0x8034));
        // CB F9 00DE
        gbc.setState(0x659d, 0xbdc7, 0x3c10, 0x6e2, 0xe84c, 0x52da, 0x1, 0x1);
        gbc.writeMem(0x659d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00DF
        gbc.setState(0x3e1f, 0x81f, 0x2e0, 0x1007, 0xb53a, 0x6148, 0x0, 0x0);
        gbc.writeMem(0x3e1f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x81f, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00E0
        gbc.setState(0xb985, 0xc108, 0x8c90, 0x7c21, 0xf19c, 0x838f, 0x0, 0x0);
        gbc.writeMem(0xb985, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0xb987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb985));
        EXPECT(0xf9, gbc.readMem(0xb986));
        // CB F9 00E1
        gbc.setState(0x415e, 0x732e, 0x5480, 0x5f18, 0x1246, 0x2161, 0x0, 0x0);
        gbc.writeMem(0x415e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x732e, gbc.sp());
        EXPECT(0x4160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00E2
        gbc.setState(0x8ecc, 0x13df, 0xde70, 0xf26, 0xcadf, 0xa77b, 0x0, 0x0);
        gbc.writeMem(0x8ecc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0x8ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecc));
        EXPECT(0xf9, gbc.readMem(0x8ecd));
        // CB F9 00E3
        gbc.setState(0xccfe, 0x2c79, 0x7f20, 0x32e0, 0xc65b, 0x25a6, 0x0, 0x1);
        gbc.writeMem(0xccfe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2c79, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfe));
        EXPECT(0xf9, gbc.readMem(0xccff));
        // CB F9 00E4
        gbc.setState(0x1558, 0xbc9a, 0x7ab0, 0x20ef, 0x7982, 0xe7a7, 0x1, 0x0);
        gbc.writeMem(0x1558, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x155a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00E5
        gbc.setState(0x7a7f, 0x8d39, 0x6e90, 0x9826, 0xf617, 0x49ab, 0x1, 0x1);
        gbc.writeMem(0x7a7f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8d39, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00E6
        gbc.setState(0x2895, 0x26fe, 0xf380, 0x4dfa, 0x8e8c, 0x98b2, 0x1, 0x1);
        gbc.writeMem(0x2895, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x26fe, gbc.sp());
        EXPECT(0x2897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00E7
        gbc.setState(0x40cd, 0x4282, 0xbc0, 0x23fb, 0xebf3, 0x3180, 0x1, 0x0);
        gbc.writeMem(0x40cd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4282, gbc.sp());
        EXPECT(0x40cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00E8
        gbc.setState(0x6070, 0x5d27, 0x73c0, 0xcff6, 0x3976, 0x6d39, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00E9
        gbc.setState(0x83bb, 0x1c91, 0x3820, 0x1e53, 0xdc7d, 0xf702, 0x1, 0x0);
        gbc.writeMem(0x83bb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c91, gbc.sp());
        EXPECT(0x83bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83bb));
        EXPECT(0xf9, gbc.readMem(0x83bc));
        // CB F9 00EA
        gbc.setState(0x8130, 0x8778, 0xd020, 0xb06e, 0x8a2b, 0x196e, 0x0, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8778, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8130));
        EXPECT(0xf9, gbc.readMem(0x8131));
        // CB F9 00EB
        gbc.setState(0x94dd, 0x346d, 0x5950, 0xc445, 0x6749, 0xa841, 0x1, 0x0);
        gbc.writeMem(0x94dd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x346d, gbc.sp());
        EXPECT(0x94df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94dd));
        EXPECT(0xf9, gbc.readMem(0x94de));
        // CB F9 00EC
        gbc.setState(0x9ec6, 0xd1c7, 0xb7b0, 0xcf7d, 0x3b6, 0x488a, 0x0, 0x0);
        gbc.writeMem(0x9ec6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd1c7, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec6));
        EXPECT(0xf9, gbc.readMem(0x9ec7));
        // CB F9 00ED
        gbc.setState(0xaaf6, 0xd662, 0xe80, 0xa16a, 0x3995, 0xd1ef, 0x0, 0x0);
        gbc.writeMem(0xaaf6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd662, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf6));
        EXPECT(0xf9, gbc.readMem(0xaaf7));
        // CB F9 00EE
        gbc.setState(0x9d04, 0xa8ef, 0x98f0, 0x1de8, 0x527e, 0xdf9f, 0x1, 0x0);
        gbc.writeMem(0x9d04, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa8ef, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d04));
        EXPECT(0xf9, gbc.readMem(0x9d05));
        // CB F9 00EF
        gbc.setState(0x4bf5, 0x1dea, 0x8e90, 0xb70d, 0x9930, 0xf77a, 0x0, 0x0);
        gbc.writeMem(0x4bf5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x4bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00F0
        gbc.setState(0xe667, 0x4ab4, 0x9610, 0x5774, 0x2c8e, 0x4f7f, 0x1, 0x1);
        gbc.writeMem(0xe667, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0xe669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe667));
        EXPECT(0xf9, gbc.readMem(0xe668));
        // CB F9 00F1
        gbc.setState(0xd8bf, 0xa53c, 0x4c60, 0x4697, 0x548f, 0xba8e, 0x1, 0x0);
        gbc.writeMem(0xd8bf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa53c, gbc.sp());
        EXPECT(0xd8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bf));
        EXPECT(0xf9, gbc.readMem(0xd8c0));
        // CB F9 00F2
        gbc.setState(0xccff, 0xba8d, 0x9c60, 0x9fe6, 0xb1e9, 0xe3b, 0x0, 0x1);
        gbc.writeMem(0xccff, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xba8d, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccff));
        EXPECT(0xf9, gbc.readMem(0xcd00));
        // CB F9 00F3
        gbc.setState(0xa3f1, 0xb172, 0xfd60, 0x27e3, 0x6d2e, 0x20ac, 0x1, 0x0);
        gbc.writeMem(0xa3f1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb172, gbc.sp());
        EXPECT(0xa3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f1));
        EXPECT(0xf9, gbc.readMem(0xa3f2));
        // CB F9 00F4
        gbc.setState(0x838, 0x69c5, 0x380, 0x690, 0x3f96, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0x838, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00F5
        gbc.setState(0x5cb8, 0x9992, 0xee40, 0x7f9a, 0x5934, 0xbad2, 0x0, 0x0);
        gbc.writeMem(0x5cb8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0x5cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00F6
        gbc.setState(0x786e, 0x5e0c, 0x8820, 0xd4b0, 0x3ac3, 0x7e0c, 0x1, 0x1);
        gbc.writeMem(0x786e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5e0c, gbc.sp());
        EXPECT(0x7870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00F7
        gbc.setState(0x9582, 0x6a6, 0xb1c0, 0xd311, 0xbc23, 0x581f, 0x1, 0x1);
        gbc.writeMem(0x9582, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9582));
        EXPECT(0xf9, gbc.readMem(0x9583));
        // CB F9 00F8
        gbc.setState(0xd4d2, 0x91f9, 0xf2b0, 0x413, 0x5081, 0x3ee9, 0x0, 0x0);
        gbc.writeMem(0xd4d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x91f9, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d2));
        EXPECT(0xf9, gbc.readMem(0xd4d3));
        // CB F9 00F9
        gbc.setState(0x756f, 0x939, 0xa7b0, 0xf35a, 0x4c9a, 0x66c8, 0x1, 0x0);
        gbc.writeMem(0x756f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x7571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00FA
        gbc.setState(0x86a0, 0xc245, 0xa2a0, 0x16d5, 0x3d3b, 0x358c, 0x1, 0x0);
        gbc.writeMem(0x86a0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x86a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a0));
        EXPECT(0xf9, gbc.readMem(0x86a1));
        // CB F9 00FB
        gbc.setState(0xd8a8, 0xe440, 0x470, 0xa961, 0x6df4, 0x9e08, 0x0, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0xd8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a8));
        EXPECT(0xf9, gbc.readMem(0xd8a9));
        // CB F9 00FC
        gbc.setState(0x82c7, 0xc497, 0xc9d0, 0x1bf1, 0xfeb4, 0xef01, 0x1, 0x1);
        gbc.writeMem(0x82c7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x82c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c7));
        EXPECT(0xf9, gbc.readMem(0x82c8));
        // CB F9 00FD
        gbc.setState(0x77d3, 0xf3ee, 0x72f0, 0xa7ba, 0xc1f6, 0x6aa5, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf3ee, gbc.sp());
        EXPECT(0x77d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 00FE
        gbc.setState(0x7752, 0x3617, 0x8680, 0x7d76, 0xe3b6, 0x9270, 0x0, 0x1);
        gbc.writeMem(0x7752, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3617, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 00FF
        gbc.setState(0xcb35, 0xae42, 0x5d60, 0xc72d, 0x5467, 0xf23a, 0x1, 0x0);
        gbc.writeMem(0xcb35, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0xcb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb35));
        EXPECT(0xf9, gbc.readMem(0xcb36));
        // CB F9 0100
        gbc.setState(0x8262, 0x7cf9, 0x7110, 0x1cbe, 0x311f, 0x2461, 0x1, 0x0);
        gbc.writeMem(0x8262, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8262));
        EXPECT(0xf9, gbc.readMem(0x8263));
        // CB F9 0101
        gbc.setState(0x861a, 0x3ae2, 0x5f10, 0x9e4b, 0x2ff8, 0x4287, 0x0, 0x1);
        gbc.writeMem(0x861a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3ae2, gbc.sp());
        EXPECT(0x861c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861a));
        EXPECT(0xf9, gbc.readMem(0x861b));
        // CB F9 0102
        gbc.setState(0x32af, 0xee7d, 0xed40, 0x5d2a, 0xa5e9, 0xb3be, 0x0, 0x1);
        gbc.writeMem(0x32af, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0x32b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0103
        gbc.setState(0xdc90, 0x42e0, 0x6b00, 0x71bd, 0x8b05, 0xfc37, 0x0, 0x0);
        gbc.writeMem(0xdc90, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0xdc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc90));
        EXPECT(0xf9, gbc.readMem(0xdc91));
        // CB F9 0104
        gbc.setState(0x47b9, 0xa87e, 0x8a70, 0xb92e, 0x8f81, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x47b9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa87e, gbc.sp());
        EXPECT(0x47bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0105
        gbc.setState(0x3c4d, 0xc8f9, 0x2f40, 0x5005, 0x72d7, 0x2ea2, 0x1, 0x0);
        gbc.writeMem(0x3c4d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0x3c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0106
        gbc.setState(0xa9eb, 0xf4de, 0xe1a0, 0xa821, 0x2aec, 0x4445, 0x1, 0x1);
        gbc.writeMem(0xa9eb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9eb));
        EXPECT(0xf9, gbc.readMem(0xa9ec));
        // CB F9 0107
        gbc.setState(0xe8ce, 0x722f, 0xd050, 0x7a62, 0x4c2, 0x2a79, 0x1, 0x1);
        gbc.writeMem(0xe8ce, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0xe8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ce));
        EXPECT(0xf9, gbc.readMem(0xe8cf));
        // CB F9 0108
        gbc.setState(0x51ac, 0x4c2e, 0xf120, 0x11d6, 0x9579, 0x3394, 0x1, 0x0);
        gbc.writeMem(0x51ac, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4c2e, gbc.sp());
        EXPECT(0x51ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0109
        gbc.setState(0x9928, 0x9cf, 0x170, 0xb817, 0x2cd4, 0xa9bf, 0x0, 0x1);
        gbc.writeMem(0x9928, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9cf, gbc.sp());
        EXPECT(0x992a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9928));
        EXPECT(0xf9, gbc.readMem(0x9929));
        // CB F9 010A
        gbc.setState(0x25bf, 0x8cbb, 0xa080, 0x6a4d, 0x3046, 0x8038, 0x1, 0x1);
        gbc.writeMem(0x25bf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8cbb, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 010B
        gbc.setState(0x688e, 0xe8cd, 0xcdb0, 0xd932, 0x8454, 0xb1dc, 0x1, 0x1);
        gbc.writeMem(0x688e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0x6890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 010C
        gbc.setState(0x6209, 0xae2c, 0x5a00, 0xe7bd, 0xe023, 0xe886, 0x1, 0x1);
        gbc.writeMem(0x6209, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xae2c, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 010D
        gbc.setState(0x2601, 0xbea3, 0x7510, 0x3aa8, 0x811, 0x20ee, 0x0, 0x0);
        gbc.writeMem(0x2601, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0x2603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 010E
        gbc.setState(0x4fd3, 0x7875, 0x25b0, 0xaa61, 0xa09f, 0xeb7b, 0x1, 0x1);
        gbc.writeMem(0x4fd3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0x4fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0111
        gbc.setState(0x8208, 0x615a, 0xc8e0, 0xd17e, 0xfc23, 0x15ec, 0x0, 0x0);
        gbc.writeMem(0x8208, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8208));
        EXPECT(0xf9, gbc.readMem(0x8209));
        // CB F9 0112
        gbc.setState(0xabee, 0x24b5, 0x9d70, 0xcb0c, 0x50b, 0x1143, 0x1, 0x1);
        gbc.writeMem(0xabee, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x24b5, gbc.sp());
        EXPECT(0xabf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabee));
        EXPECT(0xf9, gbc.readMem(0xabef));
        // CB F9 0113
        gbc.setState(0x6156, 0xe643, 0xd120, 0xcf4, 0x2d91, 0xd821, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe643, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0114
        gbc.setState(0x3f88, 0x6a65, 0x6740, 0xb344, 0x6b9, 0x60a0, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a65, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0115
        gbc.setState(0xc2c, 0xaba4, 0x7380, 0x95fa, 0x8e58, 0xabae, 0x1, 0x0);
        gbc.writeMem(0xc2c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0xc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0116
        gbc.setState(0x5802, 0xa61a, 0xb460, 0x4445, 0xaa2e, 0x3aa3, 0x0, 0x1);
        gbc.writeMem(0x5802, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa61a, gbc.sp());
        EXPECT(0x5804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0117
        gbc.setState(0xca7e, 0x30bc, 0xc2b0, 0xe3be, 0x2846, 0x2d6e, 0x1, 0x0);
        gbc.writeMem(0xca7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7e));
        EXPECT(0xf9, gbc.readMem(0xca7f));
        // CB F9 0118
        gbc.setState(0x5c56, 0x2e71, 0x35c0, 0xbd1f, 0xf592, 0x9a59, 0x1, 0x0);
        gbc.writeMem(0x5c56, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2e71, gbc.sp());
        EXPECT(0x5c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0119
        gbc.setState(0x7fe, 0x4d0d, 0xbbf0, 0x9da9, 0xce34, 0x9bfc, 0x1, 0x0);
        gbc.writeMem(0x7fe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4d0d, gbc.sp());
        EXPECT(0x800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 011A
        gbc.setState(0x9c3a, 0xd918, 0x5fa0, 0x4713, 0x8d91, 0xe328, 0x0, 0x0);
        gbc.writeMem(0x9c3a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0xf9, gbc.readMem(0x9c3b));
        // CB F9 011B
        gbc.setState(0x5e3d, 0xe9f6, 0x3de0, 0xf668, 0xdb8a, 0x3b98, 0x0, 0x0);
        gbc.writeMem(0x5e3d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 011C
        gbc.setState(0x562f, 0x54d6, 0xc630, 0x78be, 0xa4ca, 0xe430, 0x1, 0x0);
        gbc.writeMem(0x562f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0x5631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 011D
        gbc.setState(0xdbff, 0xa9fc, 0x55f0, 0xa8c8, 0x3c00, 0xd57c, 0x1, 0x1);
        gbc.writeMem(0xdbff, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbff));
        EXPECT(0xf9, gbc.readMem(0xdc00));
        // CB F9 011E
        gbc.setState(0x7608, 0x58fc, 0xe50, 0xe2fc, 0x83ab, 0x5aa2, 0x1, 0x0);
        gbc.writeMem(0x7608, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 011F
        gbc.setState(0x6a8a, 0x7b68, 0xbb80, 0x1107, 0xf1b0, 0x448e, 0x0, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0120
        gbc.setState(0xb604, 0x7077, 0x9fa0, 0xebc8, 0x701a, 0x553f, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7077, gbc.sp());
        EXPECT(0xb606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb604));
        EXPECT(0xf9, gbc.readMem(0xb605));
        // CB F9 0121
        gbc.setState(0x59a, 0xc75, 0x2370, 0xcccf, 0xecd1, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0x59a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc75, gbc.sp());
        EXPECT(0x59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0122
        gbc.setState(0x20d2, 0x8c61, 0x320, 0x711e, 0x5d72, 0xb2c1, 0x0, 0x1);
        gbc.writeMem(0x20d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8c61, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0124
        gbc.setState(0xd7b7, 0xab9a, 0xa550, 0x42b7, 0x2009, 0x6e57, 0x1, 0x1);
        gbc.writeMem(0xd7b7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xd7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b7));
        EXPECT(0xf9, gbc.readMem(0xd7b8));
        // CB F9 0125
        gbc.setState(0x743, 0x6509, 0x85c0, 0xd94c, 0x13a0, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0x743, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6509, gbc.sp());
        EXPECT(0x745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0126
        gbc.setState(0x12f7, 0x2208, 0x5590, 0xc246, 0x6737, 0xb744, 0x0, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0127
        gbc.setState(0x6c65, 0x40ba, 0xe3f0, 0xa761, 0x54f2, 0x17af, 0x1, 0x1);
        gbc.writeMem(0x6c65, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0128
        gbc.setState(0xe4ae, 0x32a5, 0xc220, 0x13d1, 0x48f, 0xe09e, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x32a5, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0xf9, gbc.readMem(0xe4af));
        // CB F9 0129
        gbc.setState(0xa56c, 0x8b11, 0xda80, 0x659, 0x4b6f, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xa56c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b11, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56c));
        EXPECT(0xf9, gbc.readMem(0xa56d));
        // CB F9 012A
        gbc.setState(0x59fe, 0xc0c5, 0xe900, 0x295, 0x1576, 0x8044, 0x0, 0x0);
        gbc.writeMem(0x59fe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0x5a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 012B
        gbc.setState(0xca39, 0xf09b, 0xf410, 0xd3e1, 0xa5e, 0x9e2f, 0x0, 0x0);
        gbc.writeMem(0xca39, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf09b, gbc.sp());
        EXPECT(0xca3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca39));
        EXPECT(0xf9, gbc.readMem(0xca3a));
        // CB F9 012C
        gbc.setState(0x4698, 0xe34, 0xdc20, 0x69f4, 0x9f3, 0x73c4, 0x1, 0x0);
        gbc.writeMem(0x4698, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe34, gbc.sp());
        EXPECT(0x469a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 012D
        gbc.setState(0xc23c, 0xcf54, 0xa810, 0x5d24, 0x653f, 0x88d6, 0x0, 0x0);
        gbc.writeMem(0xc23c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcf54, gbc.sp());
        EXPECT(0xc23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23c));
        EXPECT(0xf9, gbc.readMem(0xc23d));
        // CB F9 012E
        gbc.setState(0xc236, 0x552e, 0x1d00, 0x1e36, 0x7da2, 0xb078, 0x0, 0x1);
        gbc.writeMem(0xc236, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x552e, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc236));
        EXPECT(0xf9, gbc.readMem(0xc237));
        // CB F9 012F
        gbc.setState(0x3ea2, 0x431b, 0x9570, 0xa5ef, 0x2482, 0xd90e, 0x1, 0x0);
        gbc.writeMem(0x3ea2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0130
        gbc.setState(0x2d54, 0x141d, 0x1ab0, 0x773a, 0x2ed5, 0x4523, 0x0, 0x0);
        gbc.writeMem(0x2d54, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x141d, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0131
        gbc.setState(0xd68d, 0xf003, 0xa510, 0x67f8, 0x7620, 0x1c8c, 0x1, 0x0);
        gbc.writeMem(0xd68d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf003, gbc.sp());
        EXPECT(0xd68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68d));
        EXPECT(0xf9, gbc.readMem(0xd68e));
        // CB F9 0132
        gbc.setState(0x4008, 0xa0b3, 0xbd60, 0x9bcb, 0xa293, 0x56ae, 0x0, 0x1);
        gbc.writeMem(0x4008, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa0b3, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0133
        gbc.setState(0xefef, 0x5acd, 0xac40, 0xfe32, 0x4774, 0x643d, 0x0, 0x1);
        gbc.writeMem(0xefef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5acd, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefef));
        EXPECT(0xf9, gbc.readMem(0xeff0));
        // CB F9 0134
        gbc.setState(0xdaea, 0x9936, 0xbec0, 0x82d9, 0x3d37, 0x33f6, 0x1, 0x1);
        gbc.writeMem(0xdaea, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9936, gbc.sp());
        EXPECT(0xdaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaea));
        EXPECT(0xf9, gbc.readMem(0xdaeb));
        // CB F9 0135
        gbc.setState(0xb4bb, 0x79a9, 0xd4c0, 0x2dc7, 0xbe25, 0xd80d, 0x1, 0x1);
        gbc.writeMem(0xb4bb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x79a9, gbc.sp());
        EXPECT(0xb4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bb));
        EXPECT(0xf9, gbc.readMem(0xb4bc));
        // CB F9 0136
        gbc.setState(0xc56c, 0xe131, 0x6a40, 0x7833, 0x5d04, 0x7a64, 0x1, 0x0);
        gbc.writeMem(0xc56c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe131, gbc.sp());
        EXPECT(0xc56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56c));
        EXPECT(0xf9, gbc.readMem(0xc56d));
        // CB F9 0137
        gbc.setState(0x6802, 0x38f5, 0x3c80, 0x4819, 0x5aaf, 0xcfef, 0x1, 0x1);
        gbc.writeMem(0x6802, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x38f5, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0138
        gbc.setState(0xe60, 0xe4b4, 0x1510, 0x68b9, 0xae65, 0xb77c, 0x1, 0x0);
        gbc.writeMem(0xe60, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe4b4, gbc.sp());
        EXPECT(0xe62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0139
        gbc.setState(0x704d, 0xacf6, 0x9310, 0x930, 0xf7c8, 0xe05, 0x1, 0x1);
        gbc.writeMem(0x704d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xacf6, gbc.sp());
        EXPECT(0x704f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 013A
        gbc.setState(0x7a57, 0xc2c2, 0xbd40, 0x6f19, 0x4411, 0x9d5f, 0x0, 0x1);
        gbc.writeMem(0x7a57, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc2c2, gbc.sp());
        EXPECT(0x7a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 013B
        gbc.setState(0xeb70, 0x1b5b, 0x4970, 0x385b, 0xb526, 0xad05, 0x0, 0x1);
        gbc.writeMem(0xeb70, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb70));
        EXPECT(0xf9, gbc.readMem(0xeb71));
        // CB F9 013C
        gbc.setState(0x850f, 0x21fe, 0xa360, 0xbca7, 0x883f, 0x9e17, 0x0, 0x1);
        gbc.writeMem(0x850f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x21fe, gbc.sp());
        EXPECT(0x8511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850f));
        EXPECT(0xf9, gbc.readMem(0x8510));
        // CB F9 013D
        gbc.setState(0xab15, 0x46be, 0xbfe0, 0xe16f, 0xbd1a, 0xe97a, 0x0, 0x1);
        gbc.writeMem(0xab15, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab15));
        EXPECT(0xf9, gbc.readMem(0xab16));
        // CB F9 013E
        gbc.setState(0x6635, 0xe9a3, 0x32b0, 0x8c, 0x4bb2, 0x547d, 0x1, 0x1);
        gbc.writeMem(0x6635, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe9a3, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 013F
        gbc.setState(0x628, 0x1554, 0x8670, 0x2f76, 0x9c55, 0x85e2, 0x0, 0x1);
        gbc.writeMem(0x628, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1554, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0140
        gbc.setState(0xbef9, 0x84f, 0xf180, 0xf72d, 0xcfa6, 0xc361, 0x0, 0x0);
        gbc.writeMem(0xbef9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef9));
        EXPECT(0xf9, gbc.readMem(0xbefa));
        // CB F9 0141
        gbc.setState(0xcaa8, 0xa4c6, 0xea90, 0x89bf, 0xcd2b, 0x21c6, 0x1, 0x1);
        gbc.writeMem(0xcaa8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa4c6, gbc.sp());
        EXPECT(0xcaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa8));
        EXPECT(0xf9, gbc.readMem(0xcaa9));
        // CB F9 0142
        gbc.setState(0xe8f8, 0xf13d, 0x300, 0xf5af, 0xff70, 0x86bf, 0x1, 0x0);
        gbc.writeMem(0xe8f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0xf9, gbc.readMem(0xe8f9));
        // CB F9 0143
        gbc.setState(0x5eb, 0xb9a2, 0xe520, 0xc830, 0x4f53, 0xeefe, 0x0, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0144
        gbc.setState(0xcc97, 0xbd47, 0x180, 0xe8dd, 0x2c48, 0xa6d2, 0x1, 0x1);
        gbc.writeMem(0xcc97, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc97));
        EXPECT(0xf9, gbc.readMem(0xcc98));
        // CB F9 0145
        gbc.setState(0x92bb, 0xc677, 0x3360, 0xc187, 0x319c, 0x5ac0, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc677, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0xf9, gbc.readMem(0x92bc));
        // CB F9 0146
        gbc.setState(0x3207, 0x4493, 0xc6b0, 0xbb9f, 0xd79, 0x53de, 0x1, 0x0);
        gbc.writeMem(0x3207, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4493, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0147
        gbc.setState(0x4a91, 0x4b5, 0x7b30, 0xb67f, 0xa0b0, 0x12bd, 0x1, 0x0);
        gbc.writeMem(0x4a91, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x4a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0148
        gbc.setState(0x35c4, 0x69ea, 0xea30, 0xc0ec, 0xd674, 0xcb62, 0x0, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0149
        gbc.setState(0x9ed5, 0x539e, 0x6390, 0x9cb, 0x260d, 0xc591, 0x0, 0x1);
        gbc.writeMem(0x9ed5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x539e, gbc.sp());
        EXPECT(0x9ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed5));
        EXPECT(0xf9, gbc.readMem(0x9ed6));
        // CB F9 014A
        gbc.setState(0xcef2, 0xbf75, 0xf7b0, 0x195d, 0x9eac, 0xdfb9, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0xf9, gbc.readMem(0xcef3));
        // CB F9 014B
        gbc.setState(0x63b3, 0xe615, 0xf920, 0x114e, 0x158f, 0x17c0, 0x1, 0x1);
        gbc.writeMem(0x63b3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x63b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 014D
        gbc.setState(0x566c, 0x35bb, 0xe740, 0xa53, 0xf4a6, 0xe3e9, 0x0, 0x1);
        gbc.writeMem(0x566c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x35bb, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 014E
        gbc.setState(0xc547, 0x6aee, 0xead0, 0x46be, 0xd956, 0xd67e, 0x0, 0x1);
        gbc.writeMem(0xc547, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc547));
        EXPECT(0xf9, gbc.readMem(0xc548));
        // CB F9 014F
        gbc.setState(0xd5e8, 0xc6d4, 0x1ce0, 0x7087, 0x12f2, 0xe963, 0x0, 0x1);
        gbc.writeMem(0xd5e8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e8));
        EXPECT(0xf9, gbc.readMem(0xd5e9));
        // CB F9 0150
        gbc.setState(0x5c07, 0xf41b, 0xc0c0, 0xd220, 0x29dc, 0xb5ad, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0151
        gbc.setState(0x8078, 0x16d5, 0x240, 0xc4ff, 0x8a66, 0x4e82, 0x0, 0x0);
        gbc.writeMem(0x8078, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x16d5, gbc.sp());
        EXPECT(0x807a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8078));
        EXPECT(0xf9, gbc.readMem(0x8079));
        // CB F9 0152
        gbc.setState(0x4316, 0x7e01, 0x55e0, 0x2d57, 0x1fe0, 0x2499, 0x1, 0x1);
        gbc.writeMem(0x4316, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x4318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0153
        gbc.setState(0x4120, 0x4d80, 0xd510, 0x6ad1, 0x740e, 0x5f13, 0x0, 0x0);
        gbc.writeMem(0x4120, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4d80, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0154
        gbc.setState(0x96a5, 0x6123, 0xba50, 0x61aa, 0x7913, 0x550c, 0x1, 0x1);
        gbc.writeMem(0x96a5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6123, gbc.sp());
        EXPECT(0x96a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a5));
        EXPECT(0xf9, gbc.readMem(0x96a6));
        // CB F9 0155
        gbc.setState(0x4015, 0xd3ee, 0x4720, 0x4e54, 0xf966, 0x4dcc, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0156
        gbc.setState(0x6537, 0x43a0, 0x5a00, 0x82e2, 0x2af1, 0xcc1a, 0x0, 0x0);
        gbc.writeMem(0x6537, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x43a0, gbc.sp());
        EXPECT(0x6539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0158
        gbc.setState(0x9e39, 0xb919, 0x9180, 0xf1b9, 0x8461, 0xe28b, 0x0, 0x1);
        gbc.writeMem(0x9e39, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb919, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e39));
        EXPECT(0xf9, gbc.readMem(0x9e3a));
        // CB F9 0159
        gbc.setState(0x8250, 0xce95, 0x8d70, 0x9966, 0x6572, 0x2e15, 0x0, 0x0);
        gbc.writeMem(0x8250, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8250));
        EXPECT(0xf9, gbc.readMem(0x8251));
        // CB F9 015A
        gbc.setState(0x6397, 0xc6ce, 0x7a30, 0xf2b6, 0xc124, 0x134a, 0x1, 0x1);
        gbc.writeMem(0x6397, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc6ce, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 015B
        gbc.setState(0xd9b2, 0xb823, 0x4640, 0x845a, 0x7b12, 0x1ef, 0x1, 0x0);
        gbc.writeMem(0xd9b2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb823, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b2));
        EXPECT(0xf9, gbc.readMem(0xd9b3));
        // CB F9 015C
        gbc.setState(0xbc57, 0xbcd, 0x3b0, 0x80ce, 0x8a0a, 0x7f74, 0x1, 0x1);
        gbc.writeMem(0xbc57, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc57));
        EXPECT(0xf9, gbc.readMem(0xbc58));
        // CB F9 015D
        gbc.setState(0xea2a, 0xa55d, 0x2910, 0xafc1, 0xbaff, 0x2060, 0x0, 0x0);
        gbc.writeMem(0xea2a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2a));
        EXPECT(0xf9, gbc.readMem(0xea2b));
        // CB F9 015E
        gbc.setState(0x8e13, 0xfc2c, 0xbf40, 0x6b74, 0x1e97, 0x40c6, 0x0, 0x1);
        gbc.writeMem(0x8e13, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0x8e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e13));
        EXPECT(0xf9, gbc.readMem(0x8e14));
        // CB F9 015F
        gbc.setState(0x5e7e, 0xa8ad, 0x98c0, 0xf7f6, 0xefdd, 0x2eae, 0x0, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0160
        gbc.setState(0x7b59, 0x6d1a, 0x1e00, 0x3670, 0xd29d, 0x6160, 0x1, 0x0);
        gbc.writeMem(0x7b59, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0x7b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0161
        gbc.setState(0xc773, 0x2ebd, 0xfae0, 0x65f8, 0xcec4, 0xd457, 0x0, 0x0);
        gbc.writeMem(0xc773, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2ebd, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc773));
        EXPECT(0xf9, gbc.readMem(0xc774));
        // CB F9 0162
        gbc.setState(0xa37e, 0xc28d, 0xa6a0, 0x97f6, 0xa9f3, 0xb424, 0x1, 0x1);
        gbc.writeMem(0xa37e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37e));
        EXPECT(0xf9, gbc.readMem(0xa37f));
        // CB F9 0163
        gbc.setState(0xa7ec, 0x8bc5, 0x4990, 0xd072, 0x506a, 0x583c, 0x0, 0x1);
        gbc.writeMem(0xa7ec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0xa7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ec));
        EXPECT(0xf9, gbc.readMem(0xa7ed));
        // CB F9 0164
        gbc.setState(0x2d40, 0x1261, 0x82b0, 0x970e, 0xfcf7, 0xc0f5, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1261, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0165
        gbc.setState(0x3b53, 0x5ca9, 0x450, 0xae75, 0x2644, 0x24c8, 0x1, 0x1);
        gbc.writeMem(0x3b53, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5ca9, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0166
        gbc.setState(0x5552, 0xc1d3, 0x99e0, 0x316a, 0x246f, 0xd8b7, 0x1, 0x0);
        gbc.writeMem(0x5552, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0167
        gbc.setState(0xa37f, 0xa35a, 0x1770, 0x55b3, 0xbdef, 0xba, 0x0, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0xf9, gbc.readMem(0xa380));
        // CB F9 0168
        gbc.setState(0x2be9, 0xcc92, 0xe5e0, 0x3dc8, 0xbe2d, 0x8516, 0x0, 0x0);
        gbc.writeMem(0x2be9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0169
        gbc.setState(0x86e1, 0xfa02, 0x4f0, 0x5e98, 0xebe, 0x9ea1, 0x1, 0x1);
        gbc.writeMem(0x86e1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0x86e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e1));
        EXPECT(0xf9, gbc.readMem(0x86e2));
        // CB F9 016A
        gbc.setState(0x7a19, 0x3b67, 0x3660, 0x8c81, 0x2752, 0xfee0, 0x1, 0x1);
        gbc.writeMem(0x7a19, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3b67, gbc.sp());
        EXPECT(0x7a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 016B
        gbc.setState(0xa485, 0xf7e1, 0xa2b0, 0x54ed, 0x818a, 0x8b37, 0x0, 0x0);
        gbc.writeMem(0xa485, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa485));
        EXPECT(0xf9, gbc.readMem(0xa486));
        // CB F9 016C
        gbc.setState(0x8e87, 0xc88b, 0x620, 0x6276, 0xaa02, 0xb17, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e87));
        EXPECT(0xf9, gbc.readMem(0x8e88));
        // CB F9 016D
        gbc.setState(0x146d, 0x36e3, 0xe060, 0x9ab2, 0x48a4, 0xf392, 0x1, 0x1);
        gbc.writeMem(0x146d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x36e3, gbc.sp());
        EXPECT(0x146f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 016E
        gbc.setState(0xbdf9, 0xc168, 0xa3e0, 0x5c8e, 0x75e4, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0xbdf9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0xbdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf9));
        EXPECT(0xf9, gbc.readMem(0xbdfa));
        // CB F9 0170
        gbc.setState(0x6d1e, 0xaac3, 0x7cb0, 0x14aa, 0xdb12, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0x6d1e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0171
        gbc.setState(0x9370, 0x2888, 0x7c20, 0xfedd, 0xcab8, 0xd3ae, 0x0, 0x0);
        gbc.writeMem(0x9370, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x9372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9370));
        EXPECT(0xf9, gbc.readMem(0x9371));
        // CB F9 0172
        gbc.setState(0x29cf, 0xcdc, 0xaa0, 0x6ed1, 0xdecb, 0x319d, 0x1, 0x0);
        gbc.writeMem(0x29cf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0173
        gbc.setState(0x59c0, 0xfb88, 0xeed0, 0xfd84, 0x2dc4, 0xc920, 0x1, 0x0);
        gbc.writeMem(0x59c0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x59c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0174
        gbc.setState(0x7752, 0x8aae, 0x3460, 0xfe23, 0xff77, 0x6e70, 0x1, 0x0);
        gbc.writeMem(0x7752, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0175
        gbc.setState(0x5145, 0xb4, 0x1b90, 0xe7ac, 0xfc81, 0x1243, 0x0, 0x0);
        gbc.writeMem(0x5145, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb4, gbc.sp());
        EXPECT(0x5147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0176
        gbc.setState(0x1d9e, 0xf354, 0x7bb0, 0x7f4, 0x235b, 0xc07b, 0x1, 0x0);
        gbc.writeMem(0x1d9e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf354, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0177
        gbc.setState(0x9b4d, 0xc779, 0x6e80, 0x28e3, 0xeb89, 0x536a, 0x0, 0x1);
        gbc.writeMem(0x9b4d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc779, gbc.sp());
        EXPECT(0x9b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4d));
        EXPECT(0xf9, gbc.readMem(0x9b4e));
        // CB F9 0178
        gbc.setState(0x4a0e, 0x3335, 0xb940, 0x1eb8, 0xcd73, 0xa966, 0x0, 0x1);
        gbc.writeMem(0x4a0e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0x4a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0179
        gbc.setState(0x5000, 0x6ed1, 0x6aa0, 0xe7ea, 0x1d86, 0xe329, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6ed1, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 017A
        gbc.setState(0x5b18, 0x2c35, 0x9b0, 0x5230, 0x6015, 0xafce, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 017B
        gbc.setState(0x900b, 0x286d, 0x71e0, 0x5bbb, 0x5d29, 0x3480, 0x1, 0x0);
        gbc.writeMem(0x900b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x286d, gbc.sp());
        EXPECT(0x900d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900b));
        EXPECT(0xf9, gbc.readMem(0x900c));
        // CB F9 017C
        gbc.setState(0xbdec, 0x942a, 0xdc40, 0xafdb, 0xcb6, 0xb9df, 0x1, 0x0);
        gbc.writeMem(0xbdec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdec));
        EXPECT(0xf9, gbc.readMem(0xbded));
        // CB F9 017D
        gbc.setState(0x3a6d, 0x357e, 0x8140, 0xaabe, 0x9305, 0xc6d9, 0x1, 0x0);
        gbc.writeMem(0x3a6d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x357e, gbc.sp());
        EXPECT(0x3a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 017E
        gbc.setState(0xa9f, 0x97fa, 0xb780, 0x668e, 0x9f60, 0x92ca, 0x0, 0x1);
        gbc.writeMem(0xa9f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x97fa, gbc.sp());
        EXPECT(0xaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 017F
        gbc.setState(0xe7a7, 0x8f15, 0x15b0, 0xdfe3, 0x5f70, 0xd084, 0x1, 0x1);
        gbc.writeMem(0xe7a7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0xe7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a7));
        EXPECT(0xf9, gbc.readMem(0xe7a8));
        // CB F9 0180
        gbc.setState(0xd590, 0xa173, 0x7300, 0x79cb, 0x5ab2, 0xcf99, 0x1, 0x1);
        gbc.writeMem(0xd590, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa173, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd590));
        EXPECT(0xf9, gbc.readMem(0xd591));
        // CB F9 0182
        gbc.setState(0xa1d2, 0x15b9, 0x6550, 0xcb9, 0xd2c8, 0xdd47, 0x1, 0x1);
        gbc.writeMem(0xa1d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x15b9, gbc.sp());
        EXPECT(0xa1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d2));
        EXPECT(0xf9, gbc.readMem(0xa1d3));
        // CB F9 0183
        gbc.setState(0x27c5, 0xa5ba, 0x4660, 0x5371, 0x1a93, 0x4e00, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa5ba, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0184
        gbc.setState(0x278e, 0x3e52, 0x17f0, 0xfa45, 0xebef, 0x6b77, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0185
        gbc.setState(0x985a, 0xc800, 0x6aa0, 0xb4f1, 0x6e22, 0x2800, 0x0, 0x0);
        gbc.writeMem(0x985a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc800, gbc.sp());
        EXPECT(0x985c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985a));
        EXPECT(0xf9, gbc.readMem(0x985b));
        // CB F9 0186
        gbc.setState(0xbb78, 0xb4ea, 0xd930, 0xda4e, 0x1c19, 0xa94a, 0x0, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0xbb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb78));
        EXPECT(0xf9, gbc.readMem(0xbb79));
        // CB F9 0187
        gbc.setState(0xc46c, 0x6ea4, 0xf760, 0xa86d, 0x83fb, 0x53ac, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0xf9, gbc.readMem(0xc46d));
        // CB F9 0188
        gbc.setState(0x5de9, 0x9325, 0xecb0, 0xb771, 0x8abf, 0x8ad4, 0x0, 0x1);
        gbc.writeMem(0x5de9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9325, gbc.sp());
        EXPECT(0x5deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0189
        gbc.setState(0x4349, 0x680, 0x53d0, 0x93c2, 0xb5ed, 0x6b29, 0x1, 0x0);
        gbc.writeMem(0x4349, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 018A
        gbc.setState(0x9fb1, 0x6656, 0x920, 0x2ea0, 0x903c, 0x3af5, 0x0, 0x1);
        gbc.writeMem(0x9fb1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb1));
        EXPECT(0xf9, gbc.readMem(0x9fb2));
        // CB F9 018B
        gbc.setState(0xe25c, 0xe012, 0xe230, 0x845b, 0x4f56, 0xf213, 0x1, 0x0);
        gbc.writeMem(0xe25c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe012, gbc.sp());
        EXPECT(0xe25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25c));
        EXPECT(0xf9, gbc.readMem(0xe25d));
        // CB F9 018C
        gbc.setState(0x517b, 0x8bd5, 0x7930, 0x2a5f, 0x7d25, 0x92b5, 0x1, 0x0);
        gbc.writeMem(0x517b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x517d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 018D
        gbc.setState(0xa6ac, 0x9c95, 0xa800, 0xe161, 0xa9b4, 0x7786, 0x0, 0x1);
        gbc.writeMem(0xa6ac, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ac));
        EXPECT(0xf9, gbc.readMem(0xa6ad));
        // CB F9 018E
        gbc.setState(0x5c5, 0xdb32, 0x4c20, 0xb5cf, 0xb720, 0x2cbd, 0x1, 0x0);
        gbc.writeMem(0x5c5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdb32, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 018F
        gbc.setState(0x49f0, 0xfeba, 0x8770, 0xbcd5, 0xd9d5, 0xd81f, 0x0, 0x0);
        gbc.writeMem(0x49f0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0190
        gbc.setState(0x2f46, 0x2258, 0x4590, 0x7acf, 0x6e2a, 0x4c42, 0x1, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2258, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0191
        gbc.setState(0x371b, 0x213f, 0x8fe0, 0xcf5c, 0x243e, 0xbe59, 0x0, 0x0);
        gbc.writeMem(0x371b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0192
        gbc.setState(0x24d0, 0xb77e, 0x15c0, 0xe402, 0xbdf1, 0xf033, 0x1, 0x1);
        gbc.writeMem(0x24d0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0x24d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0193
        gbc.setState(0x8cc, 0xad5d, 0x1cf0, 0x8103, 0x4449, 0xf151, 0x1, 0x0);
        gbc.writeMem(0x8cc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xad5d, gbc.sp());
        EXPECT(0x8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0194
        gbc.setState(0x24b0, 0x396b, 0xe030, 0x5f3c, 0xba51, 0x523f, 0x0, 0x0);
        gbc.writeMem(0x24b0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x396b, gbc.sp());
        EXPECT(0x24b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0195
        gbc.setState(0xcb91, 0xf808, 0x4340, 0xbf6b, 0xee6f, 0xd877, 0x1, 0x0);
        gbc.writeMem(0xcb91, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf808, gbc.sp());
        EXPECT(0xcb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb91));
        EXPECT(0xf9, gbc.readMem(0xcb92));
        // CB F9 0196
        gbc.setState(0x9b77, 0x4ff3, 0x4e70, 0xc169, 0xab3f, 0x2f2b, 0x0, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b77));
        EXPECT(0xf9, gbc.readMem(0x9b78));
        // CB F9 0197
        gbc.setState(0x75b2, 0xfd57, 0xa620, 0x6754, 0x53e4, 0x8c90, 0x1, 0x0);
        gbc.writeMem(0x75b2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0x75b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0198
        gbc.setState(0xda9c, 0x4045, 0x84f0, 0x100d, 0xfe0, 0x124d, 0x1, 0x1);
        gbc.writeMem(0xda9c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9c));
        EXPECT(0xf9, gbc.readMem(0xda9d));
        // CB F9 019A
        gbc.setState(0x2a15, 0x9ad2, 0x4f80, 0x79de, 0xb74b, 0x5f3e, 0x0, 0x1);
        gbc.writeMem(0x2a15, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0x2a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 019B
        gbc.setState(0x65ba, 0x871d, 0x6ff0, 0x3bfb, 0xab6, 0x2b95, 0x1, 0x0);
        gbc.writeMem(0x65ba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x65bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 019C
        gbc.setState(0x9bd5, 0xf9d0, 0x8b30, 0xb3d5, 0x54e0, 0x7506, 0x0, 0x0);
        gbc.writeMem(0x9bd5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd5));
        EXPECT(0xf9, gbc.readMem(0x9bd6));
        // CB F9 019D
        gbc.setState(0xcb6e, 0x9973, 0x5cd0, 0x6982, 0x9bc5, 0xffd5, 0x1, 0x1);
        gbc.writeMem(0xcb6e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9973, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6e));
        EXPECT(0xf9, gbc.readMem(0xcb6f));
        // CB F9 019E
        gbc.setState(0x2c23, 0xeb7b, 0x2960, 0xd248, 0x30a4, 0xb98b, 0x1, 0x1);
        gbc.writeMem(0x2c23, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeb7b, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 019F
        gbc.setState(0xa9f9, 0xeda, 0xcce0, 0xe256, 0xab7d, 0x680e, 0x1, 0x1);
        gbc.writeMem(0xa9f9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f9));
        EXPECT(0xf9, gbc.readMem(0xa9fa));
        // CB F9 01A0
        gbc.setState(0xa86a, 0xb549, 0xe0f0, 0x91bc, 0x4d9f, 0x2458, 0x1, 0x1);
        gbc.writeMem(0xa86a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86a));
        EXPECT(0xf9, gbc.readMem(0xa86b));
        // CB F9 01A1
        gbc.setState(0xd5b3, 0x8b6d, 0x6150, 0xa581, 0xf378, 0x1450, 0x0, 0x1);
        gbc.writeMem(0xd5b3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b3));
        EXPECT(0xf9, gbc.readMem(0xd5b4));
        // CB F9 01A2
        gbc.setState(0xadd8, 0xa19c, 0x96e0, 0x6a82, 0x9a2a, 0x350b, 0x1, 0x0);
        gbc.writeMem(0xadd8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd8));
        EXPECT(0xf9, gbc.readMem(0xadd9));
        // CB F9 01A3
        gbc.setState(0x849, 0x638e, 0x850, 0xf7d7, 0x256c, 0x7065, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01A4
        gbc.setState(0x5517, 0x5991, 0xbfc0, 0x5740, 0xad5c, 0x8774, 0x0, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5991, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01A5
        gbc.setState(0xd038, 0x6271, 0x9f40, 0x5a91, 0x9b1d, 0xdbdd, 0x1, 0x0);
        gbc.writeMem(0xd038, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0xd03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd038));
        EXPECT(0xf9, gbc.readMem(0xd039));
        // CB F9 01A6
        gbc.setState(0x531c, 0xb771, 0xf9f0, 0xbce1, 0xb6c5, 0x24ce, 0x0, 0x1);
        gbc.writeMem(0x531c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01A7
        gbc.setState(0x2fc2, 0xf7b7, 0x17d0, 0x9cbf, 0x1aef, 0x93a8, 0x0, 0x1);
        gbc.writeMem(0x2fc2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf7b7, gbc.sp());
        EXPECT(0x2fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01A8
        gbc.setState(0x4dc9, 0xc6f, 0x67c0, 0xbb32, 0x4ef1, 0x84a1, 0x0, 0x0);
        gbc.writeMem(0x4dc9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc6f, gbc.sp());
        EXPECT(0x4dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01A9
        gbc.setState(0x229e, 0x4c25, 0x74d0, 0x1c71, 0x88a1, 0x4dee, 0x1, 0x1);
        gbc.writeMem(0x229e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x22a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01AA
        gbc.setState(0x8af5, 0x3f3c, 0xdc0, 0x3544, 0xd09b, 0x57e5, 0x1, 0x1);
        gbc.writeMem(0x8af5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x8af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af5));
        EXPECT(0xf9, gbc.readMem(0x8af6));
        // CB F9 01AB
        gbc.setState(0xdccc, 0x21c9, 0x43a0, 0x5e5d, 0x37af, 0x8fdb, 0x0, 0x1);
        gbc.writeMem(0xdccc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccc));
        EXPECT(0xf9, gbc.readMem(0xdccd));
        // CB F9 01AC
        gbc.setState(0xa059, 0xafb2, 0x3a60, 0x7ab7, 0x9e4e, 0xe0c4, 0x0, 0x1);
        gbc.writeMem(0xa059, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa059));
        EXPECT(0xf9, gbc.readMem(0xa05a));
        // CB F9 01AD
        gbc.setState(0x90d7, 0xb535, 0x27d0, 0x3580, 0x88b4, 0x36c8, 0x1, 0x1);
        gbc.writeMem(0x90d7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb535, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d7));
        EXPECT(0xf9, gbc.readMem(0x90d8));
        // CB F9 01AF
        gbc.setState(0xedb, 0x2088, 0x5730, 0xf7c3, 0x23cf, 0x674b, 0x0, 0x0);
        gbc.writeMem(0xedb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0xedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01B0
        gbc.setState(0x4c1a, 0xb3c8, 0x8de0, 0x5c13, 0x760e, 0x693b, 0x1, 0x0);
        gbc.writeMem(0x4c1a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01B1
        gbc.setState(0x5940, 0x2c5a, 0xadd0, 0x8c1b, 0xdb0e, 0x80dd, 0x1, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2c5a, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01B2
        gbc.setState(0x806e, 0xbf14, 0x4650, 0x6d3f, 0xdef9, 0x403f, 0x1, 0x1);
        gbc.writeMem(0x806e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbf14, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806e));
        EXPECT(0xf9, gbc.readMem(0x806f));
        // CB F9 01B3
        gbc.setState(0xa9c0, 0x80e4, 0x8340, 0xdf0b, 0x10e5, 0xf6f0, 0x0, 0x0);
        gbc.writeMem(0xa9c0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0xa9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c0));
        EXPECT(0xf9, gbc.readMem(0xa9c1));
        // CB F9 01B4
        gbc.setState(0xafe7, 0x8ff2, 0x4d0, 0xf06e, 0xfe9d, 0x71f7, 0x1, 0x1);
        gbc.writeMem(0xafe7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8ff2, gbc.sp());
        EXPECT(0xafe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe7));
        EXPECT(0xf9, gbc.readMem(0xafe8));
        // CB F9 01B5
        gbc.setState(0xd4c, 0xca99, 0x1a40, 0xc3a0, 0xca20, 0xc781, 0x0, 0x0);
        gbc.writeMem(0xd4c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xca99, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01B6
        gbc.setState(0xcc29, 0x58a0, 0xf3f0, 0x1379, 0x895a, 0x5db0, 0x1, 0x1);
        gbc.writeMem(0xcc29, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x58a0, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc29));
        EXPECT(0xf9, gbc.readMem(0xcc2a));
        // CB F9 01B7
        gbc.setState(0x5abb, 0xa20c, 0x4ff0, 0x3e6, 0xd28a, 0xb9eb, 0x0, 0x1);
        gbc.writeMem(0x5abb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa20c, gbc.sp());
        EXPECT(0x5abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01B8
        gbc.setState(0xd751, 0xf98b, 0xd6d0, 0x5753, 0x29f8, 0x332d, 0x1, 0x1);
        gbc.writeMem(0xd751, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd751));
        EXPECT(0xf9, gbc.readMem(0xd752));
        // CB F9 01B9
        gbc.setState(0xd0d9, 0x2b45, 0x1250, 0xf6ec, 0xd97d, 0xddae, 0x0, 0x1);
        gbc.writeMem(0xd0d9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b45, gbc.sp());
        EXPECT(0xd0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d9));
        EXPECT(0xf9, gbc.readMem(0xd0da));
        // CB F9 01BA
        gbc.setState(0xa285, 0xd089, 0xccc0, 0xb8f4, 0x39b3, 0x9b69, 0x0, 0x1);
        gbc.writeMem(0xa285, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0xa287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa285));
        EXPECT(0xf9, gbc.readMem(0xa286));
        // CB F9 01BB
        gbc.setState(0xc59a, 0x1abc, 0xd700, 0x8739, 0xa7c6, 0xd1e2, 0x1, 0x0);
        gbc.writeMem(0xc59a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1abc, gbc.sp());
        EXPECT(0xc59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59a));
        EXPECT(0xf9, gbc.readMem(0xc59b));
        // CB F9 01BC
        gbc.setState(0xef3e, 0x8faa, 0x3c20, 0x1c02, 0x1e5f, 0x5f17, 0x1, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0xf9, gbc.readMem(0xef3f));
        // CB F9 01BD
        gbc.setState(0x4140, 0xebcb, 0x2a30, 0xe4a7, 0x4ec2, 0x42c7, 0x0, 0x0);
        gbc.writeMem(0x4140, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x4142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01BE
        gbc.setState(0x5c75, 0x6795, 0xe3e0, 0x6247, 0xb70, 0xba3, 0x1, 0x0);
        gbc.writeMem(0x5c75, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0x5c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01BF
        gbc.setState(0xc9ee, 0x7127, 0xbc60, 0x6b95, 0x769c, 0x79dc, 0x1, 0x0);
        gbc.writeMem(0xc9ee, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0xc9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ee));
        EXPECT(0xf9, gbc.readMem(0xc9ef));
        // CB F9 01C0
        gbc.setState(0x9179, 0xa3f5, 0xc1d0, 0x682, 0x8dad, 0xa630, 0x0, 0x1);
        gbc.writeMem(0x9179, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9179));
        EXPECT(0xf9, gbc.readMem(0x917a));
        // CB F9 01C1
        gbc.setState(0xad28, 0x93fd, 0xffd0, 0x98e9, 0xb506, 0x972a, 0x0, 0x0);
        gbc.writeMem(0xad28, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x93fd, gbc.sp());
        EXPECT(0xad2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad28));
        EXPECT(0xf9, gbc.readMem(0xad29));
        // CB F9 01C2
        gbc.setState(0xc8bf, 0xf276, 0x6f00, 0x6afb, 0xd79d, 0xc9b4, 0x0, 0x0);
        gbc.writeMem(0xc8bf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf276, gbc.sp());
        EXPECT(0xc8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bf));
        EXPECT(0xf9, gbc.readMem(0xc8c0));
        // CB F9 01C3
        gbc.setState(0x24d4, 0xe242, 0xd380, 0x50aa, 0x54ac, 0x7215, 0x1, 0x0);
        gbc.writeMem(0x24d4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe242, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01C4
        gbc.setState(0xaef, 0x4b49, 0xa540, 0x4718, 0x94af, 0xebc6, 0x1, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b49, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01C5
        gbc.setState(0x4d05, 0xb8b7, 0x5ec0, 0x86e9, 0x1150, 0xe0c, 0x0, 0x0);
        gbc.writeMem(0x4d05, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01C6
        gbc.setState(0x47ee, 0xb05e, 0x5820, 0x9617, 0xcb16, 0x6226, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0x47f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01C7
        gbc.setState(0x144f, 0xc788, 0x1e10, 0xfffb, 0x966d, 0xe4ca, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01C8
        gbc.setState(0x12c, 0x6d56, 0x2570, 0xae4e, 0x3734, 0xc742, 0x1, 0x1);
        gbc.writeMem(0x12c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01C9
        gbc.setState(0xea47, 0x9e9b, 0x1380, 0x591b, 0xe042, 0x2257, 0x1, 0x1);
        gbc.writeMem(0xea47, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0xea49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea47));
        EXPECT(0xf9, gbc.readMem(0xea48));
        // CB F9 01CA
        gbc.setState(0x11e0, 0xd676, 0x2e40, 0x2e6b, 0x3f64, 0xe6fe, 0x1, 0x0);
        gbc.writeMem(0x11e0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd676, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01CB
        gbc.setState(0xa5d4, 0xb012, 0xbc30, 0xc9b8, 0x53a9, 0xd6f2, 0x1, 0x1);
        gbc.writeMem(0xa5d4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0xa5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d4));
        EXPECT(0xf9, gbc.readMem(0xa5d5));
        // CB F9 01CC
        gbc.setState(0x6b15, 0xfa01, 0xea70, 0x2f37, 0x715d, 0x7437, 0x0, 0x1);
        gbc.writeMem(0x6b15, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa01, gbc.sp());
        EXPECT(0x6b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01CD
        gbc.setState(0x43d7, 0x2b83, 0x50b0, 0x717d, 0x9df3, 0xd7f3, 0x0, 0x1);
        gbc.writeMem(0x43d7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2b83, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01CE
        gbc.setState(0xeab2, 0xa671, 0x11b0, 0x15c4, 0x87b, 0x7557, 0x0, 0x1);
        gbc.writeMem(0xeab2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa671, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab2));
        EXPECT(0xf9, gbc.readMem(0xeab3));
        // CB F9 01CF
        gbc.setState(0x3b1f, 0xf295, 0xdbd0, 0xc0d8, 0x1d1f, 0x52f, 0x1, 0x1);
        gbc.writeMem(0x3b1f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01D0
        gbc.setState(0x45c4, 0x310b, 0x2580, 0x3611, 0x7665, 0xb6cc, 0x1, 0x1);
        gbc.writeMem(0x45c4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x45c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01D1
        gbc.setState(0x17e2, 0x13c7, 0xad30, 0xdb48, 0xcd73, 0x2604, 0x1, 0x1);
        gbc.writeMem(0x17e2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x17e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01D2
        gbc.setState(0xde84, 0x4eb7, 0x4930, 0xcdb6, 0xb2b, 0xd03c, 0x1, 0x0);
        gbc.writeMem(0xde84, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4eb7, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde84));
        EXPECT(0xf9, gbc.readMem(0xde85));
        // CB F9 01D3
        gbc.setState(0xd0ce, 0xf8bc, 0x3160, 0xdf5c, 0x640c, 0x3a20, 0x0, 0x0);
        gbc.writeMem(0xd0ce, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0xd0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ce));
        EXPECT(0xf9, gbc.readMem(0xd0cf));
        // CB F9 01D4
        gbc.setState(0xe647, 0xc3f0, 0x6b40, 0x98b2, 0xe5e7, 0x1c52, 0x1, 0x1);
        gbc.writeMem(0xe647, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc3f0, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe647));
        EXPECT(0xf9, gbc.readMem(0xe648));
        // CB F9 01D5
        gbc.setState(0x944f, 0xc778, 0x6280, 0x36ec, 0xcd77, 0x570b, 0x1, 0x0);
        gbc.writeMem(0x944f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0x9451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944f));
        EXPECT(0xf9, gbc.readMem(0x9450));
        // CB F9 01D6
        gbc.setState(0xc703, 0x94f1, 0x1240, 0x2e8e, 0x3567, 0xb073, 0x0, 0x0);
        gbc.writeMem(0xc703, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x94f1, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc703));
        EXPECT(0xf9, gbc.readMem(0xc704));
        // CB F9 01D7
        gbc.setState(0x1d4b, 0xd0d2, 0xacc0, 0xe64b, 0xb19d, 0x7169, 0x1, 0x0);
        gbc.writeMem(0x1d4b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0x1d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01D9
        gbc.setState(0xc09, 0xc3a, 0x5330, 0xcf3f, 0xfff5, 0xd787, 0x0, 0x0);
        gbc.writeMem(0xc09, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0xc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01DA
        gbc.setState(0x199e, 0xcd1b, 0xf0e0, 0x8804, 0x87b1, 0xabce, 0x1, 0x0);
        gbc.writeMem(0x199e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01DB
        gbc.setState(0x614f, 0x5f5d, 0x2640, 0xc740, 0x8047, 0x51c5, 0x1, 0x0);
        gbc.writeMem(0x614f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f5d, gbc.sp());
        EXPECT(0x6151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01DC
        gbc.setState(0x2e39, 0xfcc8, 0x18e0, 0xf32b, 0xa56b, 0x3f58, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01DD
        gbc.setState(0x2932, 0x33c3, 0xd590, 0x51b3, 0xcdf3, 0xcd06, 0x0, 0x0);
        gbc.writeMem(0x2932, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x33c3, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01DE
        gbc.setState(0x653a, 0xa665, 0x78b0, 0x825f, 0x72b2, 0x7a42, 0x0, 0x0);
        gbc.writeMem(0x653a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa665, gbc.sp());
        EXPECT(0x653c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01DF
        gbc.setState(0x882a, 0x9d02, 0x5990, 0x2bed, 0xf47b, 0xf9e1, 0x0, 0x0);
        gbc.writeMem(0x882a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9d02, gbc.sp());
        EXPECT(0x882c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882a));
        EXPECT(0xf9, gbc.readMem(0x882b));
        // CB F9 01E0
        gbc.setState(0xd68a, 0xa01b, 0x4d20, 0x5a51, 0x981e, 0x601e, 0x1, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa01b, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68a));
        EXPECT(0xf9, gbc.readMem(0xd68b));
        // CB F9 01E1
        gbc.setState(0x56f0, 0x880b, 0x86d0, 0x6054, 0x4db0, 0x25f2, 0x1, 0x0);
        gbc.writeMem(0x56f0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01E3
        gbc.setState(0x9b95, 0x8826, 0xd050, 0x660f, 0x4f56, 0x2533, 0x0, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0xf9, gbc.readMem(0x9b96));
        // CB F9 01E4
        gbc.setState(0x477f, 0x626e, 0xd830, 0x9aa7, 0x1ced, 0x13e, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01E5
        gbc.setState(0xd467, 0xbbf0, 0x1de0, 0x638f, 0xaf7d, 0x80d4, 0x0, 0x0);
        gbc.writeMem(0xd467, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbbf0, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd467));
        EXPECT(0xf9, gbc.readMem(0xd468));
        // CB F9 01E8
        gbc.setState(0xe255, 0xf96, 0x8880, 0x3d3d, 0x49ff, 0x10f8, 0x0, 0x1);
        gbc.writeMem(0xe255, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf96, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe255));
        EXPECT(0xf9, gbc.readMem(0xe256));
        // CB F9 01E9
        gbc.setState(0x25b7, 0x5ba4, 0x64d0, 0x6127, 0x892e, 0x5752, 0x1, 0x1);
        gbc.writeMem(0x25b7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ba4, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01EA
        gbc.setState(0xba9d, 0x8884, 0x6f10, 0x886d, 0xf04c, 0x3f1e, 0x1, 0x0);
        gbc.writeMem(0xba9d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0xba9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9d));
        EXPECT(0xf9, gbc.readMem(0xba9e));
        // CB F9 01EB
        gbc.setState(0x6e4a, 0x2131, 0xb590, 0x315e, 0x6a7d, 0x23d7, 0x0, 0x1);
        gbc.writeMem(0x6e4a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2131, gbc.sp());
        EXPECT(0x6e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01EC
        gbc.setState(0xc98a, 0x7dc, 0xbcf0, 0x4ff9, 0x4731, 0x515d, 0x0, 0x0);
        gbc.writeMem(0xc98a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0xc98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98a));
        EXPECT(0xf9, gbc.readMem(0xc98b));
        // CB F9 01EE
        gbc.setState(0xe618, 0x818e, 0xdae0, 0x782b, 0x4946, 0x5447, 0x0, 0x0);
        gbc.writeMem(0xe618, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0xe61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe618));
        EXPECT(0xf9, gbc.readMem(0xe619));
        // CB F9 01EF
        gbc.setState(0x74ed, 0x3000, 0x7b40, 0xfc06, 0xf6a5, 0x5c12, 0x1, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01F0
        gbc.setState(0xa344, 0x86f8, 0xcfb0, 0xdf2, 0x5cd, 0x397d, 0x0, 0x0);
        gbc.writeMem(0xa344, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xf9, gbc.readMem(0xa345));
        // CB F9 01F2
        gbc.setState(0x6380, 0xd703, 0xb820, 0x8759, 0xe560, 0xc64a, 0x0, 0x0);
        gbc.writeMem(0x6380, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd703, gbc.sp());
        EXPECT(0x6382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01F3
        gbc.setState(0x7b7e, 0x6275, 0xf750, 0x9e9f, 0xc3de, 0x26a4, 0x1, 0x0);
        gbc.writeMem(0x7b7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6275, gbc.sp());
        EXPECT(0x7b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01F4
        gbc.setState(0xad7b, 0x487f, 0x1220, 0xde12, 0xc369, 0x351f, 0x0, 0x1);
        gbc.writeMem(0xad7b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0xad7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7b));
        EXPECT(0xf9, gbc.readMem(0xad7c));
        // CB F9 01F5
        gbc.setState(0x5d63, 0xa665, 0x8100, 0xcada, 0x1df3, 0x871d, 0x0, 0x0);
        gbc.writeMem(0x5d63, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa665, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 01F6
        gbc.setState(0x9aa5, 0xf7fd, 0x5f50, 0x72ed, 0x2555, 0x720a, 0x1, 0x0);
        gbc.writeMem(0x9aa5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0x9aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa5));
        EXPECT(0xf9, gbc.readMem(0x9aa6));
        // CB F9 01F7
        gbc.setState(0xa063, 0x6801, 0x2790, 0x741c, 0x7952, 0xff31, 0x1, 0x0);
        gbc.writeMem(0xa063, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6801, gbc.sp());
        EXPECT(0xa065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa063));
        EXPECT(0xf9, gbc.readMem(0xa064));
        // CB F9 01F8
        gbc.setState(0x47b4, 0x8d64, 0x8e90, 0xf282, 0x3dc8, 0x705e, 0x0, 0x0);
        gbc.writeMem(0x47b4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8d64, gbc.sp());
        EXPECT(0x47b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01F9
        gbc.setState(0xae90, 0x1f13, 0x5eb0, 0xfead, 0xb73b, 0x751a, 0x1, 0x1);
        gbc.writeMem(0xae90, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1f13, gbc.sp());
        EXPECT(0xae92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae90));
        EXPECT(0xf9, gbc.readMem(0xae91));
        // CB F9 01FA
        gbc.setState(0x89ad, 0x6c70, 0xa7a0, 0xd5b4, 0x7a61, 0x8975, 0x1, 0x1);
        gbc.writeMem(0x89ad, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6c70, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ad));
        EXPECT(0xf9, gbc.readMem(0x89ae));
        // CB F9 01FB
        gbc.setState(0xc011, 0xcd51, 0xe790, 0x5af6, 0x1784, 0x7a74, 0x1, 0x0);
        gbc.writeMem(0xc011, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0xc013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc011));
        EXPECT(0xf9, gbc.readMem(0xc012));
        // CB F9 01FC
        gbc.setState(0x293e, 0x2519, 0xfab0, 0x98e8, 0xd69c, 0x38b0, 0x1, 0x1);
        gbc.writeMem(0x293e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2519, gbc.sp());
        EXPECT(0x2940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01FD
        gbc.setState(0x9c55, 0x5bac, 0x1e50, 0x63e9, 0x69ae, 0x47a2, 0x1, 0x1);
        gbc.writeMem(0x9c55, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5bac, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c55));
        EXPECT(0xf9, gbc.readMem(0x9c56));
        // CB F9 01FE
        gbc.setState(0x7ca1, 0xb82f, 0xd450, 0xa7f6, 0xaf2e, 0xf155, 0x0, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0x7ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 01FF
        gbc.setState(0x1e6f, 0x431c, 0x8e30, 0x93a2, 0x1d88, 0xca0b, 0x0, 0x0);
        gbc.writeMem(0x1e6f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0x1e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0200
        gbc.setState(0x60f4, 0x12e3, 0xd9a0, 0xd60e, 0x7d05, 0x9a9c, 0x0, 0x1);
        gbc.writeMem(0x60f4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x12e3, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0201
        gbc.setState(0x2704, 0x3e8c, 0x51b0, 0x1dee, 0x1aba, 0x201a, 0x0, 0x1);
        gbc.writeMem(0x2704, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3e8c, gbc.sp());
        EXPECT(0x2706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0203
        gbc.setState(0x6768, 0x3f84, 0x79b0, 0xcb9b, 0x9b28, 0x1f32, 0x1, 0x0);
        gbc.writeMem(0x6768, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3f84, gbc.sp());
        EXPECT(0x676a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0204
        gbc.setState(0x30bf, 0xc3d, 0x5600, 0xd28, 0xefc5, 0x9b7c, 0x0, 0x1);
        gbc.writeMem(0x30bf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc3d, gbc.sp());
        EXPECT(0x30c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0205
        gbc.setState(0x55dd, 0x10e5, 0x7f30, 0x56a7, 0x4e7, 0x8a7e, 0x1, 0x1);
        gbc.writeMem(0x55dd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0206
        gbc.setState(0x7283, 0x7fcc, 0x19d0, 0x576e, 0xd0bc, 0x8bad, 0x0, 0x0);
        gbc.writeMem(0x7283, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7fcc, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0207
        gbc.setState(0xd94e, 0x78fa, 0xe2d0, 0xdfa1, 0xea36, 0x559b, 0x1, 0x0);
        gbc.writeMem(0xd94e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x78fa, gbc.sp());
        EXPECT(0xd950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94e));
        EXPECT(0xf9, gbc.readMem(0xd94f));
        // CB F9 0208
        gbc.setState(0xef0f, 0xcde5, 0x2120, 0x2314, 0xe04b, 0x7f61, 0x0, 0x1);
        gbc.writeMem(0xef0f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcde5, gbc.sp());
        EXPECT(0xef11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0f));
        EXPECT(0xf9, gbc.readMem(0xef10));
        // CB F9 0209
        gbc.setState(0xeedb, 0x1d52, 0x36e0, 0x35f0, 0x6a03, 0xfef9, 0x1, 0x0);
        gbc.writeMem(0xeedb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1d52, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedb));
        EXPECT(0xf9, gbc.readMem(0xeedc));
        // CB F9 020A
        gbc.setState(0xd1a5, 0xc762, 0xd930, 0xd5d9, 0x4d69, 0x3e7b, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc762, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xf9, gbc.readMem(0xd1a6));
        // CB F9 020B
        gbc.setState(0x85d7, 0xa29b, 0x5110, 0x43fd, 0x1144, 0xfd98, 0x1, 0x0);
        gbc.writeMem(0x85d7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0x85d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d7));
        EXPECT(0xf9, gbc.readMem(0x85d8));
        // CB F9 020C
        gbc.setState(0xc87f, 0x5428, 0x4ad0, 0xf14f, 0x1822, 0x88ba, 0x0, 0x0);
        gbc.writeMem(0xc87f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5428, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87f));
        EXPECT(0xf9, gbc.readMem(0xc880));
        // CB F9 020D
        gbc.setState(0x9095, 0xaa38, 0x10c0, 0xd7d3, 0x86c8, 0x6004, 0x0, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaa38, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9095));
        EXPECT(0xf9, gbc.readMem(0x9096));
        // CB F9 020E
        gbc.setState(0xe6b7, 0x71ac, 0xa520, 0x6daa, 0x2d0f, 0xc5cb, 0x0, 0x1);
        gbc.writeMem(0xe6b7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71ac, gbc.sp());
        EXPECT(0xe6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b7));
        EXPECT(0xf9, gbc.readMem(0xe6b8));
        // CB F9 020F
        gbc.setState(0x8079, 0xcc09, 0x94a0, 0x4562, 0xaea2, 0x4721, 0x1, 0x0);
        gbc.writeMem(0x8079, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcc09, gbc.sp());
        EXPECT(0x807b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8079));
        EXPECT(0xf9, gbc.readMem(0x807a));
        // CB F9 0210
        gbc.setState(0x45b3, 0x25b0, 0x43c0, 0x6459, 0x58e4, 0x715a, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0211
        gbc.setState(0x6e2d, 0x9431, 0x6c40, 0xf776, 0x6485, 0x361c, 0x0, 0x1);
        gbc.writeMem(0x6e2d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9431, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0212
        gbc.setState(0x4644, 0xaba, 0xbf80, 0x2c5b, 0x8673, 0x5031, 0x1, 0x0);
        gbc.writeMem(0x4644, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0213
        gbc.setState(0x53d6, 0x76c9, 0x1510, 0x8ce6, 0xf566, 0xef8c, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x76c9, gbc.sp());
        EXPECT(0x53d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0214
        gbc.setState(0xbedc, 0x47bf, 0x7700, 0x576d, 0x4ce9, 0xaa5a, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x47bf, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedc));
        EXPECT(0xf9, gbc.readMem(0xbedd));
        // CB F9 0215
        gbc.setState(0xe6a4, 0xa3cb, 0x1730, 0x2a13, 0xcc0, 0x8d6d, 0x1, 0x0);
        gbc.writeMem(0xe6a4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa3cb, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a4));
        EXPECT(0xf9, gbc.readMem(0xe6a5));
        // CB F9 0216
        gbc.setState(0x3664, 0x5c64, 0x79d0, 0xf817, 0x4871, 0xec47, 0x1, 0x1);
        gbc.writeMem(0x3664, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0x3666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0217
        gbc.setState(0x801c, 0x7de5, 0xdef0, 0x2df5, 0x6aa6, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0x801c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801c));
        EXPECT(0xf9, gbc.readMem(0x801d));
        // CB F9 0218
        gbc.setState(0xef7e, 0x4350, 0x39a0, 0x6afd, 0xa2ed, 0x83f0, 0x0, 0x1);
        gbc.writeMem(0xef7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4350, gbc.sp());
        EXPECT(0xef80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7e));
        EXPECT(0xf9, gbc.readMem(0xef7f));
        // CB F9 0219
        gbc.setState(0x85cf, 0xa3b, 0xfdd0, 0x8e71, 0xecac, 0xf404, 0x0, 0x1);
        gbc.writeMem(0x85cf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x85d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cf));
        EXPECT(0xf9, gbc.readMem(0x85d0));
        // CB F9 021A
        gbc.setState(0xdc68, 0xfe6d, 0xe440, 0x979, 0x2d97, 0x2ae, 0x0, 0x1);
        gbc.writeMem(0xdc68, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfe6d, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc68));
        EXPECT(0xf9, gbc.readMem(0xdc69));
        // CB F9 021B
        gbc.setState(0xefcc, 0x806b, 0x7a20, 0x2582, 0xd7bb, 0x5061, 0x1, 0x1);
        gbc.writeMem(0xefcc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0xefce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcc));
        EXPECT(0xf9, gbc.readMem(0xefcd));
        // CB F9 021C
        gbc.setState(0x5c2e, 0x6ffb, 0x9060, 0x4cc1, 0x7a3e, 0x9586, 0x1, 0x0);
        gbc.writeMem(0x5c2e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6ffb, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 021D
        gbc.setState(0xd4ad, 0x7bd2, 0xe8f0, 0xfe47, 0xef60, 0x4a82, 0x1, 0x0);
        gbc.writeMem(0xd4ad, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ad));
        EXPECT(0xf9, gbc.readMem(0xd4ae));
        // CB F9 021E
        gbc.setState(0x77b8, 0xca16, 0x8ef0, 0x2410, 0xa3b8, 0x417b, 0x1, 0x1);
        gbc.writeMem(0x77b8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0x77ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 021F
        gbc.setState(0x2dd5, 0x1254, 0xf450, 0x60a8, 0xb10e, 0xa542, 0x0, 0x0);
        gbc.writeMem(0x2dd5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1254, gbc.sp());
        EXPECT(0x2dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0220
        gbc.setState(0x68ef, 0x730e, 0x2fe0, 0x1f0d, 0xc56f, 0x2bf0, 0x0, 0x1);
        gbc.writeMem(0x68ef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x730e, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0221
        gbc.setState(0xeb7e, 0xd063, 0xb7e0, 0x8ec1, 0xa2ad, 0xf029, 0x1, 0x1);
        gbc.writeMem(0xeb7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd063, gbc.sp());
        EXPECT(0xeb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7e));
        EXPECT(0xf9, gbc.readMem(0xeb7f));
        // CB F9 0222
        gbc.setState(0x97fb, 0xb130, 0x41b0, 0xfbe9, 0x2419, 0xe18d, 0x0, 0x1);
        gbc.writeMem(0x97fb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb130, gbc.sp());
        EXPECT(0x97fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fb));
        EXPECT(0xf9, gbc.readMem(0x97fc));
        // CB F9 0223
        gbc.setState(0xcfed, 0x8542, 0xbc60, 0x26aa, 0xdae9, 0xec9b, 0x0, 0x0);
        gbc.writeMem(0xcfed, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8542, gbc.sp());
        EXPECT(0xcfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfed));
        EXPECT(0xf9, gbc.readMem(0xcfee));
        // CB F9 0224
        gbc.setState(0xd782, 0x5aad, 0xac30, 0x559c, 0xf35a, 0xa420, 0x1, 0x0);
        gbc.writeMem(0xd782, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd782));
        EXPECT(0xf9, gbc.readMem(0xd783));
        // CB F9 0225
        gbc.setState(0x5d6b, 0xe52c, 0x59a0, 0xc86c, 0xec86, 0xfd35, 0x0, 0x0);
        gbc.writeMem(0x5d6b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe52c, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0226
        gbc.setState(0x3874, 0x5eff, 0x7f30, 0x5d1d, 0x641b, 0x387d, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0227
        gbc.setState(0xb998, 0x7630, 0x4870, 0x9a61, 0xc7d4, 0x9df4, 0x1, 0x1);
        gbc.writeMem(0xb998, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0xb99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb998));
        EXPECT(0xf9, gbc.readMem(0xb999));
        // CB F9 0228
        gbc.setState(0x234d, 0xbf27, 0x1ab0, 0xe18c, 0x2078, 0xa42b, 0x1, 0x0);
        gbc.writeMem(0x234d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0x234f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 022A
        gbc.setState(0xbfa0, 0xed70, 0xb760, 0x6c4a, 0xa95f, 0x9b37, 0x1, 0x1);
        gbc.writeMem(0xbfa0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed70, gbc.sp());
        EXPECT(0xbfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa0));
        EXPECT(0xf9, gbc.readMem(0xbfa1));
        // CB F9 022B
        gbc.setState(0x9cdc, 0x6a73, 0x3f80, 0xd375, 0x6a29, 0x8347, 0x0, 0x1);
        gbc.writeMem(0x9cdc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdc));
        EXPECT(0xf9, gbc.readMem(0x9cdd));
        // CB F9 022C
        gbc.setState(0x107d, 0xb8c3, 0xf540, 0x9876, 0x3bc5, 0xbccc, 0x1, 0x1);
        gbc.writeMem(0x107d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8c3, gbc.sp());
        EXPECT(0x107f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 022D
        gbc.setState(0x4f9c, 0xb70b, 0xb020, 0x42bf, 0xd45c, 0x7672, 0x1, 0x0);
        gbc.writeMem(0x4f9c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb70b, gbc.sp());
        EXPECT(0x4f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 022F
        gbc.setState(0xaf8, 0xbbf, 0xb290, 0x1544, 0x679, 0x8bb2, 0x1, 0x0);
        gbc.writeMem(0xaf8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbbf, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0230
        gbc.setState(0xe8af, 0xaa86, 0x1e80, 0xa0b7, 0x809f, 0x53e7, 0x1, 0x1);
        gbc.writeMem(0xe8af, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa86, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0xf9, gbc.readMem(0xe8b0));
        // CB F9 0231
        gbc.setState(0x57bd, 0x59a, 0xd720, 0xd5a6, 0x253c, 0x2791, 0x1, 0x1);
        gbc.writeMem(0x57bd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0232
        gbc.setState(0x1b34, 0xf248, 0x170, 0xa613, 0xc46f, 0x463, 0x1, 0x0);
        gbc.writeMem(0x1b34, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x1b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0233
        gbc.setState(0xa9e4, 0x30cb, 0x1ca0, 0x2d75, 0x7b6a, 0x8b0b, 0x0, 0x1);
        gbc.writeMem(0xa9e4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x30cb, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e4));
        EXPECT(0xf9, gbc.readMem(0xa9e5));
        // CB F9 0234
        gbc.setState(0xd784, 0x22c1, 0xef0, 0xdb57, 0x821c, 0x599b, 0x0, 0x1);
        gbc.writeMem(0xd784, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x22c1, gbc.sp());
        EXPECT(0xd786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd784));
        EXPECT(0xf9, gbc.readMem(0xd785));
        // CB F9 0235
        gbc.setState(0x325, 0xdbc4, 0xd4d0, 0x53c3, 0x49e6, 0xe2e7, 0x0, 0x1);
        gbc.writeMem(0x325, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdbc4, gbc.sp());
        EXPECT(0x327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0236
        gbc.setState(0x3d57, 0xcdb3, 0xbf50, 0xa228, 0x9d5f, 0x5f59, 0x0, 0x1);
        gbc.writeMem(0x3d57, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x3d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0237
        gbc.setState(0x8452, 0x8943, 0x77f0, 0x89e5, 0xa74b, 0xe9b8, 0x0, 0x1);
        gbc.writeMem(0x8452, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8452));
        EXPECT(0xf9, gbc.readMem(0x8453));
        // CB F9 0238
        gbc.setState(0x268a, 0xd321, 0xc980, 0xdd6a, 0xc4d0, 0xe82b, 0x0, 0x1);
        gbc.writeMem(0x268a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd321, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0239
        gbc.setState(0xed33, 0x892d, 0xcb30, 0x6af0, 0xdcf4, 0xd845, 0x1, 0x1);
        gbc.writeMem(0xed33, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x892d, gbc.sp());
        EXPECT(0xed35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed33));
        EXPECT(0xf9, gbc.readMem(0xed34));
        // CB F9 023B
        gbc.setState(0x5eba, 0x9c58, 0xef40, 0xdd06, 0xc952, 0x5d67, 0x0, 0x1);
        gbc.writeMem(0x5eba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 023C
        gbc.setState(0x5e6e, 0x4360, 0xe240, 0xb3fa, 0x529b, 0x1798, 0x0, 0x0);
        gbc.writeMem(0x5e6e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x5e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 023D
        gbc.setState(0xc8d, 0x13b6, 0x23c0, 0x2c69, 0xdcd, 0x1c7c, 0x0, 0x0);
        gbc.writeMem(0xc8d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x13b6, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 023E
        gbc.setState(0x9e, 0x3c5c, 0xec60, 0xa707, 0x619f, 0xe728, 0x1, 0x0);
        gbc.writeMem(0x9e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0xa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 023F
        gbc.setState(0xd1c4, 0x56b, 0xc340, 0xce40, 0x147, 0xe175, 0x1, 0x1);
        gbc.writeMem(0xd1c4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xd1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c4));
        EXPECT(0xf9, gbc.readMem(0xd1c5));
        // CB F9 0240
        gbc.setState(0xc1ef, 0xd916, 0xf920, 0xa620, 0x9150, 0x80e0, 0x0, 0x0);
        gbc.writeMem(0xc1ef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd916, gbc.sp());
        EXPECT(0xc1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ef));
        EXPECT(0xf9, gbc.readMem(0xc1f0));
        // CB F9 0241
        gbc.setState(0x76fe, 0xa172, 0xce0, 0x74e, 0x3583, 0x6626, 0x0, 0x1);
        gbc.writeMem(0x76fe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x7700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0242
        gbc.setState(0x6407, 0x761e, 0x3cf0, 0xd385, 0x9605, 0xc477, 0x0, 0x0);
        gbc.writeMem(0x6407, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x761e, gbc.sp());
        EXPECT(0x6409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0243
        gbc.setState(0xbc32, 0xdcb1, 0x7a80, 0xfcbf, 0x7b71, 0xffc4, 0x1, 0x1);
        gbc.writeMem(0xbc32, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc32));
        EXPECT(0xf9, gbc.readMem(0xbc33));
        // CB F9 0244
        gbc.setState(0xce54, 0xc52a, 0x5620, 0x9b0f, 0x6fb5, 0xcc2, 0x0, 0x0);
        gbc.writeMem(0xce54, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0xce56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce54));
        EXPECT(0xf9, gbc.readMem(0xce55));
        // CB F9 0245
        gbc.setState(0x223, 0x6ee8, 0x44f0, 0xb6f8, 0x4774, 0x62ee, 0x0, 0x1);
        gbc.writeMem(0x223, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0246
        gbc.setState(0x1933, 0x456b, 0xe470, 0xcdaa, 0xe3b8, 0x29c3, 0x0, 0x0);
        gbc.writeMem(0x1933, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x456b, gbc.sp());
        EXPECT(0x1935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0247
        gbc.setState(0xec29, 0xe075, 0x37d0, 0x140a, 0xe103, 0xa544, 0x0, 0x1);
        gbc.writeMem(0xec29, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0xec2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec29));
        EXPECT(0xf9, gbc.readMem(0xec2a));
        // CB F9 0248
        gbc.setState(0x901a, 0xae8a, 0xc980, 0x5c4b, 0x2e2, 0xf776, 0x0, 0x0);
        gbc.writeMem(0x901a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae8a, gbc.sp());
        EXPECT(0x901c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901a));
        EXPECT(0xf9, gbc.readMem(0x901b));
        // CB F9 0249
        gbc.setState(0x75f2, 0x55ce, 0x1d60, 0x9712, 0xcc67, 0x2388, 0x1, 0x0);
        gbc.writeMem(0x75f2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 024B
        gbc.setState(0xce8d, 0x893f, 0xb980, 0x125d, 0x6408, 0x9a, 0x0, 0x0);
        gbc.writeMem(0xce8d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0xce8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8d));
        EXPECT(0xf9, gbc.readMem(0xce8e));
        // CB F9 024C
        gbc.setState(0x9e5, 0x2156, 0xeb00, 0x50ae, 0xec91, 0x35dc, 0x1, 0x1);
        gbc.writeMem(0x9e5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 024D
        gbc.setState(0xe857, 0x407d, 0xd190, 0xafa7, 0x81c6, 0x307c, 0x0, 0x0);
        gbc.writeMem(0xe857, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x407d, gbc.sp());
        EXPECT(0xe859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe857));
        EXPECT(0xf9, gbc.readMem(0xe858));
        // CB F9 024E
        gbc.setState(0x4005, 0x840d, 0x2850, 0x8067, 0x626f, 0xc03f, 0x0, 0x0);
        gbc.writeMem(0x4005, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x840d, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 024F
        gbc.setState(0x637b, 0xa0d2, 0x3b30, 0x352e, 0xbd37, 0x5b64, 0x0, 0x0);
        gbc.writeMem(0x637b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa0d2, gbc.sp());
        EXPECT(0x637d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0250
        gbc.setState(0x685e, 0x15dd, 0x3e60, 0xe93a, 0xaefa, 0x1dd2, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x15dd, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0251
        gbc.setState(0xb2f5, 0xaed5, 0x75a0, 0x19dc, 0xead1, 0x1f7b, 0x0, 0x1);
        gbc.writeMem(0xb2f5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaed5, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0xf9, gbc.readMem(0xb2f6));
        // CB F9 0252
        gbc.setState(0xdd4b, 0x675a, 0x86e0, 0x1c3a, 0xc918, 0xe97f, 0x0, 0x1);
        gbc.writeMem(0xdd4b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0xdd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4b));
        EXPECT(0xf9, gbc.readMem(0xdd4c));
        // CB F9 0253
        gbc.setState(0x8e6b, 0xff27, 0xea70, 0xed52, 0xc06a, 0x1ba, 0x1, 0x0);
        gbc.writeMem(0x8e6b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xff27, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6b));
        EXPECT(0xf9, gbc.readMem(0x8e6c));
        // CB F9 0254
        gbc.setState(0x68e6, 0x8fbb, 0x7520, 0x1539, 0xbb6b, 0x8ab0, 0x0, 0x0);
        gbc.writeMem(0x68e6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0x68e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0255
        gbc.setState(0x5198, 0xefc4, 0x83c0, 0xdea5, 0xe14c, 0x440a, 0x0, 0x1);
        gbc.writeMem(0x5198, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0x519a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0256
        gbc.setState(0x6ba7, 0x2768, 0xcfa0, 0xf412, 0x9f05, 0x41d8, 0x1, 0x1);
        gbc.writeMem(0x6ba7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0257
        gbc.setState(0x4367, 0xe523, 0xa980, 0xbf4, 0xb218, 0xe285, 0x1, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0258
        gbc.setState(0xe4e6, 0x48e, 0xeee0, 0x9ea3, 0x4b6a, 0x2f99, 0x0, 0x0);
        gbc.writeMem(0xe4e6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e6));
        EXPECT(0xf9, gbc.readMem(0xe4e7));
        // CB F9 0259
        gbc.setState(0xbb4, 0xea15, 0xb710, 0xc8d7, 0xea99, 0xdf1e, 0x1, 0x1);
        gbc.writeMem(0xbb4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xea15, gbc.sp());
        EXPECT(0xbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 025B
        gbc.setState(0x54ec, 0xce4a, 0xb9b0, 0xe134, 0x6306, 0x54aa, 0x0, 0x0);
        gbc.writeMem(0x54ec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce4a, gbc.sp());
        EXPECT(0x54ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 025C
        gbc.setState(0x9ced, 0x4820, 0x3e50, 0x5848, 0x1100, 0x6cd4, 0x0, 0x1);
        gbc.writeMem(0x9ced, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4820, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ced));
        EXPECT(0xf9, gbc.readMem(0x9cee));
        // CB F9 025D
        gbc.setState(0xd828, 0x545f, 0xa8b0, 0xd71d, 0xfb2a, 0x94b8, 0x1, 0x1);
        gbc.writeMem(0xd828, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd828));
        EXPECT(0xf9, gbc.readMem(0xd829));
        // CB F9 025E
        gbc.setState(0xdd35, 0x3945, 0x9d20, 0x115b, 0xcc1c, 0xb248, 0x1, 0x0);
        gbc.writeMem(0xdd35, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3945, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0xf9, gbc.readMem(0xdd36));
        // CB F9 0260
        gbc.setState(0xe5a2, 0x1f53, 0x9cb0, 0xc381, 0x7e8c, 0x1183, 0x0, 0x1);
        gbc.writeMem(0xe5a2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f53, gbc.sp());
        EXPECT(0xe5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a2));
        EXPECT(0xf9, gbc.readMem(0xe5a3));
        // CB F9 0261
        gbc.setState(0x6b50, 0x6591, 0xaf40, 0x7864, 0x748d, 0xfa7c, 0x1, 0x1);
        gbc.writeMem(0x6b50, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6591, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0262
        gbc.setState(0x2fb5, 0x99a0, 0x7600, 0x4a9e, 0xf793, 0x7a51, 0x1, 0x1);
        gbc.writeMem(0x2fb5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x99a0, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0263
        gbc.setState(0xa4cd, 0x956c, 0xc6c0, 0x2416, 0xd6a, 0xccc7, 0x1, 0x1);
        gbc.writeMem(0xa4cd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x956c, gbc.sp());
        EXPECT(0xa4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cd));
        EXPECT(0xf9, gbc.readMem(0xa4ce));
        // CB F9 0264
        gbc.setState(0x37e8, 0x1e4e, 0x90, 0xcd9f, 0x6443, 0xe350, 0x0, 0x1);
        gbc.writeMem(0x37e8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0x37ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0265
        gbc.setState(0x69ac, 0xdee, 0xb280, 0x570a, 0x5536, 0x17ba, 0x1, 0x0);
        gbc.writeMem(0x69ac, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdee, gbc.sp());
        EXPECT(0x69ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0266
        gbc.setState(0x1450, 0x94e1, 0x70b0, 0xccda, 0x500c, 0x3809, 0x0, 0x0);
        gbc.writeMem(0x1450, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x94e1, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0267
        gbc.setState(0x6a27, 0xba1e, 0x6670, 0x2520, 0xd120, 0xa0a8, 0x0, 0x1);
        gbc.writeMem(0x6a27, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x6a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0268
        gbc.setState(0x5031, 0x9028, 0xd5c0, 0x1ceb, 0xef31, 0x17c7, 0x1, 0x1);
        gbc.writeMem(0x5031, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0x5033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0269
        gbc.setState(0x860a, 0xce07, 0xa70, 0xad1d, 0xba7c, 0xbf5d, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860a));
        EXPECT(0xf9, gbc.readMem(0x860b));
        // CB F9 026A
        gbc.setState(0x94b7, 0x20d6, 0xa8c0, 0xac9e, 0x8118, 0x81f9, 0x0, 0x1);
        gbc.writeMem(0x94b7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x20d6, gbc.sp());
        EXPECT(0x94b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b7));
        EXPECT(0xf9, gbc.readMem(0x94b8));
        // CB F9 026B
        gbc.setState(0x839d, 0xf869, 0xb0e0, 0x5582, 0xc0a4, 0xcca7, 0x0, 0x0);
        gbc.writeMem(0x839d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf869, gbc.sp());
        EXPECT(0x839f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839d));
        EXPECT(0xf9, gbc.readMem(0x839e));
        // CB F9 026C
        gbc.setState(0x8d5f, 0xca0b, 0x9e10, 0xbe1c, 0xe3eb, 0xc875, 0x0, 0x1);
        gbc.writeMem(0x8d5f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca0b, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5f));
        EXPECT(0xf9, gbc.readMem(0x8d60));
        // CB F9 026D
        gbc.setState(0x7ad9, 0xa2b6, 0x2fc0, 0x2fec, 0x8c8c, 0x7b13, 0x1, 0x0);
        gbc.writeMem(0x7ad9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x7adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 026F
        gbc.setState(0x393, 0x8a3c, 0xf030, 0x3ff7, 0x9382, 0x2f0f, 0x1, 0x0);
        gbc.writeMem(0x393, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0270
        gbc.setState(0x153c, 0x3a2e, 0xdd40, 0x9a14, 0x974f, 0x1c86, 0x1, 0x0);
        gbc.writeMem(0x153c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3a2e, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0271
        gbc.setState(0x3c7a, 0x9e69, 0xa5b0, 0x7d46, 0x96c4, 0xce3d, 0x1, 0x1);
        gbc.writeMem(0x3c7a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0272
        gbc.setState(0x7322, 0x3203, 0x5980, 0xa589, 0x9a30, 0x4c2d, 0x1, 0x0);
        gbc.writeMem(0x7322, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0273
        gbc.setState(0x6c83, 0x8f5, 0xf4b0, 0x18da, 0xe162, 0x7b06, 0x0, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8f5, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0274
        gbc.setState(0x4c3, 0x88d4, 0x9000, 0x2569, 0x2a4, 0xedc9, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0275
        gbc.setState(0x12b8, 0x9d22, 0xf3b0, 0xe589, 0xf8a2, 0xde78, 0x1, 0x1);
        gbc.writeMem(0x12b8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9d22, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0276
        gbc.setState(0x446d, 0x119a, 0x4170, 0x6bb7, 0xa68d, 0xd3d4, 0x0, 0x0);
        gbc.writeMem(0x446d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0x446f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0277
        gbc.setState(0x4b68, 0x479d, 0xb2d0, 0xfa97, 0xaec7, 0xbb70, 0x0, 0x0);
        gbc.writeMem(0x4b68, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x479d, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0278
        gbc.setState(0x6129, 0x9145, 0xf9c0, 0x7b3e, 0x896a, 0x2841, 0x0, 0x0);
        gbc.writeMem(0x6129, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9145, gbc.sp());
        EXPECT(0x612b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0279
        gbc.setState(0x74c, 0xb53c, 0xf860, 0x612f, 0x4b2a, 0x4647, 0x1, 0x1);
        gbc.writeMem(0x74c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0x74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 027A
        gbc.setState(0x138a, 0x7de2, 0x81f0, 0x40eb, 0x816e, 0x50c6, 0x1, 0x0);
        gbc.writeMem(0x138a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 027B
        gbc.setState(0xaad5, 0xd2b8, 0xce80, 0xa98b, 0xc123, 0x1c62, 0x1, 0x0);
        gbc.writeMem(0xaad5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd2b8, gbc.sp());
        EXPECT(0xaad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad5));
        EXPECT(0xf9, gbc.readMem(0xaad6));
        // CB F9 027C
        gbc.setState(0x2edf, 0x4b45, 0xa890, 0xcc38, 0xbce6, 0xf71d, 0x1, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 027E
        gbc.setState(0x90d2, 0x64a9, 0x1a30, 0x4285, 0x5065, 0x90e3, 0x0, 0x0);
        gbc.writeMem(0x90d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d2));
        EXPECT(0xf9, gbc.readMem(0x90d3));
        // CB F9 027F
        gbc.setState(0xdce6, 0x6ea6, 0xf530, 0x7a21, 0x79c5, 0x6cb8, 0x1, 0x1);
        gbc.writeMem(0xdce6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6ea6, gbc.sp());
        EXPECT(0xdce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce6));
        EXPECT(0xf9, gbc.readMem(0xdce7));
        // CB F9 0280
        gbc.setState(0xcf8, 0xbee, 0x6990, 0xafaf, 0x9aa9, 0x2f88, 0x0, 0x1);
        gbc.writeMem(0xcf8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbee, gbc.sp());
        EXPECT(0xcfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0281
        gbc.setState(0xd5b1, 0xca84, 0xe8d0, 0x332e, 0x4afa, 0x28d6, 0x1, 0x1);
        gbc.writeMem(0xd5b1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xca84, gbc.sp());
        EXPECT(0xd5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b1));
        EXPECT(0xf9, gbc.readMem(0xd5b2));
        // CB F9 0282
        gbc.setState(0x4326, 0xa47e, 0x4d60, 0x1deb, 0xba5a, 0x78fa, 0x0, 0x1);
        gbc.writeMem(0x4326, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa47e, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0283
        gbc.setState(0x49a4, 0x6848, 0x75c0, 0x7898, 0x5549, 0x2b8b, 0x1, 0x1);
        gbc.writeMem(0x49a4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0284
        gbc.setState(0x9006, 0xc591, 0xc320, 0x6fba, 0x64e5, 0xa6bf, 0x1, 0x1);
        gbc.writeMem(0x9006, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x9008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9006));
        EXPECT(0xf9, gbc.readMem(0x9007));
        // CB F9 0285
        gbc.setState(0xabc, 0xf40c, 0x8ac0, 0xca4d, 0xea5, 0x6c9b, 0x1, 0x1);
        gbc.writeMem(0xabc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf40c, gbc.sp());
        EXPECT(0xabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0286
        gbc.setState(0x357f, 0x7ca1, 0x9ed0, 0x3a2e, 0x5964, 0x797, 0x1, 0x1);
        gbc.writeMem(0x357f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0287
        gbc.setState(0xc56, 0xcdb6, 0xbf20, 0xd8ff, 0x6cc3, 0xb09c, 0x1, 0x1);
        gbc.writeMem(0xc56, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0288
        gbc.setState(0x403d, 0x23f0, 0xc5a0, 0x4ec2, 0x415e, 0x15d9, 0x0, 0x0);
        gbc.writeMem(0x403d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0289
        gbc.setState(0x901e, 0x1b84, 0x3900, 0x5d47, 0x5b71, 0xb08d, 0x0, 0x0);
        gbc.writeMem(0x901e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901e));
        EXPECT(0xf9, gbc.readMem(0x901f));
        // CB F9 028A
        gbc.setState(0x2f82, 0xee8d, 0x5300, 0x1ab6, 0x53e4, 0x808e, 0x0, 0x0);
        gbc.writeMem(0x2f82, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xee8d, gbc.sp());
        EXPECT(0x2f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 028B
        gbc.setState(0xb1f4, 0x53b, 0xc310, 0xdd8e, 0xef8a, 0x7799, 0x0, 0x0);
        gbc.writeMem(0xb1f4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x53b, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f4));
        EXPECT(0xf9, gbc.readMem(0xb1f5));
        // CB F9 028C
        gbc.setState(0x40cd, 0xe800, 0x9a30, 0x415b, 0x3151, 0xc139, 0x0, 0x1);
        gbc.writeMem(0x40cd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe800, gbc.sp());
        EXPECT(0x40cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 028D
        gbc.setState(0xd405, 0x31e8, 0x1930, 0x574d, 0x553a, 0x5191, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd405));
        EXPECT(0xf9, gbc.readMem(0xd406));
        // CB F9 0290
        gbc.setState(0x287, 0xacea, 0xe1e0, 0xf71, 0x228a, 0x423b, 0x1, 0x1);
        gbc.writeMem(0x287, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0x289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0291
        gbc.setState(0xdcd1, 0xe2ee, 0x2d80, 0x54b8, 0xa6c4, 0x6dac, 0x0, 0x0);
        gbc.writeMem(0xdcd1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe2ee, gbc.sp());
        EXPECT(0xdcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd1));
        EXPECT(0xf9, gbc.readMem(0xdcd2));
        // CB F9 0292
        gbc.setState(0xebee, 0x5e19, 0x4590, 0x7d76, 0x7b8f, 0x9674, 0x1, 0x0);
        gbc.writeMem(0xebee, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e19, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0xf9, gbc.readMem(0xebef));
        // CB F9 0293
        gbc.setState(0xb6b6, 0xca23, 0x3880, 0xb569, 0x8703, 0x6ca, 0x1, 0x1);
        gbc.writeMem(0xb6b6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b6));
        EXPECT(0xf9, gbc.readMem(0xb6b7));
        // CB F9 0294
        gbc.setState(0xe4dd, 0xca25, 0xc8f0, 0x63ed, 0x8829, 0x2b88, 0x0, 0x1);
        gbc.writeMem(0xe4dd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4dd));
        EXPECT(0xf9, gbc.readMem(0xe4de));
        // CB F9 0295
        gbc.setState(0x677b, 0x5ff, 0x3420, 0x9a8f, 0xda25, 0x1d4d, 0x1, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0296
        gbc.setState(0xa219, 0xa012, 0x5a10, 0xe1a3, 0x4c72, 0x5686, 0x0, 0x0);
        gbc.writeMem(0xa219, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa219));
        EXPECT(0xf9, gbc.readMem(0xa21a));
        // CB F9 0298
        gbc.setState(0x2865, 0x7c90, 0xcb30, 0x61c7, 0x8934, 0x7814, 0x1, 0x1);
        gbc.writeMem(0x2865, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0x2867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0299
        gbc.setState(0xc03e, 0xa41c, 0x9200, 0x1d06, 0xb342, 0x3d9, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0xf9, gbc.readMem(0xc03f));
        // CB F9 029A
        gbc.setState(0x90c1, 0x1fd6, 0x24e0, 0x2b9e, 0x568c, 0x2962, 0x0, 0x1);
        gbc.writeMem(0x90c1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1fd6, gbc.sp());
        EXPECT(0x90c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c1));
        EXPECT(0xf9, gbc.readMem(0x90c2));
        // CB F9 029B
        gbc.setState(0xaca1, 0x2336, 0x8f0, 0xaea6, 0xcd51, 0x5a15, 0x1, 0x0);
        gbc.writeMem(0xaca1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2336, gbc.sp());
        EXPECT(0xaca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca1));
        EXPECT(0xf9, gbc.readMem(0xaca2));
        // CB F9 029C
        gbc.setState(0xc9fd, 0x409d, 0x4830, 0xa7c5, 0x5985, 0xa3ed, 0x1, 0x0);
        gbc.writeMem(0xc9fd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fd));
        EXPECT(0xf9, gbc.readMem(0xc9fe));
        // CB F9 029D
        gbc.setState(0xc031, 0xc0cd, 0x9c90, 0x9dd4, 0x7615, 0x1306, 0x1, 0x0);
        gbc.writeMem(0xc031, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc0cd, gbc.sp());
        EXPECT(0xc033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc031));
        EXPECT(0xf9, gbc.readMem(0xc032));
        // CB F9 029E
        gbc.setState(0xbc9d, 0x841f, 0x3f30, 0xe95, 0xb99b, 0xfe72, 0x1, 0x1);
        gbc.writeMem(0xbc9d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0xf9, gbc.readMem(0xbc9e));
        // CB F9 029F
        gbc.setState(0x12ed, 0xc1df, 0xa450, 0xba28, 0x1b41, 0xfc1c, 0x0, 0x0);
        gbc.writeMem(0x12ed, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc1df, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02A0
        gbc.setState(0x25ac, 0x4f5c, 0x7240, 0x307, 0xc3df, 0x8595, 0x0, 0x1);
        gbc.writeMem(0x25ac, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0x25ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02A1
        gbc.setState(0xda19, 0x6638, 0xc180, 0x6330, 0x1080, 0x8ca2, 0x1, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0xf9, gbc.readMem(0xda1a));
        // CB F9 02A2
        gbc.setState(0x2092, 0xf15e, 0x4600, 0xbe6b, 0xfa43, 0x228e, 0x1, 0x0);
        gbc.writeMem(0x2092, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf15e, gbc.sp());
        EXPECT(0x2094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02A3
        gbc.setState(0x9423, 0x4787, 0xdb60, 0x8b0c, 0xfaba, 0x11e3, 0x0, 0x1);
        gbc.writeMem(0x9423, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4787, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9423));
        EXPECT(0xf9, gbc.readMem(0x9424));
        // CB F9 02A4
        gbc.setState(0x5086, 0x97df, 0x5b10, 0x8ab0, 0x8ee5, 0x5962, 0x0, 0x0);
        gbc.writeMem(0x5086, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0x5088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02A5
        gbc.setState(0x64ef, 0xf1d1, 0x5940, 0xdca0, 0xed0a, 0x7249, 0x1, 0x1);
        gbc.writeMem(0x64ef, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf1d1, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02A6
        gbc.setState(0xa9f4, 0x84cb, 0xc630, 0xa548, 0xf9e8, 0xd36a, 0x1, 0x1);
        gbc.writeMem(0xa9f4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0xa9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f4));
        EXPECT(0xf9, gbc.readMem(0xa9f5));
        // CB F9 02A7
        gbc.setState(0xd9df, 0x81e, 0xf8a0, 0xee90, 0x715a, 0xfe1b, 0x1, 0x1);
        gbc.writeMem(0xd9df, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0xd9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9df));
        EXPECT(0xf9, gbc.readMem(0xd9e0));
        // CB F9 02A8
        gbc.setState(0x7f76, 0x74eb, 0xe320, 0xba45, 0xe5ef, 0xc30b, 0x1, 0x0);
        gbc.writeMem(0x7f76, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x74eb, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02A9
        gbc.setState(0x3a8, 0x2b62, 0x9500, 0x82ec, 0xccf1, 0x6eae, 0x0, 0x0);
        gbc.writeMem(0x3a8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0x3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02AA
        gbc.setState(0xd333, 0xa530, 0xea40, 0x8d0f, 0x8d19, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0xd333, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa530, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd333));
        EXPECT(0xf9, gbc.readMem(0xd334));
        // CB F9 02AB
        gbc.setState(0xa3fd, 0x4e02, 0xd70, 0xd9c5, 0xec1f, 0x236f, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4e02, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0xf9, gbc.readMem(0xa3fe));
        // CB F9 02AC
        gbc.setState(0xc48e, 0x7a54, 0xb960, 0x74cf, 0xf421, 0x526, 0x1, 0x1);
        gbc.writeMem(0xc48e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0xf9, gbc.readMem(0xc48f));
        // CB F9 02AD
        gbc.setState(0x64f8, 0x9684, 0xc880, 0xfb3f, 0xc666, 0x1d09, 0x0, 0x1);
        gbc.writeMem(0x64f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9684, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02AE
        gbc.setState(0x87, 0x9d07, 0x9650, 0xa92c, 0x15c9, 0xffd7, 0x0, 0x0);
        gbc.writeMem(0x87, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9d07, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02AF
        gbc.setState(0xc33c, 0xc78b, 0x3df0, 0xf8d4, 0x72d8, 0x6971, 0x0, 0x1);
        gbc.writeMem(0xc33c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0xc33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33c));
        EXPECT(0xf9, gbc.readMem(0xc33d));
        // CB F9 02B0
        gbc.setState(0xdc16, 0x6fe3, 0xa770, 0xa8da, 0xf477, 0x5411, 0x0, 0x0);
        gbc.writeMem(0xdc16, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0xdc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc16));
        EXPECT(0xf9, gbc.readMem(0xdc17));
        // CB F9 02B1
        gbc.setState(0xe2ce, 0x1db7, 0x1f0, 0x89ab, 0xa7a0, 0xf3a3, 0x1, 0x0);
        gbc.writeMem(0xe2ce, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0xe2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ce));
        EXPECT(0xf9, gbc.readMem(0xe2cf));
        // CB F9 02B3
        gbc.setState(0xdb63, 0xcafe, 0x8a40, 0x538c, 0x35ff, 0x8e2d, 0x0, 0x1);
        gbc.writeMem(0xdb63, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcafe, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb63));
        EXPECT(0xf9, gbc.readMem(0xdb64));
        // CB F9 02B4
        gbc.setState(0x6e39, 0x3706, 0x58b0, 0x7cc0, 0xf098, 0xb7e9, 0x1, 0x0);
        gbc.writeMem(0x6e39, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3706, gbc.sp());
        EXPECT(0x6e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02B5
        gbc.setState(0xc2c2, 0x9cb8, 0xf960, 0xf0a6, 0xef12, 0xa7ec, 0x0, 0x1);
        gbc.writeMem(0xc2c2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c2));
        EXPECT(0xf9, gbc.readMem(0xc2c3));
        // CB F9 02B6
        gbc.setState(0x43fb, 0xe6f0, 0x8300, 0xf4df, 0xada6, 0x2e10, 0x0, 0x0);
        gbc.writeMem(0x43fb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe6f0, gbc.sp());
        EXPECT(0x43fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02B7
        gbc.setState(0x3008, 0x7bef, 0x93f0, 0x17e7, 0xc758, 0x556e, 0x1, 0x1);
        gbc.writeMem(0x3008, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x300a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02B8
        gbc.setState(0xdc0a, 0x8045, 0xf130, 0x8026, 0xcefe, 0xd51c, 0x0, 0x1);
        gbc.writeMem(0xdc0a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0xdc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0a));
        EXPECT(0xf9, gbc.readMem(0xdc0b));
        // CB F9 02B9
        gbc.setState(0xca51, 0x8c2d, 0x2600, 0x6e2c, 0x5b76, 0x1bfb, 0x1, 0x1);
        gbc.writeMem(0xca51, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8c2d, gbc.sp());
        EXPECT(0xca53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca51));
        EXPECT(0xf9, gbc.readMem(0xca52));
        // CB F9 02BA
        gbc.setState(0x9fb0, 0x20f, 0x36c0, 0xb4a8, 0x21e5, 0xeb3c, 0x0, 0x0);
        gbc.writeMem(0x9fb0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb0));
        EXPECT(0xf9, gbc.readMem(0x9fb1));
        // CB F9 02BB
        gbc.setState(0x7e3b, 0x1ccd, 0x51c0, 0x2b24, 0x7d50, 0xfb47, 0x0, 0x0);
        gbc.writeMem(0x7e3b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0x7e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02BC
        gbc.setState(0xe025, 0x5a08, 0x51d0, 0x4439, 0xe71f, 0x836e, 0x1, 0x0);
        gbc.writeMem(0xe025, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0xe027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe025));
        EXPECT(0xf9, gbc.readMem(0xe026));
        // CB F9 02BD
        gbc.setState(0x4735, 0x6398, 0xdca0, 0xab84, 0xc406, 0x921, 0x1, 0x0);
        gbc.writeMem(0x4735, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x4737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02BE
        gbc.setState(0x9f7d, 0x667e, 0xdb70, 0x7c33, 0xc62, 0xcc07, 0x0, 0x0);
        gbc.writeMem(0x9f7d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x667e, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7d));
        EXPECT(0xf9, gbc.readMem(0x9f7e));
        // CB F9 02BF
        gbc.setState(0xed86, 0x9d97, 0x87d0, 0x8805, 0x8c0c, 0xfd32, 0x1, 0x0);
        gbc.writeMem(0xed86, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9d97, gbc.sp());
        EXPECT(0xed88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed86));
        EXPECT(0xf9, gbc.readMem(0xed87));
        // CB F9 02C0
        gbc.setState(0x66c3, 0xb378, 0x29e0, 0x8ccd, 0xcbfe, 0xc269, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb378, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02C1
        gbc.setState(0x54f8, 0x9da, 0x110, 0xfaa6, 0xf35d, 0x9294, 0x1, 0x0);
        gbc.writeMem(0x54f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C2
        gbc.setState(0x505, 0x9af9, 0x9de0, 0x3262, 0xdfa7, 0x5b0e, 0x0, 0x0);
        gbc.writeMem(0x505, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0x507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02C3
        gbc.setState(0xaacc, 0x8291, 0x1780, 0x6e64, 0xbfbd, 0xd845, 0x1, 0x1);
        gbc.writeMem(0xaacc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacc));
        EXPECT(0xf9, gbc.readMem(0xaacd));
        // CB F9 02C4
        gbc.setState(0x15e1, 0x3af2, 0xf970, 0xf893, 0xa56d, 0xe289, 0x1, 0x0);
        gbc.writeMem(0x15e1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x15e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C5
        gbc.setState(0x6b15, 0xa25e, 0xb490, 0x539d, 0xcdc0, 0xc342, 0x1, 0x1);
        gbc.writeMem(0x6b15, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa25e, gbc.sp());
        EXPECT(0x6b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C6
        gbc.setState(0x1f25, 0x482d, 0x7410, 0x95cc, 0x17af, 0x6f75, 0x0, 0x1);
        gbc.writeMem(0x1f25, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0x1f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C7
        gbc.setState(0x4bd0, 0x273a, 0x4c70, 0xa005, 0xf592, 0x3977, 0x1, 0x0);
        gbc.writeMem(0x4bd0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x273a, gbc.sp());
        EXPECT(0x4bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C8
        gbc.setState(0x4a, 0x6750, 0x4cf0, 0x4bd5, 0x36f3, 0x5055, 0x1, 0x0);
        gbc.writeMem(0x4a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6750, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02C9
        gbc.setState(0x4030, 0xcf95, 0xd9d0, 0x57f2, 0xc12d, 0xa4b8, 0x1, 0x0);
        gbc.writeMem(0x4030, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0x4032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02CA
        gbc.setState(0x4602, 0xc6d, 0x3550, 0x6e02, 0x3a5f, 0x83f6, 0x1, 0x0);
        gbc.writeMem(0x4602, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0x4604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02CB
        gbc.setState(0xc6e2, 0xf883, 0x96e0, 0xd2fc, 0xeb4a, 0xb4f3, 0x0, 0x0);
        gbc.writeMem(0xc6e2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf883, gbc.sp());
        EXPECT(0xc6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e2));
        EXPECT(0xf9, gbc.readMem(0xc6e3));
        // CB F9 02CC
        gbc.setState(0x5636, 0xf303, 0xc180, 0xc628, 0x8d8, 0x25e, 0x0, 0x0);
        gbc.writeMem(0x5636, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf303, gbc.sp());
        EXPECT(0x5638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02CD
        gbc.setState(0xcad1, 0x60, 0x2200, 0x6fbd, 0x571, 0xba4c, 0x1, 0x0);
        gbc.writeMem(0xcad1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0xcad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad1));
        EXPECT(0xf9, gbc.readMem(0xcad2));
        // CB F9 02CE
        gbc.setState(0xc500, 0x274, 0xe440, 0xbc8f, 0xc923, 0x7fef, 0x0, 0x0);
        gbc.writeMem(0xc500, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x274, gbc.sp());
        EXPECT(0xc502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc500));
        EXPECT(0xf9, gbc.readMem(0xc501));
        // CB F9 02CF
        gbc.setState(0x91da, 0xf8d8, 0x35d0, 0xba06, 0x2e15, 0xa797, 0x1, 0x1);
        gbc.writeMem(0x91da, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0xf9, gbc.readMem(0x91db));
        // CB F9 02D0
        gbc.setState(0x29e0, 0x89c6, 0x4890, 0x5a27, 0xa6eb, 0xba50, 0x0, 0x0);
        gbc.writeMem(0x29e0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x89c6, gbc.sp());
        EXPECT(0x29e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02D1
        gbc.setState(0xdc9a, 0x2718, 0xe360, 0x6b28, 0x12f3, 0x433e, 0x1, 0x0);
        gbc.writeMem(0xdc9a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2718, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9a));
        EXPECT(0xf9, gbc.readMem(0xdc9b));
        // CB F9 02D2
        gbc.setState(0xef48, 0x1272, 0xd120, 0xb509, 0x91a9, 0x2957, 0x1, 0x1);
        gbc.writeMem(0xef48, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0xef4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef48));
        EXPECT(0xf9, gbc.readMem(0xef49));
        // CB F9 02D3
        gbc.setState(0x235, 0x8fd, 0x2d20, 0x6eea, 0x3be, 0x64ff, 0x0, 0x1);
        gbc.writeMem(0x235, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8fd, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02D4
        gbc.setState(0x35c2, 0xb564, 0x18f0, 0x490e, 0x4d08, 0x8d05, 0x1, 0x1);
        gbc.writeMem(0x35c2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb564, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02D5
        gbc.setState(0x51cb, 0x4ab7, 0x3260, 0x9826, 0xa6f4, 0x9bd1, 0x0, 0x0);
        gbc.writeMem(0x51cb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4ab7, gbc.sp());
        EXPECT(0x51cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02D7
        gbc.setState(0x149f, 0xddad, 0xc800, 0x7080, 0xaee9, 0x10cf, 0x0, 0x1);
        gbc.writeMem(0x149f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02D9
        gbc.setState(0x7da6, 0x11a4, 0xc170, 0x33e4, 0x30f2, 0x662d, 0x0, 0x1);
        gbc.writeMem(0x7da6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02DA
        gbc.setState(0xee44, 0x5c91, 0x42b0, 0x46ba, 0x2bc1, 0x7239, 0x1, 0x1);
        gbc.writeMem(0xee44, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0xee46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee44));
        EXPECT(0xf9, gbc.readMem(0xee45));
        // CB F9 02DB
        gbc.setState(0x3422, 0x5eda, 0x8fc0, 0xabfa, 0xa7a6, 0xf134, 0x0, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0x3424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02DC
        gbc.setState(0x7bd5, 0xd204, 0x7c40, 0x70b, 0xe3f0, 0xd86c, 0x0, 0x1);
        gbc.writeMem(0x7bd5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0x7bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02DD
        gbc.setState(0x488d, 0x649a, 0x71c0, 0xb778, 0x2ea6, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x488d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02DE
        gbc.setState(0xe8a6, 0xe937, 0x920, 0x4540, 0xdef, 0x1d47, 0x1, 0x0);
        gbc.writeMem(0xe8a6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0xe8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a6));
        EXPECT(0xf9, gbc.readMem(0xe8a7));
        // CB F9 02DF
        gbc.setState(0x5e3a, 0xd134, 0x9340, 0xb5a7, 0x5a96, 0xfe61, 0x1, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd134, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02E0
        gbc.setState(0x9956, 0xbe09, 0x9430, 0x75ce, 0xcfbb, 0xa66d, 0x1, 0x1);
        gbc.writeMem(0x9956, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbe09, gbc.sp());
        EXPECT(0x9958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9956));
        EXPECT(0xf9, gbc.readMem(0x9957));
        // CB F9 02E1
        gbc.setState(0xbc63, 0x4d7b, 0x3fe0, 0x88ae, 0x58e4, 0x90da, 0x1, 0x1);
        gbc.writeMem(0xbc63, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0xbc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc63));
        EXPECT(0xf9, gbc.readMem(0xbc64));
        // CB F9 02E2
        gbc.setState(0xb602, 0x3fe3, 0x8310, 0xa7f4, 0xec89, 0x805b, 0x0, 0x1);
        gbc.writeMem(0xb602, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3fe3, gbc.sp());
        EXPECT(0xb604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb602));
        EXPECT(0xf9, gbc.readMem(0xb603));
        // CB F9 02E3
        gbc.setState(0x1d3c, 0xc7e1, 0xeea0, 0x2ee0, 0x4296, 0xdd60, 0x0, 0x1);
        gbc.writeMem(0x1d3c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0x1d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02E4
        gbc.setState(0x362f, 0x1fce, 0xd2e0, 0x2488, 0xf448, 0xf1ff, 0x0, 0x1);
        gbc.writeMem(0x362f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0x3631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02E5
        gbc.setState(0x6a49, 0x578f, 0x5dc0, 0xca03, 0x413d, 0xdcf6, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0x6a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02E6
        gbc.setState(0xc36, 0xddf9, 0xe730, 0xab8d, 0x84a8, 0xc42d, 0x1, 0x0);
        gbc.writeMem(0xc36, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xddf9, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02E7
        gbc.setState(0x2236, 0x64d7, 0x8a40, 0x4f1f, 0x8a89, 0x2b62, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02E8
        gbc.setState(0x661f, 0x73d1, 0x2fd0, 0xa99f, 0x1c73, 0xca1d, 0x1, 0x1);
        gbc.writeMem(0x661f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02E9
        gbc.setState(0xba19, 0xf0ce, 0x7b10, 0x4ac3, 0x4bab, 0x47bc, 0x1, 0x0);
        gbc.writeMem(0xba19, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba19));
        EXPECT(0xf9, gbc.readMem(0xba1a));
        // CB F9 02EA
        gbc.setState(0x87df, 0x6051, 0xc4f0, 0x6ddf, 0x8d7f, 0x91ae, 0x0, 0x0);
        gbc.writeMem(0x87df, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0x87e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87df));
        EXPECT(0xf9, gbc.readMem(0x87e0));
        // CB F9 02EB
        gbc.setState(0x74d3, 0xfb97, 0x4770, 0xd868, 0x6842, 0xd41e, 0x1, 0x0);
        gbc.writeMem(0x74d3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb97, gbc.sp());
        EXPECT(0x74d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02EC
        gbc.setState(0x3c7f, 0xef99, 0x7650, 0xf202, 0x9879, 0x6fa0, 0x1, 0x0);
        gbc.writeMem(0x3c7f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef99, gbc.sp());
        EXPECT(0x3c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02ED
        gbc.setState(0x888f, 0x7528, 0xda0, 0x9814, 0xcf5d, 0x38b1, 0x1, 0x1);
        gbc.writeMem(0x888f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888f));
        EXPECT(0xf9, gbc.readMem(0x8890));
        // CB F9 02EE
        gbc.setState(0x9458, 0xfe88, 0xc1a0, 0x6355, 0x4d4c, 0xbed3, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfe88, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9458));
        EXPECT(0xf9, gbc.readMem(0x9459));
        // CB F9 02EF
        gbc.setState(0x247c, 0xbdd1, 0xef60, 0xb023, 0xa07e, 0xeca3, 0x0, 0x0);
        gbc.writeMem(0x247c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0x247e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02F0
        gbc.setState(0x9bba, 0x6785, 0xd50, 0x745, 0x39d6, 0x79f2, 0x1, 0x0);
        gbc.writeMem(0x9bba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6785, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bba));
        EXPECT(0xf9, gbc.readMem(0x9bbb));
        // CB F9 02F1
        gbc.setState(0x6137, 0xe4f, 0x87e0, 0x4ab, 0x8593, 0x1888, 0x0, 0x1);
        gbc.writeMem(0x6137, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02F2
        gbc.setState(0x5e30, 0xd256, 0x85a0, 0xd278, 0xba41, 0xc94, 0x1, 0x0);
        gbc.writeMem(0x5e30, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd256, gbc.sp());
        EXPECT(0x5e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02F3
        gbc.setState(0x8812, 0x1e55, 0x8710, 0x3a21, 0x952c, 0x1af6, 0x1, 0x1);
        gbc.writeMem(0x8812, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1e55, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8812));
        EXPECT(0xf9, gbc.readMem(0x8813));
        // CB F9 02F4
        gbc.setState(0x1030, 0xfa08, 0xcbe0, 0x8cc2, 0xb8f2, 0x47fe, 0x0, 0x1);
        gbc.writeMem(0x1030, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02F5
        gbc.setState(0x6217, 0xf40e, 0xa410, 0x9c95, 0xa939, 0xfec5, 0x1, 0x1);
        gbc.writeMem(0x6217, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02F6
        gbc.setState(0x3e80, 0x6740, 0x4a60, 0x5a71, 0x97aa, 0x3bfe, 0x0, 0x1);
        gbc.writeMem(0x3e80, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0x3e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02F7
        gbc.setState(0xd89a, 0xcb8c, 0xdd50, 0xdd1e, 0x41fb, 0x300b, 0x0, 0x1);
        gbc.writeMem(0xd89a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0xf9, gbc.readMem(0xd89b));
        // CB F9 02F8
        gbc.setState(0x53f2, 0xa317, 0x81d0, 0x547f, 0xc701, 0xbaec, 0x1, 0x1);
        gbc.writeMem(0x53f2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x53f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 02F9
        gbc.setState(0x52cf, 0x958a, 0x1ac0, 0x42f, 0x22e4, 0x4faa, 0x0, 0x0);
        gbc.writeMem(0x52cf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 02FA
        gbc.setState(0xdf1a, 0x22b4, 0xbb10, 0xc7a1, 0xc226, 0x8bb, 0x1, 0x0);
        gbc.writeMem(0xdf1a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0xdf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1a));
        EXPECT(0xf9, gbc.readMem(0xdf1b));
        // CB F9 02FB
        gbc.setState(0xaa33, 0xae74, 0x8a90, 0xd79a, 0x7fe8, 0xf253, 0x0, 0x0);
        gbc.writeMem(0xaa33, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0xaa35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa33));
        EXPECT(0xf9, gbc.readMem(0xaa34));
        // CB F9 02FC
        gbc.setState(0xad5e, 0x2596, 0x8070, 0x69d8, 0x1451, 0x538e, 0x1, 0x1);
        gbc.writeMem(0xad5e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5e));
        EXPECT(0xf9, gbc.readMem(0xad5f));
        // CB F9 02FD
        gbc.setState(0xb403, 0x2de9, 0xf090, 0x4314, 0x87bf, 0x482, 0x1, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0xb405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb403));
        EXPECT(0xf9, gbc.readMem(0xb404));
        // CB F9 02FE
        gbc.setState(0x9413, 0xb627, 0x3ae0, 0xc4ff, 0xa681, 0x7596, 0x0, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0x9415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9413));
        EXPECT(0xf9, gbc.readMem(0x9414));
        // CB F9 02FF
        gbc.setState(0x95ab, 0x3618, 0x5b50, 0xc806, 0x8dd0, 0xe65f, 0x0, 0x0);
        gbc.writeMem(0x95ab, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ab));
        EXPECT(0xf9, gbc.readMem(0x95ac));
        // CB F9 0300
        gbc.setState(0xc0fe, 0x3fe6, 0x9270, 0x4605, 0xc321, 0xe4cf, 0x0, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0xc100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fe));
        EXPECT(0xf9, gbc.readMem(0xc0ff));
        // CB F9 0301
        gbc.setState(0x40cd, 0xcefe, 0x1550, 0x62bc, 0x5af0, 0xec3c, 0x1, 0x1);
        gbc.writeMem(0x40cd, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0x40cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0302
        gbc.setState(0xb513, 0xb54b, 0x7cb0, 0xebc5, 0xb9ba, 0xc6a4, 0x0, 0x1);
        gbc.writeMem(0xb513, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb54b, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb513));
        EXPECT(0xf9, gbc.readMem(0xb514));
        // CB F9 0303
        gbc.setState(0xb3b3, 0x308d, 0x2050, 0xe109, 0xa16f, 0xec6d, 0x1, 0x1);
        gbc.writeMem(0xb3b3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x308d, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b3));
        EXPECT(0xf9, gbc.readMem(0xb3b4));
        // CB F9 0305
        gbc.setState(0xe71e, 0xe4db, 0x8670, 0xf462, 0xd85b, 0x514f, 0x1, 0x0);
        gbc.writeMem(0xe71e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0xf9, gbc.readMem(0xe71f));
        // CB F9 0306
        gbc.setState(0x714c, 0xe412, 0x84e0, 0x1793, 0x807f, 0x1942, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe412, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0307
        gbc.setState(0xbd6f, 0xb850, 0xf440, 0xa8dd, 0xbc9a, 0x63e8, 0x0, 0x1);
        gbc.writeMem(0xbd6f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6f));
        EXPECT(0xf9, gbc.readMem(0xbd70));
        // CB F9 0308
        gbc.setState(0x1b5e, 0xce0, 0xfe50, 0x27e2, 0x2a1d, 0x29f9, 0x1, 0x1);
        gbc.writeMem(0x1b5e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xce0, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0309
        gbc.setState(0x8e61, 0x9909, 0xdd20, 0xdf, 0xfa8b, 0xf624, 0x1, 0x0);
        gbc.writeMem(0x8e61, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9909, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e61));
        EXPECT(0xf9, gbc.readMem(0x8e62));
        // CB F9 030A
        gbc.setState(0xe826, 0xf68e, 0xe780, 0x2a5f, 0xc4b2, 0xfffb, 0x1, 0x1);
        gbc.writeMem(0xe826, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0xe828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe826));
        EXPECT(0xf9, gbc.readMem(0xe827));
        // CB F9 030B
        gbc.setState(0x9363, 0x4ab4, 0xd920, 0x2035, 0xfd83, 0x9154, 0x0, 0x1);
        gbc.writeMem(0x9363, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9363));
        EXPECT(0xf9, gbc.readMem(0x9364));
        // CB F9 030C
        gbc.setState(0xca14, 0xc553, 0x98c0, 0x7a78, 0x8d48, 0xac46, 0x1, 0x1);
        gbc.writeMem(0xca14, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc553, gbc.sp());
        EXPECT(0xca16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca14));
        EXPECT(0xf9, gbc.readMem(0xca15));
        // CB F9 030E
        gbc.setState(0x34c0, 0xef43, 0x5b40, 0xe277, 0xad72, 0xdb91, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xef43, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 030F
        gbc.setState(0xb527, 0x268b, 0x15e0, 0x79ca, 0x3b96, 0xc7e2, 0x0, 0x0);
        gbc.writeMem(0xb527, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x268b, gbc.sp());
        EXPECT(0xb529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb527));
        EXPECT(0xf9, gbc.readMem(0xb528));
        // CB F9 0310
        gbc.setState(0x6db3, 0xf537, 0x5b10, 0x5789, 0x7cb9, 0x8391, 0x0, 0x1);
        gbc.writeMem(0x6db3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf537, gbc.sp());
        EXPECT(0x6db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0311
        gbc.setState(0xd5, 0x5308, 0x1470, 0xd0e, 0x3e2f, 0x12dd, 0x0, 0x1);
        gbc.writeMem(0xd5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0xd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0312
        gbc.setState(0x8043, 0x75f7, 0x7980, 0x6e55, 0x9521, 0xb5af, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x75f7, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8043));
        EXPECT(0xf9, gbc.readMem(0x8044));
        // CB F9 0313
        gbc.setState(0xc929, 0x2754, 0xa9f0, 0xba00, 0x2bde, 0x7194, 0x0, 0x0);
        gbc.writeMem(0xc929, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2754, gbc.sp());
        EXPECT(0xc92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc929));
        EXPECT(0xf9, gbc.readMem(0xc92a));
        // CB F9 0314
        gbc.setState(0x47e2, 0xf3d1, 0x7d0, 0xdc14, 0x7882, 0x1d62, 0x0, 0x0);
        gbc.writeMem(0x47e2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x47e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0315
        gbc.setState(0x61f5, 0x7c5d, 0xcd90, 0x4786, 0xf871, 0x72b3, 0x0, 0x1);
        gbc.writeMem(0x61f5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0x61f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0316
        gbc.setState(0x7503, 0xc8fe, 0x6d90, 0x9acf, 0x1673, 0x2ad2, 0x1, 0x0);
        gbc.writeMem(0x7503, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8fe, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0317
        gbc.setState(0x2a60, 0xb699, 0x2600, 0xd9cc, 0xbd2d, 0x21db, 0x0, 0x1);
        gbc.writeMem(0x2a60, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0x2a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0318
        gbc.setState(0xb605, 0x9c73, 0x28d0, 0x7c7f, 0x5fce, 0xfd63, 0x0, 0x0);
        gbc.writeMem(0xb605, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9c73, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb605));
        EXPECT(0xf9, gbc.readMem(0xb606));
        // CB F9 0319
        gbc.setState(0x8025, 0xaef1, 0x1300, 0x2daf, 0x18f8, 0x1caa, 0x1, 0x1);
        gbc.writeMem(0x8025, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaef1, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8025));
        EXPECT(0xf9, gbc.readMem(0x8026));
        // CB F9 031A
        gbc.setState(0xa6, 0x8007, 0xd200, 0x8ed1, 0xb901, 0x4621, 0x0, 0x0);
        gbc.writeMem(0xa6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0xa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 031B
        gbc.setState(0xa4d3, 0x7d4f, 0xa830, 0xa518, 0xfa90, 0x646b, 0x0, 0x1);
        gbc.writeMem(0xa4d3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d4f, gbc.sp());
        EXPECT(0xa4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d3));
        EXPECT(0xf9, gbc.readMem(0xa4d4));
        // CB F9 031C
        gbc.setState(0xb8b4, 0x31f0, 0x7e80, 0x120e, 0x19c3, 0xdfe3, 0x1, 0x1);
        gbc.writeMem(0xb8b4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0xb8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b4));
        EXPECT(0xf9, gbc.readMem(0xb8b5));
        // CB F9 031D
        gbc.setState(0x3894, 0xfbf5, 0x8990, 0xa648, 0x2c42, 0x34fa, 0x0, 0x0);
        gbc.writeMem(0x3894, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfbf5, gbc.sp());
        EXPECT(0x3896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 031F
        gbc.setState(0x7304, 0xfafc, 0x27e0, 0xe689, 0x8de, 0x1ace, 0x1, 0x1);
        gbc.writeMem(0x7304, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x7306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0320
        gbc.setState(0x4b9f, 0xf46d, 0xc940, 0x676a, 0x4bef, 0x954f, 0x0, 0x0);
        gbc.writeMem(0x4b9f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0321
        gbc.setState(0xa407, 0xf9e9, 0x3140, 0xc62e, 0x670, 0xb7a0, 0x1, 0x0);
        gbc.writeMem(0xa407, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf9e9, gbc.sp());
        EXPECT(0xa409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa407));
        EXPECT(0xf9, gbc.readMem(0xa408));
        // CB F9 0322
        gbc.setState(0x1d3b, 0xe406, 0xd710, 0x987d, 0x4b4e, 0xd3bc, 0x1, 0x0);
        gbc.writeMem(0x1d3b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe406, gbc.sp());
        EXPECT(0x1d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0323
        gbc.setState(0xe61d, 0xc8a9, 0xd020, 0xbe98, 0x59cb, 0x9f95, 0x1, 0x1);
        gbc.writeMem(0xe61d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61d));
        EXPECT(0xf9, gbc.readMem(0xe61e));
        // CB F9 0324
        gbc.setState(0x31af, 0x3d0b, 0xd950, 0xe2f8, 0xb745, 0xa1a9, 0x1, 0x0);
        gbc.writeMem(0x31af, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3d0b, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0325
        gbc.setState(0x8475, 0x68c3, 0x50c0, 0x1682, 0x16f4, 0x28ba, 0x1, 0x0);
        gbc.writeMem(0x8475, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x8477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8475));
        EXPECT(0xf9, gbc.readMem(0x8476));
        // CB F9 0326
        gbc.setState(0x1bed, 0xe253, 0xf930, 0x9ec7, 0x326b, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x1bed, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe253, gbc.sp());
        EXPECT(0x1bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0327
        gbc.setState(0x59f, 0x6c2d, 0x8ab0, 0x371f, 0x4a57, 0xd70f, 0x0, 0x1);
        gbc.writeMem(0x59f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6c2d, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0328
        gbc.setState(0xcc08, 0xb4f1, 0x2af0, 0x9883, 0x5c01, 0xbe5e, 0x0, 0x1);
        gbc.writeMem(0xcc08, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc08));
        EXPECT(0xf9, gbc.readMem(0xcc09));
        // CB F9 0329
        gbc.setState(0x7175, 0x8726, 0xfbf0, 0x4804, 0x92ec, 0x4dd3, 0x0, 0x1);
        gbc.writeMem(0x7175, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8726, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 032A
        gbc.setState(0xd23f, 0xbf05, 0xebe0, 0xdfc6, 0xd3f, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0xd23f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbf05, gbc.sp());
        EXPECT(0xd241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23f));
        EXPECT(0xf9, gbc.readMem(0xd240));
        // CB F9 032B
        gbc.setState(0xab87, 0xddcb, 0x1430, 0x1011, 0x22e6, 0x93b, 0x1, 0x0);
        gbc.writeMem(0xab87, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xddcb, gbc.sp());
        EXPECT(0xab89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab87));
        EXPECT(0xf9, gbc.readMem(0xab88));
        // CB F9 032C
        gbc.setState(0x6d1c, 0x7520, 0xa520, 0x3ee4, 0x962c, 0x71d3, 0x0, 0x0);
        gbc.writeMem(0x6d1c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7520, gbc.sp());
        EXPECT(0x6d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 032D
        gbc.setState(0x256a, 0xaf87, 0x3070, 0x6170, 0x93a3, 0x6d36, 0x1, 0x0);
        gbc.writeMem(0x256a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf87, gbc.sp());
        EXPECT(0x256c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 032E
        gbc.setState(0x4da1, 0x2be3, 0x7840, 0x1b73, 0x9bb3, 0x3444, 0x0, 0x0);
        gbc.writeMem(0x4da1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2be3, gbc.sp());
        EXPECT(0x4da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 032F
        gbc.setState(0xd6fc, 0x3601, 0xc510, 0x9e76, 0xd1be, 0xaa26, 0x0, 0x0);
        gbc.writeMem(0xd6fc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3601, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fc));
        EXPECT(0xf9, gbc.readMem(0xd6fd));
        // CB F9 0330
        gbc.setState(0x4b, 0x6864, 0x14b0, 0x1374, 0x6398, 0xdeb2, 0x1, 0x1);
        gbc.writeMem(0x4b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6864, gbc.sp());
        EXPECT(0x4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0331
        gbc.setState(0xae8b, 0xad1b, 0xe8a0, 0xc2c0, 0xf25e, 0x483, 0x1, 0x0);
        gbc.writeMem(0xae8b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xad1b, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0xf9, gbc.readMem(0xae8c));
        // CB F9 0332
        gbc.setState(0x2be, 0x8874, 0x26f0, 0x8ba5, 0xedd8, 0x90ae, 0x1, 0x1);
        gbc.writeMem(0x2be, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0333
        gbc.setState(0xc7e4, 0xf5df, 0x4750, 0x476b, 0x72b9, 0x4988, 0x0, 0x1);
        gbc.writeMem(0xc7e4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e4));
        EXPECT(0xf9, gbc.readMem(0xc7e5));
        // CB F9 0334
        gbc.setState(0xc9aa, 0x9a43, 0x6370, 0x5d7f, 0xe182, 0xc773, 0x1, 0x0);
        gbc.writeMem(0xc9aa, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9a43, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9aa));
        EXPECT(0xf9, gbc.readMem(0xc9ab));
        // CB F9 0335
        gbc.setState(0xab6, 0xdaff, 0xd710, 0xcb9f, 0x630f, 0x66, 0x0, 0x1);
        gbc.writeMem(0xab6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdaff, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0336
        gbc.setState(0xac89, 0xc3a, 0xe820, 0xc858, 0xe512, 0xfda3, 0x1, 0x0);
        gbc.writeMem(0xac89, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0xac8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac89));
        EXPECT(0xf9, gbc.readMem(0xac8a));
        // CB F9 0338
        gbc.setState(0x968c, 0xdd42, 0x9390, 0x8ec2, 0x8c2, 0x8490, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xf9, gbc.readMem(0x968d));
        // CB F9 0339
        gbc.setState(0xd45f, 0xd5df, 0xf280, 0x822c, 0x5de8, 0x5d2d, 0x1, 0x0);
        gbc.writeMem(0xd45f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd5df, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45f));
        EXPECT(0xf9, gbc.readMem(0xd460));
        // CB F9 033B
        gbc.setState(0x6102, 0xf1e2, 0xcb80, 0x92a, 0xbc74, 0xa93d, 0x0, 0x0);
        gbc.writeMem(0x6102, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf1e2, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 033C
        gbc.setState(0x636, 0xf8fa, 0x3d90, 0xd9c, 0x46b0, 0x4123, 0x1, 0x1);
        gbc.writeMem(0x636, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf8fa, gbc.sp());
        EXPECT(0x638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 033D
        gbc.setState(0x5084, 0xda89, 0x900, 0xf46e, 0x77ac, 0x5868, 0x1, 0x1);
        gbc.writeMem(0x5084, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 033E
        gbc.setState(0xcaa2, 0x5ff1, 0x7120, 0x6a1f, 0x62fe, 0xa92d, 0x1, 0x0);
        gbc.writeMem(0xcaa2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5ff1, gbc.sp());
        EXPECT(0xcaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa2));
        EXPECT(0xf9, gbc.readMem(0xcaa3));
        // CB F9 033F
        gbc.setState(0xc432, 0x181b, 0x5f40, 0x1ae7, 0x46cc, 0x6035, 0x1, 0x0);
        gbc.writeMem(0xc432, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x181b, gbc.sp());
        EXPECT(0xc434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc432));
        EXPECT(0xf9, gbc.readMem(0xc433));
        // CB F9 0340
        gbc.setState(0x9767, 0xddd1, 0x90e0, 0xb902, 0x4d1b, 0xed4c, 0x0, 0x0);
        gbc.writeMem(0x9767, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xddd1, gbc.sp());
        EXPECT(0x9769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9767));
        EXPECT(0xf9, gbc.readMem(0x9768));
        // CB F9 0341
        gbc.setState(0xb54e, 0xf82d, 0xf4b0, 0xe085, 0x608a, 0x5ad8, 0x1, 0x1);
        gbc.writeMem(0xb54e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf82d, gbc.sp());
        EXPECT(0xb550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54e));
        EXPECT(0xf9, gbc.readMem(0xb54f));
        // CB F9 0342
        gbc.setState(0x4b6f, 0xb2a5, 0xf0d0, 0xd89, 0x3bd1, 0xc899, 0x1, 0x1);
        gbc.writeMem(0x4b6f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2a5, gbc.sp());
        EXPECT(0x4b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0343
        gbc.setState(0xa135, 0x8174, 0xd570, 0xb75a, 0xc970, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0xa135, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8174, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa135));
        EXPECT(0xf9, gbc.readMem(0xa136));
        // CB F9 0344
        gbc.setState(0xc006, 0x97e8, 0xb9d0, 0xc1ee, 0x2a9d, 0xc79b, 0x0, 0x1);
        gbc.writeMem(0xc006, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x97e8, gbc.sp());
        EXPECT(0xc008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc006));
        EXPECT(0xf9, gbc.readMem(0xc007));
        // CB F9 0345
        gbc.setState(0x4bfe, 0xc294, 0xb090, 0x866f, 0x9573, 0x1ca1, 0x0, 0x1);
        gbc.writeMem(0x4bfe, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc294, gbc.sp());
        EXPECT(0x4c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0346
        gbc.setState(0x89b0, 0xb741, 0x57f0, 0xe75c, 0x91dd, 0x7484, 0x0, 0x0);
        gbc.writeMem(0x89b0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb741, gbc.sp());
        EXPECT(0x89b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b0));
        EXPECT(0xf9, gbc.readMem(0x89b1));
        // CB F9 0347
        gbc.setState(0xeeda, 0xb657, 0xe2e0, 0x7dc9, 0x7d00, 0x62a8, 0x0, 0x0);
        gbc.writeMem(0xeeda, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb657, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeda));
        EXPECT(0xf9, gbc.readMem(0xeedb));
        // CB F9 0348
        gbc.setState(0x6c8b, 0xa6c9, 0x4c0, 0xdbc0, 0x7c1d, 0x303e, 0x0, 0x1);
        gbc.writeMem(0x6c8b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0349
        gbc.setState(0x8fb4, 0xd07c, 0x25f0, 0xa32e, 0x7a09, 0xc6f4, 0x0, 0x0);
        gbc.writeMem(0x8fb4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0xf9, gbc.readMem(0x8fb5));
        // CB F9 034A
        gbc.setState(0x613f, 0xf22a, 0x2270, 0xe280, 0xb4, 0xe128, 0x0, 0x0);
        gbc.writeMem(0x613f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0x6141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 034B
        gbc.setState(0xdc40, 0xb730, 0x62d0, 0xa463, 0x4867, 0xb8ba, 0x1, 0x1);
        gbc.writeMem(0xdc40, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb730, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc40));
        EXPECT(0xf9, gbc.readMem(0xdc41));
        // CB F9 034C
        gbc.setState(0x238, 0xd695, 0x3e20, 0xe0f0, 0xfb28, 0x7bdf, 0x0, 0x1);
        gbc.writeMem(0x238, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd695, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 034D
        gbc.setState(0x2b94, 0x57cb, 0xdea0, 0x1cf7, 0xbf54, 0xe809, 0x1, 0x1);
        gbc.writeMem(0x2b94, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x57cb, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 034E
        gbc.setState(0x4740, 0xc2c3, 0xc7d0, 0x2a2d, 0xad0d, 0xea07, 0x0, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 034F
        gbc.setState(0xc3f6, 0xf4cb, 0x730, 0xeded, 0x8de5, 0x8b80, 0x0, 0x0);
        gbc.writeMem(0xc3f6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf4cb, gbc.sp());
        EXPECT(0xc3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f6));
        EXPECT(0xf9, gbc.readMem(0xc3f7));
        // CB F9 0350
        gbc.setState(0xecb7, 0x6a77, 0x3ef0, 0x5379, 0xd9c1, 0x5188, 0x0, 0x0);
        gbc.writeMem(0xecb7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb7));
        EXPECT(0xf9, gbc.readMem(0xecb8));
        // CB F9 0351
        gbc.setState(0x424d, 0xfbaa, 0x870, 0xd331, 0xa28a, 0x4cb2, 0x1, 0x1);
        gbc.writeMem(0x424d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x424f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0352
        gbc.setState(0x85ca, 0x2102, 0x8da0, 0x8cf9, 0xf422, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0x85ca, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2102, gbc.sp());
        EXPECT(0x85cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ca));
        EXPECT(0xf9, gbc.readMem(0x85cb));
        // CB F9 0353
        gbc.setState(0x3615, 0x8f9c, 0x8880, 0x6edb, 0xc2f6, 0xbb12, 0x1, 0x1);
        gbc.writeMem(0x3615, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8f9c, gbc.sp());
        EXPECT(0x3617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0354
        gbc.setState(0xaef1, 0xe3f, 0x9d90, 0x7774, 0x5d03, 0x2a03, 0x1, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef1));
        EXPECT(0xf9, gbc.readMem(0xaef2));
        // CB F9 0355
        gbc.setState(0x6fe4, 0x804a, 0x9e80, 0x75d0, 0x44c1, 0xf404, 0x1, 0x0);
        gbc.writeMem(0x6fe4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0356
        gbc.setState(0xad08, 0xb965, 0x27b0, 0xee98, 0xa8af, 0xe716, 0x0, 0x0);
        gbc.writeMem(0xad08, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb965, gbc.sp());
        EXPECT(0xad0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad08));
        EXPECT(0xf9, gbc.readMem(0xad09));
        // CB F9 0357
        gbc.setState(0x82d2, 0xc689, 0x5240, 0xf82e, 0xbb68, 0xa4cc, 0x0, 0x1);
        gbc.writeMem(0x82d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc689, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d2));
        EXPECT(0xf9, gbc.readMem(0x82d3));
        // CB F9 0358
        gbc.setState(0x5f9b, 0x328, 0xe860, 0x6181, 0xf0cf, 0x1fe9, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x328, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0359
        gbc.setState(0x8cc4, 0xfc07, 0xd440, 0xe93c, 0x3ebe, 0xfa8, 0x0, 0x1);
        gbc.writeMem(0x8cc4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfc07, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0xf9, gbc.readMem(0x8cc5));
        // CB F9 035B
        gbc.setState(0x8e7f, 0x1439, 0x94e0, 0x1dfc, 0x1686, 0xa30c, 0x0, 0x1);
        gbc.writeMem(0x8e7f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1439, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7f));
        EXPECT(0xf9, gbc.readMem(0x8e80));
        // CB F9 035C
        gbc.setState(0x422c, 0x5d1c, 0x4810, 0xaee8, 0xc375, 0x298c, 0x1, 0x0);
        gbc.writeMem(0x422c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5d1c, gbc.sp());
        EXPECT(0x422e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 035D
        gbc.setState(0xbbe3, 0x4cbc, 0x8220, 0x8cf8, 0xd137, 0xb6c9, 0x1, 0x1);
        gbc.writeMem(0xbbe3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4cbc, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0xf9, gbc.readMem(0xbbe4));
        // CB F9 035F
        gbc.setState(0x51ca, 0xe7b3, 0x5800, 0xbf0, 0xb940, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x51ca, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe7b3, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0360
        gbc.setState(0x63ca, 0xcdb6, 0xd660, 0x13fd, 0x5358, 0x5ede, 0x0, 0x1);
        gbc.writeMem(0x63ca, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0x63cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0361
        gbc.setState(0x47a, 0x7188, 0x56a0, 0xaab4, 0x403f, 0xde1f, 0x1, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7188, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0362
        gbc.setState(0xe48d, 0x9c0a, 0x26f0, 0x84, 0x9012, 0xe655, 0x0, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0xe48f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48d));
        EXPECT(0xf9, gbc.readMem(0xe48e));
        // CB F9 0363
        gbc.setState(0x80e0, 0x9c4, 0xbc50, 0xaaa6, 0x433d, 0x54fb, 0x0, 0x0);
        gbc.writeMem(0x80e0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0x80e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e0));
        EXPECT(0xf9, gbc.readMem(0x80e1));
        // CB F9 0364
        gbc.setState(0x2920, 0x3909, 0x8550, 0x2644, 0xec8e, 0x498d, 0x0, 0x0);
        gbc.writeMem(0x2920, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3909, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0365
        gbc.setState(0x83b3, 0xbc33, 0x43a0, 0x12dc, 0x58cb, 0xd84, 0x0, 0x0);
        gbc.writeMem(0x83b3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbc33, gbc.sp());
        EXPECT(0x83b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b3));
        EXPECT(0xf9, gbc.readMem(0x83b4));
        // CB F9 0366
        gbc.setState(0xae3b, 0xc756, 0xc5f0, 0x1336, 0xc4a0, 0xf636, 0x1, 0x0);
        gbc.writeMem(0xae3b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc756, gbc.sp());
        EXPECT(0xae3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3b));
        EXPECT(0xf9, gbc.readMem(0xae3c));
        // CB F9 0367
        gbc.setState(0x7e37, 0xb098, 0x88f0, 0xe38d, 0x9138, 0x2830, 0x0, 0x1);
        gbc.writeMem(0x7e37, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb098, gbc.sp());
        EXPECT(0x7e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0368
        gbc.setState(0xd373, 0x76ae, 0x5820, 0xc46e, 0x78e9, 0x5d4c, 0x1, 0x0);
        gbc.writeMem(0xd373, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0xd375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd373));
        EXPECT(0xf9, gbc.readMem(0xd374));
        // CB F9 0369
        gbc.setState(0x2dea, 0xb0d9, 0xd8e0, 0x2e8d, 0xec12, 0x1cb4, 0x0, 0x1);
        gbc.writeMem(0x2dea, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb0d9, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 036A
        gbc.setState(0x6cbb, 0x57cf, 0xe590, 0x3053, 0xbf60, 0x8e23, 0x1, 0x0);
        gbc.writeMem(0x6cbb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0x6cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 036B
        gbc.setState(0xd9a8, 0x68b1, 0xdc80, 0x386, 0x25c8, 0x521c, 0x0, 0x1);
        gbc.writeMem(0xd9a8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68b1, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a8));
        EXPECT(0xf9, gbc.readMem(0xd9a9));
        // CB F9 036C
        gbc.setState(0xa323, 0x5517, 0xe0b0, 0x8063, 0x301e, 0xecaa, 0x0, 0x0);
        gbc.writeMem(0xa323, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5517, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa323));
        EXPECT(0xf9, gbc.readMem(0xa324));
        // CB F9 036D
        gbc.setState(0xdb53, 0xc438, 0x1f80, 0xc793, 0xfea2, 0x2449, 0x0, 0x1);
        gbc.writeMem(0xdb53, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc438, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb53));
        EXPECT(0xf9, gbc.readMem(0xdb54));
        // CB F9 036E
        gbc.setState(0x67b6, 0xbb29, 0x4d0, 0xd99f, 0x1a8b, 0x1511, 0x0, 0x1);
        gbc.writeMem(0x67b6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb29, gbc.sp());
        EXPECT(0x67b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 036F
        gbc.setState(0x6798, 0xee6b, 0x8620, 0xc4b8, 0x99c4, 0xb6ce, 0x0, 0x1);
        gbc.writeMem(0x6798, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee6b, gbc.sp());
        EXPECT(0x679a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0370
        gbc.setState(0xc773, 0x452c, 0x7bb0, 0x7b22, 0x389b, 0xca7, 0x0, 0x1);
        gbc.writeMem(0xc773, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x452c, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc773));
        EXPECT(0xf9, gbc.readMem(0xc774));
        // CB F9 0371
        gbc.setState(0xdbae, 0x7c10, 0xdf70, 0xf6a2, 0x8bb2, 0x5e9d, 0x1, 0x0);
        gbc.writeMem(0xdbae, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0xdbb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbae));
        EXPECT(0xf9, gbc.readMem(0xdbaf));
        // CB F9 0372
        gbc.setState(0x6490, 0x79f0, 0xb090, 0x819, 0xb658, 0xa2de, 0x0, 0x0);
        gbc.writeMem(0x6490, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0x6492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0373
        gbc.setState(0xd953, 0x144c, 0x3440, 0xdad7, 0xec02, 0x1224, 0x0, 0x0);
        gbc.writeMem(0xd953, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x144c, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd953));
        EXPECT(0xf9, gbc.readMem(0xd954));
        // CB F9 0374
        gbc.setState(0xa8ba, 0xe0b7, 0xf650, 0xd9dd, 0xb502, 0x9a1, 0x0, 0x1);
        gbc.writeMem(0xa8ba, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0xa8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ba));
        EXPECT(0xf9, gbc.readMem(0xa8bb));
        // CB F9 0375
        gbc.setState(0x49b4, 0x15aa, 0x1d00, 0x8515, 0x3155, 0x2624, 0x1, 0x0);
        gbc.writeMem(0x49b4, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15aa, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0376
        gbc.setState(0x528f, 0x1f77, 0x7fb0, 0xf775, 0xe537, 0x89c9, 0x0, 0x0);
        gbc.writeMem(0x528f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1f77, gbc.sp());
        EXPECT(0x5291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0377
        gbc.setState(0xcf3, 0x748a, 0x1f20, 0xaab2, 0x76f, 0xb7a1, 0x1, 0x0);
        gbc.writeMem(0xcf3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0xcf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0378
        gbc.setState(0xd29b, 0x7bb1, 0x89c0, 0xea07, 0x6e15, 0xff6a, 0x0, 0x1);
        gbc.writeMem(0xd29b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7bb1, gbc.sp());
        EXPECT(0xd29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29b));
        EXPECT(0xf9, gbc.readMem(0xd29c));
        // CB F9 0379
        gbc.setState(0xad7d, 0x7dbf, 0xd6d0, 0x5dd5, 0xb4d7, 0x20f7, 0x1, 0x1);
        gbc.writeMem(0xad7d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0xad7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7d));
        EXPECT(0xf9, gbc.readMem(0xad7e));
        // CB F9 037A
        gbc.setState(0xb4d1, 0xe1a5, 0x1910, 0x4e15, 0x56b2, 0x6c6d, 0x1, 0x1);
        gbc.writeMem(0xb4d1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d1));
        EXPECT(0xf9, gbc.readMem(0xb4d2));
        // CB F9 037B
        gbc.setState(0x6829, 0x7e86, 0x5d40, 0xac9c, 0xa3f6, 0xf194, 0x0, 0x1);
        gbc.writeMem(0x6829, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7e86, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 037C
        gbc.setState(0xb43, 0xeb22, 0x4dd0, 0xc65d, 0x3eaf, 0x757f, 0x0, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 037D
        gbc.setState(0x12de, 0xc1bd, 0x340, 0xa580, 0xf5b7, 0xe796, 0x1, 0x0);
        gbc.writeMem(0x12de, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 037E
        gbc.setState(0x448f, 0xfa69, 0xbb20, 0xcbee, 0x744a, 0x8cf8, 0x0, 0x0);
        gbc.writeMem(0x448f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfa69, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 037F
        gbc.setState(0xeef5, 0x7375, 0x1880, 0x9f45, 0x3181, 0x53a5, 0x0, 0x0);
        gbc.writeMem(0xeef5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7375, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef5));
        EXPECT(0xf9, gbc.readMem(0xeef6));
        // CB F9 0381
        gbc.setState(0x3c16, 0x9436, 0x6ab0, 0x28d9, 0x72c1, 0xf417, 0x1, 0x1);
        gbc.writeMem(0x3c16, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9436, gbc.sp());
        EXPECT(0x3c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0382
        gbc.setState(0xdc8a, 0x7854, 0x66f0, 0x49f1, 0xe710, 0x5b54, 0x1, 0x0);
        gbc.writeMem(0xdc8a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0xdc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8a));
        EXPECT(0xf9, gbc.readMem(0xdc8b));
        // CB F9 0383
        gbc.setState(0x4854, 0xc02, 0x1ab0, 0x2684, 0x7d20, 0x54da, 0x1, 0x1);
        gbc.writeMem(0x4854, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc02, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0384
        gbc.setState(0x8faa, 0x9d20, 0xc380, 0x2687, 0x685a, 0x3887, 0x0, 0x1);
        gbc.writeMem(0x8faa, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9d20, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faa));
        EXPECT(0xf9, gbc.readMem(0x8fab));
        // CB F9 0385
        gbc.setState(0x19d2, 0x15bf, 0xa930, 0xfa1f, 0x5fb0, 0xcbdf, 0x1, 0x1);
        gbc.writeMem(0x19d2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x19d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0386
        gbc.setState(0xc315, 0x1aa1, 0xb400, 0xeab4, 0x1bf7, 0x1f9e, 0x1, 0x1);
        gbc.writeMem(0xc315, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0xc317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc315));
        EXPECT(0xf9, gbc.readMem(0xc316));
        // CB F9 0387
        gbc.setState(0x4a8, 0x9a70, 0x4760, 0x9b24, 0x507c, 0x4927, 0x0, 0x0);
        gbc.writeMem(0x4a8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0388
        gbc.setState(0x6b85, 0xea5b, 0xfb50, 0x6d1, 0xc1d, 0x7e56, 0x1, 0x1);
        gbc.writeMem(0x6b85, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xea5b, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0389
        gbc.setState(0x6320, 0xd15d, 0x7b70, 0x3607, 0xdf7c, 0xdc7, 0x0, 0x0);
        gbc.writeMem(0x6320, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 038A
        gbc.setState(0xb7b, 0xde85, 0x30c0, 0x33a6, 0x5ad1, 0xcf40, 0x1, 0x0);
        gbc.writeMem(0xb7b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xde85, gbc.sp());
        EXPECT(0xb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 038B
        gbc.setState(0xce9e, 0xf1d3, 0xef10, 0xda19, 0xe47, 0x30b7, 0x1, 0x0);
        gbc.writeMem(0xce9e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf1d3, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9e));
        EXPECT(0xf9, gbc.readMem(0xce9f));
        // CB F9 038C
        gbc.setState(0xdff0, 0xf391, 0x1820, 0x3809, 0x6f13, 0xdb5c, 0x1, 0x0);
        gbc.writeMem(0xdff0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf391, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff0));
        EXPECT(0xf9, gbc.readMem(0xdff1));
        // CB F9 038D
        gbc.setState(0xe009, 0x18a8, 0xd490, 0x3d77, 0xa6c2, 0x2adb, 0x1, 0x0);
        gbc.writeMem(0xe009, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe009));
        EXPECT(0xf9, gbc.readMem(0xe00a));
        // CB F9 038E
        gbc.setState(0x751f, 0x8803, 0xb0c0, 0xd86d, 0x73c8, 0x7e8c, 0x0, 0x0);
        gbc.writeMem(0x751f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x7521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 038F
        gbc.setState(0xef5a, 0xf108, 0x4c90, 0x9b31, 0x1561, 0x4954, 0x1, 0x1);
        gbc.writeMem(0xef5a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf108, gbc.sp());
        EXPECT(0xef5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5a));
        EXPECT(0xf9, gbc.readMem(0xef5b));
        // CB F9 0390
        gbc.setState(0x8df2, 0x2159, 0x5d60, 0x7520, 0x457a, 0x82b5, 0x0, 0x1);
        gbc.writeMem(0x8df2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2159, gbc.sp());
        EXPECT(0x8df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df2));
        EXPECT(0xf9, gbc.readMem(0x8df3));
        // CB F9 0391
        gbc.setState(0x5caa, 0x9881, 0x9fc0, 0xbb37, 0xf7a6, 0xbc70, 0x0, 0x1);
        gbc.writeMem(0x5caa, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x5cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0392
        gbc.setState(0x25f8, 0x3cb7, 0xa620, 0x5b69, 0x970c, 0xc7c1, 0x0, 0x0);
        gbc.writeMem(0x25f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3cb7, gbc.sp());
        EXPECT(0x25fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0393
        gbc.setState(0x25d5, 0x48e8, 0xecc0, 0x3a81, 0xc555, 0xc430, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0x25d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0394
        gbc.setState(0x538b, 0xe41, 0xb080, 0x9ae2, 0x54c6, 0x860b, 0x0, 0x1);
        gbc.writeMem(0x538b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 0395
        gbc.setState(0x339d, 0x3416, 0x4f10, 0x4596, 0x298, 0x542b, 0x1, 0x0);
        gbc.writeMem(0x339d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3416, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 0396
        gbc.setState(0xa25a, 0xbb72, 0x7dc0, 0x3a0d, 0xfaff, 0xe5a2, 0x0, 0x0);
        gbc.writeMem(0xa25a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25a));
        EXPECT(0xf9, gbc.readMem(0xa25b));
        // CB F9 0397
        gbc.setState(0xd9e3, 0xe275, 0x6ff0, 0x92f3, 0x909f, 0x355a, 0x1, 0x1);
        gbc.writeMem(0xd9e3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e3));
        EXPECT(0xf9, gbc.readMem(0xd9e4));
        // CB F9 0398
        gbc.setState(0x2a16, 0x5cfc, 0x5980, 0x8622, 0x48b8, 0xe821, 0x0, 0x1);
        gbc.writeMem(0x2a16, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0x2a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 039A
        gbc.setState(0x72e2, 0x45ca, 0xe5d0, 0x6601, 0x33b9, 0x7b63, 0x0, 0x1);
        gbc.writeMem(0x72e2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x45ca, gbc.sp());
        EXPECT(0x72e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 039B
        gbc.setState(0x12fb, 0x7ced, 0xeac0, 0xaf9d, 0x727f, 0xfe20, 0x1, 0x1);
        gbc.writeMem(0x12fb, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7ced, gbc.sp());
        EXPECT(0x12fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 039C
        gbc.setState(0xb549, 0x5524, 0x5ab0, 0x9c65, 0x8350, 0xab6f, 0x0, 0x1);
        gbc.writeMem(0xb549, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5524, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb549));
        EXPECT(0xf9, gbc.readMem(0xb54a));
        // CB F9 039D
        gbc.setState(0x238f, 0xc09d, 0x9ef0, 0x45a3, 0x3313, 0x4a7, 0x0, 0x1);
        gbc.writeMem(0x238f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 039E
        gbc.setState(0xcd93, 0x81d0, 0xb00, 0xe5bf, 0x592d, 0x3688, 0x1, 0x0);
        gbc.writeMem(0xcd93, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x81d0, gbc.sp());
        EXPECT(0xcd95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd93));
        EXPECT(0xf9, gbc.readMem(0xcd94));
        // CB F9 039F
        gbc.setState(0x1edc, 0x92d9, 0x5980, 0x24fe, 0xeefe, 0x15db, 0x1, 0x0);
        gbc.writeMem(0x1edc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x92d9, gbc.sp());
        EXPECT(0x1ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03A0
        gbc.setState(0xb8da, 0xf34d, 0x5780, 0x4380, 0xc242, 0x1ec9, 0x0, 0x1);
        gbc.writeMem(0xb8da, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf34d, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8da));
        EXPECT(0xf9, gbc.readMem(0xb8db));
        // CB F9 03A1
        gbc.setState(0x4b9e, 0xba34, 0xff90, 0x789a, 0x1f43, 0x77b3, 0x0, 0x0);
        gbc.writeMem(0x4b9e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xba34, gbc.sp());
        EXPECT(0x4ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03A2
        gbc.setState(0x60b0, 0xf353, 0x2940, 0x8571, 0xf190, 0x324, 0x0, 0x1);
        gbc.writeMem(0x60b0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf353, gbc.sp());
        EXPECT(0x60b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03A3
        gbc.setState(0xaff5, 0xd695, 0xd850, 0x2b1a, 0x6f7, 0x1a37, 0x0, 0x0);
        gbc.writeMem(0xaff5, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd695, gbc.sp());
        EXPECT(0xaff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff5));
        EXPECT(0xf9, gbc.readMem(0xaff6));
        // CB F9 03A4
        gbc.setState(0xe5cc, 0xce5a, 0x2c0, 0xcd20, 0x3f67, 0xadf9, 0x0, 0x1);
        gbc.writeMem(0xe5cc, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xce5a, gbc.sp());
        EXPECT(0xe5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cc));
        EXPECT(0xf9, gbc.readMem(0xe5cd));
        // CB F9 03A5
        gbc.setState(0x9f8, 0xbe66, 0x4840, 0x7d86, 0xdad8, 0xd16d, 0x0, 0x1);
        gbc.writeMem(0x9f8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0x9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03A6
        gbc.setState(0x510e, 0x18fa, 0x11e0, 0xec14, 0x9957, 0xec4a, 0x1, 0x0);
        gbc.writeMem(0x510e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03A7
        gbc.setState(0x2ee0, 0x8e7d, 0x4970, 0xfedc, 0xc33, 0x3f3, 0x0, 0x1);
        gbc.writeMem(0x2ee0, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e7d, gbc.sp());
        EXPECT(0x2ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03A8
        gbc.setState(0x3439, 0xcee7, 0x7310, 0xe1a8, 0x59f0, 0x9ce, 0x0, 0x1);
        gbc.writeMem(0x3439, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03AA
        gbc.setState(0x44e9, 0x137b, 0xd050, 0x6c1, 0xfc4f, 0x2d29, 0x0, 0x0);
        gbc.writeMem(0x44e9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0x44eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03AB
        gbc.setState(0x864, 0x323a, 0x240, 0x1432, 0x8486, 0x8c1d, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x323a, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03AC
        gbc.setState(0x995a, 0x39a, 0x8f40, 0x6863, 0x4dec, 0x5476, 0x1, 0x1);
        gbc.writeMem(0x995a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x39a, gbc.sp());
        EXPECT(0x995c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995a));
        EXPECT(0xf9, gbc.readMem(0x995b));
        // CB F9 03AD
        gbc.setState(0x5da9, 0xc079, 0xa020, 0xcb11, 0x38af, 0xee17, 0x0, 0x1);
        gbc.writeMem(0x5da9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc079, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03AE
        gbc.setState(0x6c59, 0xde83, 0xf820, 0xd4b0, 0xada, 0x27a9, 0x1, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0x6c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03AF
        gbc.setState(0x72b8, 0x7e71, 0xfd90, 0x87ea, 0x5441, 0x403f, 0x1, 0x1);
        gbc.writeMem(0x72b8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03B1
        gbc.setState(0x6451, 0x489f, 0x5d0, 0x9ece, 0x3e57, 0x9dc9, 0x0, 0x1);
        gbc.writeMem(0x6451, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x489f, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03B2
        gbc.setState(0xc30e, 0xa0ab, 0xb340, 0xfd77, 0x36fd, 0x7a4b, 0x0, 0x0);
        gbc.writeMem(0xc30e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30e));
        EXPECT(0xf9, gbc.readMem(0xc30f));
        // CB F9 03B3
        gbc.setState(0xce02, 0xe96a, 0xfa80, 0x1865, 0x8e8a, 0x12d, 0x1, 0x1);
        gbc.writeMem(0xce02, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0xce04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce02));
        EXPECT(0xf9, gbc.readMem(0xce03));
        // CB F9 03B4
        gbc.setState(0x2f4a, 0x5e02, 0x59c0, 0x3e2f, 0xa241, 0x2217, 0x1, 0x0);
        gbc.writeMem(0x2f4a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5e02, gbc.sp());
        EXPECT(0x2f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03B6
        gbc.setState(0xb90, 0x58de, 0xf560, 0x8162, 0xd59, 0x91b8, 0x0, 0x0);
        gbc.writeMem(0xb90, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0xb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03B7
        gbc.setState(0xa804, 0x11c, 0x2c70, 0x11, 0x561, 0xf994, 0x0, 0x1);
        gbc.writeMem(0xa804, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x11c, gbc.sp());
        EXPECT(0xa806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa804));
        EXPECT(0xf9, gbc.readMem(0xa805));
        // CB F9 03B8
        gbc.setState(0x12f, 0x2215, 0x3d30, 0x9ed7, 0x496d, 0x1242, 0x1, 0x1);
        gbc.writeMem(0x12f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03B9
        gbc.setState(0x1ce8, 0x2108, 0xdfe0, 0x350b, 0x43af, 0xa600, 0x1, 0x1);
        gbc.writeMem(0x1ce8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2108, gbc.sp());
        EXPECT(0x1cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03BA
        gbc.setState(0x4c43, 0x8bb7, 0x3e20, 0xe506, 0x93be, 0xe39f, 0x1, 0x1);
        gbc.writeMem(0x4c43, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8bb7, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03BB
        gbc.setState(0xa7a7, 0xb7bc, 0x46d0, 0x89b1, 0xd4c5, 0x552f, 0x0, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb7bc, gbc.sp());
        EXPECT(0xa7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a7));
        EXPECT(0xf9, gbc.readMem(0xa7a8));
        // CB F9 03BC
        gbc.setState(0xd9cf, 0x6479, 0xdc30, 0xc7f9, 0xb748, 0x90fd, 0x1, 0x0);
        gbc.writeMem(0xd9cf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6479, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cf));
        EXPECT(0xf9, gbc.readMem(0xd9d0));
        // CB F9 03BD
        gbc.setState(0x227d, 0xc0c, 0xcc70, 0xc0ec, 0x5dcc, 0x6a13, 0x1, 0x1);
        gbc.writeMem(0x227d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc0c, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03BE
        gbc.setState(0x2230, 0xf73d, 0x2d80, 0x1a23, 0x773c, 0x6336, 0x0, 0x1);
        gbc.writeMem(0x2230, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf73d, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03BF
        gbc.setState(0x6439, 0x1364, 0x6210, 0x68ae, 0x3be0, 0xabb4, 0x0, 0x0);
        gbc.writeMem(0x6439, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03C0
        gbc.setState(0x93c9, 0xd6e1, 0xd4e0, 0xcc4c, 0xd428, 0x3b61, 0x1, 0x0);
        gbc.writeMem(0x93c9, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd6e1, gbc.sp());
        EXPECT(0x93cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c9));
        EXPECT(0xf9, gbc.readMem(0x93ca));
        // CB F9 03C1
        gbc.setState(0xdbf6, 0xcdc9, 0x6db0, 0xbeaa, 0xcc98, 0x6823, 0x1, 0x1);
        gbc.writeMem(0xdbf6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0xdbf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf6));
        EXPECT(0xf9, gbc.readMem(0xdbf7));
        // CB F9 03C2
        gbc.setState(0x3e7e, 0x8198, 0x3040, 0x6761, 0x6c1e, 0x12df, 0x0, 0x1);
        gbc.writeMem(0x3e7e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8198, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03C3
        gbc.setState(0x6971, 0xd947, 0x66a0, 0x69cd, 0x56c8, 0x507f, 0x0, 0x1);
        gbc.writeMem(0x6971, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03C4
        gbc.setState(0x88be, 0x9271, 0x19e0, 0xb99, 0x4856, 0x3d5d, 0x0, 0x1);
        gbc.writeMem(0x88be, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9271, gbc.sp());
        EXPECT(0x88c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88be));
        EXPECT(0xf9, gbc.readMem(0x88bf));
        // CB F9 03C5
        gbc.setState(0x2747, 0x73e6, 0xefa0, 0x55e8, 0x1ac9, 0xec9d, 0x0, 0x0);
        gbc.writeMem(0x2747, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03C6
        gbc.setState(0x9ef8, 0x9653, 0x5790, 0xe08a, 0x36c1, 0x7794, 0x1, 0x1);
        gbc.writeMem(0x9ef8, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9653, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef8));
        EXPECT(0xf9, gbc.readMem(0x9ef9));
        // CB F9 03C7
        gbc.setState(0x919f, 0x441f, 0x4760, 0x8c98, 0x56fe, 0x91, 0x1, 0x1);
        gbc.writeMem(0x919f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0x91a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919f));
        EXPECT(0xf9, gbc.readMem(0x91a0));
        // CB F9 03C8
        gbc.setState(0x5557, 0xa2b4, 0x8d80, 0xa73b, 0xd47, 0x4d50, 0x0, 0x1);
        gbc.writeMem(0x5557, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa2b4, gbc.sp());
        EXPECT(0x5559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03C9
        gbc.setState(0x6936, 0xc986, 0x1e00, 0xf036, 0x48b3, 0xacb9, 0x1, 0x0);
        gbc.writeMem(0x6936, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0x6938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03CA
        gbc.setState(0x4927, 0x26d5, 0x6890, 0x2f8, 0xf94d, 0x2b8d, 0x0, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0x4929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03CB
        gbc.setState(0xc1a6, 0x3b23, 0x5240, 0xe9d1, 0x3488, 0x4499, 0x1, 0x1);
        gbc.writeMem(0xc1a6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0xc1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a6));
        EXPECT(0xf9, gbc.readMem(0xc1a7));
        // CB F9 03CC
        gbc.setState(0x50c2, 0x76f, 0xc350, 0x5671, 0xb318, 0x333c, 0x0, 0x1);
        gbc.writeMem(0x50c2, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x50c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03CD
        gbc.setState(0x9f9e, 0x10cf, 0xed0, 0x2fbe, 0x7ab7, 0xfea9, 0x1, 0x1);
        gbc.writeMem(0x9f9e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x10cf, gbc.sp());
        EXPECT(0x9fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9e));
        EXPECT(0xf9, gbc.readMem(0x9f9f));
        // CB F9 03CE
        gbc.setState(0x1982, 0xda91, 0xb620, 0xcd51, 0x63b5, 0x15d8, 0x1, 0x0);
        gbc.writeMem(0x1982, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xda91, gbc.sp());
        EXPECT(0x1984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03CF
        gbc.setState(0x5d0b, 0x16c3, 0xb340, 0x4e74, 0x8743, 0x6928, 0x1, 0x0);
        gbc.writeMem(0x5d0b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x16c3, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03D0
        gbc.setState(0x1c1, 0x9093, 0xfc40, 0xa165, 0xb327, 0x727d, 0x0, 0x1);
        gbc.writeMem(0x1c1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9093, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03D1
        gbc.setState(0x673a, 0xc993, 0x2d50, 0xb783, 0xb02e, 0x18a7, 0x1, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc993, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03D2
        gbc.setState(0x7acf, 0x8eb8, 0xd530, 0x148a, 0x84f4, 0xba23, 0x1, 0x1);
        gbc.writeMem(0x7acf, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03D3
        gbc.setState(0xe09d, 0xd111, 0x6280, 0x8199, 0xe26b, 0x7e1e, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd111, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0xf9, gbc.readMem(0xe09e));
        // CB F9 03D4
        gbc.setState(0xa3a7, 0x9454, 0xefa0, 0x4370, 0xb648, 0xf8d, 0x1, 0x1);
        gbc.writeMem(0xa3a7, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a7));
        EXPECT(0xf9, gbc.readMem(0xa3a8));
        // CB F9 03D6
        gbc.setState(0x6fc3, 0xf41, 0x2d40, 0xb86e, 0xac8d, 0x5afb, 0x0, 0x0);
        gbc.writeMem(0x6fc3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x6fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03D7
        gbc.setState(0x5b50, 0x9296, 0x1700, 0x5be8, 0xeb4b, 0xc608, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9296, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03D8
        gbc.setState(0xe661, 0x9765, 0x66f0, 0x92c1, 0x5c71, 0xeb5c, 0x1, 0x1);
        gbc.writeMem(0xe661, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9765, gbc.sp());
        EXPECT(0xe663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe661));
        EXPECT(0xf9, gbc.readMem(0xe662));
        // CB F9 03D9
        gbc.setState(0x35ec, 0xa581, 0xc760, 0xb7d7, 0xb67b, 0xa107, 0x0, 0x0);
        gbc.writeMem(0x35ec, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0x35ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03DA
        gbc.setState(0xe3d1, 0x1e3b, 0x6f10, 0xebe, 0xe749, 0xc2c2, 0x0, 0x0);
        gbc.writeMem(0xe3d1, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d1));
        EXPECT(0xf9, gbc.readMem(0xe3d2));
        // CB F9 03DB
        gbc.setState(0x92d6, 0x591e, 0x43b0, 0x2758, 0x8357, 0x9c0, 0x1, 0x1);
        gbc.writeMem(0x92d6, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d6));
        EXPECT(0xf9, gbc.readMem(0x92d7));
        // CB F9 03DC
        gbc.setState(0x580d, 0xc16, 0x6d50, 0x895f, 0xbf53, 0xd20f, 0x0, 0x1);
        gbc.writeMem(0x580d, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0x580f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03DD
        gbc.setState(0x83, 0x6024, 0xd350, 0xed5a, 0x8ba3, 0xc8ba, 0x1, 0x0);
        gbc.writeMem(0x83, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6024, gbc.sp());
        EXPECT(0x85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F9 03DE
        gbc.setState(0xca2e, 0xf10, 0x1d70, 0x5bbf, 0xa4fb, 0x92a4, 0x0, 0x1);
        gbc.writeMem(0xca2e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf10, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2e));
        EXPECT(0xf9, gbc.readMem(0xca2f));
        // CB F9 03DF
        gbc.setState(0xd06f, 0x3072, 0x15f0, 0xb497, 0x2998, 0x4580, 0x1, 0x0);
        gbc.writeMem(0xd06f, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3072, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06f));
        EXPECT(0xf9, gbc.readMem(0xd070));
        // CB F9 03E0
        gbc.setState(0xa01c, 0xda99, 0x49b0, 0x8db7, 0xa9db, 0x445, 0x1, 0x1);
        gbc.writeMem(0xa01c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xda99, gbc.sp());
        EXPECT(0xa01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01c));
        EXPECT(0xf9, gbc.readMem(0xa01d));
        // CB F9 03E1
        gbc.setState(0x3bf3, 0xaed9, 0xaa0, 0xfa05, 0xe0f8, 0x6e80, 0x0, 0x1);
        gbc.writeMem(0x3bf3, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0x3bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F9 03E2
        gbc.setState(0xb64b, 0xda7d, 0xd230, 0x60cb, 0xa8e8, 0xb0df, 0x0, 0x1);
        gbc.writeMem(0xb64b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64b));
        EXPECT(0xf9, gbc.readMem(0xb64c));
        // CB F9 03E3
        gbc.setState(0xca17, 0x9da8, 0x4fe0, 0x266e, 0x6808, 0x5659, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca17));
        EXPECT(0xf9, gbc.readMem(0xca18));
        // CB F9 03E4
        gbc.setState(0x9f5c, 0xec4d, 0xdc50, 0x24c8, 0x9016, 0xd4bd, 0x0, 0x1);
        gbc.writeMem(0x9f5c, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec4d, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5c));
        EXPECT(0xf9, gbc.readMem(0x9f5d));
        // CB F9 03E5
        gbc.setState(0xce7b, 0x143f, 0xf760, 0x69e2, 0xf299, 0x968b, 0x1, 0x1);
        gbc.writeMem(0xce7b, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x143f, gbc.sp());
        EXPECT(0xce7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7b));
        EXPECT(0xf9, gbc.readMem(0xce7c));
        // CB F9 03E6
        gbc.setState(0xc94e, 0xd30e, 0xa350, 0xf925, 0xac79, 0xe97d, 0x0, 0x0);
        gbc.writeMem(0xc94e, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94e));
        EXPECT(0xf9, gbc.readMem(0xc94f));
        // CB F9 03E7
        gbc.setState(0x2432, 0xe1de, 0xf940, 0xeb3b, 0x9d2e, 0x915a, 0x0, 0x0);
        gbc.writeMem(0x2432, { 0xcb, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe1de, gbc.sp());
        EXPECT(0x2434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
