    TEST(gbcemu, opcode_cb_3e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3E 0004
        gbc.setState(0xd7b3, 0xa5e, 0xe480, 0xc3e2, 0xc265, 0x95ad, 0x0, 0x1);
        gbc.writeMem(0x95ad, { 0xed });
        gbc.writeMem(0xd7b3, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa5e, gbc.sp());
        EXPECT(0xd7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x95ad));
        EXPECT(0xcb, gbc.readMem(0xd7b3));
        EXPECT(0x3e, gbc.readMem(0xd7b4));
        // CB 3E 0007
        gbc.setState(0x7a35, 0x25fe, 0x8bf0, 0x1014, 0x3032, 0xdf6f, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xcb, 0x3e });
        gbc.writeMem(0xdf6f, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x7a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xdf6f));
        // CB 3E 0009
        gbc.setState(0xce76, 0xbd88, 0x21b0, 0x681d, 0x8a9f, 0xa130, 0x0, 0x0);
        gbc.writeMem(0xa130, { 0xc3 });
        gbc.writeMem(0xce76, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa130));
        EXPECT(0xcb, gbc.readMem(0xce76));
        EXPECT(0x3e, gbc.readMem(0xce77));
        // CB 3E 000A
        gbc.setState(0xad5d, 0xd980, 0xe8b0, 0x6a1e, 0x5d42, 0x8637, 0x1, 0x0);
        gbc.writeMem(0x8637, { 0xcc });
        gbc.writeMem(0xad5d, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0xad5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8637));
        EXPECT(0xcb, gbc.readMem(0xad5d));
        EXPECT(0x3e, gbc.readMem(0xad5e));
        // CB 3E 000B
        gbc.setState(0x9cf, 0xb38, 0xa200, 0xee1f, 0xd346, 0x9126, 0x0, 0x1);
        gbc.writeMem(0x9cf, { 0xcb, 0x3e });
        gbc.writeMem(0x9126, { 0x52 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0x9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9126));
        // CB 3E 000C
        gbc.setState(0x8439, 0x3004, 0xcf90, 0xa1ed, 0xfe17, 0xe57f, 0x0, 0x0);
        gbc.writeMem(0x8439, { 0xcb, 0x3e });
        gbc.writeMem(0xe57f, { 0x87 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0x843b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8439));
        EXPECT(0x3e, gbc.readMem(0x843a));
        EXPECT(0x43, gbc.readMem(0xe57f));
        // CB 3E 0010
        gbc.setState(0x1d68, 0x48fb, 0x1d70, 0x490c, 0x722a, 0xdb31, 0x0, 0x0);
        gbc.writeMem(0x1d68, { 0xcb, 0x3e });
        gbc.writeMem(0xdb31, { 0x20 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0x1d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdb31));
        // CB 3E 0011
        gbc.setState(0x6d73, 0x8885, 0x5ef0, 0xde65, 0xcb25, 0x8008, 0x1, 0x0);
        gbc.writeMem(0x6d73, { 0xcb, 0x3e });
        gbc.writeMem(0x8008, { 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8885, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8008));
        // CB 3E 0013
        gbc.setState(0xbaef, 0xaee1, 0x4030, 0x2899, 0xd9ac, 0xe2ab, 0x1, 0x1);
        gbc.writeMem(0xbaef, { 0xcb, 0x3e });
        gbc.writeMem(0xe2ab, { 0x27 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaee1, gbc.sp());
        EXPECT(0xbaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaef));
        EXPECT(0x3e, gbc.readMem(0xbaf0));
        EXPECT(0x13, gbc.readMem(0xe2ab));
        // CB 3E 0014
        gbc.setState(0x59c0, 0xd198, 0x3350, 0xc05b, 0x1def, 0xa47f, 0x1, 0x1);
        gbc.writeMem(0x59c0, { 0xcb, 0x3e });
        gbc.writeMem(0xa47f, { 0x59 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd198, gbc.sp());
        EXPECT(0x59c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa47f));
        // CB 3E 0016
        gbc.setState(0x54bb, 0x675, 0x4320, 0xcacd, 0xed7a, 0xc567, 0x1, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0x3e });
        gbc.writeMem(0xc567, { 0x5a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc567));
        // CB 3E 0017
        gbc.setState(0x5036, 0xcda6, 0xca20, 0x412d, 0x986b, 0xccd6, 0x0, 0x0);
        gbc.writeMem(0x5036, { 0xcb, 0x3e });
        gbc.writeMem(0xccd6, { 0xd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcda6, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xccd6));
        // CB 3E 001C
        gbc.setState(0x9722, 0x517e, 0x27e0, 0x794b, 0x3fe4, 0xfb9e, 0x0, 0x0);
        gbc.writeMem(0x9722, { 0xcb, 0x3e });
        gbc.writeMem(0xfb9e, { 0x62 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9722));
        EXPECT(0x3e, gbc.readMem(0x9723));
        EXPECT(0x31, gbc.readMem(0xfb9e));
        // CB 3E 001E
        gbc.setState(0x2120, 0xc89e, 0xe010, 0x4a9b, 0x3eaa, 0xd6a1, 0x1, 0x1);
        gbc.writeMem(0x2120, { 0xcb, 0x3e });
        gbc.writeMem(0xd6a1, { 0x57 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd6a1));
        // CB 3E 001F
        gbc.setState(0x416b, 0x3d, 0x3b10, 0x6339, 0xf4f1, 0x8ce6, 0x1, 0x1);
        gbc.writeMem(0x416b, { 0xcb, 0x3e });
        gbc.writeMem(0x8ce6, { 0xb8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3d, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8ce6));
        // CB 3E 0022
        gbc.setState(0x3d07, 0x2f15, 0x8320, 0x1c2, 0x99c5, 0xb269, 0x1, 0x0);
        gbc.writeMem(0x3d07, { 0xcb, 0x3e });
        gbc.writeMem(0xb269, { 0x93 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2f15, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb269));
        // CB 3E 0025
        gbc.setState(0x1ef7, 0xf80d, 0xca60, 0x3481, 0x9bc3, 0xc3ef, 0x0, 0x0);
        gbc.writeMem(0x1ef7, { 0xcb, 0x3e });
        gbc.writeMem(0xc3ef, { 0x74 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf80d, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc3ef));
        // CB 3E 0026
        gbc.setState(0xdcf7, 0x5f18, 0xdde0, 0x3c65, 0xd4f4, 0xddbc, 0x0, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0x3e });
        gbc.writeMem(0xddbc, { 0x5a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5f18, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf7));
        EXPECT(0x3e, gbc.readMem(0xdcf8));
        EXPECT(0x2d, gbc.readMem(0xddbc));
        // CB 3E 0029
        gbc.setState(0x8d47, 0x3a33, 0x3c80, 0xb0d3, 0x5760, 0xaa2c, 0x0, 0x1);
        gbc.writeMem(0x8d47, { 0xcb, 0x3e });
        gbc.writeMem(0xaa2c, { 0xb4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3a33, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d47));
        EXPECT(0x3e, gbc.readMem(0x8d48));
        EXPECT(0x5a, gbc.readMem(0xaa2c));
        // CB 3E 002A
        gbc.setState(0xa9, 0xdd8f, 0xf470, 0xf565, 0x781c, 0xeb30, 0x0, 0x1);
        gbc.writeMem(0xa9, { 0xcb, 0x3e });
        gbc.writeMem(0xeb30, { 0xf2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdd8f, gbc.sp());
        EXPECT(0xab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb30));
        // CB 3E 002F
        gbc.setState(0x5c77, 0x3e0e, 0x1190, 0x64bf, 0x76ce, 0xf9a4, 0x1, 0x0);
        gbc.writeMem(0x5c77, { 0xcb, 0x3e });
        gbc.writeMem(0xf9a4, { 0x87 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0x5c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xf9a4));
        // CB 3E 0031
        gbc.setState(0x1ed5, 0x4b67, 0x4f80, 0xf4b0, 0x2cab, 0xa35f, 0x1, 0x0);
        gbc.writeMem(0x1ed5, { 0xcb, 0x3e });
        gbc.writeMem(0xa35f, { 0x18 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa35f));
        // CB 3E 0032
        gbc.setState(0x944a, 0x6417, 0x7ab0, 0x6262, 0xbc44, 0x93c9, 0x1, 0x0);
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.writeMem(0x944a, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0x944c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x93c9));
        EXPECT(0xcb, gbc.readMem(0x944a));
        EXPECT(0x3e, gbc.readMem(0x944b));
        // CB 3E 0033
        gbc.setState(0xac96, 0x6ebd, 0x4410, 0xc11d, 0x5657, 0x9df2, 0x1, 0x1);
        gbc.writeMem(0x9df2, { 0x8a });
        gbc.writeMem(0xac96, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0xac98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9df2));
        EXPECT(0xcb, gbc.readMem(0xac96));
        EXPECT(0x3e, gbc.readMem(0xac97));
        // CB 3E 0036
        gbc.setState(0x9a37, 0xb316, 0x2530, 0x8ed9, 0x44c8, 0x8b5e, 0x0, 0x1);
        gbc.writeMem(0x8b5e, { 0x60 });
        gbc.writeMem(0x9a37, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb316, gbc.sp());
        EXPECT(0x9a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8b5e));
        EXPECT(0xcb, gbc.readMem(0x9a37));
        EXPECT(0x3e, gbc.readMem(0x9a38));
        // CB 3E 0037
        gbc.setState(0x29c7, 0x5cbb, 0x480, 0xd39e, 0xc0d7, 0x893b, 0x1, 0x0);
        gbc.writeMem(0x29c7, { 0xcb, 0x3e });
        gbc.writeMem(0x893b, { 0xef });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x893b));
        // CB 3E 0038
        gbc.setState(0x1b22, 0x7374, 0x9e50, 0x7fc, 0x67e1, 0xc94c, 0x0, 0x0);
        gbc.writeMem(0x1b22, { 0xcb, 0x3e });
        gbc.writeMem(0xc94c, { 0x92 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7374, gbc.sp());
        EXPECT(0x1b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc94c));
        // CB 3E 003C
        gbc.setState(0xe7cb, 0x35b6, 0x6290, 0x68d9, 0xfa0f, 0xbcfb, 0x1, 0x0);
        gbc.writeMem(0xbcfb, { 0x9c });
        gbc.writeMem(0xe7cb, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x35b6, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbcfb));
        EXPECT(0xcb, gbc.readMem(0xe7cb));
        EXPECT(0x3e, gbc.readMem(0xe7cc));
        // CB 3E 003D
        gbc.setState(0x6172, 0x367a, 0x5ec0, 0x48a, 0xb5ba, 0xf15d, 0x0, 0x1);
        gbc.writeMem(0x6172, { 0xcb, 0x3e });
        gbc.writeMem(0xf15d, { 0xa9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x367a, gbc.sp());
        EXPECT(0x6174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf15d));
        // CB 3E 003E
        gbc.setState(0xbc67, 0x2147, 0x3070, 0xa690, 0x5efd, 0xae82, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0x35 });
        gbc.writeMem(0xbc67, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2147, gbc.sp());
        EXPECT(0xbc69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xae82));
        EXPECT(0xcb, gbc.readMem(0xbc67));
        EXPECT(0x3e, gbc.readMem(0xbc68));
        // CB 3E 0044
        gbc.setState(0xe8e8, 0x7bc3, 0x9ef0, 0x206c, 0x25d6, 0xebfd, 0x1, 0x1);
        gbc.writeMem(0xe8e8, { 0xcb, 0x3e });
        gbc.writeMem(0xebfd, { 0x26 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7bc3, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e8));
        EXPECT(0x3e, gbc.readMem(0xe8e9));
        EXPECT(0x13, gbc.readMem(0xebfd));
        // CB 3E 0045
        gbc.setState(0x66e3, 0xb944, 0x1380, 0x1c0a, 0x8e9e, 0xe8db, 0x0, 0x0);
        gbc.writeMem(0x66e3, { 0xcb, 0x3e });
        gbc.writeMem(0xe8db, { 0x22 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb944, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe8db));
        // CB 3E 0046
        gbc.setState(0x8b6e, 0xc15d, 0xa4b0, 0x101d, 0x373e, 0xcf40, 0x1, 0x1);
        gbc.writeMem(0x8b6e, { 0xcb, 0x3e });
        gbc.writeMem(0xcf40, { 0x6f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc15d, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6e));
        EXPECT(0x3e, gbc.readMem(0x8b6f));
        EXPECT(0x37, gbc.readMem(0xcf40));
        // CB 3E 0048
        gbc.setState(0x5e3d, 0x173c, 0xc670, 0xf0d5, 0xf54d, 0xab10, 0x0, 0x0);
        gbc.writeMem(0x5e3d, { 0xcb, 0x3e });
        gbc.writeMem(0xab10, { 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x173c, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xab10));
        // CB 3E 004A
        gbc.setState(0x7089, 0x7938, 0xb420, 0xb66b, 0xfcaa, 0xcd15, 0x0, 0x1);
        gbc.writeMem(0x7089, { 0xcb, 0x3e });
        gbc.writeMem(0xcd15, { 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7938, gbc.sp());
        EXPECT(0x708b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcd15));
        // CB 3E 004C
        gbc.setState(0xdfa5, 0xda0b, 0xc270, 0xca38, 0x7bde, 0xcedd, 0x0, 0x1);
        gbc.writeMem(0xcedd, { 0x15 });
        gbc.writeMem(0xdfa5, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0xdfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcedd));
        EXPECT(0xcb, gbc.readMem(0xdfa5));
        EXPECT(0x3e, gbc.readMem(0xdfa6));
        // CB 3E 004E
        gbc.setState(0x468f, 0x7fc0, 0x4250, 0x6c45, 0xbce6, 0x905e, 0x1, 0x0);
        gbc.writeMem(0x468f, { 0xcb, 0x3e });
        gbc.writeMem(0x905e, { 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7fc0, gbc.sp());
        EXPECT(0x4691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x905e));
        // CB 3E 004F
        gbc.setState(0xebd3, 0x34a8, 0x4b80, 0xdd84, 0xe1b8, 0xfad5, 0x1, 0x0);
        gbc.writeMem(0xebd3, { 0xcb, 0x3e });
        gbc.writeMem(0xfad5, { 0x65 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x34a8, gbc.sp());
        EXPECT(0xebd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd3));
        EXPECT(0x3e, gbc.readMem(0xebd4));
        EXPECT(0x32, gbc.readMem(0xfad5));
        // CB 3E 0050
        gbc.setState(0x2888, 0x9f0d, 0xeea0, 0xeb62, 0xc7ed, 0xf1c8, 0x1, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0x3e });
        gbc.writeMem(0xf1c8, { 0x28 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9f0d, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf1c8));
        // CB 3E 0051
        gbc.setState(0xb9c6, 0x62ee, 0xe820, 0x111e, 0x7b50, 0xa94a, 0x1, 0x0);
        gbc.writeMem(0xa94a, { 0x4 });
        gbc.writeMem(0xb9c6, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x62ee, gbc.sp());
        EXPECT(0xb9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xa94a));
        EXPECT(0xcb, gbc.readMem(0xb9c6));
        EXPECT(0x3e, gbc.readMem(0xb9c7));
        // CB 3E 0056
        gbc.setState(0x7e5b, 0x9398, 0x3e00, 0x77f7, 0xdbf5, 0xa375, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0x3e });
        gbc.writeMem(0xa375, { 0xe1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa375));
        // CB 3E 005B
        gbc.setState(0xb98c, 0x2aa6, 0x510, 0xacc6, 0x87b0, 0xf1bf, 0x0, 0x0);
        gbc.writeMem(0xb98c, { 0xcb, 0x3e });
        gbc.writeMem(0xf1bf, { 0xbb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0xb98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98c));
        EXPECT(0x3e, gbc.readMem(0xb98d));
        EXPECT(0x5d, gbc.readMem(0xf1bf));
        // CB 3E 005D
        gbc.setState(0x7f2a, 0x1091, 0x47c0, 0xc17a, 0xef9a, 0x970e, 0x1, 0x0);
        gbc.writeMem(0x7f2a, { 0xcb, 0x3e });
        gbc.writeMem(0x970e, { 0x96 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x970e));
        // CB 3E 005E
        gbc.setState(0x8070, 0xa4c6, 0xd8f0, 0xffe0, 0xf36e, 0xb685, 0x0, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0x3e });
        gbc.writeMem(0xb685, { 0x8b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa4c6, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8070));
        EXPECT(0x3e, gbc.readMem(0x8071));
        EXPECT(0x45, gbc.readMem(0xb685));
        // CB 3E 005F
        gbc.setState(0x11d9, 0x18c5, 0x7830, 0xd16b, 0xe7dd, 0xe637, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xcb, 0x3e });
        gbc.writeMem(0xe637, { 0x86 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x18c5, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe637));
        // CB 3E 0062
        gbc.setState(0xe7d9, 0xcc94, 0x9d40, 0xfcd3, 0xf8ef, 0xb92f, 0x0, 0x0);
        gbc.writeMem(0xb92f, { 0x18 });
        gbc.writeMem(0xe7d9, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb92f));
        EXPECT(0xcb, gbc.readMem(0xe7d9));
        EXPECT(0x3e, gbc.readMem(0xe7da));
        // CB 3E 0063
        gbc.setState(0xe8f6, 0x3624, 0x40b0, 0x8fe8, 0x4ada, 0xd35d, 0x0, 0x1);
        gbc.writeMem(0xd35d, { 0xa3 });
        gbc.writeMem(0xe8f6, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0xe8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd35d));
        EXPECT(0xcb, gbc.readMem(0xe8f6));
        EXPECT(0x3e, gbc.readMem(0xe8f7));
        // CB 3E 0065
        gbc.setState(0x8139, 0x2359, 0xb690, 0x49de, 0xe09e, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x8139, { 0xcb, 0x3e });
        gbc.writeMem(0xa243, { 0xee });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2359, gbc.sp());
        EXPECT(0x813b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8139));
        EXPECT(0x3e, gbc.readMem(0x813a));
        EXPECT(0x77, gbc.readMem(0xa243));
        // CB 3E 006B
        gbc.setState(0xbbeb, 0xe64, 0xb110, 0xa94c, 0x6430, 0xff15, 0x1, 0x0);
        gbc.writeMem(0xbbeb, { 0xcb, 0x3e });
        gbc.writeMem(0xff15, { 0xdb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe64, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbeb));
        EXPECT(0x3e, gbc.readMem(0xbbec));
        EXPECT(0x6d, gbc.readMem(0xff15));
        // CB 3E 006C
        gbc.setState(0x62a, 0x20fc, 0xe5b0, 0x4052, 0xfe76, 0xe0c7, 0x0, 0x0);
        gbc.writeMem(0x62a, { 0xcb, 0x3e });
        gbc.writeMem(0xe0c7, { 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0x62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe0c7));
        // CB 3E 006D
        gbc.setState(0x99c1, 0xa4ca, 0xd0, 0xc473, 0x82f2, 0x92b1, 0x1, 0x1);
        gbc.writeMem(0x92b1, { 0x8b });
        gbc.writeMem(0x99c1, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa4ca, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x92b1));
        EXPECT(0xcb, gbc.readMem(0x99c1));
        EXPECT(0x3e, gbc.readMem(0x99c2));
        // CB 3E 006F
        gbc.setState(0xa0db, 0x1b8a, 0x9980, 0xe218, 0xf07f, 0xcdb2, 0x0, 0x0);
        gbc.writeMem(0xa0db, { 0xcb, 0x3e });
        gbc.writeMem(0xcdb2, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1b8a, gbc.sp());
        EXPECT(0xa0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0db));
        EXPECT(0x3e, gbc.readMem(0xa0dc));
        EXPECT(0x5d, gbc.readMem(0xcdb2));
        // CB 3E 0070
        gbc.setState(0xd768, 0x1d2e, 0xec50, 0xe368, 0x7fba, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0xd768, { 0xcb, 0x3e });
        gbc.writeMem(0xe52d, { 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1d2e, gbc.sp());
        EXPECT(0xd76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd768));
        EXPECT(0x3e, gbc.readMem(0xd769));
        EXPECT(0x71, gbc.readMem(0xe52d));
        // CB 3E 0071
        gbc.setState(0x895f, 0x3608, 0x25e0, 0x14b6, 0xee83, 0xcb79, 0x1, 0x1);
        gbc.writeMem(0x895f, { 0xcb, 0x3e });
        gbc.writeMem(0xcb79, { 0x97 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895f));
        EXPECT(0x3e, gbc.readMem(0x8960));
        EXPECT(0x4b, gbc.readMem(0xcb79));
        // CB 3E 0073
        gbc.setState(0x7108, 0xc03a, 0x4990, 0x5c94, 0x28e0, 0x886e, 0x1, 0x0);
        gbc.writeMem(0x7108, { 0xcb, 0x3e });
        gbc.writeMem(0x886e, { 0xc4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc03a, gbc.sp());
        EXPECT(0x710a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x886e));
        // CB 3E 0075
        gbc.setState(0x6069, 0x7dab, 0x6b20, 0x165c, 0x775, 0xeea7, 0x0, 0x1);
        gbc.writeMem(0x6069, { 0xcb, 0x3e });
        gbc.writeMem(0xeea7, { 0xb6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7dab, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeea7));
        // CB 3E 0077
        gbc.setState(0x6a1b, 0xc266, 0xd180, 0x126d, 0xb877, 0xde70, 0x1, 0x1);
        gbc.writeMem(0x6a1b, { 0xcb, 0x3e });
        gbc.writeMem(0xde70, { 0xbf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc266, gbc.sp());
        EXPECT(0x6a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xde70));
        // CB 3E 0078
        gbc.setState(0x8440, 0xa119, 0x5c00, 0x4012, 0x1cad, 0xd847, 0x0, 0x0);
        gbc.writeMem(0x8440, { 0xcb, 0x3e });
        gbc.writeMem(0xd847, { 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0x8442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8440));
        EXPECT(0x3e, gbc.readMem(0x8441));
        EXPECT(0x35, gbc.readMem(0xd847));
        // CB 3E 007D
        gbc.setState(0x6ccb, 0xa111, 0xffd0, 0xdd87, 0xde8b, 0xbb3b, 0x1, 0x0);
        gbc.writeMem(0x6ccb, { 0xcb, 0x3e });
        gbc.writeMem(0xbb3b, { 0xde });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x6ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xbb3b));
        // CB 3E 007F
        gbc.setState(0x50e8, 0x2405, 0x6f30, 0xd772, 0xa498, 0xe9d1, 0x0, 0x0);
        gbc.writeMem(0x50e8, { 0xcb, 0x3e });
        gbc.writeMem(0xe9d1, { 0x90 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe9d1));
        // CB 3E 0082
        gbc.setState(0xa8f4, 0x523e, 0xb6e0, 0xcf8c, 0x1de7, 0xfaec, 0x0, 0x0);
        gbc.writeMem(0xa8f4, { 0xcb, 0x3e });
        gbc.writeMem(0xfaec, { 0x8f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f4));
        EXPECT(0x3e, gbc.readMem(0xa8f5));
        EXPECT(0x47, gbc.readMem(0xfaec));
        // CB 3E 0084
        gbc.setState(0xb4ce, 0x3e80, 0x2e60, 0xe2c3, 0xf5da, 0xe0ba, 0x0, 0x0);
        gbc.writeMem(0xb4ce, { 0xcb, 0x3e });
        gbc.writeMem(0xe0ba, { 0xa3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3e80, gbc.sp());
        EXPECT(0xb4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ce));
        EXPECT(0x3e, gbc.readMem(0xb4cf));
        EXPECT(0x51, gbc.readMem(0xe0ba));
        // CB 3E 0086
        gbc.setState(0x8bc5, 0x2b47, 0xde80, 0xfe65, 0x696f, 0xbd39, 0x0, 0x1);
        gbc.writeMem(0x8bc5, { 0xcb, 0x3e });
        gbc.writeMem(0xbd39, { 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0x8bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc5));
        EXPECT(0x3e, gbc.readMem(0x8bc6));
        EXPECT(0x2e, gbc.readMem(0xbd39));
        // CB 3E 0088
        gbc.setState(0xd22d, 0x9f61, 0xd040, 0x6aea, 0xfdc3, 0x91b5, 0x1, 0x1);
        gbc.writeMem(0x91b5, { 0x38 });
        gbc.writeMem(0xd22d, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9f61, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x91b5));
        EXPECT(0xcb, gbc.readMem(0xd22d));
        EXPECT(0x3e, gbc.readMem(0xd22e));
        // CB 3E 0089
        gbc.setState(0x6cf3, 0xa1a8, 0x3d00, 0xee07, 0xb5fc, 0xbc4a, 0x1, 0x1);
        gbc.writeMem(0x6cf3, { 0xcb, 0x3e });
        gbc.writeMem(0xbc4a, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa1a8, gbc.sp());
        EXPECT(0x6cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbc4a));
        // CB 3E 008D
        gbc.setState(0xca9e, 0xfefa, 0xf500, 0x59a3, 0x779a, 0xb2f4, 0x1, 0x0);
        gbc.writeMem(0xb2f4, { 0xd5 });
        gbc.writeMem(0xca9e, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfefa, gbc.sp());
        EXPECT(0xcaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb2f4));
        EXPECT(0xcb, gbc.readMem(0xca9e));
        EXPECT(0x3e, gbc.readMem(0xca9f));
        // CB 3E 008E
        gbc.setState(0x6bce, 0xe027, 0x2b70, 0x6668, 0x6fa2, 0x8215, 0x0, 0x1);
        gbc.writeMem(0x6bce, { 0xcb, 0x3e });
        gbc.writeMem(0x8215, { 0x73 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe027, gbc.sp());
        EXPECT(0x6bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8215));
        // CB 3E 008F
        gbc.setState(0xaa33, 0xbb49, 0x20f0, 0xf0fb, 0x5204, 0xe113, 0x1, 0x0);
        gbc.writeMem(0xaa33, { 0xcb, 0x3e });
        gbc.writeMem(0xe113, { 0x98 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0xaa35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa33));
        EXPECT(0x3e, gbc.readMem(0xaa34));
        EXPECT(0x4c, gbc.readMem(0xe113));
        // CB 3E 0091
        gbc.setState(0x8b30, 0xc798, 0x4740, 0x9595, 0x430c, 0xc249, 0x0, 0x0);
        gbc.writeMem(0x8b30, { 0xcb, 0x3e });
        gbc.writeMem(0xc249, { 0xac });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc798, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b30));
        EXPECT(0x3e, gbc.readMem(0x8b31));
        EXPECT(0x56, gbc.readMem(0xc249));
        // CB 3E 0092
        gbc.setState(0x64ea, 0x3242, 0xbe70, 0xee94, 0x24de, 0x8e00, 0x1, 0x0);
        gbc.writeMem(0x64ea, { 0xcb, 0x3e });
        gbc.writeMem(0x8e00, { 0xcd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0x64ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8e00));
        // CB 3E 0093
        gbc.setState(0x2a3b, 0x2e22, 0x75f0, 0x126d, 0x497b, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x2a3b, { 0xcb, 0x3e });
        gbc.writeMem(0xdbda, { 0x8b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0x2a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xdbda));
        // CB 3E 0095
        gbc.setState(0x6c1, 0x9d50, 0x2800, 0xa946, 0xccfc, 0xff51, 0x0, 0x0);
        gbc.writeMem(0x6c1, { 0xcb, 0x3e });
        gbc.writeMem(0xff51, { 0x4c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0x6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xff51));
        // CB 3E 0099
        gbc.setState(0x8fb9, 0xe0e4, 0x9a0, 0x1b2e, 0x387b, 0xcf35, 0x1, 0x0);
        gbc.writeMem(0x8fb9, { 0xcb, 0x3e });
        gbc.writeMem(0xcf35, { 0xfd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe0e4, gbc.sp());
        EXPECT(0x8fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb9));
        EXPECT(0x3e, gbc.readMem(0x8fba));
        EXPECT(0x7e, gbc.readMem(0xcf35));
        // CB 3E 009A
        gbc.setState(0x7ee0, 0x4227, 0xa3f0, 0xd045, 0x3c0b, 0xeed5, 0x0, 0x1);
        gbc.writeMem(0x7ee0, { 0xcb, 0x3e });
        gbc.writeMem(0xeed5, { 0x59 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4227, gbc.sp());
        EXPECT(0x7ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeed5));
        // CB 3E 009E
        gbc.setState(0x67a3, 0x4f08, 0x1660, 0x7572, 0x8b5f, 0xb4ba, 0x1, 0x1);
        gbc.writeMem(0x67a3, { 0xcb, 0x3e });
        gbc.writeMem(0xb4ba, { 0x4c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4f08, gbc.sp());
        EXPECT(0x67a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb4ba));
        // CB 3E 009F
        gbc.setState(0xb714, 0x759a, 0x8960, 0x2549, 0xb80f, 0xafb2, 0x0, 0x1);
        gbc.writeMem(0xafb2, { 0x11 });
        gbc.writeMem(0xb714, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xafb2));
        EXPECT(0xcb, gbc.readMem(0xb714));
        EXPECT(0x3e, gbc.readMem(0xb715));
        // CB 3E 00A0
        gbc.setState(0x7f4, 0x3e9f, 0xd480, 0x187d, 0xd7c5, 0xa8ac, 0x0, 0x1);
        gbc.writeMem(0x7f4, { 0xcb, 0x3e });
        gbc.writeMem(0xa8ac, { 0x1b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa8ac));
        // CB 3E 00A1
        gbc.setState(0xee36, 0x1ffd, 0x5af0, 0xe6a7, 0x59b4, 0x8ed2, 0x0, 0x1);
        gbc.writeMem(0x8ed2, { 0x19 });
        gbc.writeMem(0xee36, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ffd, gbc.sp());
        EXPECT(0xee38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ed2));
        EXPECT(0xcb, gbc.readMem(0xee36));
        EXPECT(0x3e, gbc.readMem(0xee37));
        // CB 3E 00A2
        gbc.setState(0xe33e, 0xbf19, 0xa20, 0x7304, 0xcde, 0x95fc, 0x1, 0x1);
        gbc.writeMem(0x95fc, { 0x5e });
        gbc.writeMem(0xe33e, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbf19, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x95fc));
        EXPECT(0xcb, gbc.readMem(0xe33e));
        EXPECT(0x3e, gbc.readMem(0xe33f));
        // CB 3E 00A4
        gbc.setState(0xdcbc, 0xa0e4, 0x2bc0, 0x4330, 0xc710, 0xe60d, 0x1, 0x1);
        gbc.writeMem(0xdcbc, { 0xcb, 0x3e });
        gbc.writeMem(0xe60d, { 0x5e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbc));
        EXPECT(0x3e, gbc.readMem(0xdcbd));
        EXPECT(0x2f, gbc.readMem(0xe60d));
        // CB 3E 00A8
        gbc.setState(0xbc9c, 0x962e, 0x88e0, 0xd7ed, 0xbd17, 0xcdd8, 0x1, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0x3e });
        gbc.writeMem(0xcdd8, { 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x962e, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0x3e, gbc.readMem(0xbc9d));
        EXPECT(0xd, gbc.readMem(0xcdd8));
        // CB 3E 00AA
        gbc.setState(0xd161, 0xeaa2, 0xaf30, 0x1106, 0x541d, 0x8724, 0x1, 0x1);
        gbc.writeMem(0x8724, { 0x40 });
        gbc.writeMem(0xd161, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0xd163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8724));
        EXPECT(0xcb, gbc.readMem(0xd161));
        EXPECT(0x3e, gbc.readMem(0xd162));
        // CB 3E 00AE
        gbc.setState(0xae77, 0xc7bb, 0x1e70, 0x8b02, 0x5334, 0xafc3, 0x1, 0x0);
        gbc.writeMem(0xae77, { 0xcb, 0x3e });
        gbc.writeMem(0xafc3, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc7bb, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae77));
        EXPECT(0x3e, gbc.readMem(0xae78));
        EXPECT(0x40, gbc.readMem(0xafc3));
        // CB 3E 00B1
        gbc.setState(0x65cb, 0x2003, 0x5eb0, 0xe009, 0x685e, 0xadd9, 0x0, 0x1);
        gbc.writeMem(0x65cb, { 0xcb, 0x3e });
        gbc.writeMem(0xadd9, { 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xadd9));
        // CB 3E 00B2
        gbc.setState(0x33c3, 0x7f57, 0x6b10, 0x8755, 0xe6d3, 0xb8e8, 0x0, 0x1);
        gbc.writeMem(0x33c3, { 0xcb, 0x3e });
        gbc.writeMem(0xb8e8, { 0x17 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7f57, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb8e8));
        // CB 3E 00B3
        gbc.setState(0x31c9, 0x37b4, 0x45c0, 0x5134, 0x19d4, 0x8bd2, 0x0, 0x1);
        gbc.writeMem(0x31c9, { 0xcb, 0x3e });
        gbc.writeMem(0x8bd2, { 0xb0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0x31cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8bd2));
        // CB 3E 00B6
        gbc.setState(0xdac, 0xafa9, 0x7c60, 0x7dcd, 0x7531, 0xab4a, 0x0, 0x0);
        gbc.writeMem(0xdac, { 0xcb, 0x3e });
        gbc.writeMem(0xab4a, { 0x70 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xab4a));
        // CB 3E 00B7
        gbc.setState(0xe8e5, 0xf907, 0x8780, 0x78c8, 0xa705, 0xe1d0, 0x0, 0x0);
        gbc.writeMem(0xe1d0, { 0xa4 });
        gbc.writeMem(0xe8e5, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf907, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe1d0));
        EXPECT(0xcb, gbc.readMem(0xe8e5));
        EXPECT(0x3e, gbc.readMem(0xe8e6));
        // CB 3E 00B8
        gbc.setState(0x6d7e, 0x556a, 0x8e30, 0xee6b, 0x8a91, 0xbb42, 0x0, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0x3e });
        gbc.writeMem(0xbb42, { 0x1e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x556a, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xbb42));
        // CB 3E 00BB
        gbc.setState(0xb7f2, 0x8c58, 0xb920, 0x2244, 0xec4d, 0xa188, 0x1, 0x0);
        gbc.writeMem(0xa188, { 0x52 });
        gbc.writeMem(0xb7f2, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8c58, gbc.sp());
        EXPECT(0xb7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa188));
        EXPECT(0xcb, gbc.readMem(0xb7f2));
        EXPECT(0x3e, gbc.readMem(0xb7f3));
        // CB 3E 00BC
        gbc.setState(0xd83f, 0x31cf, 0x6e20, 0x70c2, 0x6c33, 0xd1ad, 0x1, 0x0);
        gbc.writeMem(0xd1ad, { 0x95 });
        gbc.writeMem(0xd83f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0xd841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xd1ad));
        EXPECT(0xcb, gbc.readMem(0xd83f));
        EXPECT(0x3e, gbc.readMem(0xd840));
        // CB 3E 00C1
        gbc.setState(0xb9bc, 0x6809, 0x3c60, 0x2f54, 0x1f48, 0xec34, 0x0, 0x0);
        gbc.writeMem(0xb9bc, { 0xcb, 0x3e });
        gbc.writeMem(0xec34, { 0xa8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bc));
        EXPECT(0x3e, gbc.readMem(0xb9bd));
        EXPECT(0x54, gbc.readMem(0xec34));
        // CB 3E 00C2
        gbc.setState(0x9b61, 0x1405, 0xe200, 0xaa12, 0x33b3, 0x9f7f, 0x0, 0x0);
        gbc.writeMem(0x9b61, { 0xcb, 0x3e });
        gbc.writeMem(0x9f7f, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b61));
        EXPECT(0x3e, gbc.readMem(0x9b62));
        EXPECT(0x1d, gbc.readMem(0x9f7f));
        // CB 3E 00C3
        gbc.setState(0x5098, 0x23d6, 0xa690, 0x4c2c, 0xf59, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0x5098, { 0xcb, 0x3e });
        gbc.writeMem(0xb68a, { 0xfd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x23d6, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb68a));
        // CB 3E 00C8
        gbc.setState(0xa720, 0x41e6, 0x80c0, 0xa1ae, 0x646d, 0xa761, 0x1, 0x1);
        gbc.writeMem(0xa720, { 0xcb, 0x3e });
        gbc.writeMem(0xa761, { 0x45 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa720));
        EXPECT(0x3e, gbc.readMem(0xa721));
        EXPECT(0x22, gbc.readMem(0xa761));
        // CB 3E 00CB
        gbc.setState(0x1a18, 0xd301, 0x3120, 0xa282, 0x3882, 0xa968, 0x0, 0x0);
        gbc.writeMem(0x1a18, { 0xcb, 0x3e });
        gbc.writeMem(0xa968, { 0xd0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd301, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa968));
        // CB 3E 00CE
        gbc.setState(0x2808, 0x1b50, 0x7210, 0x950c, 0xc2df, 0xee7d, 0x1, 0x1);
        gbc.writeMem(0x2808, { 0xcb, 0x3e });
        gbc.writeMem(0xee7d, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xee7d));
        // CB 3E 00D0
        gbc.setState(0x5b49, 0x7512, 0x8570, 0xe071, 0xc560, 0xf8d4, 0x0, 0x1);
        gbc.writeMem(0x5b49, { 0xcb, 0x3e });
        gbc.writeMem(0xf8d4, { 0x7f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf8d4));
        // CB 3E 00D4
        gbc.setState(0x80ec, 0x6acb, 0x94b0, 0x4e48, 0x91b, 0xf502, 0x0, 0x1);
        gbc.writeMem(0x80ec, { 0xcb, 0x3e });
        gbc.writeMem(0xf502, { 0xe7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ec));
        EXPECT(0x3e, gbc.readMem(0x80ed));
        EXPECT(0x73, gbc.readMem(0xf502));
        // CB 3E 00D6
        gbc.setState(0x6082, 0x9427, 0xdf00, 0xd49f, 0x64a8, 0x89e0, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xcb, 0x3e });
        gbc.writeMem(0x89e0, { 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x89e0));
        // CB 3E 00D8
        gbc.setState(0x3ac0, 0x2148, 0x760, 0x57eb, 0x4b0, 0xcd3d, 0x1, 0x1);
        gbc.writeMem(0x3ac0, { 0xcb, 0x3e });
        gbc.writeMem(0xcd3d, { 0xa3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcd3d));
        // CB 3E 00DC
        gbc.setState(0x86b1, 0x591c, 0x1070, 0x2a1a, 0x8df8, 0xcd90, 0x0, 0x1);
        gbc.writeMem(0x86b1, { 0xcb, 0x3e });
        gbc.writeMem(0xcd90, { 0x9e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x591c, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b1));
        EXPECT(0x3e, gbc.readMem(0x86b2));
        EXPECT(0x4f, gbc.readMem(0xcd90));
        // CB 3E 00DD
        gbc.setState(0xdd96, 0xa08e, 0x7400, 0x9af6, 0x188, 0xfcee, 0x0, 0x0);
        gbc.writeMem(0xdd96, { 0xcb, 0x3e });
        gbc.writeMem(0xfcee, { 0x19 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd96));
        EXPECT(0x3e, gbc.readMem(0xdd97));
        EXPECT(0xc, gbc.readMem(0xfcee));
        // CB 3E 00E1
        gbc.setState(0x5c48, 0x921b, 0xd980, 0xf4e9, 0xea8d, 0x860e, 0x1, 0x0);
        gbc.writeMem(0x5c48, { 0xcb, 0x3e });
        gbc.writeMem(0x860e, { 0xc3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x921b, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x860e));
        // CB 3E 00E2
        gbc.setState(0xcc5, 0x61e, 0x8560, 0xdbbc, 0x2d07, 0xe12f, 0x0, 0x1);
        gbc.writeMem(0xcc5, { 0xcb, 0x3e });
        gbc.writeMem(0xe12f, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x61e, gbc.sp());
        EXPECT(0xcc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe12f));
        // CB 3E 00E3
        gbc.setState(0x51d3, 0x4b5b, 0x9540, 0x2570, 0xc9f3, 0xde8e, 0x0, 0x0);
        gbc.writeMem(0x51d3, { 0xcb, 0x3e });
        gbc.writeMem(0xde8e, { 0x99 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4b5b, gbc.sp());
        EXPECT(0x51d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xde8e));
        // CB 3E 00E4
        gbc.setState(0xc560, 0x3ed3, 0xbb00, 0x81e9, 0x212b, 0xc4a7, 0x1, 0x0);
        gbc.writeMem(0xc4a7, { 0x95 });
        gbc.writeMem(0xc560, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3ed3, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc4a7));
        EXPECT(0xcb, gbc.readMem(0xc560));
        EXPECT(0x3e, gbc.readMem(0xc561));
        // CB 3E 00E5
        gbc.setState(0x5ecf, 0xeaff, 0xd190, 0xbc34, 0x77c2, 0xd444, 0x1, 0x0);
        gbc.writeMem(0x5ecf, { 0xcb, 0x3e });
        gbc.writeMem(0xd444, { 0xf4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeaff, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd444));
        // CB 3E 00E6
        gbc.setState(0xcbe4, 0x6cf5, 0xa360, 0x469e, 0xdd97, 0xce0c, 0x1, 0x1);
        gbc.writeMem(0xcbe4, { 0xcb, 0x3e });
        gbc.writeMem(0xce0c, { 0x5c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe4));
        EXPECT(0x3e, gbc.readMem(0xcbe5));
        EXPECT(0x2e, gbc.readMem(0xce0c));
        // CB 3E 00EB
        gbc.setState(0xbfe, 0xa27b, 0x8ad0, 0x2d4d, 0xd024, 0xb6ae, 0x0, 0x1);
        gbc.writeMem(0xbfe, { 0xcb, 0x3e });
        gbc.writeMem(0xb6ae, { 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa27b, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb6ae));
        // CB 3E 00ED
        gbc.setState(0x6226, 0xc20, 0xabd0, 0xdadb, 0x307c, 0x8060, 0x0, 0x1);
        gbc.writeMem(0x6226, { 0xcb, 0x3e });
        gbc.writeMem(0x8060, { 0xfd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc20, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8060));
        // CB 3E 00EE
        gbc.setState(0x6a80, 0xf4df, 0x5430, 0xd4c0, 0x808c, 0xb2ea, 0x1, 0x1);
        gbc.writeMem(0x6a80, { 0xcb, 0x3e });
        gbc.writeMem(0xb2ea, { 0x6f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2ea));
        // CB 3E 00F2
        gbc.setState(0xbc2f, 0x25cb, 0x8740, 0x7e73, 0xdfc4, 0xfe41, 0x0, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0x3e });
        gbc.writeMem(0xfe41, { 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0xbc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2f));
        EXPECT(0x3e, gbc.readMem(0xbc30));
        EXPECT(0x3d, gbc.readMem(0xfe41));
        // CB 3E 00F7
        gbc.setState(0x756a, 0xb6d, 0x1ff0, 0xc7ed, 0xf96f, 0xaf75, 0x0, 0x0);
        gbc.writeMem(0x756a, { 0xcb, 0x3e });
        gbc.writeMem(0xaf75, { 0x3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xaf75));
        // CB 3E 00FA
        gbc.setState(0xdb76, 0x324c, 0xf5c0, 0x49d9, 0x6d7e, 0x923a, 0x0, 0x0);
        gbc.writeMem(0x923a, { 0x30 });
        gbc.writeMem(0xdb76, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x324c, gbc.sp());
        EXPECT(0xdb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x923a));
        EXPECT(0xcb, gbc.readMem(0xdb76));
        EXPECT(0x3e, gbc.readMem(0xdb77));
        // CB 3E 00FB
        gbc.setState(0xa3ab, 0x4e27, 0xef30, 0x37fb, 0x8b4c, 0xb673, 0x1, 0x1);
        gbc.writeMem(0xa3ab, { 0xcb, 0x3e });
        gbc.writeMem(0xb673, { 0xf3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ab));
        EXPECT(0x3e, gbc.readMem(0xa3ac));
        EXPECT(0x79, gbc.readMem(0xb673));
        // CB 3E 0102
        gbc.setState(0x9b38, 0x1ba7, 0x5600, 0x94f, 0x9e3e, 0x8da7, 0x0, 0x1);
        gbc.writeMem(0x8da7, { 0xb });
        gbc.writeMem(0x9b38, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ba7, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8da7));
        EXPECT(0xcb, gbc.readMem(0x9b38));
        EXPECT(0x3e, gbc.readMem(0x9b39));
        // CB 3E 0105
        gbc.setState(0x89c0, 0x750f, 0x5610, 0xf5e4, 0xfe26, 0xd64e, 0x0, 0x0);
        gbc.writeMem(0x89c0, { 0xcb, 0x3e });
        gbc.writeMem(0xd64e, { 0x82 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c0));
        EXPECT(0x3e, gbc.readMem(0x89c1));
        EXPECT(0x41, gbc.readMem(0xd64e));
        // CB 3E 0106
        gbc.setState(0xb892, 0x922b, 0x6e50, 0xe359, 0x2f46, 0xcd2c, 0x0, 0x1);
        gbc.writeMem(0xb892, { 0xcb, 0x3e });
        gbc.writeMem(0xcd2c, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x922b, gbc.sp());
        EXPECT(0xb894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb892));
        EXPECT(0x3e, gbc.readMem(0xb893));
        EXPECT(0x74, gbc.readMem(0xcd2c));
        // CB 3E 010A
        gbc.setState(0x9504, 0xa08d, 0x530, 0xb2ac, 0x7a21, 0xba32, 0x0, 0x0);
        gbc.writeMem(0x9504, { 0xcb, 0x3e });
        gbc.writeMem(0xba32, { 0x16 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa08d, gbc.sp());
        EXPECT(0x9506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9504));
        EXPECT(0x3e, gbc.readMem(0x9505));
        EXPECT(0xb, gbc.readMem(0xba32));
        // CB 3E 010D
        gbc.setState(0x9ccb, 0xe6a6, 0x3d30, 0xf526, 0xf755, 0xf275, 0x1, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0x3e });
        gbc.writeMem(0xf275, { 0xce });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccb));
        EXPECT(0x3e, gbc.readMem(0x9ccc));
        EXPECT(0x67, gbc.readMem(0xf275));
        // CB 3E 010E
        gbc.setState(0xe0a3, 0xb82e, 0x8780, 0x4a2, 0xc6ce, 0xb455, 0x1, 0x0);
        gbc.writeMem(0xb455, { 0x69 });
        gbc.writeMem(0xe0a3, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0xe0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb455));
        EXPECT(0xcb, gbc.readMem(0xe0a3));
        EXPECT(0x3e, gbc.readMem(0xe0a4));
        // CB 3E 010F
        gbc.setState(0xaa4, 0x94c5, 0x4940, 0xf51d, 0xbe78, 0xc444, 0x1, 0x0);
        gbc.writeMem(0xaa4, { 0xcb, 0x3e });
        gbc.writeMem(0xc444, { 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xc444));
        // CB 3E 0111
        gbc.setState(0x120d, 0x6d22, 0x3c90, 0xb28e, 0xcba2, 0xd979, 0x0, 0x1);
        gbc.writeMem(0x120d, { 0xcb, 0x3e });
        gbc.writeMem(0xd979, { 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x120f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd979));
        // CB 3E 0114
        gbc.setState(0x84f1, 0xcb40, 0xdde0, 0x5d4a, 0x699b, 0xe5ab, 0x1, 0x1);
        gbc.writeMem(0x84f1, { 0xcb, 0x3e });
        gbc.writeMem(0xe5ab, { 0x62 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f1));
        EXPECT(0x3e, gbc.readMem(0x84f2));
        EXPECT(0x31, gbc.readMem(0xe5ab));
        // CB 3E 0116
        gbc.setState(0x703b, 0xfdfd, 0xfe20, 0xadd5, 0x4af9, 0xcdcd, 0x0, 0x1);
        gbc.writeMem(0x703b, { 0xcb, 0x3e });
        gbc.writeMem(0xcdcd, { 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0x703d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcdcd));
        // CB 3E 011A
        gbc.setState(0x99f6, 0xb6c0, 0xaf30, 0x3299, 0xfa09, 0x9599, 0x1, 0x0);
        gbc.writeMem(0x9599, { 0x9d });
        gbc.writeMem(0x99f6, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9599));
        EXPECT(0xcb, gbc.readMem(0x99f6));
        EXPECT(0x3e, gbc.readMem(0x99f7));
        // CB 3E 011E
        gbc.setState(0xa4b8, 0xd22e, 0x3a30, 0x9905, 0xe39e, 0xa1a8, 0x0, 0x1);
        gbc.writeMem(0xa1a8, { 0x83 });
        gbc.writeMem(0xa4b8, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd22e, gbc.sp());
        EXPECT(0xa4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xa1a8));
        EXPECT(0xcb, gbc.readMem(0xa4b8));
        EXPECT(0x3e, gbc.readMem(0xa4b9));
        // CB 3E 0120
        gbc.setState(0x90d5, 0x4c98, 0xa5b0, 0xa12e, 0x3236, 0xc06c, 0x0, 0x1);
        gbc.writeMem(0x90d5, { 0xcb, 0x3e });
        gbc.writeMem(0xc06c, { 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4c98, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d5));
        EXPECT(0x3e, gbc.readMem(0x90d6));
        EXPECT(0x8, gbc.readMem(0xc06c));
        // CB 3E 0121
        gbc.setState(0x3297, 0x70f, 0x5850, 0xdc72, 0xaceb, 0x84bb, 0x1, 0x1);
        gbc.writeMem(0x3297, { 0xcb, 0x3e });
        gbc.writeMem(0x84bb, { 0x87 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x70f, gbc.sp());
        EXPECT(0x3299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x84bb));
        // CB 3E 0122
        gbc.setState(0xabce, 0xa313, 0x2a90, 0x16d, 0xaf50, 0xa197, 0x1, 0x1);
        gbc.writeMem(0xa197, { 0xdd });
        gbc.writeMem(0xabce, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa313, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa197));
        EXPECT(0xcb, gbc.readMem(0xabce));
        EXPECT(0x3e, gbc.readMem(0xabcf));
        // CB 3E 0126
        gbc.setState(0x60f5, 0x39a7, 0x2f10, 0x2c8b, 0x4045, 0xa1fb, 0x0, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0x3e });
        gbc.writeMem(0xa1fb, { 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa1fb));
        // CB 3E 0127
        gbc.setState(0x98dc, 0x68be, 0x81d0, 0x7d05, 0x66b0, 0xfcd3, 0x1, 0x1);
        gbc.writeMem(0x98dc, { 0xcb, 0x3e });
        gbc.writeMem(0xfcd3, { 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x68be, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98dc));
        EXPECT(0x3e, gbc.readMem(0x98dd));
        EXPECT(0x3f, gbc.readMem(0xfcd3));
        // CB 3E 0128
        gbc.setState(0x7921, 0x4d80, 0xc0e0, 0xce32, 0xbf28, 0x9620, 0x0, 0x0);
        gbc.writeMem(0x7921, { 0xcb, 0x3e });
        gbc.writeMem(0x9620, { 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4d80, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9620));
        // CB 3E 0129
        gbc.setState(0x432a, 0x1154, 0xfa10, 0x30b6, 0x9241, 0xd324, 0x0, 0x1);
        gbc.writeMem(0x432a, { 0xcb, 0x3e });
        gbc.writeMem(0xd324, { 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0x432c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd324));
        // CB 3E 012B
        gbc.setState(0x44c6, 0x74a9, 0xb680, 0x472c, 0x966f, 0xab72, 0x1, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0x3e });
        gbc.writeMem(0xab72, { 0x36 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x74a9, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xab72));
        // CB 3E 012C
        gbc.setState(0xab8c, 0xc9ba, 0x60e0, 0xd789, 0x2405, 0x81a0, 0x0, 0x1);
        gbc.writeMem(0x81a0, { 0xf8 });
        gbc.writeMem(0xab8c, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x81a0));
        EXPECT(0xcb, gbc.readMem(0xab8c));
        EXPECT(0x3e, gbc.readMem(0xab8d));
        // CB 3E 0132
        gbc.setState(0xafc2, 0x2923, 0x3ab0, 0x6545, 0xdd3d, 0xf509, 0x0, 0x1);
        gbc.writeMem(0xafc2, { 0xcb, 0x3e });
        gbc.writeMem(0xf509, { 0xfa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2923, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc2));
        EXPECT(0x3e, gbc.readMem(0xafc3));
        EXPECT(0x7d, gbc.readMem(0xf509));
        // CB 3E 0134
        gbc.setState(0x201f, 0xf437, 0x4f30, 0x5356, 0xee33, 0xb973, 0x0, 0x1);
        gbc.writeMem(0x201f, { 0xcb, 0x3e });
        gbc.writeMem(0xb973, { 0x46 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf437, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xb973));
        // CB 3E 0135
        gbc.setState(0xc2e1, 0x152d, 0x5e80, 0x86b1, 0x726b, 0xd2a8, 0x0, 0x1);
        gbc.writeMem(0xc2e1, { 0xcb, 0x3e });
        gbc.writeMem(0xd2a8, { 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e1));
        EXPECT(0x3e, gbc.readMem(0xc2e2));
        EXPECT(0x3e, gbc.readMem(0xd2a8));
        // CB 3E 0136
        gbc.setState(0xada0, 0x2fff, 0x8a50, 0x40ec, 0x7035, 0x8a75, 0x1, 0x0);
        gbc.writeMem(0x8a75, { 0x98 });
        gbc.writeMem(0xada0, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2fff, gbc.sp());
        EXPECT(0xada2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8a75));
        EXPECT(0xcb, gbc.readMem(0xada0));
        EXPECT(0x3e, gbc.readMem(0xada1));
        // CB 3E 013D
        gbc.setState(0x3828, 0x8586, 0x79a0, 0x1c60, 0x8abb, 0xd437, 0x1, 0x0);
        gbc.writeMem(0x3828, { 0xcb, 0x3e });
        gbc.writeMem(0xd437, { 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8586, gbc.sp());
        EXPECT(0x382a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd437));
        // CB 3E 013E
        gbc.setState(0xd5ec, 0x98cc, 0xef40, 0xbe4f, 0xee73, 0xda3f, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0xcb, 0x3e });
        gbc.writeMem(0xda3f, { 0x33 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x98cc, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0x3e, gbc.readMem(0xd5ed));
        EXPECT(0x19, gbc.readMem(0xda3f));
        // CB 3E 013F
        gbc.setState(0x1618, 0xfec3, 0xfa20, 0x369a, 0x8aa8, 0x8113, 0x1, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x3e });
        gbc.writeMem(0x8113, { 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8113));
        // CB 3E 0147
        gbc.setState(0x952b, 0x418f, 0xc670, 0x9030, 0x52eb, 0xe213, 0x0, 0x1);
        gbc.writeMem(0x952b, { 0xcb, 0x3e });
        gbc.writeMem(0xe213, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952b));
        EXPECT(0x3e, gbc.readMem(0x952c));
        EXPECT(0x46, gbc.readMem(0xe213));
        // CB 3E 0148
        gbc.setState(0xa587, 0x721f, 0xa040, 0xb509, 0xb982, 0x9d05, 0x1, 0x1);
        gbc.writeMem(0x9d05, { 0xf8 });
        gbc.writeMem(0xa587, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x721f, gbc.sp());
        EXPECT(0xa589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9d05));
        EXPECT(0xcb, gbc.readMem(0xa587));
        EXPECT(0x3e, gbc.readMem(0xa588));
        // CB 3E 014D
        gbc.setState(0x90e3, 0x888a, 0x6cb0, 0x4e25, 0x4a27, 0xa22b, 0x0, 0x1);
        gbc.writeMem(0x90e3, { 0xcb, 0x3e });
        gbc.writeMem(0xa22b, { 0x11 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0x3e, gbc.readMem(0x90e4));
        EXPECT(0x8, gbc.readMem(0xa22b));
        // CB 3E 0153
        gbc.setState(0xc1f9, 0x2031, 0x22a0, 0x64f, 0x17ad, 0xd4e4, 0x1, 0x0);
        gbc.writeMem(0xc1f9, { 0xcb, 0x3e });
        gbc.writeMem(0xd4e4, { 0x41 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2031, gbc.sp());
        EXPECT(0xc1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f9));
        EXPECT(0x3e, gbc.readMem(0xc1fa));
        EXPECT(0x20, gbc.readMem(0xd4e4));
        // CB 3E 0155
        gbc.setState(0x5f38, 0x155c, 0x1a70, 0x16d3, 0x521a, 0xedb6, 0x0, 0x0);
        gbc.writeMem(0x5f38, { 0xcb, 0x3e });
        gbc.writeMem(0xedb6, { 0x9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0x5f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xedb6));
        // CB 3E 0159
        gbc.setState(0x647a, 0x8c52, 0xdda0, 0x3de4, 0xe67b, 0x8ac7, 0x1, 0x1);
        gbc.writeMem(0x647a, { 0xcb, 0x3e });
        gbc.writeMem(0x8ac7, { 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8c52, gbc.sp());
        EXPECT(0x647c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8ac7));
        // CB 3E 015D
        gbc.setState(0x60e6, 0x7135, 0x31a0, 0x927d, 0xf5a5, 0xe582, 0x1, 0x0);
        gbc.writeMem(0x60e6, { 0xcb, 0x3e });
        gbc.writeMem(0xe582, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7135, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xe582));
        // CB 3E 015E
        gbc.setState(0x47e7, 0x1861, 0x7a40, 0xa701, 0x72f6, 0x3fa7, 0x0, 0x0);
        gbc.writeMem(0x3fa7, { 0x0 });
        gbc.writeMem(0x47e7, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1861, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3E 015F
        gbc.setState(0xbd07, 0x503, 0xc120, 0x18ac, 0x6f00, 0xd825, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0x3e });
        gbc.writeMem(0xd825, { 0xa1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0x3e, gbc.readMem(0xbd08));
        EXPECT(0x50, gbc.readMem(0xd825));
        // CB 3E 0160
        gbc.setState(0x4f64, 0x5142, 0xc010, 0xcaae, 0x284b, 0xe6a9, 0x0, 0x1);
        gbc.writeMem(0x4f64, { 0xcb, 0x3e });
        gbc.writeMem(0xe6a9, { 0x73 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5142, gbc.sp());
        EXPECT(0x4f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe6a9));
        // CB 3E 0161
        gbc.setState(0x4671, 0x63ef, 0x7bc0, 0x3842, 0x1df3, 0xcd15, 0x1, 0x1);
        gbc.writeMem(0x4671, { 0xcb, 0x3e });
        gbc.writeMem(0xcd15, { 0x66 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xcd15));
        // CB 3E 0163
        gbc.setState(0x7482, 0x902, 0x4b10, 0xe257, 0xb986, 0xe702, 0x0, 0x0);
        gbc.writeMem(0x7482, { 0xcb, 0x3e });
        gbc.writeMem(0xe702, { 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x902, gbc.sp());
        EXPECT(0x7484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xe702));
        // CB 3E 0164
        gbc.setState(0x4086, 0x5d61, 0xd470, 0x8827, 0x9bf1, 0xeea8, 0x0, 0x0);
        gbc.writeMem(0x4086, { 0xcb, 0x3e });
        gbc.writeMem(0xeea8, { 0x35 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0x4088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xeea8));
        // CB 3E 0165
        gbc.setState(0x7ff5, 0xf121, 0xb570, 0xd4f0, 0x7286, 0xbfd9, 0x1, 0x0);
        gbc.writeMem(0x7ff5, { 0xcb, 0x3e });
        gbc.writeMem(0xbfd9, { 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0x7ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbfd9));
        // CB 3E 0166
        gbc.setState(0x3a1b, 0xe95e, 0x3b0, 0xac12, 0xe65b, 0xec1b, 0x0, 0x0);
        gbc.writeMem(0x3a1b, { 0xcb, 0x3e });
        gbc.writeMem(0xec1b, { 0x87 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0x3a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xec1b));
        // CB 3E 0168
        gbc.setState(0x621e, 0xc447, 0xe360, 0xdd24, 0x1641, 0xcbef, 0x1, 0x1);
        gbc.writeMem(0x621e, { 0xcb, 0x3e });
        gbc.writeMem(0xcbef, { 0x5a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc447, gbc.sp());
        EXPECT(0x6220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcbef));
        // CB 3E 016C
        gbc.setState(0x55aa, 0x2d4b, 0x490, 0xf443, 0xc922, 0xf39d, 0x0, 0x1);
        gbc.writeMem(0x55aa, { 0xcb, 0x3e });
        gbc.writeMem(0xf39d, { 0x54 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2d4b, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xf39d));
        // CB 3E 016D
        gbc.setState(0x3305, 0x5ba8, 0x3af0, 0xe94b, 0x2b46, 0xf891, 0x0, 0x0);
        gbc.writeMem(0x3305, { 0xcb, 0x3e });
        gbc.writeMem(0xf891, { 0xf4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0x3307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf891));
        // CB 3E 016E
        gbc.setState(0x8c8a, 0x80a8, 0x1ee0, 0x61e3, 0xfc79, 0xf7df, 0x0, 0x0);
        gbc.writeMem(0x8c8a, { 0xcb, 0x3e });
        gbc.writeMem(0xf7df, { 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8a));
        EXPECT(0x3e, gbc.readMem(0x8c8b));
        EXPECT(0x7d, gbc.readMem(0xf7df));
        // CB 3E 016F
        gbc.setState(0x214, 0x2840, 0x3940, 0xebe3, 0xa799, 0xee11, 0x1, 0x0);
        gbc.writeMem(0x214, { 0xcb, 0x3e });
        gbc.writeMem(0xee11, { 0x2e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xee11));
        // CB 3E 0177
        gbc.setState(0xc061, 0xe773, 0x5da0, 0xbc9c, 0xbfb6, 0xd69e, 0x0, 0x0);
        gbc.writeMem(0xc061, { 0xcb, 0x3e });
        gbc.writeMem(0xd69e, { 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe773, gbc.sp());
        EXPECT(0xc063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc061));
        EXPECT(0x3e, gbc.readMem(0xc062));
        EXPECT(0x44, gbc.readMem(0xd69e));
        // CB 3E 0178
        gbc.setState(0x7d28, 0x83ed, 0x67b0, 0xd378, 0x457d, 0xa405, 0x0, 0x1);
        gbc.writeMem(0x7d28, { 0xcb, 0x3e });
        gbc.writeMem(0xa405, { 0x56 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x83ed, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa405));
        // CB 3E 0179
        gbc.setState(0xd64f, 0xe71, 0x4520, 0xe835, 0x9652, 0xb819, 0x1, 0x1);
        gbc.writeMem(0xb819, { 0x16 });
        gbc.writeMem(0xd64f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb819));
        EXPECT(0xcb, gbc.readMem(0xd64f));
        EXPECT(0x3e, gbc.readMem(0xd650));
        // CB 3E 017A
        gbc.setState(0x481e, 0x2a1d, 0xc220, 0xa7d3, 0xd574, 0x170f, 0x1, 0x1);
        gbc.writeMem(0x170f, { 0x0 });
        gbc.writeMem(0x481e, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2a1d, gbc.sp());
        EXPECT(0x4820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3E 017C
        gbc.setState(0x2c04, 0x81ae, 0x64b0, 0xe3bb, 0xd2b5, 0x9c71, 0x0, 0x0);
        gbc.writeMem(0x2c04, { 0xcb, 0x3e });
        gbc.writeMem(0x9c71, { 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x81ae, gbc.sp());
        EXPECT(0x2c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9c71));
        // CB 3E 017D
        gbc.setState(0xaa89, 0x41f0, 0xffe0, 0x3412, 0xbf3b, 0xad59, 0x0, 0x1);
        gbc.writeMem(0xaa89, { 0xcb, 0x3e });
        gbc.writeMem(0xad59, { 0xf4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0xaa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa89));
        EXPECT(0x3e, gbc.readMem(0xaa8a));
        EXPECT(0x7a, gbc.readMem(0xad59));
        // CB 3E 017F
        gbc.setState(0x8d3c, 0x6b44, 0x99b0, 0x3fc5, 0xff3d, 0x929f, 0x0, 0x0);
        gbc.writeMem(0x8d3c, { 0xcb, 0x3e });
        gbc.writeMem(0x929f, { 0x24 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6b44, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0x3e, gbc.readMem(0x8d3d));
        EXPECT(0x12, gbc.readMem(0x929f));
        // CB 3E 0180
        gbc.setState(0x2e14, 0xc0a5, 0xeca0, 0xcc9b, 0xa3ab, 0xca9e, 0x1, 0x0);
        gbc.writeMem(0x2e14, { 0xcb, 0x3e });
        gbc.writeMem(0xca9e, { 0xe });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc0a5, gbc.sp());
        EXPECT(0x2e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xca9e));
        // CB 3E 0181
        gbc.setState(0x9ed5, 0x2bcc, 0xaa20, 0xc75b, 0x6fa3, 0x8a9e, 0x1, 0x0);
        gbc.writeMem(0x8a9e, { 0x84 });
        gbc.writeMem(0x9ed5, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2bcc, gbc.sp());
        EXPECT(0x9ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8a9e));
        EXPECT(0xcb, gbc.readMem(0x9ed5));
        EXPECT(0x3e, gbc.readMem(0x9ed6));
        // CB 3E 0183
        gbc.setState(0xdf0a, 0x7669, 0x6fd0, 0x6a1d, 0x412, 0xae2a, 0x1, 0x0);
        gbc.writeMem(0xae2a, { 0xe8 });
        gbc.writeMem(0xdf0a, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0xdf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xae2a));
        EXPECT(0xcb, gbc.readMem(0xdf0a));
        EXPECT(0x3e, gbc.readMem(0xdf0b));
        // CB 3E 0186
        gbc.setState(0x5eec, 0x6782, 0x3880, 0xf1c1, 0x8857, 0x8276, 0x1, 0x1);
        gbc.writeMem(0x5eec, { 0xcb, 0x3e });
        gbc.writeMem(0x8276, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6782, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8276));
        // CB 3E 0188
        gbc.setState(0x4581, 0x61e1, 0x41f0, 0xb5ab, 0x1ec4, 0x8280, 0x0, 0x1);
        gbc.writeMem(0x4581, { 0xcb, 0x3e });
        gbc.writeMem(0x8280, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61e1, gbc.sp());
        EXPECT(0x4583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8280));
        // CB 3E 018C
        gbc.setState(0x2ef3, 0xdc99, 0x6af0, 0x9cc, 0x15f5, 0xdfb2, 0x1, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x3e });
        gbc.writeMem(0xdfb2, { 0xe1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xdfb2));
        // CB 3E 018D
        gbc.setState(0x8451, 0x9946, 0x4610, 0xc36a, 0x62a5, 0xb6bc, 0x0, 0x0);
        gbc.writeMem(0x8451, { 0xcb, 0x3e });
        gbc.writeMem(0xb6bc, { 0x20 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9946, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0x3e, gbc.readMem(0x8452));
        EXPECT(0x10, gbc.readMem(0xb6bc));
        // CB 3E 018E
        gbc.setState(0x587b, 0x1aa3, 0xb70, 0xb053, 0xe2cb, 0xa32c, 0x0, 0x0);
        gbc.writeMem(0x587b, { 0xcb, 0x3e });
        gbc.writeMem(0xa32c, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1aa3, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa32c));
        // CB 3E 018F
        gbc.setState(0x8710, 0x793b, 0x2800, 0xb20b, 0x3778, 0x81d2, 0x1, 0x0);
        gbc.writeMem(0x81d2, { 0x8 });
        gbc.writeMem(0x8710, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x81d2));
        EXPECT(0xcb, gbc.readMem(0x8710));
        EXPECT(0x3e, gbc.readMem(0x8711));
        // CB 3E 0191
        gbc.setState(0x6008, 0xe33, 0x6210, 0xfe4f, 0x7393, 0x8ac4, 0x0, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x3e });
        gbc.writeMem(0x8ac4, { 0xc7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe33, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8ac4));
        // CB 3E 0192
        gbc.setState(0x1f8c, 0x6b5f, 0xa7c0, 0xf532, 0x81aa, 0xa5d4, 0x1, 0x0);
        gbc.writeMem(0x1f8c, { 0xcb, 0x3e });
        gbc.writeMem(0xa5d4, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6b5f, gbc.sp());
        EXPECT(0x1f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa5d4));
        // CB 3E 0193
        gbc.setState(0xdb66, 0x16d1, 0x44b0, 0x875a, 0x4580, 0xdeec, 0x1, 0x0);
        gbc.writeMem(0xdb66, { 0xcb, 0x3e });
        gbc.writeMem(0xdeec, { 0x32 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x16d1, gbc.sp());
        EXPECT(0xdb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb66));
        EXPECT(0x3e, gbc.readMem(0xdb67));
        EXPECT(0x19, gbc.readMem(0xdeec));
        // CB 3E 0195
        gbc.setState(0x4eee, 0x649b, 0x6b80, 0x9d47, 0x9606, 0x949f, 0x0, 0x0);
        gbc.writeMem(0x4eee, { 0xcb, 0x3e });
        gbc.writeMem(0x949f, { 0xd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x949f));
        // CB 3E 0197
        gbc.setState(0x4796, 0xda03, 0x8050, 0x349c, 0x7701, 0xd05e, 0x0, 0x1);
        gbc.writeMem(0x4796, { 0xcb, 0x3e });
        gbc.writeMem(0xd05e, { 0xea });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0x4798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd05e));
        // CB 3E 0199
        gbc.setState(0x1070, 0x2b61, 0xf900, 0xd159, 0xcd85, 0xb87b, 0x1, 0x1);
        gbc.writeMem(0x1070, { 0xcb, 0x3e });
        gbc.writeMem(0xb87b, { 0x67 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2b61, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb87b));
        // CB 3E 019A
        gbc.setState(0xd6, 0xd33d, 0xac60, 0x848c, 0xdd22, 0x94d2, 0x0, 0x0);
        gbc.writeMem(0xd6, { 0xcb, 0x3e });
        gbc.writeMem(0x94d2, { 0xd0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0xd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x94d2));
        // CB 3E 019E
        gbc.setState(0x1b76, 0x6fbb, 0x3a0, 0x53fb, 0xb284, 0xbddd, 0x1, 0x1);
        gbc.writeMem(0x1b76, { 0xcb, 0x3e });
        gbc.writeMem(0xbddd, { 0x58 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbddd));
        // CB 3E 01A2
        gbc.setState(0x7678, 0xc82, 0x78f0, 0x1, 0xb4c6, 0xe6a5, 0x1, 0x0);
        gbc.writeMem(0x7678, { 0xcb, 0x3e });
        gbc.writeMem(0xe6a5, { 0xff });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x767a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe6a5));
        // CB 3E 01A3
        gbc.setState(0x4cbf, 0xd6d1, 0x3e50, 0xed90, 0x6e43, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x4cbf, { 0xcb, 0x3e });
        gbc.writeMem(0xde5a, { 0xc1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0x4cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xde5a));
        // CB 3E 01A4
        gbc.setState(0x7738, 0x6998, 0xdea0, 0xb97, 0xd781, 0xb89f, 0x0, 0x1);
        gbc.writeMem(0x7738, { 0xcb, 0x3e });
        gbc.writeMem(0xb89f, { 0xb6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6998, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb89f));
        // CB 3E 01A7
        gbc.setState(0x1d8d, 0x1eb2, 0x1210, 0xdd9, 0xb5c8, 0xb108, 0x0, 0x1);
        gbc.writeMem(0x1d8d, { 0xcb, 0x3e });
        gbc.writeMem(0xb108, { 0xbe });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0x1d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb108));
        // CB 3E 01A9
        gbc.setState(0x1dd4, 0x7878, 0x6aa0, 0xebb1, 0xe4fa, 0xa2b2, 0x1, 0x1);
        gbc.writeMem(0x1dd4, { 0xcb, 0x3e });
        gbc.writeMem(0xa2b2, { 0xdf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7878, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2b2));
        // CB 3E 01AA
        gbc.setState(0xca45, 0x863b, 0x2ae0, 0x7dff, 0xff40, 0xa4ad, 0x1, 0x0);
        gbc.writeMem(0xa4ad, { 0xa2 });
        gbc.writeMem(0xca45, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x863b, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa4ad));
        EXPECT(0xcb, gbc.readMem(0xca45));
        EXPECT(0x3e, gbc.readMem(0xca46));
        // CB 3E 01AB
        gbc.setState(0x3d51, 0x24dc, 0x8fc0, 0xb9ea, 0xac25, 0xb896, 0x0, 0x1);
        gbc.writeMem(0x3d51, { 0xcb, 0x3e });
        gbc.writeMem(0xb896, { 0x99 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x24dc, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb896));
        // CB 3E 01B0
        gbc.setState(0xc854, 0x651, 0x410, 0x119a, 0xb608, 0xab6b, 0x0, 0x1);
        gbc.writeMem(0xab6b, { 0x94 });
        gbc.writeMem(0xc854, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x651, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xab6b));
        EXPECT(0xcb, gbc.readMem(0xc854));
        EXPECT(0x3e, gbc.readMem(0xc855));
        // CB 3E 01B1
        gbc.setState(0x8427, 0x5066, 0x2f50, 0xad75, 0x8d76, 0x9e38, 0x0, 0x1);
        gbc.writeMem(0x8427, { 0xcb, 0x3e });
        gbc.writeMem(0x9e38, { 0xef });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5066, gbc.sp());
        EXPECT(0x8429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8427));
        EXPECT(0x3e, gbc.readMem(0x8428));
        EXPECT(0x77, gbc.readMem(0x9e38));
        // CB 3E 01B7
        gbc.setState(0x8d25, 0x7cc5, 0xcce0, 0x81e0, 0xa38e, 0xdf18, 0x0, 0x1);
        gbc.writeMem(0x8d25, { 0xcb, 0x3e });
        gbc.writeMem(0xdf18, { 0x11 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7cc5, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d25));
        EXPECT(0x3e, gbc.readMem(0x8d26));
        EXPECT(0x8, gbc.readMem(0xdf18));
        // CB 3E 01BA
        gbc.setState(0xe122, 0x960c, 0xf1f0, 0xf9a5, 0x6bea, 0xd2d3, 0x1, 0x0);
        gbc.writeMem(0xd2d3, { 0x62 });
        gbc.writeMem(0xe122, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0xe124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd2d3));
        EXPECT(0xcb, gbc.readMem(0xe122));
        EXPECT(0x3e, gbc.readMem(0xe123));
        // CB 3E 01BD
        gbc.setState(0x7dc, 0x8ea7, 0x3900, 0xc7f7, 0xc530, 0xa31e, 0x1, 0x0);
        gbc.writeMem(0x7dc, { 0xcb, 0x3e });
        gbc.writeMem(0xa31e, { 0xa2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0x7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa31e));
        // CB 3E 01BE
        gbc.setState(0x39e9, 0xa273, 0xda80, 0x1894, 0xdfff, 0xa03a, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0x3e });
        gbc.writeMem(0xa03a, { 0xa0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa03a));
        // CB 3E 01C1
        gbc.setState(0x9d7c, 0xfbfa, 0xaf50, 0x96fd, 0xfe97, 0xc0b9, 0x1, 0x1);
        gbc.writeMem(0x9d7c, { 0xcb, 0x3e });
        gbc.writeMem(0xc0b9, { 0x8c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfbfa, gbc.sp());
        EXPECT(0x9d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7c));
        EXPECT(0x3e, gbc.readMem(0x9d7d));
        EXPECT(0x46, gbc.readMem(0xc0b9));
        // CB 3E 01C2
        gbc.setState(0x451f, 0x41dc, 0xa9a0, 0x6922, 0x7764, 0xe8fc, 0x0, 0x1);
        gbc.writeMem(0x451f, { 0xcb, 0x3e });
        gbc.writeMem(0xe8fc, { 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x41dc, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe8fc));
        // CB 3E 01C4
        gbc.setState(0x4291, 0x6458, 0xc9d0, 0x1bd0, 0x3f76, 0xe032, 0x0, 0x0);
        gbc.writeMem(0x4291, { 0xcb, 0x3e });
        gbc.writeMem(0xe032, { 0x9f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0x4293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xe032));
        // CB 3E 01C8
        gbc.setState(0xb16a, 0x7b9, 0x80e0, 0xd992, 0xefef, 0xda02, 0x0, 0x0);
        gbc.writeMem(0xb16a, { 0xcb, 0x3e });
        gbc.writeMem(0xda02, { 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b9, gbc.sp());
        EXPECT(0xb16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16a));
        EXPECT(0x3e, gbc.readMem(0xb16b));
        EXPECT(0xe, gbc.readMem(0xda02));
        // CB 3E 01C9
        gbc.setState(0x5422, 0x1ba2, 0x85b0, 0xfc4b, 0x27f8, 0xbb37, 0x0, 0x0);
        gbc.writeMem(0x5422, { 0xcb, 0x3e });
        gbc.writeMem(0xbb37, { 0x58 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbb37));
        // CB 3E 01CA
        gbc.setState(0x66fa, 0x6700, 0x3140, 0x1580, 0x13d5, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0x66fa, { 0xcb, 0x3e });
        gbc.writeMem(0x89c0, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0x66fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x89c0));
        // CB 3E 01CD
        gbc.setState(0x8d3c, 0x8fe, 0xd90, 0xc589, 0xdfcf, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0x8d3c, { 0xcb, 0x3e });
        gbc.writeMem(0xdd5c, { 0xd5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fe, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0x3e, gbc.readMem(0x8d3d));
        EXPECT(0x6a, gbc.readMem(0xdd5c));
        // CB 3E 01CE
        gbc.setState(0x7d4d, 0xa24c, 0x7100, 0x4413, 0x5126, 0xce99, 0x0, 0x0);
        gbc.writeMem(0x7d4d, { 0xcb, 0x3e });
        gbc.writeMem(0xce99, { 0x7e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa24c, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xce99));
        // CB 3E 01D1
        gbc.setState(0x2433, 0xe94b, 0x7570, 0x935a, 0x9906, 0xe16b, 0x1, 0x0);
        gbc.writeMem(0x2433, { 0xcb, 0x3e });
        gbc.writeMem(0xe16b, { 0xfb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0x2435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe16b));
        // CB 3E 01D3
        gbc.setState(0x9afa, 0xd27f, 0xa4e0, 0xddc2, 0x7dd8, 0xa76f, 0x1, 0x1);
        gbc.writeMem(0x9afa, { 0xcb, 0x3e });
        gbc.writeMem(0xa76f, { 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd27f, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0x3e, gbc.readMem(0x9afb));
        EXPECT(0x3d, gbc.readMem(0xa76f));
        // CB 3E 01DB
        gbc.setState(0xb658, 0xe81b, 0xdf70, 0xfb1e, 0x440d, 0xcd6a, 0x0, 0x1);
        gbc.writeMem(0xb658, { 0xcb, 0x3e });
        gbc.writeMem(0xcd6a, { 0x88 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0xb65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb658));
        EXPECT(0x3e, gbc.readMem(0xb659));
        EXPECT(0x44, gbc.readMem(0xcd6a));
        // CB 3E 01DD
        gbc.setState(0xb037, 0x9402, 0x7d50, 0xfef8, 0xfb41, 0xfa34, 0x0, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0x3e });
        gbc.writeMem(0xfa34, { 0xe5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9402, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0x3e, gbc.readMem(0xb038));
        EXPECT(0x72, gbc.readMem(0xfa34));
        // CB 3E 01DE
        gbc.setState(0x2e19, 0xdfba, 0x8190, 0x99c, 0x4fe4, 0x839c, 0x1, 0x1);
        gbc.writeMem(0x2e19, { 0xcb, 0x3e });
        gbc.writeMem(0x839c, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0x2e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x839c));
        // CB 3E 01E3
        gbc.setState(0x49c5, 0x8321, 0xc9c0, 0xcc32, 0x802, 0xe9b9, 0x1, 0x1);
        gbc.writeMem(0x49c5, { 0xcb, 0x3e });
        gbc.writeMem(0xe9b9, { 0xa3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0x49c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe9b9));
        // CB 3E 01E6
        gbc.setState(0x7009, 0xb60b, 0x72b0, 0xb98e, 0x9c58, 0xed08, 0x0, 0x1);
        gbc.writeMem(0x7009, { 0xcb, 0x3e });
        gbc.writeMem(0xed08, { 0x54 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xed08));
        // CB 3E 01E7
        gbc.setState(0xed32, 0xd635, 0x15e0, 0xccb2, 0x65e2, 0xb8b5, 0x0, 0x0);
        gbc.writeMem(0xb8b5, { 0x51 });
        gbc.writeMem(0xed32, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0xed34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb8b5));
        EXPECT(0xcb, gbc.readMem(0xed32));
        EXPECT(0x3e, gbc.readMem(0xed33));
        // CB 3E 01E9
        gbc.setState(0x9ba4, 0xbac3, 0xd130, 0xc972, 0x420b, 0xb2f9, 0x1, 0x0);
        gbc.writeMem(0x9ba4, { 0xcb, 0x3e });
        gbc.writeMem(0xb2f9, { 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbac3, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba4));
        EXPECT(0x3e, gbc.readMem(0x9ba5));
        EXPECT(0x7b, gbc.readMem(0xb2f9));
        // CB 3E 01EC
        gbc.setState(0xa8d8, 0x5f4e, 0x3800, 0xfe62, 0x7c30, 0xe4a3, 0x0, 0x0);
        gbc.writeMem(0xa8d8, { 0xcb, 0x3e });
        gbc.writeMem(0xe4a3, { 0x2e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5f4e, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d8));
        EXPECT(0x3e, gbc.readMem(0xa8d9));
        EXPECT(0x17, gbc.readMem(0xe4a3));
        // CB 3E 01EF
        gbc.setState(0x6d32, 0xfa63, 0xbd40, 0xe48, 0xc6aa, 0xfabc, 0x1, 0x0);
        gbc.writeMem(0x6d32, { 0xcb, 0x3e });
        gbc.writeMem(0xfabc, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xfabc));
        // CB 3E 01F0
        gbc.setState(0x9589, 0xcc5b, 0x310, 0xf1fb, 0xce7b, 0xe5f9, 0x0, 0x0);
        gbc.writeMem(0x9589, { 0xcb, 0x3e });
        gbc.writeMem(0xe5f9, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcc5b, gbc.sp());
        EXPECT(0x958b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9589));
        EXPECT(0x3e, gbc.readMem(0x958a));
        EXPECT(0x5e, gbc.readMem(0xe5f9));
        // CB 3E 01F4
        gbc.setState(0xb107, 0x49db, 0x25a0, 0x3dd6, 0x5e, 0xd687, 0x1, 0x1);
        gbc.writeMem(0xb107, { 0xcb, 0x3e });
        gbc.writeMem(0xd687, { 0x14 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x49db, gbc.sp());
        EXPECT(0xb109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb107));
        EXPECT(0x3e, gbc.readMem(0xb108));
        EXPECT(0xa, gbc.readMem(0xd687));
        // CB 3E 01F7
        gbc.setState(0xa8a2, 0x9ba0, 0x5b40, 0xa9a1, 0x8ac1, 0x9ba3, 0x1, 0x1);
        gbc.writeMem(0x9ba3, { 0xe4 });
        gbc.writeMem(0xa8a2, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9ba0, gbc.sp());
        EXPECT(0xa8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9ba3));
        EXPECT(0xcb, gbc.readMem(0xa8a2));
        EXPECT(0x3e, gbc.readMem(0xa8a3));
        // CB 3E 01F8
        gbc.setState(0x3829, 0xcd1d, 0xe00, 0x2c20, 0x10b9, 0xb793, 0x0, 0x1);
        gbc.writeMem(0x3829, { 0xcb, 0x3e });
        gbc.writeMem(0xb793, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb793));
        // CB 3E 01FE
        gbc.setState(0xe26b, 0x9687, 0x9e60, 0x8557, 0x295d, 0xb587, 0x1, 0x0);
        gbc.writeMem(0xb587, { 0xa6 });
        gbc.writeMem(0xe26b, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9687, gbc.sp());
        EXPECT(0xe26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb587));
        EXPECT(0xcb, gbc.readMem(0xe26b));
        EXPECT(0x3e, gbc.readMem(0xe26c));
        // CB 3E 0201
        gbc.setState(0xa3f8, 0xb109, 0x61b0, 0x2a2b, 0x1c92, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0x95fc, { 0x5e });
        gbc.writeMem(0xa3f8, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb109, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x95fc));
        EXPECT(0xcb, gbc.readMem(0xa3f8));
        EXPECT(0x3e, gbc.readMem(0xa3f9));
        // CB 3E 0205
        gbc.setState(0x3f7, 0xe08f, 0x28b0, 0x7a85, 0x693e, 0xe124, 0x1, 0x0);
        gbc.writeMem(0x3f7, { 0xcb, 0x3e });
        gbc.writeMem(0xe124, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe08f, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe124));
        // CB 3E 0207
        gbc.setState(0x4c3f, 0x7900, 0x9fc0, 0xbcb0, 0xca2e, 0xb04f, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x3e });
        gbc.writeMem(0xb04f, { 0x57 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7900, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb04f));
        // CB 3E 020A
        gbc.setState(0xfd9, 0x31bc, 0x6ee0, 0xad47, 0x781f, 0xde6c, 0x0, 0x0);
        gbc.writeMem(0xfd9, { 0xcb, 0x3e });
        gbc.writeMem(0xde6c, { 0x8b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0xfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xde6c));
        // CB 3E 020B
        gbc.setState(0x3d2, 0x52d, 0xaa00, 0xc9da, 0x7959, 0xbcaf, 0x0, 0x0);
        gbc.writeMem(0x3d2, { 0xcb, 0x3e });
        gbc.writeMem(0xbcaf, { 0xef });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x52d, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbcaf));
        // CB 3E 020F
        gbc.setState(0x182c, 0x5cd0, 0x3710, 0x667f, 0x6fd1, 0xf345, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0xcb, 0x3e });
        gbc.writeMem(0xf345, { 0xe5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0x182e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf345));
        // CB 3E 0210
        gbc.setState(0x23b5, 0x34f, 0x75f0, 0x2fcc, 0x8e1b, 0x8fb7, 0x0, 0x1);
        gbc.writeMem(0x23b5, { 0xcb, 0x3e });
        gbc.writeMem(0x8fb7, { 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0x23b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8fb7));
        // CB 3E 0212
        gbc.setState(0x9c2c, 0x91b0, 0x8440, 0xb55d, 0x688d, 0xe260, 0x1, 0x1);
        gbc.writeMem(0x9c2c, { 0xcb, 0x3e });
        gbc.writeMem(0xe260, { 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x91b0, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2c));
        EXPECT(0x3e, gbc.readMem(0x9c2d));
        EXPECT(0x16, gbc.readMem(0xe260));
        // CB 3E 0215
        gbc.setState(0x1c9b, 0xeac7, 0x940, 0x493, 0x5832, 0xa6c9, 0x0, 0x0);
        gbc.writeMem(0x1c9b, { 0xcb, 0x3e });
        gbc.writeMem(0xa6c9, { 0x29 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeac7, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa6c9));
        // CB 3E 0216
        gbc.setState(0x8c3f, 0xf211, 0xe90, 0xd70c, 0x5f60, 0xa631, 0x1, 0x0);
        gbc.writeMem(0x8c3f, { 0xcb, 0x3e });
        gbc.writeMem(0xa631, { 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf211, gbc.sp());
        EXPECT(0x8c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3f));
        EXPECT(0x3e, gbc.readMem(0x8c40));
        EXPECT(0x1c, gbc.readMem(0xa631));
        // CB 3E 0219
        gbc.setState(0x133, 0x70c4, 0x3870, 0xc0e, 0x26c2, 0xbdac, 0x1, 0x1);
        gbc.writeMem(0x133, { 0xcb, 0x3e });
        gbc.writeMem(0xbdac, { 0x70 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbdac));
        // CB 3E 021C
        gbc.setState(0x813, 0x229a, 0x8410, 0xb2f6, 0xabaa, 0x8202, 0x1, 0x0);
        gbc.writeMem(0x813, { 0xcb, 0x3e });
        gbc.writeMem(0x8202, { 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x229a, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8202));
        // CB 3E 021E
        gbc.setState(0xc587, 0xbc62, 0xb380, 0xf413, 0x728f, 0xd2b2, 0x0, 0x1);
        gbc.writeMem(0xc587, { 0xcb, 0x3e });
        gbc.writeMem(0xd2b2, { 0x7e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc62, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0x3e, gbc.readMem(0xc588));
        EXPECT(0x3f, gbc.readMem(0xd2b2));
        // CB 3E 0220
        gbc.setState(0x775e, 0xd2af, 0x8670, 0xad3e, 0x20, 0x865c, 0x0, 0x1);
        gbc.writeMem(0x775e, { 0xcb, 0x3e });
        gbc.writeMem(0x865c, { 0x7f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd2af, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x865c));
        // CB 3E 0223
        gbc.setState(0xa8e6, 0x7276, 0xef10, 0x1ede, 0xb97a, 0xe18d, 0x1, 0x1);
        gbc.writeMem(0xa8e6, { 0xcb, 0x3e });
        gbc.writeMem(0xe18d, { 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7276, gbc.sp());
        EXPECT(0xa8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e6));
        EXPECT(0x3e, gbc.readMem(0xa8e7));
        EXPECT(0x61, gbc.readMem(0xe18d));
        // CB 3E 0224
        gbc.setState(0xaa0, 0x27f, 0x9350, 0x69cc, 0x7e51, 0xc230, 0x1, 0x1);
        gbc.writeMem(0xaa0, { 0xcb, 0x3e });
        gbc.writeMem(0xc230, { 0x6e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x27f, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc230));
        // CB 3E 0225
        gbc.setState(0xccbc, 0x2429, 0x2fa0, 0xda09, 0xce7, 0xff1f, 0x0, 0x1);
        gbc.writeMem(0xccbc, { 0xcb, 0x3e });
        gbc.writeMem(0xff1f, { 0x8b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2429, gbc.sp());
        EXPECT(0xccbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbc));
        EXPECT(0x3e, gbc.readMem(0xccbd));
        EXPECT(0x45, gbc.readMem(0xff1f));
        // CB 3E 0229
        gbc.setState(0x4cda, 0x6199, 0xd550, 0xc4f0, 0x5bd5, 0x9a8b, 0x1, 0x1);
        gbc.writeMem(0x4cda, { 0xcb, 0x3e });
        gbc.writeMem(0x9a8b, { 0xa2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6199, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9a8b));
        // CB 3E 022F
        gbc.setState(0xc071, 0x42de, 0xa2c0, 0x655d, 0x309, 0x8dd1, 0x1, 0x0);
        gbc.writeMem(0x8dd1, { 0x3b });
        gbc.writeMem(0xc071, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x42de, gbc.sp());
        EXPECT(0xc073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8dd1));
        EXPECT(0xcb, gbc.readMem(0xc071));
        EXPECT(0x3e, gbc.readMem(0xc072));
        // CB 3E 0230
        gbc.setState(0x4e07, 0x726a, 0x7870, 0xf626, 0xafc0, 0xb0ed, 0x1, 0x1);
        gbc.writeMem(0x4e07, { 0xcb, 0x3e });
        gbc.writeMem(0xb0ed, { 0xf4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x726a, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb0ed));
        // CB 3E 0231
        gbc.setState(0x1812, 0xb77a, 0x8090, 0xd6b6, 0xa133, 0xbb66, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0xcb, 0x3e });
        gbc.writeMem(0xbb66, { 0xf6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb77a, gbc.sp());
        EXPECT(0x1814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbb66));
        // CB 3E 0234
        gbc.setState(0xa32f, 0xef1e, 0xac40, 0xbb67, 0xdc14, 0xa1a1, 0x1, 0x1);
        gbc.writeMem(0xa1a1, { 0x2c });
        gbc.writeMem(0xa32f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xef1e, gbc.sp());
        EXPECT(0xa331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa1a1));
        EXPECT(0xcb, gbc.readMem(0xa32f));
        EXPECT(0x3e, gbc.readMem(0xa330));
        // CB 3E 0237
        gbc.setState(0xa614, 0xf91e, 0xe7b0, 0x3031, 0x36ac, 0xb97e, 0x0, 0x0);
        gbc.writeMem(0xa614, { 0xcb, 0x3e });
        gbc.writeMem(0xb97e, { 0xca });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf91e, gbc.sp());
        EXPECT(0xa616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa614));
        EXPECT(0x3e, gbc.readMem(0xa615));
        EXPECT(0x65, gbc.readMem(0xb97e));
        // CB 3E 0238
        gbc.setState(0xa26e, 0x9c4b, 0xbaa0, 0x5c4d, 0x6a6, 0xaf07, 0x0, 0x1);
        gbc.writeMem(0xa26e, { 0xcb, 0x3e });
        gbc.writeMem(0xaf07, { 0x5e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9c4b, gbc.sp());
        EXPECT(0xa270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26e));
        EXPECT(0x3e, gbc.readMem(0xa26f));
        EXPECT(0x2f, gbc.readMem(0xaf07));
        // CB 3E 0239
        gbc.setState(0x670e, 0x53b3, 0xdd50, 0xcf1c, 0x5e85, 0xb2d3, 0x1, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0x3e });
        gbc.writeMem(0xb2d3, { 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x53b3, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2d3));
        // CB 3E 023B
        gbc.setState(0xa94b, 0x10f2, 0xc940, 0xec, 0x11db, 0xaddf, 0x0, 0x0);
        gbc.writeMem(0xa94b, { 0xcb, 0x3e });
        gbc.writeMem(0xaddf, { 0xe6 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0xa94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94b));
        EXPECT(0x3e, gbc.readMem(0xa94c));
        EXPECT(0x73, gbc.readMem(0xaddf));
        // CB 3E 023C
        gbc.setState(0xd898, 0x6ebe, 0x94d0, 0x174f, 0xce38, 0xceac, 0x0, 0x1);
        gbc.writeMem(0xceac, { 0x50 });
        gbc.writeMem(0xd898, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xceac));
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0x3e, gbc.readMem(0xd899));
        // CB 3E 023E
        gbc.setState(0x5d67, 0x9181, 0xeed0, 0x225c, 0x50ab, 0xb9e3, 0x0, 0x0);
        gbc.writeMem(0x5d67, { 0xcb, 0x3e });
        gbc.writeMem(0xb9e3, { 0x62 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb9e3));
        // CB 3E 0242
        gbc.setState(0xad8d, 0x9e02, 0x83a0, 0xec0e, 0x3f42, 0xfb8d, 0x0, 0x0);
        gbc.writeMem(0xad8d, { 0xcb, 0x3e });
        gbc.writeMem(0xfb8d, { 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9e02, gbc.sp());
        EXPECT(0xad8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8d));
        EXPECT(0x3e, gbc.readMem(0xad8e));
        EXPECT(0x68, gbc.readMem(0xfb8d));
        // CB 3E 0243
        gbc.setState(0x8528, 0x6b97, 0xe140, 0xa8f7, 0x9f8e, 0x9fb4, 0x1, 0x1);
        gbc.writeMem(0x8528, { 0xcb, 0x3e });
        gbc.writeMem(0x9fb4, { 0x90 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b97, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0x3e, gbc.readMem(0x8529));
        EXPECT(0x48, gbc.readMem(0x9fb4));
        // CB 3E 0244
        gbc.setState(0xa86c, 0x9424, 0xd80, 0x33fe, 0xe58e, 0x87e7, 0x0, 0x1);
        gbc.writeMem(0x87e7, { 0xf9 });
        gbc.writeMem(0xa86c, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0xa86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x87e7));
        EXPECT(0xcb, gbc.readMem(0xa86c));
        EXPECT(0x3e, gbc.readMem(0xa86d));
        // CB 3E 0245
        gbc.setState(0x8810, 0x71b, 0xd930, 0xffaf, 0x7d4f, 0xe1b4, 0x0, 0x0);
        gbc.writeMem(0x8810, { 0xcb, 0x3e });
        gbc.writeMem(0xe1b4, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x71b, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8810));
        EXPECT(0x3e, gbc.readMem(0x8811));
        EXPECT(0x0, gbc.readMem(0xe1b4));
        // CB 3E 0249
        gbc.setState(0x8f34, 0xd7b5, 0x2180, 0xa14f, 0xbb16, 0xf858, 0x0, 0x1);
        gbc.writeMem(0x8f34, { 0xcb, 0x3e });
        gbc.writeMem(0xf858, { 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0x8f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f34));
        EXPECT(0x3e, gbc.readMem(0x8f35));
        EXPECT(0x2f, gbc.readMem(0xf858));
        // CB 3E 024A
        gbc.setState(0x867d, 0x932f, 0x7450, 0xf0e8, 0xcf1f, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0x867d, { 0xcb, 0x3e });
        gbc.writeMem(0xc75c, { 0xf3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x932f, gbc.sp());
        EXPECT(0x867f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867d));
        EXPECT(0x3e, gbc.readMem(0x867e));
        EXPECT(0x79, gbc.readMem(0xc75c));
        // CB 3E 024B
        gbc.setState(0x2412, 0x3f60, 0xac0, 0x6677, 0x590a, 0xaebf, 0x1, 0x1);
        gbc.writeMem(0x2412, { 0xcb, 0x3e });
        gbc.writeMem(0xaebf, { 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3f60, gbc.sp());
        EXPECT(0x2414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaebf));
        // CB 3E 024C
        gbc.setState(0x6512, 0x6471, 0x3c20, 0x1a67, 0xb47d, 0x855c, 0x1, 0x1);
        gbc.writeMem(0x6512, { 0xcb, 0x3e });
        gbc.writeMem(0x855c, { 0x38 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x6514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x855c));
        // CB 3E 024D
        gbc.setState(0xec8, 0x664d, 0xc820, 0xa346, 0x1c05, 0xd709, 0x0, 0x1);
        gbc.writeMem(0xec8, { 0xcb, 0x3e });
        gbc.writeMem(0xd709, { 0x7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x664d, gbc.sp());
        EXPECT(0xeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd709));
        // CB 3E 024E
        gbc.setState(0x796f, 0xfb3b, 0x90d0, 0xd79a, 0x6f88, 0x96c2, 0x1, 0x1);
        gbc.writeMem(0x796f, { 0xcb, 0x3e });
        gbc.writeMem(0x96c2, { 0xc8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfb3b, gbc.sp());
        EXPECT(0x7971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x96c2));
        // CB 3E 0251
        gbc.setState(0xd4f1, 0xbc40, 0x54a0, 0xf98a, 0xb109, 0x8b96, 0x1, 0x0);
        gbc.writeMem(0x8b96, { 0x39 });
        gbc.writeMem(0xd4f1, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbc40, gbc.sp());
        EXPECT(0xd4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8b96));
        EXPECT(0xcb, gbc.readMem(0xd4f1));
        EXPECT(0x3e, gbc.readMem(0xd4f2));
        // CB 3E 0256
        gbc.setState(0x98b1, 0xff15, 0xe640, 0xa172, 0x17d2, 0xa794, 0x1, 0x1);
        gbc.writeMem(0x98b1, { 0xcb, 0x3e });
        gbc.writeMem(0xa794, { 0x21 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x98b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b1));
        EXPECT(0x3e, gbc.readMem(0x98b2));
        EXPECT(0x10, gbc.readMem(0xa794));
        // CB 3E 0259
        gbc.setState(0xd71c, 0xaa07, 0x7700, 0xe61, 0x5225, 0x975b, 0x1, 0x0);
        gbc.writeMem(0x975b, { 0xf });
        gbc.writeMem(0xd71c, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaa07, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x975b));
        EXPECT(0xcb, gbc.readMem(0xd71c));
        EXPECT(0x3e, gbc.readMem(0xd71d));
        // CB 3E 025A
        gbc.setState(0x7d43, 0x61d7, 0x5180, 0x405a, 0xd07c, 0xe9bf, 0x0, 0x0);
        gbc.writeMem(0x7d43, { 0xcb, 0x3e });
        gbc.writeMem(0xe9bf, { 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe9bf));
        // CB 3E 025B
        gbc.setState(0xcbf1, 0xec58, 0x3420, 0xc337, 0x1002, 0xa968, 0x0, 0x1);
        gbc.writeMem(0xa968, { 0xd0 });
        gbc.writeMem(0xcbf1, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xec58, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa968));
        EXPECT(0xcb, gbc.readMem(0xcbf1));
        EXPECT(0x3e, gbc.readMem(0xcbf2));
        // CB 3E 025C
        gbc.setState(0xdc8d, 0x73a9, 0xafa0, 0x1427, 0x62a4, 0xaa44, 0x1, 0x0);
        gbc.writeMem(0xaa44, { 0xe3 });
        gbc.writeMem(0xdc8d, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x73a9, gbc.sp());
        EXPECT(0xdc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaa44));
        EXPECT(0xcb, gbc.readMem(0xdc8d));
        EXPECT(0x3e, gbc.readMem(0xdc8e));
        // CB 3E 0260
        gbc.setState(0x9b69, 0x81b4, 0x4b60, 0xa683, 0x7fa5, 0xe82a, 0x0, 0x0);
        gbc.writeMem(0x9b69, { 0xcb, 0x3e });
        gbc.writeMem(0xe82a, { 0x87 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x81b4, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b69));
        EXPECT(0x3e, gbc.readMem(0x9b6a));
        EXPECT(0x43, gbc.readMem(0xe82a));
        // CB 3E 0261
        gbc.setState(0x839b, 0x71bf, 0x15b0, 0xa6b1, 0x9cbe, 0xfec6, 0x1, 0x1);
        gbc.writeMem(0x839b, { 0xcb, 0x3e });
        gbc.writeMem(0xfec6, { 0x9e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x71bf, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839b));
        EXPECT(0x3e, gbc.readMem(0x839c));
        EXPECT(0x4f, gbc.readMem(0xfec6));
        // CB 3E 0265
        gbc.setState(0x1795, 0xcaaf, 0x2e30, 0x8406, 0x7ec0, 0xec96, 0x0, 0x0);
        gbc.writeMem(0x1795, { 0xcb, 0x3e });
        gbc.writeMem(0xec96, { 0x70 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x1797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xec96));
        // CB 3E 0266
        gbc.setState(0x1e54, 0xf465, 0x92b0, 0x5d32, 0xaa97, 0xaa17, 0x1, 0x0);
        gbc.writeMem(0x1e54, { 0xcb, 0x3e });
        gbc.writeMem(0xaa17, { 0x66 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xaa17));
        // CB 3E 0267
        gbc.setState(0x860c, 0x3789, 0x7320, 0xd70b, 0x5fb6, 0x9ec5, 0x0, 0x1);
        gbc.writeMem(0x860c, { 0xcb, 0x3e });
        gbc.writeMem(0x9ec5, { 0xb8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0x860e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860c));
        EXPECT(0x3e, gbc.readMem(0x860d));
        EXPECT(0x5c, gbc.readMem(0x9ec5));
        // CB 3E 0269
        gbc.setState(0x96a2, 0xf5f3, 0x5490, 0xffef, 0xde4a, 0xc425, 0x0, 0x1);
        gbc.writeMem(0x96a2, { 0xcb, 0x3e });
        gbc.writeMem(0xc425, { 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x96a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a2));
        EXPECT(0x3e, gbc.readMem(0x96a3));
        EXPECT(0x16, gbc.readMem(0xc425));
        // CB 3E 026C
        gbc.setState(0x2ac7, 0x887, 0xc130, 0x8908, 0x97a3, 0x808a, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0x3e });
        gbc.writeMem(0x808a, { 0xba });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x887, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x808a));
        // CB 3E 026D
        gbc.setState(0x7333, 0xe54, 0xc240, 0x5b25, 0xcb04, 0xe6a4, 0x1, 0x0);
        gbc.writeMem(0x7333, { 0xcb, 0x3e });
        gbc.writeMem(0xe6a4, { 0x9a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe6a4));
        // CB 3E 026F
        gbc.setState(0xe479, 0x5dee, 0x4490, 0xd615, 0x72c7, 0xd37d, 0x1, 0x1);
        gbc.writeMem(0xd37d, { 0xe3 });
        gbc.writeMem(0xe479, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5dee, gbc.sp());
        EXPECT(0xe47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd37d));
        EXPECT(0xcb, gbc.readMem(0xe479));
        EXPECT(0x3e, gbc.readMem(0xe47a));
        // CB 3E 0272
        gbc.setState(0x1dbf, 0x2733, 0x74c0, 0xb04f, 0xb585, 0xd192, 0x1, 0x0);
        gbc.writeMem(0x1dbf, { 0xcb, 0x3e });
        gbc.writeMem(0xd192, { 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2733, gbc.sp());
        EXPECT(0x1dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd192));
        // CB 3E 0273
        gbc.setState(0x5a15, 0x9bd8, 0x3dd0, 0x2ee3, 0x189b, 0x9fd1, 0x1, 0x0);
        gbc.writeMem(0x5a15, { 0xcb, 0x3e });
        gbc.writeMem(0x9fd1, { 0x22 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9bd8, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9fd1));
        // CB 3E 0274
        gbc.setState(0x106a, 0x4032, 0x27d0, 0xdeb6, 0xfb53, 0x9930, 0x1, 0x1);
        gbc.writeMem(0x106a, { 0xcb, 0x3e });
        gbc.writeMem(0x9930, { 0xba });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9930));
        // CB 3E 0275
        gbc.setState(0x12ba, 0x26a4, 0xac80, 0x81f7, 0xedd1, 0x932f, 0x0, 0x1);
        gbc.writeMem(0x12ba, { 0xcb, 0x3e });
        gbc.writeMem(0x932f, { 0x99 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x12bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x932f));
        // CB 3E 0277
        gbc.setState(0x7944, 0x880d, 0x1610, 0x9008, 0x782e, 0xb3a8, 0x1, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0x3e });
        gbc.writeMem(0xb3a8, { 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb3a8));
        // CB 3E 0278
        gbc.setState(0x9a72, 0xad84, 0xfc00, 0x598, 0x3d41, 0x9bae, 0x1, 0x0);
        gbc.writeMem(0x9a72, { 0xcb, 0x3e });
        gbc.writeMem(0x9bae, { 0x45 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xad84, gbc.sp());
        EXPECT(0x9a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a72));
        EXPECT(0x3e, gbc.readMem(0x9a73));
        EXPECT(0x22, gbc.readMem(0x9bae));
        // CB 3E 027A
        gbc.setState(0x8487, 0xacb1, 0xd250, 0x185a, 0x1f02, 0x8c00, 0x1, 0x0);
        gbc.writeMem(0x8487, { 0xcb, 0x3e });
        gbc.writeMem(0x8c00, { 0xa1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xacb1, gbc.sp());
        EXPECT(0x8489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8487));
        EXPECT(0x3e, gbc.readMem(0x8488));
        EXPECT(0x50, gbc.readMem(0x8c00));
        // CB 3E 027F
        gbc.setState(0x92ef, 0x3f94, 0x8420, 0x4794, 0xf136, 0xe213, 0x0, 0x1);
        gbc.writeMem(0x92ef, { 0xcb, 0x3e });
        gbc.writeMem(0xe213, { 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0x92f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ef));
        EXPECT(0x3e, gbc.readMem(0x92f0));
        EXPECT(0x46, gbc.readMem(0xe213));
        // CB 3E 0283
        gbc.setState(0xd57d, 0xa84a, 0x28c0, 0xe8cc, 0x1e2b, 0xde15, 0x0, 0x1);
        gbc.writeMem(0xd57d, { 0xcb, 0x3e });
        gbc.writeMem(0xde15, { 0x78 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0xd57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57d));
        EXPECT(0x3e, gbc.readMem(0xd57e));
        EXPECT(0x3c, gbc.readMem(0xde15));
        // CB 3E 0285
        gbc.setState(0x8a09, 0xcd04, 0x9e70, 0x2ae4, 0x3822, 0xc5ae, 0x1, 0x1);
        gbc.writeMem(0x8a09, { 0xcb, 0x3e });
        gbc.writeMem(0xc5ae, { 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcd04, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a09));
        EXPECT(0x3e, gbc.readMem(0x8a0a));
        EXPECT(0x1e, gbc.readMem(0xc5ae));
        // CB 3E 0287
        gbc.setState(0x47e7, 0xa057, 0x2330, 0x82ad, 0xb67c, 0x886a, 0x1, 0x0);
        gbc.writeMem(0x47e7, { 0xcb, 0x3e });
        gbc.writeMem(0x886a, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa057, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x886a));
        // CB 3E 0289
        gbc.setState(0xd4e2, 0xa383, 0x5780, 0xadd8, 0xb3e3, 0xc3fb, 0x1, 0x0);
        gbc.writeMem(0xc3fb, { 0xae });
        gbc.writeMem(0xd4e2, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa383, gbc.sp());
        EXPECT(0xd4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc3fb));
        EXPECT(0xcb, gbc.readMem(0xd4e2));
        EXPECT(0x3e, gbc.readMem(0xd4e3));
        // CB 3E 0293
        gbc.setState(0x6bd6, 0x6841, 0x3db0, 0x6d6b, 0x788e, 0x918d, 0x1, 0x0);
        gbc.writeMem(0x6bd6, { 0xcb, 0x3e });
        gbc.writeMem(0x918d, { 0x7c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6841, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x918d));
        // CB 3E 0297
        gbc.setState(0xaf64, 0xb193, 0xd590, 0xfd8f, 0x59ab, 0xd5be, 0x1, 0x0);
        gbc.writeMem(0xaf64, { 0xcb, 0x3e });
        gbc.writeMem(0xd5be, { 0xa5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0xaf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf64));
        EXPECT(0x3e, gbc.readMem(0xaf65));
        EXPECT(0x52, gbc.readMem(0xd5be));
        // CB 3E 0298
        gbc.setState(0x4911, 0xf8a7, 0x32b0, 0xf96, 0x142a, 0xa79d, 0x0, 0x1);
        gbc.writeMem(0x4911, { 0xcb, 0x3e });
        gbc.writeMem(0xa79d, { 0xec });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8a7, gbc.sp());
        EXPECT(0x4913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa79d));
        // CB 3E 029A
        gbc.setState(0x674c, 0x1059, 0xb510, 0x1699, 0x59e4, 0xf286, 0x1, 0x1);
        gbc.writeMem(0x674c, { 0xcb, 0x3e });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0x674e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf286));
        // CB 3E 029D
        gbc.setState(0xec9f, 0x8406, 0xe240, 0xb015, 0xfd2f, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0xb57c, { 0xa6 });
        gbc.writeMem(0xec9f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8406, gbc.sp());
        EXPECT(0xeca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb57c));
        EXPECT(0xcb, gbc.readMem(0xec9f));
        EXPECT(0x3e, gbc.readMem(0xeca0));
        // CB 3E 02A0
        gbc.setState(0xf83, 0x85db, 0x4b70, 0x71c6, 0x77af, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0x3e });
        gbc.writeMem(0x86d1, { 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0xf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x86d1));
        // CB 3E 02A2
        gbc.setState(0xa306, 0xcbde, 0x51a0, 0x2a8b, 0x1024, 0xae7e, 0x1, 0x0);
        gbc.writeMem(0xa306, { 0xcb, 0x3e });
        gbc.writeMem(0xae7e, { 0x2b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcbde, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa306));
        EXPECT(0x3e, gbc.readMem(0xa307));
        EXPECT(0x15, gbc.readMem(0xae7e));
        // CB 3E 02A4
        gbc.setState(0x7673, 0xd390, 0xc0e0, 0x435, 0xbcad, 0xb62d, 0x0, 0x0);
        gbc.writeMem(0x7673, { 0xcb, 0x3e });
        gbc.writeMem(0xb62d, { 0x24 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb62d));
        // CB 3E 02A5
        gbc.setState(0x9d6f, 0x95d7, 0x50b0, 0x9102, 0x3387, 0xd764, 0x1, 0x1);
        gbc.writeMem(0x9d6f, { 0xcb, 0x3e });
        gbc.writeMem(0xd764, { 0xd3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6f));
        EXPECT(0x3e, gbc.readMem(0x9d70));
        EXPECT(0x69, gbc.readMem(0xd764));
        // CB 3E 02A6
        gbc.setState(0x8569, 0xfa38, 0xfcd0, 0xb9ba, 0x65e4, 0xe8f6, 0x1, 0x1);
        gbc.writeMem(0x8569, { 0xcb, 0x3e });
        gbc.writeMem(0xe8f6, { 0x3b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8569));
        EXPECT(0x3e, gbc.readMem(0x856a));
        EXPECT(0x1d, gbc.readMem(0xe8f6));
        // CB 3E 02A7
        gbc.setState(0xd90d, 0x50ac, 0x9490, 0xeb82, 0xc5db, 0xc2f4, 0x0, 0x1);
        gbc.writeMem(0xc2f4, { 0xb9 });
        gbc.writeMem(0xd90d, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x50ac, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc2f4));
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0x3e, gbc.readMem(0xd90e));
        // CB 3E 02AA
        gbc.setState(0xe45b, 0xfea, 0x2730, 0xcbc1, 0x259f, 0xef78, 0x1, 0x0);
        gbc.writeMem(0xe45b, { 0xcb, 0x3e });
        gbc.writeMem(0xef78, { 0x5b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfea, gbc.sp());
        EXPECT(0xe45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45b));
        EXPECT(0x3e, gbc.readMem(0xe45c));
        EXPECT(0x2d, gbc.readMem(0xef78));
        // CB 3E 02AB
        gbc.setState(0x2ad1, 0xf313, 0xa340, 0x9a5d, 0xc418, 0xbace, 0x0, 0x0);
        gbc.writeMem(0x2ad1, { 0xcb, 0x3e });
        gbc.writeMem(0xbace, { 0xa4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf313, gbc.sp());
        EXPECT(0x2ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbace));
        // CB 3E 02AC
        gbc.setState(0xb9b1, 0x1c50, 0x75d0, 0xbe10, 0x2c13, 0xd786, 0x1, 0x1);
        gbc.writeMem(0xb9b1, { 0xcb, 0x3e });
        gbc.writeMem(0xd786, { 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1c50, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b1));
        EXPECT(0x3e, gbc.readMem(0xb9b2));
        EXPECT(0x58, gbc.readMem(0xd786));
        // CB 3E 02AD
        gbc.setState(0x52b0, 0x3c9a, 0x1c00, 0xff5c, 0x6e4, 0xc7d8, 0x1, 0x0);
        gbc.writeMem(0x52b0, { 0xcb, 0x3e });
        gbc.writeMem(0xc7d8, { 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3c9a, gbc.sp());
        EXPECT(0x52b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc7d8));
        // CB 3E 02AF
        gbc.setState(0x1748, 0x54c9, 0xa990, 0x4c2b, 0x9aae, 0xbe91, 0x0, 0x1);
        gbc.writeMem(0x1748, { 0xcb, 0x3e });
        gbc.writeMem(0xbe91, { 0xc0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x54c9, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbe91));
        // CB 3E 02B1
        gbc.setState(0xea97, 0x13db, 0x67c0, 0x6d6c, 0xb7fb, 0xf83a, 0x1, 0x1);
        gbc.writeMem(0xea97, { 0xcb, 0x3e });
        gbc.writeMem(0xf83a, { 0x83 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x13db, gbc.sp());
        EXPECT(0xea99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea97));
        EXPECT(0x3e, gbc.readMem(0xea98));
        EXPECT(0x41, gbc.readMem(0xf83a));
        // CB 3E 02B2
        gbc.setState(0xa2e7, 0xc108, 0xab40, 0xf5e3, 0xfc29, 0x8b58, 0x1, 0x1);
        gbc.writeMem(0x8b58, { 0xcc });
        gbc.writeMem(0xa2e7, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0xa2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8b58));
        EXPECT(0xcb, gbc.readMem(0xa2e7));
        EXPECT(0x3e, gbc.readMem(0xa2e8));
        // CB 3E 02B3
        gbc.setState(0xe61, 0x9660, 0x89d0, 0x697e, 0x4b66, 0xfed9, 0x1, 0x0);
        gbc.writeMem(0xe61, { 0xcb, 0x3e });
        gbc.writeMem(0xfed9, { 0xe0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9660, gbc.sp());
        EXPECT(0xe63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xfed9));
        // CB 3E 02B4
        gbc.setState(0x9ce1, 0x6437, 0x90b0, 0x46fc, 0x6498, 0x94cf, 0x0, 0x1);
        gbc.writeMem(0x94cf, { 0xc5 });
        gbc.writeMem(0x9ce1, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6437, gbc.sp());
        EXPECT(0x9ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x94cf));
        EXPECT(0xcb, gbc.readMem(0x9ce1));
        EXPECT(0x3e, gbc.readMem(0x9ce2));
        // CB 3E 02B7
        gbc.setState(0x4c27, 0x41ba, 0xe850, 0x8f8a, 0x9577, 0xf87e, 0x0, 0x1);
        gbc.writeMem(0x4c27, { 0xcb, 0x3e });
        gbc.writeMem(0xf87e, { 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x41ba, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xf87e));
        // CB 3E 02BB
        gbc.setState(0xcd8f, 0xb015, 0x70e0, 0x9695, 0x4af2, 0xd2aa, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0x3e });
        gbc.writeMem(0xd2aa, { 0x79 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8f));
        EXPECT(0x3e, gbc.readMem(0xcd90));
        EXPECT(0x3c, gbc.readMem(0xd2aa));
        // CB 3E 02BE
        gbc.setState(0x9d0d, 0x64c5, 0x8b50, 0xc2da, 0x1f73, 0xc678, 0x1, 0x1);
        gbc.writeMem(0x9d0d, { 0xcb, 0x3e });
        gbc.writeMem(0xc678, { 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0d));
        EXPECT(0x3e, gbc.readMem(0x9d0e));
        EXPECT(0x42, gbc.readMem(0xc678));
        // CB 3E 02BF
        gbc.setState(0x78cf, 0xdccd, 0x8300, 0xdc1a, 0xd2d, 0x9737, 0x1, 0x0);
        gbc.writeMem(0x78cf, { 0xcb, 0x3e });
        gbc.writeMem(0x9737, { 0x9a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdccd, gbc.sp());
        EXPECT(0x78d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9737));
        // CB 3E 02C1
        gbc.setState(0x5582, 0xcefa, 0x5900, 0x822a, 0x3228, 0xbc5c, 0x1, 0x1);
        gbc.writeMem(0x5582, { 0xcb, 0x3e });
        gbc.writeMem(0xbc5c, { 0x4d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x5584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc5c));
        // CB 3E 02C5
        gbc.setState(0x817f, 0x2c0e, 0x6f00, 0x3cbf, 0xfa4, 0x8c31, 0x1, 0x0);
        gbc.writeMem(0x817f, { 0xcb, 0x3e });
        gbc.writeMem(0x8c31, { 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2c0e, gbc.sp());
        EXPECT(0x8181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817f));
        EXPECT(0x3e, gbc.readMem(0x8180));
        EXPECT(0x0, gbc.readMem(0x8c31));
        // CB 3E 02C9
        gbc.setState(0xd960, 0x80ab, 0x3330, 0xb599, 0x639e, 0x8db9, 0x1, 0x0);
        gbc.writeMem(0x8db9, { 0xc4 });
        gbc.writeMem(0xd960, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x80ab, gbc.sp());
        EXPECT(0xd962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8db9));
        EXPECT(0xcb, gbc.readMem(0xd960));
        EXPECT(0x3e, gbc.readMem(0xd961));
        // CB 3E 02CA
        gbc.setState(0xe0ab, 0x106a, 0x6f40, 0x1774, 0x9999, 0xd703, 0x0, 0x1);
        gbc.writeMem(0xd703, { 0xa2 });
        gbc.writeMem(0xe0ab, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x106a, gbc.sp());
        EXPECT(0xe0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd703));
        EXPECT(0xcb, gbc.readMem(0xe0ab));
        EXPECT(0x3e, gbc.readMem(0xe0ac));
        // CB 3E 02CB
        gbc.setState(0x70af, 0xd0a0, 0x9050, 0x62e1, 0x1e0f, 0xf71c, 0x1, 0x0);
        gbc.writeMem(0x70af, { 0xcb, 0x3e });
        gbc.writeMem(0xf71c, { 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd0a0, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xf71c));
        // CB 3E 02CC
        gbc.setState(0xb83b, 0x84be, 0x3f80, 0xf232, 0x84fc, 0xb0d9, 0x1, 0x1);
        gbc.writeMem(0xb0d9, { 0x6c });
        gbc.writeMem(0xb83b, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb0d9));
        EXPECT(0xcb, gbc.readMem(0xb83b));
        EXPECT(0x3e, gbc.readMem(0xb83c));
        // CB 3E 02D1
        gbc.setState(0x7c78, 0xda2e, 0xc10, 0x34c2, 0x8115, 0xb62b, 0x0, 0x1);
        gbc.writeMem(0x7c78, { 0xcb, 0x3e });
        gbc.writeMem(0xb62b, { 0x7f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xda2e, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb62b));
        // CB 3E 02D3
        gbc.setState(0xa66a, 0x36e4, 0x3a0, 0x8329, 0xa835, 0x9144, 0x1, 0x0);
        gbc.writeMem(0x9144, { 0xe });
        gbc.writeMem(0xa66a, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0xa66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9144));
        EXPECT(0xcb, gbc.readMem(0xa66a));
        EXPECT(0x3e, gbc.readMem(0xa66b));
        // CB 3E 02D9
        gbc.setState(0xef0d, 0x3be8, 0x1e20, 0x52ef, 0x5b47, 0x95e2, 0x1, 0x0);
        gbc.writeMem(0x95e2, { 0x6a });
        gbc.writeMem(0xef0d, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3be8, gbc.sp());
        EXPECT(0xef0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x95e2));
        EXPECT(0xcb, gbc.readMem(0xef0d));
        EXPECT(0x3e, gbc.readMem(0xef0e));
        // CB 3E 02DA
        gbc.setState(0xa1fc, 0x190, 0xe830, 0x5c36, 0xc979, 0xa19d, 0x1, 0x0);
        gbc.writeMem(0xa19d, { 0xc3 });
        gbc.writeMem(0xa1fc, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x190, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa19d));
        EXPECT(0xcb, gbc.readMem(0xa1fc));
        EXPECT(0x3e, gbc.readMem(0xa1fd));
        // CB 3E 02DD
        gbc.setState(0xa079, 0xf786, 0xcf60, 0x7307, 0x85fa, 0xbeed, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0xcb, 0x3e });
        gbc.writeMem(0xbeed, { 0xa3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf786, gbc.sp());
        EXPECT(0xa07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa079));
        EXPECT(0x3e, gbc.readMem(0xa07a));
        EXPECT(0x51, gbc.readMem(0xbeed));
        // CB 3E 02DE
        gbc.setState(0xc3d, 0x4d25, 0xe3a0, 0xaa8e, 0xaa11, 0xe289, 0x0, 0x0);
        gbc.writeMem(0xc3d, { 0xcb, 0x3e });
        gbc.writeMem(0xe289, { 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0xc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe289));
        // CB 3E 02DF
        gbc.setState(0x39b, 0x83d2, 0xcec0, 0x3b24, 0xebf2, 0xebe2, 0x1, 0x1);
        gbc.writeMem(0x39b, { 0xcb, 0x3e });
        gbc.writeMem(0xebe2, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x83d2, gbc.sp());
        EXPECT(0x39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xebe2));
        // CB 3E 02E2
        gbc.setState(0x3dbe, 0xeabf, 0x9260, 0x886c, 0x6933, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0x3dbe, { 0xcb, 0x3e });
        gbc.writeMem(0xcbb6, { 0x3d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0x3dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xcbb6));
        // CB 3E 02E5
        gbc.setState(0xd73, 0xc592, 0xc6c0, 0xb1a8, 0x306d, 0xb1cc, 0x1, 0x0);
        gbc.writeMem(0xd73, { 0xcb, 0x3e });
        gbc.writeMem(0xb1cc, { 0xb1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc592, gbc.sp());
        EXPECT(0xd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb1cc));
        // CB 3E 02E6
        gbc.setState(0x9b32, 0x3b85, 0x4f0, 0x49d8, 0x296b, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x9857, { 0x0 });
        gbc.writeMem(0x9b32, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3b85, gbc.sp());
        EXPECT(0x9b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9857));
        EXPECT(0xcb, gbc.readMem(0x9b32));
        EXPECT(0x3e, gbc.readMem(0x9b33));
        // CB 3E 02E7
        gbc.setState(0x455e, 0x8e1f, 0x77b0, 0x3520, 0x66b, 0xf7e6, 0x1, 0x0);
        gbc.writeMem(0x455e, { 0xcb, 0x3e });
        gbc.writeMem(0xf7e6, { 0xc5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8e1f, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xf7e6));
        // CB 3E 02E8
        gbc.setState(0x60db, 0xf308, 0x5570, 0xaa6d, 0x368f, 0xa1c3, 0x0, 0x1);
        gbc.writeMem(0x60db, { 0xcb, 0x3e });
        gbc.writeMem(0xa1c3, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf308, gbc.sp());
        EXPECT(0x60dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa1c3));
        // CB 3E 02EB
        gbc.setState(0x50b3, 0x2f1c, 0xcaf0, 0x1641, 0xe11b, 0xcf39, 0x0, 0x0);
        gbc.writeMem(0x50b3, { 0xcb, 0x3e });
        gbc.writeMem(0xcf39, { 0xbb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2f1c, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcf39));
        // CB 3E 02EC
        gbc.setState(0x5bab, 0x34ef, 0x830, 0x2403, 0xc08, 0xb50c, 0x1, 0x0);
        gbc.writeMem(0x5bab, { 0xcb, 0x3e });
        gbc.writeMem(0xb50c, { 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x34ef, gbc.sp());
        EXPECT(0x5bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb50c));
        // CB 3E 02EE
        gbc.setState(0xc30a, 0xbbfb, 0xbbf0, 0x41cd, 0x5a67, 0xca4c, 0x1, 0x0);
        gbc.writeMem(0xc30a, { 0xcb, 0x3e });
        gbc.writeMem(0xca4c, { 0xaa });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbbfb, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0x3e, gbc.readMem(0xc30b));
        EXPECT(0x55, gbc.readMem(0xca4c));
        // CB 3E 02F4
        gbc.setState(0x55fc, 0xed61, 0xcd10, 0x8c65, 0x813e, 0x9c76, 0x1, 0x1);
        gbc.writeMem(0x55fc, { 0xcb, 0x3e });
        gbc.writeMem(0x9c76, { 0xb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xed61, gbc.sp());
        EXPECT(0x55fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c76));
        // CB 3E 02F8
        gbc.setState(0x522e, 0x8b71, 0x1910, 0x532c, 0x5ab8, 0xcfb9, 0x0, 0x1);
        gbc.writeMem(0x522e, { 0xcb, 0x3e });
        gbc.writeMem(0xcfb9, { 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b71, gbc.sp());
        EXPECT(0x5230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcfb9));
        // CB 3E 02FC
        gbc.setState(0x8160, 0x1308, 0x7610, 0x7208, 0xa82c, 0xebc1, 0x1, 0x0);
        gbc.writeMem(0x8160, { 0xcb, 0x3e });
        gbc.writeMem(0xebc1, { 0x12 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0x8162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8160));
        EXPECT(0x3e, gbc.readMem(0x8161));
        EXPECT(0x9, gbc.readMem(0xebc1));
        // CB 3E 02FD
        gbc.setState(0x74a9, 0xe711, 0xc100, 0x3df6, 0xcbdb, 0xd41e, 0x1, 0x0);
        gbc.writeMem(0x74a9, { 0xcb, 0x3e });
        gbc.writeMem(0xd41e, { 0xf3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe711, gbc.sp());
        EXPECT(0x74ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd41e));
        // CB 3E 02FE
        gbc.setState(0xc65e, 0xf927, 0xe040, 0x261b, 0x8d1e, 0xfecd, 0x0, 0x0);
        gbc.writeMem(0xc65e, { 0xcb, 0x3e });
        gbc.writeMem(0xfecd, { 0x86 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0xc660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc65e));
        EXPECT(0x3e, gbc.readMem(0xc65f));
        EXPECT(0x43, gbc.readMem(0xfecd));
        // CB 3E 0301
        gbc.setState(0x935e, 0x4e83, 0xe9c0, 0x1516, 0xdb44, 0xd4cd, 0x1, 0x1);
        gbc.writeMem(0x935e, { 0xcb, 0x3e });
        gbc.writeMem(0xd4cd, { 0x26 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x9360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935e));
        EXPECT(0x3e, gbc.readMem(0x935f));
        EXPECT(0x13, gbc.readMem(0xd4cd));
        // CB 3E 0303
        gbc.setState(0x72b7, 0x96dc, 0x2810, 0xd323, 0x84e4, 0x9ac4, 0x1, 0x0);
        gbc.writeMem(0x72b7, { 0xcb, 0x3e });
        gbc.writeMem(0x9ac4, { 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9ac4));
        // CB 3E 0304
        gbc.setState(0x6e6d, 0x9f3d, 0x54e0, 0x7e14, 0xff5c, 0xfea8, 0x0, 0x1);
        gbc.writeMem(0x6e6d, { 0xcb, 0x3e });
        gbc.writeMem(0xfea8, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9f3d, gbc.sp());
        EXPECT(0x6e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xfea8));
        // CB 3E 0305
        gbc.setState(0x5ce0, 0x2161, 0x8a30, 0x242c, 0x5550, 0xbc20, 0x1, 0x0);
        gbc.writeMem(0x5ce0, { 0xcb, 0x3e });
        gbc.writeMem(0xbc20, { 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2161, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xbc20));
        // CB 3E 0306
        gbc.setState(0x2ad5, 0xb392, 0x4610, 0x5c8f, 0xffb, 0xf38a, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0xcb, 0x3e });
        gbc.writeMem(0xf38a, { 0xd3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb392, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xf38a));
        // CB 3E 0307
        gbc.setState(0xe0f1, 0x7b9a, 0x74b0, 0x1d9a, 0x9f27, 0x8bb1, 0x0, 0x0);
        gbc.writeMem(0x8bb1, { 0x5e });
        gbc.writeMem(0xe0f1, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7b9a, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8bb1));
        EXPECT(0xcb, gbc.readMem(0xe0f1));
        EXPECT(0x3e, gbc.readMem(0xe0f2));
        // CB 3E 0308
        gbc.setState(0x9cbe, 0xef08, 0x8570, 0x51c8, 0xc969, 0xbe45, 0x1, 0x0);
        gbc.writeMem(0x9cbe, { 0xcb, 0x3e });
        gbc.writeMem(0xbe45, { 0x79 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbe));
        EXPECT(0x3e, gbc.readMem(0x9cbf));
        EXPECT(0x3c, gbc.readMem(0xbe45));
        // CB 3E 0309
        gbc.setState(0x3406, 0x5583, 0x8c10, 0x4dac, 0x3824, 0x8263, 0x1, 0x1);
        gbc.writeMem(0x3406, { 0xcb, 0x3e });
        gbc.writeMem(0x8263, { 0x14 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5583, gbc.sp());
        EXPECT(0x3408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8263));
        // CB 3E 030A
        gbc.setState(0x176d, 0x4e81, 0x1e30, 0xe9a3, 0x870e, 0xdea3, 0x1, 0x0);
        gbc.writeMem(0x176d, { 0xcb, 0x3e });
        gbc.writeMem(0xdea3, { 0x62 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0x176f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdea3));
        // CB 3E 030D
        gbc.setState(0x80e5, 0xe433, 0xf080, 0x6a1, 0x72b2, 0xdc35, 0x0, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0x3e });
        gbc.writeMem(0xdc35, { 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0x3e, gbc.readMem(0x80e6));
        EXPECT(0x7b, gbc.readMem(0xdc35));
        // CB 3E 0311
        gbc.setState(0xcb33, 0xe3ee, 0x5f30, 0xd624, 0x31bd, 0xe5e9, 0x1, 0x0);
        gbc.writeMem(0xcb33, { 0xcb, 0x3e });
        gbc.writeMem(0xe5e9, { 0xd6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe3ee, gbc.sp());
        EXPECT(0xcb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb33));
        EXPECT(0x3e, gbc.readMem(0xcb34));
        EXPECT(0x6b, gbc.readMem(0xe5e9));
        // CB 3E 0312
        gbc.setState(0x7e04, 0xa1f3, 0x7b60, 0xe3e2, 0xc3ea, 0x8c21, 0x1, 0x0);
        gbc.writeMem(0x7e04, { 0xcb, 0x3e });
        gbc.writeMem(0x8c21, { 0x7e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa1f3, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8c21));
        // CB 3E 0313
        gbc.setState(0xd726, 0x7229, 0x6b0, 0xc0c0, 0xa688, 0xa324, 0x0, 0x1);
        gbc.writeMem(0xa324, { 0x2f });
        gbc.writeMem(0xd726, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7229, gbc.sp());
        EXPECT(0xd728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa324));
        EXPECT(0xcb, gbc.readMem(0xd726));
        EXPECT(0x3e, gbc.readMem(0xd727));
        // CB 3E 0315
        gbc.setState(0x2f79, 0xa981, 0x110, 0xccb0, 0x82d5, 0x8d24, 0x0, 0x1);
        gbc.writeMem(0x2f79, { 0xcb, 0x3e });
        gbc.writeMem(0x8d24, { 0xdd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8d24));
        // CB 3E 0316
        gbc.setState(0xb94f, 0x15b0, 0x9ae0, 0x903e, 0x817e, 0xcb39, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x3e });
        gbc.writeMem(0xcb39, { 0xca });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x15b0, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94f));
        EXPECT(0x3e, gbc.readMem(0xb950));
        EXPECT(0x65, gbc.readMem(0xcb39));
        // CB 3E 0317
        gbc.setState(0xe387, 0xa038, 0xefc0, 0x53f9, 0x3408, 0xca74, 0x1, 0x1);
        gbc.writeMem(0xca74, { 0xbb });
        gbc.writeMem(0xe387, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa038, gbc.sp());
        EXPECT(0xe389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xca74));
        EXPECT(0xcb, gbc.readMem(0xe387));
        EXPECT(0x3e, gbc.readMem(0xe388));
        // CB 3E 0319
        gbc.setState(0xa5a2, 0xf3db, 0x5530, 0x2194, 0xd2c, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0x9f3a, { 0xb });
        gbc.writeMem(0xa5a2, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9f3a));
        EXPECT(0xcb, gbc.readMem(0xa5a2));
        EXPECT(0x3e, gbc.readMem(0xa5a3));
        // CB 3E 031C
        gbc.setState(0x56e, 0xe57b, 0x6800, 0xbf6c, 0x88b9, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x56e, { 0xcb, 0x3e });
        gbc.writeMem(0xc858, { 0x3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe57b, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc858));
        // CB 3E 031F
        gbc.setState(0x44a8, 0xab5b, 0x1d70, 0xf5c3, 0x34bf, 0xa332, 0x0, 0x0);
        gbc.writeMem(0x44a8, { 0xcb, 0x3e });
        gbc.writeMem(0xa332, { 0xc4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0x44aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa332));
        // CB 3E 0320
        gbc.setState(0x4e22, 0xbb31, 0x8c60, 0x2da3, 0xf075, 0xd7aa, 0x0, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0x3e });
        gbc.writeMem(0xd7aa, { 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbb31, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd7aa));
        // CB 3E 0321
        gbc.setState(0x2cce, 0xc645, 0x77d0, 0x8abf, 0x1d75, 0xcbe8, 0x1, 0x0);
        gbc.writeMem(0x2cce, { 0xcb, 0x3e });
        gbc.writeMem(0xcbe8, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc645, gbc.sp());
        EXPECT(0x2cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xcbe8));
        // CB 3E 0322
        gbc.setState(0x2b5b, 0x9566, 0x9b70, 0xcdc8, 0x7401, 0xd319, 0x1, 0x1);
        gbc.writeMem(0x2b5b, { 0xcb, 0x3e });
        gbc.writeMem(0xd319, { 0xd6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0x2b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd319));
        // CB 3E 0325
        gbc.setState(0xc450, 0x5435, 0x7e40, 0xe646, 0x4e36, 0x8a60, 0x0, 0x0);
        gbc.writeMem(0x8a60, { 0x8f });
        gbc.writeMem(0xc450, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8a60));
        EXPECT(0xcb, gbc.readMem(0xc450));
        EXPECT(0x3e, gbc.readMem(0xc451));
        // CB 3E 0326
        gbc.setState(0x8289, 0x6417, 0x1fa0, 0xbe82, 0xcd4, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x8289, { 0xcb, 0x3e });
        gbc.writeMem(0x8952, { 0x3f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8289));
        EXPECT(0x3e, gbc.readMem(0x828a));
        EXPECT(0x1f, gbc.readMem(0x8952));
        // CB 3E 0327
        gbc.setState(0x779e, 0x99c3, 0xa1b0, 0x9563, 0x9c0c, 0xc201, 0x0, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0x3e });
        gbc.writeMem(0xc201, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x99c3, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc201));
        // CB 3E 0328
        gbc.setState(0x2c02, 0x983e, 0x11b0, 0xddc8, 0xfba8, 0xe198, 0x0, 0x1);
        gbc.writeMem(0x2c02, { 0xcb, 0x3e });
        gbc.writeMem(0xe198, { 0xfa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0x2c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe198));
        // CB 3E 032A
        gbc.setState(0xb80, 0x8f81, 0xe830, 0x7378, 0x85b5, 0x8204, 0x1, 0x1);
        gbc.writeMem(0xb80, { 0xcb, 0x3e });
        gbc.writeMem(0x8204, { 0x6f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8f81, gbc.sp());
        EXPECT(0xb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8204));
        // CB 3E 032B
        gbc.setState(0xaa0, 0x1d94, 0x39a0, 0x89be, 0x2868, 0xb6d6, 0x0, 0x0);
        gbc.writeMem(0xaa0, { 0xcb, 0x3e });
        gbc.writeMem(0xb6d6, { 0x50 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb6d6));
        // CB 3E 032C
        gbc.setState(0x8a1d, 0x3152, 0xb2f0, 0x9413, 0x5a8f, 0xcee7, 0x0, 0x1);
        gbc.writeMem(0x8a1d, { 0xcb, 0x3e });
        gbc.writeMem(0xcee7, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3152, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1d));
        EXPECT(0x3e, gbc.readMem(0x8a1e));
        EXPECT(0x59, gbc.readMem(0xcee7));
        // CB 3E 032D
        gbc.setState(0xc266, 0xde10, 0xb060, 0x9be4, 0xac12, 0xbd9f, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0x2e });
        gbc.writeMem(0xc266, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde10, gbc.sp());
        EXPECT(0xc268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xbd9f));
        EXPECT(0xcb, gbc.readMem(0xc266));
        EXPECT(0x3e, gbc.readMem(0xc267));
        // CB 3E 032E
        gbc.setState(0x337c, 0x5729, 0xf650, 0xd65, 0xca06, 0xfc6a, 0x1, 0x0);
        gbc.writeMem(0x337c, { 0xcb, 0x3e });
        gbc.writeMem(0xfc6a, { 0x36 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x337e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xfc6a));
        // CB 3E 032F
        gbc.setState(0x9702, 0x4711, 0xfe20, 0x88c3, 0x7c5f, 0xced4, 0x1, 0x0);
        gbc.writeMem(0x9702, { 0xcb, 0x3e });
        gbc.writeMem(0xced4, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4711, gbc.sp());
        EXPECT(0x9704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9702));
        EXPECT(0x3e, gbc.readMem(0x9703));
        EXPECT(0x2, gbc.readMem(0xced4));
        // CB 3E 0330
        gbc.setState(0x222b, 0x411f, 0xf060, 0x73c1, 0x7979, 0xece5, 0x0, 0x1);
        gbc.writeMem(0x222b, { 0xcb, 0x3e });
        gbc.writeMem(0xece5, { 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x411f, gbc.sp());
        EXPECT(0x222d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xece5));
        // CB 3E 0332
        gbc.setState(0xd05e, 0x838a, 0xcc00, 0x13e1, 0x5f2, 0xdec3, 0x0, 0x0);
        gbc.writeMem(0xd05e, { 0xcb, 0x3e });
        gbc.writeMem(0xdec3, { 0xd7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x838a, gbc.sp());
        EXPECT(0xd060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05e));
        EXPECT(0x3e, gbc.readMem(0xd05f));
        EXPECT(0x6b, gbc.readMem(0xdec3));
        // CB 3E 0333
        gbc.setState(0x88cb, 0x7e88, 0x29c0, 0x161b, 0xb698, 0x818d, 0x1, 0x1);
        gbc.writeMem(0x818d, { 0xf4 });
        gbc.writeMem(0x88cb, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x818d));
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0x3e, gbc.readMem(0x88cc));
        // CB 3E 0334
        gbc.setState(0x1555, 0xf5fb, 0x8760, 0x2623, 0x5fb1, 0x842f, 0x1, 0x0);
        gbc.writeMem(0x1555, { 0xcb, 0x3e });
        gbc.writeMem(0x842f, { 0xdc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x1557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x842f));
        // CB 3E 0336
        gbc.setState(0x9d21, 0x552, 0xbac0, 0x5325, 0x8073, 0xea22, 0x0, 0x1);
        gbc.writeMem(0x9d21, { 0xcb, 0x3e });
        gbc.writeMem(0xea22, { 0xb1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x9d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d21));
        EXPECT(0x3e, gbc.readMem(0x9d22));
        EXPECT(0x58, gbc.readMem(0xea22));
        // CB 3E 033D
        gbc.setState(0xe529, 0x6776, 0x65a0, 0xcaa2, 0x9d1a, 0xf912, 0x1, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0x3e });
        gbc.writeMem(0xf912, { 0xae });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6776, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe529));
        EXPECT(0x3e, gbc.readMem(0xe52a));
        EXPECT(0x57, gbc.readMem(0xf912));
        // CB 3E 0340
        gbc.setState(0x9054, 0x4114, 0x5a60, 0xb3c6, 0x2f53, 0xfcdb, 0x0, 0x0);
        gbc.writeMem(0x9054, { 0xcb, 0x3e });
        gbc.writeMem(0xfcdb, { 0xdf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4114, gbc.sp());
        EXPECT(0x9056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9054));
        EXPECT(0x3e, gbc.readMem(0x9055));
        EXPECT(0x6f, gbc.readMem(0xfcdb));
        // CB 3E 0346
        gbc.setState(0x5c73, 0x190c, 0x6cb0, 0x203, 0x9ab5, 0xcfe9, 0x0, 0x0);
        gbc.writeMem(0x5c73, { 0xcb, 0x3e });
        gbc.writeMem(0xcfe9, { 0x3f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x190c, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xcfe9));
        // CB 3E 0347
        gbc.setState(0xb9f9, 0x5d58, 0xd910, 0x1628, 0xb3d7, 0xc2b2, 0x0, 0x0);
        gbc.writeMem(0xb9f9, { 0xcb, 0x3e });
        gbc.writeMem(0xc2b2, { 0x45 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5d58, gbc.sp());
        EXPECT(0xb9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f9));
        EXPECT(0x3e, gbc.readMem(0xb9fa));
        EXPECT(0x22, gbc.readMem(0xc2b2));
        // CB 3E 0349
        gbc.setState(0x7d98, 0x6fd3, 0x10e0, 0xde72, 0x2bb4, 0xe991, 0x0, 0x1);
        gbc.writeMem(0x7d98, { 0xcb, 0x3e });
        gbc.writeMem(0xe991, { 0xd1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6fd3, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe991));
        // CB 3E 034B
        gbc.setState(0x6417, 0xf538, 0xeb70, 0x9e2, 0xfe7d, 0xa1f7, 0x1, 0x0);
        gbc.writeMem(0x6417, { 0xcb, 0x3e });
        gbc.writeMem(0xa1f7, { 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf538, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa1f7));
        // CB 3E 034D
        gbc.setState(0x6c73, 0xeb1f, 0x3900, 0x6f17, 0x6712, 0xa750, 0x1, 0x0);
        gbc.writeMem(0x6c73, { 0xcb, 0x3e });
        gbc.writeMem(0xa750, { 0x56 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xeb1f, gbc.sp());
        EXPECT(0x6c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa750));
        // CB 3E 034F
        gbc.setState(0xb5a, 0x312f, 0x3c10, 0x86e1, 0x6e53, 0x9312, 0x0, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x3e });
        gbc.writeMem(0x9312, { 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x312f, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9312));
        // CB 3E 0353
        gbc.setState(0xeb7f, 0x5fc5, 0xc530, 0xfe29, 0x3657, 0xb37d, 0x1, 0x0);
        gbc.writeMem(0xb37d, { 0x95 });
        gbc.writeMem(0xeb7f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5fc5, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb37d));
        EXPECT(0xcb, gbc.readMem(0xeb7f));
        EXPECT(0x3e, gbc.readMem(0xeb80));
        // CB 3E 0354
        gbc.setState(0x4a2b, 0xf961, 0xb9e0, 0xd01c, 0xed4b, 0xf9a5, 0x0, 0x1);
        gbc.writeMem(0x4a2b, { 0xcb, 0x3e });
        gbc.writeMem(0xf9a5, { 0x6d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0x4a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xf9a5));
        // CB 3E 0356
        gbc.setState(0xb856, 0xad2b, 0xc540, 0x5522, 0xa803, 0xc380, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0xcb, 0x3e });
        gbc.writeMem(0xc380, { 0xcd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb856));
        EXPECT(0x3e, gbc.readMem(0xb857));
        EXPECT(0x66, gbc.readMem(0xc380));
        // CB 3E 0358
        gbc.setState(0x84ca, 0x3035, 0xa530, 0x6d49, 0x897c, 0xdbf1, 0x1, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x3e });
        gbc.writeMem(0xdbf1, { 0xab });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3035, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x3e, gbc.readMem(0x84cb));
        EXPECT(0x55, gbc.readMem(0xdbf1));
        // CB 3E 035A
        gbc.setState(0xdd6b, 0x3fea, 0xc870, 0x9a7c, 0x773, 0xd8ad, 0x1, 0x1);
        gbc.writeMem(0xd8ad, { 0x47 });
        gbc.writeMem(0xdd6b, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0xdd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd8ad));
        EXPECT(0xcb, gbc.readMem(0xdd6b));
        EXPECT(0x3e, gbc.readMem(0xdd6c));
        // CB 3E 035D
        gbc.setState(0x9268, 0xac99, 0xb420, 0x367e, 0xae46, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0x9268, { 0xcb, 0x3e });
        gbc.writeMem(0xa8d1, { 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9268));
        EXPECT(0x3e, gbc.readMem(0x9269));
        EXPECT(0x42, gbc.readMem(0xa8d1));
        // CB 3E 035E
        gbc.setState(0x98ff, 0xc873, 0x9a40, 0x83ac, 0x4e17, 0xed94, 0x0, 0x1);
        gbc.writeMem(0x98ff, { 0xcb, 0x3e });
        gbc.writeMem(0xed94, { 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0x9901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ff));
        EXPECT(0x3e, gbc.readMem(0x9900));
        EXPECT(0x9, gbc.readMem(0xed94));
        // CB 3E 035F
        gbc.setState(0x63a0, 0xd7d5, 0xd8c0, 0x394b, 0x44d5, 0xe96e, 0x1, 0x0);
        gbc.writeMem(0x63a0, { 0xcb, 0x3e });
        gbc.writeMem(0xe96e, { 0x24 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd7d5, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe96e));
        // CB 3E 0362
        gbc.setState(0xdb40, 0xeca6, 0x86e0, 0xfcea, 0x5151, 0xbc0a, 0x1, 0x0);
        gbc.writeMem(0xbc0a, { 0x37 });
        gbc.writeMem(0xdb40, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xbc0a));
        EXPECT(0xcb, gbc.readMem(0xdb40));
        EXPECT(0x3e, gbc.readMem(0xdb41));
        // CB 3E 0363
        gbc.setState(0x1592, 0xaacc, 0x1d60, 0x2412, 0x4317, 0x8e37, 0x1, 0x1);
        gbc.writeMem(0x1592, { 0xcb, 0x3e });
        gbc.writeMem(0x8e37, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaacc, gbc.sp());
        EXPECT(0x1594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8e37));
        // CB 3E 0368
        gbc.setState(0x4a68, 0x58ec, 0x4480, 0x7b57, 0x7f90, 0xe475, 0x1, 0x0);
        gbc.writeMem(0x4a68, { 0xcb, 0x3e });
        gbc.writeMem(0xe475, { 0x11 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x4a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xe475));
        // CB 3E 0369
        gbc.setState(0x7d55, 0xd772, 0xe650, 0x249f, 0x9198, 0xdfe2, 0x1, 0x1);
        gbc.writeMem(0x7d55, { 0xcb, 0x3e });
        gbc.writeMem(0xdfe2, { 0xfa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd772, gbc.sp());
        EXPECT(0x7d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdfe2));
        // CB 3E 036B
        gbc.setState(0x2d1e, 0x7bd3, 0x2550, 0x2b9a, 0xf7ca, 0xabb2, 0x0, 0x1);
        gbc.writeMem(0x2d1e, { 0xcb, 0x3e });
        gbc.writeMem(0xabb2, { 0x17 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x2d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xabb2));
        // CB 3E 036D
        gbc.setState(0xff6, 0x6a77, 0xad60, 0xb023, 0x6f8d, 0xf272, 0x0, 0x0);
        gbc.writeMem(0xff6, { 0xcb, 0x3e });
        gbc.writeMem(0xf272, { 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0xff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xf272));
        // CB 3E 0373
        gbc.setState(0xd257, 0x89d, 0x3280, 0x96c, 0xe641, 0x9003, 0x0, 0x0);
        gbc.writeMem(0x9003, { 0xa7 });
        gbc.writeMem(0xd257, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0xd259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9003));
        EXPECT(0xcb, gbc.readMem(0xd257));
        EXPECT(0x3e, gbc.readMem(0xd258));
        // CB 3E 0374
        gbc.setState(0xcc87, 0x276e, 0x39b0, 0x9c7, 0x8df7, 0xbec2, 0x0, 0x0);
        gbc.writeMem(0xbec2, { 0x47 });
        gbc.writeMem(0xcc87, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xbec2));
        EXPECT(0xcb, gbc.readMem(0xcc87));
        EXPECT(0x3e, gbc.readMem(0xcc88));
        // CB 3E 0375
        gbc.setState(0x95de, 0x5e2d, 0xc630, 0x4132, 0xeb5c, 0xb7d7, 0x1, 0x0);
        gbc.writeMem(0x95de, { 0xcb, 0x3e });
        gbc.writeMem(0xb7d7, { 0x30 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5e2d, gbc.sp());
        EXPECT(0x95e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95de));
        EXPECT(0x3e, gbc.readMem(0x95df));
        EXPECT(0x18, gbc.readMem(0xb7d7));
        // CB 3E 0378
        gbc.setState(0x9582, 0x6982, 0xcf30, 0x9906, 0x2232, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0x9582, { 0xcb, 0x3e });
        gbc.writeMem(0xdb12, { 0xa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6982, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9582));
        EXPECT(0x3e, gbc.readMem(0x9583));
        EXPECT(0x5, gbc.readMem(0xdb12));
        // CB 3E 037B
        gbc.setState(0x1b3d, 0x72d8, 0xf580, 0x4fb, 0xfb54, 0xd751, 0x0, 0x0);
        gbc.writeMem(0x1b3d, { 0xcb, 0x3e });
        gbc.writeMem(0xd751, { 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd751));
        // CB 3E 037C
        gbc.setState(0x43ff, 0x48a3, 0x1590, 0x4371, 0xf209, 0x8335, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0xcb, 0x3e });
        gbc.writeMem(0x8335, { 0x42 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x48a3, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8335));
        // CB 3E 037F
        gbc.setState(0x67c8, 0x4d38, 0xff0, 0x7350, 0x971f, 0x9b54, 0x1, 0x1);
        gbc.writeMem(0x67c8, { 0xcb, 0x3e });
        gbc.writeMem(0x9b54, { 0x93 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4d38, gbc.sp());
        EXPECT(0x67ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9b54));
        // CB 3E 0382
        gbc.setState(0xe473, 0xed5f, 0xa1a0, 0xb9c0, 0xb004, 0xfaf8, 0x0, 0x1);
        gbc.writeMem(0xe473, { 0xcb, 0x3e });
        gbc.writeMem(0xfaf8, { 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0xe475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe473));
        EXPECT(0x3e, gbc.readMem(0xe474));
        EXPECT(0x1b, gbc.readMem(0xfaf8));
        // CB 3E 0384
        gbc.setState(0x5b13, 0x106c, 0xea0, 0xe43c, 0xe796, 0x8e95, 0x0, 0x0);
        gbc.writeMem(0x5b13, { 0xcb, 0x3e });
        gbc.writeMem(0x8e95, { 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8e95));
        // CB 3E 0385
        gbc.setState(0x4865, 0xaf9d, 0xdfb0, 0xeb58, 0xb08b, 0xa1ee, 0x0, 0x0);
        gbc.writeMem(0x4865, { 0xcb, 0x3e });
        gbc.writeMem(0xa1ee, { 0x78 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaf9d, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa1ee));
        // CB 3E 0386
        gbc.setState(0xac52, 0x50b9, 0x9fb0, 0x2a3e, 0x76e4, 0x9db1, 0x0, 0x0);
        gbc.writeMem(0x9db1, { 0xf2 });
        gbc.writeMem(0xac52, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x50b9, gbc.sp());
        EXPECT(0xac54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9db1));
        EXPECT(0xcb, gbc.readMem(0xac52));
        EXPECT(0x3e, gbc.readMem(0xac53));
        // CB 3E 038B
        gbc.setState(0x11bc, 0x4904, 0x8db0, 0x5792, 0x3e1c, 0xc9b3, 0x0, 0x0);
        gbc.writeMem(0x11bc, { 0xcb, 0x3e });
        gbc.writeMem(0xc9b3, { 0xb2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4904, gbc.sp());
        EXPECT(0x11be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc9b3));
        // CB 3E 038E
        gbc.setState(0x97f0, 0x1b52, 0x9f20, 0xf941, 0x347c, 0xe83c, 0x0, 0x0);
        gbc.writeMem(0x97f0, { 0xcb, 0x3e });
        gbc.writeMem(0xe83c, { 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1b52, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0x3e, gbc.readMem(0x97f1));
        EXPECT(0x7c, gbc.readMem(0xe83c));
        // CB 3E 038F
        gbc.setState(0x5e1, 0xc4af, 0xb100, 0x57ae, 0xdb1a, 0xab73, 0x0, 0x1);
        gbc.writeMem(0x5e1, { 0xcb, 0x3e });
        gbc.writeMem(0xab73, { 0x68 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xab73));
        // CB 3E 0393
        gbc.setState(0x1f6, 0xc2c7, 0x44e0, 0x58b3, 0x9e55, 0xde0d, 0x1, 0x0);
        gbc.writeMem(0x1f6, { 0xcb, 0x3e });
        gbc.writeMem(0xde0d, { 0x4b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc2c7, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xde0d));
        // CB 3E 0395
        gbc.setState(0x9aa6, 0x5102, 0x90d0, 0xe91, 0x21fa, 0xe4b3, 0x0, 0x1);
        gbc.writeMem(0x9aa6, { 0xcb, 0x3e });
        gbc.writeMem(0xe4b3, { 0x86 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5102, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa6));
        EXPECT(0x3e, gbc.readMem(0x9aa7));
        EXPECT(0x43, gbc.readMem(0xe4b3));
        // CB 3E 0397
        gbc.setState(0xeb0, 0x1887, 0x3420, 0x2b8f, 0xa53, 0xba62, 0x0, 0x1);
        gbc.writeMem(0xeb0, { 0xcb, 0x3e });
        gbc.writeMem(0xba62, { 0x6d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xba62));
        // CB 3E 0398
        gbc.setState(0x21e2, 0xc1c1, 0x5b00, 0xd6c3, 0xd27f, 0xfb2b, 0x0, 0x1);
        gbc.writeMem(0x21e2, { 0xcb, 0x3e });
        gbc.writeMem(0xfb2b, { 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x21e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xfb2b));
        // CB 3E 0399
        gbc.setState(0x3a46, 0x1fc1, 0xc240, 0xe338, 0xb519, 0xfaea, 0x0, 0x0);
        gbc.writeMem(0x3a46, { 0xcb, 0x3e });
        gbc.writeMem(0xfaea, { 0x3e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xfaea));
        // CB 3E 039B
        gbc.setState(0x2523, 0x8fbc, 0xfc00, 0xe769, 0x5b0e, 0x88c5, 0x1, 0x1);
        gbc.writeMem(0x2523, { 0xcb, 0x3e });
        gbc.writeMem(0x88c5, { 0x8d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x88c5));
        // CB 3E 039D
        gbc.setState(0xd0b4, 0x3dee, 0x5870, 0xba78, 0xe860, 0xb6f1, 0x1, 0x1);
        gbc.writeMem(0xb6f1, { 0x93 });
        gbc.writeMem(0xd0b4, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3dee, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb6f1));
        EXPECT(0xcb, gbc.readMem(0xd0b4));
        EXPECT(0x3e, gbc.readMem(0xd0b5));
        // CB 3E 039E
        gbc.setState(0x6690, 0xe3cd, 0x88f0, 0xb5e, 0x9fa7, 0x94c4, 0x0, 0x0);
        gbc.writeMem(0x6690, { 0xcb, 0x3e });
        gbc.writeMem(0x94c4, { 0xfd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x6692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x94c4));
        // CB 3E 039F
        gbc.setState(0xb60c, 0xbafd, 0x6a0, 0xe8e7, 0xb3f1, 0x90da, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0xcc });
        gbc.writeMem(0xb60c, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbafd, gbc.sp());
        EXPECT(0xb60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x90da));
        EXPECT(0xcb, gbc.readMem(0xb60c));
        EXPECT(0x3e, gbc.readMem(0xb60d));
        // CB 3E 03A0
        gbc.setState(0x4e0d, 0xcc06, 0x3ab0, 0x67ba, 0x900f, 0x80f0, 0x1, 0x0);
        gbc.writeMem(0x4e0d, { 0xcb, 0x3e });
        gbc.writeMem(0x80f0, { 0x40 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcc06, gbc.sp());
        EXPECT(0x4e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x80f0));
        // CB 3E 03A1
        gbc.setState(0x8fa6, 0x6652, 0x6090, 0x2101, 0x7a09, 0x813f, 0x0, 0x0);
        gbc.writeMem(0x813f, { 0x98 });
        gbc.writeMem(0x8fa6, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6652, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x813f));
        EXPECT(0xcb, gbc.readMem(0x8fa6));
        EXPECT(0x3e, gbc.readMem(0x8fa7));
        // CB 3E 03A3
        gbc.setState(0x5e3b, 0xec5e, 0x33a0, 0x341e, 0x9b96, 0xcea7, 0x0, 0x0);
        gbc.writeMem(0x5e3b, { 0xcb, 0x3e });
        gbc.writeMem(0xcea7, { 0xe1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0x5e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xcea7));
        // CB 3E 03A6
        gbc.setState(0x6e66, 0xd9f5, 0x6900, 0x7761, 0xffdc, 0xaaa3, 0x0, 0x0);
        gbc.writeMem(0x6e66, { 0xcb, 0x3e });
        gbc.writeMem(0xaaa3, { 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd9f5, gbc.sp());
        EXPECT(0x6e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaaa3));
        // CB 3E 03A8
        gbc.setState(0x2333, 0xadb0, 0x3800, 0xe8a7, 0x6999, 0xbda0, 0x0, 0x1);
        gbc.writeMem(0x2333, { 0xcb, 0x3e });
        gbc.writeMem(0xbda0, { 0xb1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xadb0, gbc.sp());
        EXPECT(0x2335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbda0));
        // CB 3E 03A9
        gbc.setState(0xa61f, 0x71f5, 0x4900, 0x31ad, 0xfeca, 0x9c9d, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0x7a });
        gbc.writeMem(0xa61f, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x71f5, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9c9d));
        EXPECT(0xcb, gbc.readMem(0xa61f));
        EXPECT(0x3e, gbc.readMem(0xa620));
        // CB 3E 03AA
        gbc.setState(0xa4b7, 0x9ed2, 0x7850, 0x87a1, 0x1e64, 0xba75, 0x0, 0x0);
        gbc.writeMem(0xa4b7, { 0xcb, 0x3e });
        gbc.writeMem(0xba75, { 0x17 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0xa4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b7));
        EXPECT(0x3e, gbc.readMem(0xa4b8));
        EXPECT(0xb, gbc.readMem(0xba75));
        // CB 3E 03AC
        gbc.setState(0x9774, 0xc8a2, 0x2a90, 0x918d, 0x19d3, 0xafb8, 0x1, 0x1);
        gbc.writeMem(0x9774, { 0xcb, 0x3e });
        gbc.writeMem(0xafb8, { 0xd8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc8a2, gbc.sp());
        EXPECT(0x9776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9774));
        EXPECT(0x3e, gbc.readMem(0x9775));
        EXPECT(0x6c, gbc.readMem(0xafb8));
        // CB 3E 03AD
        gbc.setState(0xe7ed, 0xd3c1, 0x8cf0, 0x87e1, 0x28c6, 0x8a9b, 0x0, 0x0);
        gbc.writeMem(0x8a9b, { 0x53 });
        gbc.writeMem(0xe7ed, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8a9b));
        EXPECT(0xcb, gbc.readMem(0xe7ed));
        EXPECT(0x3e, gbc.readMem(0xe7ee));
        // CB 3E 03AE
        gbc.setState(0x9f7, 0xfba8, 0x9db0, 0x63c8, 0xf15b, 0xaf33, 0x1, 0x0);
        gbc.writeMem(0x9f7, { 0xcb, 0x3e });
        gbc.writeMem(0xaf33, { 0xaf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfba8, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xaf33));
        // CB 3E 03B2
        gbc.setState(0x4d35, 0x9ccb, 0x1930, 0xbe0c, 0x8fde, 0xcc9c, 0x0, 0x0);
        gbc.writeMem(0x4d35, { 0xcb, 0x3e });
        gbc.writeMem(0xcc9c, { 0x5a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x4d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xcc9c));
        // CB 3E 03B8
        gbc.setState(0x74d2, 0x563c, 0xa080, 0x69fa, 0x5dd6, 0xeec2, 0x1, 0x0);
        gbc.writeMem(0x74d2, { 0xcb, 0x3e });
        gbc.writeMem(0xeec2, { 0x9e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xeec2));
        // CB 3E 03BA
        gbc.setState(0xe1d, 0x97db, 0x5e40, 0x9c04, 0xe956, 0xd4e8, 0x1, 0x1);
        gbc.writeMem(0xe1d, { 0xcb, 0x3e });
        gbc.writeMem(0xd4e8, { 0x27 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd4e8));
        // CB 3E 03BB
        gbc.setState(0x22ec, 0x586f, 0xceb0, 0x9e5f, 0x4986, 0xaa42, 0x0, 0x1);
        gbc.writeMem(0x22ec, { 0xcb, 0x3e });
        gbc.writeMem(0xaa42, { 0xa5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x586f, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaa42));
        // CB 3E 03BF
        gbc.setState(0x9c2c, 0xead7, 0x5fe0, 0xb8a5, 0x5362, 0xc5fb, 0x1, 0x0);
        gbc.writeMem(0x9c2c, { 0xcb, 0x3e });
        gbc.writeMem(0xc5fb, { 0x4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xead7, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2c));
        EXPECT(0x3e, gbc.readMem(0x9c2d));
        EXPECT(0x2, gbc.readMem(0xc5fb));
        // CB 3E 03C1
        gbc.setState(0x60b2, 0x1573, 0x4140, 0xade8, 0x7cf2, 0xc6d6, 0x0, 0x1);
        gbc.writeMem(0x60b2, { 0xcb, 0x3e });
        gbc.writeMem(0xc6d6, { 0x62 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1573, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc6d6));
        // CB 3E 03C4
        gbc.setState(0x145a, 0x4969, 0x520, 0xa49a, 0x27f3, 0xb7e0, 0x0, 0x0);
        gbc.writeMem(0x145a, { 0xcb, 0x3e });
        gbc.writeMem(0xb7e0, { 0xca });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4969, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb7e0));
        // CB 3E 03C6
        gbc.setState(0x8c6a, 0xd85a, 0xc6a0, 0x8b5f, 0x2fa2, 0xf221, 0x0, 0x0);
        gbc.writeMem(0x8c6a, { 0xcb, 0x3e });
        gbc.writeMem(0xf221, { 0x90 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6a));
        EXPECT(0x3e, gbc.readMem(0x8c6b));
        EXPECT(0x48, gbc.readMem(0xf221));
        // CB 3E 03C7
        gbc.setState(0xab32, 0xdde3, 0x9b50, 0x7d91, 0x33bc, 0xe42b, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0xcb, 0x3e });
        gbc.writeMem(0xe42b, { 0xc4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdde3, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab32));
        EXPECT(0x3e, gbc.readMem(0xab33));
        EXPECT(0x62, gbc.readMem(0xe42b));
        // CB 3E 03C9
        gbc.setState(0x41e2, 0x4222, 0x8040, 0x9446, 0x3337, 0xbb12, 0x0, 0x0);
        gbc.writeMem(0x41e2, { 0xcb, 0x3e });
        gbc.writeMem(0xbb12, { 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xbb12));
        // CB 3E 03CC
        gbc.setState(0x71e4, 0x702, 0x72b0, 0xb8d2, 0x203a, 0xed20, 0x0, 0x1);
        gbc.writeMem(0x71e4, { 0xcb, 0x3e });
        gbc.writeMem(0xed20, { 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xed20));
        // CB 3E 03CF
        gbc.setState(0xb373, 0xeae8, 0x4610, 0xa772, 0x45e9, 0xb5c8, 0x1, 0x1);
        gbc.writeMem(0xb373, { 0xcb, 0x3e });
        gbc.writeMem(0xb5c8, { 0xb3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeae8, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb373));
        EXPECT(0x3e, gbc.readMem(0xb374));
        EXPECT(0x59, gbc.readMem(0xb5c8));
        // CB 3E 03D0
        gbc.setState(0x7640, 0x7532, 0xc050, 0x342c, 0x38e, 0xdce0, 0x0, 0x0);
        gbc.writeMem(0x7640, { 0xcb, 0x3e });
        gbc.writeMem(0xdce0, { 0xd4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdce0));
        // CB 3E 03D3
        gbc.setState(0x210b, 0x5cc, 0x3e90, 0x7467, 0x7b6e, 0xfcee, 0x0, 0x0);
        gbc.writeMem(0x210b, { 0xcb, 0x3e });
        gbc.writeMem(0xfcee, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5cc, gbc.sp());
        EXPECT(0x210d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfcee));
        // CB 3E 03DB
        gbc.setState(0x48c4, 0x4f8d, 0xec10, 0xc3e7, 0x530b, 0xb85e, 0x0, 0x0);
        gbc.writeMem(0x48c4, { 0xcb, 0x3e });
        gbc.writeMem(0xb85e, { 0x80 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0x48c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb85e));
        // CB 3E 03DE
        gbc.setState(0xefeb, 0x5052, 0xa3b0, 0x5644, 0xb5a0, 0xa4f7, 0x1, 0x0);
        gbc.writeMem(0xa4f7, { 0x58 });
        gbc.writeMem(0xefeb, { 0xcb, 0x3e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5052, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa4f7));
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0x3e, gbc.readMem(0xefec));
        // CB 3E 03DF
        gbc.setState(0x1586, 0xfe76, 0xf00, 0xaf00, 0xc739, 0x9371, 0x1, 0x1);
        gbc.writeMem(0x1586, { 0xcb, 0x3e });
        gbc.writeMem(0x9371, { 0xc3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0x1588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9371));
        // CB 3E 03E1
        gbc.setState(0x66c4, 0x861a, 0x8a20, 0xb5d3, 0xeaee, 0x8f3c, 0x0, 0x1);
        gbc.writeMem(0x66c4, { 0xcb, 0x3e });
        gbc.writeMem(0x8f3c, { 0xf6 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x861a, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8f3c));
        // CB 3E 03E2
        gbc.setState(0x52eb, 0x3e2d, 0x6f80, 0x1aba, 0xabf7, 0x8c4a, 0x0, 0x0);
        gbc.writeMem(0x52eb, { 0xcb, 0x3e });
        gbc.writeMem(0x8c4a, { 0x5f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3e2d, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c4a));
        // CB 3E 03E5
        gbc.setState(0x8b12, 0x740a, 0x5f50, 0x737d, 0xb47, 0xe36d, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0xcb, 0x3e });
        gbc.writeMem(0xe36d, { 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b12));
        EXPECT(0x3e, gbc.readMem(0x8b13));
        EXPECT(0x6c, gbc.readMem(0xe36d));
        // CB 3E 03E6
        gbc.setState(0xc2f3, 0xbb33, 0xf820, 0x7cac, 0xbf92, 0xf76c, 0x0, 0x0);
        gbc.writeMem(0xc2f3, { 0xcb, 0x3e });
        gbc.writeMem(0xf76c, { 0x51 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbb33, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        EXPECT(0x3e, gbc.readMem(0xc2f4));
        EXPECT(0x28, gbc.readMem(0xf76c));
        // CB 3E 03E7
        gbc.setState(0x6a05, 0x7e22, 0xc730, 0x5ee7, 0xe9eb, 0xfbdb, 0x0, 0x0);
        gbc.writeMem(0x6a05, { 0xcb, 0x3e });
        gbc.writeMem(0xfbdb, { 0x67 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7e22, gbc.sp());
        EXPECT(0x6a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xfbdb));
    }
