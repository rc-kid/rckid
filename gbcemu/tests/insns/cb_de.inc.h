    TEST(gbcemu, opcode_cb_de) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DE 0000
        gbc.setState(0xc4ff, 0x200d, 0x1370, 0x24b8, 0x8810, 0x42bf, 0x0, 0x0);
        gbc.writeMem(0x42bf, { 0x8 });
        gbc.writeMem(0xc4ff, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x200d, gbc.sp());
        EXPECT(0xc501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ff));
        EXPECT(0xde, gbc.readMem(0xc500));
        // CB DE 0001
        gbc.setState(0xc010, 0x168d, 0xdde0, 0x1529, 0x750c, 0xaea3, 0x0, 0x0);
        gbc.writeMem(0xaea3, { 0xdd });
        gbc.writeMem(0xc010, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xaea3));
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0xde, gbc.readMem(0xc011));
        // CB DE 0002
        gbc.setState(0xcf0d, 0x6f0f, 0xc5d0, 0x171e, 0xa24d, 0xb63c, 0x0, 0x0);
        gbc.writeMem(0xb63c, { 0x6a });
        gbc.writeMem(0xcf0d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6f0f, gbc.sp());
        EXPECT(0xcf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb63c));
        EXPECT(0xcb, gbc.readMem(0xcf0d));
        EXPECT(0xde, gbc.readMem(0xcf0e));
        // CB DE 0003
        gbc.setState(0xafbd, 0x49d7, 0xf570, 0x8598, 0x5fc8, 0x2fa9, 0x1, 0x0);
        gbc.writeMem(0x2fa9, { 0xaa });
        gbc.writeMem(0xafbd, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x49d7, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbd));
        EXPECT(0xde, gbc.readMem(0xafbe));
        // CB DE 0006
        gbc.setState(0xb0a8, 0x4f0f, 0x3540, 0x45f7, 0xb9a0, 0xd9ce, 0x1, 0x0);
        gbc.writeMem(0xb0a8, { 0xcb, 0xde });
        gbc.writeMem(0xd9ce, { 0xab });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4f0f, gbc.sp());
        EXPECT(0xb0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a8));
        EXPECT(0xde, gbc.readMem(0xb0a9));
        EXPECT(0xab, gbc.readMem(0xd9ce));
        // CB DE 0008
        gbc.setState(0x7c5c, 0xdf37, 0x4440, 0xa814, 0xad5a, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0x2e65, { 0xf8 });
        gbc.writeMem(0x7c5c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf37, gbc.sp());
        EXPECT(0x7c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0009
        gbc.setState(0xac01, 0x36d2, 0x94f0, 0x7ed1, 0x837d, 0xad47, 0x1, 0x1);
        gbc.writeMem(0xac01, { 0xcb, 0xde });
        gbc.writeMem(0xad47, { 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x36d2, gbc.sp());
        EXPECT(0xac03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac01));
        EXPECT(0xde, gbc.readMem(0xac02));
        EXPECT(0x2d, gbc.readMem(0xad47));
        // CB DE 000A
        gbc.setState(0xb774, 0x72c3, 0x2710, 0x4ca8, 0x7173, 0x34f2, 0x0, 0x1);
        gbc.writeMem(0x34f2, { 0xc9 });
        gbc.writeMem(0xb774, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0xb776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb774));
        EXPECT(0xde, gbc.readMem(0xb775));
        // CB DE 000B
        gbc.setState(0x70a6, 0x9119, 0x7120, 0x24d1, 0xb9fa, 0x7731, 0x1, 0x0);
        gbc.writeMem(0x70a6, { 0xcb, 0xde });
        gbc.writeMem(0x7731, { 0x9a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9119, gbc.sp());
        EXPECT(0x70a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 000C
        gbc.setState(0x7486, 0x90f8, 0xce40, 0x24b9, 0x57d0, 0xa310, 0x0, 0x0);
        gbc.writeMem(0x7486, { 0xcb, 0xde });
        gbc.writeMem(0xa310, { 0xda });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa310));
        // CB DE 000E
        gbc.setState(0x1e36, 0x4bd5, 0x4800, 0x3d6e, 0xb26a, 0x9b6f, 0x1, 0x0);
        gbc.writeMem(0x1e36, { 0xcb, 0xde });
        gbc.writeMem(0x9b6f, { 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4bd5, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9b6f));
        // CB DE 0010
        gbc.setState(0x3047, 0x25f, 0x70b0, 0x7d0d, 0xb86b, 0x8e7c, 0x1, 0x0);
        gbc.writeMem(0x3047, { 0xcb, 0xde });
        gbc.writeMem(0x8e7c, { 0xc6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x25f, gbc.sp());
        EXPECT(0x3049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8e7c));
        // CB DE 0015
        gbc.setState(0x7aad, 0xb3ef, 0xd370, 0xf872, 0x2434, 0x867d, 0x1, 0x1);
        gbc.writeMem(0x7aad, { 0xcb, 0xde });
        gbc.writeMem(0x867d, { 0x9a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x7aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x867d));
        // CB DE 0016
        gbc.setState(0x6f2e, 0xc4e6, 0xed70, 0x9ac3, 0x67f0, 0xcaf9, 0x0, 0x0);
        gbc.writeMem(0x6f2e, { 0xcb, 0xde });
        gbc.writeMem(0xcaf9, { 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc4e6, gbc.sp());
        EXPECT(0x6f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcaf9));
        // CB DE 0018
        gbc.setState(0xb659, 0x33af, 0x39f0, 0xa4b7, 0xdefd, 0xe46f, 0x0, 0x1);
        gbc.writeMem(0xb659, { 0xcb, 0xde });
        gbc.writeMem(0xe46f, { 0xaa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x33af, gbc.sp());
        EXPECT(0xb65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb659));
        EXPECT(0xde, gbc.readMem(0xb65a));
        EXPECT(0xaa, gbc.readMem(0xe46f));
        // CB DE 0019
        gbc.setState(0x78bb, 0xc0d0, 0x7280, 0xf92b, 0x6ce1, 0x8064, 0x1, 0x0);
        gbc.writeMem(0x78bb, { 0xcb, 0xde });
        gbc.writeMem(0x8064, { 0x33 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0x78bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8064));
        // CB DE 001A
        gbc.setState(0xe235, 0xc0c5, 0x360, 0x17d9, 0xf163, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0xe235, { 0xcb, 0xde });
        gbc.writeMem(0xecbb, { 0x5a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0xe237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe235));
        EXPECT(0xde, gbc.readMem(0xe236));
        EXPECT(0x5a, gbc.readMem(0xecbb));
        // CB DE 001B
        gbc.setState(0x1325, 0xf69f, 0xb310, 0x23e0, 0x53b0, 0x581c, 0x1, 0x0);
        gbc.writeMem(0x1325, { 0xcb, 0xde });
        gbc.writeMem(0x581c, { 0xad });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x1327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 001C
        gbc.setState(0x2ae8, 0xa9df, 0x1690, 0xa56b, 0x9aa6, 0x9f5b, 0x0, 0x0);
        gbc.writeMem(0x2ae8, { 0xcb, 0xde });
        gbc.writeMem(0x9f5b, { 0x34 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f5b));
        // CB DE 001D
        gbc.setState(0xbacb, 0xe5d, 0x8450, 0xf57b, 0x6469, 0x3f88, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0xef });
        gbc.writeMem(0xbacb, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0xbacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacb));
        EXPECT(0xde, gbc.readMem(0xbacc));
        // CB DE 001E
        gbc.setState(0x8d8b, 0xa60c, 0x2320, 0x5663, 0x1278, 0x3b6a, 0x1, 0x0);
        gbc.writeMem(0x3b6a, { 0x3e });
        gbc.writeMem(0x8d8b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8b));
        EXPECT(0xde, gbc.readMem(0x8d8c));
        // CB DE 001F
        gbc.setState(0xc8ee, 0xa4b0, 0x7380, 0xedb7, 0xd531, 0xd384, 0x1, 0x1);
        gbc.writeMem(0xc8ee, { 0xcb, 0xde });
        gbc.writeMem(0xd384, { 0x29 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0xc8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ee));
        EXPECT(0xde, gbc.readMem(0xc8ef));
        EXPECT(0x29, gbc.readMem(0xd384));
        // CB DE 0020
        gbc.setState(0x494b, 0xe28c, 0x7410, 0x5510, 0x362d, 0xee94, 0x1, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0xde });
        gbc.writeMem(0xee94, { 0xaf });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe28c, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xee94));
        // CB DE 0021
        gbc.setState(0xab00, 0xe34e, 0x7f50, 0xa5c4, 0xc6fc, 0xa667, 0x1, 0x1);
        gbc.writeMem(0xa667, { 0x54 });
        gbc.writeMem(0xab00, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe34e, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa667));
        EXPECT(0xcb, gbc.readMem(0xab00));
        EXPECT(0xde, gbc.readMem(0xab01));
        // CB DE 0022
        gbc.setState(0xc373, 0x6575, 0x8620, 0x3e30, 0xc610, 0x3bc9, 0x0, 0x0);
        gbc.writeMem(0x3bc9, { 0xf });
        gbc.writeMem(0xc373, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6575, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc373));
        EXPECT(0xde, gbc.readMem(0xc374));
        // CB DE 0024
        gbc.setState(0x12ad, 0x2ef3, 0xd870, 0x267, 0x8b4, 0xf5a9, 0x0, 0x0);
        gbc.writeMem(0x12ad, { 0xcb, 0xde });
        gbc.writeMem(0xf5a9, { 0xb5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x12af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xf5a9));
        // CB DE 0025
        gbc.setState(0xeb5b, 0xef78, 0xe8a0, 0x6fd, 0xd6a0, 0xe1f3, 0x1, 0x1);
        gbc.writeMem(0xe1f3, { 0xe7 });
        gbc.writeMem(0xeb5b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xef78, gbc.sp());
        EXPECT(0xeb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xe1f3));
        EXPECT(0xcb, gbc.readMem(0xeb5b));
        EXPECT(0xde, gbc.readMem(0xeb5c));
        // CB DE 0026
        gbc.setState(0x809d, 0x1ca2, 0xc250, 0xf9f0, 0x5dad, 0xac4d, 0x1, 0x1);
        gbc.writeMem(0x809d, { 0xcb, 0xde });
        gbc.writeMem(0xac4d, { 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0x809f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809d));
        EXPECT(0xde, gbc.readMem(0x809e));
        EXPECT(0xff, gbc.readMem(0xac4d));
        // CB DE 0029
        gbc.setState(0x3809, 0x41fb, 0xafe0, 0x4c1b, 0x1e25, 0xdf75, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0xde });
        gbc.writeMem(0xdf75, { 0x87 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x41fb, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdf75));
        // CB DE 002A
        gbc.setState(0x62a4, 0x19a9, 0x5830, 0x31dc, 0xa8de, 0x2e40, 0x0, 0x0);
        gbc.writeMem(0x2e40, { 0xeb });
        gbc.writeMem(0x62a4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x19a9, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 002B
        gbc.setState(0x963a, 0xb12d, 0x3150, 0xe1dc, 0x60c9, 0xe397, 0x0, 0x1);
        gbc.writeMem(0x963a, { 0xcb, 0xde });
        gbc.writeMem(0xe397, { 0x2e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb12d, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963a));
        EXPECT(0xde, gbc.readMem(0x963b));
        EXPECT(0x2e, gbc.readMem(0xe397));
        // CB DE 002D
        gbc.setState(0x7b12, 0x17af, 0x15f0, 0x7d11, 0xa17f, 0xb405, 0x0, 0x0);
        gbc.writeMem(0x7b12, { 0xcb, 0xde });
        gbc.writeMem(0xb405, { 0x24 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0x7b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb405));
        // CB DE 002E
        gbc.setState(0x79a1, 0xcd1b, 0x15f0, 0xfd7b, 0xa63b, 0x30ac, 0x1, 0x1);
        gbc.writeMem(0x30ac, { 0x8f });
        gbc.writeMem(0x79a1, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0x79a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 002F
        gbc.setState(0x5e27, 0xba5d, 0xdaf0, 0xea01, 0x114, 0xaaac, 0x1, 0x0);
        gbc.writeMem(0x5e27, { 0xcb, 0xde });
        gbc.writeMem(0xaaac, { 0x97 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x5e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaaac));
        // CB DE 0030
        gbc.setState(0xe400, 0x7fef, 0x5860, 0x2b28, 0x90e9, 0x8386, 0x1, 0x0);
        gbc.writeMem(0x8386, { 0x61 });
        gbc.writeMem(0xe400, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8386));
        EXPECT(0xcb, gbc.readMem(0xe400));
        EXPECT(0xde, gbc.readMem(0xe401));
        // CB DE 0031
        gbc.setState(0x5e6b, 0xfb39, 0x38a0, 0xe265, 0x2214, 0x74e5, 0x1, 0x0);
        gbc.writeMem(0x5e6b, { 0xcb, 0xde });
        gbc.writeMem(0x74e5, { 0x4c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0032
        gbc.setState(0xeb0f, 0x80a5, 0x1210, 0x14bf, 0x226f, 0x9ad6, 0x0, 0x1);
        gbc.writeMem(0x9ad6, { 0xbe });
        gbc.writeMem(0xeb0f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9ad6));
        EXPECT(0xcb, gbc.readMem(0xeb0f));
        EXPECT(0xde, gbc.readMem(0xeb10));
        // CB DE 0033
        gbc.setState(0x3d2b, 0x6866, 0x9640, 0x9a6f, 0x84b, 0x97ce, 0x1, 0x0);
        gbc.writeMem(0x3d2b, { 0xcb, 0xde });
        gbc.writeMem(0x97ce, { 0xa2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x97ce));
        // CB DE 0034
        gbc.setState(0xd2c5, 0xac41, 0x2650, 0x570b, 0xc875, 0x16cd, 0x0, 0x0);
        gbc.writeMem(0x16cd, { 0x8 });
        gbc.writeMem(0xd2c5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac41, gbc.sp());
        EXPECT(0xd2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c5));
        EXPECT(0xde, gbc.readMem(0xd2c6));
        // CB DE 0035
        gbc.setState(0xeb56, 0x15e3, 0x91d0, 0x5bdd, 0x23a5, 0x27cf, 0x1, 0x1);
        gbc.writeMem(0x27cf, { 0xef });
        gbc.writeMem(0xeb56, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x15e3, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb56));
        EXPECT(0xde, gbc.readMem(0xeb57));
        // CB DE 0036
        gbc.setState(0x8fea, 0xc115, 0x30c0, 0xb440, 0xe508, 0x8b04, 0x1, 0x0);
        gbc.writeMem(0x8b04, { 0x21 });
        gbc.writeMem(0x8fea, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc115, gbc.sp());
        EXPECT(0x8fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8b04));
        EXPECT(0xcb, gbc.readMem(0x8fea));
        EXPECT(0xde, gbc.readMem(0x8feb));
        // CB DE 0037
        gbc.setState(0xda3b, 0x4f70, 0xe470, 0xa91a, 0x2c9e, 0x9087, 0x1, 0x0);
        gbc.writeMem(0x9087, { 0x3f });
        gbc.writeMem(0xda3b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9087));
        EXPECT(0xcb, gbc.readMem(0xda3b));
        EXPECT(0xde, gbc.readMem(0xda3c));
        // CB DE 0039
        gbc.setState(0x5d9b, 0x69c4, 0x8d10, 0x7b30, 0x42a7, 0xaddd, 0x1, 0x0);
        gbc.writeMem(0x5d9b, { 0xcb, 0xde });
        gbc.writeMem(0xaddd, { 0x9a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x5d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xaddd));
        // CB DE 003A
        gbc.setState(0x81a, 0x765b, 0x8800, 0x68c4, 0xcf8, 0xf70e, 0x1, 0x0);
        gbc.writeMem(0x81a, { 0xcb, 0xde });
        gbc.writeMem(0xf70e, { 0xc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x765b, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xf70e));
        // CB DE 003D
        gbc.setState(0x547e, 0xf37d, 0x2e60, 0xf6da, 0xbc02, 0xc110, 0x0, 0x0);
        gbc.writeMem(0x547e, { 0xcb, 0xde });
        gbc.writeMem(0xc110, { 0xd0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc110));
        // CB DE 003E
        gbc.setState(0x6f7, 0xa1f9, 0x79f0, 0xb145, 0xb596, 0xa7ac, 0x1, 0x1);
        gbc.writeMem(0x6f7, { 0xcb, 0xde });
        gbc.writeMem(0xa7ac, { 0x6c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0x6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa7ac));
        // CB DE 003F
        gbc.setState(0x5bb8, 0x6596, 0x3f20, 0x9e46, 0xddb4, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0xcb, 0xde });
        gbc.writeMem(0xdd7e, { 0xb1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6596, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xdd7e));
        // CB DE 0041
        gbc.setState(0x3a14, 0x296e, 0x2310, 0x3a48, 0x14bd, 0x452d, 0x0, 0x0);
        gbc.writeMem(0x3a14, { 0xcb, 0xde });
        gbc.writeMem(0x452d, { 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x296e, gbc.sp());
        EXPECT(0x3a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0042
        gbc.setState(0xd120, 0xf562, 0xe100, 0x456, 0x22ef, 0x1730, 0x0, 0x1);
        gbc.writeMem(0x1730, { 0x88 });
        gbc.writeMem(0xd120, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf562, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd120));
        EXPECT(0xde, gbc.readMem(0xd121));
        // CB DE 0043
        gbc.setState(0x276f, 0xab38, 0x9ef0, 0x24ee, 0x74d9, 0x55d1, 0x0, 0x0);
        gbc.writeMem(0x276f, { 0xcb, 0xde });
        gbc.writeMem(0x55d1, { 0xf8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xab38, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0044
        gbc.setState(0x57da, 0x97bc, 0xeff0, 0xf983, 0xa1a, 0x94e3, 0x1, 0x0);
        gbc.writeMem(0x57da, { 0xcb, 0xde });
        gbc.writeMem(0x94e3, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x94e3));
        // CB DE 0046
        gbc.setState(0x9b98, 0xdf1e, 0x6850, 0x7236, 0x3ad3, 0xcd78, 0x1, 0x0);
        gbc.writeMem(0x9b98, { 0xcb, 0xde });
        gbc.writeMem(0xcd78, { 0x6d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x9b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b98));
        EXPECT(0xde, gbc.readMem(0x9b99));
        EXPECT(0x6d, gbc.readMem(0xcd78));
        // CB DE 0047
        gbc.setState(0x15cf, 0x562b, 0x12b0, 0xb402, 0x83e7, 0x2c9e, 0x0, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0xde });
        gbc.writeMem(0x2c9e, { 0xea });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x562b, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0048
        gbc.setState(0x23aa, 0x8398, 0x7b90, 0xe7c6, 0xeb60, 0x5b56, 0x0, 0x1);
        gbc.writeMem(0x23aa, { 0xcb, 0xde });
        gbc.writeMem(0x5b56, { 0x28 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8398, gbc.sp());
        EXPECT(0x23ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0049
        gbc.setState(0xc772, 0x2992, 0x6fe0, 0xbf5, 0x2d2f, 0x3d0d, 0x0, 0x0);
        gbc.writeMem(0x3d0d, { 0xaf });
        gbc.writeMem(0xc772, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2992, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc772));
        EXPECT(0xde, gbc.readMem(0xc773));
        // CB DE 004A
        gbc.setState(0xcef1, 0x1392, 0x2f20, 0xbccd, 0x5765, 0xeae7, 0x0, 0x0);
        gbc.writeMem(0xcef1, { 0xcb, 0xde });
        gbc.writeMem(0xeae7, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef1));
        EXPECT(0xde, gbc.readMem(0xcef2));
        EXPECT(0x8c, gbc.readMem(0xeae7));
        // CB DE 004B
        gbc.setState(0xe698, 0xaf42, 0xd4a0, 0x754d, 0x5b4, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x5632, { 0x1f });
        gbc.writeMem(0xe698, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaf42, gbc.sp());
        EXPECT(0xe69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe698));
        EXPECT(0xde, gbc.readMem(0xe699));
        // CB DE 004C
        gbc.setState(0x9571, 0x6e9e, 0xe720, 0xa428, 0x1f3e, 0xf120, 0x0, 0x0);
        gbc.writeMem(0x9571, { 0xcb, 0xde });
        gbc.writeMem(0xf120, { 0x95 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6e9e, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9571));
        EXPECT(0xde, gbc.readMem(0x9572));
        EXPECT(0x9d, gbc.readMem(0xf120));
        // CB DE 004D
        gbc.setState(0xe3b5, 0x250b, 0x7680, 0x103a, 0xe79e, 0xd29d, 0x0, 0x0);
        gbc.writeMem(0xd29d, { 0x65 });
        gbc.writeMem(0xe3b5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x250b, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd29d));
        EXPECT(0xcb, gbc.readMem(0xe3b5));
        EXPECT(0xde, gbc.readMem(0xe3b6));
        // CB DE 004F
        gbc.setState(0xa994, 0x6e4, 0x6a40, 0x4d26, 0x5c54, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0xa994, { 0xcb, 0xde });
        gbc.writeMem(0xaeaa, { 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6e4, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa994));
        EXPECT(0xde, gbc.readMem(0xa995));
        EXPECT(0x9, gbc.readMem(0xaeaa));
        // CB DE 0052
        gbc.setState(0x3e67, 0x34c6, 0xfb70, 0xc8ea, 0xf6f4, 0xc081, 0x0, 0x0);
        gbc.writeMem(0x3e67, { 0xcb, 0xde });
        gbc.writeMem(0xc081, { 0x3e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x34c6, gbc.sp());
        EXPECT(0x3e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc081));
        // CB DE 0053
        gbc.setState(0x2ac0, 0xa523, 0xfd0, 0x4418, 0xe38d, 0x219d, 0x0, 0x0);
        gbc.writeMem(0x219d, { 0x6c });
        gbc.writeMem(0x2ac0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0054
        gbc.setState(0x5eac, 0xecee, 0x6160, 0xc79, 0xb8eb, 0xe73f, 0x1, 0x1);
        gbc.writeMem(0x5eac, { 0xcb, 0xde });
        gbc.writeMem(0xe73f, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xecee, gbc.sp());
        EXPECT(0x5eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe73f));
        // CB DE 0056
        gbc.setState(0xe4c, 0x532e, 0x96a0, 0x4439, 0xe601, 0x475a, 0x1, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0xde });
        gbc.writeMem(0x475a, { 0xed });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0058
        gbc.setState(0x4899, 0x1bbb, 0x5c80, 0x7c86, 0xdc9f, 0x4ef, 0x0, 0x0);
        gbc.writeMem(0x4ef, { 0x5a });
        gbc.writeMem(0x4899, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 005D
        gbc.setState(0x7a87, 0xf6c5, 0xca10, 0x566, 0xa4e7, 0xaa93, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xde });
        gbc.writeMem(0xaa93, { 0xb2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaa93));
        // CB DE 005E
        gbc.setState(0xd724, 0xf37c, 0xc70, 0x608e, 0x80ee, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0xaa2e, { 0xd0 });
        gbc.writeMem(0xd724, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf37c, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xaa2e));
        EXPECT(0xcb, gbc.readMem(0xd724));
        EXPECT(0xde, gbc.readMem(0xd725));
        // CB DE 005F
        gbc.setState(0x32a5, 0x8eff, 0xbff0, 0x1cfa, 0x4bd0, 0xd07b, 0x0, 0x1);
        gbc.writeMem(0x32a5, { 0xcb, 0xde });
        gbc.writeMem(0xd07b, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0x32a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd07b));
        // CB DE 0060
        gbc.setState(0xa467, 0x687b, 0x6770, 0x93fa, 0x2504, 0x9333, 0x0, 0x1);
        gbc.writeMem(0x9333, { 0x43 });
        gbc.writeMem(0xa467, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x687b, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9333));
        EXPECT(0xcb, gbc.readMem(0xa467));
        EXPECT(0xde, gbc.readMem(0xa468));
        // CB DE 0061
        gbc.setState(0x20a2, 0x5903, 0xa1b0, 0xcc21, 0x6fe0, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0x20a2, { 0xcb, 0xde });
        gbc.writeMem(0xd6c1, { 0x82 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5903, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd6c1));
        // CB DE 0062
        gbc.setState(0x336b, 0x9ca5, 0xbd10, 0x68ee, 0x1fad, 0x7f15, 0x1, 0x0);
        gbc.writeMem(0x336b, { 0xcb, 0xde });
        gbc.writeMem(0x7f15, { 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0063
        gbc.setState(0x6616, 0x84c0, 0x97c0, 0xd388, 0x4298, 0xe02a, 0x0, 0x0);
        gbc.writeMem(0x6616, { 0xcb, 0xde });
        gbc.writeMem(0xe02a, { 0xfb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x84c0, gbc.sp());
        EXPECT(0x6618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xe02a));
        // CB DE 0065
        gbc.setState(0x7114, 0xc76e, 0x1000, 0xd950, 0x8fc0, 0x89e5, 0x0, 0x0);
        gbc.writeMem(0x7114, { 0xcb, 0xde });
        gbc.writeMem(0x89e5, { 0x99 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc76e, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x89e5));
        // CB DE 0067
        gbc.setState(0x54c1, 0xacc8, 0xbf00, 0x4698, 0xc06a, 0xa0c9, 0x0, 0x1);
        gbc.writeMem(0x54c1, { 0xcb, 0xde });
        gbc.writeMem(0xa0c9, { 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xacc8, gbc.sp());
        EXPECT(0x54c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa0c9));
        // CB DE 006A
        gbc.setState(0x2dea, 0x55fe, 0xa8d0, 0xb046, 0xc567, 0x74f0, 0x0, 0x1);
        gbc.writeMem(0x2dea, { 0xcb, 0xde });
        gbc.writeMem(0x74f0, { 0x5a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0x2dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 006B
        gbc.setState(0x3c74, 0x7c46, 0x56c0, 0xfed4, 0x522f, 0x574b, 0x0, 0x1);
        gbc.writeMem(0x3c74, { 0xcb, 0xde });
        gbc.writeMem(0x574b, { 0xce });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7c46, gbc.sp());
        EXPECT(0x3c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 006D
        gbc.setState(0x2533, 0xd429, 0x5720, 0xdb06, 0x7629, 0x960e, 0x1, 0x1);
        gbc.writeMem(0x2533, { 0xcb, 0xde });
        gbc.writeMem(0x960e, { 0x3b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd429, gbc.sp());
        EXPECT(0x2535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x960e));
        // CB DE 0070
        gbc.setState(0xcc16, 0x31fe, 0x1870, 0x6326, 0x1576, 0x25a, 0x0, 0x0);
        gbc.writeMem(0x25a, { 0xfe });
        gbc.writeMem(0xcc16, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x31fe, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0xde, gbc.readMem(0xcc17));
        // CB DE 0071
        gbc.setState(0x84bc, 0xa3c2, 0x690, 0xda0d, 0xd757, 0xe893, 0x1, 0x1);
        gbc.writeMem(0x84bc, { 0xcb, 0xde });
        gbc.writeMem(0xe893, { 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0x84be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bc));
        EXPECT(0xde, gbc.readMem(0x84bd));
        EXPECT(0xac, gbc.readMem(0xe893));
        // CB DE 0074
        gbc.setState(0x5473, 0xc852, 0xc490, 0x72fd, 0xaceb, 0xd912, 0x1, 0x0);
        gbc.writeMem(0x5473, { 0xcb, 0xde });
        gbc.writeMem(0xd912, { 0x91 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc852, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xd912));
        // CB DE 0075
        gbc.setState(0xc2fa, 0xbe00, 0xe4d0, 0x258f, 0x4db3, 0xe8e0, 0x1, 0x1);
        gbc.writeMem(0xc2fa, { 0xcb, 0xde });
        gbc.writeMem(0xe8e0, { 0x21 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe00, gbc.sp());
        EXPECT(0xc2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fa));
        EXPECT(0xde, gbc.readMem(0xc2fb));
        EXPECT(0x29, gbc.readMem(0xe8e0));
        // CB DE 0076
        gbc.setState(0xa108, 0x9acb, 0xafc0, 0x32a8, 0xabec, 0xe933, 0x1, 0x0);
        gbc.writeMem(0xa108, { 0xcb, 0xde });
        gbc.writeMem(0xe933, { 0xcd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xa10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa108));
        EXPECT(0xde, gbc.readMem(0xa109));
        EXPECT(0xcd, gbc.readMem(0xe933));
        // CB DE 0077
        gbc.setState(0x5a83, 0x1780, 0xd1e0, 0x8824, 0x290a, 0x8a50, 0x0, 0x1);
        gbc.writeMem(0x5a83, { 0xcb, 0xde });
        gbc.writeMem(0x8a50, { 0x33 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1780, gbc.sp());
        EXPECT(0x5a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a50));
        // CB DE 0078
        gbc.setState(0xad8c, 0xe12e, 0xcc90, 0xc8f6, 0x3ebc, 0x59f6, 0x0, 0x1);
        gbc.writeMem(0x59f6, { 0xa8 });
        gbc.writeMem(0xad8c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8c));
        EXPECT(0xde, gbc.readMem(0xad8d));
        // CB DE 0079
        gbc.setState(0xace5, 0x486c, 0x6d0, 0xf7b2, 0x9808, 0xa444, 0x0, 0x0);
        gbc.writeMem(0xa444, { 0xf8 });
        gbc.writeMem(0xace5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0xace7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa444));
        EXPECT(0xcb, gbc.readMem(0xace5));
        EXPECT(0xde, gbc.readMem(0xace6));
        // CB DE 007A
        gbc.setState(0x8052, 0x5273, 0xfc70, 0xdf9, 0x7f7e, 0x2b3a, 0x0, 0x0);
        gbc.writeMem(0x2b3a, { 0x7f });
        gbc.writeMem(0x8052, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5273, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8052));
        EXPECT(0xde, gbc.readMem(0x8053));
        // CB DE 007C
        gbc.setState(0x1e54, 0x8cee, 0xb440, 0x61e5, 0x4756, 0x9442, 0x0, 0x0);
        gbc.writeMem(0x1e54, { 0xcb, 0xde });
        gbc.writeMem(0x9442, { 0xbc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0x1e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9442));
        // CB DE 007D
        gbc.setState(0x9e83, 0x5444, 0xa270, 0xb07e, 0x55cd, 0xaa6e, 0x0, 0x1);
        gbc.writeMem(0x9e83, { 0xcb, 0xde });
        gbc.writeMem(0xaa6e, { 0xbe });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5444, gbc.sp());
        EXPECT(0x9e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e83));
        EXPECT(0xde, gbc.readMem(0x9e84));
        EXPECT(0xbe, gbc.readMem(0xaa6e));
        // CB DE 007E
        gbc.setState(0x38ab, 0xde93, 0x2910, 0x3b4a, 0x4d07, 0x137b, 0x0, 0x0);
        gbc.writeMem(0x137b, { 0x8f });
        gbc.writeMem(0x38ab, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 007F
        gbc.setState(0x61b8, 0x294a, 0x29a0, 0x8fdc, 0x7078, 0xd92, 0x0, 0x0);
        gbc.writeMem(0xd92, { 0xcd });
        gbc.writeMem(0x61b8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x294a, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0080
        gbc.setState(0xa42c, 0x6009, 0x5900, 0x2290, 0xcf43, 0xdedc, 0x0, 0x0);
        gbc.writeMem(0xa42c, { 0xcb, 0xde });
        gbc.writeMem(0xdedc, { 0x69 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6009, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42c));
        EXPECT(0xde, gbc.readMem(0xa42d));
        EXPECT(0x69, gbc.readMem(0xdedc));
        // CB DE 0081
        gbc.setState(0x2191, 0x3487, 0x6950, 0xf3fd, 0x9cd6, 0xb9ed, 0x1, 0x0);
        gbc.writeMem(0x2191, { 0xcb, 0xde });
        gbc.writeMem(0xb9ed, { 0xa0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xb9ed));
        // CB DE 0082
        gbc.setState(0x227c, 0xa6d9, 0xc0d0, 0xe9fe, 0x2fe1, 0xf730, 0x1, 0x1);
        gbc.writeMem(0x227c, { 0xcb, 0xde });
        gbc.writeMem(0xf730, { 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa6d9, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xf730));
        // CB DE 0083
        gbc.setState(0x3b53, 0xf7ff, 0xb30, 0xf8ed, 0x836d, 0x980e, 0x0, 0x0);
        gbc.writeMem(0x3b53, { 0xcb, 0xde });
        gbc.writeMem(0x980e, { 0x39 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf7ff, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x980e));
        // CB DE 0084
        gbc.setState(0xe112, 0x6498, 0x2500, 0xf1bb, 0x59bd, 0x117b, 0x1, 0x0);
        gbc.writeMem(0x117b, { 0xcf });
        gbc.writeMem(0xe112, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0xde, gbc.readMem(0xe113));
        // CB DE 0085
        gbc.setState(0x1c7c, 0x9c2b, 0x3750, 0x81f3, 0xd82e, 0xe721, 0x0, 0x1);
        gbc.writeMem(0x1c7c, { 0xcb, 0xde });
        gbc.writeMem(0xe721, { 0x48 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9c2b, gbc.sp());
        EXPECT(0x1c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe721));
        // CB DE 0086
        gbc.setState(0x3e78, 0xcc64, 0x6da0, 0x33, 0xbff, 0xbd7a, 0x0, 0x1);
        gbc.writeMem(0x3e78, { 0xcb, 0xde });
        gbc.writeMem(0xbd7a, { 0x2c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcc64, gbc.sp());
        EXPECT(0x3e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbd7a));
        // CB DE 0088
        gbc.setState(0xaef1, 0x4515, 0x8da0, 0x864f, 0xba0, 0xccca, 0x0, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0xde });
        gbc.writeMem(0xccca, { 0x32 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef1));
        EXPECT(0xde, gbc.readMem(0xaef2));
        EXPECT(0x3a, gbc.readMem(0xccca));
        // CB DE 008A
        gbc.setState(0x9f2, 0xe006, 0xd640, 0x75b6, 0x677b, 0xf77c, 0x1, 0x0);
        gbc.writeMem(0x9f2, { 0xcb, 0xde });
        gbc.writeMem(0xf77c, { 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe006, gbc.sp());
        EXPECT(0x9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xf77c));
        // CB DE 008B
        gbc.setState(0xc2b2, 0xfc8a, 0x28c0, 0x4b5, 0xd203, 0x4c20, 0x1, 0x1);
        gbc.writeMem(0x4c20, { 0x8b });
        gbc.writeMem(0xc2b2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc8a, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b2));
        EXPECT(0xde, gbc.readMem(0xc2b3));
        // CB DE 008C
        gbc.setState(0x36b8, 0xec8f, 0x2c00, 0x5dbd, 0x9d01, 0x7a4d, 0x1, 0x1);
        gbc.writeMem(0x36b8, { 0xcb, 0xde });
        gbc.writeMem(0x7a4d, { 0x2a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 008D
        gbc.setState(0xee7f, 0x3e64, 0xe9c0, 0xcba7, 0x24e9, 0x9943, 0x1, 0x1);
        gbc.writeMem(0x9943, { 0xb7 });
        gbc.writeMem(0xee7f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3e64, gbc.sp());
        EXPECT(0xee81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9943));
        EXPECT(0xcb, gbc.readMem(0xee7f));
        EXPECT(0xde, gbc.readMem(0xee80));
        // CB DE 008E
        gbc.setState(0xbe23, 0xe93c, 0x2030, 0xb312, 0xf496, 0xd16f, 0x1, 0x1);
        gbc.writeMem(0xbe23, { 0xcb, 0xde });
        gbc.writeMem(0xd16f, { 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe93c, gbc.sp());
        EXPECT(0xbe25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe23));
        EXPECT(0xde, gbc.readMem(0xbe24));
        EXPECT(0x3d, gbc.readMem(0xd16f));
        // CB DE 008F
        gbc.setState(0xa1e5, 0x1ff7, 0x9fc0, 0xc8f, 0x42, 0x6ce0, 0x0, 0x1);
        gbc.writeMem(0x6ce0, { 0xc });
        gbc.writeMem(0xa1e5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1ff7, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e5));
        EXPECT(0xde, gbc.readMem(0xa1e6));
        // CB DE 0092
        gbc.setState(0xbe84, 0x259d, 0x86f0, 0x46e5, 0xaf35, 0xd275, 0x0, 0x0);
        gbc.writeMem(0xbe84, { 0xcb, 0xde });
        gbc.writeMem(0xd275, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x259d, gbc.sp());
        EXPECT(0xbe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe84));
        EXPECT(0xde, gbc.readMem(0xbe85));
        EXPECT(0xb9, gbc.readMem(0xd275));
        // CB DE 0093
        gbc.setState(0xa233, 0xe363, 0xa0f0, 0xc4ec, 0xf5ae, 0x939f, 0x0, 0x0);
        gbc.writeMem(0x939f, { 0x1f });
        gbc.writeMem(0xa233, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe363, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x939f));
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0xde, gbc.readMem(0xa234));
        // CB DE 0096
        gbc.setState(0xdc56, 0x45e0, 0xd4f0, 0x829a, 0x8d21, 0x90db, 0x0, 0x0);
        gbc.writeMem(0x90db, { 0xcf });
        gbc.writeMem(0xdc56, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0xdc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x90db));
        EXPECT(0xcb, gbc.readMem(0xdc56));
        EXPECT(0xde, gbc.readMem(0xdc57));
        // CB DE 0098
        gbc.setState(0x599e, 0x1f6f, 0x5da0, 0x5172, 0x856d, 0x7181, 0x1, 0x0);
        gbc.writeMem(0x599e, { 0xcb, 0xde });
        gbc.writeMem(0x7181, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1f6f, gbc.sp());
        EXPECT(0x59a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0099
        gbc.setState(0x4459, 0xac3, 0x33e0, 0xd250, 0x50a5, 0xa671, 0x0, 0x0);
        gbc.writeMem(0x4459, { 0xcb, 0xde });
        gbc.writeMem(0xa671, { 0x76 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa671));
        // CB DE 009A
        gbc.setState(0xd12d, 0x4b01, 0xcfc0, 0xb452, 0x932a, 0xdc5c, 0x0, 0x1);
        gbc.writeMem(0xd12d, { 0xcb, 0xde });
        gbc.writeMem(0xdc5c, { 0x46 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4b01, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12d));
        EXPECT(0xde, gbc.readMem(0xd12e));
        EXPECT(0x4e, gbc.readMem(0xdc5c));
        // CB DE 009C
        gbc.setState(0x8caf, 0x4c35, 0x8d70, 0xd085, 0x4c6d, 0xacc0, 0x0, 0x1);
        gbc.writeMem(0x8caf, { 0xcb, 0xde });
        gbc.writeMem(0xacc0, { 0xef });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x8cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8caf));
        EXPECT(0xde, gbc.readMem(0x8cb0));
        EXPECT(0xef, gbc.readMem(0xacc0));
        // CB DE 009D
        gbc.setState(0xf45, 0x81a0, 0x1220, 0x95c0, 0x2924, 0xc7fd, 0x1, 0x0);
        gbc.writeMem(0xf45, { 0xcb, 0xde });
        gbc.writeMem(0xc7fd, { 0x3e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x81a0, gbc.sp());
        EXPECT(0xf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc7fd));
        // CB DE 009F
        gbc.setState(0x585, 0xa0e0, 0x8f90, 0x8e5b, 0x524d, 0xd084, 0x0, 0x0);
        gbc.writeMem(0x585, { 0xcb, 0xde });
        gbc.writeMem(0xd084, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa0e0, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd084));
        // CB DE 00A0
        gbc.setState(0xe906, 0xc5e6, 0x53a0, 0xa002, 0x1541, 0xc70c, 0x0, 0x0);
        gbc.writeMem(0xc70c, { 0x30 });
        gbc.writeMem(0xe906, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0xe908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc70c));
        EXPECT(0xcb, gbc.readMem(0xe906));
        EXPECT(0xde, gbc.readMem(0xe907));
        // CB DE 00A2
        gbc.setState(0x4ed0, 0xbde7, 0x5bd0, 0x7d80, 0x749b, 0x8c14, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0xcb, 0xde });
        gbc.writeMem(0x8c14, { 0x3a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0x4ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8c14));
        // CB DE 00A3
        gbc.setState(0xcf47, 0xea73, 0x5c90, 0x29c1, 0x25bf, 0xe454, 0x0, 0x0);
        gbc.writeMem(0xcf47, { 0xcb, 0xde });
        gbc.writeMem(0xe454, { 0xeb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf47));
        EXPECT(0xde, gbc.readMem(0xcf48));
        EXPECT(0xeb, gbc.readMem(0xe454));
        // CB DE 00A6
        gbc.setState(0x6697, 0x15cb, 0x6ee0, 0x2aaa, 0xf48, 0x95a7, 0x1, 0x1);
        gbc.writeMem(0x6697, { 0xcb, 0xde });
        gbc.writeMem(0x95a7, { 0x18 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x15cb, gbc.sp());
        EXPECT(0x6699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x95a7));
        // CB DE 00A7
        gbc.setState(0x1675, 0xed14, 0xfde0, 0xb53, 0xcaa7, 0x878, 0x1, 0x0);
        gbc.writeMem(0x878, { 0x3c });
        gbc.writeMem(0x1675, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0x1677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00A9
        gbc.setState(0x235f, 0xd446, 0x4790, 0x26e4, 0x4434, 0xe085, 0x0, 0x1);
        gbc.writeMem(0x235f, { 0xcb, 0xde });
        gbc.writeMem(0xe085, { 0x5b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe085));
        // CB DE 00AA
        gbc.setState(0xa6b9, 0xad02, 0xdc90, 0x9992, 0xc05e, 0x54d6, 0x1, 0x0);
        gbc.writeMem(0x54d6, { 0x8c });
        gbc.writeMem(0xa6b9, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0xa6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b9));
        EXPECT(0xde, gbc.readMem(0xa6ba));
        // CB DE 00AB
        gbc.setState(0xd33a, 0xf7e4, 0xe70, 0x4a9a, 0x8434, 0x8043, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xb8 });
        gbc.writeMem(0xd33a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8043));
        EXPECT(0xcb, gbc.readMem(0xd33a));
        EXPECT(0xde, gbc.readMem(0xd33b));
        // CB DE 00AC
        gbc.setState(0x87fe, 0x6ea4, 0x1a00, 0xcc45, 0x9daa, 0xd344, 0x1, 0x1);
        gbc.writeMem(0x87fe, { 0xcb, 0xde });
        gbc.writeMem(0xd344, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0x8800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fe));
        EXPECT(0xde, gbc.readMem(0x87ff));
        EXPECT(0xbf, gbc.readMem(0xd344));
        // CB DE 00AD
        gbc.setState(0x5dbe, 0xf7f6, 0xdd40, 0x6d24, 0xc6c5, 0x962, 0x1, 0x1);
        gbc.writeMem(0x962, { 0x59 });
        gbc.writeMem(0x5dbe, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x5dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00AE
        gbc.setState(0xd718, 0x9bcc, 0xae10, 0xddd9, 0x60a8, 0xb888, 0x1, 0x1);
        gbc.writeMem(0xb888, { 0x60 });
        gbc.writeMem(0xd718, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9bcc, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb888));
        EXPECT(0xcb, gbc.readMem(0xd718));
        EXPECT(0xde, gbc.readMem(0xd719));
        // CB DE 00B0
        gbc.setState(0xc127, 0xd3dc, 0x1070, 0x7aba, 0x43ee, 0xf43e, 0x1, 0x1);
        gbc.writeMem(0xc127, { 0xcb, 0xde });
        gbc.writeMem(0xf43e, { 0x86 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc127));
        EXPECT(0xde, gbc.readMem(0xc128));
        EXPECT(0x8e, gbc.readMem(0xf43e));
        // CB DE 00B1
        gbc.setState(0xa526, 0x7d25, 0x4ba0, 0xc7eb, 0xe0cf, 0x86ba, 0x0, 0x1);
        gbc.writeMem(0x86ba, { 0xf4 });
        gbc.writeMem(0xa526, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7d25, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x86ba));
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0xde, gbc.readMem(0xa527));
        // CB DE 00B2
        gbc.setState(0x26a0, 0xbe74, 0x8880, 0x4817, 0xf20d, 0x75f7, 0x1, 0x0);
        gbc.writeMem(0x26a0, { 0xcb, 0xde });
        gbc.writeMem(0x75f7, { 0xe8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00B4
        gbc.setState(0x43ee, 0x800c, 0x3fe0, 0x33e6, 0x6d3f, 0xcf50, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0xcb, 0xde });
        gbc.writeMem(0xcf50, { 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xcf50));
        // CB DE 00B5
        gbc.setState(0xccc0, 0xd91f, 0x1e20, 0x629a, 0xd485, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0xccc0, { 0xcb, 0xde });
        gbc.writeMem(0xfafc, { 0xaf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0xccc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc0));
        EXPECT(0xde, gbc.readMem(0xccc1));
        EXPECT(0xaf, gbc.readMem(0xfafc));
        // CB DE 00B6
        gbc.setState(0x1df0, 0xa234, 0x92e0, 0x9ff0, 0x74d0, 0x8ee7, 0x1, 0x1);
        gbc.writeMem(0x1df0, { 0xcb, 0xde });
        gbc.writeMem(0x8ee7, { 0xe1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8ee7));
        // CB DE 00B7
        gbc.setState(0xba5c, 0xcd29, 0x4c50, 0xd826, 0xdbca, 0x13e0, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0x9a });
        gbc.writeMem(0xba5c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0xba5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5c));
        EXPECT(0xde, gbc.readMem(0xba5d));
        // CB DE 00B8
        gbc.setState(0xd648, 0x1b30, 0x6c70, 0xc799, 0x845b, 0x724f, 0x0, 0x0);
        gbc.writeMem(0x724f, { 0x68 });
        gbc.writeMem(0xd648, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0xd64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd648));
        EXPECT(0xde, gbc.readMem(0xd649));
        // CB DE 00B9
        gbc.setState(0x311c, 0xbe53, 0x9770, 0x18a2, 0xd7ba, 0xdc54, 0x0, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0xde });
        gbc.writeMem(0xdc54, { 0xf6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdc54));
        // CB DE 00BA
        gbc.setState(0xda5, 0xf3da, 0xb2f0, 0x506a, 0x94e7, 0xfdd8, 0x0, 0x0);
        gbc.writeMem(0xda5, { 0xcb, 0xde });
        gbc.writeMem(0xfdd8, { 0x5f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xfdd8));
        // CB DE 00BC
        gbc.setState(0xa0ab, 0xb27, 0x48e0, 0x905f, 0x968f, 0xf9aa, 0x1, 0x1);
        gbc.writeMem(0xa0ab, { 0xcb, 0xde });
        gbc.writeMem(0xf9aa, { 0x6b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb27, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ab));
        EXPECT(0xde, gbc.readMem(0xa0ac));
        EXPECT(0x6b, gbc.readMem(0xf9aa));
        // CB DE 00BD
        gbc.setState(0x4e8f, 0x80f6, 0x7c90, 0xb5da, 0xec86, 0xf5, 0x1, 0x1);
        gbc.writeMem(0xf5, { 0xbd });
        gbc.writeMem(0x4e8f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x4e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00BE
        gbc.setState(0xe3c8, 0x85ea, 0x1bf0, 0xccb3, 0x52e, 0xf452, 0x1, 0x1);
        gbc.writeMem(0xe3c8, { 0xcb, 0xde });
        gbc.writeMem(0xf452, { 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0xe3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c8));
        EXPECT(0xde, gbc.readMem(0xe3c9));
        EXPECT(0x4b, gbc.readMem(0xf452));
        // CB DE 00BF
        gbc.setState(0xea96, 0x9c78, 0x23c0, 0x89d0, 0xe4e, 0x305c, 0x0, 0x0);
        gbc.writeMem(0x305c, { 0x9e });
        gbc.writeMem(0xea96, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9c78, gbc.sp());
        EXPECT(0xea98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea96));
        EXPECT(0xde, gbc.readMem(0xea97));
        // CB DE 00C0
        gbc.setState(0x735c, 0xaa1d, 0xf430, 0x3751, 0x9e55, 0x3c01, 0x1, 0x0);
        gbc.writeMem(0x3c01, { 0xed });
        gbc.writeMem(0x735c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x735e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00C2
        gbc.setState(0x757a, 0xc0f6, 0x7080, 0xd72f, 0x399c, 0x459b, 0x0, 0x0);
        gbc.writeMem(0x459b, { 0x8f });
        gbc.writeMem(0x757a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc0f6, gbc.sp());
        EXPECT(0x757c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00C3
        gbc.setState(0x77e3, 0x7e96, 0xe310, 0xe4e3, 0x97ad, 0x3640, 0x1, 0x0);
        gbc.writeMem(0x3640, { 0xac });
        gbc.writeMem(0x77e3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0x77e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00C4
        gbc.setState(0xc96f, 0xcd0f, 0x8b50, 0xcf1e, 0x5d0d, 0xe9f6, 0x0, 0x0);
        gbc.writeMem(0xc96f, { 0xcb, 0xde });
        gbc.writeMem(0xe9f6, { 0xd4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0xde, gbc.readMem(0xc970));
        EXPECT(0xdc, gbc.readMem(0xe9f6));
        // CB DE 00C5
        gbc.setState(0xb505, 0x7034, 0x46a0, 0xf1c4, 0x4feb, 0xa03a, 0x0, 0x1);
        gbc.writeMem(0xa03a, { 0xa0 });
        gbc.writeMem(0xb505, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0xb507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa03a));
        EXPECT(0xcb, gbc.readMem(0xb505));
        EXPECT(0xde, gbc.readMem(0xb506));
        // CB DE 00C6
        gbc.setState(0x8259, 0xbe8a, 0x19d0, 0x3aa5, 0xfafb, 0x6da7, 0x0, 0x0);
        gbc.writeMem(0x6da7, { 0x19 });
        gbc.writeMem(0x8259, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbe8a, gbc.sp());
        EXPECT(0x825b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8259));
        EXPECT(0xde, gbc.readMem(0x825a));
        // CB DE 00C7
        gbc.setState(0x795a, 0x4226, 0xbc70, 0x46ff, 0x9a12, 0x8d43, 0x0, 0x0);
        gbc.writeMem(0x795a, { 0xcb, 0xde });
        gbc.writeMem(0x8d43, { 0xd8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0x795c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x8d43));
        // CB DE 00C8
        gbc.setState(0xd2bc, 0xb21e, 0x1360, 0x9624, 0x3415, 0xf8a7, 0x0, 0x1);
        gbc.writeMem(0xd2bc, { 0xcb, 0xde });
        gbc.writeMem(0xf8a7, { 0x48 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0xd2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bc));
        EXPECT(0xde, gbc.readMem(0xd2bd));
        EXPECT(0x48, gbc.readMem(0xf8a7));
        // CB DE 00CA
        gbc.setState(0xcb57, 0xa27e, 0x3130, 0x6c0e, 0xa09c, 0x8d48, 0x1, 0x1);
        gbc.writeMem(0x8d48, { 0x46 });
        gbc.writeMem(0xcb57, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa27e, gbc.sp());
        EXPECT(0xcb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8d48));
        EXPECT(0xcb, gbc.readMem(0xcb57));
        EXPECT(0xde, gbc.readMem(0xcb58));
        // CB DE 00CB
        gbc.setState(0x1343, 0x2664, 0x2b00, 0x29d9, 0xbb18, 0x5bce, 0x0, 0x0);
        gbc.writeMem(0x1343, { 0xcb, 0xde });
        gbc.writeMem(0x5bce, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00CC
        gbc.setState(0xb931, 0xf3d9, 0xf070, 0xf56e, 0x5a66, 0xc03a, 0x0, 0x1);
        gbc.writeMem(0xb931, { 0xcb, 0xde });
        gbc.writeMem(0xc03a, { 0x90 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb931));
        EXPECT(0xde, gbc.readMem(0xb932));
        EXPECT(0x98, gbc.readMem(0xc03a));
        // CB DE 00CD
        gbc.setState(0x9408, 0x2b1f, 0x59c0, 0x579a, 0x5981, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x3b8b, { 0x7b });
        gbc.writeMem(0x9408, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2b1f, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0xde, gbc.readMem(0x9409));
        // CB DE 00CE
        gbc.setState(0x77ff, 0x9009, 0x8fa0, 0x36be, 0x2009, 0x9d5b, 0x1, 0x0);
        gbc.writeMem(0x77ff, { 0xcb, 0xde });
        gbc.writeMem(0x9d5b, { 0xee });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9009, gbc.sp());
        EXPECT(0x7801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9d5b));
        // CB DE 00CF
        gbc.setState(0x46db, 0x9b4f, 0xc000, 0x84d8, 0x8b48, 0x3fe0, 0x0, 0x1);
        gbc.writeMem(0x3fe0, { 0x38 });
        gbc.writeMem(0x46db, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9b4f, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00D0
        gbc.setState(0xde9, 0x8881, 0x8c50, 0x175, 0x92e0, 0x4fa, 0x1, 0x0);
        gbc.writeMem(0x4fa, { 0x2a });
        gbc.writeMem(0xde9, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00D2
        gbc.setState(0x171e, 0x91b7, 0xc160, 0xc91c, 0xf63, 0xd024, 0x1, 0x0);
        gbc.writeMem(0x171e, { 0xcb, 0xde });
        gbc.writeMem(0xd024, { 0x84 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x91b7, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd024));
        // CB DE 00D3
        gbc.setState(0x7ef8, 0x901c, 0x2c0, 0xf359, 0x51a0, 0xeef5, 0x0, 0x0);
        gbc.writeMem(0x7ef8, { 0xcb, 0xde });
        gbc.writeMem(0xeef5, { 0xd9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x901c, gbc.sp());
        EXPECT(0x7efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xeef5));
        // CB DE 00D4
        gbc.setState(0x6dab, 0xa687, 0x81a0, 0x1672, 0x488e, 0xb045, 0x0, 0x0);
        gbc.writeMem(0x6dab, { 0xcb, 0xde });
        gbc.writeMem(0xb045, { 0x5f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb045));
        // CB DE 00D5
        gbc.setState(0x6f38, 0xf491, 0x70d0, 0xc396, 0xe30f, 0x6b6c, 0x0, 0x1);
        gbc.writeMem(0x6b6c, { 0xec });
        gbc.writeMem(0x6f38, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00D6
        gbc.setState(0x9a61, 0xf5da, 0x5380, 0xdf85, 0x698e, 0x62b1, 0x0, 0x0);
        gbc.writeMem(0x62b1, { 0x98 });
        gbc.writeMem(0x9a61, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0x9a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a61));
        EXPECT(0xde, gbc.readMem(0x9a62));
        // CB DE 00D7
        gbc.setState(0x9d42, 0x7e1d, 0xa7e0, 0x6fde, 0x9f32, 0xfaa1, 0x1, 0x0);
        gbc.writeMem(0x9d42, { 0xcb, 0xde });
        gbc.writeMem(0xfaa1, { 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7e1d, gbc.sp());
        EXPECT(0x9d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d42));
        EXPECT(0xde, gbc.readMem(0x9d43));
        EXPECT(0xd9, gbc.readMem(0xfaa1));
        // CB DE 00D8
        gbc.setState(0x2e0e, 0xeab9, 0x57e0, 0xa870, 0xc6db, 0xc1e5, 0x0, 0x0);
        gbc.writeMem(0x2e0e, { 0xcb, 0xde });
        gbc.writeMem(0xc1e5, { 0x79 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeab9, gbc.sp());
        EXPECT(0x2e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc1e5));
        // CB DE 00D9
        gbc.setState(0xd394, 0x54a5, 0x33e0, 0x3ecb, 0x68ea, 0x647, 0x1, 0x0);
        gbc.writeMem(0x647, { 0x8c });
        gbc.writeMem(0xd394, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x54a5, gbc.sp());
        EXPECT(0xd396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd394));
        EXPECT(0xde, gbc.readMem(0xd395));
        // CB DE 00DA
        gbc.setState(0x2fee, 0x44f3, 0x2460, 0x2432, 0x471e, 0xed19, 0x1, 0x0);
        gbc.writeMem(0x2fee, { 0xcb, 0xde });
        gbc.writeMem(0xed19, { 0x1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xed19));
        // CB DE 00DC
        gbc.setState(0x935a, 0x2b82, 0x90, 0x2daf, 0x4358, 0x935b, 0x0, 0x1);
        gbc.writeMem(0x935a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935a));
        EXPECT(0xde, gbc.readMem(0x935b));
        // CB DE 00DD
        gbc.setState(0x359b, 0xbd2, 0x530, 0x5c45, 0xe0d0, 0x3d5a, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xcb, 0xde });
        gbc.writeMem(0x3d5a, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00DE
        gbc.setState(0xbee2, 0x96b2, 0xea70, 0x6e24, 0xeedf, 0x65b4, 0x0, 0x1);
        gbc.writeMem(0x65b4, { 0x7b });
        gbc.writeMem(0xbee2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x96b2, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0xde, gbc.readMem(0xbee3));
        // CB DE 00DF
        gbc.setState(0x845, 0x8d0a, 0xdf90, 0xfb67, 0x2cdb, 0xfbbb, 0x1, 0x1);
        gbc.writeMem(0x845, { 0xcb, 0xde });
        gbc.writeMem(0xfbbb, { 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d0a, gbc.sp());
        EXPECT(0x847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xfbbb));
        // CB DE 00E0
        gbc.setState(0x4c75, 0xcbb5, 0x2950, 0x8c02, 0xb62e, 0xe952, 0x0, 0x0);
        gbc.writeMem(0x4c75, { 0xcb, 0xde });
        gbc.writeMem(0xe952, { 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcbb5, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe952));
        // CB DE 00E2
        gbc.setState(0xe860, 0xc769, 0x3d30, 0x6e28, 0x9951, 0xe0c3, 0x1, 0x0);
        gbc.writeMem(0xe0c3, { 0x71 });
        gbc.writeMem(0xe860, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe0c3));
        EXPECT(0xcb, gbc.readMem(0xe860));
        EXPECT(0xde, gbc.readMem(0xe861));
        // CB DE 00E6
        gbc.setState(0x48e6, 0x734a, 0xdf0, 0xf2f5, 0xa5e9, 0xecb6, 0x1, 0x0);
        gbc.writeMem(0x48e6, { 0xcb, 0xde });
        gbc.writeMem(0xecb6, { 0x12 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xecb6));
        // CB DE 00E7
        gbc.setState(0x4368, 0xb3c1, 0x1910, 0xf478, 0x6d60, 0xfd5f, 0x0, 0x0);
        gbc.writeMem(0x4368, { 0xcb, 0xde });
        gbc.writeMem(0xfd5f, { 0x15 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0x436a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xfd5f));
        // CB DE 00E9
        gbc.setState(0x7cf9, 0x91a0, 0x1360, 0xf10b, 0x12a5, 0x85bb, 0x1, 0x1);
        gbc.writeMem(0x7cf9, { 0xcb, 0xde });
        gbc.writeMem(0x85bb, { 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x91a0, gbc.sp());
        EXPECT(0x7cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x85bb));
        // CB DE 00EA
        gbc.setState(0x3bfb, 0xe787, 0x1910, 0x5200, 0x9e25, 0xda29, 0x0, 0x1);
        gbc.writeMem(0x3bfb, { 0xcb, 0xde });
        gbc.writeMem(0xda29, { 0x25 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xda29));
        // CB DE 00EB
        gbc.setState(0xb8f2, 0x3b04, 0x7d90, 0x4b40, 0xc89, 0xd28, 0x0, 0x0);
        gbc.writeMem(0xd28, { 0xfb });
        gbc.writeMem(0xb8f2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3b04, gbc.sp());
        EXPECT(0xb8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f2));
        EXPECT(0xde, gbc.readMem(0xb8f3));
        // CB DE 00EC
        gbc.setState(0x73f2, 0x5d4c, 0xbff0, 0x598f, 0x2439, 0x107c, 0x0, 0x0);
        gbc.writeMem(0x107c, { 0xc8 });
        gbc.writeMem(0x73f2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 00ED
        gbc.setState(0x54da, 0x21bb, 0xcbb0, 0x372d, 0x7e10, 0xe1ff, 0x1, 0x0);
        gbc.writeMem(0x54da, { 0xcb, 0xde });
        gbc.writeMem(0xe1ff, { 0xfd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x54dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe1ff));
        // CB DE 00EF
        gbc.setState(0x367b, 0x1137, 0xed50, 0xdf07, 0x756b, 0xa2d6, 0x1, 0x1);
        gbc.writeMem(0x367b, { 0xcb, 0xde });
        gbc.writeMem(0xa2d6, { 0x6f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0x367d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2d6));
        // CB DE 00F0
        gbc.setState(0xcdd7, 0xc563, 0xcd70, 0x4e9f, 0xf5ff, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0x49b3, { 0x5c });
        gbc.writeMem(0xcdd7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0xcdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd7));
        EXPECT(0xde, gbc.readMem(0xcdd8));
        // CB DE 00F1
        gbc.setState(0x21a4, 0x8eac, 0x880, 0xa4a1, 0xedf5, 0xf393, 0x0, 0x1);
        gbc.writeMem(0x21a4, { 0xcb, 0xde });
        gbc.writeMem(0xf393, { 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8eac, gbc.sp());
        EXPECT(0x21a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf393));
        // CB DE 00F2
        gbc.setState(0x2fda, 0x695f, 0x41a0, 0x28c3, 0x3b6f, 0xee80, 0x0, 0x1);
        gbc.writeMem(0x2fda, { 0xcb, 0xde });
        gbc.writeMem(0xee80, { 0x30 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x695f, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xee80));
        // CB DE 00F4
        gbc.setState(0x4f2c, 0x77a9, 0x340, 0xf439, 0x6f82, 0x328d, 0x0, 0x0);
        gbc.writeMem(0x328d, { 0x9b });
        gbc.writeMem(0x4f2c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x4f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 00F5
        gbc.setState(0x31ee, 0x48c7, 0xc070, 0x427, 0xa83d, 0xf393, 0x0, 0x0);
        gbc.writeMem(0x31ee, { 0xcb, 0xde });
        gbc.writeMem(0xf393, { 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x48c7, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf393));
        // CB DE 00FB
        gbc.setState(0xb323, 0x35db, 0x3de0, 0x6d06, 0x6d61, 0x505f, 0x0, 0x0);
        gbc.writeMem(0x505f, { 0x2d });
        gbc.writeMem(0xb323, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0xb325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb323));
        EXPECT(0xde, gbc.readMem(0xb324));
        // CB DE 00FC
        gbc.setState(0x9d1e, 0x987b, 0xcea0, 0x468b, 0x9f3a, 0x37a3, 0x1, 0x1);
        gbc.writeMem(0x37a3, { 0xdf });
        gbc.writeMem(0x9d1e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x987b, gbc.sp());
        EXPECT(0x9d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1e));
        EXPECT(0xde, gbc.readMem(0x9d1f));
        // CB DE 00FE
        gbc.setState(0xe701, 0x3c12, 0x93b0, 0x2799, 0x64b5, 0x413b, 0x1, 0x0);
        gbc.writeMem(0x413b, { 0x8 });
        gbc.writeMem(0xe701, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3c12, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe701));
        EXPECT(0xde, gbc.readMem(0xe702));
        // CB DE 00FF
        gbc.setState(0xdecf, 0xe0e, 0xa4d0, 0x998f, 0xf1bd, 0xabe7, 0x0, 0x0);
        gbc.writeMem(0xabe7, { 0xc });
        gbc.writeMem(0xdecf, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xabe7));
        EXPECT(0xcb, gbc.readMem(0xdecf));
        EXPECT(0xde, gbc.readMem(0xded0));
        // CB DE 0100
        gbc.setState(0xc0f4, 0xbe0b, 0x8960, 0x2f58, 0x1c63, 0x857b, 0x0, 0x0);
        gbc.writeMem(0x857b, { 0x2b });
        gbc.writeMem(0xc0f4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbe0b, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x857b));
        EXPECT(0xcb, gbc.readMem(0xc0f4));
        EXPECT(0xde, gbc.readMem(0xc0f5));
        // CB DE 0101
        gbc.setState(0xd80, 0xfa1c, 0x9680, 0x4bb1, 0x1b83, 0x85b9, 0x0, 0x0);
        gbc.writeMem(0xd80, { 0xcb, 0xde });
        gbc.writeMem(0x85b9, { 0xba });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfa1c, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x85b9));
        // CB DE 0102
        gbc.setState(0x9381, 0x12ae, 0xf410, 0xb7c9, 0x92cc, 0xa77b, 0x1, 0x0);
        gbc.writeMem(0x9381, { 0xcb, 0xde });
        gbc.writeMem(0xa77b, { 0x2e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x12ae, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9381));
        EXPECT(0xde, gbc.readMem(0x9382));
        EXPECT(0x2e, gbc.readMem(0xa77b));
        // CB DE 0103
        gbc.setState(0xde9, 0xcc12, 0xc7c0, 0x76b8, 0x4811, 0x4805, 0x0, 0x0);
        gbc.writeMem(0xde9, { 0xcb, 0xde });
        gbc.writeMem(0x4805, { 0xda });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0104
        gbc.setState(0xc833, 0xaf7, 0xd20, 0x546c, 0x55e4, 0xd8ca, 0x0, 0x0);
        gbc.writeMem(0xc833, { 0xcb, 0xde });
        gbc.writeMem(0xd8ca, { 0x6f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaf7, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc833));
        EXPECT(0xde, gbc.readMem(0xc834));
        EXPECT(0x6f, gbc.readMem(0xd8ca));
        // CB DE 0105
        gbc.setState(0x17d1, 0xc053, 0xa7d0, 0x232d, 0x2e66, 0x54b4, 0x0, 0x1);
        gbc.writeMem(0x17d1, { 0xcb, 0xde });
        gbc.writeMem(0x54b4, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x17d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0107
        gbc.setState(0x8451, 0x77c5, 0x6290, 0xc292, 0x4fcb, 0x4ca0, 0x0, 0x0);
        gbc.writeMem(0x4ca0, { 0xe });
        gbc.writeMem(0x8451, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x77c5, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0xde, gbc.readMem(0x8452));
        // CB DE 0108
        gbc.setState(0x51a0, 0xcabc, 0xe900, 0xf3b0, 0xbfb3, 0xfd49, 0x0, 0x0);
        gbc.writeMem(0x51a0, { 0xcb, 0xde });
        gbc.writeMem(0xfd49, { 0xb6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xfd49));
        // CB DE 0109
        gbc.setState(0xd17b, 0xdc74, 0x8330, 0xdc8d, 0x543f, 0x9468, 0x1, 0x1);
        gbc.writeMem(0x9468, { 0x46 });
        gbc.writeMem(0xd17b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9468));
        EXPECT(0xcb, gbc.readMem(0xd17b));
        EXPECT(0xde, gbc.readMem(0xd17c));
        // CB DE 010A
        gbc.setState(0x4d43, 0x964a, 0x7070, 0x9441, 0x8166, 0x9eeb, 0x0, 0x1);
        gbc.writeMem(0x4d43, { 0xcb, 0xde });
        gbc.writeMem(0x9eeb, { 0x72 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9eeb));
        // CB DE 010B
        gbc.setState(0x55de, 0x1a5e, 0x49c0, 0xed06, 0xdb11, 0x838d, 0x0, 0x1);
        gbc.writeMem(0x55de, { 0xcb, 0xde });
        gbc.writeMem(0x838d, { 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x838d));
        // CB DE 010C
        gbc.setState(0x8ecc, 0xd17e, 0xa760, 0x31dd, 0x18a6, 0x778e, 0x1, 0x0);
        gbc.writeMem(0x778e, { 0xed });
        gbc.writeMem(0x8ecc, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x8ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecc));
        EXPECT(0xde, gbc.readMem(0x8ecd));
        // CB DE 010E
        gbc.setState(0x9273, 0x50d4, 0x6b50, 0xb94c, 0xf678, 0xa393, 0x1, 0x1);
        gbc.writeMem(0x9273, { 0xcb, 0xde });
        gbc.writeMem(0xa393, { 0xf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x50d4, gbc.sp());
        EXPECT(0x9275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9273));
        EXPECT(0xde, gbc.readMem(0x9274));
        EXPECT(0xf, gbc.readMem(0xa393));
        // CB DE 010F
        gbc.setState(0x2f3f, 0x93bb, 0x4980, 0x42bb, 0x350e, 0xf0e1, 0x0, 0x0);
        gbc.writeMem(0x2f3f, { 0xcb, 0xde });
        gbc.writeMem(0xf0e1, { 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x2f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf0e1));
        // CB DE 0114
        gbc.setState(0x70ba, 0x1872, 0x4340, 0x232e, 0x82bb, 0x2040, 0x0, 0x0);
        gbc.writeMem(0x2040, { 0x9c });
        gbc.writeMem(0x70ba, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1872, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0115
        gbc.setState(0x34f4, 0xcfb2, 0xca50, 0x8563, 0xbcda, 0x7a74, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0xcb, 0xde });
        gbc.writeMem(0x7a74, { 0x4d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x34f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0116
        gbc.setState(0xd68e, 0x9afd, 0xe980, 0x8924, 0x8e8d, 0xc469, 0x1, 0x0);
        gbc.writeMem(0xc469, { 0xfa });
        gbc.writeMem(0xd68e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9afd, gbc.sp());
        EXPECT(0xd690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc469));
        EXPECT(0xcb, gbc.readMem(0xd68e));
        EXPECT(0xde, gbc.readMem(0xd68f));
        // CB DE 0119
        gbc.setState(0x6432, 0x4a53, 0xb100, 0xa7a6, 0x3f8a, 0xd246, 0x1, 0x1);
        gbc.writeMem(0x6432, { 0xcb, 0xde });
        gbc.writeMem(0xd246, { 0x73 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4a53, gbc.sp());
        EXPECT(0x6434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd246));
        // CB DE 011A
        gbc.setState(0x3280, 0xcdc7, 0xcf30, 0xf288, 0x8604, 0xaa49, 0x0, 0x0);
        gbc.writeMem(0x3280, { 0xcb, 0xde });
        gbc.writeMem(0xaa49, { 0xd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xaa49));
        // CB DE 011D
        gbc.setState(0x8e9f, 0x4d20, 0xe5f0, 0xd5ab, 0x553, 0xbefc, 0x0, 0x1);
        gbc.writeMem(0x8e9f, { 0xcb, 0xde });
        gbc.writeMem(0xbefc, { 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9f));
        EXPECT(0xde, gbc.readMem(0x8ea0));
        EXPECT(0x8, gbc.readMem(0xbefc));
        // CB DE 011E
        gbc.setState(0x827d, 0x9454, 0x5c0, 0x5423, 0xd88, 0xebe6, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0xcb, 0xde });
        gbc.writeMem(0xebe6, { 0x40 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0x827f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827d));
        EXPECT(0xde, gbc.readMem(0x827e));
        EXPECT(0x48, gbc.readMem(0xebe6));
        // CB DE 0121
        gbc.setState(0xe7fc, 0xe8c9, 0x97b0, 0xe375, 0x61c5, 0xd323, 0x1, 0x0);
        gbc.writeMem(0xd323, { 0x82 });
        gbc.writeMem(0xe7fc, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe8c9, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd323));
        EXPECT(0xcb, gbc.readMem(0xe7fc));
        EXPECT(0xde, gbc.readMem(0xe7fd));
        // CB DE 0122
        gbc.setState(0xdc0, 0x9dd3, 0x47e0, 0x7a0b, 0x135a, 0x249f, 0x1, 0x1);
        gbc.writeMem(0xdc0, { 0xcb, 0xde });
        gbc.writeMem(0x249f, { 0xae });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0xdc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0123
        gbc.setState(0xefaf, 0x5e42, 0xd130, 0xa816, 0x3ff9, 0xf660, 0x0, 0x1);
        gbc.writeMem(0xefaf, { 0xcb, 0xde });
        gbc.writeMem(0xf660, { 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefaf));
        EXPECT(0xde, gbc.readMem(0xefb0));
        EXPECT(0xac, gbc.readMem(0xf660));
        // CB DE 0125
        gbc.setState(0x97f2, 0xc8a4, 0x8830, 0x781, 0xf1f8, 0xfdec, 0x1, 0x0);
        gbc.writeMem(0x97f2, { 0xcb, 0xde });
        gbc.writeMem(0xfdec, { 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f2));
        EXPECT(0xde, gbc.readMem(0x97f3));
        EXPECT(0x9d, gbc.readMem(0xfdec));
        // CB DE 0126
        gbc.setState(0xac28, 0xa86b, 0xe80, 0x7938, 0x247d, 0xc0dd, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0xcb, 0xde });
        gbc.writeMem(0xc0dd, { 0x5c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa86b, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac28));
        EXPECT(0xde, gbc.readMem(0xac29));
        EXPECT(0x5c, gbc.readMem(0xc0dd));
        // CB DE 0128
        gbc.setState(0xb881, 0x6429, 0xc7e0, 0x196, 0xa7a1, 0xa88f, 0x0, 0x0);
        gbc.writeMem(0xa88f, { 0x6c });
        gbc.writeMem(0xb881, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0xb883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa88f));
        EXPECT(0xcb, gbc.readMem(0xb881));
        EXPECT(0xde, gbc.readMem(0xb882));
        // CB DE 0129
        gbc.setState(0x4784, 0xc31d, 0x9690, 0xbb22, 0x51cc, 0xea59, 0x0, 0x0);
        gbc.writeMem(0x4784, { 0xcb, 0xde });
        gbc.writeMem(0xea59, { 0xe7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x4786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xea59));
        // CB DE 012A
        gbc.setState(0xa5f1, 0xfb06, 0x98e0, 0x91ce, 0xf364, 0x187e, 0x1, 0x1);
        gbc.writeMem(0x187e, { 0xed });
        gbc.writeMem(0xa5f1, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f1));
        EXPECT(0xde, gbc.readMem(0xa5f2));
        // CB DE 012B
        gbc.setState(0x6cbe, 0x96e3, 0x130, 0xb92d, 0xc66f, 0x6d76, 0x0, 0x0);
        gbc.writeMem(0x6cbe, { 0xcb, 0xde });
        gbc.writeMem(0x6d76, { 0xbf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 012C
        gbc.setState(0x8066, 0x8e99, 0xb090, 0x9839, 0x9ea7, 0xf1cc, 0x1, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0xde });
        gbc.writeMem(0xf1cc, { 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e99, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8066));
        EXPECT(0xde, gbc.readMem(0x8067));
        EXPECT(0x9f, gbc.readMem(0xf1cc));
        // CB DE 012D
        gbc.setState(0x96e8, 0xd1dd, 0xc60, 0x9866, 0xee73, 0x95b, 0x0, 0x1);
        gbc.writeMem(0x95b, { 0x59 });
        gbc.writeMem(0x96e8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0xde, gbc.readMem(0x96e9));
        // CB DE 012F
        gbc.setState(0xd9a3, 0x58f4, 0x4c90, 0xfc7, 0xd33d, 0x751e, 0x1, 0x1);
        gbc.writeMem(0x751e, { 0xcf });
        gbc.writeMem(0xd9a3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a3));
        EXPECT(0xde, gbc.readMem(0xd9a4));
        // CB DE 0130
        gbc.setState(0xa0ee, 0xeb96, 0xef10, 0x28c4, 0xfe73, 0xea43, 0x1, 0x1);
        gbc.writeMem(0xa0ee, { 0xcb, 0xde });
        gbc.writeMem(0xea43, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0xa0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ee));
        EXPECT(0xde, gbc.readMem(0xa0ef));
        EXPECT(0x5f, gbc.readMem(0xea43));
        // CB DE 0131
        gbc.setState(0x61c2, 0xbbd9, 0xde10, 0x57b7, 0x96be, 0x21ce, 0x1, 0x1);
        gbc.writeMem(0x21ce, { 0x8c });
        gbc.writeMem(0x61c2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbbd9, gbc.sp());
        EXPECT(0x61c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0132
        gbc.setState(0xe45e, 0x5619, 0x8180, 0x9593, 0x7c15, 0xacc3, 0x0, 0x0);
        gbc.writeMem(0xacc3, { 0x7f });
        gbc.writeMem(0xe45e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5619, gbc.sp());
        EXPECT(0xe460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xacc3));
        EXPECT(0xcb, gbc.readMem(0xe45e));
        EXPECT(0xde, gbc.readMem(0xe45f));
        // CB DE 0134
        gbc.setState(0xa1b0, 0x7668, 0x5940, 0x922c, 0xb3f3, 0x17d9, 0x1, 0x0);
        gbc.writeMem(0x17d9, { 0x19 });
        gbc.writeMem(0xa1b0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7668, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b0));
        EXPECT(0xde, gbc.readMem(0xa1b1));
        // CB DE 0136
        gbc.setState(0x3575, 0xe6ca, 0x1480, 0xa4b6, 0x2cda, 0x3a95, 0x0, 0x0);
        gbc.writeMem(0x3575, { 0xcb, 0xde });
        gbc.writeMem(0x3a95, { 0xaf });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe6ca, gbc.sp());
        EXPECT(0x3577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0138
        gbc.setState(0x1580, 0x7c32, 0xa60, 0xace4, 0xd64c, 0xf170, 0x1, 0x1);
        gbc.writeMem(0x1580, { 0xcb, 0xde });
        gbc.writeMem(0xf170, { 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7c32, gbc.sp());
        EXPECT(0x1582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf170));
        // CB DE 0139
        gbc.setState(0x7a33, 0xeae8, 0x6800, 0xf813, 0xc073, 0x415e, 0x0, 0x1);
        gbc.writeMem(0x415e, { 0xaf });
        gbc.writeMem(0x7a33, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeae8, gbc.sp());
        EXPECT(0x7a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 013A
        gbc.setState(0xc85f, 0xa565, 0x8920, 0xf746, 0x1e3f, 0xe730, 0x0, 0x0);
        gbc.writeMem(0xc85f, { 0xcb, 0xde });
        gbc.writeMem(0xe730, { 0x2e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa565, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85f));
        EXPECT(0xde, gbc.readMem(0xc860));
        EXPECT(0x2e, gbc.readMem(0xe730));
        // CB DE 013C
        gbc.setState(0x9619, 0xa236, 0x7de0, 0x58b6, 0xc36a, 0xe3e5, 0x0, 0x0);
        gbc.writeMem(0x9619, { 0xcb, 0xde });
        gbc.writeMem(0xe3e5, { 0x5a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa236, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9619));
        EXPECT(0xde, gbc.readMem(0x961a));
        EXPECT(0x5a, gbc.readMem(0xe3e5));
        // CB DE 013D
        gbc.setState(0xb9a5, 0x780c, 0x6590, 0x5bc2, 0x5211, 0x6bb7, 0x0, 0x1);
        gbc.writeMem(0x6bb7, { 0xdc });
        gbc.writeMem(0xb9a5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x780c, gbc.sp());
        EXPECT(0xb9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a5));
        EXPECT(0xde, gbc.readMem(0xb9a6));
        // CB DE 013E
        gbc.setState(0xd243, 0x2c89, 0x5020, 0xc1d1, 0x1676, 0xc6c0, 0x0, 0x1);
        gbc.writeMem(0xc6c0, { 0x69 });
        gbc.writeMem(0xd243, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c89, gbc.sp());
        EXPECT(0xd245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc6c0));
        EXPECT(0xcb, gbc.readMem(0xd243));
        EXPECT(0xde, gbc.readMem(0xd244));
        // CB DE 013F
        gbc.setState(0xd787, 0x5ae9, 0x5ae0, 0x7a5d, 0xb124, 0xbafc, 0x0, 0x0);
        gbc.writeMem(0xbafc, { 0x65 });
        gbc.writeMem(0xd787, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbafc));
        EXPECT(0xcb, gbc.readMem(0xd787));
        EXPECT(0xde, gbc.readMem(0xd788));
        // CB DE 0140
        gbc.setState(0xd387, 0x67c9, 0xf00, 0x148c, 0x1bf2, 0x843f, 0x0, 0x0);
        gbc.writeMem(0x843f, { 0x53 });
        gbc.writeMem(0xd387, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0xd389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x843f));
        EXPECT(0xcb, gbc.readMem(0xd387));
        EXPECT(0xde, gbc.readMem(0xd388));
        // CB DE 0141
        gbc.setState(0x54e9, 0xdae0, 0xdc50, 0xeafe, 0xe2f8, 0xdd38, 0x0, 0x0);
        gbc.writeMem(0x54e9, { 0xcb, 0xde });
        gbc.writeMem(0xdd38, { 0xd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xdd38));
        // CB DE 0143
        gbc.setState(0x2e93, 0xc6af, 0x5d40, 0x2d19, 0xafac, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x2e93, { 0xcb, 0xde });
        gbc.writeMem(0xeee6, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc6af, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeee6));
        // CB DE 0144
        gbc.setState(0x519f, 0xd093, 0xb430, 0x3074, 0x8dac, 0xe9d7, 0x0, 0x0);
        gbc.writeMem(0x519f, { 0xcb, 0xde });
        gbc.writeMem(0xe9d7, { 0xad });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0x51a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe9d7));
        // CB DE 0145
        gbc.setState(0x389c, 0x80d8, 0x100, 0x7d18, 0x540b, 0xc0b1, 0x0, 0x0);
        gbc.writeMem(0x389c, { 0xcb, 0xde });
        gbc.writeMem(0xc0b1, { 0x88 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x80d8, gbc.sp());
        EXPECT(0x389e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc0b1));
        // CB DE 0146
        gbc.setState(0x79b1, 0xb6ef, 0x1020, 0x255f, 0x6f22, 0x5c32, 0x0, 0x0);
        gbc.writeMem(0x5c32, { 0xa9 });
        gbc.writeMem(0x79b1, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0147
        gbc.setState(0x14bb, 0x9f41, 0xc6e0, 0xf6dc, 0x9f6b, 0xecf8, 0x0, 0x0);
        gbc.writeMem(0x14bb, { 0xcb, 0xde });
        gbc.writeMem(0xecf8, { 0x76 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0x14bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xecf8));
        // CB DE 0149
        gbc.setState(0x37b, 0x985b, 0xe070, 0xfa5, 0xb07c, 0xc02c, 0x0, 0x1);
        gbc.writeMem(0x37b, { 0xcb, 0xde });
        gbc.writeMem(0xc02c, { 0xbe });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x985b, gbc.sp());
        EXPECT(0x37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc02c));
        // CB DE 014A
        gbc.setState(0x4c4b, 0x22a7, 0x8ae0, 0x8a67, 0x9586, 0x9c26, 0x1, 0x1);
        gbc.writeMem(0x4c4b, { 0xcb, 0xde });
        gbc.writeMem(0x9c26, { 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0x4c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c26));
        // CB DE 014C
        gbc.setState(0xad86, 0x7f75, 0xc980, 0x2505, 0x5b, 0x2564, 0x1, 0x1);
        gbc.writeMem(0x2564, { 0xdb });
        gbc.writeMem(0xad86, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7f75, gbc.sp());
        EXPECT(0xad88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad86));
        EXPECT(0xde, gbc.readMem(0xad87));
        // CB DE 014D
        gbc.setState(0x516, 0xf1c8, 0xef80, 0xb10f, 0xaa35, 0xaaa6, 0x0, 0x1);
        gbc.writeMem(0x516, { 0xcb, 0xde });
        gbc.writeMem(0xaaa6, { 0xe1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1c8, gbc.sp());
        EXPECT(0x518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaaa6));
        // CB DE 014E
        gbc.setState(0xb0e5, 0x18a4, 0x87b0, 0x277a, 0x1821, 0xde39, 0x1, 0x0);
        gbc.writeMem(0xb0e5, { 0xcb, 0xde });
        gbc.writeMem(0xde39, { 0x4f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x18a4, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0xde, gbc.readMem(0xb0e6));
        EXPECT(0x4f, gbc.readMem(0xde39));
        // CB DE 0150
        gbc.setState(0xb193, 0x3f17, 0x6320, 0x84a6, 0xb555, 0x9da0, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xbb });
        gbc.writeMem(0xb193, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9da0));
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0xde, gbc.readMem(0xb194));
        // CB DE 0152
        gbc.setState(0x5e31, 0x7a21, 0xf690, 0x5ffb, 0x80e, 0xae56, 0x0, 0x0);
        gbc.writeMem(0x5e31, { 0xcb, 0xde });
        gbc.writeMem(0xae56, { 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7a21, gbc.sp());
        EXPECT(0x5e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xae56));
        // CB DE 0155
        gbc.setState(0x748, 0xc51a, 0x5f0, 0xe681, 0x558a, 0xe27e, 0x0, 0x1);
        gbc.writeMem(0x748, { 0xcb, 0xde });
        gbc.writeMem(0xe27e, { 0x33 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc51a, gbc.sp());
        EXPECT(0x74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe27e));
        // CB DE 0156
        gbc.setState(0xc5f7, 0xfa9d, 0xe390, 0xfe85, 0x2b2, 0xfb4c, 0x1, 0x1);
        gbc.writeMem(0xc5f7, { 0xcb, 0xde });
        gbc.writeMem(0xfb4c, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f7));
        EXPECT(0xde, gbc.readMem(0xc5f8));
        EXPECT(0xba, gbc.readMem(0xfb4c));
        // CB DE 0157
        gbc.setState(0x9672, 0x49bc, 0x6ab0, 0x8162, 0x53a0, 0xa3ee, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0xcb, 0xde });
        gbc.writeMem(0xa3ee, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x49bc, gbc.sp());
        EXPECT(0x9674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9672));
        EXPECT(0xde, gbc.readMem(0x9673));
        EXPECT(0x5d, gbc.readMem(0xa3ee));
        // CB DE 0159
        gbc.setState(0x91c4, 0x4759, 0xb2f0, 0xc7ed, 0x29b5, 0xcdf9, 0x1, 0x1);
        gbc.writeMem(0x91c4, { 0xcb, 0xde });
        gbc.writeMem(0xcdf9, { 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0x91c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c4));
        EXPECT(0xde, gbc.readMem(0x91c5));
        EXPECT(0x7a, gbc.readMem(0xcdf9));
        // CB DE 015B
        gbc.setState(0xaaa7, 0x844a, 0xe740, 0xb759, 0x18f8, 0xcc96, 0x0, 0x1);
        gbc.writeMem(0xaaa7, { 0xcb, 0xde });
        gbc.writeMem(0xcc96, { 0x5d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa7));
        EXPECT(0xde, gbc.readMem(0xaaa8));
        EXPECT(0x5d, gbc.readMem(0xcc96));
        // CB DE 015C
        gbc.setState(0xd72b, 0x9580, 0x76c0, 0x1be3, 0x6a03, 0x84a5, 0x0, 0x0);
        gbc.writeMem(0x84a5, { 0xaf });
        gbc.writeMem(0xd72b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0xd72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x84a5));
        EXPECT(0xcb, gbc.readMem(0xd72b));
        EXPECT(0xde, gbc.readMem(0xd72c));
        // CB DE 015D
        gbc.setState(0x881d, 0x9316, 0xc600, 0x57ca, 0xbc2a, 0x899d, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0xcb, 0xde });
        gbc.writeMem(0x899d, { 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9316, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881d));
        EXPECT(0xde, gbc.readMem(0x881e));
        EXPECT(0xd, gbc.readMem(0x899d));
        // CB DE 015E
        gbc.setState(0x2e84, 0xf7ce, 0x9570, 0x72b7, 0x5e34, 0xc47d, 0x1, 0x0);
        gbc.writeMem(0x2e84, { 0xcb, 0xde });
        gbc.writeMem(0xc47d, { 0x90 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc47d));
        // CB DE 015F
        gbc.setState(0x4eba, 0x75fd, 0xd9b0, 0xd76b, 0xa847, 0x2749, 0x1, 0x0);
        gbc.writeMem(0x2749, { 0xae });
        gbc.writeMem(0x4eba, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0163
        gbc.setState(0x9ca1, 0xed59, 0x8560, 0x6e34, 0x974c, 0xf84e, 0x0, 0x1);
        gbc.writeMem(0x9ca1, { 0xcb, 0xde });
        gbc.writeMem(0xf84e, { 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0x9ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca1));
        EXPECT(0xde, gbc.readMem(0x9ca2));
        EXPECT(0x3c, gbc.readMem(0xf84e));
        // CB DE 0164
        gbc.setState(0xb733, 0x49c6, 0x48e0, 0x389f, 0xbb3a, 0xa04a, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0xf1 });
        gbc.writeMem(0xb733, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0xb735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xa04a));
        EXPECT(0xcb, gbc.readMem(0xb733));
        EXPECT(0xde, gbc.readMem(0xb734));
        // CB DE 0165
        gbc.setState(0xb72, 0x3ee4, 0x92c0, 0x1327, 0x9d2d, 0xbcab, 0x1, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0xde });
        gbc.writeMem(0xbcab, { 0xa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3ee4, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbcab));
        // CB DE 0167
        gbc.setState(0xa1d2, 0xe269, 0x1050, 0x1db8, 0x21bd, 0xde9e, 0x1, 0x1);
        gbc.writeMem(0xa1d2, { 0xcb, 0xde });
        gbc.writeMem(0xde9e, { 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe269, gbc.sp());
        EXPECT(0xa1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d2));
        EXPECT(0xde, gbc.readMem(0xa1d3));
        EXPECT(0x5e, gbc.readMem(0xde9e));
        // CB DE 0169
        gbc.setState(0xcfb8, 0x7850, 0xc1a0, 0x5d35, 0x90f4, 0xf35a, 0x0, 0x1);
        gbc.writeMem(0xcfb8, { 0xcb, 0xde });
        gbc.writeMem(0xf35a, { 0x28 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7850, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb8));
        EXPECT(0xde, gbc.readMem(0xcfb9));
        EXPECT(0x28, gbc.readMem(0xf35a));
        // CB DE 016A
        gbc.setState(0x966c, 0x6d17, 0x330, 0x82f9, 0x326c, 0xbce8, 0x1, 0x1);
        gbc.writeMem(0x966c, { 0xcb, 0xde });
        gbc.writeMem(0xbce8, { 0x71 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966c));
        EXPECT(0xde, gbc.readMem(0x966d));
        EXPECT(0x79, gbc.readMem(0xbce8));
        // CB DE 016D
        gbc.setState(0x8f04, 0x70b, 0xf080, 0x411f, 0xbceb, 0xb0f9, 0x0, 0x0);
        gbc.writeMem(0x8f04, { 0xcb, 0xde });
        gbc.writeMem(0xb0f9, { 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x70b, gbc.sp());
        EXPECT(0x8f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f04));
        EXPECT(0xde, gbc.readMem(0x8f05));
        EXPECT(0x29, gbc.readMem(0xb0f9));
        // CB DE 016E
        gbc.setState(0x57a5, 0x2f9d, 0xba50, 0x867d, 0xfa6f, 0x878c, 0x1, 0x1);
        gbc.writeMem(0x57a5, { 0xcb, 0xde });
        gbc.writeMem(0x878c, { 0xc2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0x57a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x878c));
        // CB DE 016F
        gbc.setState(0x5d32, 0x5121, 0xc70, 0x4710, 0x9fd0, 0xc67b, 0x1, 0x0);
        gbc.writeMem(0x5d32, { 0xcb, 0xde });
        gbc.writeMem(0xc67b, { 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc67b));
        // CB DE 0170
        gbc.setState(0x7180, 0x83d, 0xf60, 0xea5c, 0x627c, 0x69bf, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0x28 });
        gbc.writeMem(0x7180, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x83d, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0171
        gbc.setState(0x3537, 0x68c2, 0xb190, 0x3eca, 0xbbca, 0xd8cb, 0x1, 0x0);
        gbc.writeMem(0x3537, { 0xcb, 0xde });
        gbc.writeMem(0xd8cb, { 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x68c2, gbc.sp());
        EXPECT(0x3539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd8cb));
        // CB DE 0172
        gbc.setState(0x1c73, 0x25c3, 0x450, 0x5142, 0x7652, 0xd4d7, 0x0, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xde });
        gbc.writeMem(0xd4d7, { 0xfe });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd4d7));
        // CB DE 0173
        gbc.setState(0x8469, 0x8b66, 0x5aa0, 0xc9e4, 0x26b7, 0xa8c4, 0x1, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0xde });
        gbc.writeMem(0xa8c4, { 0x73 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8469));
        EXPECT(0xde, gbc.readMem(0x846a));
        EXPECT(0x7b, gbc.readMem(0xa8c4));
        // CB DE 0174
        gbc.setState(0x7c06, 0x1a05, 0x7f90, 0x5301, 0xd24f, 0x5ad8, 0x0, 0x0);
        gbc.writeMem(0x5ad8, { 0x6a });
        gbc.writeMem(0x7c06, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1a05, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0175
        gbc.setState(0x814b, 0xccb5, 0xae70, 0xdf05, 0xe01a, 0xcc6a, 0x1, 0x0);
        gbc.writeMem(0x814b, { 0xcb, 0xde });
        gbc.writeMem(0xcc6a, { 0x16 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xccb5, gbc.sp());
        EXPECT(0x814d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814b));
        EXPECT(0xde, gbc.readMem(0x814c));
        EXPECT(0x1e, gbc.readMem(0xcc6a));
        // CB DE 0178
        gbc.setState(0xec78, 0xa0bd, 0x3eb0, 0x344e, 0xf5db, 0x4ee5, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0xfe });
        gbc.writeMem(0xec78, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0xde, gbc.readMem(0xec79));
        // CB DE 0179
        gbc.setState(0x446, 0xe8b3, 0xd6d0, 0x713e, 0x9540, 0xee82, 0x1, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0xde });
        gbc.writeMem(0xee82, { 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xee82));
        // CB DE 017B
        gbc.setState(0xb38f, 0x8d01, 0xdc10, 0x1856, 0xf1e, 0x132e, 0x0, 0x0);
        gbc.writeMem(0x132e, { 0xd9 });
        gbc.writeMem(0xb38f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8d01, gbc.sp());
        EXPECT(0xb391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38f));
        EXPECT(0xde, gbc.readMem(0xb390));
        // CB DE 017D
        gbc.setState(0x212f, 0xfc56, 0x1a50, 0x9208, 0x1c8, 0xec0a, 0x0, 0x0);
        gbc.writeMem(0x212f, { 0xcb, 0xde });
        gbc.writeMem(0xec0a, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xec0a));
        // CB DE 017E
        gbc.setState(0x64c7, 0xa5e8, 0xc6f0, 0x7643, 0xc6d2, 0xdb93, 0x0, 0x0);
        gbc.writeMem(0x64c7, { 0xcb, 0xde });
        gbc.writeMem(0xdb93, { 0xcf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa5e8, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xdb93));
        // CB DE 017F
        gbc.setState(0xc5e2, 0xd364, 0xc610, 0x5674, 0xe471, 0xdd5b, 0x1, 0x0);
        gbc.writeMem(0xc5e2, { 0xcb, 0xde });
        gbc.writeMem(0xdd5b, { 0x11 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0xc5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e2));
        EXPECT(0xde, gbc.readMem(0xc5e3));
        EXPECT(0x19, gbc.readMem(0xdd5b));
        // CB DE 0180
        gbc.setState(0xd328, 0x2f6f, 0x65e0, 0xfc60, 0x8da6, 0x8662, 0x0, 0x0);
        gbc.writeMem(0x8662, { 0x3b });
        gbc.writeMem(0xd328, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8662));
        EXPECT(0xcb, gbc.readMem(0xd328));
        EXPECT(0xde, gbc.readMem(0xd329));
        // CB DE 0182
        gbc.setState(0x3b75, 0x7d13, 0x71a0, 0xf364, 0x721b, 0x25b9, 0x0, 0x1);
        gbc.writeMem(0x25b9, { 0x6d });
        gbc.writeMem(0x3b75, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7d13, gbc.sp());
        EXPECT(0x3b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0184
        gbc.setState(0x3b05, 0x974d, 0x87d0, 0x6c48, 0x801, 0x1dd8, 0x1, 0x0);
        gbc.writeMem(0x1dd8, { 0x8c });
        gbc.writeMem(0x3b05, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0186
        gbc.setState(0x4809, 0xd39a, 0x2140, 0xa6fa, 0x8540, 0xe2ce, 0x0, 0x1);
        gbc.writeMem(0x4809, { 0xcb, 0xde });
        gbc.writeMem(0xe2ce, { 0x8d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe2ce));
        // CB DE 0187
        gbc.setState(0x6dea, 0xdb00, 0x2a10, 0x6a7, 0x4acc, 0xda36, 0x0, 0x0);
        gbc.writeMem(0x6dea, { 0xcb, 0xde });
        gbc.writeMem(0xda36, { 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0x6dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xda36));
        // CB DE 0189
        gbc.setState(0xb9a0, 0x9b46, 0x69f0, 0x1488, 0x5081, 0xb251, 0x1, 0x1);
        gbc.writeMem(0xb251, { 0x6d });
        gbc.writeMem(0xb9a0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0xb9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb251));
        EXPECT(0xcb, gbc.readMem(0xb9a0));
        EXPECT(0xde, gbc.readMem(0xb9a1));
        // CB DE 018B
        gbc.setState(0x22a1, 0x67f4, 0xeed0, 0xd7d0, 0x74b1, 0xa49c, 0x0, 0x0);
        gbc.writeMem(0x22a1, { 0xcb, 0xde });
        gbc.writeMem(0xa49c, { 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0x22a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa49c));
        // CB DE 018C
        gbc.setState(0x8b93, 0xeb25, 0xe2b0, 0xd9a0, 0xb3b6, 0xe439, 0x0, 0x0);
        gbc.writeMem(0x8b93, { 0xcb, 0xde });
        gbc.writeMem(0xe439, { 0x64 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b93));
        EXPECT(0xde, gbc.readMem(0x8b94));
        EXPECT(0x6c, gbc.readMem(0xe439));
        // CB DE 018D
        gbc.setState(0x4d86, 0x2034, 0x62a0, 0xad18, 0x8e0f, 0x86a0, 0x1, 0x1);
        gbc.writeMem(0x4d86, { 0xcb, 0xde });
        gbc.writeMem(0x86a0, { 0x71 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0x4d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x86a0));
        // CB DE 018E
        gbc.setState(0x5c89, 0x5d96, 0xecc0, 0xd350, 0xb0b7, 0x4374, 0x0, 0x0);
        gbc.writeMem(0x4374, { 0xec });
        gbc.writeMem(0x5c89, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0x5c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 018F
        gbc.setState(0x64de, 0x9857, 0x5680, 0x3e10, 0xee48, 0x96cc, 0x1, 0x1);
        gbc.writeMem(0x64de, { 0xcb, 0xde });
        gbc.writeMem(0x96cc, { 0xf9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x64e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x96cc));
        // CB DE 0190
        gbc.setState(0xcd7, 0x973e, 0x5160, 0xe240, 0x5e1a, 0xc904, 0x1, 0x1);
        gbc.writeMem(0xcd7, { 0xcb, 0xde });
        gbc.writeMem(0xc904, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc904));
        // CB DE 0191
        gbc.setState(0xcc1b, 0x92c6, 0x790, 0xe4f8, 0x87be, 0x6456, 0x0, 0x0);
        gbc.writeMem(0x6456, { 0x1e });
        gbc.writeMem(0xcc1b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x92c6, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1b));
        EXPECT(0xde, gbc.readMem(0xcc1c));
        // CB DE 0194
        gbc.setState(0x1b7b, 0xb4e3, 0x1b00, 0xcd53, 0xf63, 0xa22c, 0x0, 0x0);
        gbc.writeMem(0x1b7b, { 0xcb, 0xde });
        gbc.writeMem(0xa22c, { 0x8c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa22c));
        // CB DE 0195
        gbc.setState(0xa64a, 0xad8e, 0xf550, 0xc209, 0x228b, 0x7f0e, 0x1, 0x1);
        gbc.writeMem(0x7f0e, { 0xcd });
        gbc.writeMem(0xa64a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0xa64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64a));
        EXPECT(0xde, gbc.readMem(0xa64b));
        // CB DE 0197
        gbc.setState(0x33c0, 0xad26, 0x9d60, 0x7001, 0x729b, 0x99b4, 0x0, 0x1);
        gbc.writeMem(0x33c0, { 0xcb, 0xde });
        gbc.writeMem(0x99b4, { 0xcb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xad26, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b4));
        // CB DE 0198
        gbc.setState(0xbf67, 0x7ded, 0x1510, 0x5ee8, 0x859a, 0xdfcf, 0x1, 0x1);
        gbc.writeMem(0xbf67, { 0xcb, 0xde });
        gbc.writeMem(0xdfcf, { 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7ded, gbc.sp());
        EXPECT(0xbf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf67));
        EXPECT(0xde, gbc.readMem(0xbf68));
        EXPECT(0xb9, gbc.readMem(0xdfcf));
        // CB DE 0199
        gbc.setState(0xeb4e, 0x9ccd, 0x8530, 0xefd5, 0x4135, 0x7c4f, 0x1, 0x0);
        gbc.writeMem(0x7c4f, { 0xa9 });
        gbc.writeMem(0xeb4e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4e));
        EXPECT(0xde, gbc.readMem(0xeb4f));
        // CB DE 019B
        gbc.setState(0x2984, 0x23ac, 0xd3e0, 0xd553, 0x9450, 0x2f0d, 0x1, 0x1);
        gbc.writeMem(0x2984, { 0xcb, 0xde });
        gbc.writeMem(0x2f0d, { 0xcc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 019C
        gbc.setState(0xd669, 0x7483, 0x8670, 0xdefc, 0xbac8, 0xbcdc, 0x1, 0x0);
        gbc.writeMem(0xbcdc, { 0x63 });
        gbc.writeMem(0xd669, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbcdc));
        EXPECT(0xcb, gbc.readMem(0xd669));
        EXPECT(0xde, gbc.readMem(0xd66a));
        // CB DE 019D
        gbc.setState(0xc002, 0x1810, 0xb8a0, 0xfe83, 0xe949, 0xa047, 0x1, 0x1);
        gbc.writeMem(0xa047, { 0x82 });
        gbc.writeMem(0xc002, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1810, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa047));
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0xde, gbc.readMem(0xc003));
        // CB DE 019E
        gbc.setState(0x9f07, 0xf990, 0x7360, 0xd674, 0xb9ec, 0x781b, 0x1, 0x0);
        gbc.writeMem(0x781b, { 0x5f });
        gbc.writeMem(0x9f07, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f07));
        EXPECT(0xde, gbc.readMem(0x9f08));
        // CB DE 019F
        gbc.setState(0x725b, 0x8ebf, 0x52f0, 0xc117, 0xe8a5, 0xd43c, 0x1, 0x0);
        gbc.writeMem(0x725b, { 0xcb, 0xde });
        gbc.writeMem(0xd43c, { 0x5f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8ebf, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd43c));
        // CB DE 01A0
        gbc.setState(0x11a1, 0xdbb6, 0x2a0, 0x73fb, 0x190f, 0x81f6, 0x0, 0x0);
        gbc.writeMem(0x11a1, { 0xcb, 0xde });
        gbc.writeMem(0x81f6, { 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdbb6, gbc.sp());
        EXPECT(0x11a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x81f6));
        // CB DE 01A1
        gbc.setState(0x187e, 0xa64, 0xd3a0, 0x6731, 0x981b, 0x5ad2, 0x0, 0x0);
        gbc.writeMem(0x187e, { 0xcb, 0xde });
        gbc.writeMem(0x5ad2, { 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa64, gbc.sp());
        EXPECT(0x1880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01A2
        gbc.setState(0x3a38, 0x68c0, 0x1b50, 0xcf2b, 0x5a22, 0xca9e, 0x0, 0x0);
        gbc.writeMem(0x3a38, { 0xcb, 0xde });
        gbc.writeMem(0xca9e, { 0xe });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x68c0, gbc.sp());
        EXPECT(0x3a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xca9e));
        // CB DE 01A5
        gbc.setState(0xb895, 0x3cd, 0x2930, 0xa86a, 0x94d, 0x49f2, 0x1, 0x1);
        gbc.writeMem(0x49f2, { 0xbd });
        gbc.writeMem(0xb895, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3cd, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb895));
        EXPECT(0xde, gbc.readMem(0xb896));
        // CB DE 01A6
        gbc.setState(0x3a94, 0xecd0, 0xd430, 0x9e97, 0x5e9a, 0xbc91, 0x0, 0x1);
        gbc.writeMem(0x3a94, { 0xcb, 0xde });
        gbc.writeMem(0xbc91, { 0x71 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0x3a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xbc91));
        // CB DE 01A7
        gbc.setState(0xd903, 0x70d8, 0x84c0, 0x7b27, 0x8c15, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0x5bbc, { 0x9d });
        gbc.writeMem(0xd903, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd903));
        EXPECT(0xde, gbc.readMem(0xd904));
        // CB DE 01A9
        gbc.setState(0xef3e, 0xd78b, 0x3270, 0x353f, 0x6e2b, 0x67db, 0x1, 0x1);
        gbc.writeMem(0x67db, { 0xde });
        gbc.writeMem(0xef3e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd78b, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0xde, gbc.readMem(0xef3f));
        // CB DE 01AB
        gbc.setState(0x81dc, 0x61c3, 0x9360, 0x5212, 0xf402, 0xbb5f, 0x1, 0x1);
        gbc.writeMem(0x81dc, { 0xcb, 0xde });
        gbc.writeMem(0xbb5f, { 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x61c3, gbc.sp());
        EXPECT(0x81de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81dc));
        EXPECT(0xde, gbc.readMem(0x81dd));
        EXPECT(0x39, gbc.readMem(0xbb5f));
        // CB DE 01AC
        gbc.setState(0xd149, 0xbcec, 0x6ea0, 0xa721, 0x72a6, 0x9210, 0x0, 0x1);
        gbc.writeMem(0x9210, { 0xf8 });
        gbc.writeMem(0xd149, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9210));
        EXPECT(0xcb, gbc.readMem(0xd149));
        EXPECT(0xde, gbc.readMem(0xd14a));
        // CB DE 01AD
        gbc.setState(0x9d, 0xcd1f, 0xfbf0, 0xaa9f, 0xd1fe, 0xbb27, 0x1, 0x1);
        gbc.writeMem(0x9d, { 0xcb, 0xde });
        gbc.writeMem(0xbb27, { 0x4c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd1f, gbc.sp());
        EXPECT(0x9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbb27));
        // CB DE 01AE
        gbc.setState(0x2eff, 0x376c, 0x77e0, 0x8cd0, 0x6215, 0x46df, 0x0, 0x0);
        gbc.writeMem(0x2eff, { 0xcb, 0xde });
        gbc.writeMem(0x46df, { 0x39 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0x2f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01B0
        gbc.setState(0x863e, 0xfe8b, 0x8ec0, 0xe496, 0x7560, 0x1056, 0x1, 0x1);
        gbc.writeMem(0x1056, { 0xa });
        gbc.writeMem(0x863e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfe8b, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863e));
        EXPECT(0xde, gbc.readMem(0x863f));
        // CB DE 01B1
        gbc.setState(0xd49a, 0x80cc, 0xeb00, 0xc1f2, 0x6ad2, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0xd1f9, { 0x50 });
        gbc.writeMem(0xd49a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x80cc, gbc.sp());
        EXPECT(0xd49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd1f9));
        EXPECT(0xcb, gbc.readMem(0xd49a));
        EXPECT(0xde, gbc.readMem(0xd49b));
        // CB DE 01B2
        gbc.setState(0xda9e, 0x8736, 0xeca0, 0xa628, 0xf0bd, 0xf7f1, 0x1, 0x1);
        gbc.writeMem(0xda9e, { 0xcb, 0xde });
        gbc.writeMem(0xf7f1, { 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8736, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9e));
        EXPECT(0xde, gbc.readMem(0xda9f));
        EXPECT(0x8f, gbc.readMem(0xf7f1));
        // CB DE 01B3
        gbc.setState(0x7215, 0x6325, 0x7ba0, 0xb417, 0x738c, 0xb03a, 0x1, 0x1);
        gbc.writeMem(0x7215, { 0xcb, 0xde });
        gbc.writeMem(0xb03a, { 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6325, gbc.sp());
        EXPECT(0x7217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb03a));
        // CB DE 01B4
        gbc.setState(0xc240, 0x377b, 0xb440, 0x94fd, 0x9fc1, 0xd55c, 0x1, 0x1);
        gbc.writeMem(0xc240, { 0xcb, 0xde });
        gbc.writeMem(0xd55c, { 0x84 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x377b, gbc.sp());
        EXPECT(0xc242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc240));
        EXPECT(0xde, gbc.readMem(0xc241));
        EXPECT(0x8c, gbc.readMem(0xd55c));
        // CB DE 01B5
        gbc.setState(0x84ef, 0x27c2, 0x6c10, 0x34f6, 0x9db0, 0xf3eb, 0x0, 0x0);
        gbc.writeMem(0x84ef, { 0xcb, 0xde });
        gbc.writeMem(0xf3eb, { 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x27c2, gbc.sp());
        EXPECT(0x84f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ef));
        EXPECT(0xde, gbc.readMem(0x84f0));
        EXPECT(0xaf, gbc.readMem(0xf3eb));
        // CB DE 01B6
        gbc.setState(0x398b, 0xe77e, 0x9a50, 0x4b74, 0xdc72, 0xca40, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0xcb, 0xde });
        gbc.writeMem(0xca40, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca40));
        // CB DE 01B8
        gbc.setState(0x792, 0x6b93, 0x2e30, 0x97c8, 0x95c7, 0x4f59, 0x1, 0x0);
        gbc.writeMem(0x792, { 0xcb, 0xde });
        gbc.writeMem(0x4f59, { 0x39 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0x794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 01B9
        gbc.setState(0x268d, 0xf352, 0xa3d0, 0x38a, 0x410, 0x9f22, 0x0, 0x0);
        gbc.writeMem(0x268d, { 0xcb, 0xde });
        gbc.writeMem(0x9f22, { 0x5f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf352, gbc.sp());
        EXPECT(0x268f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9f22));
        // CB DE 01BA
        gbc.setState(0x4b9c, 0x65ce, 0x8220, 0xe6b4, 0x2c0c, 0x1e3a, 0x1, 0x1);
        gbc.writeMem(0x1e3a, { 0x4b });
        gbc.writeMem(0x4b9c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x65ce, gbc.sp());
        EXPECT(0x4b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01BB
        gbc.setState(0xf13, 0x3f9e, 0xd050, 0xcc1e, 0xdf0, 0xa7a0, 0x0, 0x1);
        gbc.writeMem(0xf13, { 0xcb, 0xde });
        gbc.writeMem(0xa7a0, { 0x30 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3f9e, gbc.sp());
        EXPECT(0xf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa7a0));
        // CB DE 01BC
        gbc.setState(0x2458, 0x8286, 0x51b0, 0x96e5, 0xe965, 0x9269, 0x0, 0x1);
        gbc.writeMem(0x2458, { 0xcb, 0xde });
        gbc.writeMem(0x9269, { 0x1b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x9269));
        // CB DE 01BE
        gbc.setState(0x1b04, 0x17cb, 0x9cf0, 0x7b20, 0x5e5c, 0x2f18, 0x0, 0x1);
        gbc.writeMem(0x1b04, { 0xcb, 0xde });
        gbc.writeMem(0x2f18, { 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x17cb, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 01C0
        gbc.setState(0x3260, 0xcee2, 0x5f80, 0x27d7, 0x1258, 0xd71d, 0x0, 0x1);
        gbc.writeMem(0x3260, { 0xcb, 0xde });
        gbc.writeMem(0xd71d, { 0xab });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0x3262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xd71d));
        // CB DE 01C1
        gbc.setState(0x99be, 0xf705, 0x9830, 0x5031, 0x1c3e, 0x8a56, 0x1, 0x1);
        gbc.writeMem(0x8a56, { 0x94 });
        gbc.writeMem(0x99be, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a56));
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0xde, gbc.readMem(0x99bf));
        // CB DE 01C2
        gbc.setState(0xc879, 0xe923, 0xf3e0, 0xc958, 0x206f, 0x8832, 0x0, 0x1);
        gbc.writeMem(0x8832, { 0x5a });
        gbc.writeMem(0xc879, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe923, gbc.sp());
        EXPECT(0xc87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8832));
        EXPECT(0xcb, gbc.readMem(0xc879));
        EXPECT(0xde, gbc.readMem(0xc87a));
        // CB DE 01C3
        gbc.setState(0xa577, 0xaa72, 0x17e0, 0xe1fc, 0x144c, 0x4477, 0x1, 0x1);
        gbc.writeMem(0x4477, { 0xe });
        gbc.writeMem(0xa577, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaa72, gbc.sp());
        EXPECT(0xa579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa577));
        EXPECT(0xde, gbc.readMem(0xa578));
        // CB DE 01C4
        gbc.setState(0xe7ea, 0x257a, 0x5220, 0x7552, 0xa8bd, 0x42db, 0x1, 0x0);
        gbc.writeMem(0x42db, { 0xac });
        gbc.writeMem(0xe7ea, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x257a, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ea));
        EXPECT(0xde, gbc.readMem(0xe7eb));
        // CB DE 01C5
        gbc.setState(0x4f72, 0x204a, 0x7ab0, 0x8672, 0x8f99, 0xb572, 0x1, 0x0);
        gbc.writeMem(0x4f72, { 0xcb, 0xde });
        gbc.writeMem(0xb572, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x204a, gbc.sp());
        EXPECT(0x4f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb572));
        // CB DE 01C6
        gbc.setState(0x968e, 0xd1c7, 0x6970, 0x3a6b, 0x8063, 0x9042, 0x1, 0x1);
        gbc.writeMem(0x9042, { 0xa3 });
        gbc.writeMem(0x968e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd1c7, gbc.sp());
        EXPECT(0x9690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9042));
        EXPECT(0xcb, gbc.readMem(0x968e));
        EXPECT(0xde, gbc.readMem(0x968f));
        // CB DE 01C7
        gbc.setState(0xebd3, 0x7cc7, 0x5f70, 0x9574, 0xb295, 0xf7a2, 0x1, 0x0);
        gbc.writeMem(0xebd3, { 0xcb, 0xde });
        gbc.writeMem(0xf7a2, { 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7cc7, gbc.sp());
        EXPECT(0xebd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd3));
        EXPECT(0xde, gbc.readMem(0xebd4));
        EXPECT(0x2d, gbc.readMem(0xf7a2));
        // CB DE 01C8
        gbc.setState(0x20, 0x9279, 0xa850, 0xb5f6, 0x7bb6, 0x8680, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xcb, 0xde });
        gbc.writeMem(0x8680, { 0xf7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8680));
        // CB DE 01C9
        gbc.setState(0x187b, 0x2f41, 0xeee0, 0xbd3a, 0x4c75, 0xc3c8, 0x0, 0x0);
        gbc.writeMem(0x187b, { 0xcb, 0xde });
        gbc.writeMem(0xc3c8, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2f41, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc3c8));
        // CB DE 01CA
        gbc.setState(0x5ad2, 0xad84, 0xa6a0, 0x5beb, 0x3752, 0xcd28, 0x0, 0x1);
        gbc.writeMem(0x5ad2, { 0xcb, 0xde });
        gbc.writeMem(0xcd28, { 0x4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xad84, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcd28));
        // CB DE 01CB
        gbc.setState(0xadd1, 0x13db, 0x67a0, 0xfcc8, 0x8d2d, 0xe9e3, 0x1, 0x0);
        gbc.writeMem(0xadd1, { 0xcb, 0xde });
        gbc.writeMem(0xe9e3, { 0x3b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x13db, gbc.sp());
        EXPECT(0xadd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd1));
        EXPECT(0xde, gbc.readMem(0xadd2));
        EXPECT(0x3b, gbc.readMem(0xe9e3));
        // CB DE 01CD
        gbc.setState(0xd8b4, 0x9cf7, 0x5b50, 0xd2f1, 0x5a5a, 0x9d69, 0x0, 0x0);
        gbc.writeMem(0x9d69, { 0x9d });
        gbc.writeMem(0xd8b4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xd8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d69));
        EXPECT(0xcb, gbc.readMem(0xd8b4));
        EXPECT(0xde, gbc.readMem(0xd8b5));
        // CB DE 01CE
        gbc.setState(0x172b, 0x753e, 0x8d80, 0x5267, 0x1898, 0xdd0f, 0x1, 0x1);
        gbc.writeMem(0x172b, { 0xcb, 0xde });
        gbc.writeMem(0xdd0f, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x753e, gbc.sp());
        EXPECT(0x172d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdd0f));
        // CB DE 01CF
        gbc.setState(0x6dc2, 0xccdd, 0x5d50, 0xc147, 0x9ff5, 0xe069, 0x0, 0x0);
        gbc.writeMem(0x6dc2, { 0xcb, 0xde });
        gbc.writeMem(0xe069, { 0xc2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xccdd, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe069));
        // CB DE 01D1
        gbc.setState(0xd2bc, 0xac4f, 0xa7e0, 0xad39, 0xeae8, 0xe6c, 0x0, 0x1);
        gbc.writeMem(0xe6c, { 0x4d });
        gbc.writeMem(0xd2bc, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0xd2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bc));
        EXPECT(0xde, gbc.readMem(0xd2bd));
        // CB DE 01D2
        gbc.setState(0x782c, 0x9d98, 0x86f0, 0x52fa, 0xe35a, 0x7a0d, 0x0, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0xde });
        gbc.writeMem(0x7a0d, { 0xca });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x782e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 01D3
        gbc.setState(0x1980, 0xfaf1, 0xb340, 0x8f6f, 0x7a39, 0x6449, 0x1, 0x1);
        gbc.writeMem(0x1980, { 0xcb, 0xde });
        gbc.writeMem(0x6449, { 0x9e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfaf1, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01D4
        gbc.setState(0x9d13, 0x97a5, 0xbc00, 0x578f, 0x91ad, 0xa2bf, 0x1, 0x1);
        gbc.writeMem(0x9d13, { 0xcb, 0xde });
        gbc.writeMem(0xa2bf, { 0x8d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d13));
        EXPECT(0xde, gbc.readMem(0x9d14));
        EXPECT(0x8d, gbc.readMem(0xa2bf));
        // CB DE 01D5
        gbc.setState(0xc85f, 0xae69, 0x2550, 0xef4f, 0x50ea, 0x8384, 0x0, 0x0);
        gbc.writeMem(0x8384, { 0x8f });
        gbc.writeMem(0xc85f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xae69, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8384));
        EXPECT(0xcb, gbc.readMem(0xc85f));
        EXPECT(0xde, gbc.readMem(0xc860));
        // CB DE 01D7
        gbc.setState(0x19fa, 0x5ddf, 0x7900, 0x108b, 0x4da8, 0xb552, 0x0, 0x0);
        gbc.writeMem(0x19fa, { 0xcb, 0xde });
        gbc.writeMem(0xb552, { 0xe5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ddf, gbc.sp());
        EXPECT(0x19fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb552));
        // CB DE 01D8
        gbc.setState(0x2ece, 0x4900, 0x91b0, 0xa2ab, 0xa181, 0xac45, 0x0, 0x0);
        gbc.writeMem(0x2ece, { 0xcb, 0xde });
        gbc.writeMem(0xac45, { 0x36 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0x2ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xac45));
        // CB DE 01D9
        gbc.setState(0xba10, 0xd5af, 0xf800, 0x997e, 0x482, 0x5939, 0x1, 0x0);
        gbc.writeMem(0x5939, { 0xe9 });
        gbc.writeMem(0xba10, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd5af, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba10));
        EXPECT(0xde, gbc.readMem(0xba11));
        // CB DE 01DA
        gbc.setState(0x39f3, 0x4d4a, 0x6150, 0xdfcd, 0x6507, 0xd39, 0x1, 0x1);
        gbc.writeMem(0xd39, { 0x5e });
        gbc.writeMem(0x39f3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4d4a, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 01DB
        gbc.setState(0xa714, 0x69a, 0x9040, 0xdcef, 0x8c7e, 0x113e, 0x1, 0x1);
        gbc.writeMem(0x113e, { 0x6d });
        gbc.writeMem(0xa714, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x69a, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa714));
        EXPECT(0xde, gbc.readMem(0xa715));
        // CB DE 01DC
        gbc.setState(0x6724, 0x7be6, 0xd7d0, 0x863e, 0x91c9, 0xd1f5, 0x0, 0x1);
        gbc.writeMem(0x6724, { 0xcb, 0xde });
        gbc.writeMem(0xd1f5, { 0x46 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7be6, gbc.sp());
        EXPECT(0x6726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd1f5));
        // CB DE 01DF
        gbc.setState(0x4746, 0x10ef, 0xa010, 0xbcb9, 0xa179, 0x8ff7, 0x1, 0x1);
        gbc.writeMem(0x4746, { 0xcb, 0xde });
        gbc.writeMem(0x8ff7, { 0x25 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x10ef, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8ff7));
        // CB DE 01E0
        gbc.setState(0xdd3, 0x74c7, 0xc700, 0x34bb, 0x4074, 0x155, 0x1, 0x1);
        gbc.writeMem(0x155, { 0xe8 });
        gbc.writeMem(0xdd3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x74c7, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01E2
        gbc.setState(0x832e, 0x32ca, 0xd670, 0xacae, 0xd01d, 0xe56b, 0x1, 0x1);
        gbc.writeMem(0x832e, { 0xcb, 0xde });
        gbc.writeMem(0xe56b, { 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x32ca, gbc.sp());
        EXPECT(0x8330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832e));
        EXPECT(0xde, gbc.readMem(0x832f));
        EXPECT(0xfd, gbc.readMem(0xe56b));
        // CB DE 01E5
        gbc.setState(0x56f8, 0xb961, 0xacb0, 0x9dd7, 0x3b3b, 0xf38a, 0x1, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xde });
        gbc.writeMem(0xf38a, { 0xd3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf38a));
        // CB DE 01E6
        gbc.setState(0xcbf3, 0x33d8, 0x74a0, 0x16a9, 0x144d, 0x8cd8, 0x1, 0x0);
        gbc.writeMem(0x8cd8, { 0x87 });
        gbc.writeMem(0xcbf3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x33d8, gbc.sp());
        EXPECT(0xcbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8cd8));
        EXPECT(0xcb, gbc.readMem(0xcbf3));
        EXPECT(0xde, gbc.readMem(0xcbf4));
        // CB DE 01E8
        gbc.setState(0x44bf, 0x8f8b, 0x29b0, 0xeef4, 0x392c, 0x9b9c, 0x1, 0x0);
        gbc.writeMem(0x44bf, { 0xcb, 0xde });
        gbc.writeMem(0x9b9c, { 0x9e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x44c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b9c));
        // CB DE 01EA
        gbc.setState(0x56d7, 0xc87, 0xe200, 0xd38f, 0x4d38, 0xf43b, 0x1, 0x0);
        gbc.writeMem(0x56d7, { 0xcb, 0xde });
        gbc.writeMem(0xf43b, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc87, gbc.sp());
        EXPECT(0x56d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xf43b));
        // CB DE 01EB
        gbc.setState(0x9678, 0x187c, 0xa510, 0xd36f, 0xa73c, 0x900a, 0x0, 0x1);
        gbc.writeMem(0x900a, { 0xe1 });
        gbc.writeMem(0x9678, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x967a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x900a));
        EXPECT(0xcb, gbc.readMem(0x9678));
        EXPECT(0xde, gbc.readMem(0x9679));
        // CB DE 01ED
        gbc.setState(0x2b6b, 0xa3fe, 0x84b0, 0x35c, 0xed17, 0x6b07, 0x0, 0x1);
        gbc.writeMem(0x2b6b, { 0xcb, 0xde });
        gbc.writeMem(0x6b07, { 0xc8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa3fe, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 01EE
        gbc.setState(0x6223, 0x303c, 0x4e0, 0xe0ac, 0x28f1, 0x8644, 0x1, 0x1);
        gbc.writeMem(0x6223, { 0xcb, 0xde });
        gbc.writeMem(0x8644, { 0xa9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x303c, gbc.sp());
        EXPECT(0x6225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8644));
        // CB DE 01F0
        gbc.setState(0x211e, 0xc1cc, 0xd3e0, 0x208e, 0x8e50, 0x360c, 0x0, 0x1);
        gbc.writeMem(0x211e, { 0xcb, 0xde });
        gbc.writeMem(0x360c, { 0xef });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01F1
        gbc.setState(0x87d6, 0x537f, 0xf940, 0xbb93, 0x2804, 0x466d, 0x1, 0x1);
        gbc.writeMem(0x466d, { 0xfd });
        gbc.writeMem(0x87d6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d6));
        EXPECT(0xde, gbc.readMem(0x87d7));
        // CB DE 01F2
        gbc.setState(0xb057, 0x19a9, 0x37a0, 0x78cb, 0x49eb, 0x501b, 0x0, 0x1);
        gbc.writeMem(0x501b, { 0x99 });
        gbc.writeMem(0xb057, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x19a9, gbc.sp());
        EXPECT(0xb059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb057));
        EXPECT(0xde, gbc.readMem(0xb058));
        // CB DE 01F3
        gbc.setState(0xb5c6, 0xe7af, 0x16e0, 0x5bfc, 0x5d41, 0xa5e9, 0x0, 0x0);
        gbc.writeMem(0xa5e9, { 0x14 });
        gbc.writeMem(0xb5c6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe7af, gbc.sp());
        EXPECT(0xb5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xa5e9));
        EXPECT(0xcb, gbc.readMem(0xb5c6));
        EXPECT(0xde, gbc.readMem(0xb5c7));
        // CB DE 01F4
        gbc.setState(0xea1f, 0x5c2d, 0x9940, 0x323d, 0x5117, 0x92f4, 0x0, 0x0);
        gbc.writeMem(0x92f4, { 0x7f });
        gbc.writeMem(0xea1f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0xea21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x92f4));
        EXPECT(0xcb, gbc.readMem(0xea1f));
        EXPECT(0xde, gbc.readMem(0xea20));
        // CB DE 01F6
        gbc.setState(0xef03, 0xbdde, 0x5660, 0xcff5, 0x6d70, 0x91af, 0x0, 0x0);
        gbc.writeMem(0x91af, { 0x86 });
        gbc.writeMem(0xef03, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0xef05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x91af));
        EXPECT(0xcb, gbc.readMem(0xef03));
        EXPECT(0xde, gbc.readMem(0xef04));
        // CB DE 01F7
        gbc.setState(0xb60, 0x13b7, 0x3240, 0x62c7, 0x8eed, 0xe31e, 0x1, 0x1);
        gbc.writeMem(0xb60, { 0xcb, 0xde });
        gbc.writeMem(0xe31e, { 0xf4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x13b7, gbc.sp());
        EXPECT(0xb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe31e));
        // CB DE 01FB
        gbc.setState(0x7347, 0x6c53, 0x2e90, 0xa, 0x8182, 0x9b75, 0x1, 0x0);
        gbc.writeMem(0x7347, { 0xcb, 0xde });
        gbc.writeMem(0x9b75, { 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6c53, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9b75));
        // CB DE 01FC
        gbc.setState(0xd0c7, 0x9a7c, 0x1e00, 0x37b1, 0x236d, 0xec85, 0x0, 0x0);
        gbc.writeMem(0xd0c7, { 0xcb, 0xde });
        gbc.writeMem(0xec85, { 0xcf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9a7c, gbc.sp());
        EXPECT(0xd0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c7));
        EXPECT(0xde, gbc.readMem(0xd0c8));
        EXPECT(0xcf, gbc.readMem(0xec85));
        // CB DE 01FD
        gbc.setState(0x5b0f, 0x55c5, 0x42c0, 0x972e, 0xe6c7, 0xa57e, 0x0, 0x0);
        gbc.writeMem(0x5b0f, { 0xcb, 0xde });
        gbc.writeMem(0xa57e, { 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x55c5, gbc.sp());
        EXPECT(0x5b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa57e));
        // CB DE 01FE
        gbc.setState(0x14be, 0xb28b, 0x9800, 0x3295, 0xbed6, 0xb0a, 0x0, 0x1);
        gbc.writeMem(0xb0a, { 0xf });
        gbc.writeMem(0x14be, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x14c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 01FF
        gbc.setState(0xb31d, 0x6c49, 0x480, 0xda63, 0xa8e3, 0x4090, 0x0, 0x0);
        gbc.writeMem(0x4090, { 0x19 });
        gbc.writeMem(0xb31d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6c49, gbc.sp());
        EXPECT(0xb31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31d));
        EXPECT(0xde, gbc.readMem(0xb31e));
        // CB DE 0200
        gbc.setState(0x5610, 0xbce0, 0x6660, 0xf5ea, 0xd006, 0x1ae5, 0x1, 0x1);
        gbc.writeMem(0x1ae5, { 0xd8 });
        gbc.writeMem(0x5610, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbce0, gbc.sp());
        EXPECT(0x5612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0201
        gbc.setState(0x105c, 0xef43, 0x95b0, 0xb778, 0x70b8, 0x55e1, 0x1, 0x1);
        gbc.writeMem(0x105c, { 0xcb, 0xde });
        gbc.writeMem(0x55e1, { 0x28 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xef43, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0203
        gbc.setState(0x527e, 0x2ed1, 0xc380, 0xa86f, 0x4b14, 0x277d, 0x0, 0x0);
        gbc.writeMem(0x277d, { 0xd });
        gbc.writeMem(0x527e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0205
        gbc.setState(0x8dc2, 0xf22c, 0xf2b0, 0x3d15, 0x138, 0xf03c, 0x0, 0x0);
        gbc.writeMem(0x8dc2, { 0xcb, 0xde });
        gbc.writeMem(0xf03c, { 0x74 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0x8dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc2));
        EXPECT(0xde, gbc.readMem(0x8dc3));
        EXPECT(0x7c, gbc.readMem(0xf03c));
        // CB DE 0206
        gbc.setState(0x44b1, 0x600f, 0xf710, 0xc5f2, 0x7897, 0x15e6, 0x0, 0x1);
        gbc.writeMem(0x15e6, { 0x29 });
        gbc.writeMem(0x44b1, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0x44b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0207
        gbc.setState(0x43be, 0x5b71, 0x77d0, 0x1b57, 0x72a7, 0x9808, 0x0, 0x0);
        gbc.writeMem(0x43be, { 0xcb, 0xde });
        gbc.writeMem(0x9808, { 0x46 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5b71, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9808));
        // CB DE 0208
        gbc.setState(0x299e, 0xc224, 0x59b0, 0x1ee7, 0x26ec, 0x1bcb, 0x1, 0x1);
        gbc.writeMem(0x1bcb, { 0x29 });
        gbc.writeMem(0x299e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc224, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0209
        gbc.setState(0x55cc, 0xd2da, 0x7ff0, 0x6d53, 0xeb5f, 0x95a8, 0x1, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0xde });
        gbc.writeMem(0x95a8, { 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x95a8));
        // CB DE 020C
        gbc.setState(0xe1c5, 0xd25c, 0x10a0, 0x9efc, 0x390f, 0x7d77, 0x1, 0x1);
        gbc.writeMem(0x7d77, { 0x8 });
        gbc.writeMem(0xe1c5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0xe1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c5));
        EXPECT(0xde, gbc.readMem(0xe1c6));
        // CB DE 020D
        gbc.setState(0x2117, 0x9285, 0x6b70, 0x8a8d, 0x386d, 0xd690, 0x0, 0x1);
        gbc.writeMem(0x2117, { 0xcb, 0xde });
        gbc.writeMem(0xd690, { 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9285, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd690));
        // CB DE 020E
        gbc.setState(0xbdc7, 0xb64b, 0x9a60, 0x7f6f, 0xc6df, 0x5831, 0x1, 0x1);
        gbc.writeMem(0x5831, { 0x8f });
        gbc.writeMem(0xbdc7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb64b, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc7));
        EXPECT(0xde, gbc.readMem(0xbdc8));
        // CB DE 020F
        gbc.setState(0x419b, 0xe821, 0xe6f0, 0xa944, 0x7e51, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x419b, { 0xcb, 0xde });
        gbc.writeMem(0x8f4e, { 0x70 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe821, gbc.sp());
        EXPECT(0x419d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8f4e));
        // CB DE 0212
        gbc.setState(0xd7e, 0x3bab, 0xea60, 0xa71b, 0x506e, 0x9a09, 0x0, 0x1);
        gbc.writeMem(0xd7e, { 0xcb, 0xde });
        gbc.writeMem(0x9a09, { 0x7b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9a09));
        // CB DE 0213
        gbc.setState(0x2350, 0x2598, 0xb400, 0xf69, 0xfa4d, 0xc966, 0x1, 0x1);
        gbc.writeMem(0x2350, { 0xcb, 0xde });
        gbc.writeMem(0xc966, { 0xc1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0x2352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc966));
        // CB DE 0215
        gbc.setState(0x8884, 0xcf35, 0x6270, 0x5e92, 0x3923, 0xeede, 0x0, 0x1);
        gbc.writeMem(0x8884, { 0xcb, 0xde });
        gbc.writeMem(0xeede, { 0xc6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcf35, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8884));
        EXPECT(0xde, gbc.readMem(0x8885));
        EXPECT(0xce, gbc.readMem(0xeede));
        // CB DE 0216
        gbc.setState(0x98b4, 0x6689, 0x7a50, 0x4302, 0x4e2c, 0xf783, 0x1, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0xde });
        gbc.writeMem(0xf783, { 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0xde, gbc.readMem(0x98b5));
        EXPECT(0x7a, gbc.readMem(0xf783));
        // CB DE 0217
        gbc.setState(0x3e3, 0xddb0, 0xea60, 0xf12, 0xb6c5, 0xe995, 0x1, 0x0);
        gbc.writeMem(0x3e3, { 0xcb, 0xde });
        gbc.writeMem(0xe995, { 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe995));
        // CB DE 0218
        gbc.setState(0xa800, 0x4abd, 0xb4b0, 0x6c06, 0x4a4c, 0x87dd, 0x0, 0x0);
        gbc.writeMem(0x87dd, { 0x45 });
        gbc.writeMem(0xa800, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x87dd));
        EXPECT(0xcb, gbc.readMem(0xa800));
        EXPECT(0xde, gbc.readMem(0xa801));
        // CB DE 021B
        gbc.setState(0x1d09, 0xd56a, 0x3ad0, 0xb089, 0x43d2, 0x9cf8, 0x1, 0x1);
        gbc.writeMem(0x1d09, { 0xcb, 0xde });
        gbc.writeMem(0x9cf8, { 0x5f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd56a, gbc.sp());
        EXPECT(0x1d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9cf8));
        // CB DE 021C
        gbc.setState(0x85b6, 0x10c0, 0xa2a0, 0xd07a, 0x2708, 0x5358, 0x1, 0x1);
        gbc.writeMem(0x5358, { 0xff });
        gbc.writeMem(0x85b6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0x85b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b6));
        EXPECT(0xde, gbc.readMem(0x85b7));
        // CB DE 021D
        gbc.setState(0xad80, 0x8ee0, 0x7570, 0x4a2c, 0x9ac7, 0xc120, 0x0, 0x0);
        gbc.writeMem(0xad80, { 0xcb, 0xde });
        gbc.writeMem(0xc120, { 0xe3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ee0, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad80));
        EXPECT(0xde, gbc.readMem(0xad81));
        EXPECT(0xeb, gbc.readMem(0xc120));
        // CB DE 021E
        gbc.setState(0x5fd0, 0xb2f8, 0x5ae0, 0xca77, 0x5fc5, 0xd235, 0x1, 0x0);
        gbc.writeMem(0x5fd0, { 0xcb, 0xde });
        gbc.writeMem(0xd235, { 0x5f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb2f8, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd235));
        // CB DE 021F
        gbc.setState(0x3359, 0xac9f, 0x8b40, 0xc0ab, 0x9dd4, 0x67bd, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xcb, 0xde });
        gbc.writeMem(0x67bd, { 0x99 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0220
        gbc.setState(0x8ae8, 0xca1b, 0x2c60, 0x4bbc, 0x29f1, 0xda0f, 0x1, 0x0);
        gbc.writeMem(0x8ae8, { 0xcb, 0xde });
        gbc.writeMem(0xda0f, { 0xb1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0x8aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae8));
        EXPECT(0xde, gbc.readMem(0x8ae9));
        EXPECT(0xb9, gbc.readMem(0xda0f));
        // CB DE 0221
        gbc.setState(0xad1a, 0xacd5, 0x1ad0, 0xf73b, 0x5626, 0x542b, 0x1, 0x1);
        gbc.writeMem(0x542b, { 0xa });
        gbc.writeMem(0xad1a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1a));
        EXPECT(0xde, gbc.readMem(0xad1b));
        // CB DE 0222
        gbc.setState(0x2424, 0xc659, 0x5dc0, 0x78ed, 0x9da, 0xce20, 0x0, 0x1);
        gbc.writeMem(0x2424, { 0xcb, 0xde });
        gbc.writeMem(0xce20, { 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xce20));
        // CB DE 0223
        gbc.setState(0xdac0, 0xbbfb, 0x7d40, 0xa0af, 0x153e, 0xa87e, 0x0, 0x0);
        gbc.writeMem(0xa87e, { 0x2c });
        gbc.writeMem(0xdac0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbbfb, gbc.sp());
        EXPECT(0xdac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa87e));
        EXPECT(0xcb, gbc.readMem(0xdac0));
        EXPECT(0xde, gbc.readMem(0xdac1));
        // CB DE 0225
        gbc.setState(0xe5ea, 0xd6c3, 0x1a50, 0x8419, 0x573d, 0xea1d, 0x0, 0x1);
        gbc.writeMem(0xe5ea, { 0xcb, 0xde });
        gbc.writeMem(0xea1d, { 0xc8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6c3, gbc.sp());
        EXPECT(0xe5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ea));
        EXPECT(0xde, gbc.readMem(0xe5eb));
        EXPECT(0xc8, gbc.readMem(0xea1d));
        // CB DE 0226
        gbc.setState(0xd486, 0xf033, 0x1250, 0x7007, 0xafef, 0xa2d9, 0x0, 0x1);
        gbc.writeMem(0xa2d9, { 0x6f });
        gbc.writeMem(0xd486, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0xd488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa2d9));
        EXPECT(0xcb, gbc.readMem(0xd486));
        EXPECT(0xde, gbc.readMem(0xd487));
        // CB DE 0228
        gbc.setState(0x3c71, 0xc959, 0x32a0, 0xc747, 0x4daa, 0xca71, 0x1, 0x0);
        gbc.writeMem(0x3c71, { 0xcb, 0xde });
        gbc.writeMem(0xca71, { 0x1e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc959, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xca71));
        // CB DE 022A
        gbc.setState(0x88fc, 0xce4d, 0xb2c0, 0x3c7d, 0xe4b8, 0xb3bd, 0x0, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0xde });
        gbc.writeMem(0xb3bd, { 0x27 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce4d, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fc));
        EXPECT(0xde, gbc.readMem(0x88fd));
        EXPECT(0x2f, gbc.readMem(0xb3bd));
        // CB DE 022C
        gbc.setState(0xe493, 0x14b8, 0xc620, 0x1471, 0x209d, 0xcbba, 0x0, 0x0);
        gbc.writeMem(0xcbba, { 0xf7 });
        gbc.writeMem(0xe493, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x14b8, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcbba));
        EXPECT(0xcb, gbc.readMem(0xe493));
        EXPECT(0xde, gbc.readMem(0xe494));
        // CB DE 022D
        gbc.setState(0xe951, 0xd3b7, 0xd200, 0xb07b, 0x6e9d, 0x6359, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0xda });
        gbc.writeMem(0xe951, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd3b7, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe951));
        EXPECT(0xde, gbc.readMem(0xe952));
        // CB DE 022F
        gbc.setState(0x8042, 0x50e4, 0x4e70, 0xe4fe, 0xb46a, 0x239a, 0x0, 0x0);
        gbc.writeMem(0x239a, { 0xef });
        gbc.writeMem(0x8042, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x50e4, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0xde, gbc.readMem(0x8043));
        // CB DE 0230
        gbc.setState(0x2270, 0xa079, 0x15c0, 0x88d5, 0x98b3, 0x76e9, 0x0, 0x1);
        gbc.writeMem(0x2270, { 0xcb, 0xde });
        gbc.writeMem(0x76e9, { 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa079, gbc.sp());
        EXPECT(0x2272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0232
        gbc.setState(0x93f9, 0x420f, 0xf8b0, 0x5522, 0x11fb, 0xbe87, 0x0, 0x0);
        gbc.writeMem(0x93f9, { 0xcb, 0xde });
        gbc.writeMem(0xbe87, { 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0xde, gbc.readMem(0x93fa));
        EXPECT(0x5b, gbc.readMem(0xbe87));
        // CB DE 0239
        gbc.setState(0xc251, 0x57c7, 0xef60, 0x9ac4, 0x32a, 0xdfe4, 0x1, 0x0);
        gbc.writeMem(0xc251, { 0xcb, 0xde });
        gbc.writeMem(0xdfe4, { 0x91 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x57c7, gbc.sp());
        EXPECT(0xc253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc251));
        EXPECT(0xde, gbc.readMem(0xc252));
        EXPECT(0x99, gbc.readMem(0xdfe4));
        // CB DE 023A
        gbc.setState(0x15ae, 0xd4e5, 0xa990, 0x41d6, 0xfff6, 0x1c79, 0x0, 0x1);
        gbc.writeMem(0x15ae, { 0xcb, 0xde });
        gbc.writeMem(0x1c79, { 0xeb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0x15b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 023B
        gbc.setState(0xb884, 0x53e0, 0x9ff0, 0x44b0, 0x2755, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0xb0de, { 0xf0 });
        gbc.writeMem(0xb884, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x53e0, gbc.sp());
        EXPECT(0xb886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb0de));
        EXPECT(0xcb, gbc.readMem(0xb884));
        EXPECT(0xde, gbc.readMem(0xb885));
        // CB DE 023D
        gbc.setState(0xe6ac, 0x737b, 0xb660, 0x96f9, 0x8460, 0x19f2, 0x0, 0x0);
        gbc.writeMem(0x19f2, { 0xbc });
        gbc.writeMem(0xe6ac, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x737b, gbc.sp());
        EXPECT(0xe6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ac));
        EXPECT(0xde, gbc.readMem(0xe6ad));
        // CB DE 023E
        gbc.setState(0xfa2, 0x1aea, 0xfe90, 0xf846, 0x708c, 0x6fef, 0x1, 0x0);
        gbc.writeMem(0xfa2, { 0xcb, 0xde });
        gbc.writeMem(0x6fef, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1aea, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 023F
        gbc.setState(0x8329, 0x5c97, 0xed80, 0x463b, 0x4460, 0xe8d5, 0x0, 0x0);
        gbc.writeMem(0x8329, { 0xcb, 0xde });
        gbc.writeMem(0xe8d5, { 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5c97, gbc.sp());
        EXPECT(0x832b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8329));
        EXPECT(0xde, gbc.readMem(0x832a));
        EXPECT(0x4c, gbc.readMem(0xe8d5));
        // CB DE 0240
        gbc.setState(0x9449, 0x82, 0xa90, 0x72b3, 0x2777, 0xcb33, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0xde });
        gbc.writeMem(0xcb33, { 0x5f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x82, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9449));
        EXPECT(0xde, gbc.readMem(0x944a));
        EXPECT(0x5f, gbc.readMem(0xcb33));
        // CB DE 0241
        gbc.setState(0x5c92, 0x3548, 0xecd0, 0x72cd, 0x48b9, 0x2b42, 0x0, 0x0);
        gbc.writeMem(0x2b42, { 0x98 });
        gbc.writeMem(0x5c92, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0x5c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0242
        gbc.setState(0x1be0, 0xb0b0, 0x1120, 0x7b3f, 0x7f68, 0xfa44, 0x1, 0x0);
        gbc.writeMem(0x1be0, { 0xcb, 0xde });
        gbc.writeMem(0xfa44, { 0x72 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0x1be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xfa44));
        // CB DE 0243
        gbc.setState(0x5e74, 0xb200, 0xd490, 0x6ca, 0x6c42, 0x708c, 0x1, 0x1);
        gbc.writeMem(0x5e74, { 0xcb, 0xde });
        gbc.writeMem(0x708c, { 0x1c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0244
        gbc.setState(0xaf3f, 0x112f, 0xbb50, 0x68c0, 0x3ad0, 0xd47d, 0x1, 0x0);
        gbc.writeMem(0xaf3f, { 0xcb, 0xde });
        gbc.writeMem(0xd47d, { 0xe0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x112f, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3f));
        EXPECT(0xde, gbc.readMem(0xaf40));
        EXPECT(0xe8, gbc.readMem(0xd47d));
        // CB DE 0245
        gbc.setState(0x49ab, 0x5a36, 0xab60, 0xe87a, 0x378a, 0x58d9, 0x0, 0x1);
        gbc.writeMem(0x49ab, { 0xcb, 0xde });
        gbc.writeMem(0x58d9, { 0x5c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5a36, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0246
        gbc.setState(0x58be, 0x7440, 0x590, 0xbe0a, 0x5dc9, 0xc127, 0x0, 0x0);
        gbc.writeMem(0x58be, { 0xcb, 0xde });
        gbc.writeMem(0xc127, { 0x46 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7440, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc127));
        // CB DE 0247
        gbc.setState(0xb936, 0xad1a, 0xcac0, 0xa849, 0xf9c8, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0x9e93, { 0xa3 });
        gbc.writeMem(0xb936, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9e93));
        EXPECT(0xcb, gbc.readMem(0xb936));
        EXPECT(0xde, gbc.readMem(0xb937));
        // CB DE 0248
        gbc.setState(0x61e3, 0x4d87, 0xc1f0, 0x7a59, 0xe4ca, 0xe129, 0x0, 0x0);
        gbc.writeMem(0x61e3, { 0xcb, 0xde });
        gbc.writeMem(0xe129, { 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe129));
        // CB DE 0249
        gbc.setState(0x9be0, 0x37a5, 0x2480, 0x7dfa, 0xab03, 0xbf30, 0x0, 0x1);
        gbc.writeMem(0x9be0, { 0xcb, 0xde });
        gbc.writeMem(0xbf30, { 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be0));
        EXPECT(0xde, gbc.readMem(0x9be1));
        EXPECT(0x1f, gbc.readMem(0xbf30));
        // CB DE 024B
        gbc.setState(0x3267, 0x2e52, 0x75b0, 0x670f, 0x687c, 0xb572, 0x1, 0x0);
        gbc.writeMem(0x3267, { 0xcb, 0xde });
        gbc.writeMem(0xb572, { 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0x3269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb572));
        // CB DE 024D
        gbc.setState(0xcbbd, 0x7563, 0x98c0, 0xc070, 0xd809, 0x21c1, 0x0, 0x1);
        gbc.writeMem(0x21c1, { 0x4f });
        gbc.writeMem(0xcbbd, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7563, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbd));
        EXPECT(0xde, gbc.readMem(0xcbbe));
        // CB DE 024E
        gbc.setState(0x95d2, 0xc2e3, 0xfa90, 0xbfd3, 0xde73, 0xa9b9, 0x1, 0x1);
        gbc.writeMem(0x95d2, { 0xcb, 0xde });
        gbc.writeMem(0xa9b9, { 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc2e3, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0xde, gbc.readMem(0x95d3));
        EXPECT(0x9c, gbc.readMem(0xa9b9));
        // CB DE 0250
        gbc.setState(0x52fa, 0xb204, 0x2f80, 0x93ac, 0x5f35, 0xf2f0, 0x0, 0x1);
        gbc.writeMem(0x52fa, { 0xcb, 0xde });
        gbc.writeMem(0xf2f0, { 0x52 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb204, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xf2f0));
        // CB DE 0251
        gbc.setState(0x14a0, 0xe39a, 0xf480, 0x4af0, 0x64d1, 0x5b61, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0xcb, 0xde });
        gbc.writeMem(0x5b61, { 0xeb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe39a, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0252
        gbc.setState(0x465d, 0x2d6e, 0x3a90, 0xcd6c, 0x648, 0xdce4, 0x0, 0x1);
        gbc.writeMem(0x465d, { 0xcb, 0xde });
        gbc.writeMem(0xdce4, { 0xa1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xdce4));
        // CB DE 0254
        gbc.setState(0x3391, 0x247b, 0x8a10, 0x5f7, 0x1d58, 0xc727, 0x0, 0x0);
        gbc.writeMem(0x3391, { 0xcb, 0xde });
        gbc.writeMem(0xc727, { 0x8b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0x3393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc727));
        // CB DE 0255
        gbc.setState(0x9054, 0x6f35, 0x84d0, 0xb91f, 0x7c29, 0xed1e, 0x1, 0x0);
        gbc.writeMem(0x9054, { 0xcb, 0xde });
        gbc.writeMem(0xed1e, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0x9056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9054));
        EXPECT(0xde, gbc.readMem(0x9055));
        EXPECT(0xaa, gbc.readMem(0xed1e));
        // CB DE 0258
        gbc.setState(0xc428, 0x7b66, 0x11e0, 0x6464, 0xfdbd, 0x222d, 0x1, 0x1);
        gbc.writeMem(0x222d, { 0x3f });
        gbc.writeMem(0xc428, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7b66, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc428));
        EXPECT(0xde, gbc.readMem(0xc429));
        // CB DE 0259
        gbc.setState(0xa6d7, 0x6404, 0x3be0, 0x4db0, 0x7194, 0x8b09, 0x1, 0x0);
        gbc.writeMem(0x8b09, { 0xdb });
        gbc.writeMem(0xa6d7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6404, gbc.sp());
        EXPECT(0xa6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8b09));
        EXPECT(0xcb, gbc.readMem(0xa6d7));
        EXPECT(0xde, gbc.readMem(0xa6d8));
        // CB DE 025D
        gbc.setState(0xed66, 0xd96c, 0x7b60, 0xdbfa, 0xbd76, 0x6196, 0x1, 0x1);
        gbc.writeMem(0x6196, { 0xea });
        gbc.writeMem(0xed66, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd96c, gbc.sp());
        EXPECT(0xed68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed66));
        EXPECT(0xde, gbc.readMem(0xed67));
        // CB DE 025E
        gbc.setState(0xcb58, 0x31e1, 0xfeb0, 0x6b8f, 0x6147, 0xe888, 0x0, 0x0);
        gbc.writeMem(0xcb58, { 0xcb, 0xde });
        gbc.writeMem(0xe888, { 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0xcb5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb58));
        EXPECT(0xde, gbc.readMem(0xcb59));
        EXPECT(0xbd, gbc.readMem(0xe888));
        // CB DE 0261
        gbc.setState(0x7f23, 0x1154, 0x5c40, 0xb96d, 0x3963, 0x506d, 0x0, 0x1);
        gbc.writeMem(0x506d, { 0x3f });
        gbc.writeMem(0x7f23, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0262
        gbc.setState(0x41dc, 0x95fa, 0xc190, 0x69b8, 0x8297, 0xfd73, 0x1, 0x0);
        gbc.writeMem(0x41dc, { 0xcb, 0xde });
        gbc.writeMem(0xfd73, { 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xfd73));
        // CB DE 0263
        gbc.setState(0xefc7, 0xcaf3, 0x17d0, 0xc734, 0x2f5, 0xf1e7, 0x1, 0x0);
        gbc.writeMem(0xefc7, { 0xcb, 0xde });
        gbc.writeMem(0xf1e7, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc7));
        EXPECT(0xde, gbc.readMem(0xefc8));
        EXPECT(0x5b, gbc.readMem(0xf1e7));
        // CB DE 0265
        gbc.setState(0x3ddd, 0x1796, 0x8fc0, 0xe748, 0xe137, 0xa19d, 0x0, 0x0);
        gbc.writeMem(0x3ddd, { 0xcb, 0xde });
        gbc.writeMem(0xa19d, { 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x3ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19d));
        // CB DE 0266
        gbc.setState(0x1689, 0x3ca1, 0x7cb0, 0x3474, 0xfa46, 0xd7d0, 0x0, 0x1);
        gbc.writeMem(0x1689, { 0xcb, 0xde });
        gbc.writeMem(0xd7d0, { 0x8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd7d0));
        // CB DE 0267
        gbc.setState(0x1bed, 0x16e4, 0x4d00, 0x1330, 0x1690, 0x567d, 0x1, 0x0);
        gbc.writeMem(0x1bed, { 0xcb, 0xde });
        gbc.writeMem(0x567d, { 0x69 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0x1bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0268
        gbc.setState(0x5388, 0x4d03, 0x6a60, 0xee56, 0x45a3, 0x1ddd, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0x1c });
        gbc.writeMem(0x5388, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 026A
        gbc.setState(0xb70b, 0xcd12, 0xfee0, 0x4173, 0x3f97, 0xd914, 0x1, 0x1);
        gbc.writeMem(0xb70b, { 0xcb, 0xde });
        gbc.writeMem(0xd914, { 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0xde, gbc.readMem(0xb70c));
        EXPECT(0xe9, gbc.readMem(0xd914));
        // CB DE 026B
        gbc.setState(0x8fcf, 0x6413, 0x4260, 0x4def, 0xf846, 0x50e7, 0x1, 0x0);
        gbc.writeMem(0x50e7, { 0xb8 });
        gbc.writeMem(0x8fcf, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6413, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcf));
        EXPECT(0xde, gbc.readMem(0x8fd0));
        // CB DE 026C
        gbc.setState(0xb75, 0x364c, 0x8b50, 0x29be, 0xdc72, 0x56c2, 0x0, 0x1);
        gbc.writeMem(0xb75, { 0xcb, 0xde });
        gbc.writeMem(0x56c2, { 0xe });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x364c, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 026D
        gbc.setState(0xa694, 0xa6d2, 0xcc90, 0x5906, 0x2f19, 0xc71, 0x0, 0x1);
        gbc.writeMem(0xc71, { 0x88 });
        gbc.writeMem(0xa694, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa694));
        EXPECT(0xde, gbc.readMem(0xa695));
        // CB DE 026F
        gbc.setState(0x9238, 0x7f0c, 0x42b0, 0x83f4, 0x8a7f, 0xf8e2, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0xcb, 0xde });
        gbc.writeMem(0xf8e2, { 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7f0c, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9238));
        EXPECT(0xde, gbc.readMem(0x9239));
        EXPECT(0x79, gbc.readMem(0xf8e2));
        // CB DE 0271
        gbc.setState(0xda90, 0x7bef, 0x9880, 0xf919, 0xb017, 0xe36, 0x1, 0x0);
        gbc.writeMem(0xe36, { 0x5d });
        gbc.writeMem(0xda90, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0xda92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda90));
        EXPECT(0xde, gbc.readMem(0xda91));
        // CB DE 0272
        gbc.setState(0x775d, 0x9766, 0x3740, 0x3efa, 0x545f, 0x7c96, 0x1, 0x1);
        gbc.writeMem(0x775d, { 0xcb, 0xde });
        gbc.writeMem(0x7c96, { 0x3a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9766, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0273
        gbc.setState(0x7cd7, 0xb319, 0x3810, 0xbd61, 0xb55e, 0x772a, 0x0, 0x1);
        gbc.writeMem(0x772a, { 0x7b });
        gbc.writeMem(0x7cd7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0x7cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0274
        gbc.setState(0xc0eb, 0x9209, 0xf1a0, 0x540a, 0x51c0, 0xeb5e, 0x1, 0x1);
        gbc.writeMem(0xc0eb, { 0xcb, 0xde });
        gbc.writeMem(0xeb5e, { 0xc6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9209, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0eb));
        EXPECT(0xde, gbc.readMem(0xc0ec));
        EXPECT(0xce, gbc.readMem(0xeb5e));
        // CB DE 0277
        gbc.setState(0x355f, 0x57d1, 0x5b80, 0x6318, 0xa9a5, 0xf9f4, 0x0, 0x0);
        gbc.writeMem(0x355f, { 0xcb, 0xde });
        gbc.writeMem(0xf9f4, { 0x68 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x57d1, gbc.sp());
        EXPECT(0x3561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xf9f4));
        // CB DE 0278
        gbc.setState(0x62b, 0x12a5, 0xaf20, 0x19fc, 0xabe4, 0x33b1, 0x1, 0x1);
        gbc.writeMem(0x62b, { 0xcb, 0xde });
        gbc.writeMem(0x33b1, { 0x8b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0x62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 027A
        gbc.setState(0x2a, 0x9b1, 0xb970, 0x17a3, 0x5040, 0xa45, 0x1, 0x1);
        gbc.writeMem(0x2a, { 0xcb, 0xde });
        gbc.writeMem(0xa45, { 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b1, gbc.sp());
        EXPECT(0x2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 027B
        gbc.setState(0xb30d, 0xe102, 0xb410, 0x7feb, 0x56c5, 0xe95, 0x1, 0x1);
        gbc.writeMem(0xe95, { 0xd });
        gbc.writeMem(0xb30d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0xb30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30d));
        EXPECT(0xde, gbc.readMem(0xb30e));
        // CB DE 027C
        gbc.setState(0xc8e8, 0x8287, 0xa270, 0x7621, 0xd0d4, 0x57ef, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0x4d });
        gbc.writeMem(0xc8e8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8287, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e8));
        EXPECT(0xde, gbc.readMem(0xc8e9));
        // CB DE 027D
        gbc.setState(0x5010, 0x1f40, 0x60f0, 0x44f2, 0x23ae, 0x23c5, 0x0, 0x1);
        gbc.writeMem(0x23c5, { 0xff });
        gbc.writeMem(0x5010, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0x5012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 027E
        gbc.setState(0x90f4, 0xdbc1, 0x60c0, 0xf70b, 0x2d19, 0x4e31, 0x0, 0x1);
        gbc.writeMem(0x4e31, { 0x78 });
        gbc.writeMem(0x90f4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdbc1, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0xde, gbc.readMem(0x90f5));
        // CB DE 027F
        gbc.setState(0x5a74, 0x97c7, 0x1e50, 0xf745, 0xae87, 0x5f6c, 0x1, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0xde });
        gbc.writeMem(0x5f6c, { 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x97c7, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0280
        gbc.setState(0xd755, 0x4f57, 0xcfb0, 0x5f9, 0xcffc, 0x4635, 0x1, 0x1);
        gbc.writeMem(0x4635, { 0x6a });
        gbc.writeMem(0xd755, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0xd757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd755));
        EXPECT(0xde, gbc.readMem(0xd756));
        // CB DE 0281
        gbc.setState(0xcf10, 0x7b23, 0x8520, 0x40b, 0xd7c4, 0xee7a, 0x0, 0x1);
        gbc.writeMem(0xcf10, { 0xcb, 0xde });
        gbc.writeMem(0xee7a, { 0x25 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7b23, gbc.sp());
        EXPECT(0xcf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf10));
        EXPECT(0xde, gbc.readMem(0xcf11));
        EXPECT(0x2d, gbc.readMem(0xee7a));
        // CB DE 0283
        gbc.setState(0x5deb, 0x458d, 0x8cc0, 0xdbef, 0x5dab, 0xd45f, 0x1, 0x1);
        gbc.writeMem(0x5deb, { 0xcb, 0xde });
        gbc.writeMem(0xd45f, { 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x458d, gbc.sp());
        EXPECT(0x5ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xd45f));
        // CB DE 0284
        gbc.setState(0xd92d, 0xc04b, 0xf180, 0xd251, 0xbbc7, 0xb814, 0x1, 0x0);
        gbc.writeMem(0xb814, { 0xcb });
        gbc.writeMem(0xd92d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0xd92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb814));
        EXPECT(0xcb, gbc.readMem(0xd92d));
        EXPECT(0xde, gbc.readMem(0xd92e));
        // CB DE 0285
        gbc.setState(0x8b1e, 0x3c83, 0x8860, 0x43ab, 0xdfc9, 0x9302, 0x0, 0x1);
        gbc.writeMem(0x8b1e, { 0xcb, 0xde });
        gbc.writeMem(0x9302, { 0xe1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1e));
        EXPECT(0xde, gbc.readMem(0x8b1f));
        EXPECT(0xe9, gbc.readMem(0x9302));
        // CB DE 0288
        gbc.setState(0x83da, 0xbb91, 0x4ec0, 0x7d28, 0x16f, 0xea12, 0x1, 0x1);
        gbc.writeMem(0x83da, { 0xcb, 0xde });
        gbc.writeMem(0xea12, { 0xd4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb91, gbc.sp());
        EXPECT(0x83dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83da));
        EXPECT(0xde, gbc.readMem(0x83db));
        EXPECT(0xdc, gbc.readMem(0xea12));
        // CB DE 0289
        gbc.setState(0x9eba, 0xf012, 0x8c70, 0x3f73, 0xe6ae, 0xa627, 0x0, 0x0);
        gbc.writeMem(0x9eba, { 0xcb, 0xde });
        gbc.writeMem(0xa627, { 0xa });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf012, gbc.sp());
        EXPECT(0x9ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eba));
        EXPECT(0xde, gbc.readMem(0x9ebb));
        EXPECT(0xa, gbc.readMem(0xa627));
        // CB DE 028C
        gbc.setState(0x46b5, 0x4450, 0x6c0, 0xa3d6, 0x510c, 0x3c59, 0x1, 0x0);
        gbc.writeMem(0x3c59, { 0x6b });
        gbc.writeMem(0x46b5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x46b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0291
        gbc.setState(0x5b58, 0x193c, 0xf530, 0x39af, 0x758f, 0xc897, 0x0, 0x1);
        gbc.writeMem(0x5b58, { 0xcb, 0xde });
        gbc.writeMem(0xc897, { 0xbe });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0x5b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc897));
        // CB DE 0292
        gbc.setState(0xa3c, 0xa5b9, 0x310, 0xf4cc, 0x6ab1, 0x34d4, 0x1, 0x1);
        gbc.writeMem(0xa3c, { 0xcb, 0xde });
        gbc.writeMem(0x34d4, { 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa5b9, gbc.sp());
        EXPECT(0xa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0293
        gbc.setState(0x50bf, 0x8798, 0x8160, 0x89c7, 0xed02, 0x7189, 0x0, 0x1);
        gbc.writeMem(0x50bf, { 0xcb, 0xde });
        gbc.writeMem(0x7189, { 0x9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x50c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0294
        gbc.setState(0x586a, 0x9d3b, 0x66b0, 0x4b03, 0x9204, 0xb198, 0x0, 0x0);
        gbc.writeMem(0x586a, { 0xcb, 0xde });
        gbc.writeMem(0xb198, { 0x27 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x586c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb198));
        // CB DE 0295
        gbc.setState(0x4634, 0x7630, 0xea20, 0xdd59, 0xf081, 0x93a0, 0x0, 0x0);
        gbc.writeMem(0x4634, { 0xcb, 0xde });
        gbc.writeMem(0x93a0, { 0x73 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0x4636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x93a0));
        // CB DE 0296
        gbc.setState(0x4bc7, 0x200a, 0x93c0, 0x3ab8, 0xf2cd, 0x6e03, 0x1, 0x1);
        gbc.writeMem(0x4bc7, { 0xcb, 0xde });
        gbc.writeMem(0x6e03, { 0xfc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x200a, gbc.sp());
        EXPECT(0x4bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0297
        gbc.setState(0x2d0, 0x52c7, 0xd5e0, 0x8706, 0xdedd, 0x3d7e, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0xcb, 0xde });
        gbc.writeMem(0x3d7e, { 0xfb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0298
        gbc.setState(0x39cc, 0xcb38, 0x9960, 0xf570, 0x9299, 0x9184, 0x1, 0x1);
        gbc.writeMem(0x39cc, { 0xcb, 0xde });
        gbc.writeMem(0x9184, { 0xd6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcb38, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9184));
        // CB DE 029A
        gbc.setState(0x43f1, 0xa7ee, 0xdb80, 0xdd22, 0x7ae6, 0x9891, 0x1, 0x1);
        gbc.writeMem(0x43f1, { 0xcb, 0xde });
        gbc.writeMem(0x9891, { 0x63 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa7ee, gbc.sp());
        EXPECT(0x43f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9891));
        // CB DE 029B
        gbc.setState(0x4ce2, 0x4762, 0x8390, 0x689a, 0xfaa5, 0x3063, 0x1, 0x1);
        gbc.writeMem(0x3063, { 0xbb });
        gbc.writeMem(0x4ce2, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4762, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 029C
        gbc.setState(0xe05d, 0x5648, 0x1060, 0x7a1c, 0xf091, 0x9a51, 0x1, 0x0);
        gbc.writeMem(0x9a51, { 0x59 });
        gbc.writeMem(0xe05d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0xe05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9a51));
        EXPECT(0xcb, gbc.readMem(0xe05d));
        EXPECT(0xde, gbc.readMem(0xe05e));
        // CB DE 029D
        gbc.setState(0x149a, 0xffba, 0x6b40, 0x7490, 0x82a2, 0x7132, 0x0, 0x0);
        gbc.writeMem(0x149a, { 0xcb, 0xde });
        gbc.writeMem(0x7132, { 0xd8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xffba, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 029E
        gbc.setState(0x4ea8, 0x27a7, 0x3e0, 0xe51f, 0x2770, 0x375d, 0x1, 0x0);
        gbc.writeMem(0x375d, { 0xfb });
        gbc.writeMem(0x4ea8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0x4eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 029F
        gbc.setState(0x2496, 0xa092, 0x5c40, 0xc44c, 0x7209, 0xc2da, 0x1, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0xde });
        gbc.writeMem(0xc2da, { 0x25 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa092, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc2da));
        // CB DE 02A0
        gbc.setState(0xd3e, 0x9c77, 0x6480, 0x4909, 0x3c4f, 0x9227, 0x1, 0x0);
        gbc.writeMem(0xd3e, { 0xcb, 0xde });
        gbc.writeMem(0x9227, { 0x96 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9c77, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9227));
        // CB DE 02A1
        gbc.setState(0x87d7, 0x9b57, 0x2f60, 0x1131, 0x3ef4, 0xf249, 0x1, 0x0);
        gbc.writeMem(0x87d7, { 0xcb, 0xde });
        gbc.writeMem(0xf249, { 0x4f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0x87d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d7));
        EXPECT(0xde, gbc.readMem(0x87d8));
        EXPECT(0x4f, gbc.readMem(0xf249));
        // CB DE 02A2
        gbc.setState(0x8ce7, 0x9847, 0x6670, 0xbe6e, 0x592b, 0xdb80, 0x0, 0x0);
        gbc.writeMem(0x8ce7, { 0xcb, 0xde });
        gbc.writeMem(0xdb80, { 0x78 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9847, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce7));
        EXPECT(0xde, gbc.readMem(0x8ce8));
        EXPECT(0x78, gbc.readMem(0xdb80));
        // CB DE 02A3
        gbc.setState(0x9f59, 0x477e, 0x9920, 0x49e3, 0x19bc, 0xb1a5, 0x1, 0x1);
        gbc.writeMem(0x9f59, { 0xcb, 0xde });
        gbc.writeMem(0xb1a5, { 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x477e, gbc.sp());
        EXPECT(0x9f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f59));
        EXPECT(0xde, gbc.readMem(0x9f5a));
        EXPECT(0x7d, gbc.readMem(0xb1a5));
        // CB DE 02A6
        gbc.setState(0xd6eb, 0x30cc, 0x5bd0, 0x2e2, 0x85c7, 0xfdaa, 0x0, 0x1);
        gbc.writeMem(0xd6eb, { 0xcb, 0xde });
        gbc.writeMem(0xfdaa, { 0xcf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x30cc, gbc.sp());
        EXPECT(0xd6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6eb));
        EXPECT(0xde, gbc.readMem(0xd6ec));
        EXPECT(0xcf, gbc.readMem(0xfdaa));
        // CB DE 02A7
        gbc.setState(0xb40e, 0x6d7f, 0x5680, 0x7f02, 0xb8, 0x531, 0x0, 0x1);
        gbc.writeMem(0x531, { 0x7b });
        gbc.writeMem(0xb40e, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0xb410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40e));
        EXPECT(0xde, gbc.readMem(0xb40f));
        // CB DE 02A8
        gbc.setState(0x5455, 0x974, 0x6490, 0x6990, 0x1946, 0x1e30, 0x1, 0x1);
        gbc.writeMem(0x1e30, { 0xad });
        gbc.writeMem(0x5455, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x974, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02A9
        gbc.setState(0x3696, 0x1802, 0xe000, 0xec23, 0x447a, 0xa050, 0x0, 0x1);
        gbc.writeMem(0x3696, { 0xcb, 0xde });
        gbc.writeMem(0xa050, { 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0x3698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa050));
        // CB DE 02AB
        gbc.setState(0xc233, 0x296c, 0xf630, 0x5628, 0x3373, 0xa45e, 0x0, 0x0);
        gbc.writeMem(0xa45e, { 0x9a });
        gbc.writeMem(0xc233, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0xc235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa45e));
        EXPECT(0xcb, gbc.readMem(0xc233));
        EXPECT(0xde, gbc.readMem(0xc234));
        // CB DE 02AC
        gbc.setState(0xd3b5, 0x2dc4, 0x5c50, 0x3da4, 0xb014, 0x325, 0x1, 0x1);
        gbc.writeMem(0x325, { 0xd });
        gbc.writeMem(0xd3b5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2dc4, gbc.sp());
        EXPECT(0xd3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b5));
        EXPECT(0xde, gbc.readMem(0xd3b6));
        // CB DE 02AD
        gbc.setState(0x4c20, 0x46f9, 0xa750, 0xccf6, 0x46b5, 0x23b9, 0x0, 0x0);
        gbc.writeMem(0x23b9, { 0xc8 });
        gbc.writeMem(0x4c20, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x46f9, gbc.sp());
        EXPECT(0x4c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02AE
        gbc.setState(0x8094, 0x46e, 0xbd70, 0x6842, 0x8971, 0xd686, 0x1, 0x0);
        gbc.writeMem(0x8094, { 0xcb, 0xde });
        gbc.writeMem(0xd686, { 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x46e, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8094));
        EXPECT(0xde, gbc.readMem(0x8095));
        EXPECT(0x2c, gbc.readMem(0xd686));
        // CB DE 02AF
        gbc.setState(0x72e, 0x57a8, 0xbde0, 0x1492, 0x286b, 0x2d9a, 0x1, 0x0);
        gbc.writeMem(0x72e, { 0xcb, 0xde });
        gbc.writeMem(0x2d9a, { 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0x730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02B0
        gbc.setState(0x963b, 0xda88, 0x5d10, 0x93b1, 0x7880, 0x8fb8, 0x1, 0x0);
        gbc.writeMem(0x8fb8, { 0xb });
        gbc.writeMem(0x963b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8fb8));
        EXPECT(0xcb, gbc.readMem(0x963b));
        EXPECT(0xde, gbc.readMem(0x963c));
        // CB DE 02B1
        gbc.setState(0x679a, 0xb979, 0xb990, 0x407e, 0xeffe, 0xd142, 0x1, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0xde });
        gbc.writeMem(0xd142, { 0x7e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd142));
        // CB DE 02B3
        gbc.setState(0x3d19, 0x895, 0x65a0, 0xdcef, 0x6938, 0x524d, 0x1, 0x1);
        gbc.writeMem(0x3d19, { 0xcb, 0xde });
        gbc.writeMem(0x524d, { 0x1c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02B5
        gbc.setState(0xeac5, 0x7a5d, 0x9fa0, 0x9246, 0x2a7c, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0xd2db, { 0xfe });
        gbc.writeMem(0xeac5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7a5d, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd2db));
        EXPECT(0xcb, gbc.readMem(0xeac5));
        EXPECT(0xde, gbc.readMem(0xeac6));
        // CB DE 02B7
        gbc.setState(0x48ea, 0xb7b8, 0x4030, 0xfc17, 0x1bce, 0x32b8, 0x1, 0x1);
        gbc.writeMem(0x32b8, { 0x8a });
        gbc.writeMem(0x48ea, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb7b8, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02B8
        gbc.setState(0xd4ae, 0x9e58, 0xd850, 0x60f6, 0x8c30, 0x1e51, 0x1, 0x1);
        gbc.writeMem(0x1e51, { 0x9f });
        gbc.writeMem(0xd4ae, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0xd4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ae));
        EXPECT(0xde, gbc.readMem(0xd4af));
        // CB DE 02B9
        gbc.setState(0xa2e1, 0x1c0d, 0xa8d0, 0x3b8b, 0x871b, 0xe2a3, 0x1, 0x0);
        gbc.writeMem(0xa2e1, { 0xcb, 0xde });
        gbc.writeMem(0xe2a3, { 0x5b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0xa2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e1));
        EXPECT(0xde, gbc.readMem(0xa2e2));
        EXPECT(0x5b, gbc.readMem(0xe2a3));
        // CB DE 02BA
        gbc.setState(0x1049, 0x77cc, 0xc620, 0xdc1, 0xf3f7, 0x2e84, 0x1, 0x0);
        gbc.writeMem(0x1049, { 0xcb, 0xde });
        gbc.writeMem(0x2e84, { 0xeb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x77cc, gbc.sp());
        EXPECT(0x104b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02BB
        gbc.setState(0xa35a, 0x7287, 0xad20, 0x36bf, 0x1faa, 0xc875, 0x1, 0x1);
        gbc.writeMem(0xa35a, { 0xcb, 0xde });
        gbc.writeMem(0xc875, { 0x73 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7287, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0xde, gbc.readMem(0xa35b));
        EXPECT(0x7b, gbc.readMem(0xc875));
        // CB DE 02BD
        gbc.setState(0x1553, 0xf221, 0xc150, 0xb0fc, 0x96be, 0xbf43, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0xde });
        gbc.writeMem(0xbf43, { 0x3d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf221, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xbf43));
        // CB DE 02BE
        gbc.setState(0x64e6, 0xa189, 0xb160, 0x28aa, 0x37e7, 0xb4f, 0x1, 0x1);
        gbc.writeMem(0xb4f, { 0xac });
        gbc.writeMem(0x64e6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa189, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02C0
        gbc.setState(0xba56, 0xdda2, 0xde0, 0xba4e, 0x239a, 0x9ac2, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0x53 });
        gbc.writeMem(0xba56, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9ac2));
        EXPECT(0xcb, gbc.readMem(0xba56));
        EXPECT(0xde, gbc.readMem(0xba57));
        // CB DE 02C1
        gbc.setState(0x119f, 0x65c8, 0xd0e0, 0x917e, 0xb46e, 0xaa56, 0x0, 0x1);
        gbc.writeMem(0x119f, { 0xcb, 0xde });
        gbc.writeMem(0xaa56, { 0x20 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x65c8, gbc.sp());
        EXPECT(0x11a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaa56));
        // CB DE 02C2
        gbc.setState(0x2d56, 0x6c57, 0x4840, 0x512a, 0xdf48, 0x9144, 0x1, 0x0);
        gbc.writeMem(0x2d56, { 0xcb, 0xde });
        gbc.writeMem(0x9144, { 0xe });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0x2d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9144));
        // CB DE 02C3
        gbc.setState(0xdabc, 0xfc8e, 0xb5b0, 0x6f59, 0xf890, 0xa4bc, 0x1, 0x0);
        gbc.writeMem(0xa4bc, { 0x4d });
        gbc.writeMem(0xdabc, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa4bc));
        EXPECT(0xcb, gbc.readMem(0xdabc));
        EXPECT(0xde, gbc.readMem(0xdabd));
        // CB DE 02C4
        gbc.setState(0xdde9, 0x3d8c, 0x47f0, 0x5c29, 0xef3a, 0xe1a5, 0x1, 0x1);
        gbc.writeMem(0xdde9, { 0xcb, 0xde });
        gbc.writeMem(0xe1a5, { 0x14 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3d8c, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde9));
        EXPECT(0xde, gbc.readMem(0xddea));
        EXPECT(0x1c, gbc.readMem(0xe1a5));
        // CB DE 02C6
        gbc.setState(0x8da, 0x1b1f, 0x4c0, 0x5dc4, 0x87e4, 0x18bb, 0x0, 0x0);
        gbc.writeMem(0x8da, { 0xcb, 0xde });
        gbc.writeMem(0x18bb, { 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0x8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02C7
        gbc.setState(0xee83, 0xb8df, 0x5670, 0x4f4b, 0xd1b8, 0x9ccc, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0xf7 });
        gbc.writeMem(0xee83, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8df, gbc.sp());
        EXPECT(0xee85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9ccc));
        EXPECT(0xcb, gbc.readMem(0xee83));
        EXPECT(0xde, gbc.readMem(0xee84));
        // CB DE 02C8
        gbc.setState(0xfdd, 0x6a4d, 0xf0, 0x41ba, 0xaca0, 0xb1cf, 0x1, 0x0);
        gbc.writeMem(0xfdd, { 0xcb, 0xde });
        gbc.writeMem(0xb1cf, { 0x29 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6a4d, gbc.sp());
        EXPECT(0xfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb1cf));
        // CB DE 02CA
        gbc.setState(0x4e09, 0x3b40, 0x7b90, 0x5a6f, 0x6a6b, 0xebd8, 0x1, 0x1);
        gbc.writeMem(0x4e09, { 0xcb, 0xde });
        gbc.writeMem(0xebd8, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xebd8));
        // CB DE 02CB
        gbc.setState(0x522a, 0x4f57, 0xe200, 0xdc68, 0x70e1, 0x4aa1, 0x0, 0x1);
        gbc.writeMem(0x4aa1, { 0xaa });
        gbc.writeMem(0x522a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0x522c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02CC
        gbc.setState(0xa6f3, 0x2013, 0x4350, 0x2d96, 0x6d90, 0x642d, 0x1, 0x1);
        gbc.writeMem(0x642d, { 0x4b });
        gbc.writeMem(0xa6f3, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0xa6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f3));
        EXPECT(0xde, gbc.readMem(0xa6f4));
        // CB DE 02CD
        gbc.setState(0x2523, 0x8bb5, 0x3480, 0x4f2e, 0xad17, 0xec32, 0x0, 0x1);
        gbc.writeMem(0x2523, { 0xcb, 0xde });
        gbc.writeMem(0xec32, { 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8bb5, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xec32));
        // CB DE 02D0
        gbc.setState(0xa7f0, 0x21a1, 0x9c70, 0x1ea7, 0xb823, 0x9917, 0x0, 0x1);
        gbc.writeMem(0x9917, { 0x3b });
        gbc.writeMem(0xa7f0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x21a1, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9917));
        EXPECT(0xcb, gbc.readMem(0xa7f0));
        EXPECT(0xde, gbc.readMem(0xa7f1));
        // CB DE 02D1
        gbc.setState(0x875c, 0xd739, 0xdb70, 0x569d, 0x81f6, 0x78ca, 0x1, 0x0);
        gbc.writeMem(0x78ca, { 0x9 });
        gbc.writeMem(0x875c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd739, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875c));
        EXPECT(0xde, gbc.readMem(0x875d));
        // CB DE 02D2
        gbc.setState(0xe5f, 0x5274, 0xaa0, 0x1f9e, 0xce79, 0xe8ee, 0x1, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xde });
        gbc.writeMem(0xe8ee, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe8ee));
        // CB DE 02D3
        gbc.setState(0x6448, 0x3cea, 0x4330, 0xe006, 0x98e, 0x8338, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0xcb, 0xde });
        gbc.writeMem(0x8338, { 0xdd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3cea, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8338));
        // CB DE 02D4
        gbc.setState(0x8b4f, 0xb177, 0xe640, 0x240d, 0xa743, 0x60c7, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0x8e });
        gbc.writeMem(0x8b4f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0x8b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4f));
        EXPECT(0xde, gbc.readMem(0x8b50));
        // CB DE 02D5
        gbc.setState(0xde56, 0xaba7, 0x5820, 0x671a, 0x2eaf, 0x5fd, 0x0, 0x1);
        gbc.writeMem(0x5fd, { 0x2e });
        gbc.writeMem(0xde56, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde56));
        EXPECT(0xde, gbc.readMem(0xde57));
        // CB DE 02D7
        gbc.setState(0x50d8, 0xb937, 0x49d0, 0xe004, 0x15a1, 0x3391, 0x0, 0x1);
        gbc.writeMem(0x3391, { 0xd });
        gbc.writeMem(0x50d8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x50da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02D8
        gbc.setState(0xd014, 0xd0ec, 0xbbd0, 0x5d29, 0x6fb0, 0xeeab, 0x0, 0x0);
        gbc.writeMem(0xd014, { 0xcb, 0xde });
        gbc.writeMem(0xeeab, { 0x53 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd0ec, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd014));
        EXPECT(0xde, gbc.readMem(0xd015));
        EXPECT(0x5b, gbc.readMem(0xeeab));
        // CB DE 02D9
        gbc.setState(0x184f, 0x57f2, 0x1160, 0xd82, 0x6fa1, 0x4afb, 0x1, 0x0);
        gbc.writeMem(0x184f, { 0xcb, 0xde });
        gbc.writeMem(0x4afb, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02DB
        gbc.setState(0x7f99, 0x38aa, 0xe610, 0x2287, 0x3bd6, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x7f99, { 0xcb, 0xde });
        gbc.writeMem(0xfc8e, { 0x35 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x38aa, gbc.sp());
        EXPECT(0x7f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xfc8e));
        // CB DE 02DC
        gbc.setState(0x39c6, 0xab35, 0xb0f0, 0xedd, 0xb220, 0xf749, 0x1, 0x1);
        gbc.writeMem(0x39c6, { 0xcb, 0xde });
        gbc.writeMem(0xf749, { 0x11 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xf749));
        // CB DE 02DD
        gbc.setState(0x5e63, 0xb2fe, 0xd4c0, 0xbeff, 0x6496, 0xabab, 0x1, 0x1);
        gbc.writeMem(0x5e63, { 0xcb, 0xde });
        gbc.writeMem(0xabab, { 0x98 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb2fe, gbc.sp());
        EXPECT(0x5e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xabab));
        // CB DE 02DE
        gbc.setState(0xecaf, 0x9754, 0x11d0, 0x4596, 0x3bd4, 0xbf72, 0x1, 0x1);
        gbc.writeMem(0xbf72, { 0xba });
        gbc.writeMem(0xecaf, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9754, gbc.sp());
        EXPECT(0xecb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbf72));
        EXPECT(0xcb, gbc.readMem(0xecaf));
        EXPECT(0xde, gbc.readMem(0xecb0));
        // CB DE 02DF
        gbc.setState(0x5717, 0xaf3b, 0xde60, 0xed1b, 0xaba5, 0xdbd2, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0xde });
        gbc.writeMem(0xdbd2, { 0x42 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaf3b, gbc.sp());
        EXPECT(0x5719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xdbd2));
        // CB DE 02E1
        gbc.setState(0x45a0, 0xe929, 0x840, 0xa6d5, 0x7e59, 0x7abb, 0x1, 0x0);
        gbc.writeMem(0x45a0, { 0xcb, 0xde });
        gbc.writeMem(0x7abb, { 0xf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02E2
        gbc.setState(0x74fe, 0x4d2e, 0xd610, 0xa58a, 0xb8ee, 0xe09c, 0x1, 0x0);
        gbc.writeMem(0x74fe, { 0xcb, 0xde });
        gbc.writeMem(0xe09c, { 0x72 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d2e, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe09c));
        // CB DE 02E3
        gbc.setState(0xc81f, 0x905e, 0xb1e0, 0xa45f, 0x416c, 0xad2c, 0x0, 0x1);
        gbc.writeMem(0xad2c, { 0x9f });
        gbc.writeMem(0xc81f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0xc821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xad2c));
        EXPECT(0xcb, gbc.readMem(0xc81f));
        EXPECT(0xde, gbc.readMem(0xc820));
        // CB DE 02E4
        gbc.setState(0x4857, 0xd521, 0xbdd0, 0x570c, 0x1cbe, 0xce57, 0x0, 0x1);
        gbc.writeMem(0x4857, { 0xcb, 0xde });
        gbc.writeMem(0xce57, { 0xcd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd521, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xce57));
        // CB DE 02E5
        gbc.setState(0x2a0b, 0x6439, 0x190, 0x7370, 0xfb0c, 0xb0c8, 0x1, 0x1);
        gbc.writeMem(0x2a0b, { 0xcb, 0xde });
        gbc.writeMem(0xb0c8, { 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6439, gbc.sp());
        EXPECT(0x2a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb0c8));
        // CB DE 02E6
        gbc.setState(0xb888, 0x2a7a, 0x5b0, 0x8bda, 0x7f4c, 0x346a, 0x1, 0x0);
        gbc.writeMem(0x346a, { 0xa8 });
        gbc.writeMem(0xb888, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb888));
        EXPECT(0xde, gbc.readMem(0xb889));
        // CB DE 02E7
        gbc.setState(0xca4c, 0x9369, 0x9450, 0xfc8f, 0xbb3e, 0xc599, 0x0, 0x1);
        gbc.writeMem(0xc599, { 0x78 });
        gbc.writeMem(0xca4c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9369, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc599));
        EXPECT(0xcb, gbc.readMem(0xca4c));
        EXPECT(0xde, gbc.readMem(0xca4d));
        // CB DE 02E8
        gbc.setState(0xb2eb, 0xf173, 0x9230, 0x2351, 0x9867, 0xa98c, 0x1, 0x1);
        gbc.writeMem(0xa98c, { 0x54 });
        gbc.writeMem(0xb2eb, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa98c));
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xde, gbc.readMem(0xb2ec));
        // CB DE 02E9
        gbc.setState(0xc99c, 0xfc59, 0x25a0, 0x2ad3, 0xdc53, 0xd67d, 0x0, 0x0);
        gbc.writeMem(0xc99c, { 0xcb, 0xde });
        gbc.writeMem(0xd67d, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0xde, gbc.readMem(0xc99d));
        EXPECT(0x69, gbc.readMem(0xd67d));
        // CB DE 02EE
        gbc.setState(0x2ef4, 0x9eee, 0x8410, 0xf6af, 0xa5a3, 0xcfb, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0xbb });
        gbc.writeMem(0x2ef4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9eee, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02EF
        gbc.setState(0x4222, 0xd032, 0x24e0, 0x20fc, 0x3eec, 0x8b6b, 0x0, 0x0);
        gbc.writeMem(0x4222, { 0xcb, 0xde });
        gbc.writeMem(0x8b6b, { 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd032, gbc.sp());
        EXPECT(0x4224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8b6b));
        // CB DE 02F0
        gbc.setState(0xddb4, 0xbb4b, 0xac90, 0x9138, 0x83bf, 0x857a, 0x0, 0x0);
        gbc.writeMem(0x857a, { 0xcd });
        gbc.writeMem(0xddb4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x857a));
        EXPECT(0xcb, gbc.readMem(0xddb4));
        EXPECT(0xde, gbc.readMem(0xddb5));
        // CB DE 02F1
        gbc.setState(0xb18b, 0x9510, 0x4170, 0x4004, 0x7c6c, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0xb18b, { 0xcb, 0xde });
        gbc.writeMem(0xb8d9, { 0xcd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9510, gbc.sp());
        EXPECT(0xb18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18b));
        EXPECT(0xde, gbc.readMem(0xb18c));
        EXPECT(0xcd, gbc.readMem(0xb8d9));
        // CB DE 02F2
        gbc.setState(0xeb8b, 0xec45, 0xbca0, 0x126a, 0xb865, 0x697, 0x0, 0x0);
        gbc.writeMem(0x697, { 0xc8 });
        gbc.writeMem(0xeb8b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0xeb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8b));
        EXPECT(0xde, gbc.readMem(0xeb8c));
        // CB DE 02F4
        gbc.setState(0x574c, 0x703e, 0xa940, 0xbef6, 0x786e, 0xb75a, 0x0, 0x0);
        gbc.writeMem(0x574c, { 0xcb, 0xde });
        gbc.writeMem(0xb75a, { 0xd2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0x574e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb75a));
        // CB DE 02F5
        gbc.setState(0xc687, 0xc8e0, 0x7010, 0x10d6, 0x1bb3, 0x6ab5, 0x1, 0x0);
        gbc.writeMem(0x6ab5, { 0xc });
        gbc.writeMem(0xc687, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc8e0, gbc.sp());
        EXPECT(0xc689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc687));
        EXPECT(0xde, gbc.readMem(0xc688));
        // CB DE 02F6
        gbc.setState(0xdfb4, 0x5d17, 0xcc40, 0x858e, 0x3627, 0xa634, 0x0, 0x1);
        gbc.writeMem(0xa634, { 0xe3 });
        gbc.writeMem(0xdfb4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5d17, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa634));
        EXPECT(0xcb, gbc.readMem(0xdfb4));
        EXPECT(0xde, gbc.readMem(0xdfb5));
        // CB DE 02F9
        gbc.setState(0xf98, 0x700a, 0x1200, 0xa378, 0xa17d, 0x7a73, 0x0, 0x1);
        gbc.writeMem(0xf98, { 0xcb, 0xde });
        gbc.writeMem(0x7a73, { 0x58 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x700a, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 02FB
        gbc.setState(0x8088, 0x9245, 0xbca0, 0x89fb, 0x964a, 0xa81b, 0x1, 0x1);
        gbc.writeMem(0x8088, { 0xcb, 0xde });
        gbc.writeMem(0xa81b, { 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9245, gbc.sp());
        EXPECT(0x808a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8088));
        EXPECT(0xde, gbc.readMem(0x8089));
        EXPECT(0x1a, gbc.readMem(0xa81b));
        // CB DE 02FC
        gbc.setState(0x8ce8, 0xa11a, 0x4800, 0xe940, 0x2fef, 0x4931, 0x0, 0x1);
        gbc.writeMem(0x4931, { 0xfb });
        gbc.writeMem(0x8ce8, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa11a, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce8));
        EXPECT(0xde, gbc.readMem(0x8ce9));
        // CB DE 02FE
        gbc.setState(0x2eaf, 0x2e35, 0x57b0, 0x6670, 0x1c29, 0x5c3c, 0x0, 0x0);
        gbc.writeMem(0x2eaf, { 0xcb, 0xde });
        gbc.writeMem(0x5c3c, { 0xfc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e35, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 02FF
        gbc.setState(0x2f4b, 0xf47a, 0xcf50, 0xa46b, 0x837e, 0x5fc0, 0x1, 0x0);
        gbc.writeMem(0x2f4b, { 0xcb, 0xde });
        gbc.writeMem(0x5fc0, { 0xf8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf47a, gbc.sp());
        EXPECT(0x2f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0300
        gbc.setState(0x52a, 0xb414, 0x9f70, 0x5bd1, 0xf0de, 0x26a3, 0x1, 0x0);
        gbc.writeMem(0x52a, { 0xcb, 0xde });
        gbc.writeMem(0x26a3, { 0xad });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0303
        gbc.setState(0xa00d, 0x73d7, 0x28e0, 0x4ea8, 0xabf4, 0xe7e2, 0x1, 0x0);
        gbc.writeMem(0xa00d, { 0xcb, 0xde });
        gbc.writeMem(0xe7e2, { 0xd1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0xa00f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00d));
        EXPECT(0xde, gbc.readMem(0xa00e));
        EXPECT(0xd9, gbc.readMem(0xe7e2));
        // CB DE 0304
        gbc.setState(0x456d, 0xd4e2, 0x5600, 0x1d9b, 0x73d6, 0x15a1, 0x1, 0x0);
        gbc.writeMem(0x15a1, { 0xa8 });
        gbc.writeMem(0x456d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4e2, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0305
        gbc.setState(0x4100, 0xbc42, 0x98a0, 0x9ba1, 0x334a, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0x4100, { 0xcb, 0xde });
        gbc.writeMem(0x9a67, { 0xad });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbc42, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a67));
        // CB DE 0306
        gbc.setState(0x6823, 0x12ae, 0x4c10, 0x8c0d, 0x258, 0xa79e, 0x0, 0x0);
        gbc.writeMem(0x6823, { 0xcb, 0xde });
        gbc.writeMem(0xa79e, { 0x28 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x12ae, gbc.sp());
        EXPECT(0x6825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa79e));
        // CB DE 0308
        gbc.setState(0x5668, 0x8fc9, 0x1da0, 0x4b8f, 0x599b, 0x5782, 0x0, 0x0);
        gbc.writeMem(0x5668, { 0xcb, 0xde });
        gbc.writeMem(0x5782, { 0x3b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x566a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0309
        gbc.setState(0x9e45, 0x5266, 0xfa30, 0x6abb, 0x7e3c, 0xcc1d, 0x1, 0x0);
        gbc.writeMem(0x9e45, { 0xcb, 0xde });
        gbc.writeMem(0xcc1d, { 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0x9e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e45));
        EXPECT(0xde, gbc.readMem(0x9e46));
        EXPECT(0x7a, gbc.readMem(0xcc1d));
        // CB DE 030A
        gbc.setState(0xcaf, 0x4370, 0xe350, 0x9aae, 0x70b4, 0xd9c2, 0x1, 0x1);
        gbc.writeMem(0xcaf, { 0xcb, 0xde });
        gbc.writeMem(0xd9c2, { 0x70 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4370, gbc.sp());
        EXPECT(0xcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd9c2));
        // CB DE 030C
        gbc.setState(0x53c, 0xcc83, 0xc460, 0xe914, 0xa5f5, 0x595f, 0x1, 0x0);
        gbc.writeMem(0x53c, { 0xcb, 0xde });
        gbc.writeMem(0x595f, { 0xdb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcc83, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 030E
        gbc.setState(0xe78a, 0x82a2, 0xca0, 0x3d95, 0x2932, 0x307f, 0x0, 0x0);
        gbc.writeMem(0x307f, { 0x9d });
        gbc.writeMem(0xe78a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x82a2, gbc.sp());
        EXPECT(0xe78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78a));
        EXPECT(0xde, gbc.readMem(0xe78b));
        // CB DE 030F
        gbc.setState(0xe5f2, 0x2bdf, 0x79b0, 0x4ca6, 0xe368, 0xf740, 0x1, 0x0);
        gbc.writeMem(0xe5f2, { 0xcb, 0xde });
        gbc.writeMem(0xf740, { 0x53 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2bdf, gbc.sp());
        EXPECT(0xe5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f2));
        EXPECT(0xde, gbc.readMem(0xe5f3));
        EXPECT(0x5b, gbc.readMem(0xf740));
        // CB DE 0310
        gbc.setState(0xbc0d, 0xfb, 0x62a0, 0x4880, 0x8e8c, 0xa2d5, 0x1, 0x0);
        gbc.writeMem(0xa2d5, { 0xfa });
        gbc.writeMem(0xbc0d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfb, gbc.sp());
        EXPECT(0xbc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa2d5));
        EXPECT(0xcb, gbc.readMem(0xbc0d));
        EXPECT(0xde, gbc.readMem(0xbc0e));
        // CB DE 0311
        gbc.setState(0xe89d, 0x470e, 0x1dd0, 0x6583, 0xa601, 0xc9ed, 0x0, 0x0);
        gbc.writeMem(0xc9ed, { 0x5d });
        gbc.writeMem(0xe89d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x470e, gbc.sp());
        EXPECT(0xe89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc9ed));
        EXPECT(0xcb, gbc.readMem(0xe89d));
        EXPECT(0xde, gbc.readMem(0xe89e));
        // CB DE 0312
        gbc.setState(0x1f68, 0x47b2, 0xb610, 0xa5d5, 0x810a, 0x831f, 0x0, 0x0);
        gbc.writeMem(0x1f68, { 0xcb, 0xde });
        gbc.writeMem(0x831f, { 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0x1f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x831f));
        // CB DE 0313
        gbc.setState(0x3b42, 0x1ef6, 0xda10, 0x127c, 0x4b68, 0x220d, 0x0, 0x1);
        gbc.writeMem(0x220d, { 0x98 });
        gbc.writeMem(0x3b42, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1ef6, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0314
        gbc.setState(0xb389, 0x5e5c, 0x8400, 0x30e1, 0xfd11, 0xd41b, 0x1, 0x1);
        gbc.writeMem(0xb389, { 0xcb, 0xde });
        gbc.writeMem(0xd41b, { 0x95 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5e5c, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb389));
        EXPECT(0xde, gbc.readMem(0xb38a));
        EXPECT(0x9d, gbc.readMem(0xd41b));
        // CB DE 0316
        gbc.setState(0xfbd, 0xd15a, 0xda90, 0x1c02, 0xd035, 0xdcbe, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0xde });
        gbc.writeMem(0xdcbe, { 0xb6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xdcbe));
        // CB DE 031A
        gbc.setState(0x5c18, 0xc672, 0x2e40, 0x9258, 0xaff3, 0xeeb9, 0x1, 0x0);
        gbc.writeMem(0x5c18, { 0xcb, 0xde });
        gbc.writeMem(0xeeb9, { 0x60 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc672, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xeeb9));
        // CB DE 031B
        gbc.setState(0x93cd, 0xfcfb, 0xe890, 0xe0aa, 0xe582, 0x709f, 0x1, 0x1);
        gbc.writeMem(0x709f, { 0xef });
        gbc.writeMem(0x93cd, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfcfb, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cd));
        EXPECT(0xde, gbc.readMem(0x93ce));
        // CB DE 031D
        gbc.setState(0x13ad, 0x8d81, 0x66e0, 0x97cd, 0xcb7b, 0xcb8c, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0xde });
        gbc.writeMem(0xcb8c, { 0x14 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d81, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xcb8c));
        // CB DE 031F
        gbc.setState(0x4d2e, 0x372c, 0xe450, 0x769b, 0x5506, 0xf5c8, 0x1, 0x1);
        gbc.writeMem(0x4d2e, { 0xcb, 0xde });
        gbc.writeMem(0xf5c8, { 0xc6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0x4d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf5c8));
        // CB DE 0321
        gbc.setState(0x1a, 0xeba0, 0x50b0, 0x4877, 0x88d5, 0x7b78, 0x0, 0x1);
        gbc.writeMem(0x1a, { 0xcb, 0xde });
        gbc.writeMem(0x7b78, { 0x1f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0322
        gbc.setState(0x299d, 0xf827, 0x5380, 0xf38d, 0x7693, 0xb62c, 0x0, 0x0);
        gbc.writeMem(0x299d, { 0xcb, 0xde });
        gbc.writeMem(0xb62c, { 0x20 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf827, gbc.sp());
        EXPECT(0x299f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb62c));
        // CB DE 0323
        gbc.setState(0xba56, 0x3bdf, 0xe780, 0xec0b, 0x2b3c, 0xbc41, 0x1, 0x0);
        gbc.writeMem(0xba56, { 0xcb, 0xde });
        gbc.writeMem(0xbc41, { 0x69 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3bdf, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba56));
        EXPECT(0xde, gbc.readMem(0xba57));
        EXPECT(0x69, gbc.readMem(0xbc41));
        // CB DE 0325
        gbc.setState(0xb9d9, 0xb243, 0x9130, 0xbfa2, 0x7659, 0xa9c1, 0x1, 0x1);
        gbc.writeMem(0xa9c1, { 0x12 });
        gbc.writeMem(0xb9d9, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0xb9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa9c1));
        EXPECT(0xcb, gbc.readMem(0xb9d9));
        EXPECT(0xde, gbc.readMem(0xb9da));
        // CB DE 0327
        gbc.setState(0xb110, 0x43e4, 0x1900, 0x9b0d, 0x3531, 0xe44c, 0x1, 0x0);
        gbc.writeMem(0xb110, { 0xcb, 0xde });
        gbc.writeMem(0xe44c, { 0xf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb110));
        EXPECT(0xde, gbc.readMem(0xb111));
        EXPECT(0xf, gbc.readMem(0xe44c));
        // CB DE 0328
        gbc.setState(0x1ece, 0xa8a7, 0x9c20, 0x1f58, 0x1bd, 0x40a3, 0x1, 0x1);
        gbc.writeMem(0x1ece, { 0xcb, 0xde });
        gbc.writeMem(0x40a3, { 0xe });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x1ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0329
        gbc.setState(0x96e6, 0x6832, 0x4f50, 0xf079, 0x84e, 0xee82, 0x1, 0x1);
        gbc.writeMem(0x96e6, { 0xcb, 0xde });
        gbc.writeMem(0xee82, { 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6832, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e6));
        EXPECT(0xde, gbc.readMem(0x96e7));
        EXPECT(0x39, gbc.readMem(0xee82));
        // CB DE 032A
        gbc.setState(0x3c30, 0xbefb, 0x8830, 0xa03a, 0x977, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x37c8, { 0x88 });
        gbc.writeMem(0x3c30, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 032B
        gbc.setState(0x6e89, 0x4233, 0x8560, 0xdde2, 0xf9cd, 0x9124, 0x1, 0x0);
        gbc.writeMem(0x6e89, { 0xcb, 0xde });
        gbc.writeMem(0x9124, { 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4233, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9124));
        // CB DE 032C
        gbc.setState(0xc3e7, 0xb52b, 0xb890, 0x9123, 0x2aa, 0x50cc, 0x0, 0x1);
        gbc.writeMem(0x50cc, { 0x18 });
        gbc.writeMem(0xc3e7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb52b, gbc.sp());
        EXPECT(0xc3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e7));
        EXPECT(0xde, gbc.readMem(0xc3e8));
        // CB DE 032E
        gbc.setState(0xbee, 0xea0e, 0xe1c0, 0xa900, 0x7218, 0x2bd3, 0x1, 0x1);
        gbc.writeMem(0xbee, { 0xcb, 0xde });
        gbc.writeMem(0x2bd3, { 0x6c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0xbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0330
        gbc.setState(0xc791, 0x57, 0x4ec0, 0x6534, 0x947a, 0xff7c, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xde });
        gbc.writeMem(0xff7c, { 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x57, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc791));
        EXPECT(0xde, gbc.readMem(0xc792));
        EXPECT(0x9c, gbc.readMem(0xff7c));
        // CB DE 0331
        gbc.setState(0x84ea, 0x923f, 0x1970, 0xf097, 0x85fc, 0xf405, 0x1, 0x1);
        gbc.writeMem(0x84ea, { 0xcb, 0xde });
        gbc.writeMem(0xf405, { 0x82 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x923f, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ea));
        EXPECT(0xde, gbc.readMem(0x84eb));
        EXPECT(0x8a, gbc.readMem(0xf405));
        // CB DE 0333
        gbc.setState(0xc451, 0x8aae, 0xba20, 0x6e50, 0x712b, 0xd54d, 0x0, 0x1);
        gbc.writeMem(0xc451, { 0xcb, 0xde });
        gbc.writeMem(0xd54d, { 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc451));
        EXPECT(0xde, gbc.readMem(0xc452));
        EXPECT(0xe9, gbc.readMem(0xd54d));
        // CB DE 0334
        gbc.setState(0x56ce, 0x8f8, 0xcab0, 0xd9f9, 0xc4fd, 0x8553, 0x1, 0x1);
        gbc.writeMem(0x56ce, { 0xcb, 0xde });
        gbc.writeMem(0x8553, { 0x7a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8f8, gbc.sp());
        EXPECT(0x56d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8553));
        // CB DE 0335
        gbc.setState(0x6d88, 0x9c7e, 0x5430, 0xb69c, 0x6de0, 0xb2a0, 0x0, 0x1);
        gbc.writeMem(0x6d88, { 0xcb, 0xde });
        gbc.writeMem(0xb2a0, { 0x4a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0x6d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb2a0));
        // CB DE 0337
        gbc.setState(0x5f86, 0x8b23, 0x6930, 0xb6a7, 0x9cfb, 0x6e94, 0x0, 0x0);
        gbc.writeMem(0x5f86, { 0xcb, 0xde });
        gbc.writeMem(0x6e94, { 0xef });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8b23, gbc.sp());
        EXPECT(0x5f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0338
        gbc.setState(0x41ba, 0x5c1b, 0x9d60, 0x646e, 0xb657, 0xd744, 0x0, 0x1);
        gbc.writeMem(0x41ba, { 0xcb, 0xde });
        gbc.writeMem(0xd744, { 0x90 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c1b, gbc.sp());
        EXPECT(0x41bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xd744));
        // CB DE 033B
        gbc.setState(0xbf0d, 0x2677, 0x3280, 0x3e8e, 0xdddb, 0x11c1, 0x1, 0x1);
        gbc.writeMem(0x11c1, { 0x9e });
        gbc.writeMem(0xbf0d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0d));
        EXPECT(0xde, gbc.readMem(0xbf0e));
        // CB DE 033C
        gbc.setState(0xc22a, 0x4517, 0x4b80, 0xe118, 0x6ffc, 0xbb4, 0x0, 0x0);
        gbc.writeMem(0xbb4, { 0x38 });
        gbc.writeMem(0xc22a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4517, gbc.sp());
        EXPECT(0xc22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22a));
        EXPECT(0xde, gbc.readMem(0xc22b));
        // CB DE 033F
        gbc.setState(0xd2fd, 0x52e2, 0x6160, 0xf2ba, 0xb1eb, 0xeae1, 0x0, 0x1);
        gbc.writeMem(0xd2fd, { 0xcb, 0xde });
        gbc.writeMem(0xeae1, { 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x52e2, gbc.sp());
        EXPECT(0xd2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fd));
        EXPECT(0xde, gbc.readMem(0xd2fe));
        EXPECT(0x8a, gbc.readMem(0xeae1));
        // CB DE 0340
        gbc.setState(0xe4b7, 0xa9e8, 0x9050, 0xd54b, 0x96f7, 0x5210, 0x0, 0x0);
        gbc.writeMem(0x5210, { 0xa9 });
        gbc.writeMem(0xe4b7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0xe4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b7));
        EXPECT(0xde, gbc.readMem(0xe4b8));
        // CB DE 0341
        gbc.setState(0xbbae, 0x3c51, 0x6a10, 0x2b61, 0xd524, 0x83d2, 0x0, 0x0);
        gbc.writeMem(0x83d2, { 0xd });
        gbc.writeMem(0xbbae, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x83d2));
        EXPECT(0xcb, gbc.readMem(0xbbae));
        EXPECT(0xde, gbc.readMem(0xbbaf));
        // CB DE 0342
        gbc.setState(0x5dae, 0x8925, 0x9bc0, 0xdb9e, 0xd3d6, 0xfb29, 0x0, 0x0);
        gbc.writeMem(0x5dae, { 0xcb, 0xde });
        gbc.writeMem(0xfb29, { 0x92 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xfb29));
        // CB DE 0343
        gbc.setState(0x3985, 0x648c, 0x65a0, 0x2a7b, 0xb305, 0xafc3, 0x0, 0x0);
        gbc.writeMem(0x3985, { 0xcb, 0xde });
        gbc.writeMem(0xafc3, { 0x80 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xafc3));
        // CB DE 0346
        gbc.setState(0x1057, 0x6ff6, 0x5ea0, 0x808d, 0xa3fd, 0xa757, 0x0, 0x0);
        gbc.writeMem(0x1057, { 0xcb, 0xde });
        gbc.writeMem(0xa757, { 0xff });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x1059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa757));
        // CB DE 0347
        gbc.setState(0xbc96, 0x8b25, 0x7350, 0x76dd, 0x7f07, 0xea08, 0x1, 0x0);
        gbc.writeMem(0xbc96, { 0xcb, 0xde });
        gbc.writeMem(0xea08, { 0x2a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b25, gbc.sp());
        EXPECT(0xbc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc96));
        EXPECT(0xde, gbc.readMem(0xbc97));
        EXPECT(0x2a, gbc.readMem(0xea08));
        // CB DE 0348
        gbc.setState(0xb5e6, 0x15d4, 0xed80, 0xdeda, 0x4f6, 0x6df1, 0x1, 0x0);
        gbc.writeMem(0x6df1, { 0xec });
        gbc.writeMem(0xb5e6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0xb5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e6));
        EXPECT(0xde, gbc.readMem(0xb5e7));
        // CB DE 0349
        gbc.setState(0xcda3, 0x39f1, 0x180, 0x6cba, 0x1e80, 0xecdf, 0x1, 0x0);
        gbc.writeMem(0xcda3, { 0xcb, 0xde });
        gbc.writeMem(0xecdf, { 0x84 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x39f1, gbc.sp());
        EXPECT(0xcda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda3));
        EXPECT(0xde, gbc.readMem(0xcda4));
        EXPECT(0x8c, gbc.readMem(0xecdf));
        // CB DE 034A
        gbc.setState(0x6eff, 0xce2a, 0x6e80, 0xe839, 0x8f85, 0x5231, 0x1, 0x1);
        gbc.writeMem(0x5231, { 0x8b });
        gbc.writeMem(0x6eff, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 034B
        gbc.setState(0xcdac, 0x7e74, 0xa7b0, 0x9a86, 0x97ec, 0x51ee, 0x0, 0x0);
        gbc.writeMem(0x51ee, { 0x98 });
        gbc.writeMem(0xcdac, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7e74, gbc.sp());
        EXPECT(0xcdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdac));
        EXPECT(0xde, gbc.readMem(0xcdad));
        // CB DE 034C
        gbc.setState(0x7cdf, 0x8fc4, 0xc880, 0xdc4f, 0xfded, 0x76cc, 0x0, 0x1);
        gbc.writeMem(0x76cc, { 0xad });
        gbc.writeMem(0x7cdf, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8fc4, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 034D
        gbc.setState(0x372d, 0x3493, 0x25c0, 0x9a5c, 0x8b04, 0xf212, 0x0, 0x1);
        gbc.writeMem(0x372d, { 0xcb, 0xde });
        gbc.writeMem(0xf212, { 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf212));
        // CB DE 034E
        gbc.setState(0x2f6, 0x6f0c, 0x8e40, 0xe9a0, 0x1928, 0xa00d, 0x1, 0x1);
        gbc.writeMem(0x2f6, { 0xcb, 0xde });
        gbc.writeMem(0xa00d, { 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0x2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa00d));
        // CB DE 034F
        gbc.setState(0x4458, 0xe93b, 0xbe80, 0xe78a, 0x8df3, 0x60ba, 0x1, 0x1);
        gbc.writeMem(0x4458, { 0xcb, 0xde });
        gbc.writeMem(0x60ba, { 0x7f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x445a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0352
        gbc.setState(0x48e4, 0x3899, 0xf1c0, 0x2231, 0x472f, 0xba1a, 0x1, 0x0);
        gbc.writeMem(0x48e4, { 0xcb, 0xde });
        gbc.writeMem(0xba1a, { 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba1a));
        // CB DE 0353
        gbc.setState(0x71e, 0xe315, 0xeb80, 0x2168, 0xf4ea, 0x9a90, 0x1, 0x1);
        gbc.writeMem(0x71e, { 0xcb, 0xde });
        gbc.writeMem(0x9a90, { 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0x720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9a90));
        // CB DE 0354
        gbc.setState(0xc7e5, 0xe8ca, 0x9c40, 0xc2e, 0x8c12, 0x1c97, 0x0, 0x1);
        gbc.writeMem(0x1c97, { 0x4b });
        gbc.writeMem(0xc7e5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0xc7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e5));
        EXPECT(0xde, gbc.readMem(0xc7e6));
        // CB DE 0355
        gbc.setState(0xa639, 0x9449, 0x2c10, 0x5488, 0xa78f, 0x7ef, 0x0, 0x0);
        gbc.writeMem(0x7ef, { 0x8b });
        gbc.writeMem(0xa639, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0xa63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa639));
        EXPECT(0xde, gbc.readMem(0xa63a));
        // CB DE 0358
        gbc.setState(0x5ebf, 0x6ccd, 0x7110, 0x2f3a, 0x8319, 0xcb78, 0x0, 0x0);
        gbc.writeMem(0x5ebf, { 0xcb, 0xde });
        gbc.writeMem(0xcb78, { 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6ccd, gbc.sp());
        EXPECT(0x5ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcb78));
        // CB DE 0359
        gbc.setState(0x5ae2, 0x3ef0, 0xf2f0, 0x6a20, 0x1374, 0xe65e, 0x1, 0x1);
        gbc.writeMem(0x5ae2, { 0xcb, 0xde });
        gbc.writeMem(0xe65e, { 0xc5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe65e));
        // CB DE 035A
        gbc.setState(0xe59c, 0x6baa, 0xf620, 0xe787, 0xad98, 0xc143, 0x1, 0x1);
        gbc.writeMem(0xc143, { 0x5c });
        gbc.writeMem(0xe59c, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6baa, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc143));
        EXPECT(0xcb, gbc.readMem(0xe59c));
        EXPECT(0xde, gbc.readMem(0xe59d));
        // CB DE 035B
        gbc.setState(0x3774, 0xe358, 0xd570, 0x6aa, 0xfad7, 0x83b2, 0x1, 0x1);
        gbc.writeMem(0x3774, { 0xcb, 0xde });
        gbc.writeMem(0x83b2, { 0xf2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x3776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x83b2));
        // CB DE 035C
        gbc.setState(0x4008, 0xc438, 0x4ad0, 0x6855, 0xe9b4, 0x418e, 0x1, 0x1);
        gbc.writeMem(0x4008, { 0xcb, 0xde });
        gbc.writeMem(0x418e, { 0xbe });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc438, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 035E
        gbc.setState(0x39e, 0x940, 0xb000, 0x97d1, 0x7ecf, 0x957a, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0xcb, 0xde });
        gbc.writeMem(0x957a, { 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x940, gbc.sp());
        EXPECT(0x3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x957a));
        // CB DE 035F
        gbc.setState(0xa569, 0x6ee7, 0x7dc0, 0x5a94, 0x857c, 0x69d3, 0x0, 0x0);
        gbc.writeMem(0x69d3, { 0x5d });
        gbc.writeMem(0xa569, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa569));
        EXPECT(0xde, gbc.readMem(0xa56a));
        // CB DE 0361
        gbc.setState(0xbdea, 0x10bc, 0xc2c0, 0xf491, 0xc4dc, 0x20d7, 0x1, 0x0);
        gbc.writeMem(0x20d7, { 0xcf });
        gbc.writeMem(0xbdea, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x10bc, gbc.sp());
        EXPECT(0xbdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdea));
        EXPECT(0xde, gbc.readMem(0xbdeb));
        // CB DE 0362
        gbc.setState(0x548d, 0xe431, 0x3330, 0xed9, 0x3a17, 0xdbcb, 0x1, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0xde });
        gbc.writeMem(0xdbcb, { 0x11 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe431, gbc.sp());
        EXPECT(0x548f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbcb));
        // CB DE 0363
        gbc.setState(0x4877, 0x242b, 0xb7e0, 0x1325, 0x8b92, 0xcc81, 0x1, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0xde });
        gbc.writeMem(0xcc81, { 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x242b, gbc.sp());
        EXPECT(0x4879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc81));
        // CB DE 0366
        gbc.setState(0x9abe, 0x870c, 0x7530, 0x58e2, 0x71f, 0x32c8, 0x1, 0x1);
        gbc.writeMem(0x32c8, { 0x4a });
        gbc.writeMem(0x9abe, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0xde, gbc.readMem(0x9abf));
        // CB DE 0367
        gbc.setState(0x4e67, 0x1b03, 0x4980, 0x3cc7, 0x2956, 0x994b, 0x0, 0x1);
        gbc.writeMem(0x4e67, { 0xcb, 0xde });
        gbc.writeMem(0x994b, { 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x4e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x994b));
        // CB DE 0368
        gbc.setState(0x3442, 0xc19b, 0x81c0, 0xf1d7, 0x13c7, 0x5241, 0x1, 0x1);
        gbc.writeMem(0x3442, { 0xcb, 0xde });
        gbc.writeMem(0x5241, { 0xa8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 036B
        gbc.setState(0xd2b8, 0xfdb1, 0x6cf0, 0xcbb1, 0xdc68, 0xe859, 0x0, 0x1);
        gbc.writeMem(0xd2b8, { 0xcb, 0xde });
        gbc.writeMem(0xe859, { 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfdb1, gbc.sp());
        EXPECT(0xd2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b8));
        EXPECT(0xde, gbc.readMem(0xd2b9));
        EXPECT(0x7c, gbc.readMem(0xe859));
        // CB DE 0370
        gbc.setState(0x3dae, 0x295c, 0x7570, 0xf567, 0xa1f3, 0xd1d6, 0x0, 0x0);
        gbc.writeMem(0x3dae, { 0xcb, 0xde });
        gbc.writeMem(0xd1d6, { 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x295c, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd1d6));
        // CB DE 0373
        gbc.setState(0x2137, 0xe356, 0xecd0, 0xd3bb, 0x8f1, 0x1163, 0x1, 0x1);
        gbc.writeMem(0x1163, { 0xdb });
        gbc.writeMem(0x2137, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe356, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 0375
        gbc.setState(0x9fb5, 0x2050, 0x51b0, 0x3d5, 0xea9f, 0xbff4, 0x1, 0x1);
        gbc.writeMem(0x9fb5, { 0xcb, 0xde });
        gbc.writeMem(0xbff4, { 0x52 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2050, gbc.sp());
        EXPECT(0x9fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb5));
        EXPECT(0xde, gbc.readMem(0x9fb6));
        EXPECT(0x5a, gbc.readMem(0xbff4));
        // CB DE 0377
        gbc.setState(0x1c4a, 0x7b07, 0x93a0, 0x357, 0xf94b, 0xd542, 0x1, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0xde });
        gbc.writeMem(0xd542, { 0x63 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd542));
        // CB DE 0378
        gbc.setState(0xd9e9, 0xd99c, 0x3d00, 0x5822, 0x1708, 0xc6b4, 0x1, 0x1);
        gbc.writeMem(0xc6b4, { 0x27 });
        gbc.writeMem(0xd9e9, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd99c, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc6b4));
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xde, gbc.readMem(0xd9ea));
        // CB DE 037A
        gbc.setState(0xc093, 0xc2ad, 0xefd0, 0x40e0, 0x34df, 0x904e, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0x96 });
        gbc.writeMem(0xc093, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0xc095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x904e));
        EXPECT(0xcb, gbc.readMem(0xc093));
        EXPECT(0xde, gbc.readMem(0xc094));
        // CB DE 037C
        gbc.setState(0xd17d, 0x7351, 0xe540, 0x2cba, 0x3cdb, 0xa98c, 0x0, 0x0);
        gbc.writeMem(0xa98c, { 0x54 });
        gbc.writeMem(0xd17d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa98c));
        EXPECT(0xcb, gbc.readMem(0xd17d));
        EXPECT(0xde, gbc.readMem(0xd17e));
        // CB DE 037D
        gbc.setState(0x52d2, 0x4bef, 0x4e00, 0x4913, 0xa405, 0xf98b, 0x1, 0x1);
        gbc.writeMem(0x52d2, { 0xcb, 0xde });
        gbc.writeMem(0xf98b, { 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4bef, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xf98b));
        // CB DE 037E
        gbc.setState(0x18af, 0x4acf, 0x5de0, 0x2ef7, 0xc1fa, 0x5e5, 0x1, 0x0);
        gbc.writeMem(0x5e5, { 0x5a });
        gbc.writeMem(0x18af, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4acf, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 037F
        gbc.setState(0x3706, 0x3f8, 0x8da0, 0xb440, 0xdb8e, 0x631e, 0x0, 0x0);
        gbc.writeMem(0x3706, { 0xcb, 0xde });
        gbc.writeMem(0x631e, { 0x79 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3f8, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0380
        gbc.setState(0xdcb9, 0xfc2c, 0xb7d0, 0x6654, 0xe9fc, 0xe8c4, 0x0, 0x0);
        gbc.writeMem(0xdcb9, { 0xcb, 0xde });
        gbc.writeMem(0xe8c4, { 0xdb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0xdcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb9));
        EXPECT(0xde, gbc.readMem(0xdcba));
        EXPECT(0xdb, gbc.readMem(0xe8c4));
        // CB DE 0383
        gbc.setState(0x6669, 0xb3ef, 0x9800, 0xb12, 0x9d46, 0xbe63, 0x1, 0x0);
        gbc.writeMem(0x6669, { 0xcb, 0xde });
        gbc.writeMem(0xbe63, { 0x48 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xbe63));
        // CB DE 0384
        gbc.setState(0x20d1, 0x79b9, 0x9180, 0xacf0, 0x6eb3, 0x9d57, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0xde });
        gbc.writeMem(0x9d57, { 0xe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x79b9, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9d57));
        // CB DE 0386
        gbc.setState(0xe505, 0x2892, 0x8260, 0x1260, 0x238f, 0xec63, 0x0, 0x0);
        gbc.writeMem(0xe505, { 0xcb, 0xde });
        gbc.writeMem(0xec63, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2892, gbc.sp());
        EXPECT(0xe507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe505));
        EXPECT(0xde, gbc.readMem(0xe506));
        EXPECT(0x8a, gbc.readMem(0xec63));
        // CB DE 0387
        gbc.setState(0x7744, 0xfb72, 0xa170, 0x6956, 0x5740, 0xcb80, 0x1, 0x0);
        gbc.writeMem(0x7744, { 0xcb, 0xde });
        gbc.writeMem(0xcb80, { 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfb72, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcb80));
        // CB DE 0389
        gbc.setState(0x50a4, 0xaf80, 0xc700, 0x86b0, 0xa3d1, 0x5275, 0x0, 0x0);
        gbc.writeMem(0x50a4, { 0xcb, 0xde });
        gbc.writeMem(0x5275, { 0xde });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x50a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 038B
        gbc.setState(0xe201, 0xca2e, 0xffb0, 0x2251, 0x5842, 0x3fd3, 0x0, 0x1);
        gbc.writeMem(0x3fd3, { 0x9a });
        gbc.writeMem(0xe201, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0xe203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe201));
        EXPECT(0xde, gbc.readMem(0xe202));
        // CB DE 038C
        gbc.setState(0xbcd4, 0x75f4, 0x2c70, 0x8d38, 0xe5bb, 0xaf99, 0x0, 0x0);
        gbc.writeMem(0xaf99, { 0x26 });
        gbc.writeMem(0xbcd4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75f4, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xaf99));
        EXPECT(0xcb, gbc.readMem(0xbcd4));
        EXPECT(0xde, gbc.readMem(0xbcd5));
        // CB DE 038D
        gbc.setState(0xe2c, 0x2c43, 0x3c70, 0x9e02, 0x74f1, 0xf49c, 0x0, 0x1);
        gbc.writeMem(0xe2c, { 0xcb, 0xde });
        gbc.writeMem(0xf49c, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xf49c));
        // CB DE 038F
        gbc.setState(0xaf3c, 0x6a62, 0xd50, 0xdbab, 0x28b5, 0xfb8e, 0x0, 0x1);
        gbc.writeMem(0xaf3c, { 0xcb, 0xde });
        gbc.writeMem(0xfb8e, { 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a62, gbc.sp());
        EXPECT(0xaf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3c));
        EXPECT(0xde, gbc.readMem(0xaf3d));
        EXPECT(0xd8, gbc.readMem(0xfb8e));
        // CB DE 0390
        gbc.setState(0x8907, 0x1899, 0xeb0, 0x358c, 0xc882, 0xc822, 0x1, 0x1);
        gbc.writeMem(0x8907, { 0xcb, 0xde });
        gbc.writeMem(0xc822, { 0x34 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1899, gbc.sp());
        EXPECT(0x8909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8907));
        EXPECT(0xde, gbc.readMem(0x8908));
        EXPECT(0x3c, gbc.readMem(0xc822));
        // CB DE 0391
        gbc.setState(0x9223, 0x2b16, 0x8e0, 0xe22a, 0x36b2, 0x52e6, 0x1, 0x0);
        gbc.writeMem(0x52e6, { 0xcf });
        gbc.writeMem(0x9223, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0xde, gbc.readMem(0x9224));
        // CB DE 0392
        gbc.setState(0xede, 0xb731, 0x7980, 0x2e47, 0x10f0, 0x71d9, 0x0, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0xde });
        gbc.writeMem(0x71d9, { 0xef });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 0394
        gbc.setState(0xd980, 0xa93b, 0xb080, 0x2ae2, 0x99a3, 0xc703, 0x1, 0x1);
        gbc.writeMem(0xc703, { 0xd2 });
        gbc.writeMem(0xd980, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa93b, gbc.sp());
        EXPECT(0xd982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc703));
        EXPECT(0xcb, gbc.readMem(0xd980));
        EXPECT(0xde, gbc.readMem(0xd981));
        // CB DE 0395
        gbc.setState(0x305b, 0xb188, 0x3620, 0x2b0f, 0x2e21, 0xfc4a, 0x1, 0x0);
        gbc.writeMem(0x305b, { 0xcb, 0xde });
        gbc.writeMem(0xfc4a, { 0xca });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb188, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xfc4a));
        // CB DE 0399
        gbc.setState(0x40f0, 0x6b88, 0xf990, 0x196b, 0x795b, 0x7d66, 0x0, 0x1);
        gbc.writeMem(0x40f0, { 0xcb, 0xde });
        gbc.writeMem(0x7d66, { 0xbc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0x40f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 039D
        gbc.setState(0xbab0, 0x910e, 0x3fb0, 0x346b, 0x800e, 0xc303, 0x0, 0x1);
        gbc.writeMem(0xbab0, { 0xcb, 0xde });
        gbc.writeMem(0xc303, { 0x31 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x910e, gbc.sp());
        EXPECT(0xbab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab0));
        EXPECT(0xde, gbc.readMem(0xbab1));
        EXPECT(0x39, gbc.readMem(0xc303));
        // CB DE 039E
        gbc.setState(0x83f9, 0x79bd, 0xeb50, 0x46a2, 0x7c69, 0xe78e, 0x0, 0x1);
        gbc.writeMem(0x83f9, { 0xcb, 0xde });
        gbc.writeMem(0xe78e, { 0x71 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x83fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f9));
        EXPECT(0xde, gbc.readMem(0x83fa));
        EXPECT(0x79, gbc.readMem(0xe78e));
        // CB DE 039F
        gbc.setState(0x18a7, 0x2df, 0x2330, 0x5b1, 0xb706, 0x9d73, 0x0, 0x1);
        gbc.writeMem(0x18a7, { 0xcb, 0xde });
        gbc.writeMem(0x9d73, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2df, gbc.sp());
        EXPECT(0x18a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d73));
        // CB DE 03A3
        gbc.setState(0x1635, 0x650e, 0x6110, 0xa58b, 0x67b6, 0xe6c1, 0x0, 0x0);
        gbc.writeMem(0x1635, { 0xcb, 0xde });
        gbc.writeMem(0xe6c1, { 0x74 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe6c1));
        // CB DE 03A5
        gbc.setState(0x6cdb, 0x1aae, 0xe5e0, 0xe2b2, 0x8bb2, 0x44c6, 0x0, 0x1);
        gbc.writeMem(0x44c6, { 0xd9 });
        gbc.writeMem(0x6cdb, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1aae, gbc.sp());
        EXPECT(0x6cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 03A8
        gbc.setState(0xd24f, 0x2075, 0x2540, 0x2df2, 0x2e8a, 0xa060, 0x0, 0x1);
        gbc.writeMem(0xa060, { 0x16 });
        gbc.writeMem(0xd24f, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa060));
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0xde, gbc.readMem(0xd250));
        // CB DE 03A9
        gbc.setState(0x2f49, 0x3dc, 0xeba0, 0xf899, 0xa0b3, 0xedae, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xcb, 0xde });
        gbc.writeMem(0xedae, { 0x5b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3dc, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xedae));
        // CB DE 03AA
        gbc.setState(0xdf8a, 0x8627, 0x5700, 0x8e6d, 0x2cfa, 0xada2, 0x0, 0x1);
        gbc.writeMem(0xada2, { 0x20 });
        gbc.writeMem(0xdf8a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0xdf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xada2));
        EXPECT(0xcb, gbc.readMem(0xdf8a));
        EXPECT(0xde, gbc.readMem(0xdf8b));
        // CB DE 03AB
        gbc.setState(0xd7e7, 0x1426, 0xd460, 0x7a12, 0xa0e, 0x340c, 0x0, 0x1);
        gbc.writeMem(0x340c, { 0x89 });
        gbc.writeMem(0xd7e7, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e7));
        EXPECT(0xde, gbc.readMem(0xd7e8));
        // CB DE 03AD
        gbc.setState(0xcdfb, 0xa14b, 0xef40, 0x1e63, 0x84fb, 0x64cb, 0x0, 0x0);
        gbc.writeMem(0x64cb, { 0x3a });
        gbc.writeMem(0xcdfb, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfb));
        EXPECT(0xde, gbc.readMem(0xcdfc));
        // CB DE 03B0
        gbc.setState(0x42fe, 0xd08d, 0x68f0, 0xf56e, 0x6251, 0x8102, 0x1, 0x0);
        gbc.writeMem(0x42fe, { 0xcb, 0xde });
        gbc.writeMem(0x8102, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0x4300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8102));
        // CB DE 03B1
        gbc.setState(0x8ca6, 0x971e, 0x7280, 0x2046, 0xf011, 0x8a6e, 0x0, 0x0);
        gbc.writeMem(0x8a6e, { 0x60 });
        gbc.writeMem(0x8ca6, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0x8ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8a6e));
        EXPECT(0xcb, gbc.readMem(0x8ca6));
        EXPECT(0xde, gbc.readMem(0x8ca7));
        // CB DE 03B2
        gbc.setState(0xe10d, 0x791f, 0x78d0, 0x119a, 0xe52a, 0xf07b, 0x1, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0xde });
        gbc.writeMem(0xf07b, { 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0xde, gbc.readMem(0xe10e));
        EXPECT(0xb9, gbc.readMem(0xf07b));
        // CB DE 03B3
        gbc.setState(0xc397, 0x12a8, 0x1b60, 0xcae0, 0x239c, 0x9cae, 0x1, 0x1);
        gbc.writeMem(0x9cae, { 0xc6 });
        gbc.writeMem(0xc397, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x12a8, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9cae));
        EXPECT(0xcb, gbc.readMem(0xc397));
        EXPECT(0xde, gbc.readMem(0xc398));
        // CB DE 03B4
        gbc.setState(0x659b, 0xb580, 0x5dc0, 0x75f3, 0x1d1a, 0xfb74, 0x0, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0xde });
        gbc.writeMem(0xfb74, { 0xf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xfb74));
        // CB DE 03B5
        gbc.setState(0x1bc3, 0x7c9b, 0xe560, 0x61da, 0x44f7, 0x6b8a, 0x0, 0x1);
        gbc.writeMem(0x1bc3, { 0xcb, 0xde });
        gbc.writeMem(0x6b8a, { 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 03B6
        gbc.setState(0x1bfd, 0x7943, 0x270, 0xf345, 0x8678, 0x820e, 0x0, 0x0);
        gbc.writeMem(0x1bfd, { 0xcb, 0xde });
        gbc.writeMem(0x820e, { 0xfc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7943, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x820e));
        // CB DE 03B8
        gbc.setState(0x7a3a, 0x5ef5, 0x9650, 0x28af, 0x8d1, 0x6679, 0x0, 0x1);
        gbc.writeMem(0x6679, { 0xad });
        gbc.writeMem(0x7a3a, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5ef5, gbc.sp());
        EXPECT(0x7a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 03B9
        gbc.setState(0xb00d, 0xec21, 0xd270, 0x1e4a, 0xb3c6, 0xac5f, 0x0, 0x1);
        gbc.writeMem(0xac5f, { 0x5f });
        gbc.writeMem(0xb00d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0xb00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xac5f));
        EXPECT(0xcb, gbc.readMem(0xb00d));
        EXPECT(0xde, gbc.readMem(0xb00e));
        // CB DE 03BA
        gbc.setState(0x77cb, 0x35a4, 0x67c0, 0x24dc, 0xdc5f, 0xe949, 0x0, 0x1);
        gbc.writeMem(0x77cb, { 0xcb, 0xde });
        gbc.writeMem(0xe949, { 0x9f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x35a4, gbc.sp());
        EXPECT(0x77cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe949));
        // CB DE 03BB
        gbc.setState(0x766, 0x97ac, 0xfb90, 0x2e61, 0xdd80, 0xb240, 0x1, 0x1);
        gbc.writeMem(0x766, { 0xcb, 0xde });
        gbc.writeMem(0xb240, { 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x97ac, gbc.sp());
        EXPECT(0x768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb240));
        // CB DE 03BC
        gbc.setState(0x5707, 0x1f10, 0x4da0, 0x28c3, 0xb2bb, 0xb590, 0x0, 0x1);
        gbc.writeMem(0x5707, { 0xcb, 0xde });
        gbc.writeMem(0xb590, { 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1f10, gbc.sp());
        EXPECT(0x5709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb590));
        // CB DE 03BE
        gbc.setState(0x6e5d, 0x8198, 0x48b0, 0xfb82, 0x8ec6, 0x4834, 0x1, 0x1);
        gbc.writeMem(0x4834, { 0xaa });
        gbc.writeMem(0x6e5d, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8198, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 03C0
        gbc.setState(0xd688, 0xcf95, 0x8670, 0x6b7d, 0x256a, 0x880b, 0x0, 0x0);
        gbc.writeMem(0x880b, { 0xf6 });
        gbc.writeMem(0xd688, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xd68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x880b));
        EXPECT(0xcb, gbc.readMem(0xd688));
        EXPECT(0xde, gbc.readMem(0xd689));
        // CB DE 03C2
        gbc.setState(0x35c3, 0xf78e, 0x56d0, 0x1dfd, 0x470a, 0x8b87, 0x1, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0xde });
        gbc.writeMem(0x8b87, { 0x2f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf78e, gbc.sp());
        EXPECT(0x35c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8b87));
        // CB DE 03C4
        gbc.setState(0xdecc, 0x3cf3, 0x670, 0xef72, 0x7db4, 0x8d09, 0x0, 0x0);
        gbc.writeMem(0x8d09, { 0x40 });
        gbc.writeMem(0xdecc, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3cf3, gbc.sp());
        EXPECT(0xdece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8d09));
        EXPECT(0xcb, gbc.readMem(0xdecc));
        EXPECT(0xde, gbc.readMem(0xdecd));
        // CB DE 03C6
        gbc.setState(0xd90b, 0x1c1f, 0xe50, 0xc6a3, 0x1a80, 0xbbf2, 0x1, 0x0);
        gbc.writeMem(0xbbf2, { 0x2b });
        gbc.writeMem(0xd90b, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1c1f, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xbbf2));
        EXPECT(0xcb, gbc.readMem(0xd90b));
        EXPECT(0xde, gbc.readMem(0xd90c));
        // CB DE 03C7
        gbc.setState(0x4de9, 0x3b5b, 0xca80, 0x5f63, 0xa1c3, 0xbe8c, 0x1, 0x0);
        gbc.writeMem(0x4de9, { 0xcb, 0xde });
        gbc.writeMem(0xbe8c, { 0x8d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b5b, gbc.sp());
        EXPECT(0x4deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe8c));
        // CB DE 03C8
        gbc.setState(0xa3c1, 0x5d9b, 0x9d90, 0xc881, 0x336e, 0x5015, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0xbf });
        gbc.writeMem(0xa3c1, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5d9b, gbc.sp());
        EXPECT(0xa3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c1));
        EXPECT(0xde, gbc.readMem(0xa3c2));
        // CB DE 03C9
        gbc.setState(0x6c9c, 0x5b88, 0xf390, 0xcc82, 0xb3a8, 0xa892, 0x0, 0x1);
        gbc.writeMem(0x6c9c, { 0xcb, 0xde });
        gbc.writeMem(0xa892, { 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5b88, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa892));
        // CB DE 03CB
        gbc.setState(0xac8, 0xd43, 0x2ee0, 0x195a, 0xbdb2, 0x8aea, 0x0, 0x1);
        gbc.writeMem(0xac8, { 0xcb, 0xde });
        gbc.writeMem(0x8aea, { 0x6b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd43, gbc.sp());
        EXPECT(0xaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8aea));
        // CB DE 03CC
        gbc.setState(0x42e0, 0x864f, 0x8d30, 0xbcad, 0x85a, 0x5993, 0x0, 0x1);
        gbc.writeMem(0x42e0, { 0xcb, 0xde });
        gbc.writeMem(0x5993, { 0x1b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 03CD
        gbc.setState(0x2ca1, 0x2ffc, 0x86d0, 0xa63, 0xb362, 0xdd61, 0x0, 0x1);
        gbc.writeMem(0x2ca1, { 0xcb, 0xde });
        gbc.writeMem(0xdd61, { 0xc7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xdd61));
        // CB DE 03CE
        gbc.setState(0x417f, 0xf7ef, 0x5cd0, 0x6ab3, 0x5d88, 0xd2c9, 0x0, 0x0);
        gbc.writeMem(0x417f, { 0xcb, 0xde });
        gbc.writeMem(0xd2c9, { 0x42 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0x4181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xd2c9));
        // CB DE 03D0
        gbc.setState(0xa3c4, 0x4eef, 0x7b50, 0xf0fb, 0x836a, 0x6093, 0x1, 0x1);
        gbc.writeMem(0x6093, { 0x9e });
        gbc.writeMem(0xa3c4, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4eef, gbc.sp());
        EXPECT(0xa3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c4));
        EXPECT(0xde, gbc.readMem(0xa3c5));
        // CB DE 03D1
        gbc.setState(0x8347, 0x11b9, 0xee20, 0x57b, 0x9168, 0x6c20, 0x0, 0x0);
        gbc.writeMem(0x6c20, { 0x9c });
        gbc.writeMem(0x8347, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x8349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8347));
        EXPECT(0xde, gbc.readMem(0x8348));
        // CB DE 03D3
        gbc.setState(0x2f80, 0xa92d, 0x12c0, 0x221e, 0xd3b4, 0x927c, 0x0, 0x1);
        gbc.writeMem(0x2f80, { 0xcb, 0xde });
        gbc.writeMem(0x927c, { 0x7c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa92d, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x927c));
        // CB DE 03D4
        gbc.setState(0xe6cd, 0x6277, 0xa190, 0x7ada, 0xb8be, 0x608d, 0x1, 0x0);
        gbc.writeMem(0x608d, { 0x7e });
        gbc.writeMem(0xe6cd, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cd));
        EXPECT(0xde, gbc.readMem(0xe6ce));
        // CB DE 03D5
        gbc.setState(0x1453, 0xdb1f, 0x3000, 0x9b28, 0x4c92, 0x2f25, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0xcb, 0xde });
        gbc.writeMem(0x2f25, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdb1f, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 03D7
        gbc.setState(0x7fe0, 0x596a, 0xe9e0, 0x9485, 0x2032, 0xe8af, 0x0, 0x1);
        gbc.writeMem(0x7fe0, { 0xcb, 0xde });
        gbc.writeMem(0xe8af, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x596a, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe8af));
        // CB DE 03DA
        gbc.setState(0xd6b2, 0x78e1, 0xea70, 0x110c, 0x99ec, 0xfdd4, 0x0, 0x0);
        gbc.writeMem(0xd6b2, { 0xcb, 0xde });
        gbc.writeMem(0xfdd4, { 0x17 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x78e1, gbc.sp());
        EXPECT(0xd6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b2));
        EXPECT(0xde, gbc.readMem(0xd6b3));
        EXPECT(0x1f, gbc.readMem(0xfdd4));
        // CB DE 03DB
        gbc.setState(0x28b0, 0xa2a, 0xb030, 0x247f, 0x9a4f, 0x773, 0x1, 0x0);
        gbc.writeMem(0x773, { 0x9a });
        gbc.writeMem(0x28b0, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DE 03DC
        gbc.setState(0x4fba, 0xbaba, 0xf5c0, 0xcbf9, 0xfa94, 0xbe44, 0x1, 0x0);
        gbc.writeMem(0x4fba, { 0xcb, 0xde });
        gbc.writeMem(0xbe44, { 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x4fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xbe44));
        // CB DE 03DE
        gbc.setState(0x8175, 0xae8f, 0x72f0, 0xa4a8, 0x3a52, 0x10d0, 0x1, 0x0);
        gbc.writeMem(0x10d0, { 0xde });
        gbc.writeMem(0x8175, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xae8f, gbc.sp());
        EXPECT(0x8177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8175));
        EXPECT(0xde, gbc.readMem(0x8176));
        // CB DE 03DF
        gbc.setState(0x734, 0xb4ee, 0xbb60, 0xe3dd, 0x740b, 0xa30e, 0x0, 0x1);
        gbc.writeMem(0x734, { 0xcb, 0xde });
        gbc.writeMem(0xa30e, { 0xe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xa30e));
        // CB DE 03E0
        gbc.setState(0xa1a5, 0x3e60, 0xfe30, 0x6957, 0x3971, 0x44bd, 0x1, 0x0);
        gbc.writeMem(0x44bd, { 0x4e });
        gbc.writeMem(0xa1a5, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0xa1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a5));
        EXPECT(0xde, gbc.readMem(0xa1a6));
        // CB DE 03E1
        gbc.setState(0x3cc8, 0xdb8a, 0xc480, 0x51e2, 0x20a9, 0x7eb6, 0x0, 0x0);
        gbc.writeMem(0x3cc8, { 0xcb, 0xde });
        gbc.writeMem(0x7eb6, { 0x8b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x3cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 03E2
        gbc.setState(0x5795, 0xa3c1, 0x2640, 0x1216, 0x4a67, 0x1427, 0x1, 0x1);
        gbc.writeMem(0x1427, { 0xcb });
        gbc.writeMem(0x5795, { 0xcb, 0xde });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DE 03E4
        gbc.setState(0x5e6f, 0x298c, 0xb920, 0x7abc, 0x60ed, 0x9217, 0x1, 0x1);
        gbc.writeMem(0x5e6f, { 0xcb, 0xde });
        gbc.writeMem(0x9217, { 0x82 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x298c, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9217));
        // CB DE 03E5
        gbc.setState(0xcd50, 0x902d, 0x7c10, 0xa6c1, 0x16ca, 0xf571, 0x1, 0x1);
        gbc.writeMem(0xcd50, { 0xcb, 0xde });
        gbc.writeMem(0xf571, { 0x98 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x902d, gbc.sp());
        EXPECT(0xcd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd50));
        EXPECT(0xde, gbc.readMem(0xcd51));
        EXPECT(0x98, gbc.readMem(0xf571));
        // CB DE 03E6
        gbc.setState(0x48c7, 0x9404, 0x2560, 0xa15, 0xd3, 0xd9f1, 0x0, 0x0);
        gbc.writeMem(0x48c7, { 0xcb, 0xde });
        gbc.writeMem(0xd9f1, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0x48c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd9f1));
    }
