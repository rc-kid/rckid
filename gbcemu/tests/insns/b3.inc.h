    TEST(gbcemu, opcode_b3) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B3 0000
        gbc.setState(0x4dde, 0x29ac, 0x9be0, 0xee7d, 0xe011, 0xbd87, 0x0, 0x1);
        gbc.writeMem(0x4dde, { 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0001
        gbc.setState(0xcd5a, 0xfdaf, 0x16b0, 0x3938, 0x2630, 0x6373, 0x1, 0x0);
        gbc.writeMem(0xcd5a, { 0xb3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfdaf, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcd5a));
        // B3 0002
        gbc.setState(0xab39, 0xa386, 0x3d50, 0x2933, 0xe5d3, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0xab39, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0xab3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab39));
        // B3 0003
        gbc.setState(0x22eb, 0xab94, 0x5b0, 0x3d48, 0xed6c, 0xbf89, 0x1, 0x1);
        gbc.writeMem(0x22eb, { 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0004
        gbc.setState(0xbe42, 0x2aa2, 0x5bb0, 0xc15d, 0x12f4, 0x9e37, 0x1, 0x1);
        gbc.writeMem(0xbe42, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbe42));
        // B3 0005
        gbc.setState(0xcf02, 0xf75f, 0x18d0, 0x3ec2, 0x1d18, 0xa311, 0x0, 0x0);
        gbc.writeMem(0xcf02, { 0xb3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcf02));
        // B3 0006
        gbc.setState(0x7981, 0x2657, 0x1950, 0xc6bc, 0x95ae, 0xfab5, 0x0, 0x0);
        gbc.writeMem(0x7981, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2657, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0007
        gbc.setState(0x22df, 0x66c3, 0x7ec0, 0x9742, 0xafd6, 0xaa9e, 0x1, 0x0);
        gbc.writeMem(0x22df, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x66c3, gbc.sp());
        EXPECT(0x22e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0008
        gbc.setState(0x1ff, 0xf008, 0xd4e0, 0xfa24, 0xa593, 0x2f99, 0x1, 0x0);
        gbc.writeMem(0x1ff, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf008, gbc.sp());
        EXPECT(0x200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0009
        gbc.setState(0xad16, 0x1053, 0xd320, 0x4ecc, 0x255c, 0x49bb, 0x1, 0x0);
        gbc.writeMem(0xad16, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1053, gbc.sp());
        EXPECT(0xad17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xad16));
        // B3 000A
        gbc.setState(0x56a4, 0xa9b1, 0xfa00, 0x94b3, 0x406e, 0x2190, 0x0, 0x0);
        gbc.writeMem(0x56a4, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa9b1, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 000B
        gbc.setState(0x95f4, 0x83e1, 0x2d40, 0xb00e, 0xf03a, 0x976e, 0x0, 0x1);
        gbc.writeMem(0x95f4, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x83e1, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x95f4));
        // B3 000C
        gbc.setState(0xd95, 0x6d76, 0x4b90, 0xcdd8, 0x332e, 0x835d, 0x1, 0x0);
        gbc.writeMem(0xd95, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6d76, gbc.sp());
        EXPECT(0xd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 000D
        gbc.setState(0x9044, 0x30fc, 0x2b0, 0xb49f, 0x9a16, 0x7bdf, 0x1, 0x1);
        gbc.writeMem(0x9044, { 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9044));
        // B3 000E
        gbc.setState(0x6b6, 0x4129, 0x6de0, 0x18f0, 0x6489, 0x36b9, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4129, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 000F
        gbc.setState(0x9115, 0x220, 0x2740, 0x6dd6, 0x932, 0x6f5, 0x0, 0x1);
        gbc.writeMem(0x9115, { 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x220, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9115));
        // B3 0010
        gbc.setState(0x72bb, 0x3363, 0x34c0, 0xe638, 0xfa76, 0x25d0, 0x1, 0x0);
        gbc.writeMem(0x72bb, { 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0x72bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0012
        gbc.setState(0xec88, 0x2e0a, 0xcd20, 0xeb9d, 0x6984, 0x6d46, 0x1, 0x0);
        gbc.writeMem(0xec88, { 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xec88));
        // B3 0013
        gbc.setState(0x46a0, 0xa51b, 0x9560, 0x6e25, 0xa03e, 0xc8e, 0x1, 0x0);
        gbc.writeMem(0x46a0, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x46a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0014
        gbc.setState(0x4693, 0x3cec, 0x8460, 0x43a5, 0x5aa6, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x4693, { 0xb3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3cec, gbc.sp());
        EXPECT(0x4694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0015
        gbc.setState(0x9aeb, 0xf83b, 0x61e0, 0xa4e4, 0x2da4, 0x7f12, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0x9aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9aeb));
        // B3 0016
        gbc.setState(0x94e1, 0xed64, 0xc200, 0x4314, 0xf369, 0x2299, 0x0, 0x0);
        gbc.writeMem(0x94e1, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed64, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x94e1));
        // B3 0017
        gbc.setState(0xe060, 0xd230, 0x3ba0, 0x7972, 0xc143, 0xb52c, 0x1, 0x0);
        gbc.writeMem(0xe060, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd230, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe060));
        // B3 0018
        gbc.setState(0x7b32, 0x20ca, 0xb210, 0xe30f, 0x49f0, 0x71a4, 0x1, 0x1);
        gbc.writeMem(0x7b32, { 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x20ca, gbc.sp());
        EXPECT(0x7b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0019
        gbc.setState(0xab38, 0x6ac9, 0x910, 0x89bd, 0x6dda, 0xe5cb, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab38));
        // B3 001B
        gbc.setState(0x80b2, 0xd7cd, 0x29c0, 0xba0d, 0xae53, 0x58a5, 0x0, 0x1);
        gbc.writeMem(0x80b2, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd7cd, gbc.sp());
        EXPECT(0x80b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x80b2));
        // B3 001C
        gbc.setState(0x3dbb, 0xc71f, 0xc450, 0xd70a, 0xb51c, 0xb274, 0x0, 0x0);
        gbc.writeMem(0x3dbb, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0x3dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 001D
        gbc.setState(0x7039, 0x7643, 0xe060, 0x1600, 0x1889, 0x13c2, 0x1, 0x1);
        gbc.writeMem(0x7039, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 001E
        gbc.setState(0x53a9, 0x38f0, 0x4150, 0x4bbc, 0x1fb1, 0xff00, 0x1, 0x0);
        gbc.writeMem(0x53a9, { 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x38f0, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 001F
        gbc.setState(0x93c1, 0x728, 0xd600, 0xa083, 0x9a90, 0x4847, 0x1, 0x0);
        gbc.writeMem(0x93c1, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x728, gbc.sp());
        EXPECT(0x93c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93c1));
        // B3 0020
        gbc.setState(0x9ecc, 0xf5f7, 0x8fb0, 0x3606, 0x2c77, 0xce92, 0x1, 0x1);
        gbc.writeMem(0x9ecc, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf5f7, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9ecc));
        // B3 0021
        gbc.setState(0x70b7, 0x3c5e, 0x7b50, 0x1625, 0xa8a3, 0xeb7f, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0022
        gbc.setState(0x2cce, 0xd968, 0x19e0, 0xddd7, 0x1f58, 0x184c, 0x1, 0x0);
        gbc.writeMem(0x2cce, { 0xb3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd968, gbc.sp());
        EXPECT(0x2ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0023
        gbc.setState(0x48e8, 0x6c4d, 0x9240, 0xd810, 0x4343, 0x2064, 0x0, 0x1);
        gbc.writeMem(0x48e8, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6c4d, gbc.sp());
        EXPECT(0x48e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0024
        gbc.setState(0x2079, 0xed68, 0x3b40, 0x2a9b, 0x3731, 0x95c8, 0x0, 0x1);
        gbc.writeMem(0x2079, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x207a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0025
        gbc.setState(0x340, 0xd97e, 0x2e60, 0x1388, 0x66f9, 0xe437, 0x0, 0x1);
        gbc.writeMem(0x340, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd97e, gbc.sp());
        EXPECT(0x341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0026
        gbc.setState(0x3764, 0x2c38, 0xfff0, 0x3d1, 0xb602, 0x32a7, 0x0, 0x1);
        gbc.writeMem(0x3764, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0027
        gbc.setState(0x8c9b, 0xfbdb, 0xac80, 0xa7f4, 0xdd5e, 0x7521, 0x1, 0x1);
        gbc.writeMem(0x8c9b, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8c9b));
        // B3 0028
        gbc.setState(0x8bbc, 0x31ff, 0xb180, 0x141, 0x2703, 0xe83d, 0x0, 0x1);
        gbc.writeMem(0x8bbc, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x31ff, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8bbc));
        // B3 0029
        gbc.setState(0xc65f, 0x8d9c, 0xdca0, 0x7b58, 0xb5ce, 0x8a3, 0x0, 0x1);
        gbc.writeMem(0xc65f, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8d9c, gbc.sp());
        EXPECT(0xc660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc65f));
        // B3 002A
        gbc.setState(0x2e39, 0xfee5, 0x1350, 0x85f3, 0x6a1b, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfee5, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 002B
        gbc.setState(0x75a5, 0x1472, 0x49b0, 0xccb1, 0x6248, 0x5ce8, 0x0, 0x1);
        gbc.writeMem(0x75a5, { 0xb3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 002C
        gbc.setState(0xaf41, 0x4e7c, 0xbc50, 0x26c1, 0x2b00, 0x722a, 0x0, 0x1);
        gbc.writeMem(0xaf41, { 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4e7c, gbc.sp());
        EXPECT(0xaf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaf41));
        // B3 002D
        gbc.setState(0x609f, 0x2a47, 0xf580, 0xa9a4, 0x4b52, 0x9d0f, 0x0, 0x0);
        gbc.writeMem(0x609f, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2a47, gbc.sp());
        EXPECT(0x60a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 002E
        gbc.setState(0x5971, 0xd657, 0xabf0, 0x2e03, 0x38b, 0x6417, 0x0, 0x0);
        gbc.writeMem(0x5971, { 0xb3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x5972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 002F
        gbc.setState(0xc970, 0x5733, 0xa140, 0xe43a, 0xf4b8, 0x8b69, 0x1, 0x1);
        gbc.writeMem(0xc970, { 0xb3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc970));
        // B3 0030
        gbc.setState(0x3446, 0xc4e1, 0xa180, 0x4950, 0x4c92, 0x2366, 0x0, 0x0);
        gbc.writeMem(0x3446, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc4e1, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0031
        gbc.setState(0x7616, 0x6239, 0xf4c0, 0x11a5, 0x8bfe, 0xb5c9, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6239, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0032
        gbc.setState(0x9391, 0x814, 0x9590, 0xa23c, 0x2371, 0x4559, 0x1, 0x0);
        gbc.writeMem(0x9391, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9391));
        // B3 0033
        gbc.setState(0x355e, 0x6caf, 0xc30, 0xf327, 0xe86d, 0x59f2, 0x0, 0x1);
        gbc.writeMem(0x355e, { 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6caf, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0034
        gbc.setState(0x93fe, 0x1fc9, 0x710, 0xa123, 0x8e6a, 0x7d40, 0x1, 0x1);
        gbc.writeMem(0x93fe, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1fc9, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93fe));
        // B3 0035
        gbc.setState(0xa49, 0x22f0, 0x1b60, 0x28f3, 0x20ad, 0x7f24, 0x1, 0x0);
        gbc.writeMem(0xa49, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0036
        gbc.setState(0x762d, 0x7f49, 0x460, 0xc1fc, 0x2522, 0x12bf, 0x0, 0x0);
        gbc.writeMem(0x762d, { 0xb3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7f49, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0037
        gbc.setState(0x329, 0xe584, 0xc8a0, 0xad8e, 0xe9a3, 0xd1c6, 0x0, 0x1);
        gbc.writeMem(0x329, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0038
        gbc.setState(0x32df, 0x1c4c, 0x3f70, 0x2ce3, 0x671b, 0xe57f, 0x0, 0x0);
        gbc.writeMem(0x32df, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x32e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0039
        gbc.setState(0xaacc, 0x27d9, 0x2850, 0x7e29, 0x480b, 0xaa85, 0x1, 0x1);
        gbc.writeMem(0xaacc, { 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x27d9, gbc.sp());
        EXPECT(0xaacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaacc));
        // B3 003A
        gbc.setState(0xc177, 0xddf4, 0xedf0, 0x87c5, 0xf5b1, 0xda53, 0x1, 0x0);
        gbc.writeMem(0xc177, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xddf4, gbc.sp());
        EXPECT(0xc178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc177));
        // B3 003B
        gbc.setState(0xcb32, 0x589a, 0x6830, 0xb3e8, 0xf424, 0xde64, 0x0, 0x1);
        gbc.writeMem(0xcb32, { 0xb3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcb32));
        // B3 003C
        gbc.setState(0xefba, 0x6c2, 0x74d0, 0xbf7a, 0x47ec, 0x8646, 0x1, 0x1);
        gbc.writeMem(0xefba, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6c2, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xefba));
        // B3 003D
        gbc.setState(0xdfce, 0x772b, 0x8100, 0x951d, 0xe772, 0xb3a2, 0x0, 0x0);
        gbc.writeMem(0xdfce, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x772b, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdfce));
        // B3 003E
        gbc.setState(0x39a1, 0x93e1, 0x54f0, 0x223, 0xacbf, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0x39a1, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 003F
        gbc.setState(0xac3e, 0xf70c, 0x4630, 0x5fde, 0x772, 0x2ac2, 0x1, 0x1);
        gbc.writeMem(0xac3e, { 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xac3e));
        // B3 0040
        gbc.setState(0x4c9, 0xba69, 0xe760, 0x3b71, 0x8dc5, 0x8b08, 0x1, 0x1);
        gbc.writeMem(0x4c9, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xba69, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0041
        gbc.setState(0xcf43, 0xb86c, 0xba20, 0x17a0, 0xad8c, 0x6844, 0x0, 0x1);
        gbc.writeMem(0xcf43, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb86c, gbc.sp());
        EXPECT(0xcf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcf43));
        // B3 0042
        gbc.setState(0x7544, 0x8792, 0x62d0, 0x2158, 0x5189, 0x46a, 0x0, 0x1);
        gbc.writeMem(0x7544, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x7545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0043
        gbc.setState(0x791b, 0xdbb5, 0x6ce0, 0x412e, 0x78d7, 0xa81a, 0x0, 0x1);
        gbc.writeMem(0x791b, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdbb5, gbc.sp());
        EXPECT(0x791c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0044
        gbc.setState(0xe746, 0x9ea8, 0x3430, 0x283f, 0x29ef, 0xb671, 0x0, 0x0);
        gbc.writeMem(0xe746, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ea8, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe746));
        // B3 0045
        gbc.setState(0xe11c, 0x24f2, 0x4a20, 0x27c7, 0xe2b7, 0xa783, 0x0, 0x1);
        gbc.writeMem(0xe11c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0xe11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe11c));
        // B3 0046
        gbc.setState(0x41d2, 0x4832, 0x3420, 0xc537, 0xbb8f, 0xc4fb, 0x0, 0x1);
        gbc.writeMem(0x41d2, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4832, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0047
        gbc.setState(0xefa8, 0xd21e, 0x3100, 0x3123, 0x9cf, 0x93cc, 0x0, 0x1);
        gbc.writeMem(0xefa8, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd21e, gbc.sp());
        EXPECT(0xefa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xefa8));
        // B3 0048
        gbc.setState(0xcf51, 0x7833, 0x56e0, 0xbbd0, 0xc43, 0x2c83, 0x1, 0x1);
        gbc.writeMem(0xcf51, { 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7833, gbc.sp());
        EXPECT(0xcf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcf51));
        // B3 0049
        gbc.setState(0xe79f, 0x1d89, 0xc0e0, 0x46b7, 0x5942, 0xa5c6, 0x0, 0x1);
        gbc.writeMem(0xe79f, { 0xb3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1d89, gbc.sp());
        EXPECT(0xe7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe79f));
        // B3 004A
        gbc.setState(0x6d5, 0xff2a, 0x51a0, 0xa8bf, 0xfe37, 0x3cfa, 0x1, 0x1);
        gbc.writeMem(0x6d5, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 004B
        gbc.setState(0x1bb4, 0x2dfc, 0xf310, 0x940d, 0xe358, 0x714b, 0x1, 0x1);
        gbc.writeMem(0x1bb4, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2dfc, gbc.sp());
        EXPECT(0x1bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 004D
        gbc.setState(0x49f3, 0xec03, 0x8060, 0x4354, 0xfeb0, 0x703d, 0x0, 0x0);
        gbc.writeMem(0x49f3, { 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xec03, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 004F
        gbc.setState(0xd23a, 0xa75f, 0x99b0, 0x1163, 0x7b72, 0xb591, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa75f, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd23a));
        // B3 0050
        gbc.setState(0x6054, 0x86c9, 0xa8e0, 0x84d2, 0xcf5e, 0x96a2, 0x0, 0x1);
        gbc.writeMem(0x6054, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0051
        gbc.setState(0x26eb, 0x9265, 0x9fd0, 0x5c9d, 0x693d, 0x289b, 0x0, 0x1);
        gbc.writeMem(0x26eb, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9265, gbc.sp());
        EXPECT(0x26ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0052
        gbc.setState(0xa415, 0xe448, 0xf90, 0x6c41, 0x2699, 0x4e3a, 0x0, 0x0);
        gbc.writeMem(0xa415, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe448, gbc.sp());
        EXPECT(0xa416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa415));
        // B3 0053
        gbc.setState(0x8826, 0x6117, 0x1a20, 0x64dd, 0x89b6, 0x123a, 0x0, 0x0);
        gbc.writeMem(0x8826, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6117, gbc.sp());
        EXPECT(0x8827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8826));
        // B3 0054
        gbc.setState(0x3034, 0xef97, 0x1290, 0x12f1, 0x4b7d, 0xdc14, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xef97, gbc.sp());
        EXPECT(0x3035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0055
        gbc.setState(0xe9dd, 0x5216, 0x4870, 0x7e4e, 0xa3f4, 0x1fec, 0x1, 0x1);
        gbc.writeMem(0xe9dd, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5216, gbc.sp());
        EXPECT(0xe9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe9dd));
        // B3 0056
        gbc.setState(0x78b6, 0x2d59, 0xda50, 0xc42a, 0x47b, 0x2e74, 0x1, 0x0);
        gbc.writeMem(0x78b6, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0057
        gbc.setState(0x346b, 0x422a, 0xe460, 0x21d0, 0xedcf, 0xe6a2, 0x0, 0x0);
        gbc.writeMem(0x346b, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x422a, gbc.sp());
        EXPECT(0x346c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0058
        gbc.setState(0x3f2e, 0x34ce, 0xf8d0, 0x68e6, 0xd728, 0xf8af, 0x0, 0x1);
        gbc.writeMem(0x3f2e, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0059
        gbc.setState(0xe379, 0xb872, 0x5960, 0x4643, 0xbf93, 0x19f4, 0x0, 0x1);
        gbc.writeMem(0xe379, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb872, gbc.sp());
        EXPECT(0xe37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe379));
        // B3 005A
        gbc.setState(0x923a, 0x25d2, 0x4040, 0x6e60, 0x810e, 0xcbac, 0x1, 0x0);
        gbc.writeMem(0x923a, { 0xb3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x923b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x923a));
        // B3 005B
        gbc.setState(0x2dfd, 0xd8af, 0x6020, 0xd3bc, 0x3fbc, 0x7d38, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0x2dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 005C
        gbc.setState(0x1832, 0x3558, 0xdb0, 0xd4ef, 0xbc60, 0xb8bb, 0x1, 0x0);
        gbc.writeMem(0x1832, { 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0x1833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 005D
        gbc.setState(0xaa31, 0xf57a, 0x5e90, 0x54f0, 0xb61c, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0xaa31, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0xaa32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaa31));
        // B3 005E
        gbc.setState(0x1806, 0x3eff, 0x48d0, 0x334b, 0x2271, 0xf656, 0x1, 0x0);
        gbc.writeMem(0x1806, { 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3eff, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 005F
        gbc.setState(0x5bcb, 0xb9e4, 0x8b10, 0x7cb4, 0x2887, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0x5bcb, { 0xb3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb9e4, gbc.sp());
        EXPECT(0x5bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0060
        gbc.setState(0x245e, 0x5db1, 0x4860, 0x83ab, 0x8ec4, 0xaed1, 0x1, 0x1);
        gbc.writeMem(0x245e, { 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0061
        gbc.setState(0xc8cd, 0x92e4, 0xf940, 0x9433, 0xf3bb, 0xf243, 0x0, 0x1);
        gbc.writeMem(0xc8cd, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x92e4, gbc.sp());
        EXPECT(0xc8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc8cd));
        // B3 0062
        gbc.setState(0x45b5, 0xf939, 0xce00, 0x665b, 0x6deb, 0x4af, 0x1, 0x1);
        gbc.writeMem(0x45b5, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0063
        gbc.setState(0x8ac9, 0x6609, 0xb1f0, 0x9185, 0x79db, 0xe87b, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6609, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8ac9));
        // B3 0064
        gbc.setState(0xd80f, 0x8372, 0xf7b0, 0xee52, 0x545, 0xc6ac, 0x0, 0x0);
        gbc.writeMem(0xd80f, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8372, gbc.sp());
        EXPECT(0xd810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd80f));
        // B3 0065
        gbc.setState(0x6405, 0x5e9e, 0x1680, 0x14d9, 0x1a10, 0x4d2a, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5e9e, gbc.sp());
        EXPECT(0x6406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0066
        gbc.setState(0x2256, 0x1bae, 0xedd0, 0x1274, 0x9350, 0x52be, 0x0, 0x1);
        gbc.writeMem(0x2256, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0x2257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0067
        gbc.setState(0xd9f2, 0x114e, 0xf080, 0x4e71, 0x987e, 0xfc8d, 0x1, 0x1);
        gbc.writeMem(0xd9f2, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0xd9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd9f2));
        // B3 0068
        gbc.setState(0xa047, 0xc09, 0x2000, 0x7b59, 0xe956, 0x5ebf, 0x1, 0x0);
        gbc.writeMem(0xa047, { 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc09, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa047));
        // B3 0069
        gbc.setState(0x4ab, 0x2d0b, 0x9f60, 0x8c8c, 0xa21a, 0xca1d, 0x0, 0x1);
        gbc.writeMem(0x4ab, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2d0b, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 006A
        gbc.setState(0x22b, 0xe75c, 0xf610, 0xe5ba, 0x76ad, 0x9300, 0x1, 0x1);
        gbc.writeMem(0x22b, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe75c, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 006C
        gbc.setState(0x9541, 0x98dc, 0x59b0, 0xeba6, 0x7c13, 0x64e, 0x0, 0x1);
        gbc.writeMem(0x9541, { 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x98dc, gbc.sp());
        EXPECT(0x9542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9541));
        // B3 006D
        gbc.setState(0x9feb, 0xf09c, 0xca40, 0x92ec, 0x611f, 0x8524, 0x1, 0x0);
        gbc.writeMem(0x9feb, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0x9fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9feb));
        // B3 006E
        gbc.setState(0x91c2, 0x2be7, 0x2350, 0x2ff3, 0x9e10, 0xd2b6, 0x0, 0x0);
        gbc.writeMem(0x91c2, { 0xb3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2be7, gbc.sp());
        EXPECT(0x91c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x91c2));
        // B3 006F
        gbc.setState(0x8742, 0x8365, 0xb750, 0xe56f, 0x6409, 0x58b3, 0x1, 0x0);
        gbc.writeMem(0x8742, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0x8743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8742));
        // B3 0070
        gbc.setState(0xb5a6, 0x8855, 0x12f0, 0x2e95, 0xe10d, 0x8848, 0x1, 0x1);
        gbc.writeMem(0xb5a6, { 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8855, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb5a6));
        // B3 0071
        gbc.setState(0x3a64, 0xd0d8, 0x55b0, 0xd0fd, 0xc0ec, 0xab23, 0x0, 0x1);
        gbc.writeMem(0x3a64, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd0d8, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0072
        gbc.setState(0xb2d, 0x951f, 0x69d0, 0xcd30, 0x85ad, 0x4a2e, 0x1, 0x1);
        gbc.writeMem(0xb2d, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x951f, gbc.sp());
        EXPECT(0xb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0073
        gbc.setState(0x59c0, 0xf70c, 0xc3f0, 0x36da, 0xdace, 0xb5c, 0x0, 0x0);
        gbc.writeMem(0x59c0, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0074
        gbc.setState(0x26a, 0x2a2e, 0x88e0, 0xd2cd, 0x435f, 0x4fa4, 0x1, 0x0);
        gbc.writeMem(0x26a, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a2e, gbc.sp());
        EXPECT(0x26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0075
        gbc.setState(0xbbc0, 0xcafc, 0x3390, 0xf95, 0xbe99, 0x68fc, 0x1, 0x0);
        gbc.writeMem(0xbbc0, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcafc, gbc.sp());
        EXPECT(0xbbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbbc0));
        // B3 0076
        gbc.setState(0x6e78, 0x97bc, 0xd160, 0x81f3, 0xbc63, 0x5531, 0x0, 0x1);
        gbc.writeMem(0x6e78, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0077
        gbc.setState(0x7746, 0x8e13, 0x250, 0x6236, 0x7fac, 0x382, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8e13, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0078
        gbc.setState(0xd51d, 0x25ae, 0xe730, 0xded3, 0x57f2, 0xc386, 0x1, 0x1);
        gbc.writeMem(0xd51d, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x25ae, gbc.sp());
        EXPECT(0xd51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd51d));
        // B3 007A
        gbc.setState(0x618c, 0x97b7, 0x6f00, 0xcb93, 0xf2db, 0x249a, 0x0, 0x1);
        gbc.writeMem(0x618c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x97b7, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 007B
        gbc.setState(0x8b86, 0x442c, 0x38c0, 0x7ed4, 0x9a8a, 0x59d3, 0x1, 0x0);
        gbc.writeMem(0x8b86, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8b86));
        // B3 007C
        gbc.setState(0xe33f, 0xa5d2, 0x6800, 0x25e7, 0x3eca, 0x685, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa5d2, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe33f));
        // B3 007D
        gbc.setState(0x3ec2, 0xcb8f, 0xd520, 0xd688, 0xa240, 0x68e9, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0x3ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 007E
        gbc.setState(0x2519, 0x2061, 0xb4f0, 0xe524, 0x33af, 0xec10, 0x0, 0x0);
        gbc.writeMem(0x2519, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2061, gbc.sp());
        EXPECT(0x251a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 007F
        gbc.setState(0x96c5, 0x9736, 0x25b0, 0xb748, 0xe9ef, 0x78eb, 0x1, 0x0);
        gbc.writeMem(0x96c5, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x96c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x96c5));
        // B3 0080
        gbc.setState(0x34db, 0x92d5, 0xd0c0, 0x4f11, 0xf09a, 0x95ec, 0x1, 0x1);
        gbc.writeMem(0x34db, { 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x34dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0081
        gbc.setState(0xab23, 0x85b6, 0xf680, 0x1d44, 0x1274, 0xaf2e, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x85b6, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab23));
        // B3 0082
        gbc.setState(0xbe69, 0x5d8, 0xbfa0, 0xab80, 0x8e18, 0xf744, 0x0, 0x1);
        gbc.writeMem(0xbe69, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0xbe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbe69));
        // B3 0083
        gbc.setState(0xec7d, 0x465a, 0xca50, 0xef19, 0xe1e5, 0x393b, 0x0, 0x1);
        gbc.writeMem(0xec7d, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0xec7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xec7d));
        // B3 0084
        gbc.setState(0x1882, 0x3e7, 0x88f0, 0x7321, 0xf302, 0x8272, 0x1, 0x1);
        gbc.writeMem(0x1882, { 0xb3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e7, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0085
        gbc.setState(0x6f74, 0xcc5d, 0x27c0, 0x9b37, 0xe76e, 0x45cd, 0x1, 0x0);
        gbc.writeMem(0x6f74, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x6f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0086
        gbc.setState(0xc560, 0x6efa, 0xf900, 0x10c7, 0x795f, 0xd55b, 0x0, 0x0);
        gbc.writeMem(0xc560, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6efa, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc560));
        // B3 0087
        gbc.setState(0x4e04, 0xbf81, 0xa5c0, 0xf083, 0xc73, 0xd370, 0x1, 0x1);
        gbc.writeMem(0x4e04, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbf81, gbc.sp());
        EXPECT(0x4e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0088
        gbc.setState(0xe7, 0x1b, 0x8f20, 0x28db, 0x219a, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0089
        gbc.setState(0x6159, 0xdac0, 0x79f0, 0x4de3, 0xf74c, 0xafdf, 0x1, 0x0);
        gbc.writeMem(0x6159, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x615a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 008A
        gbc.setState(0x1b4f, 0x13c2, 0xf050, 0x2253, 0x1b19, 0x2560, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 008B
        gbc.setState(0x5fae, 0xdd8e, 0x49e0, 0x6472, 0xb40b, 0x3bd3, 0x0, 0x1);
        gbc.writeMem(0x5fae, { 0xb3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd8e, gbc.sp());
        EXPECT(0x5faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 008C
        gbc.setState(0x9ff7, 0x7ee7, 0x6cf0, 0x4ce2, 0x5091, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0x9ff7, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7ee7, gbc.sp());
        EXPECT(0x9ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9ff7));
        // B3 008D
        gbc.setState(0x1d17, 0x8321, 0x6dc0, 0xde35, 0xf2ac, 0xf3b9, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 008E
        gbc.setState(0xa1f0, 0x1ce2, 0xd6c0, 0x3543, 0xbc60, 0x4762, 0x0, 0x1);
        gbc.writeMem(0xa1f0, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1ce2, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa1f0));
        // B3 0090
        gbc.setState(0x27ed, 0x7380, 0x9a30, 0x700f, 0x73ea, 0x911f, 0x1, 0x0);
        gbc.writeMem(0x27ed, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7380, gbc.sp());
        EXPECT(0x27ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0091
        gbc.setState(0xbb09, 0x57d0, 0xb100, 0xd937, 0x18f9, 0xb284, 0x0, 0x0);
        gbc.writeMem(0xbb09, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x57d0, gbc.sp());
        EXPECT(0xbb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbb09));
        // B3 0092
        gbc.setState(0x5f93, 0x98db, 0x5520, 0x3567, 0x2dd6, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0x5f93, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x98db, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0093
        gbc.setState(0x3db, 0x7c4f, 0xf360, 0xbd45, 0xb128, 0xe48f, 0x0, 0x1);
        gbc.writeMem(0x3db, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7c4f, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0094
        gbc.setState(0xd443, 0x395, 0xa030, 0xf495, 0x5b4a, 0x2df2, 0x0, 0x1);
        gbc.writeMem(0xd443, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x395, gbc.sp());
        EXPECT(0xd444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd443));
        // B3 0095
        gbc.setState(0xde31, 0x9d72, 0xa800, 0x7181, 0x3949, 0x6aea, 0x0, 0x0);
        gbc.writeMem(0xde31, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9d72, gbc.sp());
        EXPECT(0xde32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xde31));
        // B3 0096
        gbc.setState(0xa703, 0x406e, 0xbc80, 0xc649, 0x90e8, 0xebc2, 0x0, 0x0);
        gbc.writeMem(0xa703, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x406e, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa703));
        // B3 0097
        gbc.setState(0x2bc7, 0x9770, 0x5090, 0x2e63, 0x174c, 0xa2c3, 0x1, 0x0);
        gbc.writeMem(0x2bc7, { 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9770, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0098
        gbc.setState(0x31c7, 0x56b2, 0x71e0, 0x8af5, 0xadb2, 0xebae, 0x1, 0x0);
        gbc.writeMem(0x31c7, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0099
        gbc.setState(0x2bb0, 0xedb7, 0x7560, 0x3b90, 0xcad5, 0x6f25, 0x1, 0x0);
        gbc.writeMem(0x2bb0, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xedb7, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 009A
        gbc.setState(0x7177, 0xfc64, 0x11e0, 0x7cc, 0xd406, 0xb3d3, 0x0, 0x1);
        gbc.writeMem(0x7177, { 0xb3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfc64, gbc.sp());
        EXPECT(0x7178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 009B
        gbc.setState(0x5f26, 0x3eee, 0x6170, 0x6ee5, 0xd007, 0xd7de, 0x0, 0x1);
        gbc.writeMem(0x5f26, { 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3eee, gbc.sp());
        EXPECT(0x5f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 009D
        gbc.setState(0xddae, 0x22f4, 0xdbd0, 0x1c58, 0x9e19, 0xfb88, 0x0, 0x1);
        gbc.writeMem(0xddae, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x22f4, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xddae));
        // B3 009E
        gbc.setState(0xbb2f, 0xa3b3, 0x16a0, 0xe96b, 0x2ab9, 0x5395, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbb2f));
        // B3 009F
        gbc.setState(0xe292, 0x565b, 0x9b60, 0x928f, 0xbe4e, 0xd561, 0x1, 0x1);
        gbc.writeMem(0xe292, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x565b, gbc.sp());
        EXPECT(0xe293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe292));
        // B3 00A0
        gbc.setState(0xac16, 0xaf51, 0xdcd0, 0x417e, 0xdc68, 0x8f29, 0x1, 0x0);
        gbc.writeMem(0xac16, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaf51, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xac16));
        // B3 00A1
        gbc.setState(0xc7b1, 0x96dd, 0xa0c0, 0xa7ce, 0x3ae5, 0x2e2c, 0x1, 0x1);
        gbc.writeMem(0xc7b1, { 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x96dd, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc7b1));
        // B3 00A2
        gbc.setState(0xa09, 0xcf13, 0x9cd0, 0x2a74, 0x2e86, 0xf486, 0x1, 0x1);
        gbc.writeMem(0xa09, { 0xb3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00A3
        gbc.setState(0x95d8, 0x2cc7, 0x3b20, 0xe0f7, 0x79eb, 0x6285, 0x1, 0x0);
        gbc.writeMem(0x95d8, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0x95d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x95d8));
        // B3 00A4
        gbc.setState(0xcd66, 0x86d8, 0x3910, 0xe28f, 0xfa96, 0xb4b6, 0x1, 0x1);
        gbc.writeMem(0xcd66, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x86d8, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcd66));
        // B3 00A5
        gbc.setState(0x5884, 0xe4cf, 0xad70, 0x7425, 0x10cf, 0xc3c1, 0x0, 0x0);
        gbc.writeMem(0x5884, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe4cf, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00A6
        gbc.setState(0x2bdb, 0xf345, 0xaa00, 0x38ee, 0x4dfa, 0x667b, 0x1, 0x1);
        gbc.writeMem(0x2bdb, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf345, gbc.sp());
        EXPECT(0x2bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00A7
        gbc.setState(0x69, 0xc2a3, 0xd810, 0x7912, 0x315a, 0x50fb, 0x1, 0x0);
        gbc.writeMem(0x69, { 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc2a3, gbc.sp());
        EXPECT(0x6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00A8
        gbc.setState(0xb354, 0xebf8, 0x8880, 0xfa8b, 0x19e0, 0xd748, 0x1, 0x1);
        gbc.writeMem(0xb354, { 0xb3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xebf8, gbc.sp());
        EXPECT(0xb355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb354));
        // B3 00A9
        gbc.setState(0xb7ea, 0x740a, 0xe3e0, 0x9551, 0x635f, 0x4f24, 0x1, 0x0);
        gbc.writeMem(0xb7ea, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb7ea));
        // B3 00AA
        gbc.setState(0x7ef2, 0x5598, 0xb3d0, 0x6dfe, 0xf928, 0x8c, 0x1, 0x0);
        gbc.writeMem(0x7ef2, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x7ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00AC
        gbc.setState(0x4dda, 0x397c, 0x7a60, 0x66db, 0x32bd, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0x4dda, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x397c, gbc.sp());
        EXPECT(0x4ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00AD
        gbc.setState(0xdb58, 0x4086, 0x5b30, 0x563a, 0x84ff, 0x519, 0x1, 0x1);
        gbc.writeMem(0xdb58, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4086, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdb58));
        // B3 00AE
        gbc.setState(0x734e, 0x8be8, 0x5bc0, 0xae78, 0x9222, 0x596b, 0x1, 0x0);
        gbc.writeMem(0x734e, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00AF
        gbc.setState(0xbcf2, 0x2683, 0xf9e0, 0x8eae, 0xcc2d, 0xe771, 0x1, 0x1);
        gbc.writeMem(0xbcf2, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2683, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbcf2));
        // B3 00B0
        gbc.setState(0x3399, 0x9518, 0xe290, 0x7e7c, 0xb71b, 0x84e8, 0x0, 0x0);
        gbc.writeMem(0x3399, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0x339a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00B1
        gbc.setState(0x8e72, 0x5843, 0xc4b0, 0x278, 0x5f17, 0x7826, 0x0, 0x1);
        gbc.writeMem(0x8e72, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8e72));
        // B3 00B2
        gbc.setState(0xe8b8, 0x5b0e, 0xcf80, 0x49ed, 0x2315, 0x671d, 0x1, 0x1);
        gbc.writeMem(0xe8b8, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5b0e, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe8b8));
        // B3 00B3
        gbc.setState(0xcfc6, 0x818e, 0xad90, 0x2133, 0xfadb, 0x9115, 0x1, 0x0);
        gbc.writeMem(0xcfc6, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcfc6));
        // B3 00B4
        gbc.setState(0x4bd7, 0x247a, 0xd2a0, 0x4e29, 0x3f44, 0x11aa, 0x1, 0x0);
        gbc.writeMem(0x4bd7, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x247a, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00B5
        gbc.setState(0x28bd, 0xb4bb, 0xf850, 0x75ad, 0xaa07, 0x3d42, 0x0, 0x0);
        gbc.writeMem(0x28bd, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb4bb, gbc.sp());
        EXPECT(0x28be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00B6
        gbc.setState(0x2bb2, 0x72f4, 0x8f30, 0x98e8, 0x30a6, 0xbd25, 0x1, 0x1);
        gbc.writeMem(0x2bb2, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x72f4, gbc.sp());
        EXPECT(0x2bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00B7
        gbc.setState(0x9b61, 0x6947, 0x3220, 0x2d59, 0x6c21, 0x370e, 0x0, 0x0);
        gbc.writeMem(0x9b61, { 0xb3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6947, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9b61));
        // B3 00B8
        gbc.setState(0x9b93, 0x8193, 0xba50, 0x67af, 0xa106, 0x3ba0, 0x1, 0x1);
        gbc.writeMem(0x9b93, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0x9b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9b93));
        // B3 00B9
        gbc.setState(0x72af, 0xbe89, 0xd800, 0x430e, 0xfd47, 0x749b, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbe89, gbc.sp());
        EXPECT(0x72b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00BA
        gbc.setState(0x7442, 0x4d4e, 0x3d0, 0xda82, 0x180b, 0x48bf, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0xb3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4d4e, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00BB
        gbc.setState(0x370b, 0x82f, 0xecd0, 0xdbaa, 0x859b, 0xff4a, 0x0, 0x1);
        gbc.writeMem(0x370b, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0x370c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00BC
        gbc.setState(0xabe9, 0x4062, 0xda70, 0xaa59, 0x9522, 0xe91b, 0x1, 0x0);
        gbc.writeMem(0xabe9, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4062, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xabe9));
        // B3 00BD
        gbc.setState(0xca8e, 0xdf2b, 0xe6e0, 0xe967, 0x930a, 0xfa73, 0x1, 0x1);
        gbc.writeMem(0xca8e, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdf2b, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xca8e));
        // B3 00BE
        gbc.setState(0x584c, 0x5c42, 0xcc70, 0xa9b1, 0xb804, 0x97b4, 0x1, 0x1);
        gbc.writeMem(0x584c, { 0xb3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0x584d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00BF
        gbc.setState(0x73c3, 0x3220, 0x42c0, 0x77b9, 0x1a83, 0xaa5, 0x0, 0x0);
        gbc.writeMem(0x73c3, { 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C0
        gbc.setState(0x4039, 0x7341, 0x12c0, 0x15be, 0xc6ef, 0x3b11, 0x1, 0x0);
        gbc.writeMem(0x4039, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7341, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C1
        gbc.setState(0x769b, 0xde85, 0xa110, 0x2c1d, 0xb6bf, 0xaacc, 0x0, 0x1);
        gbc.writeMem(0x769b, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xde85, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C2
        gbc.setState(0xb564, 0x8263, 0x1c70, 0x331c, 0x591, 0xb7ec, 0x1, 0x0);
        gbc.writeMem(0xb564, { 0xb3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb564));
        // B3 00C3
        gbc.setState(0xa08b, 0x8ffd, 0x4ca0, 0x8189, 0xa8a2, 0x9d04, 0x1, 0x0);
        gbc.writeMem(0xa08b, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8ffd, gbc.sp());
        EXPECT(0xa08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa08b));
        // B3 00C4
        gbc.setState(0xb085, 0xc989, 0xd4d0, 0x21dd, 0x4d22, 0xa974, 0x1, 0x0);
        gbc.writeMem(0xb085, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc989, gbc.sp());
        EXPECT(0xb086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb085));
        // B3 00C5
        gbc.setState(0x5e4d, 0xeb4a, 0xe620, 0xb777, 0xcb39, 0xf61c, 0x0, 0x0);
        gbc.writeMem(0x5e4d, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeb4a, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C6
        gbc.setState(0x93b1, 0xe3ea, 0x2f20, 0x3e84, 0x8e6c, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0x93b1, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe3ea, gbc.sp());
        EXPECT(0x93b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93b1));
        // B3 00C7
        gbc.setState(0x14cc, 0x41a7, 0x4790, 0x7f21, 0x31c6, 0xb835, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x41a7, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C8
        gbc.setState(0x310d, 0x7db6, 0x61f0, 0xa4f, 0x4fd0, 0x6a2a, 0x0, 0x1);
        gbc.writeMem(0x310d, { 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0x310e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00C9
        gbc.setState(0x38b1, 0x58e0, 0x60a0, 0x2345, 0x628b, 0xaab0, 0x0, 0x0);
        gbc.writeMem(0x38b1, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00CB
        gbc.setState(0x119, 0x561, 0xfda0, 0xd051, 0xc1ee, 0xba87, 0x1, 0x0);
        gbc.writeMem(0x119, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0x11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00CD
        gbc.setState(0x40cc, 0xce3b, 0x4670, 0xaeb4, 0xb989, 0x32dd, 0x1, 0x1);
        gbc.writeMem(0x40cc, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce3b, gbc.sp());
        EXPECT(0x40cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00CE
        gbc.setState(0x308d, 0xdf87, 0xf6f0, 0xbdd0, 0x83e4, 0x69bd, 0x0, 0x0);
        gbc.writeMem(0x308d, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00CF
        gbc.setState(0xbfed, 0x541c, 0xe0, 0x7450, 0xccc4, 0xeeec, 0x0, 0x0);
        gbc.writeMem(0xbfed, { 0xb3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbfed));
        // B3 00D0
        gbc.setState(0x2b07, 0xec80, 0xd9c0, 0x808f, 0x781f, 0x55b0, 0x0, 0x1);
        gbc.writeMem(0x2b07, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D1
        gbc.setState(0xecb8, 0x7029, 0x9a10, 0x683c, 0xfb8d, 0xd7bc, 0x1, 0x1);
        gbc.writeMem(0xecb8, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xecb8));
        // B3 00D2
        gbc.setState(0x7e70, 0xb20d, 0xe930, 0x731b, 0xb737, 0x276b, 0x0, 0x0);
        gbc.writeMem(0x7e70, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0x7e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D3
        gbc.setState(0x5461, 0x9df8, 0xa330, 0x88f1, 0x7a90, 0x8e87, 0x0, 0x0);
        gbc.writeMem(0x5461, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9df8, gbc.sp());
        EXPECT(0x5462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D4
        gbc.setState(0xc3c1, 0x3327, 0x42a0, 0xe67a, 0x992e, 0xe0f8, 0x0, 0x1);
        gbc.writeMem(0xc3c1, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3327, gbc.sp());
        EXPECT(0xc3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc3c1));
        // B3 00D5
        gbc.setState(0x33be, 0x676e, 0x9ae0, 0x193, 0xfcb6, 0x50a5, 0x1, 0x0);
        gbc.writeMem(0x33be, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D6
        gbc.setState(0x3256, 0x1261, 0xd810, 0xc36d, 0x24f2, 0xfb81, 0x1, 0x1);
        gbc.writeMem(0x3256, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1261, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D7
        gbc.setState(0x2a1, 0xa892, 0x3d70, 0xb89b, 0xdad4, 0x2e5f, 0x1, 0x0);
        gbc.writeMem(0x2a1, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa892, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00D8
        gbc.setState(0xa1d2, 0xabee, 0x4550, 0x10ad, 0x4b67, 0x9636, 0x1, 0x1);
        gbc.writeMem(0xa1d2, { 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0xa1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa1d2));
        // B3 00D9
        gbc.setState(0xda42, 0x5c5a, 0xe520, 0x9f98, 0xf4cc, 0x5b2, 0x0, 0x1);
        gbc.writeMem(0xda42, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c5a, gbc.sp());
        EXPECT(0xda43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xda42));
        // B3 00DA
        gbc.setState(0xd87e, 0x549a, 0x23f0, 0x2cce, 0x886a, 0xd8ee, 0x1, 0x1);
        gbc.writeMem(0xd87e, { 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd87e));
        // B3 00DB
        gbc.setState(0xbf69, 0x4af7, 0xde00, 0x6d4, 0x21f, 0xb047, 0x0, 0x0);
        gbc.writeMem(0xbf69, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4af7, gbc.sp());
        EXPECT(0xbf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbf69));
        // B3 00DC
        gbc.setState(0xc9a2, 0xc3c1, 0xbba0, 0xd600, 0x6aa3, 0x2207, 0x1, 0x1);
        gbc.writeMem(0xc9a2, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc3c1, gbc.sp());
        EXPECT(0xc9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc9a2));
        // B3 00DD
        gbc.setState(0xbf78, 0xd85e, 0x7b80, 0x2203, 0xf156, 0x54b6, 0x0, 0x1);
        gbc.writeMem(0xbf78, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0xbf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbf78));
        // B3 00DE
        gbc.setState(0x4594, 0x193e, 0x8830, 0x6fc0, 0x953b, 0x4484, 0x1, 0x0);
        gbc.writeMem(0x4594, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00DF
        gbc.setState(0x3d6d, 0xc2ab, 0xd700, 0xcdd5, 0x956a, 0xb9ba, 0x0, 0x1);
        gbc.writeMem(0x3d6d, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00E0
        gbc.setState(0xb079, 0x1e73, 0x45c0, 0xc462, 0x36ee, 0xce89, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1e73, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb079));
        // B3 00E1
        gbc.setState(0xd3bc, 0x6dd8, 0x9fe0, 0xd4e1, 0xc0b, 0xce94, 0x1, 0x1);
        gbc.writeMem(0xd3bc, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6dd8, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd3bc));
        // B3 00E2
        gbc.setState(0x16a7, 0x5288, 0xf640, 0x612, 0x39ff, 0x2594, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5288, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00E3
        gbc.setState(0xe752, 0x8037, 0xdc70, 0x949b, 0xe889, 0x2352, 0x0, 0x1);
        gbc.writeMem(0xe752, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0xe753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe752));
        // B3 00E4
        gbc.setState(0x3adc, 0x1c9d, 0x9050, 0x51aa, 0xdcd2, 0x772, 0x0, 0x0);
        gbc.writeMem(0x3adc, { 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00E5
        gbc.setState(0xb638, 0xa125, 0x3cf0, 0xe8c1, 0xbac, 0xc90d, 0x1, 0x1);
        gbc.writeMem(0xb638, { 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa125, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb638));
        // B3 00E6
        gbc.setState(0xe7f, 0x12e5, 0x1000, 0x5600, 0x7d4d, 0x5448, 0x1, 0x0);
        gbc.writeMem(0xe7f, { 0xb3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00E7
        gbc.setState(0x5a0d, 0x9aa4, 0x44b0, 0x9c7e, 0x56c4, 0x26a6, 0x0, 0x1);
        gbc.writeMem(0x5a0d, { 0xb3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00E8
        gbc.setState(0xcbf2, 0xd245, 0xd5a0, 0xccae, 0xdb58, 0x8eb1, 0x0, 0x1);
        gbc.writeMem(0xcbf2, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcbf2));
        // B3 00EA
        gbc.setState(0xe1, 0xee59, 0xad50, 0x110d, 0x2147, 0x103, 0x1, 0x0);
        gbc.writeMem(0xe1, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee59, gbc.sp());
        EXPECT(0xe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00EB
        gbc.setState(0x2cac, 0xd7fe, 0x2a0, 0xc56b, 0x263b, 0xda1e, 0x1, 0x1);
        gbc.writeMem(0x2cac, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd7fe, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00ED
        gbc.setState(0xd568, 0x35ec, 0xedd0, 0xdc0f, 0xc368, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0xd568, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd568));
        // B3 00EF
        gbc.setState(0x4080, 0x73c3, 0xf520, 0x134a, 0x928b, 0xe160, 0x1, 0x0);
        gbc.writeMem(0x4080, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x73c3, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00F1
        gbc.setState(0x9942, 0xcfce, 0xb950, 0x741c, 0xb854, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0x9942, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x9943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9942));
        // B3 00F2
        gbc.setState(0x41ca, 0x3387, 0x6ac0, 0xbaaa, 0xdd3a, 0xadb0, 0x1, 0x1);
        gbc.writeMem(0x41ca, { 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00F3
        gbc.setState(0x7f2b, 0xdb07, 0x8190, 0xac07, 0x9d1f, 0xd662, 0x1, 0x1);
        gbc.writeMem(0x7f2b, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdb07, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 00F4
        gbc.setState(0xe9c2, 0xdc57, 0x4b20, 0xae2a, 0x2855, 0xdd2a, 0x1, 0x0);
        gbc.writeMem(0xe9c2, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdc57, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe9c2));
        // B3 00F5
        gbc.setState(0xab58, 0x4349, 0x7860, 0x1ff6, 0x1625, 0x2187, 0x1, 0x0);
        gbc.writeMem(0xab58, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4349, gbc.sp());
        EXPECT(0xab59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab58));
        // B3 00F6
        gbc.setState(0xcf10, 0x9572, 0x7490, 0x6eee, 0xa1b8, 0x32fe, 0x1, 0x0);
        gbc.writeMem(0xcf10, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcf10));
        // B3 00F7
        gbc.setState(0x8534, 0xc67e, 0x8540, 0xe3f, 0xba18, 0x4468, 0x1, 0x1);
        gbc.writeMem(0x8534, { 0xb3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc67e, gbc.sp());
        EXPECT(0x8535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8534));
        // B3 00F8
        gbc.setState(0xe7e8, 0xe7bd, 0xba90, 0x3da6, 0xb9fa, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xe7e8, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe7e8));
        // B3 00F9
        gbc.setState(0xb742, 0x42d1, 0xabb0, 0x19ec, 0x797e, 0x6c4a, 0x1, 0x1);
        gbc.writeMem(0xb742, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0xb743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb742));
        // B3 00FA
        gbc.setState(0xc28e, 0xd525, 0x8780, 0x250b, 0x1a51, 0x4aa3, 0x0, 0x1);
        gbc.writeMem(0xc28e, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0xc28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc28e));
        // B3 00FC
        gbc.setState(0x8dcf, 0x2f24, 0x7340, 0x7d2e, 0x2330, 0xb99, 0x1, 0x1);
        gbc.writeMem(0x8dcf, { 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x8dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8dcf));
        // B3 00FD
        gbc.setState(0xd1c1, 0x1949, 0x4f70, 0xc14a, 0x2f79, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0xd1c1, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1949, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd1c1));
        // B3 00FE
        gbc.setState(0xd384, 0x48be, 0x35e0, 0x526b, 0x3169, 0x7449, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xd385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd384));
        // B3 00FF
        gbc.setState(0x2fd2, 0x6c1e, 0xddd0, 0x4a5d, 0x1f8d, 0x5a5f, 0x1, 0x1);
        gbc.writeMem(0x2fd2, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6c1e, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0100
        gbc.setState(0x89bc, 0x8569, 0xc920, 0xe03b, 0xe38e, 0xf5bb, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x89bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x89bc));
        // B3 0101
        gbc.setState(0x4e8c, 0xdb71, 0x3ca0, 0x771a, 0x5ba0, 0x16b, 0x1, 0x1);
        gbc.writeMem(0x4e8c, { 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0102
        gbc.setState(0xeec9, 0xb929, 0xab60, 0xea77, 0xecd2, 0xdebf, 0x0, 0x1);
        gbc.writeMem(0xeec9, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeec9));
        // B3 0103
        gbc.setState(0x64a3, 0x2afc, 0xcf0, 0x15e5, 0x1a, 0x55af, 0x0, 0x1);
        gbc.writeMem(0x64a3, { 0xb3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2afc, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0104
        gbc.setState(0x7eea, 0xb94d, 0x77b0, 0x54b1, 0xc854, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0x7eea, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0x7eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0105
        gbc.setState(0x97c0, 0xa6b3, 0x3250, 0x2d74, 0xf399, 0x13c1, 0x0, 0x0);
        gbc.writeMem(0x97c0, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x97c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x97c0));
        // B3 0106
        gbc.setState(0x351d, 0xe8fc, 0x4ad0, 0xfa03, 0x743c, 0xeceb, 0x1, 0x0);
        gbc.writeMem(0x351d, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0107
        gbc.setState(0xd25, 0x7946, 0xfdf0, 0xde24, 0x2311, 0xa916, 0x1, 0x1);
        gbc.writeMem(0xd25, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0108
        gbc.setState(0x338a, 0x7dbf, 0xda10, 0x6d7c, 0xe20d, 0xe0b2, 0x0, 0x0);
        gbc.writeMem(0x338a, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x338b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0109
        gbc.setState(0xe317, 0xe75, 0xbe00, 0x2762, 0x2a7f, 0x688, 0x1, 0x1);
        gbc.writeMem(0xe317, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe75, gbc.sp());
        EXPECT(0xe318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe317));
        // B3 010A
        gbc.setState(0xdf19, 0xcebc, 0xea50, 0x762b, 0x4359, 0xd4b1, 0x0, 0x1);
        gbc.writeMem(0xdf19, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcebc, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdf19));
        // B3 010B
        gbc.setState(0xa215, 0xffa3, 0x4450, 0x7c21, 0x1e58, 0x58a0, 0x1, 0x1);
        gbc.writeMem(0xa215, { 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0xa216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa215));
        // B3 010C
        gbc.setState(0xbdcd, 0x21c8, 0x4030, 0x424e, 0x4d21, 0x26d5, 0x1, 0x0);
        gbc.writeMem(0xbdcd, { 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0xbdce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbdcd));
        // B3 010D
        gbc.setState(0xb576, 0x97f8, 0x12d0, 0xc241, 0x109e, 0x76f2, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0xb3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0xb577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb576));
        // B3 010E
        gbc.setState(0x58d7, 0x823f, 0xe350, 0x4bf7, 0xf812, 0xe362, 0x1, 0x0);
        gbc.writeMem(0x58d7, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x823f, gbc.sp());
        EXPECT(0x58d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 010F
        gbc.setState(0x508d, 0x84e5, 0x8240, 0x9581, 0xa34e, 0x74ab, 0x0, 0x1);
        gbc.writeMem(0x508d, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x84e5, gbc.sp());
        EXPECT(0x508e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0110
        gbc.setState(0x3aee, 0x47ae, 0xb4c0, 0x14f0, 0xbd4c, 0x7a7, 0x1, 0x1);
        gbc.writeMem(0x3aee, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0x3aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0111
        gbc.setState(0x62e9, 0xf697, 0x45e0, 0xbd50, 0x40a, 0x24b9, 0x0, 0x0);
        gbc.writeMem(0x62e9, { 0xb3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf697, gbc.sp());
        EXPECT(0x62ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0112
        gbc.setState(0x3fa9, 0x4fa6, 0x50b0, 0xc335, 0xd9b6, 0x71ae, 0x1, 0x0);
        gbc.writeMem(0x3fa9, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4fa6, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0113
        gbc.setState(0xbc2f, 0x75ef, 0x570, 0x3114, 0x26e6, 0xeb74, 0x0, 0x1);
        gbc.writeMem(0xbc2f, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x75ef, gbc.sp());
        EXPECT(0xbc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbc2f));
        // B3 0114
        gbc.setState(0x339e, 0x799, 0x9600, 0x4f95, 0x4612, 0xbeae, 0x1, 0x1);
        gbc.writeMem(0x339e, { 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0115
        gbc.setState(0x5559, 0xd233, 0xb0c0, 0x4496, 0xc06d, 0x60e4, 0x0, 0x1);
        gbc.writeMem(0x5559, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0116
        gbc.setState(0xabcf, 0x3ccc, 0xd240, 0xb2, 0xe373, 0x18b1, 0x0, 0x0);
        gbc.writeMem(0xabcf, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xabcf));
        // B3 0117
        gbc.setState(0xde6c, 0xad71, 0x4e0, 0xea50, 0x9edd, 0x80da, 0x1, 0x0);
        gbc.writeMem(0xde6c, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xad71, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xde6c));
        // B3 0118
        gbc.setState(0xb140, 0x217a, 0xcc60, 0xfc5f, 0xf9b8, 0x61d6, 0x1, 0x1);
        gbc.writeMem(0xb140, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb140));
        // B3 0119
        gbc.setState(0x1c11, 0x2f66, 0x19e0, 0x9940, 0xf12b, 0x91ca, 0x0, 0x1);
        gbc.writeMem(0x1c11, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2f66, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 011A
        gbc.setState(0x9955, 0x385f, 0xba70, 0x117b, 0x183a, 0x7a8d, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x9956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9955));
        // B3 011B
        gbc.setState(0xb47d, 0xdd07, 0x5a70, 0x8c8e, 0x9548, 0x6882, 0x0, 0x0);
        gbc.writeMem(0xb47d, { 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdd07, gbc.sp());
        EXPECT(0xb47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb47d));
        // B3 011C
        gbc.setState(0x2d75, 0x8b2d, 0xe570, 0x8323, 0x2beb, 0x1d8b, 0x0, 0x1);
        gbc.writeMem(0x2d75, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8b2d, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 011D
        gbc.setState(0xa709, 0xa581, 0xf4a0, 0x36a8, 0xacdc, 0xa577, 0x1, 0x0);
        gbc.writeMem(0xa709, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0xa70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa709));
        // B3 011E
        gbc.setState(0x1d91, 0x7e2b, 0x8670, 0x4235, 0x5938, 0x7756, 0x1, 0x1);
        gbc.writeMem(0x1d91, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7e2b, gbc.sp());
        EXPECT(0x1d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 011F
        gbc.setState(0x3d6a, 0x7faf, 0xf70, 0xf0c3, 0x12a4, 0x3be8, 0x0, 0x0);
        gbc.writeMem(0x3d6a, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0120
        gbc.setState(0xc57d, 0x82ba, 0xc330, 0xc26f, 0x69c2, 0x79eb, 0x0, 0x1);
        gbc.writeMem(0xc57d, { 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x82ba, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc57d));
        // B3 0122
        gbc.setState(0xcc2f, 0x3aae, 0x5da0, 0xbb17, 0x410f, 0x2a2b, 0x0, 0x1);
        gbc.writeMem(0xcc2f, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcc2f));
        // B3 0123
        gbc.setState(0xe40f, 0x13a5, 0x2ac0, 0xbae7, 0xd4b2, 0xa0d2, 0x1, 0x1);
        gbc.writeMem(0xe40f, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x13a5, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe40f));
        // B3 0124
        gbc.setState(0x7d8e, 0xe584, 0x6c80, 0xbc1d, 0xdfc9, 0x451d, 0x0, 0x0);
        gbc.writeMem(0x7d8e, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0125
        gbc.setState(0xa828, 0xb1b6, 0x8a10, 0xc741, 0x824a, 0x1bc1, 0x0, 0x0);
        gbc.writeMem(0xa828, { 0xb3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb1b6, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa828));
        // B3 0126
        gbc.setState(0x7fff, 0x3f9d, 0x4d00, 0x630a, 0x23a3, 0x612c, 0x1, 0x1);
        gbc.writeMem(0x7fff, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0x8000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0127
        gbc.setState(0x40c3, 0x5449, 0xd760, 0xf30c, 0x8885, 0x2801, 0x1, 0x1);
        gbc.writeMem(0x40c3, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5449, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0128
        gbc.setState(0x6a44, 0xceed, 0x4ae0, 0xff0, 0xbc6e, 0xfc17, 0x1, 0x0);
        gbc.writeMem(0x6a44, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x6a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0129
        gbc.setState(0x4ea8, 0x2e75, 0xc690, 0xc202, 0x1992, 0xd8a6, 0x0, 0x0);
        gbc.writeMem(0x4ea8, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 012A
        gbc.setState(0x4cb7, 0x35c3, 0xe8d0, 0x518c, 0xbc21, 0xe47f, 0x0, 0x0);
        gbc.writeMem(0x4cb7, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x35c3, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 012B
        gbc.setState(0x8784, 0x1f23, 0x7960, 0xd545, 0xb56f, 0xad23, 0x1, 0x1);
        gbc.writeMem(0x8784, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8784));
        // B3 012C
        gbc.setState(0x3e, 0xa246, 0x89f0, 0xd23, 0x94d, 0x4444, 0x1, 0x0);
        gbc.writeMem(0x3e, { 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa246, gbc.sp());
        EXPECT(0x3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 012D
        gbc.setState(0x61fd, 0xba6f, 0x7cc0, 0x16a7, 0x299, 0xed07, 0x1, 0x1);
        gbc.writeMem(0x61fd, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xba6f, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 012E
        gbc.setState(0xdd89, 0xb764, 0x3d20, 0x5124, 0x3233, 0x8f74, 0x1, 0x1);
        gbc.writeMem(0xdd89, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb764, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdd89));
        // B3 012F
        gbc.setState(0x78e0, 0xf42d, 0x4660, 0xc9eb, 0x65ca, 0xff57, 0x1, 0x0);
        gbc.writeMem(0x78e0, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf42d, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0130
        gbc.setState(0xb704, 0x87c3, 0x3510, 0xd8a5, 0x152a, 0xe615, 0x1, 0x1);
        gbc.writeMem(0xb704, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb704));
        // B3 0131
        gbc.setState(0xe721, 0x8a5, 0x2630, 0xa7e2, 0x1c3d, 0xa80d, 0x1, 0x0);
        gbc.writeMem(0xe721, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a5, gbc.sp());
        EXPECT(0xe722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe721));
        // B3 0132
        gbc.setState(0x3bb2, 0xad42, 0xf7f0, 0xdbb4, 0xd5a9, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0x3bb2, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xad42, gbc.sp());
        EXPECT(0x3bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0134
        gbc.setState(0x425e, 0x2948, 0x5380, 0xe341, 0x24d5, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0x425e, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0x425f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0135
        gbc.setState(0x3f0c, 0x2c1d, 0x65b0, 0xed9d, 0x92a8, 0xa994, 0x1, 0x1);
        gbc.writeMem(0x3f0c, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2c1d, gbc.sp());
        EXPECT(0x3f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0136
        gbc.setState(0x64db, 0x2d7c, 0x1850, 0x88b3, 0x58eb, 0x2a10, 0x1, 0x1);
        gbc.writeMem(0x64db, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2d7c, gbc.sp());
        EXPECT(0x64dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0137
        gbc.setState(0x19a7, 0x94ae, 0xd7f0, 0x4037, 0x9554, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0x19a7, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0x19a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0138
        gbc.setState(0x2e85, 0x3210, 0xbd10, 0x370f, 0x3c7f, 0xe5, 0x0, 0x0);
        gbc.writeMem(0x2e85, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3210, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0139
        gbc.setState(0xc7de, 0xc753, 0x9d80, 0x32bc, 0x624a, 0xf198, 0x1, 0x1);
        gbc.writeMem(0xc7de, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc753, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc7de));
        // B3 013A
        gbc.setState(0x9f5f, 0xe4d4, 0x4490, 0xe6ab, 0x577a, 0xdecf, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9f5f));
        // B3 013B
        gbc.setState(0xab11, 0xd26f, 0xe950, 0x37f8, 0x93bb, 0x1f40, 0x0, 0x0);
        gbc.writeMem(0xab11, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0xab12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab11));
        // B3 013C
        gbc.setState(0xecf2, 0x7bfe, 0x3600, 0xcf54, 0x39ee, 0x765, 0x0, 0x0);
        gbc.writeMem(0xecf2, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0xecf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xecf2));
        // B3 013D
        gbc.setState(0xd7fd, 0x735d, 0x3b90, 0xd964, 0x9c9, 0xa383, 0x0, 0x0);
        gbc.writeMem(0xd7fd, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x735d, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd7fd));
        // B3 013E
        gbc.setState(0x8055, 0x9a88, 0xe660, 0x4de2, 0x91e4, 0x934e, 0x0, 0x1);
        gbc.writeMem(0x8055, { 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8055));
        // B3 013F
        gbc.setState(0x9dd9, 0xc657, 0xdc00, 0x2c6, 0xa938, 0xc7cf, 0x1, 0x0);
        gbc.writeMem(0x9dd9, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9dd9));
        // B3 0140
        gbc.setState(0xbfa8, 0xa908, 0xc920, 0x8a98, 0x9810, 0xa5f9, 0x0, 0x0);
        gbc.writeMem(0xbfa8, { 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa908, gbc.sp());
        EXPECT(0xbfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbfa8));
        // B3 0141
        gbc.setState(0x24a6, 0xd77d, 0xe490, 0xf3ee, 0x4554, 0x8b22, 0x0, 0x1);
        gbc.writeMem(0x24a6, { 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x24a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0142
        gbc.setState(0xc13e, 0xcc0f, 0xecf0, 0x9768, 0x4295, 0x256e, 0x0, 0x0);
        gbc.writeMem(0xc13e, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc13e));
        // B3 0143
        gbc.setState(0x175f, 0x6ce9, 0x1060, 0x9f1b, 0x12f4, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0x175f, { 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6ce9, gbc.sp());
        EXPECT(0x1760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0144
        gbc.setState(0x2340, 0x3bf9, 0x79b0, 0x3526, 0xc85a, 0x5318, 0x1, 0x1);
        gbc.writeMem(0x2340, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3bf9, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0145
        gbc.setState(0x98ae, 0xe803, 0xdab0, 0x2487, 0x169e, 0x427b, 0x1, 0x1);
        gbc.writeMem(0x98ae, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x98ae));
        // B3 0146
        gbc.setState(0xa152, 0xa1cb, 0x32a0, 0x8c72, 0xd3c5, 0xa678, 0x1, 0x1);
        gbc.writeMem(0xa152, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa1cb, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa152));
        // B3 0147
        gbc.setState(0xa957, 0x2d27, 0x8740, 0x1537, 0x1d0, 0x406e, 0x1, 0x0);
        gbc.writeMem(0xa957, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa957));
        // B3 0148
        gbc.setState(0x9030, 0xd29e, 0x7170, 0xfa28, 0x1a1, 0x139, 0x0, 0x0);
        gbc.writeMem(0x9030, { 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9030));
        // B3 0149
        gbc.setState(0x5aa1, 0x7b15, 0x1db0, 0x76c5, 0xcc9b, 0xa6ee, 0x0, 0x0);
        gbc.writeMem(0x5aa1, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7b15, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 014A
        gbc.setState(0x306e, 0x3529, 0x1090, 0x8b96, 0x97e, 0x1d5e, 0x0, 0x1);
        gbc.writeMem(0x306e, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0x306f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 014B
        gbc.setState(0x391f, 0x81d4, 0xb0c0, 0x361c, 0x2338, 0x155d, 0x1, 0x1);
        gbc.writeMem(0x391f, { 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x81d4, gbc.sp());
        EXPECT(0x3920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 014C
        gbc.setState(0x1faf, 0xc33e, 0x8ed0, 0x56bf, 0x8623, 0x830e, 0x1, 0x0);
        gbc.writeMem(0x1faf, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0x1fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 014D
        gbc.setState(0x4ed6, 0x3120, 0x3ce0, 0x34c7, 0x6ce3, 0x45c6, 0x1, 0x1);
        gbc.writeMem(0x4ed6, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3120, gbc.sp());
        EXPECT(0x4ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 014F
        gbc.setState(0x656c, 0x6948, 0x75c0, 0x618c, 0xb16, 0x92ac, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6948, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0150
        gbc.setState(0xcafe, 0x3df3, 0x2740, 0x356f, 0x8ae9, 0xe3e, 0x1, 0x1);
        gbc.writeMem(0xcafe, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcafe));
        // B3 0151
        gbc.setState(0x504b, 0x27ce, 0xa140, 0xfdeb, 0xbfc2, 0xc7e7, 0x1, 0x1);
        gbc.writeMem(0x504b, { 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0152
        gbc.setState(0xe102, 0xf523, 0x33a0, 0x6d0d, 0x2319, 0x3f5f, 0x0, 0x1);
        gbc.writeMem(0xe102, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf523, gbc.sp());
        EXPECT(0xe103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe102));
        // B3 0153
        gbc.setState(0x1d5, 0xccee, 0xfd60, 0x490f, 0x884c, 0x3dfd, 0x1, 0x0);
        gbc.writeMem(0x1d5, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xccee, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0154
        gbc.setState(0xa7e0, 0x9e60, 0x5aa0, 0x8d31, 0x3b5c, 0x1da, 0x0, 0x0);
        gbc.writeMem(0xa7e0, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa7e0));
        // B3 0155
        gbc.setState(0x1d7a, 0x3b1d, 0x9d0, 0xc780, 0x1ac0, 0x82a9, 0x1, 0x1);
        gbc.writeMem(0x1d7a, { 0xb3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0x1d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0156
        gbc.setState(0x56eb, 0x3dd5, 0xd3f0, 0x1635, 0x5cdf, 0x6865, 0x1, 0x0);
        gbc.writeMem(0x56eb, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3dd5, gbc.sp());
        EXPECT(0x56ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0157
        gbc.setState(0x4fc8, 0x784b, 0x77b0, 0xee71, 0x515b, 0x9880, 0x1, 0x0);
        gbc.writeMem(0x4fc8, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0158
        gbc.setState(0x5d41, 0xf3a4, 0x800, 0x592d, 0xb400, 0x67cc, 0x1, 0x0);
        gbc.writeMem(0x5d41, { 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf3a4, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0159
        gbc.setState(0x6a9, 0x3062, 0x7980, 0xec82, 0xdb4, 0xd0ac, 0x0, 0x0);
        gbc.writeMem(0x6a9, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0x6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015A
        gbc.setState(0x4a31, 0x889c, 0x5a40, 0x7468, 0xf45a, 0x4f5d, 0x0, 0x0);
        gbc.writeMem(0x4a31, { 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x889c, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015B
        gbc.setState(0x289a, 0xdc71, 0x8870, 0x2431, 0x64cf, 0xac5c, 0x1, 0x1);
        gbc.writeMem(0x289a, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdc71, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015C
        gbc.setState(0x29c1, 0xe0c8, 0xe710, 0xd6ce, 0x7119, 0xe913, 0x0, 0x0);
        gbc.writeMem(0x29c1, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe0c8, gbc.sp());
        EXPECT(0x29c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015D
        gbc.setState(0x4a8e, 0x5317, 0xd230, 0x516f, 0x2576, 0xd2c0, 0x1, 0x0);
        gbc.writeMem(0x4a8e, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5317, gbc.sp());
        EXPECT(0x4a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015E
        gbc.setState(0x1d90, 0x51bc, 0xa7e0, 0xbb6e, 0xf5b4, 0x8864, 0x1, 0x0);
        gbc.writeMem(0x1d90, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x51bc, gbc.sp());
        EXPECT(0x1d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 015F
        gbc.setState(0xe413, 0xdf61, 0x8e30, 0x6ea5, 0xf12e, 0x4498, 0x0, 0x1);
        gbc.writeMem(0xe413, { 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xe414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe413));
        // B3 0160
        gbc.setState(0x4a26, 0xe238, 0xc700, 0xc8b, 0xfbb8, 0x87e5, 0x1, 0x1);
        gbc.writeMem(0x4a26, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0162
        gbc.setState(0x79ce, 0x75cb, 0x740, 0x1b8f, 0xac02, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0x79ce, { 0xb3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x75cb, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0164
        gbc.setState(0xba42, 0x8e0b, 0xa10, 0x88e8, 0x19e8, 0xc0d5, 0x0, 0x1);
        gbc.writeMem(0xba42, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xba42));
        // B3 0165
        gbc.setState(0xd43d, 0x882, 0x14c0, 0xffbd, 0x1a2e, 0x860e, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd43d));
        // B3 0166
        gbc.setState(0xb34d, 0x33e1, 0x9680, 0xcd2d, 0x136d, 0xf620, 0x0, 0x1);
        gbc.writeMem(0xb34d, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x33e1, gbc.sp());
        EXPECT(0xb34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb34d));
        // B3 0167
        gbc.setState(0x1a4e, 0xf7bd, 0xadf0, 0xbc4f, 0x5180, 0xf055, 0x1, 0x0);
        gbc.writeMem(0x1a4e, { 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0x1a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0168
        gbc.setState(0xe393, 0x8bdc, 0xefd0, 0xc855, 0x7e82, 0x843, 0x0, 0x0);
        gbc.writeMem(0xe393, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8bdc, gbc.sp());
        EXPECT(0xe394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe393));
        // B3 0169
        gbc.setState(0x92a8, 0x2321, 0xfa10, 0x934b, 0x5a0d, 0xf74f, 0x0, 0x0);
        gbc.writeMem(0x92a8, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x92a8));
        // B3 016A
        gbc.setState(0xd6ce, 0xec6c, 0x3a80, 0xf883, 0x28ba, 0x40c9, 0x1, 0x0);
        gbc.writeMem(0xd6ce, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xec6c, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd6ce));
        // B3 016B
        gbc.setState(0x3726, 0xcfbd, 0xe1c0, 0x4a5e, 0x1372, 0x3dc3, 0x1, 0x0);
        gbc.writeMem(0x3726, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcfbd, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 016C
        gbc.setState(0xcb0e, 0x7846, 0x5f30, 0x1245, 0x3792, 0xde2d, 0x1, 0x1);
        gbc.writeMem(0xcb0e, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcb0e));
        // B3 016D
        gbc.setState(0x2baf, 0xe73f, 0xecf0, 0x8933, 0x4cad, 0x55b5, 0x1, 0x0);
        gbc.writeMem(0x2baf, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe73f, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 016E
        gbc.setState(0xd27, 0x8488, 0x3be0, 0xaa10, 0xff9, 0x3afe, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8488, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 016F
        gbc.setState(0xe3a8, 0x4004, 0x87d0, 0x5c3f, 0xcbd3, 0x5ffb, 0x0, 0x0);
        gbc.writeMem(0xe3a8, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe3a8));
        // B3 0170
        gbc.setState(0xe508, 0x8c34, 0x9200, 0x704e, 0xc1aa, 0x5447, 0x1, 0x0);
        gbc.writeMem(0xe508, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8c34, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe508));
        // B3 0171
        gbc.setState(0x877d, 0x6eb9, 0x2060, 0x3ef5, 0x799b, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x877d, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0x877e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x877d));
        // B3 0173
        gbc.setState(0x3127, 0xa56d, 0x4120, 0xfb9e, 0x9a0c, 0x47af, 0x0, 0x0);
        gbc.writeMem(0x3127, { 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa56d, gbc.sp());
        EXPECT(0x3128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0174
        gbc.setState(0xd800, 0xdb3a, 0x9940, 0x5d9f, 0xa1cc, 0x4580, 0x0, 0x0);
        gbc.writeMem(0xd800, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd800));
        // B3 0175
        gbc.setState(0xcaf0, 0x9aa9, 0x10d0, 0xe3ab, 0x6469, 0x7358, 0x1, 0x1);
        gbc.writeMem(0xcaf0, { 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9aa9, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcaf0));
        // B3 0176
        gbc.setState(0x53c, 0x9831, 0x1e10, 0xaaf4, 0xbed4, 0x2854, 0x1, 0x0);
        gbc.writeMem(0x53c, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9831, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0177
        gbc.setState(0xb53e, 0xa41e, 0x52d0, 0x18c4, 0x72c6, 0x3631, 0x0, 0x0);
        gbc.writeMem(0xb53e, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa41e, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb53e));
        // B3 0178
        gbc.setState(0x9e9, 0x3469, 0xa30, 0xa64c, 0x4e56, 0xb27e, 0x1, 0x0);
        gbc.writeMem(0x9e9, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3469, gbc.sp());
        EXPECT(0x9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0179
        gbc.setState(0x2f20, 0xe674, 0x8c90, 0x2979, 0xe532, 0xb386, 0x1, 0x0);
        gbc.writeMem(0x2f20, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe674, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 017A
        gbc.setState(0x12e8, 0xf3e4, 0x3450, 0xe75, 0x124d, 0x559a, 0x1, 0x0);
        gbc.writeMem(0x12e8, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x12e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 017B
        gbc.setState(0x8449, 0x3e81, 0x3e90, 0x22c7, 0x66f1, 0xe4d6, 0x0, 0x1);
        gbc.writeMem(0x8449, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0x844a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8449));
        // B3 017C
        gbc.setState(0x98b6, 0x8754, 0x79e0, 0xaf0e, 0x1165, 0xc2cd, 0x0, 0x1);
        gbc.writeMem(0x98b6, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8754, gbc.sp());
        EXPECT(0x98b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x98b6));
        // B3 017D
        gbc.setState(0xb0ac, 0x4160, 0x3dd0, 0x617d, 0x742b, 0xd6a8, 0x1, 0x1);
        gbc.writeMem(0xb0ac, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0xb0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb0ac));
        // B3 017E
        gbc.setState(0xab4a, 0x89ad, 0x8f30, 0xf29a, 0xd5e1, 0x3966, 0x0, 0x1);
        gbc.writeMem(0xab4a, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x89ad, gbc.sp());
        EXPECT(0xab4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab4a));
        // B3 017F
        gbc.setState(0x409a, 0xed75, 0xbda0, 0x462f, 0xbe04, 0xb17a, 0x1, 0x1);
        gbc.writeMem(0x409a, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xed75, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0180
        gbc.setState(0x1a0a, 0x2163, 0x5ba0, 0xa884, 0x3cf, 0x40a0, 0x0, 0x0);
        gbc.writeMem(0x1a0a, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0x1a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0181
        gbc.setState(0xa57b, 0xfa94, 0x7b30, 0x4213, 0x621d, 0x76e2, 0x0, 0x0);
        gbc.writeMem(0xa57b, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0xa57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa57b));
        // B3 0182
        gbc.setState(0xe4de, 0x244f, 0x3800, 0x8753, 0xa5ea, 0x1896, 0x0, 0x0);
        gbc.writeMem(0xe4de, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe4de));
        // B3 0183
        gbc.setState(0x20ec, 0xbb09, 0xe570, 0x7017, 0x4fc9, 0xba61, 0x0, 0x0);
        gbc.writeMem(0x20ec, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0184
        gbc.setState(0xd66b, 0x7dd2, 0x760, 0x3973, 0xf176, 0xafa7, 0x1, 0x0);
        gbc.writeMem(0xd66b, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7dd2, gbc.sp());
        EXPECT(0xd66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd66b));
        // B3 0185
        gbc.setState(0x263d, 0x8d51, 0x62a0, 0x9082, 0x66df, 0xc0cd, 0x1, 0x1);
        gbc.writeMem(0x263d, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0187
        gbc.setState(0xab9d, 0x5f68, 0xe7e0, 0xccd3, 0xdc23, 0x704c, 0x1, 0x1);
        gbc.writeMem(0xab9d, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5f68, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab9d));
        // B3 0188
        gbc.setState(0x9e3a, 0xd173, 0x9b50, 0xf49c, 0x68ee, 0xc5aa, 0x1, 0x1);
        gbc.writeMem(0x9e3a, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd173, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9e3a));
        // B3 0189
        gbc.setState(0xe1e6, 0xe0ac, 0xc360, 0x1324, 0xc4d2, 0x6e26, 0x0, 0x1);
        gbc.writeMem(0xe1e6, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe0ac, gbc.sp());
        EXPECT(0xe1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe1e6));
        // B3 018A
        gbc.setState(0x9cfa, 0x8f2e, 0x3530, 0x5dc4, 0x6666, 0xbff5, 0x0, 0x1);
        gbc.writeMem(0x9cfa, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8f2e, gbc.sp());
        EXPECT(0x9cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9cfa));
        // B3 018B
        gbc.setState(0xe60c, 0xbb51, 0x1500, 0xad87, 0x7df4, 0x5e01, 0x1, 0x0);
        gbc.writeMem(0xe60c, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbb51, gbc.sp());
        EXPECT(0xe60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe60c));
        // B3 018C
        gbc.setState(0x4314, 0x36eb, 0x2ac0, 0x58ec, 0xfdae, 0x9086, 0x1, 0x0);
        gbc.writeMem(0x4314, { 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36eb, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 018D
        gbc.setState(0xbb37, 0xe03c, 0x3fa0, 0xba80, 0x36b, 0x3a40, 0x1, 0x0);
        gbc.writeMem(0xbb37, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe03c, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbb37));
        // B3 018E
        gbc.setState(0x54a0, 0x1c93, 0xbae0, 0x7b8f, 0xefb7, 0x673, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1c93, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 018F
        gbc.setState(0xa9e7, 0xb916, 0x8d10, 0xdc8a, 0xa35f, 0x1835, 0x0, 0x1);
        gbc.writeMem(0xa9e7, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb916, gbc.sp());
        EXPECT(0xa9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa9e7));
        // B3 0190
        gbc.setState(0x9bf8, 0x91e5, 0xf7d0, 0x8015, 0x453b, 0xf479, 0x1, 0x1);
        gbc.writeMem(0x9bf8, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x91e5, gbc.sp());
        EXPECT(0x9bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9bf8));
        // B3 0191
        gbc.setState(0x1d77, 0xf4da, 0x4120, 0x2b04, 0x7013, 0xee81, 0x1, 0x1);
        gbc.writeMem(0x1d77, { 0xb3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0x1d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0192
        gbc.setState(0x2ead, 0xc181, 0xe010, 0xeb5e, 0x19d6, 0xb463, 0x1, 0x0);
        gbc.writeMem(0x2ead, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0193
        gbc.setState(0x7b75, 0x38c, 0x18d0, 0xea9c, 0xd90f, 0x3904, 0x1, 0x1);
        gbc.writeMem(0x7b75, { 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x38c, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0194
        gbc.setState(0xdad3, 0x2258, 0x190, 0x684a, 0xacdc, 0x2830, 0x1, 0x1);
        gbc.writeMem(0xdad3, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2258, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdad3));
        // B3 0195
        gbc.setState(0xc31d, 0xa359, 0x5600, 0xea57, 0x4ec7, 0xe618, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc31d));
        // B3 0196
        gbc.setState(0x32db, 0x5b00, 0x5070, 0x9ce, 0x3778, 0x2345, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0197
        gbc.setState(0x874f, 0x4460, 0xc2d0, 0x2c3b, 0x1816, 0xcadf, 0x1, 0x0);
        gbc.writeMem(0x874f, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x874f));
        // B3 0199
        gbc.setState(0x1bda, 0xcb6e, 0x3e40, 0xa674, 0xccb7, 0x1e37, 0x0, 0x0);
        gbc.writeMem(0x1bda, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0x1bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 019A
        gbc.setState(0xc025, 0xc364, 0x28e0, 0x41fc, 0x43ad, 0x42c9, 0x0, 0x1);
        gbc.writeMem(0xc025, { 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0xc026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc025));
        // B3 019B
        gbc.setState(0x6a9c, 0x8f81, 0xda30, 0xb01a, 0x474d, 0xf905, 0x1, 0x0);
        gbc.writeMem(0x6a9c, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8f81, gbc.sp());
        EXPECT(0x6a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 019C
        gbc.setState(0xd451, 0x3d13, 0xcbe0, 0x9603, 0x6265, 0x1698, 0x0, 0x1);
        gbc.writeMem(0xd451, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3d13, gbc.sp());
        EXPECT(0xd452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd451));
        // B3 019D
        gbc.setState(0xc3e5, 0x5441, 0x9290, 0x34dd, 0x3da0, 0x738a, 0x0, 0x0);
        gbc.writeMem(0xc3e5, { 0xb3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5441, gbc.sp());
        EXPECT(0xc3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc3e5));
        // B3 019E
        gbc.setState(0x4879, 0x34d3, 0xee0, 0x2d69, 0x7551, 0xcc7e, 0x0, 0x0);
        gbc.writeMem(0x4879, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x487a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 019F
        gbc.setState(0xaafa, 0x2922, 0x7fa0, 0x6d24, 0x1ddc, 0x6e96, 0x1, 0x0);
        gbc.writeMem(0xaafa, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2922, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaafa));
        // B3 01A0
        gbc.setState(0xd7dd, 0x205a, 0xcb30, 0xd8ce, 0x3e7a, 0xbac, 0x1, 0x0);
        gbc.writeMem(0xd7dd, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd7dd));
        // B3 01A1
        gbc.setState(0x1e2, 0x767f, 0xef60, 0xe6a4, 0x6910, 0x9bff, 0x1, 0x0);
        gbc.writeMem(0x1e2, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x767f, gbc.sp());
        EXPECT(0x1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01A2
        gbc.setState(0xcd5e, 0xaa5b, 0xda10, 0xef17, 0x95c9, 0xec5a, 0x1, 0x0);
        gbc.writeMem(0xcd5e, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaa5b, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcd5e));
        // B3 01A3
        gbc.setState(0x6aaf, 0x5895, 0x2ee0, 0x2578, 0x8b10, 0x109a, 0x0, 0x0);
        gbc.writeMem(0x6aaf, { 0xb3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5895, gbc.sp());
        EXPECT(0x6ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01A4
        gbc.setState(0xb7a5, 0x509c, 0x1030, 0x36e3, 0xf13d, 0xdaa4, 0x1, 0x1);
        gbc.writeMem(0xb7a5, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x509c, gbc.sp());
        EXPECT(0xb7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb7a5));
        // B3 01A5
        gbc.setState(0x1dfc, 0x89cb, 0xc150, 0xa995, 0xc19e, 0xa3f, 0x0, 0x0);
        gbc.writeMem(0x1dfc, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x89cb, gbc.sp());
        EXPECT(0x1dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01A6
        gbc.setState(0xecb3, 0xd251, 0xad30, 0x94cf, 0x25f4, 0xf6b4, 0x0, 0x1);
        gbc.writeMem(0xecb3, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd251, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xecb3));
        // B3 01A8
        gbc.setState(0x7e5a, 0x9b56, 0x7ec0, 0x6623, 0xe7dd, 0xafb2, 0x1, 0x1);
        gbc.writeMem(0x7e5a, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9b56, gbc.sp());
        EXPECT(0x7e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01A9
        gbc.setState(0xb33, 0x5232, 0x8640, 0xbbfa, 0xcfd2, 0x7f23, 0x0, 0x1);
        gbc.writeMem(0xb33, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0xb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01AA
        gbc.setState(0xe45, 0xa92e, 0x1590, 0x9dcd, 0x5d42, 0x639e, 0x1, 0x1);
        gbc.writeMem(0xe45, { 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01AB
        gbc.setState(0x2c57, 0xd9fa, 0x3a20, 0xae1e, 0x645e, 0xe125, 0x0, 0x1);
        gbc.writeMem(0x2c57, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd9fa, gbc.sp());
        EXPECT(0x2c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01AC
        gbc.setState(0xb6a3, 0xefab, 0xc450, 0x838f, 0xbcb6, 0x46c8, 0x1, 0x0);
        gbc.writeMem(0xb6a3, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb6a3));
        // B3 01AD
        gbc.setState(0xd718, 0x3f45, 0x4870, 0x9af7, 0xa70, 0xf8e, 0x0, 0x0);
        gbc.writeMem(0xd718, { 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3f45, gbc.sp());
        EXPECT(0xd719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd718));
        // B3 01AE
        gbc.setState(0xbe0c, 0xc232, 0xf4c0, 0xde62, 0x158b, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0xbe0c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc232, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbe0c));
        // B3 01AF
        gbc.setState(0x10ef, 0xe2dc, 0x9860, 0xb528, 0x57fe, 0xebc4, 0x0, 0x0);
        gbc.writeMem(0x10ef, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0x10f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B0
        gbc.setState(0xe31c, 0x42a8, 0x4d70, 0x5bf2, 0x8115, 0xcb8a, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0xb3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0xe31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe31c));
        // B3 01B1
        gbc.setState(0x82, 0x191a, 0xa6d0, 0x7216, 0xf791, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x82, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x191a, gbc.sp());
        EXPECT(0x83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B2
        gbc.setState(0x9953, 0x12e5, 0x7e30, 0xd8d8, 0x4b3c, 0xf7bf, 0x1, 0x1);
        gbc.writeMem(0x9953, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9953));
        // B3 01B3
        gbc.setState(0xe5ae, 0x48f2, 0x1180, 0xddfb, 0x62af, 0xc61, 0x1, 0x1);
        gbc.writeMem(0xe5ae, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x48f2, gbc.sp());
        EXPECT(0xe5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe5ae));
        // B3 01B4
        gbc.setState(0x75eb, 0x346b, 0x8a10, 0xa298, 0xe846, 0xdf75, 0x1, 0x1);
        gbc.writeMem(0x75eb, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B5
        gbc.setState(0xd64, 0x84f4, 0x35d0, 0x179f, 0x83ff, 0xc859, 0x1, 0x1);
        gbc.writeMem(0xd64, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x84f4, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B6
        gbc.setState(0x719b, 0xac27, 0x2580, 0xd71b, 0x6fb7, 0x6d5c, 0x1, 0x0);
        gbc.writeMem(0x719b, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0x719c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B7
        gbc.setState(0x1131, 0x3085, 0xee10, 0xf408, 0x457f, 0x42c1, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0x1132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01B8
        gbc.setState(0xc6c7, 0x2957, 0xdf20, 0x312c, 0x2c79, 0x775f, 0x1, 0x1);
        gbc.writeMem(0xc6c7, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0xc6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc6c7));
        // B3 01B9
        gbc.setState(0x6614, 0x9ccd, 0x73e0, 0xb3c3, 0x8308, 0xe022, 0x0, 0x0);
        gbc.writeMem(0x6614, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x6615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BA
        gbc.setState(0x19c, 0xa9b1, 0x27c0, 0x3474, 0xf8a5, 0xb5ac, 0x1, 0x1);
        gbc.writeMem(0x19c, { 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa9b1, gbc.sp());
        EXPECT(0x19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BB
        gbc.setState(0x2a4a, 0x9769, 0xbc10, 0xf81a, 0x68b0, 0xc18d, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9769, gbc.sp());
        EXPECT(0x2a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BC
        gbc.setState(0x60ee, 0xb0c2, 0x6a20, 0x79f7, 0x8d9c, 0x6308, 0x1, 0x0);
        gbc.writeMem(0x60ee, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb0c2, gbc.sp());
        EXPECT(0x60ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BD
        gbc.setState(0x1cd5, 0x6689, 0x180, 0xa188, 0xba83, 0x3136, 0x0, 0x1);
        gbc.writeMem(0x1cd5, { 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0x1cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BE
        gbc.setState(0x55a, 0x8df5, 0x6560, 0x4920, 0xe443, 0xe3a6, 0x1, 0x1);
        gbc.writeMem(0x55a, { 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8df5, gbc.sp());
        EXPECT(0x55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01BF
        gbc.setState(0x22e9, 0x873a, 0x8040, 0x8ba8, 0xa09e, 0x3380, 0x0, 0x0);
        gbc.writeMem(0x22e9, { 0xb3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x873a, gbc.sp());
        EXPECT(0x22ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C0
        gbc.setState(0x50b7, 0xbcaf, 0xd210, 0x4a3, 0x4971, 0x5c94, 0x1, 0x1);
        gbc.writeMem(0x50b7, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbcaf, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C1
        gbc.setState(0x5d81, 0xc22b, 0x48b0, 0x9cff, 0x9863, 0x2ea8, 0x0, 0x0);
        gbc.writeMem(0x5d81, { 0xb3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C2
        gbc.setState(0x17fd, 0xe998, 0x6810, 0x1cdd, 0x6ddf, 0x6e5b, 0x0, 0x1);
        gbc.writeMem(0x17fd, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe998, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C3
        gbc.setState(0x372, 0x30de, 0xca50, 0xb919, 0xd2ec, 0x6985, 0x0, 0x1);
        gbc.writeMem(0x372, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C4
        gbc.setState(0x2a03, 0x3da8, 0x94a0, 0x330e, 0x7dc5, 0x532d, 0x0, 0x0);
        gbc.writeMem(0x2a03, { 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3da8, gbc.sp());
        EXPECT(0x2a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C5
        gbc.setState(0x184c, 0x8c8e, 0xeff0, 0x7712, 0xef8a, 0xfae4, 0x1, 0x0);
        gbc.writeMem(0x184c, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0x184d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C6
        gbc.setState(0xddd, 0xc6d8, 0xd4f0, 0x645d, 0x8514, 0xc2e0, 0x1, 0x0);
        gbc.writeMem(0xddd, { 0xb3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc6d8, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01C7
        gbc.setState(0xe291, 0x7c6c, 0x1200, 0xf5a8, 0x31c3, 0xe431, 0x1, 0x1);
        gbc.writeMem(0xe291, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c6c, gbc.sp());
        EXPECT(0xe292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe291));
        // B3 01C9
        gbc.setState(0x695b, 0xb926, 0xa810, 0x46ff, 0x292d, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0x695b, { 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb926, gbc.sp());
        EXPECT(0x695c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01CA
        gbc.setState(0xbca4, 0x9e1f, 0x30a0, 0xa096, 0xbe27, 0xba7a, 0x1, 0x0);
        gbc.writeMem(0xbca4, { 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9e1f, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbca4));
        // B3 01CB
        gbc.setState(0x4fde, 0x5584, 0xd480, 0x39f3, 0xa4d1, 0xa6bd, 0x1, 0x1);
        gbc.writeMem(0x4fde, { 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01CC
        gbc.setState(0x5e67, 0x85a9, 0x4fa0, 0xaf09, 0x413a, 0xb789, 0x1, 0x0);
        gbc.writeMem(0x5e67, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0x5e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01CD
        gbc.setState(0x7e17, 0x6a01, 0xb1a0, 0xf984, 0x4d2d, 0x4ebd, 0x1, 0x0);
        gbc.writeMem(0x7e17, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6a01, gbc.sp());
        EXPECT(0x7e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01CE
        gbc.setState(0xe150, 0xca23, 0x30, 0xb846, 0x2009, 0xcbad, 0x0, 0x0);
        gbc.writeMem(0xe150, { 0xb3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0xe151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe150));
        // B3 01CF
        gbc.setState(0x25d0, 0xf6cd, 0xd370, 0x3453, 0x6bd, 0xcd95, 0x1, 0x1);
        gbc.writeMem(0x25d0, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01D0
        gbc.setState(0x20b3, 0x360e, 0xb710, 0x55f9, 0x5836, 0x4255, 0x0, 0x0);
        gbc.writeMem(0x20b3, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0x20b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01D3
        gbc.setState(0x30a5, 0x24a0, 0x5410, 0x7dca, 0x47f1, 0xdef4, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01D4
        gbc.setState(0x9696, 0xc07, 0x2160, 0x4d9, 0x93f, 0xf2f7, 0x0, 0x1);
        gbc.writeMem(0x9696, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc07, gbc.sp());
        EXPECT(0x9697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9696));
        // B3 01D5
        gbc.setState(0xc4d2, 0xe88c, 0xc0f0, 0x7d55, 0x6091, 0xb8e5, 0x0, 0x1);
        gbc.writeMem(0xc4d2, { 0xb3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe88c, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc4d2));
        // B3 01D6
        gbc.setState(0x190d, 0xa09e, 0x2ff0, 0x2b3b, 0xdd91, 0x93d1, 0x0, 0x0);
        gbc.writeMem(0x190d, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa09e, gbc.sp());
        EXPECT(0x190e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01D7
        gbc.setState(0xce31, 0xdde5, 0xda30, 0xcbf6, 0xcf4e, 0x44f2, 0x1, 0x1);
        gbc.writeMem(0xce31, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0xce32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xce31));
        // B3 01D8
        gbc.setState(0xbf22, 0xf641, 0x88d0, 0xea7f, 0xff1c, 0x46fe, 0x0, 0x0);
        gbc.writeMem(0xbf22, { 0xb3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf641, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbf22));
        // B3 01D9
        gbc.setState(0xd7c5, 0x1321, 0x8120, 0x676e, 0xe1c0, 0xe84b, 0x1, 0x0);
        gbc.writeMem(0xd7c5, { 0xb3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd7c5));
        // B3 01DA
        gbc.setState(0x2907, 0x17e8, 0xd600, 0x851c, 0x34ee, 0x8ad2, 0x1, 0x1);
        gbc.writeMem(0x2907, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01DB
        gbc.setState(0x93f, 0x1964, 0x1bd0, 0xb4a1, 0xec5a, 0xa9bf, 0x0, 0x0);
        gbc.writeMem(0x93f, { 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1964, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01DC
        gbc.setState(0x71ec, 0xd016, 0xf8a0, 0xe51f, 0x6e02, 0x6aef, 0x1, 0x1);
        gbc.writeMem(0x71ec, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd016, gbc.sp());
        EXPECT(0x71ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01DD
        gbc.setState(0x595, 0xd08e, 0x9780, 0x5fef, 0x9bfc, 0xdb76, 0x1, 0x1);
        gbc.writeMem(0x595, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0x596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01DE
        gbc.setState(0x4ff, 0xe715, 0xd590, 0x18d, 0x845, 0xb5f4, 0x1, 0x0);
        gbc.writeMem(0x4ff, { 0xb3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01DF
        gbc.setState(0x840d, 0xbd67, 0x470, 0x8e62, 0x62db, 0x8476, 0x1, 0x0);
        gbc.writeMem(0x840d, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbd67, gbc.sp());
        EXPECT(0x840e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x840d));
        // B3 01E0
        gbc.setState(0x6221, 0xec23, 0xcb90, 0x9363, 0xa3e7, 0x2fb2, 0x1, 0x0);
        gbc.writeMem(0x6221, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xec23, gbc.sp());
        EXPECT(0x6222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01E1
        gbc.setState(0x9a4c, 0xfb9, 0xfba0, 0x1d64, 0xd137, 0xa0df, 0x1, 0x1);
        gbc.writeMem(0x9a4c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfb9, gbc.sp());
        EXPECT(0x9a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9a4c));
        // B3 01E2
        gbc.setState(0x7f0f, 0x5fee, 0x5800, 0xea4c, 0xcf04, 0x771a, 0x1, 0x1);
        gbc.writeMem(0x7f0f, { 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5fee, gbc.sp());
        EXPECT(0x7f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01E3
        gbc.setState(0xa8b5, 0xf126, 0xfd70, 0x1feb, 0x5675, 0x316, 0x0, 0x1);
        gbc.writeMem(0xa8b5, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf126, gbc.sp());
        EXPECT(0xa8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa8b5));
        // B3 01E4
        gbc.setState(0x8939, 0xf4c, 0x9f30, 0x7e9a, 0x190, 0xfe56, 0x1, 0x1);
        gbc.writeMem(0x8939, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0x893a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8939));
        // B3 01E5
        gbc.setState(0x2358, 0x4f4, 0x22b0, 0x9a60, 0x8cd3, 0xf6de, 0x0, 0x0);
        gbc.writeMem(0x2358, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4f4, gbc.sp());
        EXPECT(0x2359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01E6
        gbc.setState(0x69a5, 0x3a26, 0x6b80, 0xd68d, 0xbbe8, 0x7e8d, 0x0, 0x0);
        gbc.writeMem(0x69a5, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3a26, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01E7
        gbc.setState(0xd61d, 0x374b, 0x6580, 0x1426, 0x17a, 0xa05b, 0x1, 0x0);
        gbc.writeMem(0xd61d, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x374b, gbc.sp());
        EXPECT(0xd61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd61d));
        // B3 01E8
        gbc.setState(0x9653, 0x688, 0xff90, 0x55ad, 0x8e79, 0xfb2c, 0x0, 0x0);
        gbc.writeMem(0x9653, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x688, gbc.sp());
        EXPECT(0x9654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9653));
        // B3 01E9
        gbc.setState(0xb504, 0x3755, 0x7830, 0x1611, 0xd1dc, 0xabfb, 0x1, 0x1);
        gbc.writeMem(0xb504, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3755, gbc.sp());
        EXPECT(0xb505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb504));
        // B3 01EA
        gbc.setState(0x84b, 0x4a38, 0xc90, 0x1, 0x74dc, 0x1b2e, 0x1, 0x0);
        gbc.writeMem(0x84b, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0x84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01EB
        gbc.setState(0xa8da, 0xda51, 0x8a30, 0x8a28, 0x601c, 0x934a, 0x0, 0x1);
        gbc.writeMem(0xa8da, { 0xb3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xda51, gbc.sp());
        EXPECT(0xa8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa8da));
        // B3 01EC
        gbc.setState(0x5a85, 0xaa63, 0x39d0, 0x3d60, 0x4fba, 0xdba8, 0x0, 0x0);
        gbc.writeMem(0x5a85, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaa63, gbc.sp());
        EXPECT(0x5a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01ED
        gbc.setState(0x3d69, 0xc01f, 0x6c20, 0xf8eb, 0x2902, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0x3d69, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc01f, gbc.sp());
        EXPECT(0x3d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01EF
        gbc.setState(0x3b18, 0x2bce, 0x15e0, 0x84c4, 0x9a65, 0x6a8, 0x1, 0x1);
        gbc.writeMem(0x3b18, { 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01F0
        gbc.setState(0x2ca9, 0x6e3b, 0x9780, 0x1cb1, 0x94ad, 0x2c09, 0x1, 0x1);
        gbc.writeMem(0x2ca9, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01F1
        gbc.setState(0x186e, 0x1d2, 0x69b0, 0xb57b, 0xbfe0, 0xd9aa, 0x1, 0x1);
        gbc.writeMem(0x186e, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1d2, gbc.sp());
        EXPECT(0x186f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01F2
        gbc.setState(0x8df1, 0xa8af, 0xa480, 0x79e6, 0x69a, 0x5702, 0x0, 0x0);
        gbc.writeMem(0x8df1, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa8af, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8df1));
        // B3 01F3
        gbc.setState(0x7e0e, 0x674b, 0xfa70, 0x4951, 0xcd25, 0x4d84, 0x0, 0x0);
        gbc.writeMem(0x7e0e, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0x7e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01F4
        gbc.setState(0x72c9, 0xaff6, 0xfea0, 0x4cea, 0xd1dc, 0xaa0f, 0x0, 0x0);
        gbc.writeMem(0x72c9, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01F5
        gbc.setState(0xbc6f, 0x79a6, 0x9e10, 0xde3c, 0x7d78, 0x695c, 0x1, 0x1);
        gbc.writeMem(0xbc6f, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0xbc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbc6f));
        // B3 01F7
        gbc.setState(0x831e, 0xe705, 0xb580, 0x913a, 0x4268, 0xa7f7, 0x0, 0x1);
        gbc.writeMem(0x831e, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x831f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x831e));
        // B3 01F9
        gbc.setState(0x1472, 0x936f, 0xc3b0, 0x3299, 0xc0fb, 0x5312, 0x0, 0x0);
        gbc.writeMem(0x1472, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x936f, gbc.sp());
        EXPECT(0x1473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01FA
        gbc.setState(0x826b, 0x1b7b, 0xeb50, 0x2c0, 0x59c7, 0xe037, 0x0, 0x0);
        gbc.writeMem(0x826b, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0x826c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x826b));
        // B3 01FB
        gbc.setState(0x5f57, 0x1dd6, 0x76a0, 0x1999, 0xcd54, 0xec8d, 0x0, 0x0);
        gbc.writeMem(0x5f57, { 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1dd6, gbc.sp());
        EXPECT(0x5f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01FD
        gbc.setState(0x8dcd, 0x8452, 0xb2e0, 0xa011, 0x75fa, 0x2bfa, 0x1, 0x0);
        gbc.writeMem(0x8dcd, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8dcd));
        // B3 01FE
        gbc.setState(0x67d, 0x42c, 0x3a40, 0xa5c3, 0x4d9d, 0x5c59, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 01FF
        gbc.setState(0x3d7e, 0x58da, 0x89c0, 0x6e19, 0x6479, 0xbdd8, 0x1, 0x1);
        gbc.writeMem(0x3d7e, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x58da, gbc.sp());
        EXPECT(0x3d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0200
        gbc.setState(0xb65c, 0xe10d, 0x7ac0, 0x4086, 0xbedd, 0xf03d, 0x0, 0x0);
        gbc.writeMem(0xb65c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb65c));
        // B3 0201
        gbc.setState(0x8f62, 0xe722, 0xd1b0, 0xb12a, 0xd67e, 0x78cb, 0x1, 0x1);
        gbc.writeMem(0x8f62, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0x8f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8f62));
        // B3 0202
        gbc.setState(0x827d, 0xb6a0, 0x6b90, 0x2cd7, 0xe55f, 0xafa, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x827d));
        // B3 0203
        gbc.setState(0xd75a, 0x18a0, 0x5f10, 0x49e0, 0x2db5, 0xfdfa, 0x0, 0x1);
        gbc.writeMem(0xd75a, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd75a));
        // B3 0204
        gbc.setState(0xea3, 0xd5d7, 0xa090, 0xd11f, 0xf16d, 0x4bc5, 0x1, 0x1);
        gbc.writeMem(0xea3, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd5d7, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0205
        gbc.setState(0xd1b0, 0xb3c1, 0x2b50, 0xbfc3, 0x96b7, 0xe053, 0x0, 0x0);
        gbc.writeMem(0xd1b0, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd1b0));
        // B3 0206
        gbc.setState(0x4a3f, 0x5404, 0xd8a0, 0x128c, 0xe76e, 0xf859, 0x0, 0x0);
        gbc.writeMem(0x4a3f, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5404, gbc.sp());
        EXPECT(0x4a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0207
        gbc.setState(0x83b0, 0xb85, 0x3fe0, 0x595a, 0x991c, 0xab14, 0x0, 0x0);
        gbc.writeMem(0x83b0, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb85, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x83b0));
        // B3 0208
        gbc.setState(0xa66, 0x442b, 0xf3c0, 0xc61a, 0x4467, 0x42f8, 0x1, 0x1);
        gbc.writeMem(0xa66, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x442b, gbc.sp());
        EXPECT(0xa67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0209
        gbc.setState(0xd698, 0xcada, 0xc570, 0x6aaf, 0x802a, 0xe8a, 0x0, 0x1);
        gbc.writeMem(0xd698, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcada, gbc.sp());
        EXPECT(0xd699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd698));
        // B3 020A
        gbc.setState(0xdaee, 0x2659, 0x5d40, 0xe992, 0x3334, 0x77ea, 0x1, 0x1);
        gbc.writeMem(0xdaee, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xdaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdaee));
        // B3 020B
        gbc.setState(0xe3d5, 0x80ac, 0xd280, 0x7eee, 0x79e3, 0xfde2, 0x1, 0x0);
        gbc.writeMem(0xe3d5, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x80ac, gbc.sp());
        EXPECT(0xe3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe3d5));
        // B3 020C
        gbc.setState(0x3c7d, 0x8322, 0x8d70, 0xe6a5, 0xe8c, 0x585d, 0x0, 0x0);
        gbc.writeMem(0x3c7d, { 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0x3c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 020D
        gbc.setState(0x52a4, 0xe65d, 0x2170, 0xcbba, 0xc924, 0xd7bb, 0x0, 0x0);
        gbc.writeMem(0x52a4, { 0xb3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 020E
        gbc.setState(0xf9, 0xf80, 0x7df0, 0xb14d, 0x7653, 0xd578, 0x0, 0x1);
        gbc.writeMem(0xf9, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 020F
        gbc.setState(0x1323, 0x25a3, 0x8900, 0x1073, 0x7de8, 0x28ac, 0x1, 0x0);
        gbc.writeMem(0x1323, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0210
        gbc.setState(0x397, 0xfc6a, 0x23d0, 0x1261, 0xa073, 0x25c3, 0x0, 0x0);
        gbc.writeMem(0x397, { 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0x398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0212
        gbc.setState(0x863d, 0x44d7, 0x3140, 0x9fb8, 0xe268, 0xe3dd, 0x1, 0x0);
        gbc.writeMem(0x863d, { 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x44d7, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x863d));
        // B3 0213
        gbc.setState(0x42f9, 0xf18b, 0xe520, 0x75c1, 0x49b, 0x3c7f, 0x1, 0x0);
        gbc.writeMem(0x42f9, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0x42fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0214
        gbc.setState(0xd784, 0x9417, 0xeb10, 0x48a, 0x974b, 0x7f05, 0x1, 0x0);
        gbc.writeMem(0xd784, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9417, gbc.sp());
        EXPECT(0xd785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd784));
        // B3 0215
        gbc.setState(0x306a, 0x8298, 0x30a0, 0xa2a6, 0xd69e, 0xb761, 0x1, 0x1);
        gbc.writeMem(0x306a, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8298, gbc.sp());
        EXPECT(0x306b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0216
        gbc.setState(0xeaff, 0x5d8f, 0x8890, 0x653, 0xbffd, 0x9c6d, 0x1, 0x1);
        gbc.writeMem(0xeaff, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeaff));
        // B3 0217
        gbc.setState(0xcb61, 0xc84f, 0xcf00, 0xb864, 0x9619, 0x8979, 0x1, 0x0);
        gbc.writeMem(0xcb61, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcb61));
        // B3 0218
        gbc.setState(0xe903, 0x35bc, 0xdbd0, 0x7b9, 0x1cfc, 0x5489, 0x0, 0x0);
        gbc.writeMem(0xe903, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe903));
        // B3 0219
        gbc.setState(0x70f4, 0xf6f2, 0xbce0, 0x890a, 0xe5a5, 0xb17c, 0x0, 0x0);
        gbc.writeMem(0x70f4, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf6f2, gbc.sp());
        EXPECT(0x70f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 021A
        gbc.setState(0x99d5, 0x96ac, 0x4c30, 0xdf7e, 0xeda2, 0x9aed, 0x1, 0x1);
        gbc.writeMem(0x99d5, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x96ac, gbc.sp());
        EXPECT(0x99d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x99d5));
        // B3 021B
        gbc.setState(0xd0, 0x6b9e, 0xbde0, 0xeef7, 0x7ca0, 0xb1c5, 0x1, 0x1);
        gbc.writeMem(0xd0, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6b9e, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 021C
        gbc.setState(0x8050, 0x6049, 0x2db0, 0x2f48, 0x5bfd, 0x8eb6, 0x1, 0x1);
        gbc.writeMem(0x8050, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6049, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8050));
        // B3 021D
        gbc.setState(0xe560, 0x3bfc, 0x4f40, 0x8f0a, 0xcbe1, 0x7056, 0x1, 0x1);
        gbc.writeMem(0xe560, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3bfc, gbc.sp());
        EXPECT(0xe561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe560));
        // B3 021F
        gbc.setState(0x749b, 0xbd2c, 0xa180, 0x9210, 0x1326, 0xb6d6, 0x0, 0x0);
        gbc.writeMem(0x749b, { 0xb3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0x749c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0220
        gbc.setState(0x4f65, 0xa3a3, 0x1ac0, 0x3109, 0x6608, 0x2f32, 0x0, 0x1);
        gbc.writeMem(0x4f65, { 0xb3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa3a3, gbc.sp());
        EXPECT(0x4f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0221
        gbc.setState(0x6a0, 0x767, 0x7300, 0x5d9f, 0x8cf8, 0xd095, 0x1, 0x0);
        gbc.writeMem(0x6a0, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0x6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0222
        gbc.setState(0x1bfc, 0xbd9d, 0x91a0, 0x7db7, 0x9f15, 0xd6e7, 0x1, 0x0);
        gbc.writeMem(0x1bfc, { 0xb3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbd9d, gbc.sp());
        EXPECT(0x1bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0223
        gbc.setState(0x6b2, 0xda10, 0x4630, 0x7f26, 0x53f0, 0xc92f, 0x1, 0x1);
        gbc.writeMem(0x6b2, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0x6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0224
        gbc.setState(0xc1b9, 0x69ce, 0xdc30, 0x7b2b, 0xb554, 0x63cf, 0x0, 0x0);
        gbc.writeMem(0xc1b9, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc1b9));
        // B3 0225
        gbc.setState(0x2f08, 0xd77e, 0x1900, 0x97, 0x6e3d, 0x513c, 0x1, 0x0);
        gbc.writeMem(0x2f08, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd77e, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0226
        gbc.setState(0x930d, 0xbf0f, 0xefe0, 0xec18, 0x8925, 0x8c19, 0x1, 0x1);
        gbc.writeMem(0x930d, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0x930e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x930d));
        // B3 0227
        gbc.setState(0x27ef, 0x7606, 0x8ef0, 0x5e7d, 0x32ff, 0x4f32, 0x0, 0x0);
        gbc.writeMem(0x27ef, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0228
        gbc.setState(0xdea, 0x2f19, 0x830, 0x4d25, 0xbce9, 0xa9d5, 0x0, 0x1);
        gbc.writeMem(0xdea, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0229
        gbc.setState(0x1c1f, 0xd70a, 0x4a10, 0xf6e, 0x947c, 0xc684, 0x1, 0x0);
        gbc.writeMem(0x1c1f, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0x1c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 022A
        gbc.setState(0x5879, 0xeacc, 0x9c30, 0x5b0e, 0xaab1, 0xcdf2, 0x1, 0x0);
        gbc.writeMem(0x5879, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xeacc, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 022B
        gbc.setState(0x5f6f, 0x2871, 0xe830, 0x477f, 0x6f78, 0x94bb, 0x0, 0x0);
        gbc.writeMem(0x5f6f, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0x5f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 022C
        gbc.setState(0xcdf6, 0x9157, 0x8240, 0xdd5, 0x436e, 0xb1c9, 0x0, 0x0);
        gbc.writeMem(0xcdf6, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcdf6));
        // B3 022D
        gbc.setState(0xa592, 0x2c6f, 0xe90, 0x57e3, 0x2500, 0xdbbc, 0x1, 0x0);
        gbc.writeMem(0xa592, { 0xb3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa592));
        // B3 022E
        gbc.setState(0xe5d9, 0x846b, 0xa8a0, 0x5f1b, 0x1bc4, 0x81e6, 0x0, 0x1);
        gbc.writeMem(0xe5d9, { 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x846b, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe5d9));
        // B3 022F
        gbc.setState(0x6dac, 0xb070, 0x8970, 0xf51d, 0x1768, 0xbcb9, 0x1, 0x0);
        gbc.writeMem(0x6dac, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb070, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0230
        gbc.setState(0x7272, 0x1f46, 0x8c70, 0xdfac, 0x6f94, 0xdf21, 0x1, 0x1);
        gbc.writeMem(0x7272, { 0xb3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1f46, gbc.sp());
        EXPECT(0x7273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0231
        gbc.setState(0x9261, 0x258c, 0x9340, 0xb6f8, 0xdf96, 0x7687, 0x0, 0x0);
        gbc.writeMem(0x9261, { 0xb3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x258c, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9261));
        // B3 0232
        gbc.setState(0x56fc, 0x5e44, 0x2a40, 0x71a0, 0x69d3, 0x5423, 0x1, 0x0);
        gbc.writeMem(0x56fc, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0x56fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0233
        gbc.setState(0x667a, 0xc817, 0x1aa0, 0x1acd, 0x4559, 0x7b78, 0x1, 0x1);
        gbc.writeMem(0x667a, { 0xb3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc817, gbc.sp());
        EXPECT(0x667b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0234
        gbc.setState(0x7e4e, 0xb8ab, 0xf590, 0x23bd, 0x1955, 0x58a8, 0x1, 0x0);
        gbc.writeMem(0x7e4e, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb8ab, gbc.sp());
        EXPECT(0x7e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0235
        gbc.setState(0x8a45, 0x2c38, 0x2850, 0xc83e, 0xbcd4, 0x2f77, 0x0, 0x0);
        gbc.writeMem(0x8a45, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8a45));
        // B3 0237
        gbc.setState(0x8ddf, 0xfdd8, 0xaea0, 0x527b, 0xe90b, 0x3aff, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfdd8, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8ddf));
        // B3 0238
        gbc.setState(0xbd50, 0xb18e, 0xd510, 0x3f42, 0x2461, 0x6a08, 0x1, 0x0);
        gbc.writeMem(0xbd50, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb18e, gbc.sp());
        EXPECT(0xbd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbd50));
        // B3 0239
        gbc.setState(0x14c5, 0xe5c7, 0xdce0, 0x8eef, 0x4c71, 0xdebc, 0x1, 0x1);
        gbc.writeMem(0x14c5, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 023A
        gbc.setState(0x652e, 0x59fa, 0x4470, 0x5495, 0x59ec, 0x1cc4, 0x0, 0x1);
        gbc.writeMem(0x652e, { 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x59fa, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 023B
        gbc.setState(0x2b94, 0x4a66, 0x1180, 0xe74f, 0x76e0, 0x919, 0x0, 0x0);
        gbc.writeMem(0x2b94, { 0xb3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0x2b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 023C
        gbc.setState(0x1779, 0xd75a, 0x5a40, 0xae56, 0x9cb2, 0xf21, 0x1, 0x0);
        gbc.writeMem(0x1779, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd75a, gbc.sp());
        EXPECT(0x177a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 023D
        gbc.setState(0xafb1, 0x707b, 0x5530, 0x3798, 0xb45c, 0xf215, 0x1, 0x0);
        gbc.writeMem(0xafb1, { 0xb3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x707b, gbc.sp());
        EXPECT(0xafb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xafb1));
        // B3 023E
        gbc.setState(0x9bc7, 0x3d7e, 0x4130, 0x922b, 0x6f51, 0x7712, 0x1, 0x0);
        gbc.writeMem(0x9bc7, { 0xb3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0x9bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9bc7));
        // B3 023F
        gbc.setState(0x5725, 0xcb96, 0xfe80, 0x4a43, 0x1a64, 0x13f9, 0x0, 0x1);
        gbc.writeMem(0x5725, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0x5726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0240
        gbc.setState(0x7a4e, 0xb75, 0xe0, 0xe8ef, 0x3df3, 0x50c8, 0x1, 0x1);
        gbc.writeMem(0x7a4e, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0x7a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0241
        gbc.setState(0x351d, 0xda4c, 0xc890, 0xd4b6, 0xca34, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x351d, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0242
        gbc.setState(0x560c, 0x82b2, 0x1dd0, 0x7746, 0xc575, 0xd15c, 0x0, 0x0);
        gbc.writeMem(0x560c, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x82b2, gbc.sp());
        EXPECT(0x560d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0243
        gbc.setState(0xdb54, 0x4012, 0x72b0, 0xecd4, 0xa24b, 0x8e1d, 0x0, 0x0);
        gbc.writeMem(0xdb54, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4012, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdb54));
        // B3 0244
        gbc.setState(0x6b3b, 0x6436, 0xea70, 0x1105, 0xa62f, 0xa561, 0x0, 0x0);
        gbc.writeMem(0x6b3b, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0x6b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0245
        gbc.setState(0xcd5, 0xeed1, 0xed50, 0x430f, 0x4110, 0xbb6e, 0x0, 0x0);
        gbc.writeMem(0xcd5, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeed1, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0246
        gbc.setState(0x6309, 0xc105, 0xb4a0, 0xff8e, 0xf574, 0x976e, 0x1, 0x1);
        gbc.writeMem(0x6309, { 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc105, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0247
        gbc.setState(0x217f, 0xbb18, 0x6410, 0x7bc7, 0xd04a, 0xfd34, 0x1, 0x0);
        gbc.writeMem(0x217f, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbb18, gbc.sp());
        EXPECT(0x2180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0248
        gbc.setState(0x4520, 0xae54, 0xd7e0, 0xa348, 0x5b56, 0xa273, 0x1, 0x0);
        gbc.writeMem(0x4520, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0249
        gbc.setState(0x254, 0x8278, 0x700, 0xc614, 0x5df2, 0xa97a, 0x1, 0x0);
        gbc.writeMem(0x254, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8278, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 024A
        gbc.setState(0x3fd0, 0x61f6, 0xc980, 0x4920, 0xd6a9, 0x4008, 0x1, 0x1);
        gbc.writeMem(0x3fd0, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x61f6, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 024B
        gbc.setState(0x1e5e, 0xdb42, 0x780, 0x5ed5, 0x68fd, 0xb85d, 0x1, 0x1);
        gbc.writeMem(0x1e5e, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0x1e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 024C
        gbc.setState(0xa89b, 0xff8b, 0xa8c0, 0x6999, 0x2aca, 0xeb42, 0x0, 0x1);
        gbc.writeMem(0xa89b, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa89b));
        // B3 024D
        gbc.setState(0xe9cf, 0xe82f, 0xd800, 0xe06, 0x37d3, 0x9946, 0x1, 0x0);
        gbc.writeMem(0xe9cf, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe9cf));
        // B3 024E
        gbc.setState(0x4412, 0xe2a0, 0x2750, 0xb2f8, 0x37ab, 0x7160, 0x0, 0x1);
        gbc.writeMem(0x4412, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 024F
        gbc.setState(0x879, 0x3833, 0xa190, 0x531a, 0xd516, 0xb2fc, 0x1, 0x1);
        gbc.writeMem(0x879, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3833, gbc.sp());
        EXPECT(0x87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0250
        gbc.setState(0x594c, 0x6ae3, 0xa8e0, 0xb286, 0xedd3, 0xd415, 0x0, 0x0);
        gbc.writeMem(0x594c, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6ae3, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0251
        gbc.setState(0x70a8, 0x21de, 0x3210, 0xb49, 0x3c2b, 0x7582, 0x0, 0x0);
        gbc.writeMem(0x70a8, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x21de, gbc.sp());
        EXPECT(0x70a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0252
        gbc.setState(0x9000, 0x1ec5, 0xd610, 0xc546, 0xd1e6, 0xb8d6, 0x0, 0x1);
        gbc.writeMem(0x9000, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0x9001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9000));
        // B3 0253
        gbc.setState(0xec89, 0xf064, 0x1220, 0x2fc4, 0xd308, 0xf782, 0x1, 0x0);
        gbc.writeMem(0xec89, { 0xb3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf064, gbc.sp());
        EXPECT(0xec8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xec89));
        // B3 0254
        gbc.setState(0x4bf7, 0xcb12, 0xdb70, 0xd64e, 0xdcfd, 0x1484, 0x1, 0x0);
        gbc.writeMem(0x4bf7, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcb12, gbc.sp());
        EXPECT(0x4bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0255
        gbc.setState(0xb02, 0x3a45, 0xfcc0, 0x6f20, 0x127e, 0xdf60, 0x0, 0x1);
        gbc.writeMem(0xb02, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0xb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0256
        gbc.setState(0x122, 0xaf3a, 0x89c0, 0x5a83, 0x505b, 0x1f54, 0x1, 0x1);
        gbc.writeMem(0x122, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0x123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0257
        gbc.setState(0xd71e, 0x5c8e, 0xe060, 0x34ee, 0xd5b8, 0xa579, 0x1, 0x1);
        gbc.writeMem(0xd71e, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5c8e, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd71e));
        // B3 0258
        gbc.setState(0x3689, 0x97bc, 0x9550, 0xf5f0, 0xacd, 0x82cf, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0259
        gbc.setState(0xcfa2, 0x9bf5, 0xb1f0, 0x60a9, 0xc3bd, 0x1312, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9bf5, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcfa2));
        // B3 025A
        gbc.setState(0xb836, 0x5d00, 0x2a00, 0x727d, 0xf00d, 0x5aed, 0x0, 0x0);
        gbc.writeMem(0xb836, { 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0xb837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb836));
        // B3 025B
        gbc.setState(0x6078, 0x16ab, 0x7dd0, 0x39e2, 0x2b8c, 0x25fb, 0x0, 0x1);
        gbc.writeMem(0x6078, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x16ab, gbc.sp());
        EXPECT(0x6079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 025C
        gbc.setState(0xb3de, 0x8777, 0xab90, 0x7587, 0x7eac, 0x6770, 0x0, 0x0);
        gbc.writeMem(0xb3de, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8777, gbc.sp());
        EXPECT(0xb3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3de));
        // B3 025D
        gbc.setState(0x4f18, 0xf560, 0x7ca0, 0xaedd, 0x8e77, 0x77dc, 0x1, 0x0);
        gbc.writeMem(0x4f18, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf560, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 025E
        gbc.setState(0x6b5f, 0x9f63, 0x9e60, 0x204d, 0x3757, 0x3dbe, 0x0, 0x1);
        gbc.writeMem(0x6b5f, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9f63, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 025F
        gbc.setState(0x5ce7, 0x6ac3, 0xce40, 0x53ae, 0xf1fd, 0xf934, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x5ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0260
        gbc.setState(0x1c94, 0x3636, 0xd470, 0x94bb, 0x215c, 0xfaa6, 0x1, 0x0);
        gbc.writeMem(0x1c94, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0261
        gbc.setState(0xeca6, 0x270c, 0x3ac0, 0x16a6, 0x40c5, 0x3b6a, 0x0, 0x1);
        gbc.writeMem(0xeca6, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x270c, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeca6));
        // B3 0262
        gbc.setState(0xada5, 0x6f02, 0x3e70, 0x7df5, 0xfbba, 0x71c2, 0x0, 0x1);
        gbc.writeMem(0xada5, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f02, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xada5));
        // B3 0263
        gbc.setState(0x7f44, 0xcc3e, 0x6900, 0x261d, 0xa841, 0xecc1, 0x1, 0x1);
        gbc.writeMem(0x7f44, { 0xb3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcc3e, gbc.sp());
        EXPECT(0x7f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0264
        gbc.setState(0x3929, 0xfc1a, 0xb740, 0x6029, 0xf0ee, 0x6deb, 0x1, 0x1);
        gbc.writeMem(0x3929, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc1a, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0265
        gbc.setState(0xd35, 0xa300, 0x3e50, 0x4ba1, 0x4d0b, 0xbef7, 0x1, 0x0);
        gbc.writeMem(0xd35, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0xd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0266
        gbc.setState(0xa751, 0xeaaf, 0x67e0, 0x34b3, 0xdc48, 0xdf85, 0x0, 0x1);
        gbc.writeMem(0xa751, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa751));
        // B3 0267
        gbc.setState(0xb3d1, 0x344f, 0x19f0, 0xefb1, 0xc81, 0x38fc, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0xb3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x344f, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3d1));
        // B3 0268
        gbc.setState(0xa03e, 0x10b8, 0xf860, 0xd75c, 0x8392, 0x3620, 0x0, 0x1);
        gbc.writeMem(0xa03e, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x10b8, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa03e));
        // B3 0269
        gbc.setState(0x9f74, 0xa8fc, 0x7da0, 0x683, 0x5a1, 0x9532, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa8fc, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9f74));
        // B3 026A
        gbc.setState(0x9d57, 0xb55a, 0x50e0, 0x4ddf, 0xd183, 0x6925, 0x1, 0x0);
        gbc.writeMem(0x9d57, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb55a, gbc.sp());
        EXPECT(0x9d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9d57));
        // B3 026B
        gbc.setState(0xc2e7, 0x3f21, 0x6130, 0x7aa0, 0xa220, 0xa558, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xb3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3f21, gbc.sp());
        EXPECT(0xc2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc2e7));
        // B3 026D
        gbc.setState(0x90f3, 0xf242, 0x2e00, 0x7095, 0xbef7, 0x69aa, 0x1, 0x0);
        gbc.writeMem(0x90f3, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf242, gbc.sp());
        EXPECT(0x90f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x90f3));
        // B3 026E
        gbc.setState(0x56ad, 0xa5d0, 0xe250, 0x9fd6, 0xa75d, 0xa473, 0x1, 0x0);
        gbc.writeMem(0x56ad, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa5d0, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 026F
        gbc.setState(0xb009, 0x3af3, 0x26e0, 0xd0fe, 0x698d, 0xd336, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3af3, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb009));
        // B3 0270
        gbc.setState(0xc2b5, 0xb071, 0xa3e0, 0x1768, 0x244a, 0x4e77, 0x1, 0x1);
        gbc.writeMem(0xc2b5, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc2b5));
        // B3 0272
        gbc.setState(0x5a55, 0x8147, 0xe8d0, 0xab98, 0x7ff1, 0x330a, 0x1, 0x1);
        gbc.writeMem(0x5a55, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0x5a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0273
        gbc.setState(0x2dc7, 0xea0c, 0xda50, 0x6f51, 0xeabd, 0xff59, 0x0, 0x0);
        gbc.writeMem(0x2dc7, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0274
        gbc.setState(0xdece, 0xb5d8, 0x35f0, 0x2800, 0xd72a, 0xa9f2, 0x1, 0x0);
        gbc.writeMem(0xdece, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0xdecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdece));
        // B3 0275
        gbc.setState(0x696d, 0x6e3b, 0x4c80, 0x4144, 0xb0ca, 0xdefe, 0x0, 0x1);
        gbc.writeMem(0x696d, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0x696e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0276
        gbc.setState(0xc0ec, 0x34c6, 0xd460, 0x1628, 0x1bbd, 0xbe21, 0x1, 0x1);
        gbc.writeMem(0xc0ec, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x34c6, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc0ec));
        // B3 0278
        gbc.setState(0x6db4, 0x1873, 0x3c20, 0xf722, 0x7ae, 0x2863, 0x1, 0x0);
        gbc.writeMem(0x6db4, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1873, gbc.sp());
        EXPECT(0x6db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0279
        gbc.setState(0x11ee, 0xe7f8, 0x91e0, 0x7f7e, 0x99a4, 0x6808, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0xb3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 027A
        gbc.setState(0x34aa, 0xa160, 0x4ca0, 0x121d, 0xdeb2, 0x4005, 0x0, 0x1);
        gbc.writeMem(0x34aa, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa160, gbc.sp());
        EXPECT(0x34ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 027C
        gbc.setState(0x5ca3, 0x966e, 0x9690, 0xbc97, 0xd77e, 0x4b71, 0x0, 0x0);
        gbc.writeMem(0x5ca3, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x966e, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 027D
        gbc.setState(0x784b, 0xd946, 0x2dc0, 0xa9e9, 0x3660, 0x828c, 0x1, 0x0);
        gbc.writeMem(0x784b, { 0xb3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd946, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 027E
        gbc.setState(0x26e8, 0x7b9c, 0x6dd0, 0xd0b4, 0x51c4, 0x61c7, 0x1, 0x1);
        gbc.writeMem(0x26e8, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 027F
        gbc.setState(0xeb5a, 0x585b, 0xa070, 0x6703, 0x7493, 0xd417, 0x0, 0x0);
        gbc.writeMem(0xeb5a, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x585b, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeb5a));
        // B3 0280
        gbc.setState(0x46b9, 0x6e6d, 0xe40, 0x3b2d, 0x14fa, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x46b9, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6e6d, gbc.sp());
        EXPECT(0x46ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0281
        gbc.setState(0x3c87, 0x747f, 0x4f80, 0xb5a9, 0xba81, 0xf7db, 0x0, 0x1);
        gbc.writeMem(0x3c87, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x747f, gbc.sp());
        EXPECT(0x3c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0282
        gbc.setState(0x4919, 0x6359, 0x6910, 0xb06b, 0xd9df, 0xc2bd, 0x0, 0x0);
        gbc.writeMem(0x4919, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6359, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0283
        gbc.setState(0x5e62, 0xa967, 0xddf0, 0xdd49, 0x8fe1, 0xa4a1, 0x0, 0x0);
        gbc.writeMem(0x5e62, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0284
        gbc.setState(0x3313, 0xa992, 0x26e0, 0xffdd, 0x3711, 0x6fb4, 0x1, 0x1);
        gbc.writeMem(0x3313, { 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0x3314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0285
        gbc.setState(0xc8d8, 0x86f2, 0xb970, 0x7bca, 0xbc48, 0x1cbb, 0x0, 0x0);
        gbc.writeMem(0xc8d8, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x86f2, gbc.sp());
        EXPECT(0xc8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc8d8));
        // B3 0286
        gbc.setState(0xe17d, 0x6346, 0xa6f0, 0x3291, 0xdc64, 0x9212, 0x1, 0x1);
        gbc.writeMem(0xe17d, { 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0xe17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe17d));
        // B3 0287
        gbc.setState(0xcc66, 0x5af9, 0xc8f0, 0xbc50, 0x324d, 0x6aa6, 0x1, 0x1);
        gbc.writeMem(0xcc66, { 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5af9, gbc.sp());
        EXPECT(0xcc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcc66));
        // B3 0288
        gbc.setState(0xdcc2, 0xbf, 0x79c0, 0x4ae3, 0x64f2, 0x9410, 0x1, 0x0);
        gbc.writeMem(0xdcc2, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdcc2));
        // B3 0289
        gbc.setState(0x8b10, 0x2f24, 0x9690, 0xbb2a, 0xd86c, 0x575b, 0x1, 0x1);
        gbc.writeMem(0x8b10, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8b10));
        // B3 028A
        gbc.setState(0xc749, 0x15ba, 0xd270, 0x1a6b, 0x63e7, 0x9dcb, 0x1, 0x1);
        gbc.writeMem(0xc749, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x15ba, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc749));
        // B3 028B
        gbc.setState(0x8606, 0xe13a, 0xc640, 0x36e4, 0xf321, 0x2450, 0x1, 0x0);
        gbc.writeMem(0x8606, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe13a, gbc.sp());
        EXPECT(0x8607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8606));
        // B3 028C
        gbc.setState(0x1e10, 0xcc71, 0xc620, 0x4604, 0xb8c9, 0x90ae, 0x1, 0x1);
        gbc.writeMem(0x1e10, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcc71, gbc.sp());
        EXPECT(0x1e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 028D
        gbc.setState(0x243c, 0x36dd, 0x9f0, 0x2b6a, 0x1e87, 0x4f90, 0x0, 0x0);
        gbc.writeMem(0x243c, { 0xb3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x36dd, gbc.sp());
        EXPECT(0x243d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 028E
        gbc.setState(0x356e, 0xde77, 0xe6c0, 0x1845, 0x6c16, 0x6569, 0x1, 0x1);
        gbc.writeMem(0x356e, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0x356f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 028F
        gbc.setState(0x3dff, 0x3643, 0xf320, 0x5d53, 0xd637, 0x6b41, 0x0, 0x0);
        gbc.writeMem(0x3dff, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3643, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0290
        gbc.setState(0x92ce, 0xade8, 0xa110, 0xe4b0, 0x7c7, 0xa28c, 0x1, 0x0);
        gbc.writeMem(0x92ce, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xade8, gbc.sp());
        EXPECT(0x92cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x92ce));
        // B3 0291
        gbc.setState(0x74a9, 0x3223, 0x7840, 0x76d2, 0xa274, 0xe2bf, 0x0, 0x1);
        gbc.writeMem(0x74a9, { 0xb3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0292
        gbc.setState(0x45f5, 0xc798, 0xee30, 0xdc2b, 0x6541, 0x9490, 0x1, 0x0);
        gbc.writeMem(0x45f5, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc798, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0293
        gbc.setState(0xb11e, 0x8a71, 0xf550, 0xc639, 0x5855, 0x32b9, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a71, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb11e));
        // B3 0294
        gbc.setState(0x4124, 0xd1fe, 0x88d0, 0xe59f, 0x2a55, 0xd602, 0x0, 0x1);
        gbc.writeMem(0x4124, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd1fe, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0295
        gbc.setState(0x5554, 0xb2dc, 0xb030, 0xe3e9, 0x3274, 0x63c9, 0x0, 0x1);
        gbc.writeMem(0x5554, { 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb2dc, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0296
        gbc.setState(0x8545, 0xe967, 0xfdd0, 0x1501, 0xc34f, 0xe6ca, 0x0, 0x1);
        gbc.writeMem(0x8545, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x8546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8545));
        // B3 0297
        gbc.setState(0xdc7e, 0x601e, 0x19a0, 0x4772, 0x16c2, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0xdc7e, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x601e, gbc.sp());
        EXPECT(0xdc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdc7e));
        // B3 0298
        gbc.setState(0xda40, 0xd6b6, 0x7560, 0xb72c, 0xdb34, 0x25b0, 0x0, 0x1);
        gbc.writeMem(0xda40, { 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xda40));
        // B3 029A
        gbc.setState(0x50cb, 0xf07c, 0xd980, 0x696, 0xa0e4, 0x7058, 0x0, 0x0);
        gbc.writeMem(0x50cb, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf07c, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 029B
        gbc.setState(0x39e5, 0xaf49, 0xf450, 0x44e3, 0xe7c4, 0x4b39, 0x0, 0x1);
        gbc.writeMem(0x39e5, { 0xb3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaf49, gbc.sp());
        EXPECT(0x39e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 029C
        gbc.setState(0xe5f6, 0xed78, 0xe850, 0x44e1, 0xc86d, 0xf7d3, 0x0, 0x0);
        gbc.writeMem(0xe5f6, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0xe5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe5f6));
        // B3 029D
        gbc.setState(0x714, 0xcf6f, 0x8120, 0x2211, 0x3791, 0x8013, 0x1, 0x1);
        gbc.writeMem(0x714, { 0xb3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcf6f, gbc.sp());
        EXPECT(0x715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 029E
        gbc.setState(0xd77, 0x2e05, 0xdb0, 0x61e6, 0xdd85, 0xe699, 0x1, 0x1);
        gbc.writeMem(0xd77, { 0xb3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2e05, gbc.sp());
        EXPECT(0xd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 029F
        gbc.setState(0x30c0, 0x71d, 0x8300, 0x1a23, 0x2567, 0x6b7b, 0x1, 0x0);
        gbc.writeMem(0x30c0, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x71d, gbc.sp());
        EXPECT(0x30c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A0
        gbc.setState(0x3473, 0x2e30, 0x5b20, 0x527d, 0xaaa1, 0x9a77, 0x0, 0x1);
        gbc.writeMem(0x3473, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2e30, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A1
        gbc.setState(0x59c9, 0xba05, 0x19b0, 0xee20, 0x3e19, 0x662, 0x1, 0x1);
        gbc.writeMem(0x59c9, { 0xb3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xba05, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A2
        gbc.setState(0x345e, 0x30d6, 0x1230, 0xe906, 0x6062, 0x4cac, 0x1, 0x0);
        gbc.writeMem(0x345e, { 0xb3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x30d6, gbc.sp());
        EXPECT(0x345f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A3
        gbc.setState(0x9d88, 0x3eac, 0x8950, 0xf436, 0x1cf7, 0x529f, 0x0, 0x1);
        gbc.writeMem(0x9d88, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3eac, gbc.sp());
        EXPECT(0x9d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9d88));
        // B3 02A4
        gbc.setState(0x6d74, 0x8dab, 0xb960, 0x3e0a, 0xa597, 0xb1e1, 0x0, 0x1);
        gbc.writeMem(0x6d74, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A5
        gbc.setState(0x44d2, 0x9c53, 0xd720, 0x2bdb, 0xebfd, 0xa397, 0x0, 0x1);
        gbc.writeMem(0x44d2, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0x44d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02A6
        gbc.setState(0x91c9, 0xd8df, 0xec50, 0x533d, 0x3284, 0x99a7, 0x1, 0x1);
        gbc.writeMem(0x91c9, { 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x91c9));
        // B3 02A7
        gbc.setState(0xa540, 0xb280, 0xdfd0, 0xcd05, 0xabd2, 0xb11b, 0x0, 0x1);
        gbc.writeMem(0xa540, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb280, gbc.sp());
        EXPECT(0xa541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa540));
        // B3 02A8
        gbc.setState(0xe99a, 0xe6be, 0x6ee0, 0x60ae, 0x2f11, 0x3d1e, 0x0, 0x1);
        gbc.writeMem(0xe99a, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0xe99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe99a));
        // B3 02A9
        gbc.setState(0xdf11, 0xae05, 0x7f70, 0x4ed7, 0xf085, 0xfa9b, 0x0, 0x0);
        gbc.writeMem(0xdf11, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xae05, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdf11));
        // B3 02AA
        gbc.setState(0xe70a, 0xd315, 0x75a0, 0x3434, 0x966b, 0x4bb9, 0x0, 0x1);
        gbc.writeMem(0xe70a, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd315, gbc.sp());
        EXPECT(0xe70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe70a));
        // B3 02AB
        gbc.setState(0x7748, 0x8943, 0xab20, 0xf246, 0x7db0, 0xecde, 0x1, 0x0);
        gbc.writeMem(0x7748, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0x7749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02AC
        gbc.setState(0x6df, 0x8c5b, 0xa340, 0x2a46, 0x2ec9, 0x6439, 0x0, 0x1);
        gbc.writeMem(0x6df, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02AD
        gbc.setState(0xaf85, 0x3ed9, 0xa710, 0x427f, 0xd058, 0xefab, 0x0, 0x0);
        gbc.writeMem(0xaf85, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0xaf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaf85));
        // B3 02AE
        gbc.setState(0x7024, 0x56c4, 0x2440, 0xc33c, 0xef8, 0x87be, 0x0, 0x1);
        gbc.writeMem(0x7024, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02AF
        gbc.setState(0xb033, 0x82ef, 0x4890, 0x6857, 0x6ca5, 0x168c, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb033));
        // B3 02B0
        gbc.setState(0xe3c1, 0x82d2, 0xc6f0, 0x8b78, 0xdafc, 0xb566, 0x0, 0x0);
        gbc.writeMem(0xe3c1, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe3c1));
        // B3 02B1
        gbc.setState(0xaff2, 0x402f, 0xa390, 0x8712, 0xb266, 0xc560, 0x0, 0x0);
        gbc.writeMem(0xaff2, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x402f, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaff2));
        // B3 02B2
        gbc.setState(0x25c9, 0xe764, 0xd630, 0x5e3c, 0x8ed0, 0x181e, 0x1, 0x0);
        gbc.writeMem(0x25c9, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe764, gbc.sp());
        EXPECT(0x25ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B3
        gbc.setState(0x50e7, 0x43ee, 0x2560, 0x919a, 0xaeae, 0xbda6, 0x0, 0x1);
        gbc.writeMem(0x50e7, { 0xb3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x43ee, gbc.sp());
        EXPECT(0x50e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B4
        gbc.setState(0x9aa8, 0xc8a0, 0xfe70, 0xa251, 0x4438, 0x4c8d, 0x1, 0x1);
        gbc.writeMem(0x9aa8, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc8a0, gbc.sp());
        EXPECT(0x9aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9aa8));
        // B3 02B5
        gbc.setState(0x2c4a, 0x3e26, 0x2690, 0x50b3, 0x42e0, 0x6f6e, 0x0, 0x0);
        gbc.writeMem(0x2c4a, { 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3e26, gbc.sp());
        EXPECT(0x2c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B6
        gbc.setState(0x76de, 0xb1a0, 0x3cf0, 0xb3a1, 0x9149, 0x1541, 0x1, 0x1);
        gbc.writeMem(0x76de, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B7
        gbc.setState(0x518c, 0x9e8f, 0x3f80, 0x3c9d, 0x532b, 0x59cd, 0x1, 0x1);
        gbc.writeMem(0x518c, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0x518d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B8
        gbc.setState(0x6db4, 0x272d, 0x7af0, 0xa124, 0x68a9, 0x41f0, 0x0, 0x1);
        gbc.writeMem(0x6db4, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x272d, gbc.sp());
        EXPECT(0x6db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02B9
        gbc.setState(0xa473, 0x7b20, 0x1660, 0xf135, 0xeaf2, 0x9b63, 0x0, 0x0);
        gbc.writeMem(0xa473, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa473));
        // B3 02BA
        gbc.setState(0x4514, 0x81c6, 0xa1a0, 0x7776, 0x646e, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0x4514, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x81c6, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02BB
        gbc.setState(0x8657, 0xc54d, 0x6730, 0x7726, 0x2649, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x8657, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x8658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8657));
        // B3 02BC
        gbc.setState(0x441b, 0xabd6, 0x9960, 0xf301, 0xc4af, 0xb1e2, 0x0, 0x0);
        gbc.writeMem(0x441b, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xabd6, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02BD
        gbc.setState(0xc701, 0xed9e, 0x2d0, 0xe16a, 0xc696, 0xa0b6, 0x1, 0x0);
        gbc.writeMem(0xc701, { 0xb3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0xc702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc701));
        // B3 02BE
        gbc.setState(0xb024, 0x72c3, 0xea00, 0xd47c, 0x69ca, 0x61be, 0x0, 0x1);
        gbc.writeMem(0xb024, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0xb025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb024));
        // B3 02BF
        gbc.setState(0x1cd7, 0x6769, 0x5d90, 0xd9e3, 0xa65a, 0xd32, 0x1, 0x1);
        gbc.writeMem(0x1cd7, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02C0
        gbc.setState(0x8719, 0xd69c, 0x6620, 0xb9dc, 0x8275, 0xe39b, 0x0, 0x0);
        gbc.writeMem(0x8719, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd69c, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8719));
        // B3 02C2
        gbc.setState(0xce12, 0xbea6, 0x2990, 0x464e, 0xf00a, 0x9aaa, 0x1, 0x0);
        gbc.writeMem(0xce12, { 0xb3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0xce13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xce12));
        // B3 02C3
        gbc.setState(0xdca8, 0xe62b, 0x6aa0, 0x6598, 0x272c, 0x2c1a, 0x1, 0x1);
        gbc.writeMem(0xdca8, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe62b, gbc.sp());
        EXPECT(0xdca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdca8));
        // B3 02C4
        gbc.setState(0xc644, 0x735e, 0x86a0, 0x837c, 0x167c, 0x5f8f, 0x0, 0x0);
        gbc.writeMem(0xc644, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x735e, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc644));
        // B3 02C5
        gbc.setState(0x8aee, 0x8977, 0x9e30, 0x9cf9, 0x8023, 0x4003, 0x0, 0x0);
        gbc.writeMem(0x8aee, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8977, gbc.sp());
        EXPECT(0x8aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8aee));
        // B3 02C6
        gbc.setState(0xa0c9, 0x92bf, 0x5ac0, 0xfb42, 0x15c, 0x7c65, 0x0, 0x0);
        gbc.writeMem(0xa0c9, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x92bf, gbc.sp());
        EXPECT(0xa0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa0c9));
        // B3 02C7
        gbc.setState(0xd718, 0xcbf3, 0x4990, 0xf794, 0x718e, 0x99c, 0x0, 0x1);
        gbc.writeMem(0xd718, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0xd719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd718));
        // B3 02C8
        gbc.setState(0xac6, 0x2b27, 0x46e0, 0xc370, 0x8939, 0x4e62, 0x1, 0x1);
        gbc.writeMem(0xac6, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2b27, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02C9
        gbc.setState(0x80d, 0xe13f, 0xc4d0, 0x60d3, 0xa579, 0x7c29, 0x1, 0x0);
        gbc.writeMem(0x80d, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe13f, gbc.sp());
        EXPECT(0x80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02CB
        gbc.setState(0x60ec, 0x8d26, 0xfba0, 0x413e, 0xc67d, 0xb584, 0x0, 0x0);
        gbc.writeMem(0x60ec, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0x60ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02CC
        gbc.setState(0xc194, 0xb761, 0x4270, 0x99ce, 0x9155, 0xb79c, 0x0, 0x0);
        gbc.writeMem(0xc194, { 0xb3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb761, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc194));
        // B3 02CD
        gbc.setState(0x1c1a, 0x24f1, 0x54b0, 0xd3c, 0x185e, 0xcb43, 0x1, 0x0);
        gbc.writeMem(0x1c1a, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02CE
        gbc.setState(0xbc0f, 0xada6, 0xaa20, 0x59fe, 0x148e, 0x32e3, 0x0, 0x1);
        gbc.writeMem(0xbc0f, { 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xada6, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbc0f));
        // B3 02CF
        gbc.setState(0x99a2, 0x9822, 0x2c50, 0x8361, 0x37d2, 0xf1c5, 0x0, 0x1);
        gbc.writeMem(0x99a2, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9822, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x99a2));
        // B3 02D0
        gbc.setState(0xd5c9, 0xac9a, 0x3230, 0x897, 0x6be7, 0x9232, 0x0, 0x1);
        gbc.writeMem(0xd5c9, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xac9a, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd5c9));
        // B3 02D1
        gbc.setState(0x154e, 0x1969, 0xa8f0, 0x1770, 0xc313, 0x2b55, 0x0, 0x0);
        gbc.writeMem(0x154e, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1969, gbc.sp());
        EXPECT(0x154f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D2
        gbc.setState(0xd0b2, 0x7371, 0x6410, 0xd03d, 0x5565, 0xa407, 0x1, 0x0);
        gbc.writeMem(0xd0b2, { 0xb3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0xd0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd0b2));
        // B3 02D3
        gbc.setState(0x4ce5, 0xc6ec, 0x9680, 0xce0b, 0xc953, 0xadb8, 0x1, 0x0);
        gbc.writeMem(0x4ce5, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0x4ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D4
        gbc.setState(0x5f3d, 0x297d, 0xcfd0, 0xb600, 0x54c6, 0xa345, 0x0, 0x1);
        gbc.writeMem(0x5f3d, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D5
        gbc.setState(0xbeb7, 0x218a, 0xd60, 0x6588, 0xd545, 0xc0c1, 0x0, 0x0);
        gbc.writeMem(0xbeb7, { 0xb3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbeb7));
        // B3 02D6
        gbc.setState(0x62cf, 0x181d, 0x3880, 0x3c20, 0xf18f, 0xbb40, 0x1, 0x1);
        gbc.writeMem(0x62cf, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x181d, gbc.sp());
        EXPECT(0x62d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D7
        gbc.setState(0x4897, 0xee62, 0xeb40, 0x486d, 0xf044, 0x3775, 0x0, 0x1);
        gbc.writeMem(0x4897, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D8
        gbc.setState(0x5f89, 0x976b, 0x580, 0x4232, 0xe062, 0x9c04, 0x0, 0x0);
        gbc.writeMem(0x5f89, { 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02D9
        gbc.setState(0xc4d, 0xa917, 0x5690, 0x8b37, 0x5ef3, 0xe278, 0x1, 0x1);
        gbc.writeMem(0xc4d, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa917, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02DA
        gbc.setState(0x3685, 0xcc2, 0x1c50, 0xa2aa, 0xfd2c, 0xd3ba, 0x1, 0x1);
        gbc.writeMem(0x3685, { 0xb3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02DB
        gbc.setState(0x7303, 0x9427, 0xeca0, 0xa809, 0x53c3, 0x321c, 0x1, 0x0);
        gbc.writeMem(0x7303, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x7304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02DC
        gbc.setState(0x469f, 0xaac3, 0xdda0, 0x84cd, 0xb322, 0xd760, 0x0, 0x1);
        gbc.writeMem(0x469f, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02DD
        gbc.setState(0xda75, 0x881a, 0xf6c0, 0xc822, 0xa498, 0x5d70, 0x1, 0x1);
        gbc.writeMem(0xda75, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x881a, gbc.sp());
        EXPECT(0xda76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xda75));
        // B3 02DE
        gbc.setState(0xacd0, 0x72c4, 0x7040, 0x3597, 0x7fc3, 0xb1c7, 0x0, 0x1);
        gbc.writeMem(0xacd0, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x72c4, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xacd0));
        // B3 02DF
        gbc.setState(0x9064, 0x54a0, 0x3810, 0x5a47, 0xcef0, 0xdb63, 0x1, 0x1);
        gbc.writeMem(0x9064, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x9065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9064));
        // B3 02E0
        gbc.setState(0x98c0, 0x2550, 0xfcc0, 0x3b4f, 0x4cab, 0xe4b0, 0x0, 0x0);
        gbc.writeMem(0x98c0, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x98c0));
        // B3 02E1
        gbc.setState(0x6f52, 0x2ed1, 0x7480, 0x35ba, 0x3e15, 0x69ba, 0x0, 0x0);
        gbc.writeMem(0x6f52, { 0xb3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0x6f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02E2
        gbc.setState(0xca86, 0x6bf5, 0x980, 0x9293, 0x1e24, 0x9e99, 0x0, 0x0);
        gbc.writeMem(0xca86, { 0xb3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6bf5, gbc.sp());
        EXPECT(0xca87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xca86));
        // B3 02E3
        gbc.setState(0x1a9e, 0xc4d5, 0x1ce0, 0xa625, 0x5439, 0x3def, 0x0, 0x0);
        gbc.writeMem(0x1a9e, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc4d5, gbc.sp());
        EXPECT(0x1a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02E4
        gbc.setState(0x4140, 0x9928, 0x9260, 0x3c90, 0x4ae9, 0xf97b, 0x0, 0x1);
        gbc.writeMem(0x4140, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0x4141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02E5
        gbc.setState(0x1919, 0x44eb, 0x1570, 0xe99f, 0xb97e, 0x97c6, 0x1, 0x1);
        gbc.writeMem(0x1919, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02E6
        gbc.setState(0x2e41, 0x9e92, 0x3bc0, 0xd63b, 0x4409, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x2e41, { 0xb3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0x2e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02E7
        gbc.setState(0xa77d, 0xb981, 0xece0, 0x8f68, 0xc8, 0x641, 0x0, 0x1);
        gbc.writeMem(0xa77d, { 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb981, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa77d));
        // B3 02E8
        gbc.setState(0x826d, 0x61ed, 0xb900, 0x1481, 0xe22d, 0x1007, 0x0, 0x0);
        gbc.writeMem(0x826d, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x826d));
        // B3 02E9
        gbc.setState(0x94b, 0x23ae, 0xe3a0, 0xd275, 0x262a, 0xa03b, 0x0, 0x0);
        gbc.writeMem(0x94b, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02EA
        gbc.setState(0x5ff8, 0xe74, 0xde80, 0xf155, 0x62fc, 0x66d3, 0x1, 0x0);
        gbc.writeMem(0x5ff8, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe74, gbc.sp());
        EXPECT(0x5ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02EB
        gbc.setState(0xd888, 0xba2b, 0x8de0, 0x58d5, 0xccef, 0x6fd0, 0x0, 0x1);
        gbc.writeMem(0xd888, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xba2b, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd888));
        // B3 02EC
        gbc.setState(0x4e3d, 0x790f, 0x5280, 0xfc11, 0xc78e, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0x4e3d, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x790f, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02ED
        gbc.setState(0x1e1c, 0xbfc6, 0x80d0, 0x444c, 0x6fa8, 0x29f9, 0x0, 0x0);
        gbc.writeMem(0x1e1c, { 0xb3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbfc6, gbc.sp());
        EXPECT(0x1e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02EE
        gbc.setState(0x8a2a, 0x86a2, 0x8eb0, 0xc023, 0xf593, 0xf6a2, 0x0, 0x0);
        gbc.writeMem(0x8a2a, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x8a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8a2a));
        // B3 02EF
        gbc.setState(0x97ba, 0xea0, 0xaad0, 0xa2e5, 0xd7ff, 0x3a3c, 0x1, 0x0);
        gbc.writeMem(0x97ba, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xea0, gbc.sp());
        EXPECT(0x97bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x97ba));
        // B3 02F0
        gbc.setState(0x12a6, 0xe728, 0x3860, 0xf9b8, 0x9be0, 0x1438, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x12a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F1
        gbc.setState(0x274a, 0x5a39, 0x90b0, 0x6c81, 0x84e5, 0x1619, 0x1, 0x0);
        gbc.writeMem(0x274a, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0x274b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F2
        gbc.setState(0x8ca7, 0xa353, 0xdab0, 0x333b, 0xd146, 0x6b97, 0x0, 0x1);
        gbc.writeMem(0x8ca7, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa353, gbc.sp());
        EXPECT(0x8ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8ca7));
        // B3 02F3
        gbc.setState(0xb64f, 0x144c, 0xbd30, 0x1be, 0x7bf4, 0xb3e7, 0x0, 0x1);
        gbc.writeMem(0xb64f, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x144c, gbc.sp());
        EXPECT(0xb650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb64f));
        // B3 02F4
        gbc.setState(0x3074, 0x2d3d, 0x3d40, 0xd014, 0x9e11, 0xe089, 0x1, 0x0);
        gbc.writeMem(0x3074, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2d3d, gbc.sp());
        EXPECT(0x3075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F5
        gbc.setState(0x96e1, 0x4aa3, 0x98a0, 0x5809, 0x71d1, 0x84fc, 0x0, 0x0);
        gbc.writeMem(0x96e1, { 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4aa3, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x96e1));
        // B3 02F6
        gbc.setState(0x3693, 0x6343, 0xa450, 0xc6ed, 0x4fdf, 0x4bc6, 0x0, 0x0);
        gbc.writeMem(0x3693, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6343, gbc.sp());
        EXPECT(0x3694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F7
        gbc.setState(0x4f9e, 0x9021, 0x2280, 0x473f, 0xc5b7, 0xdd9b, 0x1, 0x0);
        gbc.writeMem(0x4f9e, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F8
        gbc.setState(0x386, 0xb25e, 0x9810, 0x8b52, 0xeedf, 0x8de4, 0x0, 0x1);
        gbc.writeMem(0x386, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02F9
        gbc.setState(0xd335, 0x8a8c, 0xe70, 0x2e40, 0x7bc0, 0xa12e, 0x1, 0x0);
        gbc.writeMem(0xd335, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8a8c, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd335));
        // B3 02FA
        gbc.setState(0x6463, 0x1809, 0x8370, 0x23d5, 0xe7d4, 0xee96, 0x1, 0x1);
        gbc.writeMem(0x6463, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02FB
        gbc.setState(0x6db2, 0xf0fe, 0x2080, 0x898f, 0x62e4, 0x7a92, 0x1, 0x0);
        gbc.writeMem(0x6db2, { 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf0fe, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02FC
        gbc.setState(0x7186, 0x41e9, 0x8340, 0x9bd3, 0x5c7b, 0x94e9, 0x1, 0x0);
        gbc.writeMem(0x7186, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x41e9, gbc.sp());
        EXPECT(0x7187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02FD
        gbc.setState(0x61dc, 0x4375, 0xe9a0, 0x8fa, 0xac72, 0x221e, 0x1, 0x1);
        gbc.writeMem(0x61dc, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0x61dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02FE
        gbc.setState(0x55c, 0x59b6, 0x980, 0x750c, 0xb5d4, 0x6458, 0x0, 0x1);
        gbc.writeMem(0x55c, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 02FF
        gbc.setState(0x60ec, 0xaaec, 0xfa60, 0xadf7, 0x8291, 0xa601, 0x1, 0x1);
        gbc.writeMem(0x60ec, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaaec, gbc.sp());
        EXPECT(0x60ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0300
        gbc.setState(0x3fdf, 0x9093, 0xcf30, 0xc86d, 0x9e85, 0xfad1, 0x1, 0x0);
        gbc.writeMem(0x3fdf, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9093, gbc.sp());
        EXPECT(0x3fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0301
        gbc.setState(0xe287, 0x23cb, 0xe740, 0xd6c3, 0x4d0e, 0x4a58, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x23cb, gbc.sp());
        EXPECT(0xe288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe287));
        // B3 0302
        gbc.setState(0x5dcd, 0x7fb, 0xcd30, 0xab19, 0xf999, 0x5144, 0x1, 0x1);
        gbc.writeMem(0x5dcd, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7fb, gbc.sp());
        EXPECT(0x5dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0303
        gbc.setState(0xc5d0, 0x6c36, 0x9a20, 0x234a, 0xe732, 0xd7f8, 0x1, 0x1);
        gbc.writeMem(0xc5d0, { 0xb3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c36, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc5d0));
        // B3 0304
        gbc.setState(0x2e89, 0x3d29, 0x5320, 0xae7b, 0xce5d, 0x8823, 0x1, 0x1);
        gbc.writeMem(0x2e89, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3d29, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0305
        gbc.setState(0xb397, 0x5c94, 0xa880, 0x9478, 0xd59, 0xdc9b, 0x1, 0x0);
        gbc.writeMem(0xb397, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5c94, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb397));
        // B3 0306
        gbc.setState(0xae98, 0xd087, 0x30b0, 0xe9b3, 0x23da, 0x1f22, 0x0, 0x1);
        gbc.writeMem(0xae98, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd087, gbc.sp());
        EXPECT(0xae99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xae98));
        // B3 0308
        gbc.setState(0x1d9f, 0x5137, 0x3f00, 0x5fa4, 0x8ce, 0xcff2, 0x1, 0x1);
        gbc.writeMem(0x1d9f, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5137, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0309
        gbc.setState(0x7b75, 0x95a, 0x6260, 0xdf16, 0x6ea1, 0xa620, 0x1, 0x0);
        gbc.writeMem(0x7b75, { 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 030A
        gbc.setState(0xcbb, 0xf2e0, 0xdbf0, 0x4880, 0x602a, 0x54be, 0x1, 0x0);
        gbc.writeMem(0xcbb, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf2e0, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 030B
        gbc.setState(0xe2fd, 0xbe70, 0xcf40, 0x365e, 0xe99f, 0x279e, 0x0, 0x0);
        gbc.writeMem(0xe2fd, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe2fd));
        // B3 030C
        gbc.setState(0xa646, 0x966c, 0x8ac0, 0xb31b, 0x746d, 0x83d4, 0x1, 0x0);
        gbc.writeMem(0xa646, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x966c, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa646));
        // B3 030D
        gbc.setState(0x3eae, 0x63c9, 0x18c0, 0xb3f9, 0xfc85, 0x25c2, 0x0, 0x1);
        gbc.writeMem(0x3eae, { 0xb3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0x3eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 030E
        gbc.setState(0x487f, 0xbfec, 0x2ae0, 0x39e4, 0x44e5, 0x91c8, 0x1, 0x1);
        gbc.writeMem(0x487f, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbfec, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 030F
        gbc.setState(0x9c5, 0x85e3, 0x92b0, 0x48f7, 0x55d2, 0xcd8c, 0x1, 0x1);
        gbc.writeMem(0x9c5, { 0xb3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x85e3, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0310
        gbc.setState(0xaee0, 0xe452, 0x4870, 0x6627, 0xdaee, 0xce65, 0x0, 0x1);
        gbc.writeMem(0xaee0, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe452, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaee0));
        // B3 0311
        gbc.setState(0x5b5b, 0x6d5e, 0x9b30, 0x9ff, 0xfb56, 0x1d68, 0x1, 0x0);
        gbc.writeMem(0x5b5b, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x5b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0312
        gbc.setState(0xbda9, 0x363b, 0x9e10, 0xb697, 0x4015, 0x5ff7, 0x1, 0x1);
        gbc.writeMem(0xbda9, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbda9));
        // B3 0313
        gbc.setState(0x9201, 0x6674, 0x3db0, 0x5e32, 0xb0c7, 0xdfbf, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6674, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9201));
        // B3 0314
        gbc.setState(0x522, 0xbce8, 0x93e0, 0xe6ef, 0x50d4, 0x8dc6, 0x1, 0x1);
        gbc.writeMem(0x522, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0315
        gbc.setState(0x564d, 0x56b4, 0x3890, 0x832b, 0x2d83, 0x852, 0x0, 0x1);
        gbc.writeMem(0x564d, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x56b4, gbc.sp());
        EXPECT(0x564e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0316
        gbc.setState(0x7a14, 0x9ef2, 0x7770, 0x9f15, 0xfc02, 0x6678, 0x0, 0x0);
        gbc.writeMem(0x7a14, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0317
        gbc.setState(0x1927, 0x2254, 0x3000, 0x9b7f, 0x38d2, 0x4767, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2254, gbc.sp());
        EXPECT(0x1928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0318
        gbc.setState(0x4bb6, 0x44c9, 0x9780, 0x59e1, 0x1594, 0xefac, 0x0, 0x1);
        gbc.writeMem(0x4bb6, { 0xb3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x44c9, gbc.sp());
        EXPECT(0x4bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0319
        gbc.setState(0xa16f, 0x8876, 0x1390, 0x24d6, 0x418c, 0xe8aa, 0x0, 0x1);
        gbc.writeMem(0xa16f, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8876, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa16f));
        // B3 031A
        gbc.setState(0x2e0e, 0xb6c, 0xd8c0, 0xf255, 0x7b, 0x1220, 0x1, 0x1);
        gbc.writeMem(0x2e0e, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x2e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 031B
        gbc.setState(0x5482, 0x9f46, 0xcb50, 0xc07e, 0x4fe8, 0x55fa, 0x0, 0x1);
        gbc.writeMem(0x5482, { 0xb3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f46, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 031C
        gbc.setState(0x62a, 0x4e6f, 0x51e0, 0xbc45, 0xe9da, 0x5b0e, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xb3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 031D
        gbc.setState(0xa39c, 0xfc90, 0x2b40, 0x7f19, 0xe53d, 0xaa9c, 0x0, 0x1);
        gbc.writeMem(0xa39c, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfc90, gbc.sp());
        EXPECT(0xa39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa39c));
        // B3 031E
        gbc.setState(0xe07a, 0x5dfa, 0x27a0, 0xcb31, 0xc09c, 0x7f13, 0x1, 0x0);
        gbc.writeMem(0xe07a, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5dfa, gbc.sp());
        EXPECT(0xe07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe07a));
        // B3 031F
        gbc.setState(0x8b37, 0xa733, 0xd840, 0x47de, 0xcf0a, 0xdad2, 0x0, 0x1);
        gbc.writeMem(0x8b37, { 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8b37));
        // B3 0320
        gbc.setState(0x1e4b, 0x2d06, 0xe740, 0x8cfe, 0x62a7, 0x91fb, 0x0, 0x0);
        gbc.writeMem(0x1e4b, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2d06, gbc.sp());
        EXPECT(0x1e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0321
        gbc.setState(0x5eb3, 0x8382, 0x3820, 0x2920, 0x9a70, 0x9794, 0x1, 0x0);
        gbc.writeMem(0x5eb3, { 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8382, gbc.sp());
        EXPECT(0x5eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0322
        gbc.setState(0x8712, 0xe88, 0x9fc0, 0x46a8, 0x96d8, 0xe031, 0x1, 0x1);
        gbc.writeMem(0x8712, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe88, gbc.sp());
        EXPECT(0x8713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8712));
        // B3 0324
        gbc.setState(0xc57a, 0xe2f2, 0xbee0, 0xe2c3, 0x23a1, 0x8bff, 0x1, 0x1);
        gbc.writeMem(0xc57a, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe2f2, gbc.sp());
        EXPECT(0xc57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc57a));
        // B3 0325
        gbc.setState(0xce1f, 0xf2f1, 0x1250, 0x75cd, 0x41a4, 0x7fd7, 0x1, 0x0);
        gbc.writeMem(0xce1f, { 0xb3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xce1f));
        // B3 0326
        gbc.setState(0xb59d, 0xaca9, 0xd560, 0x1eca, 0x3499, 0x90e5, 0x0, 0x0);
        gbc.writeMem(0xb59d, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb59d));
        // B3 0328
        gbc.setState(0x7466, 0x71c3, 0x5230, 0xbabe, 0xf91, 0xd867, 0x1, 0x1);
        gbc.writeMem(0x7466, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x71c3, gbc.sp());
        EXPECT(0x7467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 032B
        gbc.setState(0x6a11, 0xe9cf, 0x2f20, 0xd438, 0x1707, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x6a11, { 0xb3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe9cf, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 032C
        gbc.setState(0xc1cf, 0x79a6, 0xc960, 0x6500, 0xcb06, 0x6db2, 0x0, 0x1);
        gbc.writeMem(0xc1cf, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0xc1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc1cf));
        // B3 032E
        gbc.setState(0x18a9, 0xcc8a, 0x700, 0xa181, 0x8a41, 0xe88d, 0x0, 0x1);
        gbc.writeMem(0x18a9, { 0xb3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcc8a, gbc.sp());
        EXPECT(0x18aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 032F
        gbc.setState(0x480d, 0x8028, 0x7720, 0xef41, 0xaabb, 0x99a7, 0x0, 0x0);
        gbc.writeMem(0x480d, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8028, gbc.sp());
        EXPECT(0x480e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0330
        gbc.setState(0xb03e, 0x3455, 0x7bf0, 0x62f5, 0x6299, 0x9d91, 0x1, 0x1);
        gbc.writeMem(0xb03e, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3455, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb03e));
        // B3 0331
        gbc.setState(0x153e, 0xff1e, 0xb060, 0xf380, 0x2b3c, 0x1438, 0x1, 0x0);
        gbc.writeMem(0x153e, { 0xb3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0x153f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0332
        gbc.setState(0x682b, 0x7b6a, 0x1430, 0x6b89, 0xbc50, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0x682b, { 0xb3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7b6a, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0333
        gbc.setState(0xacd4, 0xe47e, 0x1880, 0x1f25, 0xbad5, 0x1c55, 0x0, 0x0);
        gbc.writeMem(0xacd4, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe47e, gbc.sp());
        EXPECT(0xacd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xacd4));
        // B3 0334
        gbc.setState(0xc950, 0x6c0c, 0x1c70, 0xacc4, 0xe60c, 0xec74, 0x1, 0x0);
        gbc.writeMem(0xc950, { 0xb3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6c0c, gbc.sp());
        EXPECT(0xc951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc950));
        // B3 0335
        gbc.setState(0xee6a, 0x54e4, 0x7350, 0x5209, 0x2983, 0xdad6, 0x0, 0x1);
        gbc.writeMem(0xee6a, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x54e4, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xee6a));
        // B3 0336
        gbc.setState(0x12b8, 0x8795, 0x46a0, 0x434a, 0x6684, 0xd65d, 0x1, 0x1);
        gbc.writeMem(0x12b8, { 0xb3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8795, gbc.sp());
        EXPECT(0x12b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0337
        gbc.setState(0x7365, 0x8c48, 0xe980, 0xaf5, 0xcdf9, 0x7add, 0x0, 0x1);
        gbc.writeMem(0x7365, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c48, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0339
        gbc.setState(0x4869, 0x1d61, 0x42b0, 0x135c, 0x616e, 0x3fac, 0x1, 0x1);
        gbc.writeMem(0x4869, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x486a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 033A
        gbc.setState(0xbba6, 0xe9d8, 0x4b50, 0x1cd0, 0x551e, 0xce84, 0x1, 0x0);
        gbc.writeMem(0xbba6, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0xbba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbba6));
        // B3 033B
        gbc.setState(0x89f0, 0x6a1a, 0xc540, 0xc57a, 0x493, 0xc266, 0x0, 0x1);
        gbc.writeMem(0x89f0, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x89f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x89f0));
        // B3 033C
        gbc.setState(0x4f26, 0x87f5, 0x1680, 0x9184, 0x1510, 0xea86, 0x0, 0x1);
        gbc.writeMem(0x4f26, { 0xb3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x87f5, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 033D
        gbc.setState(0x921d, 0xe279, 0x8f30, 0x1203, 0x8e91, 0x29e9, 0x0, 0x1);
        gbc.writeMem(0x921d, { 0xb3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x921d));
        // B3 033E
        gbc.setState(0x3266, 0x751, 0x900, 0x89b4, 0x983d, 0x9291, 0x0, 0x1);
        gbc.writeMem(0x3266, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x751, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 033F
        gbc.setState(0x64c0, 0xb66a, 0xb2b0, 0x76b1, 0xf6ed, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0x64c0, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0340
        gbc.setState(0x587e, 0x13ed, 0x80c0, 0x7aad, 0x5c77, 0x3424, 0x1, 0x1);
        gbc.writeMem(0x587e, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x13ed, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0341
        gbc.setState(0x2bac, 0xf7b, 0x1b50, 0x9ad4, 0x190e, 0xa841, 0x1, 0x1);
        gbc.writeMem(0x2bac, { 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0343
        gbc.setState(0xcfc8, 0x7219, 0x3ee0, 0xf800, 0x4557, 0xe1b6, 0x1, 0x0);
        gbc.writeMem(0xcfc8, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0xcfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcfc8));
        // B3 0344
        gbc.setState(0x48f4, 0xad4e, 0x3c50, 0x6873, 0x3909, 0xe36e, 0x1, 0x0);
        gbc.writeMem(0x48f4, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xad4e, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0345
        gbc.setState(0x29a8, 0x6e7a, 0x4d10, 0xd18b, 0xc1f6, 0x22, 0x0, 0x0);
        gbc.writeMem(0x29a8, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6e7a, gbc.sp());
        EXPECT(0x29a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0346
        gbc.setState(0x903d, 0x8983, 0xb630, 0x45df, 0xdba3, 0xbe2, 0x1, 0x0);
        gbc.writeMem(0x903d, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8983, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x903d));
        // B3 0347
        gbc.setState(0x995c, 0x6179, 0xeb90, 0x3310, 0x4a9e, 0xb905, 0x0, 0x0);
        gbc.writeMem(0x995c, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6179, gbc.sp());
        EXPECT(0x995d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x995c));
        // B3 0348
        gbc.setState(0x6854, 0xba73, 0x9af0, 0x2d83, 0x8f54, 0xe9ce, 0x0, 0x0);
        gbc.writeMem(0x6854, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xba73, gbc.sp());
        EXPECT(0x6855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0349
        gbc.setState(0xd42f, 0x2e3a, 0x5fb0, 0x4d7, 0x1080, 0x8611, 0x1, 0x1);
        gbc.writeMem(0xd42f, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2e3a, gbc.sp());
        EXPECT(0xd430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd42f));
        // B3 034A
        gbc.setState(0xd8de, 0x4abd, 0x91f0, 0x376f, 0x59cf, 0xeda4, 0x1, 0x1);
        gbc.writeMem(0xd8de, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0xd8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd8de));
        // B3 034B
        gbc.setState(0xad2a, 0xcdd7, 0x1070, 0x3d0b, 0x30bd, 0xd376, 0x1, 0x0);
        gbc.writeMem(0xad2a, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xad2a));
        // B3 034C
        gbc.setState(0x7b95, 0x27a6, 0x5660, 0x2609, 0xfad8, 0x14d0, 0x1, 0x1);
        gbc.writeMem(0x7b95, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x7b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 034D
        gbc.setState(0xe6ca, 0x9c21, 0x3170, 0x3349, 0x4fa8, 0xcc61, 0x0, 0x0);
        gbc.writeMem(0xe6ca, { 0xb3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0xe6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe6ca));
        // B3 034E
        gbc.setState(0x2f3, 0x11f, 0xb440, 0xda8c, 0x94d1, 0xdd15, 0x1, 0x0);
        gbc.writeMem(0x2f3, { 0xb3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x11f, gbc.sp());
        EXPECT(0x2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 034F
        gbc.setState(0xd4ff, 0xe4bc, 0x3400, 0x3c83, 0x2209, 0x5ba9, 0x1, 0x1);
        gbc.writeMem(0xd4ff, { 0xb3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe4bc, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd4ff));
        // B3 0350
        gbc.setState(0x1397, 0x31b0, 0xe2e0, 0x7da2, 0x1ea6, 0x87bd, 0x1, 0x1);
        gbc.writeMem(0x1397, { 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x31b0, gbc.sp());
        EXPECT(0x1398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0351
        gbc.setState(0x1192, 0x20bd, 0xafd0, 0xc266, 0x7e34, 0x2b9a, 0x1, 0x1);
        gbc.writeMem(0x1192, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x20bd, gbc.sp());
        EXPECT(0x1193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0352
        gbc.setState(0x29a3, 0xd4aa, 0xc7b0, 0x3fa0, 0x5de2, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0x29a3, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0353
        gbc.setState(0x25ed, 0x47ab, 0xe3f0, 0x3330, 0x41c1, 0xb1f4, 0x1, 0x1);
        gbc.writeMem(0x25ed, { 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x47ab, gbc.sp());
        EXPECT(0x25ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0354
        gbc.setState(0x1354, 0x70f2, 0x7860, 0xee0e, 0xe129, 0xf2b9, 0x0, 0x0);
        gbc.writeMem(0x1354, { 0xb3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x70f2, gbc.sp());
        EXPECT(0x1355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0355
        gbc.setState(0x9954, 0xbe31, 0xe8b0, 0x8a09, 0xed66, 0xfe0a, 0x0, 0x1);
        gbc.writeMem(0x9954, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbe31, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9954));
        // B3 0356
        gbc.setState(0xc543, 0x8d69, 0xcab0, 0x3c70, 0x124e, 0x64ff, 0x1, 0x1);
        gbc.writeMem(0xc543, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8d69, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc543));
        // B3 0357
        gbc.setState(0xbaa9, 0x1a6b, 0x4c00, 0xc8d3, 0xd52a, 0xdc75, 0x1, 0x1);
        gbc.writeMem(0xbaa9, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1a6b, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbaa9));
        // B3 0358
        gbc.setState(0x58e4, 0x3c34, 0x4040, 0x4ad8, 0x2fce, 0x9b79, 0x1, 0x1);
        gbc.writeMem(0x58e4, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0359
        gbc.setState(0xd4c, 0x66e1, 0x75f0, 0x4454, 0xbd3c, 0x8f2c, 0x1, 0x0);
        gbc.writeMem(0xd4c, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x66e1, gbc.sp());
        EXPECT(0xd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 035A
        gbc.setState(0x8548, 0x533e, 0xff30, 0x3ee8, 0x7c48, 0x450b, 0x0, 0x1);
        gbc.writeMem(0x8548, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x533e, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8548));
        // B3 035B
        gbc.setState(0x638b, 0xd435, 0x4070, 0xf2cb, 0xf337, 0x1e19, 0x0, 0x0);
        gbc.writeMem(0x638b, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd435, gbc.sp());
        EXPECT(0x638c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 035C
        gbc.setState(0xc878, 0xc8c3, 0xdcc0, 0x2f09, 0xdf24, 0xd50f, 0x0, 0x1);
        gbc.writeMem(0xc878, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc8c3, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc878));
        // B3 035D
        gbc.setState(0x20de, 0x244f, 0x3670, 0x6743, 0xf56f, 0x845f, 0x1, 0x0);
        gbc.writeMem(0x20de, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 035E
        gbc.setState(0xb556, 0x5b5c, 0x9830, 0xb32f, 0x618a, 0x7eb9, 0x1, 0x1);
        gbc.writeMem(0xb556, { 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xb557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb556));
        // B3 035F
        gbc.setState(0x2ee5, 0x77e9, 0xd6d0, 0x8dd0, 0xe241, 0xc18d, 0x1, 0x1);
        gbc.writeMem(0x2ee5, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0360
        gbc.setState(0xa51b, 0xdca9, 0x26f0, 0xbf6a, 0xe1d2, 0x864c, 0x1, 0x0);
        gbc.writeMem(0xa51b, { 0xb3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdca9, gbc.sp());
        EXPECT(0xa51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa51b));
        // B3 0361
        gbc.setState(0x5f88, 0xc958, 0x5020, 0x3566, 0xb5ab, 0xf78, 0x0, 0x0);
        gbc.writeMem(0x5f88, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc958, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0362
        gbc.setState(0xdc9d, 0xd1e4, 0x3e00, 0x1a8b, 0xc80f, 0x58e0, 0x1, 0x1);
        gbc.writeMem(0xdc9d, { 0xb3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdc9d));
        // B3 0363
        gbc.setState(0x61a8, 0xd49e, 0xf010, 0x471d, 0x7cdc, 0x6caf, 0x0, 0x0);
        gbc.writeMem(0x61a8, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd49e, gbc.sp());
        EXPECT(0x61a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0364
        gbc.setState(0x1295, 0xb7c9, 0xa710, 0xbf81, 0x2950, 0x3694, 0x1, 0x1);
        gbc.writeMem(0x1295, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb7c9, gbc.sp());
        EXPECT(0x1296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0365
        gbc.setState(0xb4c1, 0x1377, 0x3360, 0x156, 0x26bf, 0x3cef, 0x1, 0x0);
        gbc.writeMem(0xb4c1, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1377, gbc.sp());
        EXPECT(0xb4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb4c1));
        // B3 0366
        gbc.setState(0xadef, 0x8e1a, 0x7870, 0x4948, 0x1f10, 0xadf3, 0x0, 0x0);
        gbc.writeMem(0xadef, { 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0xadf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xadef));
        // B3 0367
        gbc.setState(0xcbe9, 0xc343, 0x7200, 0xa960, 0xa7da, 0xe141, 0x1, 0x0);
        gbc.writeMem(0xcbe9, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc343, gbc.sp());
        EXPECT(0xcbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcbe9));
        // B3 0368
        gbc.setState(0xa696, 0xd984, 0x7310, 0xaee0, 0xcbcd, 0xc044, 0x0, 0x1);
        gbc.writeMem(0xa696, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0xa697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa696));
        // B3 0369
        gbc.setState(0xbddb, 0xdb4a, 0xd120, 0x787a, 0x52d8, 0xae1c, 0x1, 0x0);
        gbc.writeMem(0xbddb, { 0xb3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0xbddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbddb));
        // B3 036A
        gbc.setState(0x9aee, 0x47d2, 0x9c10, 0xdb42, 0x3068, 0xfa2d, 0x0, 0x1);
        gbc.writeMem(0x9aee, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x47d2, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9aee));
        // B3 036B
        gbc.setState(0x581, 0x3b71, 0x6190, 0xce72, 0x52e4, 0xba7e, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 036C
        gbc.setState(0xc6fb, 0x165c, 0xf800, 0xbe20, 0xa8e0, 0xc480, 0x1, 0x1);
        gbc.writeMem(0xc6fb, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x165c, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc6fb));
        // B3 036D
        gbc.setState(0x6a7, 0x11ff, 0x8f60, 0xa9cc, 0xab6b, 0x58c1, 0x0, 0x0);
        gbc.writeMem(0x6a7, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x11ff, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 036E
        gbc.setState(0x9a63, 0x721e, 0xc2c0, 0xf0b3, 0xa27a, 0xf404, 0x1, 0x0);
        gbc.writeMem(0x9a63, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0x9a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9a63));
        // B3 036F
        gbc.setState(0x4c82, 0x4cc2, 0x6bc0, 0xd472, 0x970, 0x2230, 0x1, 0x1);
        gbc.writeMem(0x4c82, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4cc2, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0370
        gbc.setState(0x333f, 0x984b, 0xaaf0, 0xa411, 0x6bc8, 0x4b58, 0x1, 0x0);
        gbc.writeMem(0x333f, { 0xb3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x984b, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0371
        gbc.setState(0x9d7f, 0x6a3c, 0x8930, 0x5167, 0x901a, 0x4e90, 0x0, 0x1);
        gbc.writeMem(0x9d7f, { 0xb3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0x9d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9d7f));
        // B3 0372
        gbc.setState(0x811d, 0x447d, 0x46e0, 0x8eb2, 0x2272, 0x1c1a, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x811d));
        // B3 0373
        gbc.setState(0x440b, 0xf547, 0x48a0, 0xd8ea, 0x535c, 0x51b5, 0x1, 0x0);
        gbc.writeMem(0x440b, { 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0x440c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0374
        gbc.setState(0x4bb6, 0x23f2, 0xafd0, 0xff0c, 0x3e5b, 0x771f, 0x0, 0x0);
        gbc.writeMem(0x4bb6, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x23f2, gbc.sp());
        EXPECT(0x4bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0375
        gbc.setState(0xcdbe, 0xaa78, 0x5970, 0x579e, 0x1b10, 0x2a0c, 0x0, 0x1);
        gbc.writeMem(0xcdbe, { 0xb3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcdbe));
        // B3 0376
        gbc.setState(0x7766, 0xe6e8, 0x20e0, 0x1d61, 0x1173, 0xadc0, 0x0, 0x1);
        gbc.writeMem(0x7766, { 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe6e8, gbc.sp());
        EXPECT(0x7767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0377
        gbc.setState(0x6267, 0xb613, 0x60e0, 0xc61e, 0x7708, 0xbaa, 0x1, 0x0);
        gbc.writeMem(0x6267, { 0xb3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb613, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0378
        gbc.setState(0x2eaa, 0x8022, 0xdc50, 0x4277, 0xd443, 0xc84c, 0x1, 0x1);
        gbc.writeMem(0x2eaa, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8022, gbc.sp());
        EXPECT(0x2eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0379
        gbc.setState(0xc65d, 0x9987, 0x2810, 0xbf99, 0x105a, 0x2d84, 0x0, 0x0);
        gbc.writeMem(0xc65d, { 0xb3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0xc65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc65d));
        // B3 037A
        gbc.setState(0x24e2, 0x3c66, 0x65c0, 0xb10a, 0xeea4, 0x2c62, 0x1, 0x0);
        gbc.writeMem(0x24e2, { 0xb3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3c66, gbc.sp());
        EXPECT(0x24e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 037C
        gbc.setState(0xe2f, 0x9364, 0x6870, 0xe150, 0x8bc9, 0xe61c, 0x0, 0x0);
        gbc.writeMem(0xe2f, { 0xb3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 037D
        gbc.setState(0xaf40, 0x26b, 0xdd00, 0x547e, 0xff9c, 0xd39b, 0x0, 0x0);
        gbc.writeMem(0xaf40, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26b, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaf40));
        // B3 037E
        gbc.setState(0x2610, 0xf9b4, 0xfe50, 0x5f75, 0x640, 0xc0cc, 0x1, 0x1);
        gbc.writeMem(0x2610, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf9b4, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 037F
        gbc.setState(0x942a, 0x244, 0x7330, 0x8666, 0xb96, 0x9af6, 0x1, 0x0);
        gbc.writeMem(0x942a, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x244, gbc.sp());
        EXPECT(0x942b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x942a));
        // B3 0380
        gbc.setState(0xd2e, 0xe762, 0xfb20, 0x68ef, 0xd57a, 0x561b, 0x1, 0x1);
        gbc.writeMem(0xd2e, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe762, gbc.sp());
        EXPECT(0xd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0381
        gbc.setState(0x6dd2, 0x9f76, 0x8ae0, 0x4557, 0x7577, 0xa222, 0x1, 0x0);
        gbc.writeMem(0x6dd2, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0382
        gbc.setState(0x5aab, 0x6b3d, 0xb090, 0x4279, 0x1bb1, 0x5ea6, 0x1, 0x0);
        gbc.writeMem(0x5aab, { 0xb3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6b3d, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0383
        gbc.setState(0x11b7, 0x9913, 0x83b0, 0x6b4d, 0xf03d, 0xb999, 0x1, 0x0);
        gbc.writeMem(0x11b7, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9913, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0384
        gbc.setState(0x45d1, 0x7d4a, 0xfbf0, 0xafd0, 0x3e07, 0x23f1, 0x0, 0x1);
        gbc.writeMem(0x45d1, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0x45d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0385
        gbc.setState(0xbb2e, 0xe9d6, 0x2140, 0xcb9a, 0x5ed8, 0xc145, 0x0, 0x0);
        gbc.writeMem(0xbb2e, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0xbb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbb2e));
        // B3 0386
        gbc.setState(0x1a7f, 0x456b, 0x710, 0x6327, 0x85e3, 0xc9ff, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x456b, gbc.sp());
        EXPECT(0x1a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0387
        gbc.setState(0x1eb8, 0xb6f8, 0x5440, 0xc257, 0x101c, 0x5211, 0x1, 0x0);
        gbc.writeMem(0x1eb8, { 0xb3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb6f8, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0389
        gbc.setState(0x7327, 0x43b9, 0x5e30, 0x1ae1, 0xbf54, 0x47c3, 0x1, 0x0);
        gbc.writeMem(0x7327, { 0xb3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 038A
        gbc.setState(0xe345, 0x1c95, 0x7200, 0xd894, 0x5cc9, 0x72dd, 0x1, 0x0);
        gbc.writeMem(0xe345, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1c95, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe345));
        // B3 038B
        gbc.setState(0xacda, 0x8b44, 0xbda0, 0x4239, 0x8419, 0xe083, 0x0, 0x1);
        gbc.writeMem(0xacda, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xacda));
        // B3 038C
        gbc.setState(0x3a10, 0x52a1, 0x3a50, 0x8c36, 0x96d3, 0x36d2, 0x1, 0x1);
        gbc.writeMem(0x3a10, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 038D
        gbc.setState(0xd325, 0x4795, 0xf0a0, 0xdf2d, 0xf98a, 0x6fd5, 0x1, 0x0);
        gbc.writeMem(0xd325, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4795, gbc.sp());
        EXPECT(0xd326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd325));
        // B3 038E
        gbc.setState(0x6636, 0xab98, 0xbaa0, 0x9972, 0xad7d, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x6636, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xab98, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 038F
        gbc.setState(0x7fdc, 0x7872, 0xdfa0, 0x1f25, 0x60f7, 0x51db, 0x0, 0x0);
        gbc.writeMem(0x7fdc, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7872, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0390
        gbc.setState(0x6e71, 0xafd6, 0x7bd0, 0x6fe4, 0x9142, 0xb05, 0x0, 0x1);
        gbc.writeMem(0x6e71, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xafd6, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0391
        gbc.setState(0x7787, 0x72dd, 0x3330, 0x37ea, 0x4665, 0xb5f, 0x1, 0x1);
        gbc.writeMem(0x7787, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x72dd, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0392
        gbc.setState(0x66d4, 0x381a, 0x7940, 0x999d, 0xde62, 0x612d, 0x1, 0x1);
        gbc.writeMem(0x66d4, { 0xb3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0393
        gbc.setState(0x2806, 0x4f76, 0x16a0, 0xe42d, 0xee1f, 0x484b, 0x1, 0x1);
        gbc.writeMem(0x2806, { 0xb3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4f76, gbc.sp());
        EXPECT(0x2807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0394
        gbc.setState(0x91bd, 0xe778, 0xd480, 0xa218, 0xe068, 0x31c2, 0x1, 0x1);
        gbc.writeMem(0x91bd, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe778, gbc.sp());
        EXPECT(0x91be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x91bd));
        // B3 0395
        gbc.setState(0x24dc, 0x938c, 0x6810, 0xe593, 0xcea0, 0xa69f, 0x0, 0x1);
        gbc.writeMem(0x24dc, { 0xb3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x938c, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0396
        gbc.setState(0x2477, 0xc18c, 0x9260, 0x29c5, 0xe517, 0x4094, 0x1, 0x0);
        gbc.writeMem(0x2477, { 0xb3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0x2478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0397
        gbc.setState(0xe7ae, 0x810, 0x73a0, 0xf56c, 0x12ee, 0x1418, 0x0, 0x1);
        gbc.writeMem(0xe7ae, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x810, gbc.sp());
        EXPECT(0xe7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe7ae));
        // B3 0398
        gbc.setState(0x7c6b, 0xedeb, 0xcc30, 0xd387, 0x5928, 0xef15, 0x0, 0x0);
        gbc.writeMem(0x7c6b, { 0xb3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 0399
        gbc.setState(0xae01, 0xfd9a, 0x9500, 0xf5f6, 0xe13a, 0xa5cb, 0x1, 0x0);
        gbc.writeMem(0xae01, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xae01));
        // B3 039A
        gbc.setState(0x9f81, 0x7b79, 0x47f0, 0xdbb1, 0x2edb, 0x4be2, 0x1, 0x1);
        gbc.writeMem(0x9f81, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b79, gbc.sp());
        EXPECT(0x9f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9f81));
        // B3 039B
        gbc.setState(0xafe4, 0x6cbc, 0x8660, 0x4c1, 0xd4aa, 0x555c, 0x1, 0x0);
        gbc.writeMem(0xafe4, { 0xb3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xafe4));
        // B3 039C
        gbc.setState(0x2fde, 0xfa80, 0xd0a0, 0x613d, 0xb390, 0x5e2b, 0x1, 0x1);
        gbc.writeMem(0x2fde, { 0xb3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfa80, gbc.sp());
        EXPECT(0x2fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 039D
        gbc.setState(0x4a7, 0x1e95, 0x40, 0xe92, 0xd400, 0x2d1c, 0x1, 0x1);
        gbc.writeMem(0x4a7, { 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1e95, gbc.sp());
        EXPECT(0x4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 039E
        gbc.setState(0x93cb, 0x7cb0, 0xcd60, 0xba69, 0x5834, 0xec2f, 0x1, 0x1);
        gbc.writeMem(0x93cb, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7cb0, gbc.sp());
        EXPECT(0x93cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93cb));
        // B3 03A0
        gbc.setState(0x2337, 0xe633, 0x4c20, 0xb656, 0x6e3e, 0x5d63, 0x1, 0x0);
        gbc.writeMem(0x2337, { 0xb3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03A1
        gbc.setState(0x96c8, 0x7ed4, 0xa420, 0x5874, 0x5c79, 0x252e, 0x1, 0x1);
        gbc.writeMem(0x96c8, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0x96c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x96c8));
        // B3 03A2
        gbc.setState(0x8ada, 0x6958, 0xb200, 0xf11a, 0xb2c0, 0x7562, 0x1, 0x0);
        gbc.writeMem(0x8ada, { 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6958, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8ada));
        // B3 03A3
        gbc.setState(0xbcca, 0x9e31, 0x57f0, 0x4350, 0x92d8, 0xe456, 0x1, 0x0);
        gbc.writeMem(0xbcca, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9e31, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbcca));
        // B3 03A4
        gbc.setState(0xd66e, 0x2b35, 0xd120, 0x6c33, 0x474f, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0xd66e, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd66e));
        // B3 03A5
        gbc.setState(0xbaf4, 0xf90f, 0xb1c0, 0x27dd, 0xd48c, 0x5a8c, 0x0, 0x0);
        gbc.writeMem(0xbaf4, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0xbaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbaf4));
        // B3 03A6
        gbc.setState(0x86ef, 0x83c2, 0xac30, 0x8081, 0x57a, 0x34ca, 0x1, 0x1);
        gbc.writeMem(0x86ef, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x83c2, gbc.sp());
        EXPECT(0x86f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x86ef));
        // B3 03A7
        gbc.setState(0xafbe, 0x2444, 0xe6c0, 0xebe4, 0xb464, 0xc86, 0x0, 0x1);
        gbc.writeMem(0xafbe, { 0xb3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2444, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xafbe));
        // B3 03A8
        gbc.setState(0x46e5, 0x6e75, 0xa0a0, 0x637f, 0xec38, 0x2a27, 0x0, 0x1);
        gbc.writeMem(0x46e5, { 0xb3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03AA
        gbc.setState(0x6735, 0x3397, 0xbaa0, 0xbf32, 0x8d0, 0x2d58, 0x0, 0x0);
        gbc.writeMem(0x6735, { 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3397, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03AB
        gbc.setState(0x99c2, 0xe190, 0x20d0, 0x3e2f, 0x8ee1, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x99c2, { 0xb3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x99c2));
        // B3 03AC
        gbc.setState(0x430a, 0x54af, 0x4280, 0x439d, 0x7f58, 0xed8f, 0x0, 0x0);
        gbc.writeMem(0x430a, { 0xb3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x54af, gbc.sp());
        EXPECT(0x430b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03AD
        gbc.setState(0xa16, 0x97cc, 0xc5d0, 0x9095, 0xc6f7, 0xdd7a, 0x0, 0x1);
        gbc.writeMem(0xa16, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x97cc, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03AE
        gbc.setState(0x39c2, 0xca4, 0x9fd0, 0xbd5a, 0x92c8, 0x7ec0, 0x0, 0x1);
        gbc.writeMem(0x39c2, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xca4, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03AF
        gbc.setState(0x91dc, 0xfb0b, 0x8a70, 0xd332, 0x2c04, 0x3a50, 0x0, 0x1);
        gbc.writeMem(0x91dc, { 0xb3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfb0b, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x91dc));
        // B3 03B0
        gbc.setState(0xbff4, 0xd6a9, 0x4350, 0xa531, 0x779c, 0x1723, 0x1, 0x0);
        gbc.writeMem(0xbff4, { 0xb3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd6a9, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbff4));
        // B3 03B1
        gbc.setState(0x881a, 0x5ec0, 0xa70, 0xd6b8, 0x1a5f, 0x4a29, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xb3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5ec0, gbc.sp());
        EXPECT(0x881b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x881a));
        // B3 03B2
        gbc.setState(0x3679, 0x4afd, 0x1a30, 0x4a8e, 0x7788, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0x3679, { 0xb3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03B3
        gbc.setState(0x95ec, 0x64fc, 0xb680, 0xa5c3, 0xab6a, 0xac20, 0x1, 0x0);
        gbc.writeMem(0x95ec, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x64fc, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x95ec));
        // B3 03B4
        gbc.setState(0xa957, 0x277c, 0xe560, 0x725c, 0x67dd, 0xecad, 0x1, 0x0);
        gbc.writeMem(0xa957, { 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa957));
        // B3 03B5
        gbc.setState(0x7861, 0x3047, 0xe190, 0x9a99, 0x1f73, 0xc4ab, 0x1, 0x0);
        gbc.writeMem(0x7861, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3047, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03B6
        gbc.setState(0xc087, 0xd540, 0xc010, 0xf4c0, 0xa1ce, 0x7705, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0xb3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd540, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc087));
        // B3 03B7
        gbc.setState(0x2f24, 0xd185, 0xd410, 0x97f, 0xb9da, 0x9a8d, 0x0, 0x1);
        gbc.writeMem(0x2f24, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd185, gbc.sp());
        EXPECT(0x2f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03B8
        gbc.setState(0xd461, 0x218d, 0x33c0, 0x2134, 0xa1db, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0xd461, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x218d, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd461));
        // B3 03B9
        gbc.setState(0x8e81, 0x1637, 0x7b40, 0xdd08, 0x6e34, 0x6680, 0x1, 0x1);
        gbc.writeMem(0x8e81, { 0xb3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1637, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8e81));
        // B3 03BA
        gbc.setState(0x526c, 0x7bfd, 0x9da0, 0x6fea, 0x6c5d, 0x154, 0x1, 0x1);
        gbc.writeMem(0x526c, { 0xb3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0x526d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03BB
        gbc.setState(0x191a, 0xcae8, 0x8390, 0xc255, 0x1b44, 0xc18f, 0x1, 0x1);
        gbc.writeMem(0x191a, { 0xb3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x191b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03BC
        gbc.setState(0xdbff, 0xd059, 0x63e0, 0xe7a7, 0x36a5, 0x6d99, 0x1, 0x0);
        gbc.writeMem(0xdbff, { 0xb3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdbff));
        // B3 03BD
        gbc.setState(0x1b2d, 0xe92e, 0x2750, 0xdd6, 0xa16a, 0x1a07, 0x1, 0x0);
        gbc.writeMem(0x1b2d, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0x1b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03BF
        gbc.setState(0x163a, 0xc624, 0x9a30, 0xffdf, 0x4634, 0x13ae, 0x1, 0x0);
        gbc.writeMem(0x163a, { 0xb3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0x163b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03C0
        gbc.setState(0x74ac, 0x7533, 0x4c70, 0x9c4e, 0x5e9e, 0xa60e, 0x0, 0x0);
        gbc.writeMem(0x74ac, { 0xb3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7533, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03C1
        gbc.setState(0xa540, 0x7e76, 0xae70, 0xde55, 0x9058, 0x5633, 0x1, 0x0);
        gbc.writeMem(0xa540, { 0xb3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7e76, gbc.sp());
        EXPECT(0xa541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa540));
        // B3 03C2
        gbc.setState(0x660f, 0xe0e5, 0xf190, 0xd655, 0x3a28, 0x8e81, 0x0, 0x0);
        gbc.writeMem(0x660f, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03C3
        gbc.setState(0x9347, 0xd2b5, 0xce40, 0x2474, 0xed66, 0xfe0c, 0x1, 0x1);
        gbc.writeMem(0x9347, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x9348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9347));
        // B3 03C4
        gbc.setState(0x94b1, 0xd312, 0x5c30, 0x5486, 0xc394, 0x5c62, 0x1, 0x1);
        gbc.writeMem(0x94b1, { 0xb3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0x94b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x94b1));
        // B3 03C5
        gbc.setState(0x14c7, 0x5b12, 0x4630, 0xc82f, 0x5360, 0x4511, 0x0, 0x0);
        gbc.writeMem(0x14c7, { 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x14c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03C6
        gbc.setState(0xb1d7, 0x62f1, 0x31b0, 0x558b, 0xe396, 0xbff6, 0x1, 0x0);
        gbc.writeMem(0xb1d7, { 0xb3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb1d7));
        // B3 03C7
        gbc.setState(0x5286, 0x9e2b, 0xa480, 0xaf33, 0xcb6e, 0x141, 0x0, 0x1);
        gbc.writeMem(0x5286, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9e2b, gbc.sp());
        EXPECT(0x5287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03C8
        gbc.setState(0xd092, 0x2b0d, 0x4460, 0xf207, 0x3b67, 0x4e54, 0x1, 0x0);
        gbc.writeMem(0xd092, { 0xb3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2b0d, gbc.sp());
        EXPECT(0xd093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd092));
        // B3 03C9
        gbc.setState(0x772f, 0x8e83, 0x6e10, 0x686f, 0xa840, 0x2d3b, 0x0, 0x0);
        gbc.writeMem(0x772f, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8e83, gbc.sp());
        EXPECT(0x7730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03CA
        gbc.setState(0x2a1a, 0xe1ec, 0x6b50, 0x7270, 0xbedc, 0x7cad, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe1ec, gbc.sp());
        EXPECT(0x2a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03CB
        gbc.setState(0xabff, 0xebc9, 0xaec0, 0x99c9, 0x4868, 0x5730, 0x1, 0x0);
        gbc.writeMem(0xabff, { 0xb3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xabff));
        // B3 03CC
        gbc.setState(0x2dea, 0x113, 0x5d70, 0xbdc5, 0xe2a3, 0x51db, 0x0, 0x0);
        gbc.writeMem(0x2dea, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x113, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03CD
        gbc.setState(0x2b54, 0x2411, 0x4690, 0x7c5a, 0x7a97, 0xc178, 0x1, 0x0);
        gbc.writeMem(0x2b54, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03CE
        gbc.setState(0xb930, 0x6c2a, 0x2b0, 0xf2bf, 0x5e86, 0x6a36, 0x1, 0x0);
        gbc.writeMem(0xb930, { 0xb3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6c2a, gbc.sp());
        EXPECT(0xb931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb930));
        // B3 03CF
        gbc.setState(0xce2c, 0x9647, 0x1060, 0x7d98, 0x61c7, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0xce2c, { 0xb3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9647, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xce2c));
        // B3 03D0
        gbc.setState(0x4ddb, 0x91c5, 0xa530, 0xec83, 0x248d, 0xd17a, 0x0, 0x0);
        gbc.writeMem(0x4ddb, { 0xb3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x4ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03D1
        gbc.setState(0xd21e, 0xbe64, 0xce40, 0x6263, 0xa6ad, 0xa3ac, 0x1, 0x0);
        gbc.writeMem(0xd21e, { 0xb3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd21e));
        // B3 03D2
        gbc.setState(0x2902, 0xd4f8, 0x8b50, 0xb1c6, 0xfff6, 0xd166, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x2903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03D3
        gbc.setState(0xda97, 0xaa26, 0x33d0, 0xfa67, 0x4134, 0x4185, 0x1, 0x0);
        gbc.writeMem(0xda97, { 0xb3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0xda98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xda97));
        // B3 03D4
        gbc.setState(0x34a0, 0x18fb, 0xc510, 0x1f40, 0xbebf, 0xcce9, 0x1, 0x0);
        gbc.writeMem(0x34a0, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x18fb, gbc.sp());
        EXPECT(0x34a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03D5
        gbc.setState(0xc63a, 0x7a0e, 0x7880, 0x5382, 0x21e0, 0xe5ee, 0x1, 0x0);
        gbc.writeMem(0xc63a, { 0xb3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7a0e, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc63a));
        // B3 03D7
        gbc.setState(0xeaa2, 0x9ebb, 0x28e0, 0x29ee, 0xc47, 0x3f47, 0x1, 0x0);
        gbc.writeMem(0xeaa2, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9ebb, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeaa2));
        // B3 03D8
        gbc.setState(0x2338, 0xdc8b, 0x6f50, 0xe9c7, 0x3b62, 0x7103, 0x1, 0x1);
        gbc.writeMem(0x2338, { 0xb3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03D9
        gbc.setState(0x4541, 0xf658, 0xc9e0, 0x923a, 0x3c8f, 0x8aa9, 0x1, 0x0);
        gbc.writeMem(0x4541, { 0xb3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0x4542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03DA
        gbc.setState(0x914e, 0xab, 0xb430, 0xf90a, 0x9b68, 0xe411, 0x0, 0x0);
        gbc.writeMem(0x914e, { 0xb3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xab, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x914e));
        // B3 03DB
        gbc.setState(0xaf80, 0x69ab, 0x6390, 0x2ba4, 0x3a77, 0x8870, 0x0, 0x0);
        gbc.writeMem(0xaf80, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x69ab, gbc.sp());
        EXPECT(0xaf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xaf80));
        // B3 03DC
        gbc.setState(0x3ffe, 0x7a30, 0xb040, 0xb770, 0x4773, 0xc774, 0x1, 0x0);
        gbc.writeMem(0x3ffe, { 0xb3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0x3fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03DE
        gbc.setState(0x5c4a, 0x9287, 0x7910, 0x5f64, 0xd090, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x5c4a, { 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9287, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03DF
        gbc.setState(0xd01e, 0xb5db, 0xa7c0, 0x8217, 0x731c, 0x7053, 0x1, 0x1);
        gbc.writeMem(0xd01e, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd01e));
        // B3 03E0
        gbc.setState(0x6e98, 0x5207, 0xde00, 0xf25a, 0x62e7, 0x2796, 0x0, 0x1);
        gbc.writeMem(0x6e98, { 0xb3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0x6e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03E1
        gbc.setState(0xa2c8, 0x6fea, 0xad00, 0x1702, 0xe6e5, 0xde5, 0x1, 0x0);
        gbc.writeMem(0xa2c8, { 0xb3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6fea, gbc.sp());
        EXPECT(0xa2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa2c8));
        // B3 03E2
        gbc.setState(0xa83c, 0x7709, 0x7380, 0xbf94, 0x3401, 0xb52, 0x1, 0x0);
        gbc.writeMem(0xa83c, { 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7709, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa83c));
        // B3 03E3
        gbc.setState(0x8a92, 0x77d4, 0x12c0, 0x2033, 0x8e65, 0x27dc, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0xb3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x77d4, gbc.sp());
        EXPECT(0x8a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8a92));
        // B3 03E4
        gbc.setState(0x100f, 0x8c34, 0x4a20, 0x94d, 0xd026, 0x163a, 0x1, 0x1);
        gbc.writeMem(0x100f, { 0xb3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8c34, gbc.sp());
        EXPECT(0x1010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03E5
        gbc.setState(0x3b73, 0x4f55, 0xb810, 0x645b, 0xcc83, 0xa8c2, 0x1, 0x0);
        gbc.writeMem(0x3b73, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x3b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B3 03E6
        gbc.setState(0x6251, 0x79f6, 0x3170, 0xe819, 0xf56c, 0x16f7, 0x1, 0x0);
        gbc.writeMem(0x6251, { 0xb3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x79f6, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
