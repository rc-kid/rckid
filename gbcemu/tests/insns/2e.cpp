#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_2e)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_2e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2E 0000
        gbc.setState(0xd109, 0x626e, 0x55e0, 0xfc8d, 0xec7b, 0x5753, 0x0, 0x1);
        gbc.writeMem(0xd109, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0xd10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd109), 0x2e);
        EXPECT(gbc.readMem(0xd10a), 0xd7);
        // 2E 0001
        gbc.setState(0x49af, 0xaca5, 0x77a0, 0x7803, 0xc67d, 0xdda9, 0x0, 0x1);
        gbc.writeMem(0x49af, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaca5);
        EXPECT(gbc.pc(), 0x49b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0002
        gbc.setState(0xe57b, 0x4f02, 0x3b20, 0xf37, 0x6e50, 0xb7a8, 0x0, 0x1);
        gbc.writeMem(0xe57b, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4f02);
        EXPECT(gbc.pc(), 0xe57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57b), 0x2e);
        EXPECT(gbc.readMem(0xe57c), 0x8b);
        // 2E 0003
        gbc.setState(0x2ee8, 0xa3a5, 0xb220, 0xe66f, 0xfd2d, 0xe6c9, 0x0, 0x0);
        gbc.writeMem(0x2ee8, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa3a5);
        EXPECT(gbc.pc(), 0x2eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0004
        gbc.setState(0xb3b8, 0xf0c6, 0x9710, 0x15d1, 0x4250, 0x6141, 0x1, 0x1);
        gbc.writeMem(0xb3b8, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf0c6);
        EXPECT(gbc.pc(), 0xb3ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b8), 0x2e);
        EXPECT(gbc.readMem(0xb3b9), 0xb6);
        // 2E 0005
        gbc.setState(0x621a, 0xdd66, 0xa490, 0x1bf6, 0x83d1, 0xed7a, 0x0, 0x1);
        gbc.writeMem(0x621a, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdd66);
        EXPECT(gbc.pc(), 0x621c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0006
        gbc.setState(0x7672, 0x1f2c, 0xb3d0, 0x8e63, 0x706c, 0xcf4, 0x0, 0x0);
        gbc.writeMem(0x7672, { 0x2e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1f2c);
        EXPECT(gbc.pc(), 0x7674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0007
        gbc.setState(0x7c2e, 0xb7d1, 0x2a00, 0xc907, 0xfa5f, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0x7c2e, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb7d1);
        EXPECT(gbc.pc(), 0x7c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0008
        gbc.setState(0xef75, 0xf05a, 0x8090, 0x6ce6, 0xf416, 0x78cb, 0x1, 0x1);
        gbc.writeMem(0xef75, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf05a);
        EXPECT(gbc.pc(), 0xef77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef75), 0x2e);
        EXPECT(gbc.readMem(0xef76), 0x23);
        // 2E 0009
        gbc.setState(0xd344, 0xbfa6, 0xcb10, 0x49d9, 0xdb4a, 0xf1f8, 0x0, 0x1);
        gbc.writeMem(0xd344, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbfa6);
        EXPECT(gbc.pc(), 0xd346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd344), 0x2e);
        EXPECT(gbc.readMem(0xd345), 0xeb);
        // 2E 000A
        gbc.setState(0xe208, 0x59e9, 0xe9e0, 0x7c44, 0xdd8c, 0x6c72, 0x1, 0x0);
        gbc.writeMem(0xe208, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x59e9);
        EXPECT(gbc.pc(), 0xe20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe208), 0x2e);
        EXPECT(gbc.readMem(0xe209), 0x37);
        // 2E 000B
        gbc.setState(0xa571, 0xfbaa, 0x3b60, 0xe44b, 0x282a, 0x2cb5, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0x2e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfbaa);
        EXPECT(gbc.pc(), 0xa573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa571), 0x2e);
        EXPECT(gbc.readMem(0xa572), 0xa);
        // 2E 000C
        gbc.setState(0xe493, 0x9099, 0x940, 0xfa78, 0x39a6, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xe493, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe493), 0x2e);
        EXPECT(gbc.readMem(0xe494), 0x4);
        // 2E 000D
        gbc.setState(0x23d6, 0xffad, 0x4620, 0x4e8e, 0xa37c, 0x3de3, 0x0, 0x1);
        gbc.writeMem(0x23d6, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xffad);
        EXPECT(gbc.pc(), 0x23d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 000E
        gbc.setState(0x3bfd, 0xc74f, 0xe280, 0x28ad, 0x40e4, 0xb158, 0x0, 0x1);
        gbc.writeMem(0x3bfd, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0x3bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0011
        gbc.setState(0xd2a1, 0x99a6, 0xea70, 0x74b4, 0x60fb, 0x1b6, 0x0, 0x1);
        gbc.writeMem(0xd2a1, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x99a6);
        EXPECT(gbc.pc(), 0xd2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a1), 0x2e);
        EXPECT(gbc.readMem(0xd2a2), 0xa5);
        // 2E 0012
        gbc.setState(0x620d, 0x15b9, 0x69b0, 0xac5, 0xc7f, 0x5814, 0x0, 0x0);
        gbc.writeMem(0x620d, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x15b9);
        EXPECT(gbc.pc(), 0x620f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0013
        gbc.setState(0xd098, 0x81b7, 0x900, 0x6eab, 0xff1e, 0x590b, 0x1, 0x1);
        gbc.writeMem(0xd098, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x81b7);
        EXPECT(gbc.pc(), 0xd09a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd098), 0x2e);
        EXPECT(gbc.readMem(0xd099), 0x40);
        // 2E 0014
        gbc.setState(0x6433, 0xcec1, 0x7940, 0xd002, 0x4816, 0xc0ab, 0x1, 0x1);
        gbc.writeMem(0x6433, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcec1);
        EXPECT(gbc.pc(), 0x6435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0015
        gbc.setState(0x2d64, 0x7228, 0x9480, 0x9edf, 0xf91c, 0x7d0d, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7228);
        EXPECT(gbc.pc(), 0x2d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0016
        gbc.setState(0xa7f3, 0xd1ee, 0x4750, 0xa8e3, 0xa9e2, 0xbfd6, 0x1, 0x0);
        gbc.writeMem(0xa7f3, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd1ee);
        EXPECT(gbc.pc(), 0xa7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f3), 0x2e);
        EXPECT(gbc.readMem(0xa7f4), 0xbf);
        // 2E 0017
        gbc.setState(0xcb5, 0xafe1, 0xcba0, 0x776e, 0xbe17, 0x2a7a, 0x1, 0x0);
        gbc.writeMem(0xcb5, { 0x2e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xafe1);
        EXPECT(gbc.pc(), 0xcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0018
        gbc.setState(0x915f, 0xec85, 0x2410, 0x7add, 0xa970, 0x3461, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xec85);
        EXPECT(gbc.pc(), 0x9161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915f), 0x2e);
        EXPECT(gbc.readMem(0x9160), 0x54);
        // 2E 0019
        gbc.setState(0xde70, 0x2f57, 0x20c0, 0x5875, 0xd9e5, 0xa517, 0x0, 0x1);
        gbc.writeMem(0xde70, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0xde72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde70), 0x2e);
        EXPECT(gbc.readMem(0xde71), 0x7f);
        // 2E 001A
        gbc.setState(0x3d2, 0x343e, 0xf190, 0xd505, 0xd208, 0x7a3c, 0x0, 0x1);
        gbc.writeMem(0x3d2, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x343e);
        EXPECT(gbc.pc(), 0x3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 001B
        gbc.setState(0xd5c8, 0xc150, 0x3a90, 0xc63a, 0x5efa, 0x5b3c, 0x1, 0x0);
        gbc.writeMem(0xd5c8, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc150);
        EXPECT(gbc.pc(), 0xd5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c8), 0x2e);
        EXPECT(gbc.readMem(0xd5c9), 0xc3);
        // 2E 001C
        gbc.setState(0x79c7, 0xe1a7, 0x7610, 0x6a6, 0x54bb, 0xb564, 0x0, 0x1);
        gbc.writeMem(0x79c7, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe1a7);
        EXPECT(gbc.pc(), 0x79c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 001D
        gbc.setState(0x744e, 0x6d95, 0xc730, 0xf0e2, 0xa6bb, 0xeb41, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6d95);
        EXPECT(gbc.pc(), 0x7450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 001E
        gbc.setState(0xe358, 0x2e6a, 0xfc0, 0x6a43, 0xa213, 0xbdc0, 0x0, 0x1);
        gbc.writeMem(0xe358, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2e6a);
        EXPECT(gbc.pc(), 0xe35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe358), 0x2e);
        EXPECT(gbc.readMem(0xe359), 0x68);
        // 2E 001F
        gbc.setState(0x3771, 0xec38, 0x4610, 0x3ada, 0xe7c1, 0xe9c8, 0x0, 0x0);
        gbc.writeMem(0x3771, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xec38);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0020
        gbc.setState(0x2031, 0x7c77, 0x2e60, 0x541c, 0x56ba, 0xa795, 0x0, 0x0);
        gbc.writeMem(0x2031, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7c77);
        EXPECT(gbc.pc(), 0x2033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0021
        gbc.setState(0x4d69, 0x19f8, 0xdaf0, 0xeb4f, 0xc57a, 0xda2a, 0x0, 0x1);
        gbc.writeMem(0x4d69, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x19f8);
        EXPECT(gbc.pc(), 0x4d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0022
        gbc.setState(0xc6ab, 0xb04e, 0x9ab0, 0x4d1d, 0x1dc7, 0x890d, 0x0, 0x0);
        gbc.writeMem(0xc6ab, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb04e);
        EXPECT(gbc.pc(), 0xc6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ab), 0x2e);
        EXPECT(gbc.readMem(0xc6ac), 0x43);
        // 2E 0023
        gbc.setState(0x3f7a, 0xbce9, 0x1ea0, 0x6822, 0xf65e, 0x608, 0x1, 0x0);
        gbc.writeMem(0x3f7a, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbce9);
        EXPECT(gbc.pc(), 0x3f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0024
        gbc.setState(0xb41e, 0x2961, 0x3800, 0x2eb, 0x5e28, 0xfae4, 0x0, 0x0);
        gbc.writeMem(0xb41e, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2961);
        EXPECT(gbc.pc(), 0xb420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41e), 0x2e);
        EXPECT(gbc.readMem(0xb41f), 0x7a);
        // 2E 0025
        gbc.setState(0xb4bd, 0x975b, 0xe590, 0x31b9, 0xd516, 0x5ba4, 0x0, 0x1);
        gbc.writeMem(0xb4bd, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x975b);
        EXPECT(gbc.pc(), 0xb4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bd), 0x2e);
        EXPECT(gbc.readMem(0xb4be), 0x93);
        // 2E 0026
        gbc.setState(0x9a1f, 0xf5a1, 0x5f20, 0xa81f, 0x7536, 0xd9c4, 0x0, 0x0);
        gbc.writeMem(0x9a1f, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf5a1);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1f), 0x2e);
        EXPECT(gbc.readMem(0x9a20), 0x4b);
        // 2E 0027
        gbc.setState(0x5191, 0xd3ee, 0xb9d0, 0x907f, 0x69da, 0x7814, 0x1, 0x1);
        gbc.writeMem(0x5191, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0028
        gbc.setState(0xa896, 0xfc96, 0x9350, 0xbf4, 0x742a, 0xa4e9, 0x1, 0x1);
        gbc.writeMem(0xa896, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfc96);
        EXPECT(gbc.pc(), 0xa898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa896), 0x2e);
        EXPECT(gbc.readMem(0xa897), 0x90);
        // 2E 0029
        gbc.setState(0xaba3, 0x5256, 0x6a20, 0x71dd, 0x736c, 0xd346, 0x1, 0x0);
        gbc.writeMem(0xaba3, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5256);
        EXPECT(gbc.pc(), 0xaba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba3), 0x2e);
        EXPECT(gbc.readMem(0xaba4), 0x53);
        // 2E 002A
        gbc.setState(0xda46, 0xa4d, 0xea60, 0xcef6, 0xb5c9, 0x94e9, 0x1, 0x1);
        gbc.writeMem(0xda46, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa4d);
        EXPECT(gbc.pc(), 0xda48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda46), 0x2e);
        EXPECT(gbc.readMem(0xda47), 0xe9);
        // 2E 002B
        gbc.setState(0xdc2c, 0xa591, 0x58c0, 0xebb7, 0xcccb, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xdc2c, { 0x2e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa591);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2c), 0x2e);
        EXPECT(gbc.readMem(0xdc2d), 0xf8);
        // 2E 002C
        gbc.setState(0xda4a, 0x1f9c, 0x77a0, 0x10bd, 0x3c00, 0xc264, 0x1, 0x1);
        gbc.writeMem(0xda4a, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1f9c);
        EXPECT(gbc.pc(), 0xda4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4a), 0x2e);
        EXPECT(gbc.readMem(0xda4b), 0xa4);
        // 2E 002D
        gbc.setState(0x3bf7, 0xcc94, 0xeb20, 0xff4f, 0xa2ab, 0x822, 0x1, 0x1);
        gbc.writeMem(0x3bf7, { 0x2e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcc94);
        EXPECT(gbc.pc(), 0x3bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 002E
        gbc.setState(0x872e, 0x2f54, 0x6250, 0x26c1, 0x6eaf, 0xaa46, 0x0, 0x0);
        gbc.writeMem(0x872e, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2f54);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872e), 0x2e);
        EXPECT(gbc.readMem(0x872f), 0x50);
        // 2E 002F
        gbc.setState(0xaa44, 0x69ca, 0x4e10, 0x8c7c, 0xb30c, 0x2501, 0x0, 0x0);
        gbc.writeMem(0xaa44, { 0x2e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x69ca);
        EXPECT(gbc.pc(), 0xaa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa44), 0x2e);
        EXPECT(gbc.readMem(0xaa45), 0xe4);
        // 2E 0030
        gbc.setState(0xd540, 0x5bd, 0x5480, 0xe70e, 0x249c, 0x8319, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5bd);
        EXPECT(gbc.pc(), 0xd542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd540), 0x2e);
        EXPECT(gbc.readMem(0xd541), 0x7);
        // 2E 0031
        gbc.setState(0x84f2, 0xc5c2, 0x6a50, 0xce58, 0xba59, 0x5231, 0x1, 0x1);
        gbc.writeMem(0x84f2, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc5c2);
        EXPECT(gbc.pc(), 0x84f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f2), 0x2e);
        EXPECT(gbc.readMem(0x84f3), 0xc1);
        // 2E 0032
        gbc.setState(0x1d0a, 0xc002, 0xc870, 0xdfa6, 0x8ecf, 0x7581, 0x0, 0x1);
        gbc.writeMem(0x1d0a, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc002);
        EXPECT(gbc.pc(), 0x1d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0033
        gbc.setState(0xd0c2, 0xcdf9, 0x7520, 0x5eee, 0x39e1, 0xb76d, 0x0, 0x0);
        gbc.writeMem(0xd0c2, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcdf9);
        EXPECT(gbc.pc(), 0xd0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c2), 0x2e);
        EXPECT(gbc.readMem(0xd0c3), 0x6b);
        // 2E 0034
        gbc.setState(0x1591, 0x7123, 0xbd90, 0x86bb, 0x84ba, 0xc1dc, 0x1, 0x1);
        gbc.writeMem(0x1591, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7123);
        EXPECT(gbc.pc(), 0x1593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0035
        gbc.setState(0x85e4, 0x6857, 0x7470, 0xa2f5, 0x112a, 0x2d73, 0x0, 0x1);
        gbc.writeMem(0x85e4, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6857);
        EXPECT(gbc.pc(), 0x85e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e4), 0x2e);
        EXPECT(gbc.readMem(0x85e5), 0x61);
        // 2E 0036
        gbc.setState(0xc45c, 0x877, 0x8140, 0xdea6, 0x84fb, 0x8b70, 0x1, 0x1);
        gbc.writeMem(0xc45c, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x877);
        EXPECT(gbc.pc(), 0xc45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45c), 0x2e);
        EXPECT(gbc.readMem(0xc45d), 0xa7);
        // 2E 0037
        gbc.setState(0x4f3e, 0x942a, 0x6830, 0x4b3c, 0xb1c0, 0x2c86, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x942a);
        EXPECT(gbc.pc(), 0x4f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0038
        gbc.setState(0x4eac, 0xb223, 0xbba0, 0x70d0, 0x8552, 0xcd11, 0x0, 0x0);
        gbc.writeMem(0x4eac, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb223);
        EXPECT(gbc.pc(), 0x4eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0039
        gbc.setState(0x2f5f, 0x5880, 0x5d30, 0xd3ed, 0x3f25, 0xf637, 0x0, 0x1);
        gbc.writeMem(0x2f5f, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5880);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 003A
        gbc.setState(0xde60, 0xb6a6, 0x9090, 0x875d, 0xfb98, 0xf938, 0x1, 0x0);
        gbc.writeMem(0xde60, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb6a6);
        EXPECT(gbc.pc(), 0xde62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde60), 0x2e);
        EXPECT(gbc.readMem(0xde61), 0x8b);
        // 2E 003B
        gbc.setState(0x5e40, 0x4906, 0xb80, 0xb58a, 0x4518, 0x33f5, 0x0, 0x1);
        gbc.writeMem(0x5e40, { 0x2e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4906);
        EXPECT(gbc.pc(), 0x5e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 003C
        gbc.setState(0x4b35, 0xddc3, 0x84a0, 0xafa1, 0x54ab, 0x165c, 0x1, 0x1);
        gbc.writeMem(0x4b35, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xddc3);
        EXPECT(gbc.pc(), 0x4b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 003D
        gbc.setState(0x5f02, 0x1984, 0x1630, 0xf390, 0x5212, 0x5c32, 0x0, 0x1);
        gbc.writeMem(0x5f02, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1984);
        EXPECT(gbc.pc(), 0x5f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 003E
        gbc.setState(0xd8fb, 0x232, 0xd110, 0xc79b, 0xaeea, 0xc42c, 0x0, 0x0);
        gbc.writeMem(0xd8fb, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x232);
        EXPECT(gbc.pc(), 0xd8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8fb), 0x2e);
        EXPECT(gbc.readMem(0xd8fc), 0x45);
        // 2E 003F
        gbc.setState(0xa067, 0x9432, 0x1be0, 0x40b3, 0x628a, 0xc6ab, 0x1, 0x0);
        gbc.writeMem(0xa067, { 0x2e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9432);
        EXPECT(gbc.pc(), 0xa069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa067), 0x2e);
        EXPECT(gbc.readMem(0xa068), 0x44);
        // 2E 0040
        gbc.setState(0x14a8, 0xcb66, 0x69c0, 0xdb1, 0x2e61, 0x362a, 0x1, 0x1);
        gbc.writeMem(0x14a8, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcb66);
        EXPECT(gbc.pc(), 0x14aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0042
        gbc.setState(0x6fce, 0x2e40, 0x7710, 0x6ccf, 0x9ef1, 0x4fd, 0x0, 0x1);
        gbc.writeMem(0x6fce, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2e40);
        EXPECT(gbc.pc(), 0x6fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0043
        gbc.setState(0xdca3, 0xa6e1, 0x29b0, 0x1eba, 0x5fb9, 0x4c46, 0x1, 0x1);
        gbc.writeMem(0xdca3, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa6e1);
        EXPECT(gbc.pc(), 0xdca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca3), 0x2e);
        EXPECT(gbc.readMem(0xdca4), 0x66);
        // 2E 0044
        gbc.setState(0x90b5, 0x6ce0, 0x12a0, 0xb33f, 0x4f64, 0x42bf, 0x1, 0x1);
        gbc.writeMem(0x90b5, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6ce0);
        EXPECT(gbc.pc(), 0x90b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b5), 0x2e);
        EXPECT(gbc.readMem(0x90b6), 0x40);
        // 2E 0045
        gbc.setState(0x9bc1, 0xa3e3, 0x96d0, 0x3eaa, 0x2248, 0x10e9, 0x1, 0x0);
        gbc.writeMem(0x9bc1, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa3e3);
        EXPECT(gbc.pc(), 0x9bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc1), 0x2e);
        EXPECT(gbc.readMem(0x9bc2), 0xb0);
        // 2E 0046
        gbc.setState(0xb0a, 0x2ef2, 0x3970, 0x7edd, 0xbd9e, 0x8741, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2ef2);
        EXPECT(gbc.pc(), 0xb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0047
        gbc.setState(0xe0e4, 0xbadf, 0xf110, 0xe594, 0x1d45, 0x594f, 0x0, 0x1);
        gbc.writeMem(0xe0e4, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbadf);
        EXPECT(gbc.pc(), 0xe0e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e4), 0x2e);
        EXPECT(gbc.readMem(0xe0e5), 0xc1);
        // 2E 0048
        gbc.setState(0x49d5, 0xc8c5, 0xd8b0, 0x596f, 0x79bc, 0x3a67, 0x0, 0x1);
        gbc.writeMem(0x49d5, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc8c5);
        EXPECT(gbc.pc(), 0x49d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0049
        gbc.setState(0x7ffb, 0x2766, 0x7b10, 0x901, 0x3ca4, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x7ffb, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2766);
        EXPECT(gbc.pc(), 0x7ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 004A
        gbc.setState(0x698f, 0x5ae4, 0xcd00, 0xc5c9, 0x219e, 0x5c8a, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0x2e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5ae4);
        EXPECT(gbc.pc(), 0x6991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 004C
        gbc.setState(0x660d, 0xc1d8, 0x4ef0, 0x6ca9, 0xda23, 0xb423, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc1d8);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 004D
        gbc.setState(0x5fb2, 0x8559, 0x7730, 0xda17, 0x98b1, 0x9041, 0x0, 0x0);
        gbc.writeMem(0x5fb2, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8559);
        EXPECT(gbc.pc(), 0x5fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 004E
        gbc.setState(0xbedf, 0x84cb, 0xac30, 0x2888, 0x5815, 0x4bf4, 0x1, 0x0);
        gbc.writeMem(0xbedf, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x84cb);
        EXPECT(gbc.pc(), 0xbee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedf), 0x2e);
        EXPECT(gbc.readMem(0xbee0), 0x8f);
        // 2E 004F
        gbc.setState(0x59bd, 0x368b, 0xd3b0, 0x7b5e, 0x7c3d, 0x5067, 0x0, 0x1);
        gbc.writeMem(0x59bd, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x368b);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0050
        gbc.setState(0xab5e, 0x9a7f, 0xd280, 0x72f7, 0x5a9c, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0xab5e, { 0x2e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9a7f);
        EXPECT(gbc.pc(), 0xab60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5e), 0x2e);
        EXPECT(gbc.readMem(0xab5f), 0xea);
        // 2E 0051
        gbc.setState(0x77ac, 0x5166, 0x3320, 0xe5d4, 0x7f64, 0x4098, 0x0, 0x1);
        gbc.writeMem(0x77ac, { 0x2e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5166);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0052
        gbc.setState(0x9ef, 0x3b93, 0x4b80, 0x989a, 0xae70, 0x2450, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0x2e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3b93);
        EXPECT(gbc.pc(), 0x9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0053
        gbc.setState(0xba1e, 0x3ec5, 0x9900, 0x7d39, 0x7c1, 0xa9b4, 0x0, 0x1);
        gbc.writeMem(0xba1e, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3ec5);
        EXPECT(gbc.pc(), 0xba20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1e), 0x2e);
        EXPECT(gbc.readMem(0xba1f), 0x4d);
        // 2E 0054
        gbc.setState(0x791b, 0x8afb, 0xf870, 0x7f39, 0xce61, 0xdca3, 0x0, 0x1);
        gbc.writeMem(0x791b, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8afb);
        EXPECT(gbc.pc(), 0x791d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0055
        gbc.setState(0x3873, 0xaa28, 0x4cc0, 0xcf58, 0x156a, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0x3873, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa28);
        EXPECT(gbc.pc(), 0x3875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0056
        gbc.setState(0x8293, 0xf225, 0x6f40, 0xbe1, 0xe6b4, 0x4577, 0x1, 0x0);
        gbc.writeMem(0x8293, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf225);
        EXPECT(gbc.pc(), 0x8295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8293), 0x2e);
        EXPECT(gbc.readMem(0x8294), 0x2a);
        // 2E 0057
        gbc.setState(0xab15, 0x16bc, 0xe830, 0x338d, 0xe4ef, 0xe41f, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0x2e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x16bc);
        EXPECT(gbc.pc(), 0xab17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab15), 0x2e);
        EXPECT(gbc.readMem(0xab16), 0xaa);
        // 2E 0058
        gbc.setState(0xb5ee, 0xf6c3, 0x3e20, 0x6e53, 0xab99, 0x8b3, 0x0, 0x0);
        gbc.writeMem(0xb5ee, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf6c3);
        EXPECT(gbc.pc(), 0xb5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ee), 0x2e);
        EXPECT(gbc.readMem(0xb5ef), 0xb3);
        // 2E 0059
        gbc.setState(0xd192, 0x79a7, 0x9c70, 0xda6d, 0x2153, 0x61ac, 0x0, 0x1);
        gbc.writeMem(0xd192, { 0x2e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x79a7);
        EXPECT(gbc.pc(), 0xd194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd192), 0x2e);
        EXPECT(gbc.readMem(0xd193), 0xe);
        // 2E 005A
        gbc.setState(0x98d, 0xa46c, 0xd4a0, 0x7e02, 0xf439, 0x195d, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa46c);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 005B
        gbc.setState(0xd62b, 0xf29, 0x1190, 0x975c, 0xa6b, 0xf04f, 0x0, 0x1);
        gbc.writeMem(0xd62b, { 0x2e, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf29);
        EXPECT(gbc.pc(), 0xd62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62b), 0x2e);
        EXPECT(gbc.readMem(0xd62c), 0xb);
        // 2E 005C
        gbc.setState(0xcf8b, 0x4d36, 0x6960, 0x8001, 0xa9b3, 0xee7f, 0x1, 0x1);
        gbc.writeMem(0xcf8b, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4d36);
        EXPECT(gbc.pc(), 0xcf8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8b), 0x2e);
        EXPECT(gbc.readMem(0xcf8c), 0x95);
        // 2E 005D
        gbc.setState(0xb77c, 0x88c7, 0x6f50, 0x8513, 0xeb86, 0xa08c, 0x1, 0x0);
        gbc.writeMem(0xb77c, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x88c7);
        EXPECT(gbc.pc(), 0xb77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77c), 0x2e);
        EXPECT(gbc.readMem(0xb77d), 0xd5);
        // 2E 005E
        gbc.setState(0x2d04, 0xfbf6, 0x100, 0xedb0, 0x8150, 0xa492, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfbf6);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 005F
        gbc.setState(0x6bfa, 0xa338, 0xd6a0, 0xb20f, 0x55d, 0x1610, 0x0, 0x0);
        gbc.writeMem(0x6bfa, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa338);
        EXPECT(gbc.pc(), 0x6bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0060
        gbc.setState(0x2b4d, 0xd1b2, 0x1c50, 0xedeb, 0xdbf6, 0xad9a, 0x1, 0x0);
        gbc.writeMem(0x2b4d, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0061
        gbc.setState(0x757c, 0xe698, 0xcdc0, 0x8740, 0xe90b, 0x3387, 0x0, 0x0);
        gbc.writeMem(0x757c, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe698);
        EXPECT(gbc.pc(), 0x757e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0062
        gbc.setState(0x6e09, 0xffc0, 0xf20, 0x735b, 0xf65d, 0xcae4, 0x0, 0x1);
        gbc.writeMem(0x6e09, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xffc0);
        EXPECT(gbc.pc(), 0x6e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0063
        gbc.setState(0x3969, 0x7e31, 0x4e60, 0x3dc5, 0x8c10, 0x5f7a, 0x0, 0x1);
        gbc.writeMem(0x3969, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7e31);
        EXPECT(gbc.pc(), 0x396b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0064
        gbc.setState(0xd01a, 0x972f, 0x8a40, 0xbdb, 0x155f, 0xc6c6, 0x1, 0x1);
        gbc.writeMem(0xd01a, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x972f);
        EXPECT(gbc.pc(), 0xd01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01a), 0x2e);
        EXPECT(gbc.readMem(0xd01b), 0x9c);
        // 2E 0065
        gbc.setState(0xdc4e, 0x2b29, 0x2780, 0x8e75, 0x9128, 0xf678, 0x0, 0x0);
        gbc.writeMem(0xdc4e, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2b29);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4e), 0x2e);
        EXPECT(gbc.readMem(0xdc4f), 0x5a);
        // 2E 0066
        gbc.setState(0xea80, 0xa659, 0x28e0, 0x52b5, 0x36af, 0x869e, 0x0, 0x1);
        gbc.writeMem(0xea80, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa659);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea80), 0x2e);
        EXPECT(gbc.readMem(0xea81), 0xd7);
        // 2E 0067
        gbc.setState(0x6d97, 0xf57e, 0x1780, 0x316a, 0x3928, 0x8537, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf57e);
        EXPECT(gbc.pc(), 0x6d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0068
        gbc.setState(0xecad, 0x1c36, 0xce10, 0xc0ce, 0xb439, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0xecad, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1c36);
        EXPECT(gbc.pc(), 0xecaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecad), 0x2e);
        EXPECT(gbc.readMem(0xecae), 0x74);
        // 2E 0069
        gbc.setState(0x5cfd, 0x620e, 0xea50, 0xf27f, 0x8a8f, 0xb6d4, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x620e);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 006A
        gbc.setState(0x9bf8, 0x353a, 0x1e50, 0x7af1, 0x2d40, 0x8739, 0x1, 0x0);
        gbc.writeMem(0x9bf8, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x353a);
        EXPECT(gbc.pc(), 0x9bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf8), 0x2e);
        EXPECT(gbc.readMem(0x9bf9), 0x99);
        // 2E 006B
        gbc.setState(0x6d89, 0x6353, 0x8d80, 0xe678, 0xa0cb, 0xfd4c, 0x0, 0x0);
        gbc.writeMem(0x6d89, { 0x2e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6353);
        EXPECT(gbc.pc(), 0x6d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 006C
        gbc.setState(0xb82, 0x8113, 0x38a0, 0xd887, 0x24b2, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0xb82, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8113);
        EXPECT(gbc.pc(), 0xb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 006D
        gbc.setState(0x4973, 0xfee6, 0x56f0, 0xf3da, 0x5a0, 0xcd90, 0x0, 0x0);
        gbc.writeMem(0x4973, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfee6);
        EXPECT(gbc.pc(), 0x4975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 006E
        gbc.setState(0x4a62, 0x3ea, 0x4b80, 0xf8a1, 0x8446, 0x9652, 0x0, 0x1);
        gbc.writeMem(0x4a62, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3ea);
        EXPECT(gbc.pc(), 0x4a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 006F
        gbc.setState(0xbef9, 0xd99d, 0xd430, 0xf19a, 0x8412, 0x92c5, 0x0, 0x0);
        gbc.writeMem(0xbef9, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd99d);
        EXPECT(gbc.pc(), 0xbefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef9), 0x2e);
        EXPECT(gbc.readMem(0xbefa), 0x24);
        // 2E 0070
        gbc.setState(0xc688, 0x9ca4, 0x9290, 0x6be, 0xf609, 0x145a, 0x0, 0x1);
        gbc.writeMem(0xc688, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9ca4);
        EXPECT(gbc.pc(), 0xc68a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc688), 0x2e);
        EXPECT(gbc.readMem(0xc689), 0xa3);
        // 2E 0071
        gbc.setState(0x352a, 0xbbd3, 0xcb60, 0x8682, 0x6ef2, 0x6bdb, 0x1, 0x0);
        gbc.writeMem(0x352a, { 0x2e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbbd3);
        EXPECT(gbc.pc(), 0x352c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0072
        gbc.setState(0x504a, 0x94cc, 0xf2c0, 0xcec6, 0xc017, 0x3fd6, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x94cc);
        EXPECT(gbc.pc(), 0x504c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0073
        gbc.setState(0x3818, 0x680e, 0x5dc0, 0xf9a4, 0x3d54, 0xb1e2, 0x0, 0x0);
        gbc.writeMem(0x3818, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x680e);
        EXPECT(gbc.pc(), 0x381a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0074
        gbc.setState(0x2c29, 0xab58, 0x98d0, 0xed42, 0x8864, 0xa3b6, 0x1, 0x1);
        gbc.writeMem(0x2c29, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xab58);
        EXPECT(gbc.pc(), 0x2c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0075
        gbc.setState(0x9283, 0x861c, 0xf3b0, 0x5903, 0xa813, 0x6d99, 0x1, 0x1);
        gbc.writeMem(0x9283, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x861c);
        EXPECT(gbc.pc(), 0x9285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9283), 0x2e);
        EXPECT(gbc.readMem(0x9284), 0xb6);
        // 2E 0076
        gbc.setState(0xdb2d, 0xb7be, 0x5240, 0xc788, 0x4127, 0x98b, 0x0, 0x1);
        gbc.writeMem(0xdb2d, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb7be);
        EXPECT(gbc.pc(), 0xdb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2d), 0x2e);
        EXPECT(gbc.readMem(0xdb2e), 0x5e);
        // 2E 0077
        gbc.setState(0x994d, 0xf4e1, 0xdce0, 0x3f52, 0x5bd1, 0x25c2, 0x0, 0x1);
        gbc.writeMem(0x994d, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0x994f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994d), 0x2e);
        EXPECT(gbc.readMem(0x994e), 0xb2);
        // 2E 0078
        gbc.setState(0x55b9, 0x738d, 0xf0f0, 0xf37, 0xffe5, 0x274a, 0x1, 0x0);
        gbc.writeMem(0x55b9, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x738d);
        EXPECT(gbc.pc(), 0x55bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0079
        gbc.setState(0x91b6, 0x9316, 0x4ed0, 0xab5, 0x6ba, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x91b6, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9316);
        EXPECT(gbc.pc(), 0x91b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b6), 0x2e);
        EXPECT(gbc.readMem(0x91b7), 0x7a);
        // 2E 007A
        gbc.setState(0x790a, 0xc512, 0xfb00, 0xf8e1, 0x5303, 0xdf9, 0x0, 0x1);
        gbc.writeMem(0x790a, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc512);
        EXPECT(gbc.pc(), 0x790c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 007B
        gbc.setState(0xdb00, 0x6acc, 0xf4b0, 0xdf8b, 0x8c7c, 0xea9a, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0x2e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6acc);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb00), 0x2e);
        EXPECT(gbc.readMem(0xdb01), 0xee);
        // 2E 007C
        gbc.setState(0x398a, 0xef83, 0xae30, 0x50ec, 0xc2b8, 0x3512, 0x1, 0x1);
        gbc.writeMem(0x398a, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 007D
        gbc.setState(0xcfb2, 0x4c8f, 0x2630, 0xdafe, 0x8c99, 0xda3a, 0x0, 0x0);
        gbc.writeMem(0xcfb2, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4c8f);
        EXPECT(gbc.pc(), 0xcfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb2), 0x2e);
        EXPECT(gbc.readMem(0xcfb3), 0x2d);
        // 2E 007E
        gbc.setState(0xcbf0, 0xcafa, 0x5aa0, 0x2fef, 0x1ef3, 0x7dd2, 0x0, 0x1);
        gbc.writeMem(0xcbf0, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcafa);
        EXPECT(gbc.pc(), 0xcbf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf0), 0x2e);
        EXPECT(gbc.readMem(0xcbf1), 0xd6);
        // 2E 007F
        gbc.setState(0x744a, 0x51dd, 0x3270, 0xbb2b, 0xe0c7, 0xf9e8, 0x0, 0x0);
        gbc.writeMem(0x744a, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x51dd);
        EXPECT(gbc.pc(), 0x744c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0080
        gbc.setState(0xd9cf, 0xad77, 0xf340, 0x7fb7, 0x3608, 0xcde5, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xad77);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cf), 0x2e);
        EXPECT(gbc.readMem(0xd9d0), 0xe9);
        // 2E 0081
        gbc.setState(0x91c, 0x4936, 0x51d0, 0xa94b, 0xcd6c, 0x4bcb, 0x0, 0x0);
        gbc.writeMem(0x91c, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4936);
        EXPECT(gbc.pc(), 0x91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0082
        gbc.setState(0x8eef, 0xbb7d, 0xf150, 0x4996, 0xa258, 0x62a1, 0x1, 0x0);
        gbc.writeMem(0x8eef, { 0x2e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbb7d);
        EXPECT(gbc.pc(), 0x8ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eef), 0x2e);
        EXPECT(gbc.readMem(0x8ef0), 0xb9);
        // 2E 0083
        gbc.setState(0x534b, 0xd464, 0xefa0, 0x2a9, 0x7316, 0xdde5, 0x1, 0x1);
        gbc.writeMem(0x534b, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd464);
        EXPECT(gbc.pc(), 0x534d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0084
        gbc.setState(0xec75, 0x11b5, 0xbd40, 0x6672, 0xfffd, 0xe88, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x11b5);
        EXPECT(gbc.pc(), 0xec77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec75), 0x2e);
        EXPECT(gbc.readMem(0xec76), 0x63);
        // 2E 0085
        gbc.setState(0x1e0a, 0x9d70, 0x1780, 0x6cd0, 0x84eb, 0x84, 0x0, 0x1);
        gbc.writeMem(0x1e0a, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9d70);
        EXPECT(gbc.pc(), 0x1e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0086
        gbc.setState(0x598c, 0x77c4, 0x6a0, 0x2dd0, 0x5e74, 0x5083, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x77c4);
        EXPECT(gbc.pc(), 0x598e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0087
        gbc.setState(0x1c0a, 0x17d5, 0xcdf0, 0x6267, 0xcdd, 0xb97, 0x0, 0x0);
        gbc.writeMem(0x1c0a, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x17d5);
        EXPECT(gbc.pc(), 0x1c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0088
        gbc.setState(0x3d1d, 0x6cf6, 0x4660, 0x6a9b, 0x8b05, 0x8b3e, 0x1, 0x0);
        gbc.writeMem(0x3d1d, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6cf6);
        EXPECT(gbc.pc(), 0x3d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0089
        gbc.setState(0x9133, 0xcfb5, 0x9c00, 0x95b0, 0x8b1a, 0x5b5d, 0x0, 0x1);
        gbc.writeMem(0x9133, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcfb5);
        EXPECT(gbc.pc(), 0x9135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9133), 0x2e);
        EXPECT(gbc.readMem(0x9134), 0x67);
        // 2E 008A
        gbc.setState(0xc1ae, 0x8c3e, 0xd590, 0x7f7e, 0xe5ae, 0xf628, 0x1, 0x1);
        gbc.writeMem(0xc1ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0xc1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ae), 0x2e);
        EXPECT(gbc.readMem(0xc1af), 0x19);
        // 2E 008B
        gbc.setState(0x2b58, 0xa6dd, 0x3d50, 0xdbc8, 0xdfda, 0x6164, 0x1, 0x1);
        gbc.writeMem(0x2b58, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0x2b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 008C
        gbc.setState(0xbebd, 0xbf94, 0x4710, 0xc2ac, 0x480e, 0xdde9, 0x0, 0x0);
        gbc.writeMem(0xbebd, { 0x2e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbf94);
        EXPECT(gbc.pc(), 0xbebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebd), 0x2e);
        EXPECT(gbc.readMem(0xbebe), 0x9d);
        // 2E 008D
        gbc.setState(0x2934, 0x514b, 0x9960, 0x216f, 0xcc85, 0x5322, 0x0, 0x1);
        gbc.writeMem(0x2934, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x514b);
        EXPECT(gbc.pc(), 0x2936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 008E
        gbc.setState(0x3c09, 0x7e05, 0x46f0, 0x585a, 0x7cb0, 0x3f25, 0x1, 0x1);
        gbc.writeMem(0x3c09, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7e05);
        EXPECT(gbc.pc(), 0x3c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 008F
        gbc.setState(0x6dc1, 0x709d, 0x5ae0, 0xf1be, 0x3bd3, 0x9114, 0x0, 0x0);
        gbc.writeMem(0x6dc1, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x709d);
        EXPECT(gbc.pc(), 0x6dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0090
        gbc.setState(0xbba, 0x16f1, 0x9840, 0xd5aa, 0xcd66, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0xbba, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x16f1);
        EXPECT(gbc.pc(), 0xbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0091
        gbc.setState(0x3155, 0x666a, 0x4e40, 0x1aa7, 0x3ae7, 0x433c, 0x1, 0x1);
        gbc.writeMem(0x3155, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x666a);
        EXPECT(gbc.pc(), 0x3157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0092
        gbc.setState(0x2272, 0x43d3, 0xb470, 0xae8c, 0x10f8, 0x504a, 0x1, 0x1);
        gbc.writeMem(0x2272, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x43d3);
        EXPECT(gbc.pc(), 0x2274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0093
        gbc.setState(0x1dfd, 0x6e42, 0xb2f0, 0xe5ae, 0xa76f, 0xaf6d, 0x0, 0x0);
        gbc.writeMem(0x1dfd, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6e42);
        EXPECT(gbc.pc(), 0x1dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0094
        gbc.setState(0xaa8b, 0xb055, 0x5e50, 0x76d0, 0x7c6, 0x674f, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb055);
        EXPECT(gbc.pc(), 0xaa8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8b), 0x2e);
        EXPECT(gbc.readMem(0xaa8c), 0x24);
        // 2E 0095
        gbc.setState(0x9211, 0xc8bc, 0xc270, 0x3974, 0x70e5, 0x913, 0x0, 0x0);
        gbc.writeMem(0x9211, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0x9213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9211), 0x2e);
        EXPECT(gbc.readMem(0x9212), 0xe2);
        // 2E 0096
        gbc.setState(0xdce7, 0x42c4, 0xb150, 0xf8d3, 0xe1d2, 0xb8a7, 0x0, 0x1);
        gbc.writeMem(0xdce7, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x42c4);
        EXPECT(gbc.pc(), 0xdce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce7), 0x2e);
        EXPECT(gbc.readMem(0xdce8), 0x69);
        // 2E 0097
        gbc.setState(0xab72, 0xc5c3, 0x6e50, 0x5ff5, 0xf5c8, 0x63b7, 0x1, 0x1);
        gbc.writeMem(0xab72, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc5c3);
        EXPECT(gbc.pc(), 0xab74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab72), 0x2e);
        EXPECT(gbc.readMem(0xab73), 0x68);
        // 2E 0098
        gbc.setState(0xd660, 0x4512, 0xa900, 0xf194, 0x66b4, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0xd660, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4512);
        EXPECT(gbc.pc(), 0xd662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd660), 0x2e);
        EXPECT(gbc.readMem(0xd661), 0xb7);
        // 2E 0099
        gbc.setState(0xe2d2, 0x7a0, 0xc1a0, 0x2c55, 0xfee7, 0x7973, 0x0, 0x0);
        gbc.writeMem(0xe2d2, { 0x2e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7a0);
        EXPECT(gbc.pc(), 0xe2d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d2), 0x2e);
        EXPECT(gbc.readMem(0xe2d3), 0xab);
        // 2E 009A
        gbc.setState(0xe132, 0xd762, 0x7ee0, 0xaa87, 0x5b3c, 0xe28d, 0x0, 0x0);
        gbc.writeMem(0xe132, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0xe134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe132), 0x2e);
        EXPECT(gbc.readMem(0xe133), 0x5b);
        // 2E 009B
        gbc.setState(0x76d8, 0xda5a, 0xc8f0, 0x12bf, 0x3c83, 0x526d, 0x0, 0x1);
        gbc.writeMem(0x76d8, { 0x2e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xda5a);
        EXPECT(gbc.pc(), 0x76da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 009C
        gbc.setState(0xc7dd, 0xd277, 0xdbc0, 0xe430, 0x1e73, 0x2d0a, 0x0, 0x1);
        gbc.writeMem(0xc7dd, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0xc7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7dd), 0x2e);
        EXPECT(gbc.readMem(0xc7de), 0xf7);
        // 2E 009D
        gbc.setState(0x8211, 0x8669, 0x7c50, 0xd7df, 0x74c8, 0x3b5e, 0x0, 0x1);
        gbc.writeMem(0x8211, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8669);
        EXPECT(gbc.pc(), 0x8213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8211), 0x2e);
        EXPECT(gbc.readMem(0x8212), 0x71);
        // 2E 009E
        gbc.setState(0x8c13, 0x14d9, 0x7ad0, 0xc1c2, 0xd107, 0xb400, 0x1, 0x0);
        gbc.writeMem(0x8c13, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x14d9);
        EXPECT(gbc.pc(), 0x8c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c13), 0x2e);
        EXPECT(gbc.readMem(0x8c14), 0x3a);
        // 2E 009F
        gbc.setState(0x7e0e, 0xd1e9, 0x480, 0xf1d1, 0x934b, 0x2ded, 0x1, 0x0);
        gbc.writeMem(0x7e0e, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd1e9);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00A0
        gbc.setState(0x566d, 0x1243, 0xc440, 0x2175, 0xae63, 0x3c99, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0x2e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1243);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00A1
        gbc.setState(0x62d3, 0xbb6a, 0xede0, 0xa937, 0x1f2e, 0x8ce1, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbb6a);
        EXPECT(gbc.pc(), 0x62d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00A2
        gbc.setState(0x889, 0x614f, 0x87b0, 0x155c, 0xb7f2, 0x3c6a, 0x0, 0x0);
        gbc.writeMem(0x889, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x614f);
        EXPECT(gbc.pc(), 0x88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00A3
        gbc.setState(0xc228, 0x93c9, 0x44f0, 0x76a1, 0x9d51, 0x5969, 0x1, 0x0);
        gbc.writeMem(0xc228, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x93c9);
        EXPECT(gbc.pc(), 0xc22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc228), 0x2e);
        EXPECT(gbc.readMem(0xc229), 0x19);
        // 2E 00A4
        gbc.setState(0xef1d, 0x7367, 0x9200, 0x5e6b, 0xced6, 0xf30c, 0x1, 0x1);
        gbc.writeMem(0xef1d, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7367);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1d), 0x2e);
        EXPECT(gbc.readMem(0xef1e), 0xc2);
        // 2E 00A5
        gbc.setState(0x8bef, 0x391c, 0x60d0, 0x5f59, 0x84b1, 0x168, 0x1, 0x0);
        gbc.writeMem(0x8bef, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x391c);
        EXPECT(gbc.pc(), 0x8bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bef), 0x2e);
        EXPECT(gbc.readMem(0x8bf0), 0xa3);
        // 2E 00A6
        gbc.setState(0x1c43, 0xf024, 0x6af0, 0xd841, 0xd7f5, 0x265e, 0x1, 0x1);
        gbc.writeMem(0x1c43, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf024);
        EXPECT(gbc.pc(), 0x1c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00A7
        gbc.setState(0x6171, 0x4126, 0xd130, 0xb343, 0x2dee, 0xcb12, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4126);
        EXPECT(gbc.pc(), 0x6173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00A9
        gbc.setState(0x13ff, 0xa2e6, 0x3c60, 0xbcea, 0x8fc2, 0xba95, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa2e6);
        EXPECT(gbc.pc(), 0x1401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00AA
        gbc.setState(0x5e5d, 0x49c6, 0x63a0, 0x8e76, 0xfed3, 0x3e18, 0x0, 0x1);
        gbc.writeMem(0x5e5d, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x49c6);
        EXPECT(gbc.pc(), 0x5e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00AB
        gbc.setState(0x1ae4, 0x2851, 0xd670, 0xd1b2, 0xb885, 0xc59d, 0x0, 0x0);
        gbc.writeMem(0x1ae4, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2851);
        EXPECT(gbc.pc(), 0x1ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00AC
        gbc.setState(0xdcd2, 0x666b, 0xcfa0, 0x1a8a, 0xc1e1, 0x52ea, 0x0, 0x1);
        gbc.writeMem(0xdcd2, { 0x2e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x666b);
        EXPECT(gbc.pc(), 0xdcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd2), 0x2e);
        EXPECT(gbc.readMem(0xdcd3), 0x18);
        // 2E 00AD
        gbc.setState(0x3190, 0x7c89, 0x5a80, 0x2553, 0xfe1c, 0x8ad, 0x0, 0x1);
        gbc.writeMem(0x3190, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7c89);
        EXPECT(gbc.pc(), 0x3192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00AE
        gbc.setState(0x1cba, 0x35fa, 0xf500, 0x410c, 0xb12d, 0x649e, 0x0, 0x1);
        gbc.writeMem(0x1cba, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x35fa);
        EXPECT(gbc.pc(), 0x1cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00B0
        gbc.setState(0x5f62, 0x9d91, 0x89b0, 0x168d, 0xe506, 0xe66d, 0x1, 0x1);
        gbc.writeMem(0x5f62, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9d91);
        EXPECT(gbc.pc(), 0x5f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00B1
        gbc.setState(0x7e12, 0xea94, 0xe380, 0xc123, 0x1e89, 0x1374, 0x1, 0x0);
        gbc.writeMem(0x7e12, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xea94);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00B2
        gbc.setState(0x5485, 0xa4fc, 0xd4c0, 0xada1, 0x29d1, 0x2aa9, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa4fc);
        EXPECT(gbc.pc(), 0x5487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00B3
        gbc.setState(0x775, 0xc959, 0x8130, 0x930c, 0x909f, 0x5964, 0x1, 0x0);
        gbc.writeMem(0x775, { 0x2e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc959);
        EXPECT(gbc.pc(), 0x777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00B4
        gbc.setState(0x851a, 0x9c73, 0xf6a0, 0x9523, 0xc08a, 0x2c, 0x1, 0x1);
        gbc.writeMem(0x851a, { 0x2e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9c73);
        EXPECT(gbc.pc(), 0x851c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851a), 0x2e);
        EXPECT(gbc.readMem(0x851b), 0x56);
        // 2E 00B5
        gbc.setState(0xced4, 0xc9c6, 0x6ff0, 0xd531, 0x6752, 0x146b, 0x0, 0x1);
        gbc.writeMem(0xced4, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc9c6);
        EXPECT(gbc.pc(), 0xced6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced4), 0x2e);
        EXPECT(gbc.readMem(0xced5), 0x94);
        // 2E 00B6
        gbc.setState(0xa9c3, 0xb2a, 0x9c00, 0xa412, 0x423e, 0xf613, 0x0, 0x0);
        gbc.writeMem(0xa9c3, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb2a);
        EXPECT(gbc.pc(), 0xa9c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c3), 0x2e);
        EXPECT(gbc.readMem(0xa9c4), 0xbb);
        // 2E 00B8
        gbc.setState(0x5bfa, 0x4581, 0x7990, 0xfbb6, 0xce8f, 0xdfcb, 0x1, 0x0);
        gbc.writeMem(0x5bfa, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4581);
        EXPECT(gbc.pc(), 0x5bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00B9
        gbc.setState(0x1f86, 0x45d, 0x5580, 0xb615, 0x447f, 0x7ff6, 0x0, 0x1);
        gbc.writeMem(0x1f86, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x45d);
        EXPECT(gbc.pc(), 0x1f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00BA
        gbc.setState(0x2a3e, 0x770c, 0x9010, 0x52b8, 0xe093, 0x653b, 0x1, 0x0);
        gbc.writeMem(0x2a3e, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x770c);
        EXPECT(gbc.pc(), 0x2a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00BB
        gbc.setState(0x45a3, 0x8dd1, 0x4ee0, 0xa6de, 0xbc5d, 0xa8f3, 0x0, 0x1);
        gbc.writeMem(0x45a3, { 0x2e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8dd1);
        EXPECT(gbc.pc(), 0x45a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00BC
        gbc.setState(0x73a1, 0x2b34, 0xb0a0, 0xb039, 0x9ef2, 0x65db, 0x1, 0x1);
        gbc.writeMem(0x73a1, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2b34);
        EXPECT(gbc.pc(), 0x73a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00BD
        gbc.setState(0x9e24, 0xe7c5, 0x7760, 0xe570, 0x62af, 0x376b, 0x0, 0x0);
        gbc.writeMem(0x9e24, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x9e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e24), 0x2e);
        EXPECT(gbc.readMem(0x9e25), 0x4b);
        // 2E 00BE
        gbc.setState(0x2ce3, 0x70, 0x6e20, 0x3515, 0x453f, 0xfe13, 0x0, 0x0);
        gbc.writeMem(0x2ce3, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x70);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00BF
        gbc.setState(0x28db, 0x44b5, 0x410, 0x72c, 0x9783, 0xb1cd, 0x1, 0x1);
        gbc.writeMem(0x28db, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x44b5);
        EXPECT(gbc.pc(), 0x28dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00C0
        gbc.setState(0x2d60, 0x51aa, 0x2380, 0xe8f1, 0x8610, 0x2e89, 0x1, 0x0);
        gbc.writeMem(0x2d60, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x51aa);
        EXPECT(gbc.pc(), 0x2d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00C1
        gbc.setState(0xe3f5, 0x770c, 0x3d00, 0xebbe, 0x2f73, 0xfe55, 0x0, 0x1);
        gbc.writeMem(0xe3f5, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x770c);
        EXPECT(gbc.pc(), 0xe3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f5), 0x2e);
        EXPECT(gbc.readMem(0xe3f6), 0x7e);
        // 2E 00C2
        gbc.setState(0x1648, 0x7e2, 0x6c20, 0x86bc, 0xb7da, 0x33a6, 0x0, 0x0);
        gbc.writeMem(0x1648, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7e2);
        EXPECT(gbc.pc(), 0x164a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00C3
        gbc.setState(0x839d, 0x17f7, 0x74b0, 0x2ff4, 0xc2f9, 0xc3e5, 0x1, 0x1);
        gbc.writeMem(0x839d, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x839f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839d), 0x2e);
        EXPECT(gbc.readMem(0x839e), 0x10);
        // 2E 00C4
        gbc.setState(0x1fa7, 0x8b42, 0x1860, 0xe947, 0xcf5a, 0xaa2b, 0x0, 0x1);
        gbc.writeMem(0x1fa7, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8b42);
        EXPECT(gbc.pc(), 0x1fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00C5
        gbc.setState(0x1026, 0x9f9e, 0xf480, 0x5832, 0x5826, 0x9c41, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0x1028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00C6
        gbc.setState(0x9daa, 0x3020, 0x4490, 0xe27a, 0x56a9, 0x1918, 0x0, 0x0);
        gbc.writeMem(0x9daa, { 0x2e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3020);
        EXPECT(gbc.pc(), 0x9dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9daa), 0x2e);
        EXPECT(gbc.readMem(0x9dab), 0xce);
        // 2E 00C7
        gbc.setState(0xc1d3, 0x98e1, 0x5d50, 0xde6, 0x7e6a, 0x78b5, 0x0, 0x0);
        gbc.writeMem(0xc1d3, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x98e1);
        EXPECT(gbc.pc(), 0xc1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d3), 0x2e);
        EXPECT(gbc.readMem(0xc1d4), 0x6c);
        // 2E 00C8
        gbc.setState(0xbbc, 0x2528, 0xa150, 0x4819, 0x31d8, 0x981d, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2528);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00C9
        gbc.setState(0x6163, 0x44f7, 0x2e60, 0x734c, 0xfaae, 0x799f, 0x0, 0x0);
        gbc.writeMem(0x6163, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x44f7);
        EXPECT(gbc.pc(), 0x6165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00CA
        gbc.setState(0xb0bc, 0xfa9c, 0xcee0, 0xa24b, 0x69fa, 0xf378, 0x1, 0x0);
        gbc.writeMem(0xb0bc, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfa9c);
        EXPECT(gbc.pc(), 0xb0be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0bc), 0x2e);
        EXPECT(gbc.readMem(0xb0bd), 0x73);
        // 2E 00CB
        gbc.setState(0x7537, 0x899b, 0xe540, 0x7d71, 0x6e35, 0x786a, 0x0, 0x1);
        gbc.writeMem(0x7537, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x899b);
        EXPECT(gbc.pc(), 0x7539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00CC
        gbc.setState(0xe92a, 0x774, 0xdb90, 0x6e4e, 0x3ade, 0xaab6, 0x1, 0x1);
        gbc.writeMem(0xe92a, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x774);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92a), 0x2e);
        EXPECT(gbc.readMem(0xe92b), 0x1f);
        // 2E 00CD
        gbc.setState(0x88ec, 0xc0a9, 0xf530, 0x2725, 0x9b38, 0x53e4, 0x0, 0x0);
        gbc.writeMem(0x88ec, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc0a9);
        EXPECT(gbc.pc(), 0x88ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ec), 0x2e);
        EXPECT(gbc.readMem(0x88ed), 0x0);
        // 2E 00CE
        gbc.setState(0xac9e, 0x421e, 0x4780, 0xac80, 0xa7d2, 0x87ed, 0x1, 0x1);
        gbc.writeMem(0xac9e, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x421e);
        EXPECT(gbc.pc(), 0xaca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9e), 0x2e);
        EXPECT(gbc.readMem(0xac9f), 0xb5);
        // 2E 00CF
        gbc.setState(0x15c9, 0x1186, 0xd450, 0x62f7, 0x3968, 0x6a76, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0x2e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1186);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00D0
        gbc.setState(0xe11b, 0xb5ef, 0x9e00, 0xd8c, 0x1a5a, 0x238d, 0x0, 0x1);
        gbc.writeMem(0xe11b, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb5ef);
        EXPECT(gbc.pc(), 0xe11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11b), 0x2e);
        EXPECT(gbc.readMem(0xe11c), 0xfe);
        // 2E 00D1
        gbc.setState(0x6feb, 0x66e6, 0x5380, 0x5b98, 0x3fa2, 0xc550, 0x1, 0x0);
        gbc.writeMem(0x6feb, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0x6fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00D2
        gbc.setState(0xd867, 0xf635, 0xeab0, 0x5d07, 0xd7fa, 0x8fa5, 0x0, 0x0);
        gbc.writeMem(0xd867, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf635);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd867), 0x2e);
        EXPECT(gbc.readMem(0xd868), 0xfd);
        // 2E 00D3
        gbc.setState(0x9746, 0x8c91, 0xe950, 0x5da1, 0xea10, 0x91af, 0x1, 0x0);
        gbc.writeMem(0x9746, { 0x2e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8c91);
        EXPECT(gbc.pc(), 0x9748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9746), 0x2e);
        EXPECT(gbc.readMem(0x9747), 0x65);
        // 2E 00D4
        gbc.setState(0x262d, 0xc8c0, 0xef70, 0xd2a2, 0xf0f4, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0x262d, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc8c0);
        EXPECT(gbc.pc(), 0x262f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00D5
        gbc.setState(0x3a6e, 0x623, 0xce70, 0x9a3f, 0x100a, 0xb89, 0x0, 0x1);
        gbc.writeMem(0x3a6e, { 0x2e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x623);
        EXPECT(gbc.pc(), 0x3a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00D6
        gbc.setState(0xd83f, 0xb4d4, 0x3600, 0x5394, 0x8dfa, 0x45c4, 0x0, 0x1);
        gbc.writeMem(0xd83f, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb4d4);
        EXPECT(gbc.pc(), 0xd841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83f), 0x2e);
        EXPECT(gbc.readMem(0xd840), 0x1c);
        // 2E 00D7
        gbc.setState(0x6b78, 0xed38, 0x76e0, 0xd30a, 0xae15, 0x2a8c, 0x1, 0x0);
        gbc.writeMem(0x6b78, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xed38);
        EXPECT(gbc.pc(), 0x6b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00D8
        gbc.setState(0x343e, 0xd33d, 0xe300, 0xc694, 0xaa3c, 0x66f3, 0x1, 0x1);
        gbc.writeMem(0x343e, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd33d);
        EXPECT(gbc.pc(), 0x3440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00D9
        gbc.setState(0x1966, 0x1453, 0x5ab0, 0x7c08, 0xa8b2, 0xa4a4, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1453);
        EXPECT(gbc.pc(), 0x1968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00DA
        gbc.setState(0xe7f3, 0x2d2c, 0x390, 0x97ed, 0x2630, 0x9dee, 0x1, 0x0);
        gbc.writeMem(0xe7f3, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2d2c);
        EXPECT(gbc.pc(), 0xe7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f3), 0x2e);
        EXPECT(gbc.readMem(0xe7f4), 0x7e);
        // 2E 00DB
        gbc.setState(0x1a05, 0xe9bb, 0x3ea0, 0xca98, 0x7636, 0xf0e6, 0x0, 0x1);
        gbc.writeMem(0x1a05, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe9bb);
        EXPECT(gbc.pc(), 0x1a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00DC
        gbc.setState(0x42a, 0x64d5, 0x6910, 0xe307, 0xa0ec, 0x238b, 0x1, 0x1);
        gbc.writeMem(0x42a, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x64d5);
        EXPECT(gbc.pc(), 0x42c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00DD
        gbc.setState(0x9970, 0x1d26, 0x8b60, 0x101b, 0x712e, 0x960b, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1d26);
        EXPECT(gbc.pc(), 0x9972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9970), 0x2e);
        EXPECT(gbc.readMem(0x9971), 0x11);
        // 2E 00DE
        gbc.setState(0x8e3b, 0x49bd, 0x790, 0xbeb1, 0xbb4, 0x62a5, 0x0, 0x1);
        gbc.writeMem(0x8e3b, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x49bd);
        EXPECT(gbc.pc(), 0x8e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3b), 0x2e);
        EXPECT(gbc.readMem(0x8e3c), 0xa8);
        // 2E 00DF
        gbc.setState(0x8a33, 0xa222, 0x6cd0, 0x16ca, 0x7c24, 0xf125, 0x0, 0x1);
        gbc.writeMem(0x8a33, { 0x2e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa222);
        EXPECT(gbc.pc(), 0x8a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a33), 0x2e);
        EXPECT(gbc.readMem(0x8a34), 0x27);
        // 2E 00E0
        gbc.setState(0xeaca, 0x9440, 0x4bd0, 0xbb51, 0x2d5d, 0x4407, 0x0, 0x0);
        gbc.writeMem(0xeaca, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9440);
        EXPECT(gbc.pc(), 0xeacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaca), 0x2e);
        EXPECT(gbc.readMem(0xeacb), 0xdb);
        // 2E 00E1
        gbc.setState(0x7368, 0x2d46, 0x1900, 0x4b9c, 0xa2c1, 0xff72, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2d46);
        EXPECT(gbc.pc(), 0x736a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00E2
        gbc.setState(0x2d16, 0xc043, 0x70d0, 0xe9ce, 0xad0a, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x2d16, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc043);
        EXPECT(gbc.pc(), 0x2d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00E3
        gbc.setState(0x8be0, 0x30cf, 0x72e0, 0x42c3, 0x53a, 0x1715, 0x0, 0x1);
        gbc.writeMem(0x8be0, { 0x2e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x30cf);
        EXPECT(gbc.pc(), 0x8be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be0), 0x2e);
        EXPECT(gbc.readMem(0x8be1), 0xec);
        // 2E 00E4
        gbc.setState(0x15b5, 0x43e, 0xaef0, 0xd59f, 0x4cd5, 0x839b, 0x1, 0x0);
        gbc.writeMem(0x15b5, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x43e);
        EXPECT(gbc.pc(), 0x15b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00E6
        gbc.setState(0xab66, 0xa6da, 0x5690, 0xd2d1, 0x8fab, 0x413b, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa6da);
        EXPECT(gbc.pc(), 0xab68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab66), 0x2e);
        EXPECT(gbc.readMem(0xab67), 0x2e);
        // 2E 00E7
        gbc.setState(0x7769, 0xb6a2, 0xf030, 0x6ad8, 0x83e9, 0xebc5, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb6a2);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00E8
        gbc.setState(0x2d53, 0x903d, 0xa4a0, 0xbdd1, 0xc458, 0x82f5, 0x0, 0x0);
        gbc.writeMem(0x2d53, { 0x2e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x903d);
        EXPECT(gbc.pc(), 0x2d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00E9
        gbc.setState(0x9851, 0xe1d5, 0xb820, 0x48f9, 0xbd14, 0xdce, 0x0, 0x1);
        gbc.writeMem(0x9851, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe1d5);
        EXPECT(gbc.pc(), 0x9853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9851), 0x2e);
        EXPECT(gbc.readMem(0x9852), 0xa3);
        // 2E 00EA
        gbc.setState(0xd9c0, 0xfae2, 0x130, 0xa429, 0x5ddb, 0x68c, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfae2);
        EXPECT(gbc.pc(), 0xd9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c0), 0x2e);
        EXPECT(gbc.readMem(0xd9c1), 0x2c);
        // 2E 00EB
        gbc.setState(0x22f3, 0x7d0a, 0x9170, 0x698f, 0x37cf, 0x216b, 0x0, 0x1);
        gbc.writeMem(0x22f3, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7d0a);
        EXPECT(gbc.pc(), 0x22f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00EC
        gbc.setState(0x2715, 0xdd1c, 0x40e0, 0xb534, 0x3afa, 0x3f01, 0x0, 0x1);
        gbc.writeMem(0x2715, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x2717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00ED
        gbc.setState(0x50e1, 0xfeb3, 0x2000, 0xbe50, 0xd6d9, 0x2548, 0x0, 0x0);
        gbc.writeMem(0x50e1, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0x50e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00EE
        gbc.setState(0x3d79, 0x29f2, 0x4860, 0xfae0, 0x78fd, 0x85ba, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x29f2);
        EXPECT(gbc.pc(), 0x3d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00EF
        gbc.setState(0xcafb, 0xe675, 0x4910, 0x86f4, 0x5466, 0x708, 0x0, 0x1);
        gbc.writeMem(0xcafb, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe675);
        EXPECT(gbc.pc(), 0xcafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafb), 0x2e);
        EXPECT(gbc.readMem(0xcafc), 0x81);
        // 2E 00F0
        gbc.setState(0x28af, 0x23f7, 0xcf80, 0xb36f, 0x223, 0xc14f, 0x0, 0x0);
        gbc.writeMem(0x28af, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x23f7);
        EXPECT(gbc.pc(), 0x28b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 00F2
        gbc.setState(0x958a, 0x71e0, 0xa830, 0x54cb, 0xe3e6, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x958a, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x71e0);
        EXPECT(gbc.pc(), 0x958c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958a), 0x2e);
        EXPECT(gbc.readMem(0x958b), 0x4);
        // 2E 00F3
        gbc.setState(0x2e12, 0x6efe, 0x2210, 0xc308, 0x8518, 0xdd3c, 0x0, 0x0);
        gbc.writeMem(0x2e12, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6efe);
        EXPECT(gbc.pc(), 0x2e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 00F4
        gbc.setState(0x4972, 0x77e1, 0xe720, 0xce03, 0xb02f, 0x5b67, 0x1, 0x0);
        gbc.writeMem(0x4972, { 0x2e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x77e1);
        EXPECT(gbc.pc(), 0x4974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00F5
        gbc.setState(0x431b, 0xfa8a, 0x67b0, 0x89b1, 0x1a2b, 0x3049, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfa8a);
        EXPECT(gbc.pc(), 0x431d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00F6
        gbc.setState(0x879f, 0xbe72, 0xca0, 0x6135, 0xb8f0, 0x10ce, 0x0, 0x0);
        gbc.writeMem(0x879f, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbe72);
        EXPECT(gbc.pc(), 0x87a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879f), 0x2e);
        EXPECT(gbc.readMem(0x87a0), 0xe1);
        // 2E 00F7
        gbc.setState(0x1326, 0xe42b, 0x5a0, 0x7d2e, 0x3e08, 0xfa1d, 0x0, 0x1);
        gbc.writeMem(0x1326, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe42b);
        EXPECT(gbc.pc(), 0x1328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00F8
        gbc.setState(0x3f43, 0x5f0, 0x74f0, 0x599d, 0x60a5, 0xf3ed, 0x0, 0x0);
        gbc.writeMem(0x3f43, { 0x2e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5f0);
        EXPECT(gbc.pc(), 0x3f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00F9
        gbc.setState(0x461e, 0xe8c, 0xf2e0, 0x6482, 0xa9b, 0x5e6e, 0x1, 0x1);
        gbc.writeMem(0x461e, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe8c);
        EXPECT(gbc.pc(), 0x4620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00FA
        gbc.setState(0x4158, 0x53b, 0x3770, 0xe2a, 0xc922, 0xd091, 0x1, 0x0);
        gbc.writeMem(0x4158, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x53b);
        EXPECT(gbc.pc(), 0x415a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00FB
        gbc.setState(0x38ec, 0xf46e, 0xd20, 0x8aa3, 0x3435, 0xe7bd, 0x0, 0x1);
        gbc.writeMem(0x38ec, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf46e);
        EXPECT(gbc.pc(), 0x38ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 00FC
        gbc.setState(0x9429, 0xd570, 0x84c0, 0xbd91, 0xead0, 0x6f69, 0x1, 0x1);
        gbc.writeMem(0x9429, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd570);
        EXPECT(gbc.pc(), 0x942b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9429), 0x2e);
        EXPECT(gbc.readMem(0x942a), 0xb4);
        // 2E 00FD
        gbc.setState(0x181c, 0x171e, 0x34b0, 0x258a, 0x1dae, 0x5b33, 0x1, 0x0);
        gbc.writeMem(0x181c, { 0x2e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x171e);
        EXPECT(gbc.pc(), 0x181e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 00FE
        gbc.setState(0x980c, 0xf570, 0xbad0, 0xb8d2, 0x58d9, 0xcc8d, 0x0, 0x0);
        gbc.writeMem(0x980c, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0x980e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980c), 0x2e);
        EXPECT(gbc.readMem(0x980d), 0xa4);
        // 2E 00FF
        gbc.setState(0x48f9, 0x327c, 0x3750, 0x881b, 0xd2f2, 0xcf39, 0x1, 0x0);
        gbc.writeMem(0x48f9, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x327c);
        EXPECT(gbc.pc(), 0x48fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0100
        gbc.setState(0x5c93, 0x7274, 0xcea0, 0x7322, 0x13c0, 0x19b, 0x1, 0x0);
        gbc.writeMem(0x5c93, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7274);
        EXPECT(gbc.pc(), 0x5c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0101
        gbc.setState(0x2e32, 0x7dc1, 0x2e40, 0xce23, 0x23e6, 0x98da, 0x0, 0x0);
        gbc.writeMem(0x2e32, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7dc1);
        EXPECT(gbc.pc(), 0x2e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0102
        gbc.setState(0x27a0, 0xb7ec, 0xc400, 0x136c, 0xd56a, 0x21, 0x0, 0x0);
        gbc.writeMem(0x27a0, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb7ec);
        EXPECT(gbc.pc(), 0x27a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0103
        gbc.setState(0x9d54, 0xe30e, 0x4330, 0x98cb, 0x5e4b, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0x9d54, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe30e);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d54), 0x2e);
        EXPECT(gbc.readMem(0x9d55), 0x1b);
        // 2E 0105
        gbc.setState(0xa6ce, 0x83b2, 0x3040, 0xdde2, 0xd333, 0x803a, 0x1, 0x0);
        gbc.writeMem(0xa6ce, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x83b2);
        EXPECT(gbc.pc(), 0xa6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ce), 0x2e);
        EXPECT(gbc.readMem(0xa6cf), 0x85);
        // 2E 0106
        gbc.setState(0x14c4, 0xb6b4, 0x2ef0, 0x4e41, 0x344b, 0x536a, 0x1, 0x1);
        gbc.writeMem(0x14c4, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb6b4);
        EXPECT(gbc.pc(), 0x14c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0107
        gbc.setState(0x8a06, 0x7710, 0xf1a0, 0x5ec4, 0x6649, 0x5d85, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x2e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7710);
        EXPECT(gbc.pc(), 0x8a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a06), 0x2e);
        EXPECT(gbc.readMem(0x8a07), 0xba);
        // 2E 0108
        gbc.setState(0xbdc0, 0xa407, 0xf180, 0xc89f, 0x3a99, 0x4d72, 0x0, 0x1);
        gbc.writeMem(0xbdc0, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa407);
        EXPECT(gbc.pc(), 0xbdc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc0), 0x2e);
        EXPECT(gbc.readMem(0xbdc1), 0xd6);
        // 2E 0109
        gbc.setState(0x3bd0, 0x867a, 0xfe60, 0xd11, 0x5831, 0x9229, 0x0, 0x0);
        gbc.writeMem(0x3bd0, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x867a);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 010A
        gbc.setState(0xeddc, 0x8dec, 0xe5c0, 0x728b, 0x6c75, 0x17ba, 0x0, 0x1);
        gbc.writeMem(0xeddc, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8dec);
        EXPECT(gbc.pc(), 0xedde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddc), 0x2e);
        EXPECT(gbc.readMem(0xeddd), 0x4c);
        // 2E 010C
        gbc.setState(0x69f9, 0x2894, 0x34a0, 0x503a, 0x99e0, 0x2830, 0x0, 0x0);
        gbc.writeMem(0x69f9, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2894);
        EXPECT(gbc.pc(), 0x69fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 010D
        gbc.setState(0x13ba, 0x4c18, 0xc00, 0x5362, 0x6af8, 0x10fc, 0x1, 0x0);
        gbc.writeMem(0x13ba, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4c18);
        EXPECT(gbc.pc(), 0x13bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 010E
        gbc.setState(0x8dbf, 0x8590, 0x1490, 0xbd52, 0x113e, 0x9ff5, 0x0, 0x1);
        gbc.writeMem(0x8dbf, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8590);
        EXPECT(gbc.pc(), 0x8dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbf), 0x2e);
        EXPECT(gbc.readMem(0x8dc0), 0x1d);
        // 2E 010F
        gbc.setState(0xd70d, 0xda73, 0x42e0, 0xa788, 0x8f06, 0x31dd, 0x0, 0x0);
        gbc.writeMem(0xd70d, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xda73);
        EXPECT(gbc.pc(), 0xd70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70d), 0x2e);
        EXPECT(gbc.readMem(0xd70e), 0x95);
        // 2E 0110
        gbc.setState(0x1453, 0xc341, 0xe90, 0xc730, 0x7c0a, 0x5d6a, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc341);
        EXPECT(gbc.pc(), 0x1455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0111
        gbc.setState(0xe996, 0x7dc1, 0x57e0, 0x2e7d, 0x709b, 0x363c, 0x1, 0x1);
        gbc.writeMem(0xe996, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7dc1);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe996), 0x2e);
        EXPECT(gbc.readMem(0xe997), 0x2);
        // 2E 0112
        gbc.setState(0xd4, 0x4d93, 0x6c10, 0x7ac8, 0x166d, 0x5180, 0x0, 0x0);
        gbc.writeMem(0xd4, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4d93);
        EXPECT(gbc.pc(), 0xd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0113
        gbc.setState(0xbddd, 0xc98b, 0x8fd0, 0x345, 0x8591, 0xa68c, 0x0, 0x1);
        gbc.writeMem(0xbddd, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc98b);
        EXPECT(gbc.pc(), 0xbddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddd), 0x2e);
        EXPECT(gbc.readMem(0xbdde), 0xc9);
        // 2E 0114
        gbc.setState(0x9082, 0x48e1, 0x6c20, 0xd096, 0x4645, 0x57e2, 0x1, 0x0);
        gbc.writeMem(0x9082, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x48e1);
        EXPECT(gbc.pc(), 0x9084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9082), 0x2e);
        EXPECT(gbc.readMem(0x9083), 0x23);
        // 2E 0115
        gbc.setState(0xb1b2, 0x2c6c, 0x5240, 0x87af, 0xcef6, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0xb1b2, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2c6c);
        EXPECT(gbc.pc(), 0xb1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b2), 0x2e);
        EXPECT(gbc.readMem(0xb1b3), 0xb8);
        // 2E 0117
        gbc.setState(0xdf51, 0x2fae, 0x1120, 0x6f21, 0xc825, 0x5a69, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0x2e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2fae);
        EXPECT(gbc.pc(), 0xdf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf51), 0x2e);
        EXPECT(gbc.readMem(0xdf52), 0xba);
        // 2E 0118
        gbc.setState(0xbf7d, 0x95b8, 0xa8a0, 0x1092, 0xf59a, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0xbf7d, { 0x2e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x95b8);
        EXPECT(gbc.pc(), 0xbf7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf7d), 0x2e);
        EXPECT(gbc.readMem(0xbf7e), 0x7e);
        // 2E 0119
        gbc.setState(0xe773, 0xa2d6, 0xdcb0, 0xaa14, 0x5a23, 0x2575, 0x0, 0x1);
        gbc.writeMem(0xe773, { 0x2e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa2d6);
        EXPECT(gbc.pc(), 0xe775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe773), 0x2e);
        EXPECT(gbc.readMem(0xe774), 0xff);
        // 2E 011A
        gbc.setState(0xaaf3, 0xd541, 0xf4e0, 0x8f62, 0x5542, 0xaec2, 0x0, 0x0);
        gbc.writeMem(0xaaf3, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd541);
        EXPECT(gbc.pc(), 0xaaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf3), 0x2e);
        EXPECT(gbc.readMem(0xaaf4), 0xe1);
        // 2E 011B
        gbc.setState(0xbba2, 0x31f8, 0xf6e0, 0x7d, 0xeefc, 0xf294, 0x1, 0x1);
        gbc.writeMem(0xbba2, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x31f8);
        EXPECT(gbc.pc(), 0xbba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba2), 0x2e);
        EXPECT(gbc.readMem(0xbba3), 0xae);
        // 2E 011C
        gbc.setState(0x9f8e, 0x1e12, 0xf690, 0xb597, 0xc351, 0x8c26, 0x1, 0x1);
        gbc.writeMem(0x9f8e, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1e12);
        EXPECT(gbc.pc(), 0x9f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8e), 0x2e);
        EXPECT(gbc.readMem(0x9f8f), 0x46);
        // 2E 011D
        gbc.setState(0xc7bd, 0x1613, 0xf530, 0xbd4, 0x2132, 0xf22b, 0x0, 0x1);
        gbc.writeMem(0xc7bd, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1613);
        EXPECT(gbc.pc(), 0xc7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7bd), 0x2e);
        EXPECT(gbc.readMem(0xc7be), 0x34);
        // 2E 011E
        gbc.setState(0x5ba4, 0xa2d7, 0x1650, 0xbd18, 0x9a32, 0xce70, 0x0, 0x0);
        gbc.writeMem(0x5ba4, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa2d7);
        EXPECT(gbc.pc(), 0x5ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 011F
        gbc.setState(0xaa5e, 0x119c, 0xd230, 0x2632, 0x6e63, 0x731e, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x119c);
        EXPECT(gbc.pc(), 0xaa60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5e), 0x2e);
        EXPECT(gbc.readMem(0xaa5f), 0x17);
        // 2E 0121
        gbc.setState(0xb4af, 0x1e21, 0x6610, 0xea10, 0x952a, 0xc54f, 0x1, 0x1);
        gbc.writeMem(0xb4af, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1e21);
        EXPECT(gbc.pc(), 0xb4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4af), 0x2e);
        EXPECT(gbc.readMem(0xb4b0), 0xa5);
        // 2E 0122
        gbc.setState(0x321, 0x945, 0x7010, 0xad0f, 0xa6b1, 0xa3a0, 0x1, 0x1);
        gbc.writeMem(0x321, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x945);
        EXPECT(gbc.pc(), 0x323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0123
        gbc.setState(0x6095, 0xde18, 0xef90, 0x260e, 0xd2b6, 0x44d5, 0x0, 0x0);
        gbc.writeMem(0x6095, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xde18);
        EXPECT(gbc.pc(), 0x6097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0124
        gbc.setState(0xd782, 0x52d5, 0x83b0, 0xcf35, 0xb1b, 0x69d3, 0x1, 0x0);
        gbc.writeMem(0xd782, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x52d5);
        EXPECT(gbc.pc(), 0xd784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd782), 0x2e);
        EXPECT(gbc.readMem(0xd783), 0x8e);
        // 2E 0125
        gbc.setState(0x9bbb, 0xfbe, 0x8110, 0x30e0, 0x90d8, 0xcb19, 0x0, 0x1);
        gbc.writeMem(0x9bbb, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfbe);
        EXPECT(gbc.pc(), 0x9bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbb), 0x2e);
        EXPECT(gbc.readMem(0x9bbc), 0x3b);
        // 2E 0126
        gbc.setState(0x4592, 0x9bf6, 0xff0, 0x5e38, 0xb6b4, 0xef49, 0x1, 0x1);
        gbc.writeMem(0x4592, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9bf6);
        EXPECT(gbc.pc(), 0x4594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0127
        gbc.setState(0x63a6, 0x8f24, 0xb8c0, 0x9730, 0xe3ce, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x63a6, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8f24);
        EXPECT(gbc.pc(), 0x63a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0128
        gbc.setState(0x4ed1, 0x7247, 0xb600, 0x9762, 0xf897, 0x1969, 0x1, 0x1);
        gbc.writeMem(0x4ed1, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7247);
        EXPECT(gbc.pc(), 0x4ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0129
        gbc.setState(0x1c31, 0x8622, 0xca70, 0xfb0a, 0xae25, 0xabb1, 0x0, 0x1);
        gbc.writeMem(0x1c31, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8622);
        EXPECT(gbc.pc(), 0x1c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 012A
        gbc.setState(0xe35f, 0x7e66, 0xa220, 0x6f7d, 0x8a5, 0x3d97, 0x1, 0x1);
        gbc.writeMem(0xe35f, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7e66);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35f), 0x2e);
        EXPECT(gbc.readMem(0xe360), 0xcb);
        // 2E 012B
        gbc.setState(0xb04e, 0xb0c1, 0x7570, 0x119, 0xf86e, 0xd2ae, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0x2e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb0c1);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04e), 0x2e);
        EXPECT(gbc.readMem(0xb04f), 0x57);
        // 2E 012C
        gbc.setState(0xd4ab, 0x5435, 0x6ff0, 0x3741, 0xb93d, 0xd071, 0x1, 0x1);
        gbc.writeMem(0xd4ab, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5435);
        EXPECT(gbc.pc(), 0xd4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ab), 0x2e);
        EXPECT(gbc.readMem(0xd4ac), 0x6c);
        // 2E 012D
        gbc.setState(0xb54b, 0xfe3b, 0x2a80, 0x303d, 0x4a56, 0xfa37, 0x1, 0x1);
        gbc.writeMem(0xb54b, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfe3b);
        EXPECT(gbc.pc(), 0xb54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54b), 0x2e);
        EXPECT(gbc.readMem(0xb54c), 0x25);
        // 2E 012E
        gbc.setState(0xdc0c, 0xb8ee, 0x8160, 0x1566, 0xa165, 0x1f56, 0x1, 0x0);
        gbc.writeMem(0xdc0c, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb8ee);
        EXPECT(gbc.pc(), 0xdc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0c), 0x2e);
        EXPECT(gbc.readMem(0xdc0d), 0xbb);
        // 2E 012F
        gbc.setState(0x392b, 0x737a, 0x2610, 0x72f9, 0xef6, 0xcf13, 0x0, 0x0);
        gbc.writeMem(0x392b, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x737a);
        EXPECT(gbc.pc(), 0x392d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0130
        gbc.setState(0x3ff6, 0x33d1, 0x6780, 0xa7a6, 0x7598, 0x3977, 0x0, 0x0);
        gbc.writeMem(0x3ff6, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x33d1);
        EXPECT(gbc.pc(), 0x3ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0131
        gbc.setState(0x2c53, 0xab43, 0x1e0, 0xc0c, 0xe68e, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x2c53, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xab43);
        EXPECT(gbc.pc(), 0x2c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0132
        gbc.setState(0x9c47, 0xb458, 0xbf80, 0x746e, 0xc071, 0xa331, 0x1, 0x0);
        gbc.writeMem(0x9c47, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb458);
        EXPECT(gbc.pc(), 0x9c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c47), 0x2e);
        EXPECT(gbc.readMem(0x9c48), 0x5);
        // 2E 0133
        gbc.setState(0xe5ef, 0x2037, 0xf800, 0x9001, 0xeb95, 0x2e6b, 0x1, 0x0);
        gbc.writeMem(0xe5ef, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2037);
        EXPECT(gbc.pc(), 0xe5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ef), 0x2e);
        EXPECT(gbc.readMem(0xe5f0), 0x23);
        // 2E 0134
        gbc.setState(0x823e, 0x78c1, 0x79a0, 0xe6f1, 0x2d39, 0xad1a, 0x0, 0x0);
        gbc.writeMem(0x823e, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x78c1);
        EXPECT(gbc.pc(), 0x8240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823e), 0x2e);
        EXPECT(gbc.readMem(0x823f), 0x39);
        // 2E 0135
        gbc.setState(0x2cac, 0x1624, 0x5c30, 0xb4d8, 0x4fe1, 0x403a, 0x0, 0x1);
        gbc.writeMem(0x2cac, { 0x2e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1624);
        EXPECT(gbc.pc(), 0x2cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0136
        gbc.setState(0x827, 0x82e1, 0x7460, 0xb914, 0xed86, 0x88f0, 0x1, 0x0);
        gbc.writeMem(0x827, { 0x2e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x82e1);
        EXPECT(gbc.pc(), 0x829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0137
        gbc.setState(0xedcd, 0x21b2, 0xc0d0, 0xce88, 0xfd46, 0xd208, 0x0, 0x0);
        gbc.writeMem(0xedcd, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x21b2);
        EXPECT(gbc.pc(), 0xedcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcd), 0x2e);
        EXPECT(gbc.readMem(0xedce), 0x10);
        // 2E 0138
        gbc.setState(0xd804, 0xe520, 0x5480, 0x6cc9, 0xac1a, 0x640c, 0x0, 0x1);
        gbc.writeMem(0xd804, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe520);
        EXPECT(gbc.pc(), 0xd806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd804), 0x2e);
        EXPECT(gbc.readMem(0xd805), 0xb7);
        // 2E 0139
        gbc.setState(0x44dc, 0xfe1a, 0xfc40, 0xaada, 0x7e53, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0x44dc, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfe1a);
        EXPECT(gbc.pc(), 0x44de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 013A
        gbc.setState(0x8ac3, 0xe9e0, 0xd0, 0xb7c9, 0x777d, 0xf739, 0x1, 0x1);
        gbc.writeMem(0x8ac3, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe9e0);
        EXPECT(gbc.pc(), 0x8ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac3), 0x2e);
        EXPECT(gbc.readMem(0x8ac4), 0xc7);
        // 2E 013B
        gbc.setState(0xbba0, 0xd068, 0xa470, 0xe542, 0x2d5e, 0xf131, 0x1, 0x0);
        gbc.writeMem(0xbba0, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd068);
        EXPECT(gbc.pc(), 0xbba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba0), 0x2e);
        EXPECT(gbc.readMem(0xbba1), 0xd7);
        // 2E 013C
        gbc.setState(0xb296, 0xf514, 0x47a0, 0xe077, 0x1bdd, 0xf853, 0x0, 0x1);
        gbc.writeMem(0xb296, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf514);
        EXPECT(gbc.pc(), 0xb298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb296), 0x2e);
        EXPECT(gbc.readMem(0xb297), 0xd3);
        // 2E 013D
        gbc.setState(0x559b, 0x98bd, 0x2b30, 0x95c2, 0x4a89, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0x559b, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x98bd);
        EXPECT(gbc.pc(), 0x559d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 013E
        gbc.setState(0xdfc, 0x19d, 0x8810, 0x5544, 0x53d, 0xd2c2, 0x0, 0x1);
        gbc.writeMem(0xdfc, { 0x2e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x19d);
        EXPECT(gbc.pc(), 0xdfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 013F
        gbc.setState(0x410c, 0xe87e, 0x2140, 0x843e, 0x9c51, 0xa337, 0x0, 0x0);
        gbc.writeMem(0x410c, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x410e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0140
        gbc.setState(0x4181, 0x6079, 0x8d80, 0xab20, 0xbf9a, 0x61f7, 0x1, 0x1);
        gbc.writeMem(0x4181, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6079);
        EXPECT(gbc.pc(), 0x4183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0141
        gbc.setState(0x5105, 0x2ea2, 0x8750, 0x3abd, 0x80a0, 0xcd70, 0x1, 0x1);
        gbc.writeMem(0x5105, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2ea2);
        EXPECT(gbc.pc(), 0x5107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0143
        gbc.setState(0x8c91, 0xda3b, 0x5c60, 0x82ea, 0xdc2, 0x99a6, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xda3b);
        EXPECT(gbc.pc(), 0x8c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c91), 0x2e);
        EXPECT(gbc.readMem(0x8c92), 0x78);
        // 2E 0144
        gbc.setState(0xb529, 0x5763, 0x8e50, 0x6f58, 0xb2de, 0x18b8, 0x0, 0x1);
        gbc.writeMem(0xb529, { 0x2e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5763);
        EXPECT(gbc.pc(), 0xb52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb529), 0x2e);
        EXPECT(gbc.readMem(0xb52a), 0xc);
        // 2E 0145
        gbc.setState(0x2f41, 0xd5dc, 0x2fb0, 0x9abd, 0xfe72, 0x59d3, 0x0, 0x0);
        gbc.writeMem(0x2f41, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd5dc);
        EXPECT(gbc.pc(), 0x2f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0146
        gbc.setState(0x578f, 0xd162, 0x1ab0, 0x50b9, 0x7167, 0x23d, 0x0, 0x0);
        gbc.writeMem(0x578f, { 0x2e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd162);
        EXPECT(gbc.pc(), 0x5791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0147
        gbc.setState(0x336e, 0x6a08, 0xf7a0, 0x7802, 0xe766, 0x786c, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x2e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6a08);
        EXPECT(gbc.pc(), 0x3370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0148
        gbc.setState(0xef15, 0xda89, 0x6220, 0x6b4e, 0xd52b, 0x8690, 0x1, 0x1);
        gbc.writeMem(0xef15, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0xef17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef15), 0x2e);
        EXPECT(gbc.readMem(0xef16), 0x7);
        // 2E 0149
        gbc.setState(0x1685, 0x98b, 0x1d50, 0xfd01, 0x9b57, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x98b);
        EXPECT(gbc.pc(), 0x1687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 014A
        gbc.setState(0x352e, 0xedd1, 0xfad0, 0xecd0, 0x55dd, 0xab90, 0x0, 0x1);
        gbc.writeMem(0x352e, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xedd1);
        EXPECT(gbc.pc(), 0x3530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 014B
        gbc.setState(0xac2, 0x6a07, 0x5890, 0xcf06, 0xed02, 0x64a4, 0x1, 0x0);
        gbc.writeMem(0xac2, { 0x2e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6a07);
        EXPECT(gbc.pc(), 0xac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 014C
        gbc.setState(0xd9af, 0x41d8, 0x13b0, 0x6a96, 0x7ff3, 0xe12a, 0x0, 0x1);
        gbc.writeMem(0xd9af, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x41d8);
        EXPECT(gbc.pc(), 0xd9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9af), 0x2e);
        EXPECT(gbc.readMem(0xd9b0), 0x49);
        // 2E 014D
        gbc.setState(0x4ff4, 0x4a4e, 0x2ac0, 0xaa98, 0x43e4, 0x50c8, 0x0, 0x1);
        gbc.writeMem(0x4ff4, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4a4e);
        EXPECT(gbc.pc(), 0x4ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 014E
        gbc.setState(0xd40e, 0x90cb, 0x6bf0, 0xcfea, 0x6a03, 0x87da, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x90cb);
        EXPECT(gbc.pc(), 0xd410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40e), 0x2e);
        EXPECT(gbc.readMem(0xd40f), 0xe8);
        // 2E 014F
        gbc.setState(0x39c3, 0xe0e9, 0xfc0, 0x9105, 0xa63b, 0x72dd, 0x1, 0x1);
        gbc.writeMem(0x39c3, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe0e9);
        EXPECT(gbc.pc(), 0x39c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0150
        gbc.setState(0xc842, 0x2e25, 0x8ec0, 0xee0b, 0x18a8, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0xc842, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2e25);
        EXPECT(gbc.pc(), 0xc844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc842), 0x2e);
        EXPECT(gbc.readMem(0xc843), 0xcd);
        // 2E 0151
        gbc.setState(0x802d, 0xf49a, 0xb8d0, 0xa317, 0xbcb9, 0x388e, 0x1, 0x1);
        gbc.writeMem(0x802d, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf49a);
        EXPECT(gbc.pc(), 0x802f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802d), 0x2e);
        EXPECT(gbc.readMem(0x802e), 0x4c);
        // 2E 0152
        gbc.setState(0xe759, 0x12b3, 0x88b0, 0xd47a, 0x7907, 0x9c9f, 0x0, 0x0);
        gbc.writeMem(0xe759, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x12b3);
        EXPECT(gbc.pc(), 0xe75b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe759), 0x2e);
        EXPECT(gbc.readMem(0xe75a), 0x43);
        // 2E 0153
        gbc.setState(0x94ef, 0x6b5b, 0xed20, 0x1b0, 0x504a, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x94ef, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6b5b);
        EXPECT(gbc.pc(), 0x94f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ef), 0x2e);
        EXPECT(gbc.readMem(0x94f0), 0xbf);
        // 2E 0154
        gbc.setState(0xec12, 0xaee1, 0xf950, 0xc109, 0x66c1, 0x3b14, 0x0, 0x1);
        gbc.writeMem(0xec12, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaee1);
        EXPECT(gbc.pc(), 0xec14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec12), 0x2e);
        EXPECT(gbc.readMem(0xec13), 0x4e);
        // 2E 0155
        gbc.setState(0x1eae, 0xc432, 0x9b50, 0xb906, 0x9578, 0x8917, 0x0, 0x1);
        gbc.writeMem(0x1eae, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc432);
        EXPECT(gbc.pc(), 0x1eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0156
        gbc.setState(0x45f0, 0x24f0, 0xa5a0, 0xe219, 0x591f, 0x33d8, 0x1, 0x0);
        gbc.writeMem(0x45f0, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x24f0);
        EXPECT(gbc.pc(), 0x45f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0157
        gbc.setState(0xd7bf, 0x60d5, 0xa3b0, 0x793, 0x1eee, 0x50a7, 0x0, 0x1);
        gbc.writeMem(0xd7bf, { 0x2e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x60d5);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bf), 0x2e);
        EXPECT(gbc.readMem(0xd7c0), 0x97);
        // 2E 0158
        gbc.setState(0x8b18, 0x3ddc, 0xf570, 0x8c34, 0xf1c9, 0xfc18, 0x1, 0x0);
        gbc.writeMem(0x8b18, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3ddc);
        EXPECT(gbc.pc(), 0x8b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b18), 0x2e);
        EXPECT(gbc.readMem(0x8b19), 0x2f);
        // 2E 0159
        gbc.setState(0x8b48, 0xd99a, 0xb4b0, 0x43a3, 0x47c7, 0x206d, 0x0, 0x1);
        gbc.writeMem(0x8b48, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd99a);
        EXPECT(gbc.pc(), 0x8b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b48), 0x2e);
        EXPECT(gbc.readMem(0x8b49), 0xcb);
        // 2E 015A
        gbc.setState(0xe89, 0x2704, 0xacf0, 0xc5b5, 0x8170, 0x646d, 0x1, 0x1);
        gbc.writeMem(0xe89, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2704);
        EXPECT(gbc.pc(), 0xe8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 015B
        gbc.setState(0x27aa, 0xcc08, 0xe060, 0xe435, 0xe1ec, 0xe7b3, 0x1, 0x1);
        gbc.writeMem(0x27aa, { 0x2e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcc08);
        EXPECT(gbc.pc(), 0x27ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 015C
        gbc.setState(0x15f6, 0xf712, 0x8dd0, 0x8efd, 0x5ecf, 0xefc6, 0x1, 0x0);
        gbc.writeMem(0x15f6, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf712);
        EXPECT(gbc.pc(), 0x15f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 015D
        gbc.setState(0x9ffc, 0x400e, 0x8e30, 0x54a7, 0xe32f, 0xfdad, 0x0, 0x1);
        gbc.writeMem(0x9ffc, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x400e);
        EXPECT(gbc.pc(), 0x9ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffc), 0x2e);
        EXPECT(gbc.readMem(0x9ffd), 0x77);
        // 2E 015E
        gbc.setState(0x5733, 0xdd9c, 0xd680, 0xda18, 0xdadc, 0xd7ef, 0x0, 0x0);
        gbc.writeMem(0x5733, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdd9c);
        EXPECT(gbc.pc(), 0x5735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 015F
        gbc.setState(0x9296, 0xe174, 0x7160, 0x1f6a, 0xe558, 0xc573, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe174);
        EXPECT(gbc.pc(), 0x9298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9296), 0x2e);
        EXPECT(gbc.readMem(0x9297), 0xf9);
        // 2E 0160
        gbc.setState(0xba43, 0xef8a, 0xb080, 0x34d9, 0x74f, 0x98de, 0x0, 0x1);
        gbc.writeMem(0xba43, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xef8a);
        EXPECT(gbc.pc(), 0xba45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba43), 0x2e);
        EXPECT(gbc.readMem(0xba44), 0x5);
        // 2E 0162
        gbc.setState(0xb393, 0xb4b5, 0xf4c0, 0xffa, 0x6bbb, 0x9604, 0x1, 0x1);
        gbc.writeMem(0xb393, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb4b5);
        EXPECT(gbc.pc(), 0xb395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb393), 0x2e);
        EXPECT(gbc.readMem(0xb394), 0xd6);
        // 2E 0163
        gbc.setState(0x2aed, 0x84bc, 0x8030, 0x5f9a, 0x41ad, 0xda04, 0x0, 0x1);
        gbc.writeMem(0x2aed, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x84bc);
        EXPECT(gbc.pc(), 0x2aef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0164
        gbc.setState(0x22fe, 0x8523, 0xb2a0, 0x51b0, 0x3d64, 0x6436, 0x0, 0x1);
        gbc.writeMem(0x22fe, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8523);
        EXPECT(gbc.pc(), 0x2300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0165
        gbc.setState(0x9e2e, 0xccac, 0xe780, 0xad50, 0x5baf, 0xda42, 0x1, 0x1);
        gbc.writeMem(0x9e2e, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xccac);
        EXPECT(gbc.pc(), 0x9e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e2e), 0x2e);
        EXPECT(gbc.readMem(0x9e2f), 0xf7);
        // 2E 0166
        gbc.setState(0x909e, 0xf37, 0x3f80, 0xc48, 0xfd12, 0x7f9a, 0x0, 0x0);
        gbc.writeMem(0x909e, { 0x2e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf37);
        EXPECT(gbc.pc(), 0x90a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909e), 0x2e);
        EXPECT(gbc.readMem(0x909f), 0x36);
        // 2E 0167
        gbc.setState(0xe38c, 0xdb4e, 0x7780, 0xb6fe, 0x2e3e, 0x17de, 0x0, 0x0);
        gbc.writeMem(0xe38c, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdb4e);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38c), 0x2e);
        EXPECT(gbc.readMem(0xe38d), 0x6a);
        // 2E 0168
        gbc.setState(0x36, 0x70e6, 0x77c0, 0x59ad, 0xb25a, 0x1452, 0x1, 0x0);
        gbc.writeMem(0x36, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 016A
        gbc.setState(0x37dd, 0xc8b5, 0x82e0, 0x452b, 0x7379, 0x505, 0x1, 0x0);
        gbc.writeMem(0x37dd, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x37df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 016B
        gbc.setState(0xdf32, 0xfd85, 0x4110, 0x79fe, 0xa8d0, 0x28b8, 0x0, 0x1);
        gbc.writeMem(0xdf32, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfd85);
        EXPECT(gbc.pc(), 0xdf34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf32), 0x2e);
        EXPECT(gbc.readMem(0xdf33), 0x86);
        // 2E 016C
        gbc.setState(0xa6f7, 0x6385, 0xb780, 0xc76e, 0x1468, 0x88ac, 0x0, 0x1);
        gbc.writeMem(0xa6f7, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6385);
        EXPECT(gbc.pc(), 0xa6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f7), 0x2e);
        EXPECT(gbc.readMem(0xa6f8), 0x9f);
        // 2E 016E
        gbc.setState(0x66c7, 0xe8cd, 0xfe80, 0x7761, 0x104c, 0x6cbd, 0x1, 0x1);
        gbc.writeMem(0x66c7, { 0x2e, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe8cd);
        EXPECT(gbc.pc(), 0x66c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 016F
        gbc.setState(0x416d, 0xf1fb, 0x8ca0, 0x5012, 0x4960, 0xdaa6, 0x0, 0x1);
        gbc.writeMem(0x416d, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf1fb);
        EXPECT(gbc.pc(), 0x416f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0170
        gbc.setState(0x277e, 0xe51d, 0x6780, 0x57a6, 0x1b58, 0xbaae, 0x1, 0x0);
        gbc.writeMem(0x277e, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe51d);
        EXPECT(gbc.pc(), 0x2780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0171
        gbc.setState(0x7ef2, 0xc05d, 0xb2f0, 0xd9ca, 0xc0f9, 0x49ca, 0x0, 0x0);
        gbc.writeMem(0x7ef2, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc05d);
        EXPECT(gbc.pc(), 0x7ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0172
        gbc.setState(0x34a7, 0xb0ee, 0x2890, 0x34c1, 0x5ea1, 0xf986, 0x0, 0x0);
        gbc.writeMem(0x34a7, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb0ee);
        EXPECT(gbc.pc(), 0x34a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0174
        gbc.setState(0x55cb, 0x33ab, 0x1ff0, 0x4a92, 0x11e7, 0xf35f, 0x1, 0x1);
        gbc.writeMem(0x55cb, { 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x33ab);
        EXPECT(gbc.pc(), 0x55cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0175
        gbc.setState(0xa1e3, 0x2d69, 0xec90, 0x5f4d, 0xa9eb, 0xf8b9, 0x0, 0x1);
        gbc.writeMem(0xa1e3, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2d69);
        EXPECT(gbc.pc(), 0xa1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e3), 0x2e);
        EXPECT(gbc.readMem(0xa1e4), 0xb4);
        // 2E 0176
        gbc.setState(0xbf6b, 0x9795, 0xf6a0, 0x5c50, 0x9250, 0x1f30, 0x0, 0x0);
        gbc.writeMem(0xbf6b, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9795);
        EXPECT(gbc.pc(), 0xbf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6b), 0x2e);
        EXPECT(gbc.readMem(0xbf6c), 0x2d);
        // 2E 0177
        gbc.setState(0x4dba, 0x409a, 0xd3a0, 0x5e21, 0x674, 0x7e30, 0x1, 0x0);
        gbc.writeMem(0x4dba, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x409a);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0178
        gbc.setState(0x4897, 0x5147, 0x89e0, 0x1f6c, 0xb808, 0x59b2, 0x1, 0x1);
        gbc.writeMem(0x4897, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5147);
        EXPECT(gbc.pc(), 0x4899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0179
        gbc.setState(0x37a, 0x7ce9, 0x1490, 0x6007, 0x4437, 0x531a, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7ce9);
        EXPECT(gbc.pc(), 0x37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 017A
        gbc.setState(0xa8b8, 0xc292, 0x840, 0x7630, 0x2c2d, 0x88a7, 0x1, 0x1);
        gbc.writeMem(0xa8b8, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc292);
        EXPECT(gbc.pc(), 0xa8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b8), 0x2e);
        EXPECT(gbc.readMem(0xa8b9), 0x73);
        // 2E 017B
        gbc.setState(0xee8a, 0x958c, 0x4ee0, 0xc82d, 0x458c, 0x5097, 0x1, 0x1);
        gbc.writeMem(0xee8a, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x958c);
        EXPECT(gbc.pc(), 0xee8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8a), 0x2e);
        EXPECT(gbc.readMem(0xee8b), 0x2b);
        // 2E 017C
        gbc.setState(0xc671, 0x4bfd, 0xd500, 0x83b7, 0xf234, 0xc388, 0x0, 0x1);
        gbc.writeMem(0xc671, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4bfd);
        EXPECT(gbc.pc(), 0xc673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc671), 0x2e);
        EXPECT(gbc.readMem(0xc672), 0x81);
        // 2E 017D
        gbc.setState(0x919, 0xc658, 0x1970, 0x3463, 0xf574, 0x70e9, 0x0, 0x0);
        gbc.writeMem(0x919, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc658);
        EXPECT(gbc.pc(), 0x91b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 017F
        gbc.setState(0x6054, 0x3969, 0xc2d0, 0x761a, 0xb2cb, 0xf1de, 0x0, 0x0);
        gbc.writeMem(0x6054, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3969);
        EXPECT(gbc.pc(), 0x6056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0181
        gbc.setState(0xec26, 0x4dc3, 0x6c0, 0x55ee, 0x763f, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0xec26, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4dc3);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec26), 0x2e);
        EXPECT(gbc.readMem(0xec27), 0x5b);
        // 2E 0182
        gbc.setState(0xa921, 0x87c6, 0xcb30, 0x315b, 0x9d93, 0x36bf, 0x1, 0x0);
        gbc.writeMem(0xa921, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x87c6);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa921), 0x2e);
        EXPECT(gbc.readMem(0xa922), 0x3b);
        // 2E 0183
        gbc.setState(0x960c, 0x73ef, 0x7cc0, 0x518, 0x24f1, 0x4ed8, 0x1, 0x1);
        gbc.writeMem(0x960c, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x73ef);
        EXPECT(gbc.pc(), 0x960e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960c), 0x2e);
        EXPECT(gbc.readMem(0x960d), 0xfb);
        // 2E 0185
        gbc.setState(0xc1ae, 0xe2ac, 0x48e0, 0xcf3d, 0x1d22, 0x721d, 0x1, 0x0);
        gbc.writeMem(0xc1ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe2ac);
        EXPECT(gbc.pc(), 0xc1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ae), 0x2e);
        EXPECT(gbc.readMem(0xc1af), 0x19);
        // 2E 0186
        gbc.setState(0x3ad5, 0x74c4, 0x1970, 0xe271, 0xd684, 0xce19, 0x1, 0x0);
        gbc.writeMem(0x3ad5, { 0x2e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x74c4);
        EXPECT(gbc.pc(), 0x3ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0187
        gbc.setState(0xbb1a, 0x273b, 0xdc00, 0xc428, 0x76d9, 0x7e16, 0x1, 0x0);
        gbc.writeMem(0xbb1a, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x273b);
        EXPECT(gbc.pc(), 0xbb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1a), 0x2e);
        EXPECT(gbc.readMem(0xbb1b), 0x93);
        // 2E 0188
        gbc.setState(0x542d, 0x41b5, 0x2d80, 0xaf3c, 0x363, 0x85c2, 0x1, 0x0);
        gbc.writeMem(0x542d, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x41b5);
        EXPECT(gbc.pc(), 0x542f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0189
        gbc.setState(0x1fc7, 0x5b5f, 0xf000, 0x2546, 0xa3, 0x7fe8, 0x0, 0x1);
        gbc.writeMem(0x1fc7, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5b5f);
        EXPECT(gbc.pc(), 0x1fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 018A
        gbc.setState(0x663e, 0x2002, 0x2ba0, 0x4622, 0x954a, 0x2d6c, 0x1, 0x1);
        gbc.writeMem(0x663e, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 018B
        gbc.setState(0x569d, 0xf27b, 0x48e0, 0xc8ec, 0xfe78, 0xd999, 0x0, 0x1);
        gbc.writeMem(0x569d, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf27b);
        EXPECT(gbc.pc(), 0x569f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 018C
        gbc.setState(0x7b97, 0xf291, 0xe120, 0xf3d5, 0xc49c, 0xe63f, 0x0, 0x1);
        gbc.writeMem(0x7b97, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0x7b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 018D
        gbc.setState(0xce65, 0xad76, 0x8520, 0xf79, 0xd90b, 0x64b6, 0x1, 0x0);
        gbc.writeMem(0xce65, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xad76);
        EXPECT(gbc.pc(), 0xce67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce65), 0x2e);
        EXPECT(gbc.readMem(0xce66), 0xdf);
        // 2E 018E
        gbc.setState(0xaaea, 0x3a53, 0x79c0, 0xbc3b, 0xa61d, 0xec73, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3a53);
        EXPECT(gbc.pc(), 0xaaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaea), 0x2e);
        EXPECT(gbc.readMem(0xaaeb), 0x16);
        // 2E 018F
        gbc.setState(0xd6f0, 0x1417, 0x4910, 0x3307, 0x9224, 0x2646, 0x1, 0x0);
        gbc.writeMem(0xd6f0, { 0x2e, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1417);
        EXPECT(gbc.pc(), 0xd6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f0), 0x2e);
        EXPECT(gbc.readMem(0xd6f1), 0x9);
        // 2E 0190
        gbc.setState(0xcb16, 0x80e2, 0xa090, 0x6d6e, 0xe95f, 0xc75e, 0x0, 0x1);
        gbc.writeMem(0xcb16, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x80e2);
        EXPECT(gbc.pc(), 0xcb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb16), 0x2e);
        EXPECT(gbc.readMem(0xcb17), 0xf6);
        // 2E 0191
        gbc.setState(0x119, 0xd099, 0x9940, 0xfa99, 0xdf18, 0x4317, 0x1, 0x1);
        gbc.writeMem(0x119, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd099);
        EXPECT(gbc.pc(), 0x11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0192
        gbc.setState(0x2251, 0xa1db, 0xd7d0, 0x134a, 0x36af, 0x5ebf, 0x0, 0x1);
        gbc.writeMem(0x2251, { 0x2e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa1db);
        EXPECT(gbc.pc(), 0x2253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0194
        gbc.setState(0x284b, 0xb61e, 0x28d0, 0xbc76, 0xebc7, 0x235d, 0x0, 0x0);
        gbc.writeMem(0x284b, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb61e);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0195
        gbc.setState(0xa018, 0x9e97, 0x74f0, 0x4a67, 0x2b0f, 0x2529, 0x1, 0x1);
        gbc.writeMem(0xa018, { 0x2e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9e97);
        EXPECT(gbc.pc(), 0xa01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa018), 0x2e);
        EXPECT(gbc.readMem(0xa019), 0xef);
        // 2E 0196
        gbc.setState(0x8f1e, 0x5ee6, 0xd8d0, 0xfd34, 0x1ff2, 0x2ab0, 0x0, 0x0);
        gbc.writeMem(0x8f1e, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5ee6);
        EXPECT(gbc.pc(), 0x8f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1e), 0x2e);
        EXPECT(gbc.readMem(0x8f1f), 0x85);
        // 2E 0197
        gbc.setState(0xa3f7, 0xd3ce, 0xfb00, 0x29e3, 0xb2a6, 0xd023, 0x1, 0x0);
        gbc.writeMem(0xa3f7, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd3ce);
        EXPECT(gbc.pc(), 0xa3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f7), 0x2e);
        EXPECT(gbc.readMem(0xa3f8), 0x3b);
        // 2E 0198
        gbc.setState(0x23be, 0x926e, 0xd410, 0x93a4, 0xd389, 0x2887, 0x0, 0x1);
        gbc.writeMem(0x23be, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x926e);
        EXPECT(gbc.pc(), 0x23c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0199
        gbc.setState(0xcb96, 0xd148, 0x59e0, 0x3fc5, 0x23b2, 0xaf97, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd148);
        EXPECT(gbc.pc(), 0xcb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb96), 0x2e);
        EXPECT(gbc.readMem(0xcb97), 0x3b);
        // 2E 019B
        gbc.setState(0x1d59, 0xe1a5, 0xc400, 0xc8bf, 0xa0a3, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x1d59, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0x1d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 019C
        gbc.setState(0xd37c, 0x9e9f, 0x22f0, 0xce61, 0x1671, 0x582d, 0x1, 0x1);
        gbc.writeMem(0xd37c, { 0x2e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9e9f);
        EXPECT(gbc.pc(), 0xd37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37c), 0x2e);
        EXPECT(gbc.readMem(0xd37d), 0xe3);
        // 2E 019D
        gbc.setState(0x75f2, 0xf7c9, 0xd960, 0xae06, 0x20a3, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0x2e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0x75f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 019E
        gbc.setState(0xd65f, 0xa998, 0x8740, 0x8526, 0x64ab, 0x80e2, 0x1, 0x1);
        gbc.writeMem(0xd65f, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa998);
        EXPECT(gbc.pc(), 0xd661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65f), 0x2e);
        EXPECT(gbc.readMem(0xd660), 0xf1);
        // 2E 019F
        gbc.setState(0x8457, 0x7287, 0xa210, 0x4549, 0x5e8a, 0x1fd9, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7287);
        EXPECT(gbc.pc(), 0x8459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8457), 0x2e);
        EXPECT(gbc.readMem(0x8458), 0xc0);
        // 2E 01A0
        gbc.setState(0x93a6, 0xf9fa, 0xb2b0, 0x760a, 0x1150, 0x1205, 0x0, 0x1);
        gbc.writeMem(0x93a6, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf9fa);
        EXPECT(gbc.pc(), 0x93a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a6), 0x2e);
        EXPECT(gbc.readMem(0x93a7), 0x54);
        // 2E 01A1
        gbc.setState(0xb225, 0x7d2f, 0xd540, 0x1da8, 0x2bf0, 0x272e, 0x1, 0x0);
        gbc.writeMem(0xb225, { 0x2e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7d2f);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb225), 0x2e);
        EXPECT(gbc.readMem(0xb226), 0xad);
        // 2E 01A2
        gbc.setState(0x7a78, 0x37fa, 0xb920, 0x8636, 0xb311, 0x48ff, 0x1, 0x0);
        gbc.writeMem(0x7a78, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x37fa);
        EXPECT(gbc.pc(), 0x7a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01A3
        gbc.setState(0xd5a2, 0xffd0, 0xe910, 0x711c, 0x9e8a, 0x8427, 0x0, 0x0);
        gbc.writeMem(0xd5a2, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0xd5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a2), 0x2e);
        EXPECT(gbc.readMem(0xd5a3), 0x3b);
        // 2E 01A4
        gbc.setState(0xecab, 0xc3c0, 0x7950, 0x4bd5, 0x722c, 0x5d4e, 0x1, 0x1);
        gbc.writeMem(0xecab, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc3c0);
        EXPECT(gbc.pc(), 0xecad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecab), 0x2e);
        EXPECT(gbc.readMem(0xecac), 0x82);
        // 2E 01A6
        gbc.setState(0xd3e6, 0xd39c, 0x42e0, 0x912d, 0x1118, 0x370f, 0x1, 0x1);
        gbc.writeMem(0xd3e6, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd39c);
        EXPECT(gbc.pc(), 0xd3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e6), 0x2e);
        EXPECT(gbc.readMem(0xd3e7), 0xe5);
        // 2E 01A7
        gbc.setState(0xafda, 0xa8f9, 0xe670, 0xdec, 0x66df, 0x32, 0x0, 0x0);
        gbc.writeMem(0xafda, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0xafdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafda), 0x2e);
        EXPECT(gbc.readMem(0xafdb), 0x52);
        // 2E 01A8
        gbc.setState(0xd716, 0xa234, 0xa40, 0x8e72, 0xf470, 0x5f17, 0x0, 0x1);
        gbc.writeMem(0xd716, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa234);
        EXPECT(gbc.pc(), 0xd718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd716), 0x2e);
        EXPECT(gbc.readMem(0xd717), 0x50);
        // 2E 01A9
        gbc.setState(0xb968, 0x8330, 0xd9b0, 0x6413, 0x414f, 0x3896, 0x0, 0x0);
        gbc.writeMem(0xb968, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8330);
        EXPECT(gbc.pc(), 0xb96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb968), 0x2e);
        EXPECT(gbc.readMem(0xb969), 0xc8);
        // 2E 01AA
        gbc.setState(0x71a8, 0xdf71, 0x7d90, 0xd450, 0xe5be, 0xe222, 0x1, 0x1);
        gbc.writeMem(0x71a8, { 0x2e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0x71aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01AB
        gbc.setState(0x8c8d, 0x34de, 0x91c0, 0x4583, 0xfaeb, 0xeefe, 0x0, 0x1);
        gbc.writeMem(0x8c8d, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x34de);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8d), 0x2e);
        EXPECT(gbc.readMem(0x8c8e), 0x3d);
        // 2E 01AC
        gbc.setState(0xc15d, 0x72bd, 0x6660, 0xf8e7, 0x2f7c, 0xdb72, 0x0, 0x1);
        gbc.writeMem(0xc15d, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x72bd);
        EXPECT(gbc.pc(), 0xc15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15d), 0x2e);
        EXPECT(gbc.readMem(0xc15e), 0x8e);
        // 2E 01AD
        gbc.setState(0xc5ff, 0x7aa1, 0x82b0, 0xc25c, 0x423f, 0x7267, 0x0, 0x1);
        gbc.writeMem(0xc5ff, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7aa1);
        EXPECT(gbc.pc(), 0xc601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ff), 0x2e);
        EXPECT(gbc.readMem(0xc600), 0x3e);
        // 2E 01AE
        gbc.setState(0xc893, 0x15ea, 0xb600, 0xd1fa, 0xd93d, 0x8415, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x15ea);
        EXPECT(gbc.pc(), 0xc895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc893), 0x2e);
        EXPECT(gbc.readMem(0xc894), 0xa3);
        // 2E 01AF
        gbc.setState(0x73e0, 0x265c, 0xd9e0, 0xcdf3, 0xc397, 0x3599, 0x1, 0x1);
        gbc.writeMem(0x73e0, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x265c);
        EXPECT(gbc.pc(), 0x73e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01B0
        gbc.setState(0xa085, 0xaa32, 0xbee0, 0xefc5, 0x71a9, 0x6e6a, 0x1, 0x0);
        gbc.writeMem(0xa085, { 0x2e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xaa32);
        EXPECT(gbc.pc(), 0xa087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa085), 0x2e);
        EXPECT(gbc.readMem(0xa086), 0xf5);
        // 2E 01B1
        gbc.setState(0xa8dd, 0x2720, 0x7330, 0xcf69, 0x4caf, 0x1142, 0x1, 0x0);
        gbc.writeMem(0xa8dd, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2720);
        EXPECT(gbc.pc(), 0xa8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dd), 0x2e);
        EXPECT(gbc.readMem(0xa8de), 0xa3);
        // 2E 01B2
        gbc.setState(0xbf11, 0x887b, 0x2ef0, 0x1a81, 0x26f2, 0x9b71, 0x0, 0x0);
        gbc.writeMem(0xbf11, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x887b);
        EXPECT(gbc.pc(), 0xbf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf11), 0x2e);
        EXPECT(gbc.readMem(0xbf12), 0x66);
        // 2E 01B4
        gbc.setState(0x8aca, 0x873a, 0x7560, 0xe0ec, 0x7d29, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x8aca, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0x8acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aca), 0x2e);
        EXPECT(gbc.readMem(0x8acb), 0x92);
        // 2E 01B5
        gbc.setState(0x9bd, 0x5daa, 0x3470, 0xacd5, 0xdea, 0x8f2, 0x1, 0x0);
        gbc.writeMem(0x9bd, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5daa);
        EXPECT(gbc.pc(), 0x9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01B6
        gbc.setState(0xe428, 0xdc3, 0xd530, 0x12bf, 0x517, 0x171d, 0x1, 0x1);
        gbc.writeMem(0xe428, { 0x2e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdc3);
        EXPECT(gbc.pc(), 0xe42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe428), 0x2e);
        EXPECT(gbc.readMem(0xe429), 0xf);
        // 2E 01B7
        gbc.setState(0x9496, 0xb691, 0x9d0, 0xdd7, 0xe9bf, 0x6377, 0x0, 0x1);
        gbc.writeMem(0x9496, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb691);
        EXPECT(gbc.pc(), 0x9498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9496), 0x2e);
        EXPECT(gbc.readMem(0x9497), 0x63);
        // 2E 01B8
        gbc.setState(0xab94, 0x2430, 0x3590, 0x2038, 0x1870, 0xd28d, 0x0, 0x1);
        gbc.writeMem(0xab94, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0xab96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab94), 0x2e);
        EXPECT(gbc.readMem(0xab95), 0x69);
        // 2E 01B9
        gbc.setState(0x5519, 0x5c66, 0x7e10, 0xed41, 0x164c, 0x5589, 0x0, 0x1);
        gbc.writeMem(0x5519, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5c66);
        EXPECT(gbc.pc(), 0x551b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01BA
        gbc.setState(0xcf8a, 0x46ea, 0xe070, 0x292c, 0xb48e, 0x2bef, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x46ea);
        EXPECT(gbc.pc(), 0xcf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8a), 0x2e);
        EXPECT(gbc.readMem(0xcf8b), 0x69);
        // 2E 01BB
        gbc.setState(0x7b03, 0x35fe, 0x77a0, 0x2c01, 0x7f4c, 0xee19, 0x0, 0x1);
        gbc.writeMem(0x7b03, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x35fe);
        EXPECT(gbc.pc(), 0x7b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01BC
        gbc.setState(0x3883, 0xd655, 0x5790, 0x76ac, 0xb713, 0xa5, 0x0, 0x1);
        gbc.writeMem(0x3883, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd655);
        EXPECT(gbc.pc(), 0x3885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01BD
        gbc.setState(0xbe69, 0xef9b, 0x5510, 0xe39f, 0x9b3f, 0xfb50, 0x0, 0x1);
        gbc.writeMem(0xbe69, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xef9b);
        EXPECT(gbc.pc(), 0xbe6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe69), 0x2e);
        EXPECT(gbc.readMem(0xbe6a), 0x7c);
        // 2E 01BE
        gbc.setState(0x2abc, 0x62ca, 0xd270, 0x7651, 0xb0f5, 0xfb2c, 0x1, 0x0);
        gbc.writeMem(0x2abc, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x62ca);
        EXPECT(gbc.pc(), 0x2abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01BF
        gbc.setState(0x367d, 0x1f47, 0x9450, 0xc290, 0x189f, 0x5268, 0x1, 0x0);
        gbc.writeMem(0x367d, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1f47);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C0
        gbc.setState(0xa9ec, 0xdd76, 0x73c0, 0xf305, 0x8ac3, 0x4bf3, 0x0, 0x0);
        gbc.writeMem(0xa9ec, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdd76);
        EXPECT(gbc.pc(), 0xa9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ec), 0x2e);
        EXPECT(gbc.readMem(0xa9ed), 0xa3);
        // 2E 01C1
        gbc.setState(0xe3cb, 0x2a8e, 0x3c50, 0xb906, 0xa6a1, 0x6183, 0x0, 0x1);
        gbc.writeMem(0xe3cb, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2a8e);
        EXPECT(gbc.pc(), 0xe3cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3cb), 0x2e);
        EXPECT(gbc.readMem(0xe3cc), 0xcc);
        // 2E 01C2
        gbc.setState(0x4972, 0x6b7b, 0x4090, 0x1775, 0xc622, 0x165b, 0x0, 0x1);
        gbc.writeMem(0x4972, { 0x2e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6b7b);
        EXPECT(gbc.pc(), 0x4974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C3
        gbc.setState(0x932b, 0x7bc9, 0x9920, 0xa2fd, 0xe60e, 0xbac0, 0x1, 0x0);
        gbc.writeMem(0x932b, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0x932d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932b), 0x2e);
        EXPECT(gbc.readMem(0x932c), 0xf6);
        // 2E 01C4
        gbc.setState(0x7bf6, 0xaf6d, 0x5f90, 0x7153, 0x94a1, 0xa829, 0x0, 0x0);
        gbc.writeMem(0x7bf6, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xaf6d);
        EXPECT(gbc.pc(), 0x7bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C5
        gbc.setState(0x7ebd, 0xed04, 0x63d0, 0x4d28, 0xa06f, 0x4cb3, 0x1, 0x1);
        gbc.writeMem(0x7ebd, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xed04);
        EXPECT(gbc.pc(), 0x7ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C6
        gbc.setState(0x2e9c, 0x58ac, 0xab0, 0xe8a1, 0x9cac, 0x8e61, 0x0, 0x0);
        gbc.writeMem(0x2e9c, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x58ac);
        EXPECT(gbc.pc(), 0x2e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C7
        gbc.setState(0x7c1a, 0xdce8, 0xcff0, 0x8194, 0x7dae, 0x1c46, 0x0, 0x0);
        gbc.writeMem(0x7c1a, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdce8);
        EXPECT(gbc.pc(), 0x7c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01C8
        gbc.setState(0x903f, 0x43b9, 0x40b0, 0xb3ed, 0x1d84, 0x9a6e, 0x1, 0x1);
        gbc.writeMem(0x903f, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x43b9);
        EXPECT(gbc.pc(), 0x9041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903f), 0x2e);
        EXPECT(gbc.readMem(0x9040), 0x1b);
        // 2E 01C9
        gbc.setState(0xbb8c, 0xccd2, 0x1160, 0x4e4f, 0xa84d, 0x466a, 0x0, 0x0);
        gbc.writeMem(0xbb8c, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xccd2);
        EXPECT(gbc.pc(), 0xbb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8c), 0x2e);
        EXPECT(gbc.readMem(0xbb8d), 0xb7);
        // 2E 01CA
        gbc.setState(0x9bad, 0x1848, 0x4650, 0x164c, 0x4a79, 0xcac6, 0x1, 0x0);
        gbc.writeMem(0x9bad, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1848);
        EXPECT(gbc.pc(), 0x9baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bad), 0x2e);
        EXPECT(gbc.readMem(0x9bae), 0x45);
        // 2E 01CC
        gbc.setState(0xb39, 0x56df, 0xe60, 0xa501, 0x948d, 0xfd07, 0x0, 0x0);
        gbc.writeMem(0xb39, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x56df);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01CD
        gbc.setState(0x6f5c, 0xdc95, 0x2620, 0x3ae3, 0x21f9, 0x5026, 0x0, 0x0);
        gbc.writeMem(0x6f5c, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0x6f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01CE
        gbc.setState(0x773d, 0x266, 0x84e0, 0x652f, 0xd0e1, 0x3267, 0x1, 0x0);
        gbc.writeMem(0x773d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x266);
        EXPECT(gbc.pc(), 0x773f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01CF
        gbc.setState(0x37f8, 0xf49, 0x57b0, 0x42b3, 0xe6dc, 0x3d56, 0x0, 0x0);
        gbc.writeMem(0x37f8, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf49);
        EXPECT(gbc.pc(), 0x37fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01D0
        gbc.setState(0x8e75, 0x3b74, 0xc160, 0xc6f1, 0x51f3, 0x6887, 0x1, 0x0);
        gbc.writeMem(0x8e75, { 0x2e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3b74);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e75), 0x2e);
        EXPECT(gbc.readMem(0x8e76), 0x30);
        // 2E 01D1
        gbc.setState(0x685d, 0x4336, 0x9cc0, 0xed12, 0x458, 0x9e4d, 0x0, 0x1);
        gbc.writeMem(0x685d, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4336);
        EXPECT(gbc.pc(), 0x685f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01D3
        gbc.setState(0x287e, 0x14fa, 0xfec0, 0x51a5, 0x687c, 0x33c6, 0x0, 0x0);
        gbc.writeMem(0x287e, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x14fa);
        EXPECT(gbc.pc(), 0x2880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01D4
        gbc.setState(0x3ba, 0x641c, 0x88e0, 0x45f7, 0xd56a, 0x9da9, 0x0, 0x0);
        gbc.writeMem(0x3ba, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x641c);
        EXPECT(gbc.pc(), 0x3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01D5
        gbc.setState(0xc6a5, 0x969e, 0x9820, 0x8ac6, 0x905d, 0x4bf, 0x0, 0x0);
        gbc.writeMem(0xc6a5, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x969e);
        EXPECT(gbc.pc(), 0xc6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a5), 0x2e);
        EXPECT(gbc.readMem(0xc6a6), 0x1f);
        // 2E 01D6
        gbc.setState(0x4829, 0x5472, 0x58e0, 0x7b86, 0xca74, 0x76a7, 0x1, 0x1);
        gbc.writeMem(0x4829, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5472);
        EXPECT(gbc.pc(), 0x482b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01D7
        gbc.setState(0xe066, 0x5bf8, 0x3fa0, 0xe11c, 0xa06b, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xe066, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5bf8);
        EXPECT(gbc.pc(), 0xe068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe066), 0x2e);
        EXPECT(gbc.readMem(0xe067), 0x7a);
        // 2E 01D8
        gbc.setState(0x141f, 0xeb3d, 0xc600, 0xe5a7, 0xc946, 0xfafa, 0x0, 0x0);
        gbc.writeMem(0x141f, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xeb3d);
        EXPECT(gbc.pc(), 0x1421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01D9
        gbc.setState(0x5e10, 0xe3f8, 0xb900, 0x54db, 0xcc55, 0x485f, 0x0, 0x1);
        gbc.writeMem(0x5e10, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe3f8);
        EXPECT(gbc.pc(), 0x5e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01DA
        gbc.setState(0xed76, 0x8966, 0xda70, 0x8778, 0xd4e5, 0x4d82, 0x0, 0x0);
        gbc.writeMem(0xed76, { 0x2e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8966);
        EXPECT(gbc.pc(), 0xed78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed76), 0x2e);
        EXPECT(gbc.readMem(0xed77), 0x6d);
        // 2E 01DB
        gbc.setState(0x2be7, 0xea8e, 0xc6b0, 0xfc4d, 0xd529, 0x5df8, 0x0, 0x1);
        gbc.writeMem(0x2be7, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xea8e);
        EXPECT(gbc.pc(), 0x2be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01DC
        gbc.setState(0xdd3e, 0x5b3b, 0x2150, 0xb874, 0x65b6, 0xbd6c, 0x1, 0x1);
        gbc.writeMem(0xdd3e, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5b3b);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3e), 0x2e);
        EXPECT(gbc.readMem(0xdd3f), 0x78);
        // 2E 01DD
        gbc.setState(0x5a2d, 0xbb3d, 0x5c20, 0x9606, 0xef2f, 0x8b0a, 0x1, 0x1);
        gbc.writeMem(0x5a2d, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbb3d);
        EXPECT(gbc.pc(), 0x5a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01DE
        gbc.setState(0xbb1c, 0x57f0, 0x7200, 0x12ef, 0xa02f, 0x4837, 0x1, 0x0);
        gbc.writeMem(0xbb1c, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x57f0);
        EXPECT(gbc.pc(), 0xbb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1c), 0x2e);
        EXPECT(gbc.readMem(0xbb1d), 0x11);
        // 2E 01DF
        gbc.setState(0x393, 0xeb08, 0x3560, 0x803a, 0x2336, 0x87fe, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xeb08);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01E0
        gbc.setState(0xbb2c, 0xc3b0, 0x7520, 0x87c7, 0x11a6, 0x4ec5, 0x0, 0x0);
        gbc.writeMem(0xbb2c, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc3b0);
        EXPECT(gbc.pc(), 0xbb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2c), 0x2e);
        EXPECT(gbc.readMem(0xbb2d), 0x17);
        // 2E 01E1
        gbc.setState(0xa98c, 0x3b2f, 0x8970, 0x83be, 0x9ea8, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0xa98c, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b2f);
        EXPECT(gbc.pc(), 0xa98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98c), 0x2e);
        EXPECT(gbc.readMem(0xa98d), 0xc5);
        // 2E 01E2
        gbc.setState(0x7a98, 0x7ae1, 0x2fd0, 0x977, 0x40ee, 0x737b, 0x1, 0x1);
        gbc.writeMem(0x7a98, { 0x2e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0x7a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01E3
        gbc.setState(0x6912, 0xcc8b, 0xac50, 0xa676, 0x11fd, 0x3fab, 0x1, 0x0);
        gbc.writeMem(0x6912, { 0x2e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcc8b);
        EXPECT(gbc.pc(), 0x6914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01E4
        gbc.setState(0xd7c2, 0x23ff, 0x9440, 0x93dd, 0xdde5, 0xb29a, 0x1, 0x1);
        gbc.writeMem(0xd7c2, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x23ff);
        EXPECT(gbc.pc(), 0xd7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c2), 0x2e);
        EXPECT(gbc.readMem(0xd7c3), 0x5);
        // 2E 01E5
        gbc.setState(0x14db, 0x7957, 0xc9a0, 0x7410, 0x6677, 0x526b, 0x1, 0x1);
        gbc.writeMem(0x14db, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7957);
        EXPECT(gbc.pc(), 0x14dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01E6
        gbc.setState(0x2b34, 0xdf0b, 0x4af0, 0xf4aa, 0xbd71, 0x2dd9, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdf0b);
        EXPECT(gbc.pc(), 0x2b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01E7
        gbc.setState(0x24b3, 0x3090, 0x2720, 0x442d, 0x160b, 0xbd64, 0x1, 0x0);
        gbc.writeMem(0x24b3, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3090);
        EXPECT(gbc.pc(), 0x24b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01E8
        gbc.setState(0x1115, 0xa359, 0xad60, 0x77cb, 0x973e, 0x808e, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa359);
        EXPECT(gbc.pc(), 0x1117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01E9
        gbc.setState(0x64cd, 0xf3d4, 0x1b0, 0x2184, 0xe7f6, 0x890d, 0x1, 0x1);
        gbc.writeMem(0x64cd, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0x64cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01EA
        gbc.setState(0x446b, 0xa2b7, 0xb0f0, 0x5276, 0x8bb3, 0xd62e, 0x1, 0x1);
        gbc.writeMem(0x446b, { 0x2e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa2b7);
        EXPECT(gbc.pc(), 0x446d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01EB
        gbc.setState(0xd222, 0xb95c, 0xc600, 0x997a, 0x52ab, 0x4ca5, 0x0, 0x0);
        gbc.writeMem(0xd222, { 0x2e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb95c);
        EXPECT(gbc.pc(), 0xd224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd222), 0x2e);
        EXPECT(gbc.readMem(0xd223), 0x26);
        // 2E 01EC
        gbc.setState(0x849c, 0xd4d7, 0xf0b0, 0x7a01, 0x70e2, 0xf696, 0x0, 0x0);
        gbc.writeMem(0x849c, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd4d7);
        EXPECT(gbc.pc(), 0x849e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849c), 0x2e);
        EXPECT(gbc.readMem(0x849d), 0x99);
        // 2E 01ED
        gbc.setState(0xd67a, 0x777e, 0x2030, 0x8f6a, 0x84d8, 0x9b40, 0x1, 0x0);
        gbc.writeMem(0xd67a, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x777e);
        EXPECT(gbc.pc(), 0xd67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67a), 0x2e);
        EXPECT(gbc.readMem(0xd67b), 0x1c);
        // 2E 01EE
        gbc.setState(0x13e5, 0xb517, 0xb2e0, 0xb833, 0xfd65, 0x80f7, 0x0, 0x1);
        gbc.writeMem(0x13e5, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb517);
        EXPECT(gbc.pc(), 0x13e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 01EF
        gbc.setState(0x5302, 0x7ff0, 0x4470, 0x928e, 0xac17, 0x882d, 0x1, 0x0);
        gbc.writeMem(0x5302, { 0x2e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7ff0);
        EXPECT(gbc.pc(), 0x5304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 01F0
        gbc.setState(0xb5a2, 0xfb98, 0xe340, 0x4fbb, 0xdba5, 0x145, 0x0, 0x0);
        gbc.writeMem(0xb5a2, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0xb5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a2), 0x2e);
        EXPECT(gbc.readMem(0xb5a3), 0x63);
        // 2E 01F1
        gbc.setState(0xe31d, 0x61c0, 0xa0c0, 0x7576, 0x8b32, 0xf5e4, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0x2e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x61c0);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31d), 0x2e);
        EXPECT(gbc.readMem(0xe31e), 0xf4);
        // 2E 01F2
        gbc.setState(0xc3e8, 0xb513, 0xaa60, 0x67ed, 0x8525, 0x183b, 0x1, 0x1);
        gbc.writeMem(0xc3e8, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb513);
        EXPECT(gbc.pc(), 0xc3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e8), 0x2e);
        EXPECT(gbc.readMem(0xc3e9), 0xa5);
        // 2E 01F3
        gbc.setState(0x809b, 0x8548, 0x9270, 0x6b2, 0xf007, 0x48f2, 0x1, 0x0);
        gbc.writeMem(0x809b, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8548);
        EXPECT(gbc.pc(), 0x809d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809b), 0x2e);
        EXPECT(gbc.readMem(0x809c), 0x61);
        // 2E 01F4
        gbc.setState(0x98e6, 0xa889, 0x16e0, 0xd26, 0xb82, 0xb2ee, 0x0, 0x0);
        gbc.writeMem(0x98e6, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa889);
        EXPECT(gbc.pc(), 0x98e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e6), 0x2e);
        EXPECT(gbc.readMem(0x98e7), 0xbd);
        // 2E 01F5
        gbc.setState(0xaf94, 0x63a5, 0x5d00, 0x4fe9, 0x3302, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0xaf94, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0xaf96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf94), 0x2e);
        EXPECT(gbc.readMem(0xaf95), 0x6c);
        // 2E 01F6
        gbc.setState(0x2311, 0x4641, 0x4080, 0xc618, 0x1dc3, 0xea4, 0x1, 0x0);
        gbc.writeMem(0x2311, { 0x2e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4641);
        EXPECT(gbc.pc(), 0x2313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01F7
        gbc.setState(0x4e97, 0x6fdb, 0xba40, 0x11a, 0x9bd9, 0xcb11, 0x1, 0x1);
        gbc.writeMem(0x4e97, { 0x2e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6fdb);
        EXPECT(gbc.pc(), 0x4e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01F8
        gbc.setState(0x8322, 0x3325, 0x3190, 0x9355, 0xf309, 0x6257, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0x8324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8322), 0x2e);
        EXPECT(gbc.readMem(0x8323), 0x8f);
        // 2E 01F9
        gbc.setState(0xb34f, 0xcabb, 0x4140, 0x7f8e, 0x47e7, 0x417d, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcabb);
        EXPECT(gbc.pc(), 0xb351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34f), 0x2e);
        EXPECT(gbc.readMem(0xb350), 0x74);
        // 2E 01FA
        gbc.setState(0x3b6b, 0x2ef4, 0xb280, 0x3460, 0x745d, 0xc847, 0x0, 0x0);
        gbc.writeMem(0x3b6b, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2ef4);
        EXPECT(gbc.pc(), 0x3b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01FB
        gbc.setState(0x86f8, 0xaeeb, 0x2500, 0xe276, 0xff54, 0x3491, 0x0, 0x1);
        gbc.writeMem(0x86f8, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaeeb);
        EXPECT(gbc.pc(), 0x86fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f8), 0x2e);
        EXPECT(gbc.readMem(0x86f9), 0x0);
        // 2E 01FC
        gbc.setState(0x784b, 0x1b45, 0x7ed0, 0x8bed, 0x9cdf, 0x9d6c, 0x0, 0x1);
        gbc.writeMem(0x784b, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1b45);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 01FD
        gbc.setState(0x7093, 0x4247, 0x4880, 0x5054, 0x63c2, 0x67a8, 0x1, 0x1);
        gbc.writeMem(0x7093, { 0x2e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4247);
        EXPECT(gbc.pc(), 0x7095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 01FE
        gbc.setState(0xce3f, 0xf829, 0xbf50, 0x5939, 0x88f3, 0xbb67, 0x1, 0x0);
        gbc.writeMem(0xce3f, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf829);
        EXPECT(gbc.pc(), 0xce41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3f), 0x2e);
        EXPECT(gbc.readMem(0xce40), 0xf6);
        // 2E 01FF
        gbc.setState(0xba0f, 0x50cd, 0x6b70, 0x259e, 0x1cd4, 0x4a4b, 0x0, 0x0);
        gbc.writeMem(0xba0f, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x50cd);
        EXPECT(gbc.pc(), 0xba11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0f), 0x2e);
        EXPECT(gbc.readMem(0xba10), 0x9c);
        // 2E 0200
        gbc.setState(0x37e3, 0xdbab, 0x6ee0, 0xa26a, 0x3a96, 0xd567, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0x2e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdbab);
        EXPECT(gbc.pc(), 0x37e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0201
        gbc.setState(0x3d97, 0xd90c, 0x7310, 0x9a68, 0x5a62, 0x15c5, 0x0, 0x0);
        gbc.writeMem(0x3d97, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0x3d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0202
        gbc.setState(0x721f, 0xc8ea, 0xd930, 0xbac0, 0xc195, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0x721f, { 0x2e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc8ea);
        EXPECT(gbc.pc(), 0x7221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0203
        gbc.setState(0x73e0, 0x7447, 0x1940, 0x5366, 0x2c8f, 0x5fb4, 0x0, 0x1);
        gbc.writeMem(0x73e0, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7447);
        EXPECT(gbc.pc(), 0x73e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0204
        gbc.setState(0x75, 0x3255, 0x7870, 0xb195, 0x62e9, 0xb5e1, 0x1, 0x0);
        gbc.writeMem(0x75, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3255);
        EXPECT(gbc.pc(), 0x77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0205
        gbc.setState(0x57cc, 0xbffd, 0x2d70, 0x68fe, 0x2fd9, 0x193, 0x0, 0x1);
        gbc.writeMem(0x57cc, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbffd);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0206
        gbc.setState(0x5170, 0xc2ac, 0x2e60, 0x4b87, 0xa864, 0x1d2, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc2ac);
        EXPECT(gbc.pc(), 0x5172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0207
        gbc.setState(0x761a, 0xb3c8, 0x4b40, 0x3782, 0xb5b1, 0x69a2, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb3c8);
        EXPECT(gbc.pc(), 0x761c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0208
        gbc.setState(0x1af4, 0xa3c9, 0x2e60, 0x68c5, 0x681a, 0x8d7a, 0x1, 0x0);
        gbc.writeMem(0x1af4, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa3c9);
        EXPECT(gbc.pc(), 0x1af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0209
        gbc.setState(0x5a06, 0xdd13, 0x9a10, 0x6da1, 0x48f7, 0x9bb8, 0x1, 0x0);
        gbc.writeMem(0x5a06, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdd13);
        EXPECT(gbc.pc(), 0x5a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 020A
        gbc.setState(0xa1e9, 0xe657, 0x74e0, 0xf068, 0xfa0f, 0x96e9, 0x0, 0x1);
        gbc.writeMem(0xa1e9, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe657);
        EXPECT(gbc.pc(), 0xa1eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e9), 0x2e);
        EXPECT(gbc.readMem(0xa1ea), 0xf6);
        // 2E 020B
        gbc.setState(0xcd35, 0xb735, 0xb900, 0x17bc, 0x283, 0xd1c6, 0x1, 0x1);
        gbc.writeMem(0xcd35, { 0x2e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb735);
        EXPECT(gbc.pc(), 0xcd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd35), 0x2e);
        EXPECT(gbc.readMem(0xcd36), 0x72);
        // 2E 020C
        gbc.setState(0x18ea, 0x7943, 0x9110, 0xbf28, 0x28ba, 0x6870, 0x0, 0x1);
        gbc.writeMem(0x18ea, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7943);
        EXPECT(gbc.pc(), 0x18ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 020D
        gbc.setState(0x9c4b, 0xd36c, 0x3d90, 0x175, 0x280, 0x668e, 0x1, 0x0);
        gbc.writeMem(0x9c4b, { 0x2e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x9c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c4b), 0x2e);
        EXPECT(gbc.readMem(0x9c4c), 0x4f);
        // 2E 020E
        gbc.setState(0x902a, 0x1361, 0xf000, 0x215e, 0xe8eb, 0x6a8a, 0x0, 0x1);
        gbc.writeMem(0x902a, { 0x2e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1361);
        EXPECT(gbc.pc(), 0x902c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902a), 0x2e);
        EXPECT(gbc.readMem(0x902b), 0xf3);
        // 2E 020F
        gbc.setState(0x234b, 0x64ac, 0x1010, 0xfa9f, 0x2849, 0x4a5e, 0x0, 0x1);
        gbc.writeMem(0x234b, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x64ac);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0210
        gbc.setState(0x97d3, 0x9191, 0x18f0, 0x2707, 0xf4cb, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x97d3, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9191);
        EXPECT(gbc.pc(), 0x97d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d3), 0x2e);
        EXPECT(gbc.readMem(0x97d4), 0x25);
        // 2E 0211
        gbc.setState(0x15ff, 0xfc85, 0xdc90, 0x357f, 0xd4b6, 0x6a33, 0x1, 0x0);
        gbc.writeMem(0x15ff, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0x1601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0212
        gbc.setState(0x88cd, 0xf0e2, 0xc080, 0xd255, 0x2134, 0x36a0, 0x0, 0x1);
        gbc.writeMem(0x88cd, { 0x2e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf0e2);
        EXPECT(gbc.pc(), 0x88cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cd), 0x2e);
        EXPECT(gbc.readMem(0x88ce), 0x8e);
        // 2E 0213
        gbc.setState(0xa192, 0xe94, 0x4550, 0x83ce, 0xfc2a, 0x10f, 0x1, 0x0);
        gbc.writeMem(0xa192, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe94);
        EXPECT(gbc.pc(), 0xa194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa192), 0x2e);
        EXPECT(gbc.readMem(0xa193), 0x1b);
        // 2E 0214
        gbc.setState(0x7f0c, 0x7078, 0x7790, 0xc4eb, 0x91b3, 0xad2e, 0x1, 0x1);
        gbc.writeMem(0x7f0c, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7078);
        EXPECT(gbc.pc(), 0x7f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0215
        gbc.setState(0x5fe, 0x25c7, 0xa420, 0xe6c4, 0xc00b, 0x3e16, 0x1, 0x0);
        gbc.writeMem(0x5fe, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x25c7);
        EXPECT(gbc.pc(), 0x600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0216
        gbc.setState(0x1ce9, 0x9d85, 0xc310, 0x989, 0x89a, 0x579a, 0x1, 0x1);
        gbc.writeMem(0x1ce9, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9d85);
        EXPECT(gbc.pc(), 0x1ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0217
        gbc.setState(0x466b, 0x632c, 0x8100, 0xbf1, 0xd472, 0xcfd8, 0x1, 0x0);
        gbc.writeMem(0x466b, { 0x2e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x632c);
        EXPECT(gbc.pc(), 0x466d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0218
        gbc.setState(0xc432, 0xeaa5, 0x64d0, 0x97a, 0x4f30, 0x8a2f, 0x0, 0x1);
        gbc.writeMem(0xc432, { 0x2e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xeaa5);
        EXPECT(gbc.pc(), 0xc434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc432), 0x2e);
        EXPECT(gbc.readMem(0xc433), 0x1);
        // 2E 0219
        gbc.setState(0xe6c6, 0x5500, 0xd750, 0xac11, 0x2e8d, 0xf6ff, 0x1, 0x1);
        gbc.writeMem(0xe6c6, { 0x2e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5500);
        EXPECT(gbc.pc(), 0xe6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c6), 0x2e);
        EXPECT(gbc.readMem(0xe6c7), 0xaa);
        // 2E 021A
        gbc.setState(0xd1b9, 0xe88e, 0xaa80, 0x79c9, 0xa382, 0x2cd0, 0x1, 0x1);
        gbc.writeMem(0xd1b9, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe88e);
        EXPECT(gbc.pc(), 0xd1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b9), 0x2e);
        EXPECT(gbc.readMem(0xd1ba), 0x2a);
        // 2E 021B
        gbc.setState(0xb32c, 0x35a8, 0x5f90, 0xfba4, 0x85a8, 0x7714, 0x0, 0x0);
        gbc.writeMem(0xb32c, { 0x2e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x35a8);
        EXPECT(gbc.pc(), 0xb32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32c), 0x2e);
        EXPECT(gbc.readMem(0xb32d), 0xea);
        // 2E 021D
        gbc.setState(0x2578, 0xcc5d, 0x9530, 0x4fc9, 0x21fe, 0x84f7, 0x1, 0x0);
        gbc.writeMem(0x2578, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0x257a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 021E
        gbc.setState(0x3498, 0x4aba, 0x6fd0, 0x7cd1, 0x8b52, 0x9465, 0x0, 0x0);
        gbc.writeMem(0x3498, { 0x2e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0x349a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 021F
        gbc.setState(0xe6b9, 0xfaac, 0xb10, 0xae5, 0x69b, 0xc96b, 0x1, 0x0);
        gbc.writeMem(0xe6b9, { 0x2e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfaac);
        EXPECT(gbc.pc(), 0xe6bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b9), 0x2e);
        EXPECT(gbc.readMem(0xe6ba), 0xb0);
        // 2E 0220
        gbc.setState(0x26bc, 0x1fab, 0x700, 0x8fa, 0xd747, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0x26bc, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1fab);
        EXPECT(gbc.pc(), 0x26be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0221
        gbc.setState(0x22ee, 0x1c6a, 0x4be0, 0x3351, 0x47ad, 0x396c, 0x0, 0x1);
        gbc.writeMem(0x22ee, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1c6a);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0222
        gbc.setState(0x36a1, 0x5259, 0xdb20, 0xbaa5, 0xfec8, 0xcb62, 0x0, 0x0);
        gbc.writeMem(0x36a1, { 0x2e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5259);
        EXPECT(gbc.pc(), 0x36a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0223
        gbc.setState(0x47ab, 0x519c, 0x9d80, 0x62dd, 0x5f05, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x47ab, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x519c);
        EXPECT(gbc.pc(), 0x47ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0224
        gbc.setState(0xcaef, 0xb7, 0x6960, 0x9896, 0xe553, 0x107e, 0x1, 0x0);
        gbc.writeMem(0xcaef, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb7);
        EXPECT(gbc.pc(), 0xcaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaef), 0x2e);
        EXPECT(gbc.readMem(0xcaf0), 0xdd);
        // 2E 0225
        gbc.setState(0xe3f8, 0xbf58, 0x3130, 0xe1f7, 0x6d67, 0x327f, 0x1, 0x0);
        gbc.writeMem(0xe3f8, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0xe3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f8), 0x2e);
        EXPECT(gbc.readMem(0xe3f9), 0x8);
        // 2E 0226
        gbc.setState(0x499d, 0x72d3, 0x2eb0, 0x99c2, 0x3c5e, 0x3b11, 0x0, 0x1);
        gbc.writeMem(0x499d, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x72d3);
        EXPECT(gbc.pc(), 0x499f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0227
        gbc.setState(0x1ed7, 0x38c0, 0x5120, 0x1bf5, 0x3b13, 0x4bfa, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0x2e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x38c0);
        EXPECT(gbc.pc(), 0x1ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0228
        gbc.setState(0xd2b5, 0x45ce, 0xcd20, 0x1df6, 0x8dff, 0xdcf, 0x1, 0x0);
        gbc.writeMem(0xd2b5, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x45ce);
        EXPECT(gbc.pc(), 0xd2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b5), 0x2e);
        EXPECT(gbc.readMem(0xd2b6), 0x2);
        // 2E 0229
        gbc.setState(0x3ec2, 0x64fd, 0x41e0, 0xa65d, 0x37bb, 0x24b6, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x64fd);
        EXPECT(gbc.pc(), 0x3ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 022B
        gbc.setState(0x7217, 0x4fd2, 0x65a0, 0xeeb1, 0x3c1e, 0x56ad, 0x1, 0x1);
        gbc.writeMem(0x7217, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4fd2);
        EXPECT(gbc.pc(), 0x7219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 022C
        gbc.setState(0x277, 0x15d8, 0x2340, 0x6c41, 0x2744, 0xe664, 0x1, 0x1);
        gbc.writeMem(0x277, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x15d8);
        EXPECT(gbc.pc(), 0x279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 022D
        gbc.setState(0x4a35, 0x8dfb, 0xa550, 0xc1f1, 0xac28, 0x95b8, 0x1, 0x0);
        gbc.writeMem(0x4a35, { 0x2e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8dfb);
        EXPECT(gbc.pc(), 0x4a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 022E
        gbc.setState(0xd176, 0x43ab, 0xff70, 0x92a0, 0xe5f3, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0xd176, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x43ab);
        EXPECT(gbc.pc(), 0xd178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd176), 0x2e);
        EXPECT(gbc.readMem(0xd177), 0xe7);
        // 2E 022F
        gbc.setState(0xc7cd, 0xa175, 0x5b20, 0x7c43, 0x67d0, 0x3510, 0x0, 0x0);
        gbc.writeMem(0xc7cd, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa175);
        EXPECT(gbc.pc(), 0xc7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7cd), 0x2e);
        EXPECT(gbc.readMem(0xc7ce), 0x19);
        // 2E 0230
        gbc.setState(0x7035, 0x740c, 0xe280, 0x20d6, 0x6dcd, 0xd3ac, 0x1, 0x1);
        gbc.writeMem(0x7035, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0x7037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0231
        gbc.setState(0x3c39, 0x3520, 0xf30, 0x6de9, 0x8e77, 0x61b9, 0x1, 0x1);
        gbc.writeMem(0x3c39, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3520);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0232
        gbc.setState(0x87cc, 0x739c, 0xbc50, 0x9e05, 0x9002, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0x87cc, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x739c);
        EXPECT(gbc.pc(), 0x87ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87cc), 0x2e);
        EXPECT(gbc.readMem(0x87cd), 0x49);
        // 2E 0233
        gbc.setState(0xa209, 0x7034, 0x9f80, 0x7d5d, 0x514f, 0x3517, 0x1, 0x0);
        gbc.writeMem(0xa209, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7034);
        EXPECT(gbc.pc(), 0xa20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa209), 0x2e);
        EXPECT(gbc.readMem(0xa20a), 0x3a);
        // 2E 0235
        gbc.setState(0xd4c6, 0xb2c, 0x1490, 0x78d3, 0x9451, 0xad90, 0x0, 0x0);
        gbc.writeMem(0xd4c6, { 0x2e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb2c);
        EXPECT(gbc.pc(), 0xd4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c6), 0x2e);
        EXPECT(gbc.readMem(0xd4c7), 0xce);
        // 2E 0236
        gbc.setState(0x33c4, 0x9659, 0x2bf0, 0x5127, 0x9a87, 0x3bb0, 0x0, 0x0);
        gbc.writeMem(0x33c4, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9659);
        EXPECT(gbc.pc(), 0x33c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0237
        gbc.setState(0xa82d, 0xa180, 0x16f0, 0xc670, 0xc428, 0x8929, 0x0, 0x0);
        gbc.writeMem(0xa82d, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa180);
        EXPECT(gbc.pc(), 0xa82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82d), 0x2e);
        EXPECT(gbc.readMem(0xa82e), 0x17);
        // 2E 0238
        gbc.setState(0x22c2, 0xfa93, 0x92b0, 0x8908, 0x7428, 0x5a3, 0x0, 0x0);
        gbc.writeMem(0x22c2, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0239
        gbc.setState(0x3684, 0x3e24, 0xb670, 0x994b, 0x76a9, 0x5c4c, 0x1, 0x1);
        gbc.writeMem(0x3684, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 023A
        gbc.setState(0x8a02, 0x8c51, 0x14f0, 0x8b69, 0xdb5f, 0x3e83, 0x1, 0x0);
        gbc.writeMem(0x8a02, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8c51);
        EXPECT(gbc.pc(), 0x8a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a02), 0x2e);
        EXPECT(gbc.readMem(0x8a03), 0x7a);
        // 2E 023B
        gbc.setState(0x2e4d, 0x7477, 0x2330, 0x799d, 0xd9c0, 0x943b, 0x0, 0x1);
        gbc.writeMem(0x2e4d, { 0x2e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7477);
        EXPECT(gbc.pc(), 0x2e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 023C
        gbc.setState(0xaa81, 0x3ef2, 0xafb0, 0xe6f6, 0x9551, 0xeb81, 0x1, 0x0);
        gbc.writeMem(0xaa81, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3ef2);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa81), 0x2e);
        EXPECT(gbc.readMem(0xaa82), 0x28);
        // 2E 023D
        gbc.setState(0x927b, 0x4933, 0x59f0, 0x5428, 0xecf0, 0x3dbb, 0x1, 0x0);
        gbc.writeMem(0x927b, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4933);
        EXPECT(gbc.pc(), 0x927d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927b), 0x2e);
        EXPECT(gbc.readMem(0x927c), 0x7c);
        // 2E 023E
        gbc.setState(0x5fa8, 0x4881, 0xd3e0, 0x207c, 0xbe28, 0xe905, 0x0, 0x0);
        gbc.writeMem(0x5fa8, { 0x2e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4881);
        EXPECT(gbc.pc(), 0x5faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 023F
        gbc.setState(0xbb9f, 0x8678, 0x9750, 0x800a, 0x832e, 0x7b72, 0x1, 0x1);
        gbc.writeMem(0xbb9f, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0xbba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9f), 0x2e);
        EXPECT(gbc.readMem(0xbba0), 0xa7);
        // 2E 0240
        gbc.setState(0x315b, 0xc6c5, 0x25f0, 0x9bdc, 0xcc4f, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x315b, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc6c5);
        EXPECT(gbc.pc(), 0x315d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0241
        gbc.setState(0x8a1a, 0x8b06, 0x6e10, 0xc7a5, 0xd98c, 0xa4c2, 0x1, 0x1);
        gbc.writeMem(0x8a1a, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8b06);
        EXPECT(gbc.pc(), 0x8a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1a), 0x2e);
        EXPECT(gbc.readMem(0x8a1b), 0xc1);
        // 2E 0242
        gbc.setState(0x73bf, 0x7d4b, 0x20e0, 0x2320, 0x8336, 0x989c, 0x1, 0x0);
        gbc.writeMem(0x73bf, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7d4b);
        EXPECT(gbc.pc(), 0x73c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0243
        gbc.setState(0x27ce, 0x70f6, 0xeb30, 0xb4cb, 0xd7e4, 0x3043, 0x0, 0x1);
        gbc.writeMem(0x27ce, { 0x2e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x70f6);
        EXPECT(gbc.pc(), 0x27d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0244
        gbc.setState(0xef95, 0x8f6, 0xf710, 0xa8a0, 0xa65, 0xe3e3, 0x1, 0x0);
        gbc.writeMem(0xef95, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8f6);
        EXPECT(gbc.pc(), 0xef97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef95), 0x2e);
        EXPECT(gbc.readMem(0xef96), 0x9b);
        // 2E 0245
        gbc.setState(0x9a7f, 0xa92, 0x1ae0, 0x2693, 0x2573, 0xdb8e, 0x0, 0x0);
        gbc.writeMem(0x9a7f, { 0x2e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0x9a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7f), 0x2e);
        EXPECT(gbc.readMem(0x9a80), 0x5a);
        // 2E 0246
        gbc.setState(0x1edf, 0xea4e, 0xd4f0, 0xaeb7, 0x64f6, 0x6501, 0x1, 0x1);
        gbc.writeMem(0x1edf, { 0x2e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xea4e);
        EXPECT(gbc.pc(), 0x1ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0247
        gbc.setState(0x2011, 0xf107, 0xfce0, 0xd551, 0xf122, 0x110f, 0x1, 0x1);
        gbc.writeMem(0x2011, { 0x2e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0x2013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0248
        gbc.setState(0x4fb7, 0x63a2, 0x93e0, 0xe95d, 0x4fe, 0x5180, 0x0, 0x1);
        gbc.writeMem(0x4fb7, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x63a2);
        EXPECT(gbc.pc(), 0x4fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0249
        gbc.setState(0x85ab, 0x9ce, 0x4d40, 0x6b72, 0xac62, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x85ab, { 0x2e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9ce);
        EXPECT(gbc.pc(), 0x85ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ab), 0x2e);
        EXPECT(gbc.readMem(0x85ac), 0xca);
        // 2E 024A
        gbc.setState(0xe1ec, 0x12ce, 0xaf10, 0x5f2c, 0xc3e, 0x3674, 0x0, 0x1);
        gbc.writeMem(0xe1ec, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x12ce);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ec), 0x2e);
        EXPECT(gbc.readMem(0xe1ed), 0x64);
        // 2E 024C
        gbc.setState(0xe511, 0x63dc, 0xccc0, 0x47a1, 0x614b, 0x45c, 0x1, 0x1);
        gbc.writeMem(0xe511, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x63dc);
        EXPECT(gbc.pc(), 0xe513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe511), 0x2e);
        EXPECT(gbc.readMem(0xe512), 0xb3);
        // 2E 024D
        gbc.setState(0x1233, 0x2b1a, 0x6b80, 0xb9dc, 0x4a37, 0xc874, 0x0, 0x1);
        gbc.writeMem(0x1233, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2b1a);
        EXPECT(gbc.pc(), 0x1235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 024E
        gbc.setState(0x5468, 0x8126, 0x7a10, 0x68f2, 0xab05, 0x7cfb, 0x1, 0x0);
        gbc.writeMem(0x5468, { 0x2e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8126);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 024F
        gbc.setState(0x7bea, 0x8fb8, 0x7f50, 0x5322, 0x4b93, 0x2d85, 0x0, 0x1);
        gbc.writeMem(0x7bea, { 0x2e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8fb8);
        EXPECT(gbc.pc(), 0x7bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0250
        gbc.setState(0xbd6c, 0x18e1, 0x57e0, 0xb1bb, 0x79db, 0x39d3, 0x0, 0x0);
        gbc.writeMem(0xbd6c, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x18e1);
        EXPECT(gbc.pc(), 0xbd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6c), 0x2e);
        EXPECT(gbc.readMem(0xbd6d), 0x69);
        // 2E 0251
        gbc.setState(0x8ba, 0xd438, 0x6b50, 0x430d, 0x84a7, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0x8ba, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd438);
        EXPECT(gbc.pc(), 0x8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0252
        gbc.setState(0xdf30, 0x627e, 0x17b0, 0xbf13, 0x4e00, 0xad37, 0x0, 0x1);
        gbc.writeMem(0xdf30, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x627e);
        EXPECT(gbc.pc(), 0xdf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf30), 0x2e);
        EXPECT(gbc.readMem(0xdf31), 0x7c);
        // 2E 0253
        gbc.setState(0xe321, 0x6e20, 0x8fa0, 0x79dd, 0x1acf, 0x8175, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0xe323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe321), 0x2e);
        EXPECT(gbc.readMem(0xe322), 0x4a);
        // 2E 0255
        gbc.setState(0xcc06, 0xb071, 0xdb00, 0x7bf9, 0x72f9, 0x883a, 0x1, 0x1);
        gbc.writeMem(0xcc06, { 0x2e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0xcc08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc06), 0x2e);
        EXPECT(gbc.readMem(0xcc07), 0x58);
        // 2E 0256
        gbc.setState(0x308e, 0x96fa, 0x2060, 0xed31, 0xc5be, 0x2a0b, 0x0, 0x0);
        gbc.writeMem(0x308e, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x96fa);
        EXPECT(gbc.pc(), 0x3090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0257
        gbc.setState(0x425f, 0xd276, 0x9220, 0x2412, 0x7638, 0x1c92, 0x1, 0x1);
        gbc.writeMem(0x425f, { 0x2e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd276);
        EXPECT(gbc.pc(), 0x4261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0258
        gbc.setState(0x664f, 0xeeed, 0xd50, 0xf7f2, 0x2e3, 0x1c38, 0x1, 0x1);
        gbc.writeMem(0x664f, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeeed);
        EXPECT(gbc.pc(), 0x6651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0259
        gbc.setState(0x9364, 0x490d, 0x40b0, 0x18b0, 0xaefe, 0xb9af, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x490d);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9364), 0x2e);
        EXPECT(gbc.readMem(0x9365), 0xd1);
        // 2E 025A
        gbc.setState(0xc751, 0x18b3, 0x44b0, 0x9aa, 0xd4de, 0xd888, 0x1, 0x0);
        gbc.writeMem(0xc751, { 0x2e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x18b3);
        EXPECT(gbc.pc(), 0xc753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc751), 0x2e);
        EXPECT(gbc.readMem(0xc752), 0xce);
        // 2E 025B
        gbc.setState(0x7232, 0x6089, 0x250, 0x73ad, 0xdfee, 0x7aac, 0x1, 0x1);
        gbc.writeMem(0x7232, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6089);
        EXPECT(gbc.pc(), 0x7234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 025C
        gbc.setState(0x9830, 0xbc25, 0xfc40, 0x5995, 0x8abf, 0xfdeb, 0x1, 0x0);
        gbc.writeMem(0x9830, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbc25);
        EXPECT(gbc.pc(), 0x9832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9830), 0x2e);
        EXPECT(gbc.readMem(0x9831), 0x34);
        // 2E 025E
        gbc.setState(0xdf01, 0x8818, 0xf450, 0x47c4, 0xd7f4, 0xd774, 0x0, 0x0);
        gbc.writeMem(0xdf01, { 0x2e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8818);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf01), 0x2e);
        EXPECT(gbc.readMem(0xdf02), 0x48);
        // 2E 025F
        gbc.setState(0x36fb, 0xd147, 0x3b20, 0x2d2a, 0xd1fb, 0xb378, 0x0, 0x1);
        gbc.writeMem(0x36fb, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd147);
        EXPECT(gbc.pc(), 0x36fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0260
        gbc.setState(0xd574, 0xd9f9, 0x12a0, 0xca61, 0xef93, 0x2d0f, 0x1, 0x0);
        gbc.writeMem(0xd574, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd9f9);
        EXPECT(gbc.pc(), 0xd576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd574), 0x2e);
        EXPECT(gbc.readMem(0xd575), 0x49);
        // 2E 0261
        gbc.setState(0x1b7f, 0x3603, 0x3600, 0xdc2f, 0x52be, 0x9408, 0x1, 0x1);
        gbc.writeMem(0x1b7f, { 0x2e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3603);
        EXPECT(gbc.pc(), 0x1b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0262
        gbc.setState(0x1c88, 0x4f05, 0x5a90, 0xd6a3, 0xb9ea, 0xa498, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4f05);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0263
        gbc.setState(0x8f1e, 0x4a6, 0x18a0, 0x6193, 0x4aa0, 0xf0f2, 0x0, 0x1);
        gbc.writeMem(0x8f1e, { 0x2e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4a6);
        EXPECT(gbc.pc(), 0x8f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1e), 0x2e);
        EXPECT(gbc.readMem(0x8f1f), 0x85);
        // 2E 0264
        gbc.setState(0x9f84, 0xfccf, 0x9a40, 0x9efb, 0x3a71, 0x2700, 0x1, 0x1);
        gbc.writeMem(0x9f84, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfccf);
        EXPECT(gbc.pc(), 0x9f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f84), 0x2e);
        EXPECT(gbc.readMem(0x9f85), 0x75);
        // 2E 0265
        gbc.setState(0x68ef, 0x3124, 0x7ac0, 0xa9cd, 0xdd8b, 0x33fe, 0x1, 0x1);
        gbc.writeMem(0x68ef, { 0x2e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3124);
        EXPECT(gbc.pc(), 0x68f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0266
        gbc.setState(0x349d, 0x59c8, 0x3de0, 0x3b5b, 0xdf67, 0xacdc, 0x0, 0x0);
        gbc.writeMem(0x349d, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x59c8);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0267
        gbc.setState(0xac07, 0x7523, 0x7240, 0x136, 0xc0c, 0x2a5, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7523);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac07), 0x2e);
        EXPECT(gbc.readMem(0xac08), 0xc1);
        // 2E 0268
        gbc.setState(0x9fa6, 0xb79a, 0x99c0, 0x50f, 0x9fd4, 0x6e31, 0x0, 0x1);
        gbc.writeMem(0x9fa6, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb79a);
        EXPECT(gbc.pc(), 0x9fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa6), 0x2e);
        EXPECT(gbc.readMem(0x9fa7), 0x7a);
        // 2E 0269
        gbc.setState(0x9af2, 0x67d5, 0xfda0, 0x5213, 0x6c4f, 0xc4e4, 0x0, 0x0);
        gbc.writeMem(0x9af2, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x67d5);
        EXPECT(gbc.pc(), 0x9af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af2), 0x2e);
        EXPECT(gbc.readMem(0x9af3), 0x2);
        // 2E 026A
        gbc.setState(0x5005, 0xa1a1, 0x3b90, 0x294c, 0xce9c, 0x9a0e, 0x1, 0x0);
        gbc.writeMem(0x5005, { 0x2e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa1a1);
        EXPECT(gbc.pc(), 0x5007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 026B
        gbc.setState(0xb86e, 0xc549, 0x8430, 0xdbbf, 0x93f4, 0xc66b, 0x1, 0x0);
        gbc.writeMem(0xb86e, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc549);
        EXPECT(gbc.pc(), 0xb870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86e), 0x2e);
        EXPECT(gbc.readMem(0xb86f), 0xdd);
        // 2E 026C
        gbc.setState(0x4bc6, 0xfef2, 0x2ed0, 0xae7a, 0x9cad, 0x309, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0x2e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfef2);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 026D
        gbc.setState(0x6dd7, 0x4f16, 0x8220, 0x3345, 0xfb36, 0xf681, 0x1, 0x0);
        gbc.writeMem(0x6dd7, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4f16);
        EXPECT(gbc.pc(), 0x6dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 026E
        gbc.setState(0xe461, 0x3c5d, 0xd930, 0x420, 0x501e, 0x6e12, 0x0, 0x1);
        gbc.writeMem(0xe461, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3c5d);
        EXPECT(gbc.pc(), 0xe463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe461), 0x2e);
        EXPECT(gbc.readMem(0xe462), 0x2c);
        // 2E 026F
        gbc.setState(0x3d03, 0xfe05, 0xc060, 0x9360, 0x4031, 0x2cab, 0x0, 0x0);
        gbc.writeMem(0x3d03, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x3d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0272
        gbc.setState(0x3c0f, 0x137a, 0x81c0, 0x9e40, 0x7d5c, 0xc126, 0x0, 0x0);
        gbc.writeMem(0x3c0f, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x137a);
        EXPECT(gbc.pc(), 0x3c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0273
        gbc.setState(0x7a0d, 0x4cf, 0x93d0, 0x867d, 0x7235, 0x11dd, 0x1, 0x1);
        gbc.writeMem(0x7a0d, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4cf);
        EXPECT(gbc.pc(), 0x7a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0274
        gbc.setState(0x521, 0x593a, 0x6050, 0x1bde, 0x608d, 0x5e47, 0x1, 0x1);
        gbc.writeMem(0x521, { 0x2e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x593a);
        EXPECT(gbc.pc(), 0x523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0275
        gbc.setState(0x9ec4, 0x8779, 0x7750, 0x74c0, 0xd8a0, 0x368, 0x1, 0x1);
        gbc.writeMem(0x9ec4, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8779);
        EXPECT(gbc.pc(), 0x9ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec4), 0x2e);
        EXPECT(gbc.readMem(0x9ec5), 0xb8);
        // 2E 0276
        gbc.setState(0x1b5a, 0x1bcc, 0x6cb0, 0x5a99, 0x900e, 0x4969, 0x0, 0x0);
        gbc.writeMem(0x1b5a, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1bcc);
        EXPECT(gbc.pc(), 0x1b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0277
        gbc.setState(0xdb25, 0xda3b, 0x4950, 0x3172, 0xc9db, 0x6e56, 0x0, 0x1);
        gbc.writeMem(0xdb25, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xda3b);
        EXPECT(gbc.pc(), 0xdb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb25), 0x2e);
        EXPECT(gbc.readMem(0xdb26), 0x60);
        // 2E 0278
        gbc.setState(0x14e6, 0x6362, 0xcef0, 0x438, 0xb814, 0x2cd6, 0x1, 0x1);
        gbc.writeMem(0x14e6, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6362);
        EXPECT(gbc.pc(), 0x14e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0279
        gbc.setState(0x15bd, 0xc6f2, 0xc8b0, 0xe6e8, 0x85f1, 0x4732, 0x1, 0x0);
        gbc.writeMem(0x15bd, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 027A
        gbc.setState(0xc468, 0xcc7c, 0x2cc0, 0xaa2, 0x3e8, 0x1ca8, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0xc46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc468), 0x2e);
        EXPECT(gbc.readMem(0xc469), 0xfa);
        // 2E 027B
        gbc.setState(0xd664, 0x7fef, 0x2730, 0x5a2e, 0x2bf4, 0x68e5, 0x0, 0x0);
        gbc.writeMem(0xd664, { 0x2e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7fef);
        EXPECT(gbc.pc(), 0xd666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd664), 0x2e);
        EXPECT(gbc.readMem(0xd665), 0xc);
        // 2E 027C
        gbc.setState(0xc9da, 0xed9b, 0x8ff0, 0x3d2d, 0x959f, 0x33f, 0x1, 0x1);
        gbc.writeMem(0xc9da, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xed9b);
        EXPECT(gbc.pc(), 0xc9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9da), 0x2e);
        EXPECT(gbc.readMem(0xc9db), 0x1f);
        // 2E 027D
        gbc.setState(0xa936, 0xbe19, 0xdd90, 0x30c0, 0x4ede, 0xce99, 0x1, 0x0);
        gbc.writeMem(0xa936, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbe19);
        EXPECT(gbc.pc(), 0xa938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa936), 0x2e);
        EXPECT(gbc.readMem(0xa937), 0xc1);
        // 2E 027F
        gbc.setState(0x1e1c, 0x6e24, 0x8a10, 0x1292, 0x71a6, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x1e1c, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6e24);
        EXPECT(gbc.pc(), 0x1e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0280
        gbc.setState(0x577, 0x40a3, 0xf170, 0x7ecd, 0xbac2, 0x1da1, 0x1, 0x1);
        gbc.writeMem(0x577, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x40a3);
        EXPECT(gbc.pc(), 0x579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0281
        gbc.setState(0x1964, 0xc26d, 0xfce0, 0x8b1b, 0x5ab9, 0xc329, 0x0, 0x1);
        gbc.writeMem(0x1964, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0x1966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0282
        gbc.setState(0x3d2b, 0x3f54, 0x3f60, 0x1760, 0x3a5f, 0x8de7, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3f54);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0283
        gbc.setState(0x4eba, 0x15ee, 0x7de0, 0x57de, 0xbe02, 0x1a6c, 0x1, 0x1);
        gbc.writeMem(0x4eba, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x15ee);
        EXPECT(gbc.pc(), 0x4ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0284
        gbc.setState(0x6246, 0xb63d, 0x3ce0, 0xbd72, 0xa4ed, 0xa233, 0x0, 0x1);
        gbc.writeMem(0x6246, { 0x2e, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0x6248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0285
        gbc.setState(0x5b2a, 0x909c, 0x86c0, 0x6671, 0x524e, 0xdc1f, 0x1, 0x1);
        gbc.writeMem(0x5b2a, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0286
        gbc.setState(0xce16, 0xb10b, 0x6440, 0x4506, 0x20c9, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0xce16, { 0x2e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0xce18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce16), 0x2e);
        EXPECT(gbc.readMem(0xce17), 0xf6);
        // 2E 0287
        gbc.setState(0xbaa1, 0x653f, 0x4070, 0xd8d7, 0xe92d, 0xa3f, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x653f);
        EXPECT(gbc.pc(), 0xbaa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa1), 0x2e);
        EXPECT(gbc.readMem(0xbaa2), 0x43);
        // 2E 0288
        gbc.setState(0x8fa0, 0x10b8, 0x56d0, 0x35a7, 0x86b1, 0xcc0d, 0x1, 0x1);
        gbc.writeMem(0x8fa0, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x10b8);
        EXPECT(gbc.pc(), 0x8fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa0), 0x2e);
        EXPECT(gbc.readMem(0x8fa1), 0xb6);
        // 2E 0289
        gbc.setState(0x91d1, 0x8373, 0xcf00, 0x1598, 0x4e3b, 0xd72e, 0x0, 0x0);
        gbc.writeMem(0x91d1, { 0x2e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8373);
        EXPECT(gbc.pc(), 0x91d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d1), 0x2e);
        EXPECT(gbc.readMem(0x91d2), 0x59);
        // 2E 028A
        gbc.setState(0x4fff, 0x25b0, 0x1860, 0xb17c, 0x7197, 0xd375, 0x0, 0x1);
        gbc.writeMem(0x4fff, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x25b0);
        EXPECT(gbc.pc(), 0x5001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 028B
        gbc.setState(0x4945, 0xfe91, 0x3c90, 0xde0d, 0x99e9, 0xa15b, 0x1, 0x0);
        gbc.writeMem(0x4945, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe91);
        EXPECT(gbc.pc(), 0x4947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 028C
        gbc.setState(0xd241, 0x7a30, 0x77f0, 0x7659, 0xb514, 0x67fc, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7a30);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd241), 0x2e);
        EXPECT(gbc.readMem(0xd242), 0xb2);
        // 2E 028D
        gbc.setState(0x37d6, 0x9d43, 0xc3e0, 0x30f6, 0xa174, 0xaf7b, 0x0, 0x0);
        gbc.writeMem(0x37d6, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9d43);
        EXPECT(gbc.pc(), 0x37d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 028F
        gbc.setState(0x8a40, 0xdb13, 0xc5f0, 0x4abf, 0x5d0b, 0x6d15, 0x0, 0x0);
        gbc.writeMem(0x8a40, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdb13);
        EXPECT(gbc.pc(), 0x8a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a40), 0x2e);
        EXPECT(gbc.readMem(0x8a41), 0xb4);
        // 2E 0290
        gbc.setState(0xcc98, 0x793, 0x3b10, 0xf195, 0x58f5, 0xd2cc, 0x0, 0x0);
        gbc.writeMem(0xcc98, { 0x2e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x793);
        EXPECT(gbc.pc(), 0xcc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc98), 0x2e);
        EXPECT(gbc.readMem(0xcc99), 0x84);
        // 2E 0291
        gbc.setState(0xa7cb, 0x44d5, 0x3240, 0x4e03, 0x635a, 0xbed, 0x1, 0x1);
        gbc.writeMem(0xa7cb, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x44d5);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cb), 0x2e);
        EXPECT(gbc.readMem(0xa7cc), 0xc6);
        // 2E 0292
        gbc.setState(0x64f3, 0x4711, 0xa1d0, 0xc529, 0x3e37, 0xc86a, 0x0, 0x0);
        gbc.writeMem(0x64f3, { 0x2e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4711);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0293
        gbc.setState(0x2be4, 0x6afa, 0x50a0, 0x6698, 0x2067, 0x9a41, 0x1, 0x0);
        gbc.writeMem(0x2be4, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0x2be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0294
        gbc.setState(0x11b5, 0xb88e, 0x33b0, 0x86b6, 0x82d0, 0xb925, 0x1, 0x0);
        gbc.writeMem(0x11b5, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb88e);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0295
        gbc.setState(0xc099, 0xecd1, 0x39e0, 0xa29e, 0x3708, 0xfb4b, 0x0, 0x1);
        gbc.writeMem(0xc099, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xecd1);
        EXPECT(gbc.pc(), 0xc09b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc099), 0x2e);
        EXPECT(gbc.readMem(0xc09a), 0x64);
        // 2E 0296
        gbc.setState(0xeec6, 0xc1de, 0x7820, 0xc1db, 0xa46d, 0xbb2, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc1de);
        EXPECT(gbc.pc(), 0xeec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec6), 0x2e);
        EXPECT(gbc.readMem(0xeec7), 0x37);
        // 2E 0297
        gbc.setState(0x7630, 0x87e1, 0x14c0, 0x838e, 0x6d3b, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x7630, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x87e1);
        EXPECT(gbc.pc(), 0x7632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0298
        gbc.setState(0x85a9, 0xb817, 0x2c0, 0x191b, 0x2e9e, 0x100a, 0x1, 0x1);
        gbc.writeMem(0x85a9, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb817);
        EXPECT(gbc.pc(), 0x85ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a9), 0x2e);
        EXPECT(gbc.readMem(0x85aa), 0x92);
        // 2E 029A
        gbc.setState(0xa7ac, 0x814c, 0xa5a0, 0xc81a, 0x60d0, 0xbcf1, 0x0, 0x0);
        gbc.writeMem(0xa7ac, { 0x2e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0xa7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ac), 0x2e);
        EXPECT(gbc.readMem(0xa7ad), 0x60);
        // 2E 029B
        gbc.setState(0xe24f, 0x5083, 0xaed0, 0x8563, 0x6eaf, 0x1d50, 0x0, 0x0);
        gbc.writeMem(0xe24f, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5083);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24f), 0x2e);
        EXPECT(gbc.readMem(0xe250), 0xe8);
        // 2E 029C
        gbc.setState(0xef7f, 0x384a, 0x3560, 0xc1f4, 0xd9d9, 0x6263, 0x1, 0x1);
        gbc.writeMem(0xef7f, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x384a);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7f), 0x2e);
        EXPECT(gbc.readMem(0xef80), 0x8c);
        // 2E 029D
        gbc.setState(0x6291, 0xfe0b, 0xa780, 0xde76, 0x207f, 0xdf6c, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0x2e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfe0b);
        EXPECT(gbc.pc(), 0x6293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 029E
        gbc.setState(0x3002, 0x41fe, 0xc800, 0x6162, 0xbb11, 0x7ba3, 0x1, 0x0);
        gbc.writeMem(0x3002, { 0x2e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x41fe);
        EXPECT(gbc.pc(), 0x3004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 029F
        gbc.setState(0x9a4e, 0x6281, 0xfb90, 0x6eaf, 0xe66f, 0x3a9d, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0x2e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x9a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4e), 0x2e);
        EXPECT(gbc.readMem(0x9a4f), 0xad);
        // 2E 02A0
        gbc.setState(0xd557, 0x301b, 0xbf30, 0x6d7d, 0xe677, 0xa0eb, 0x1, 0x1);
        gbc.writeMem(0xd557, { 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x301b);
        EXPECT(gbc.pc(), 0xd559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd557), 0x2e);
        EXPECT(gbc.readMem(0xd558), 0x69);
        // 2E 02A1
        gbc.setState(0xd31, 0x1fcf, 0xde60, 0x7a2, 0x57de, 0x1a56, 0x0, 0x1);
        gbc.writeMem(0xd31, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1fcf);
        EXPECT(gbc.pc(), 0xd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02A2
        gbc.setState(0xbec3, 0x89c1, 0xac00, 0x653d, 0xac07, 0xc383, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0xbec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec3), 0x2e);
        EXPECT(gbc.readMem(0xbec4), 0x34);
        // 2E 02A3
        gbc.setState(0x97de, 0xcc48, 0x6dd0, 0xfafa, 0x76b9, 0x2070, 0x1, 0x0);
        gbc.writeMem(0x97de, { 0x2e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcc48);
        EXPECT(gbc.pc(), 0x97e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97de), 0x2e);
        EXPECT(gbc.readMem(0x97df), 0xb4);
        // 2E 02A4
        gbc.setState(0xbd92, 0xb677, 0x4770, 0x38a, 0x174a, 0x1192, 0x1, 0x1);
        gbc.writeMem(0xbd92, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb677);
        EXPECT(gbc.pc(), 0xbd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd92), 0x2e);
        EXPECT(gbc.readMem(0xbd93), 0x22);
        // 2E 02A5
        gbc.setState(0xd67b, 0xd6d, 0xe70, 0xea39, 0xf5b5, 0x6276, 0x1, 0x1);
        gbc.writeMem(0xd67b, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd6d);
        EXPECT(gbc.pc(), 0xd67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67b), 0x2e);
        EXPECT(gbc.readMem(0xd67c), 0xd1);
        // 2E 02A6
        gbc.setState(0x71f8, 0xd0c7, 0x420, 0x298d, 0xd7a0, 0x4e43, 0x0, 0x0);
        gbc.writeMem(0x71f8, { 0x2e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd0c7);
        EXPECT(gbc.pc(), 0x71fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02A7
        gbc.setState(0xb8a6, 0x1973, 0x34b0, 0xe566, 0x2049, 0x1ae9, 0x1, 0x0);
        gbc.writeMem(0xb8a6, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1973);
        EXPECT(gbc.pc(), 0xb8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a6), 0x2e);
        EXPECT(gbc.readMem(0xb8a7), 0x7b);
        // 2E 02A8
        gbc.setState(0x80e9, 0xc4c3, 0x6c90, 0x85eb, 0x9f3d, 0x7cb5, 0x0, 0x1);
        gbc.writeMem(0x80e9, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc4c3);
        EXPECT(gbc.pc(), 0x80eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e9), 0x2e);
        EXPECT(gbc.readMem(0x80ea), 0x3b);
        // 2E 02A9
        gbc.setState(0x4a10, 0xb2fc, 0xcd60, 0xd706, 0xe7dc, 0x558a, 0x0, 0x0);
        gbc.writeMem(0x4a10, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb2fc);
        EXPECT(gbc.pc(), 0x4a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02AA
        gbc.setState(0xccda, 0x16a7, 0xbce0, 0xcd02, 0x7bf, 0x8d78, 0x0, 0x0);
        gbc.writeMem(0xccda, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x16a7);
        EXPECT(gbc.pc(), 0xccdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccda), 0x2e);
        EXPECT(gbc.readMem(0xccdb), 0x9b);
        // 2E 02AB
        gbc.setState(0x39e3, 0x75c2, 0xa5f0, 0x984d, 0x9199, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0x39e3, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x75c2);
        EXPECT(gbc.pc(), 0x39e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02AC
        gbc.setState(0xb6d5, 0x8c59, 0x5e30, 0x5de, 0x8b7b, 0x3cde, 0x1, 0x0);
        gbc.writeMem(0xb6d5, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8c59);
        EXPECT(gbc.pc(), 0xb6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d5), 0x2e);
        EXPECT(gbc.readMem(0xb6d6), 0x50);
        // 2E 02AD
        gbc.setState(0x593a, 0x8b1c, 0x2ae0, 0xfbd1, 0xdc91, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0x593a, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8b1c);
        EXPECT(gbc.pc(), 0x593c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02AE
        gbc.setState(0xeaae, 0x1712, 0xdab0, 0x3d8d, 0x31c7, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0xeaae, { 0x2e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1712);
        EXPECT(gbc.pc(), 0xeab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaae), 0x2e);
        EXPECT(gbc.readMem(0xeaaf), 0x4b);
        // 2E 02AF
        gbc.setState(0x45d8, 0x196b, 0xed00, 0x3571, 0xb71c, 0x22c2, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02B0
        gbc.setState(0x11f1, 0x772e, 0x850, 0x2dc7, 0x6e19, 0xfeb7, 0x1, 0x0);
        gbc.writeMem(0x11f1, { 0x2e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x772e);
        EXPECT(gbc.pc(), 0x11f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02B1
        gbc.setState(0x354, 0x7054, 0x4640, 0xc28e, 0xaf02, 0xebd7, 0x1, 0x1);
        gbc.writeMem(0x354, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7054);
        EXPECT(gbc.pc(), 0x356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02B2
        gbc.setState(0x76ba, 0x8376, 0x2660, 0x676, 0x3e98, 0x3667, 0x1, 0x1);
        gbc.writeMem(0x76ba, { 0x2e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8376);
        EXPECT(gbc.pc(), 0x76bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02B3
        gbc.setState(0x7bfc, 0xd98, 0xf8d0, 0x7248, 0xbce1, 0x17f4, 0x1, 0x0);
        gbc.writeMem(0x7bfc, { 0x2e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd98);
        EXPECT(gbc.pc(), 0x7bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02B4
        gbc.setState(0xcd2d, 0x9123, 0x85f0, 0x1258, 0x16cd, 0xfcf1, 0x0, 0x0);
        gbc.writeMem(0xcd2d, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0xcd2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2d), 0x2e);
        EXPECT(gbc.readMem(0xcd2e), 0x4d);
        // 2E 02B5
        gbc.setState(0x126a, 0xb0d2, 0x9020, 0x61f8, 0x308d, 0x23da, 0x0, 0x0);
        gbc.writeMem(0x126a, { 0x2e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb0d2);
        EXPECT(gbc.pc(), 0x126c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02B6
        gbc.setState(0x4929, 0x818c, 0xf5f0, 0x4273, 0xd6ff, 0x82de, 0x0, 0x0);
        gbc.writeMem(0x4929, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x818c);
        EXPECT(gbc.pc(), 0x492b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02B7
        gbc.setState(0xb0d0, 0xb0d, 0xdf10, 0x78e5, 0x8f1a, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0xb0d0, { 0x2e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb0d);
        EXPECT(gbc.pc(), 0xb0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d0), 0x2e);
        EXPECT(gbc.readMem(0xb0d1), 0x80);
        // 2E 02B8
        gbc.setState(0xdd74, 0xeef8, 0x2ca0, 0xa73a, 0xe090, 0xdb31, 0x0, 0x1);
        gbc.writeMem(0xdd74, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeef8);
        EXPECT(gbc.pc(), 0xdd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd74), 0x2e);
        EXPECT(gbc.readMem(0xdd75), 0x2a);
        // 2E 02B9
        gbc.setState(0x9653, 0x5fd6, 0x3730, 0x2780, 0x21b8, 0x30c8, 0x0, 0x0);
        gbc.writeMem(0x9653, { 0x2e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x9655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9653), 0x2e);
        EXPECT(gbc.readMem(0x9654), 0x10);
        // 2E 02BA
        gbc.setState(0x313, 0x3ed2, 0x6890, 0xbf5a, 0xed7a, 0x5233, 0x0, 0x0);
        gbc.writeMem(0x313, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3ed2);
        EXPECT(gbc.pc(), 0x315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02BB
        gbc.setState(0x47dd, 0x6266, 0x4ff0, 0xc7e1, 0xea7a, 0x267a, 0x0, 0x0);
        gbc.writeMem(0x47dd, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6266);
        EXPECT(gbc.pc(), 0x47df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02BC
        gbc.setState(0x5f2f, 0x4c80, 0x6a00, 0x9f66, 0xeb0b, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0x5f2f, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4c80);
        EXPECT(gbc.pc(), 0x5f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02BD
        gbc.setState(0xed3f, 0x24b5, 0xee50, 0xb2f6, 0xf190, 0x3ea3, 0x0, 0x0);
        gbc.writeMem(0xed3f, { 0x2e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x24b5);
        EXPECT(gbc.pc(), 0xed41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3f), 0x2e);
        EXPECT(gbc.readMem(0xed40), 0xc);
        // 2E 02BE
        gbc.setState(0x275, 0x31bb, 0x8990, 0x9334, 0x5586, 0xd26f, 0x0, 0x1);
        gbc.writeMem(0x275, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x31bb);
        EXPECT(gbc.pc(), 0x277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02BF
        gbc.setState(0x82e7, 0xa1e1, 0xe0f0, 0x311a, 0x9512, 0x2051, 0x0, 0x1);
        gbc.writeMem(0x82e7, { 0x2e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa1e1);
        EXPECT(gbc.pc(), 0x82e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e7), 0x2e);
        EXPECT(gbc.readMem(0x82e8), 0x74);
        // 2E 02C0
        gbc.setState(0x3dfe, 0xee58, 0xa220, 0x4516, 0x3a29, 0x5575, 0x1, 0x0);
        gbc.writeMem(0x3dfe, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xee58);
        EXPECT(gbc.pc(), 0x3e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02C1
        gbc.setState(0x5bea, 0x54a0, 0x2420, 0x5a2, 0xfe9a, 0xbd06, 0x1, 0x0);
        gbc.writeMem(0x5bea, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x54a0);
        EXPECT(gbc.pc(), 0x5bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02C2
        gbc.setState(0xbfcf, 0xcb9f, 0x4f60, 0x9ec8, 0x4305, 0xfb8c, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0x2e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcb9f);
        EXPECT(gbc.pc(), 0xbfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfcf), 0x2e);
        EXPECT(gbc.readMem(0xbfd0), 0xb2);
        // 2E 02C3
        gbc.setState(0xb61c, 0x7eb8, 0xcf80, 0x6d6c, 0x4b22, 0xaa3b, 0x1, 0x1);
        gbc.writeMem(0xb61c, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7eb8);
        EXPECT(gbc.pc(), 0xb61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61c), 0x2e);
        EXPECT(gbc.readMem(0xb61d), 0xbd);
        // 2E 02C4
        gbc.setState(0xc224, 0x8539, 0xcb80, 0xdfad, 0xd0a9, 0xab75, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0x2e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8539);
        EXPECT(gbc.pc(), 0xc226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc224), 0x2e);
        EXPECT(gbc.readMem(0xc225), 0xc5);
        // 2E 02C5
        gbc.setState(0xb62c, 0x5fd6, 0xc0a0, 0x6999, 0xaad9, 0xf1bc, 0x0, 0x1);
        gbc.writeMem(0xb62c, { 0x2e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0xb62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62c), 0x2e);
        EXPECT(gbc.readMem(0xb62d), 0x24);
        // 2E 02C6
        gbc.setState(0x6a22, 0xc17, 0x80, 0x7999, 0x4d1c, 0xa4f, 0x0, 0x0);
        gbc.writeMem(0x6a22, { 0x2e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc17);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02C7
        gbc.setState(0x206b, 0x7e14, 0xd00, 0x607c, 0x8cca, 0x958c, 0x0, 0x0);
        gbc.writeMem(0x206b, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7e14);
        EXPECT(gbc.pc(), 0x206d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02C8
        gbc.setState(0x82db, 0xafc1, 0x5440, 0x3a10, 0xe304, 0x9343, 0x1, 0x0);
        gbc.writeMem(0x82db, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xafc1);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0x2e);
        EXPECT(gbc.readMem(0x82dc), 0x1b);
        // 2E 02C9
        gbc.setState(0x95dc, 0xf7b8, 0xb790, 0xda5f, 0x581b, 0xfb47, 0x0, 0x0);
        gbc.writeMem(0x95dc, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf7b8);
        EXPECT(gbc.pc(), 0x95de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95dc), 0x2e);
        EXPECT(gbc.readMem(0x95dd), 0x3e);
        // 2E 02CA
        gbc.setState(0x2c16, 0xe917, 0x3ce0, 0x4c8b, 0xb54e, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0x2c16, { 0x2e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe917);
        EXPECT(gbc.pc(), 0x2c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02CB
        gbc.setState(0x9514, 0x6389, 0xd5a0, 0xa25c, 0x9c1f, 0x55a0, 0x0, 0x1);
        gbc.writeMem(0x9514, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6389);
        EXPECT(gbc.pc(), 0x9516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9514), 0x2e);
        EXPECT(gbc.readMem(0x9515), 0xa7);
        // 2E 02CC
        gbc.setState(0x3606, 0x60c6, 0xa580, 0x6e26, 0x4270, 0xf539, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x60c6);
        EXPECT(gbc.pc(), 0x3608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02CD
        gbc.setState(0x3a80, 0x322d, 0x6340, 0x699, 0x8931, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0x3a80, { 0x2e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0x3a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02CE
        gbc.setState(0xb308, 0xbddc, 0x79e0, 0xe389, 0xe409, 0xaf6a, 0x0, 0x0);
        gbc.writeMem(0xb308, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbddc);
        EXPECT(gbc.pc(), 0xb30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb308), 0x2e);
        EXPECT(gbc.readMem(0xb309), 0x79);
        // 2E 02CF
        gbc.setState(0x809e, 0x1e0f, 0xee00, 0xa130, 0x942c, 0x4148, 0x1, 0x0);
        gbc.writeMem(0x809e, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1e0f);
        EXPECT(gbc.pc(), 0x80a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809e), 0x2e);
        EXPECT(gbc.readMem(0x809f), 0x2b);
        // 2E 02D0
        gbc.setState(0xa166, 0x350b, 0x8ac0, 0x8582, 0xfaba, 0x8ad4, 0x1, 0x0);
        gbc.writeMem(0xa166, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x350b);
        EXPECT(gbc.pc(), 0xa168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa166), 0x2e);
        EXPECT(gbc.readMem(0xa167), 0x11);
        // 2E 02D1
        gbc.setState(0x3e9e, 0x51f, 0x3b80, 0x711a, 0x8d32, 0x45c2, 0x1, 0x0);
        gbc.writeMem(0x3e9e, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x51f);
        EXPECT(gbc.pc(), 0x3ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 02D2
        gbc.setState(0x3550, 0xd08a, 0x41f0, 0x8460, 0xe048, 0x8dc2, 0x0, 0x0);
        gbc.writeMem(0x3550, { 0x2e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd08a);
        EXPECT(gbc.pc(), 0x3552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02D3
        gbc.setState(0x1a8b, 0x842f, 0xcee0, 0x6e4c, 0xe4c4, 0x3bc9, 0x0, 0x1);
        gbc.writeMem(0x1a8b, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02D4
        gbc.setState(0xe99a, 0x4fc2, 0x7730, 0x1af7, 0x3c91, 0x3b06, 0x1, 0x1);
        gbc.writeMem(0xe99a, { 0x2e, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4fc2);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99a), 0x2e);
        EXPECT(gbc.readMem(0xe99b), 0x9d);
        // 2E 02D5
        gbc.setState(0x770d, 0x2536, 0xa9d0, 0xf7a8, 0x48f0, 0xa35a, 0x0, 0x1);
        gbc.writeMem(0x770d, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2536);
        EXPECT(gbc.pc(), 0x770f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02D6
        gbc.setState(0x2104, 0x31f3, 0x3db0, 0x96d, 0xf543, 0x3e04, 0x1, 0x0);
        gbc.writeMem(0x2104, { 0x2e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x31f3);
        EXPECT(gbc.pc(), 0x2106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02D7
        gbc.setState(0x2ec7, 0x5a69, 0x65d0, 0x8c7b, 0x60fa, 0x138b, 0x1, 0x1);
        gbc.writeMem(0x2ec7, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5a69);
        EXPECT(gbc.pc(), 0x2ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02D8
        gbc.setState(0x8cb7, 0x189, 0xa680, 0xca71, 0x17a2, 0x23e7, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x189);
        EXPECT(gbc.pc(), 0x8cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb7), 0x2e);
        EXPECT(gbc.readMem(0x8cb8), 0xf2);
        // 2E 02D9
        gbc.setState(0x4005, 0xb5e8, 0x2bd0, 0x4880, 0xeb4e, 0x468b, 0x0, 0x1);
        gbc.writeMem(0x4005, { 0x2e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb5e8);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02DA
        gbc.setState(0xc433, 0xa9c3, 0x38a0, 0xa5d7, 0x8abf, 0x7cee, 0x1, 0x0);
        gbc.writeMem(0xc433, { 0x2e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa9c3);
        EXPECT(gbc.pc(), 0xc435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc433), 0x2e);
        EXPECT(gbc.readMem(0xc434), 0x5b);
        // 2E 02DB
        gbc.setState(0x4739, 0xb580, 0xb5d0, 0x8cef, 0x1050, 0x9ac6, 0x0, 0x0);
        gbc.writeMem(0x4739, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb580);
        EXPECT(gbc.pc(), 0x473b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02DC
        gbc.setState(0x4210, 0xdfed, 0x8b60, 0x84f7, 0x296c, 0x1d07, 0x0, 0x1);
        gbc.writeMem(0x4210, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdfed);
        EXPECT(gbc.pc(), 0x4212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02DD
        gbc.setState(0xb34a, 0x5cb9, 0xdeb0, 0x5430, 0x67ad, 0xaa9a, 0x0, 0x0);
        gbc.writeMem(0xb34a, { 0x2e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5cb9);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34a), 0x2e);
        EXPECT(gbc.readMem(0xb34b), 0xfe);
        // 2E 02DE
        gbc.setState(0x168a, 0xe0d2, 0x1610, 0x3d28, 0xe21d, 0xc359, 0x0, 0x0);
        gbc.writeMem(0x168a, { 0x2e, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe0d2);
        EXPECT(gbc.pc(), 0x168c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02DF
        gbc.setState(0x394c, 0xd2a7, 0xd7a0, 0x341a, 0xb3cf, 0xb096, 0x0, 0x1);
        gbc.writeMem(0x394c, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd2a7);
        EXPECT(gbc.pc(), 0x394e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02E0
        gbc.setState(0xc17, 0xfc35, 0x95b0, 0x7198, 0xa0ca, 0x24ab, 0x0, 0x0);
        gbc.writeMem(0xc17, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfc35);
        EXPECT(gbc.pc(), 0xc19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02E2
        gbc.setState(0xbdec, 0x7022, 0x480, 0x13f9, 0xd896, 0x4ae2, 0x1, 0x1);
        gbc.writeMem(0xbdec, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7022);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdec), 0x2e);
        EXPECT(gbc.readMem(0xbded), 0x13);
        // 2E 02E3
        gbc.setState(0xbd38, 0xd674, 0x430, 0xe96f, 0xb944, 0x53d8, 0x0, 0x0);
        gbc.writeMem(0xbd38, { 0x2e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd674);
        EXPECT(gbc.pc(), 0xbd3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd38), 0x2e);
        EXPECT(gbc.readMem(0xbd39), 0x5d);
        // 2E 02E4
        gbc.setState(0xa5f2, 0x9c2a, 0xc950, 0x29a0, 0x82e9, 0x3c0e, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9c2a);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f2), 0x2e);
        EXPECT(gbc.readMem(0xa5f3), 0xcc);
        // 2E 02E5
        gbc.setState(0xdec3, 0xf94f, 0xda50, 0xaaf1, 0x3b2a, 0xb57f, 0x0, 0x0);
        gbc.writeMem(0xdec3, { 0x2e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf94f);
        EXPECT(gbc.pc(), 0xdec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec3), 0x2e);
        EXPECT(gbc.readMem(0xdec4), 0x57);
        // 2E 02E6
        gbc.setState(0x4f14, 0x3270, 0x50f0, 0x6989, 0x9ead, 0x7537, 0x0, 0x1);
        gbc.writeMem(0x4f14, { 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3270);
        EXPECT(gbc.pc(), 0x4f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02E7
        gbc.setState(0xd60f, 0x3992, 0x97d0, 0xd56f, 0xab5f, 0x6491, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3992);
        EXPECT(gbc.pc(), 0xd611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60f), 0x2e);
        EXPECT(gbc.readMem(0xd610), 0x5f);
        // 2E 02E8
        gbc.setState(0x7c2, 0xb66f, 0x6660, 0x1029, 0xf4d1, 0xb1e, 0x1, 0x0);
        gbc.writeMem(0x7c2, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb66f);
        EXPECT(gbc.pc(), 0x7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02E9
        gbc.setState(0xd918, 0x9e81, 0xc0c0, 0x92f2, 0xec5c, 0xcb9a, 0x0, 0x0);
        gbc.writeMem(0xd918, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9e81);
        EXPECT(gbc.pc(), 0xd91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd918), 0x2e);
        EXPECT(gbc.readMem(0xd919), 0xf0);
        // 2E 02EA
        gbc.setState(0xc9e5, 0xf5ad, 0x640, 0x7bed, 0x7180, 0xec9d, 0x0, 0x0);
        gbc.writeMem(0xc9e5, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf5ad);
        EXPECT(gbc.pc(), 0xc9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e5), 0x2e);
        EXPECT(gbc.readMem(0xc9e6), 0x4a);
        // 2E 02EB
        gbc.setState(0x135a, 0x8ecd, 0xa70, 0xab18, 0x7ef7, 0xfa91, 0x1, 0x0);
        gbc.writeMem(0x135a, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8ecd);
        EXPECT(gbc.pc(), 0x135c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02EC
        gbc.setState(0xcf2b, 0x1eab, 0x7c0, 0xbc8c, 0x6b98, 0x32e4, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1eab);
        EXPECT(gbc.pc(), 0xcf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2b), 0x2e);
        EXPECT(gbc.readMem(0xcf2c), 0x49);
        // 2E 02ED
        gbc.setState(0xbd59, 0x4694, 0xee00, 0xa94c, 0x9aba, 0x673c, 0x0, 0x1);
        gbc.writeMem(0xbd59, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0xbd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd59), 0x2e);
        EXPECT(gbc.readMem(0xbd5a), 0x4c);
        // 2E 02EE
        gbc.setState(0x8de7, 0xd67f, 0xfca0, 0x1420, 0xfc04, 0x82b2, 0x1, 0x0);
        gbc.writeMem(0x8de7, { 0x2e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd67f);
        EXPECT(gbc.pc(), 0x8de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de7), 0x2e);
        EXPECT(gbc.readMem(0x8de8), 0x56);
        // 2E 02F0
        gbc.setState(0xb4ae, 0x2aa2, 0x9680, 0x28b5, 0x861d, 0x9af2, 0x0, 0x0);
        gbc.writeMem(0xb4ae, { 0x2e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2aa2);
        EXPECT(gbc.pc(), 0xb4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ae), 0x2e);
        EXPECT(gbc.readMem(0xb4af), 0x19);
        // 2E 02F1
        gbc.setState(0xc3ba, 0xc855, 0xc6a0, 0x7803, 0xdac5, 0x14a3, 0x1, 0x1);
        gbc.writeMem(0xc3ba, { 0x2e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc855);
        EXPECT(gbc.pc(), 0xc3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ba), 0x2e);
        EXPECT(gbc.readMem(0xc3bb), 0x13);
        // 2E 02F2
        gbc.setState(0x5d8c, 0xb2f3, 0xff0, 0x7cbf, 0x9d41, 0x22c0, 0x1, 0x1);
        gbc.writeMem(0x5d8c, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb2f3);
        EXPECT(gbc.pc(), 0x5d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02F3
        gbc.setState(0xd48d, 0x1db2, 0x2be0, 0x33b, 0x8add, 0x579c, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0x2e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1db2);
        EXPECT(gbc.pc(), 0xd48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48d), 0x2e);
        EXPECT(gbc.readMem(0xd48e), 0x3f);
        // 2E 02F5
        gbc.setState(0x7461, 0x89f7, 0x3910, 0xf357, 0x6c54, 0x783e, 0x0, 0x0);
        gbc.writeMem(0x7461, { 0x2e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0x7463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 02F6
        gbc.setState(0x94f5, 0x40ba, 0xed70, 0xd78c, 0xbe0c, 0x6ab5, 0x0, 0x0);
        gbc.writeMem(0x94f5, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x40ba);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f5), 0x2e);
        EXPECT(gbc.readMem(0x94f6), 0x51);
        // 2E 02F7
        gbc.setState(0x5270, 0x5c2f, 0x6660, 0x52e3, 0x50b6, 0xfb48, 0x1, 0x0);
        gbc.writeMem(0x5270, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5c2f);
        EXPECT(gbc.pc(), 0x5272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02F8
        gbc.setState(0xa351, 0x97a5, 0x7850, 0x99b3, 0xfaf1, 0x11fd, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0x2e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x97a5);
        EXPECT(gbc.pc(), 0xa353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa351), 0x2e);
        EXPECT(gbc.readMem(0xa352), 0x77);
        // 2E 02FA
        gbc.setState(0xd68, 0x853, 0x9370, 0x711d, 0x3fdf, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0xd68, { 0x2e, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x853);
        EXPECT(gbc.pc(), 0xd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 02FB
        gbc.setState(0x2d35, 0x9850, 0x69e0, 0xb5a, 0xbcdc, 0xaf87, 0x0, 0x0);
        gbc.writeMem(0x2d35, { 0x2e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0x2d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 02FC
        gbc.setState(0x80bd, 0xa18d, 0x4950, 0x1cc2, 0xbc44, 0x9590, 0x0, 0x0);
        gbc.writeMem(0x80bd, { 0x2e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa18d);
        EXPECT(gbc.pc(), 0x80bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bd), 0x2e);
        EXPECT(gbc.readMem(0x80be), 0xe5);
        // 2E 02FD
        gbc.setState(0xc324, 0x5309, 0xf630, 0xb590, 0x8cd7, 0x70cb, 0x1, 0x1);
        gbc.writeMem(0xc324, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5309);
        EXPECT(gbc.pc(), 0xc326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc324), 0x2e);
        EXPECT(gbc.readMem(0xc325), 0xb1);
        // 2E 02FE
        gbc.setState(0xc569, 0xdb9f, 0x29a0, 0xb6a0, 0xaa36, 0x13b8, 0x0, 0x0);
        gbc.writeMem(0xc569, { 0x2e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdb9f);
        EXPECT(gbc.pc(), 0xc56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc569), 0x2e);
        EXPECT(gbc.readMem(0xc56a), 0x30);
        // 2E 02FF
        gbc.setState(0x4dbd, 0x9129, 0x9150, 0xf580, 0x451f, 0x9255, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0x2e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9129);
        EXPECT(gbc.pc(), 0x4dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0300
        gbc.setState(0x851, 0xe263, 0x3270, 0xeebc, 0x2fbf, 0xc41, 0x0, 0x0);
        gbc.writeMem(0x851, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe263);
        EXPECT(gbc.pc(), 0x853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0301
        gbc.setState(0x5b44, 0xcb58, 0x3280, 0x3910, 0x304c, 0xe767, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0x2e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcb58);
        EXPECT(gbc.pc(), 0x5b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0302
        gbc.setState(0x832, 0x3b49, 0xf160, 0x15a1, 0x733b, 0x4577, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3b49);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0303
        gbc.setState(0x6a15, 0x841c, 0x37e0, 0x6207, 0x1847, 0x25aa, 0x0, 0x0);
        gbc.writeMem(0x6a15, { 0x2e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x841c);
        EXPECT(gbc.pc(), 0x6a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0304
        gbc.setState(0xeafa, 0x3167, 0x6e30, 0xbd89, 0xa7c7, 0x934f, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0x2e, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3167);
        EXPECT(gbc.pc(), 0xeafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafa), 0x2e);
        EXPECT(gbc.readMem(0xeafb), 0x3c);
        // 2E 0305
        gbc.setState(0x2e0a, 0x812e, 0xdb30, 0xf614, 0xe8a1, 0x853f, 0x1, 0x1);
        gbc.writeMem(0x2e0a, { 0x2e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0x2e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0306
        gbc.setState(0x1c76, 0x5d70, 0xcca0, 0x241c, 0xf339, 0x987d, 0x1, 0x1);
        gbc.writeMem(0x1c76, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5d70);
        EXPECT(gbc.pc(), 0x1c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0308
        gbc.setState(0xe16a, 0x93e6, 0x2db0, 0xbe78, 0x7b40, 0x7f75, 0x1, 0x0);
        gbc.writeMem(0xe16a, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0xe16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16a), 0x2e);
        EXPECT(gbc.readMem(0xe16b), 0xfb);
        // 2E 0309
        gbc.setState(0x2763, 0xeba4, 0x5c70, 0x742d, 0xc2a9, 0xa6a5, 0x0, 0x0);
        gbc.writeMem(0x2763, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0x2765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 030A
        gbc.setState(0xe5c1, 0xb9da, 0xe0d0, 0x9d75, 0xfd2f, 0x1c00, 0x0, 0x0);
        gbc.writeMem(0xe5c1, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb9da);
        EXPECT(gbc.pc(), 0xe5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c1), 0x2e);
        EXPECT(gbc.readMem(0xe5c2), 0x79);
        // 2E 030B
        gbc.setState(0x4b3b, 0x8767, 0x91b0, 0xa17d, 0x412d, 0x2997, 0x0, 0x1);
        gbc.writeMem(0x4b3b, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8767);
        EXPECT(gbc.pc(), 0x4b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 030C
        gbc.setState(0x4f7a, 0xce58, 0x5ae0, 0x4daa, 0x312c, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x4f7a, { 0x2e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xce58);
        EXPECT(gbc.pc(), 0x4f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 030D
        gbc.setState(0x4318, 0x3b90, 0xaa20, 0xf7aa, 0xc4b2, 0x456a, 0x1, 0x1);
        gbc.writeMem(0x4318, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3b90);
        EXPECT(gbc.pc(), 0x431a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 030E
        gbc.setState(0xd94e, 0xbf61, 0x7bc0, 0xf9be, 0x7197, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbf61);
        EXPECT(gbc.pc(), 0xd950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94e), 0x2e);
        EXPECT(gbc.readMem(0xd94f), 0xa7);
        // 2E 0310
        gbc.setState(0x9cdc, 0x4099, 0xbb40, 0xd2e1, 0x4e11, 0x42c3, 0x1, 0x0);
        gbc.writeMem(0x9cdc, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4099);
        EXPECT(gbc.pc(), 0x9cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdc), 0x2e);
        EXPECT(gbc.readMem(0x9cdd), 0xc0);
        // 2E 0311
        gbc.setState(0x27d, 0xac5f, 0x75e0, 0xf66b, 0xbaae, 0x6386, 0x1, 0x0);
        gbc.writeMem(0x27d, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xac5f);
        EXPECT(gbc.pc(), 0x27f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0312
        gbc.setState(0x672c, 0xe63a, 0xe800, 0x28ef, 0x777, 0xca07, 0x0, 0x1);
        gbc.writeMem(0x672c, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe63a);
        EXPECT(gbc.pc(), 0x672e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0313
        gbc.setState(0xc76a, 0x5204, 0x5d10, 0x6201, 0x7b26, 0xbad3, 0x0, 0x0);
        gbc.writeMem(0xc76a, { 0x2e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5204);
        EXPECT(gbc.pc(), 0xc76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76a), 0x2e);
        EXPECT(gbc.readMem(0xc76b), 0x4d);
        // 2E 0314
        gbc.setState(0x4b5, 0x408, 0x6140, 0xfe40, 0x9709, 0xe1c9, 0x0, 0x0);
        gbc.writeMem(0x4b5, { 0x2e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0x4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0315
        gbc.setState(0x8775, 0xde00, 0xa90, 0xe0d8, 0xa1be, 0xbe46, 0x1, 0x0);
        gbc.writeMem(0x8775, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xde00);
        EXPECT(gbc.pc(), 0x8777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8775), 0x2e);
        EXPECT(gbc.readMem(0x8776), 0x99);
        // 2E 0316
        gbc.setState(0x1559, 0x231f, 0x770, 0x4c5, 0xc705, 0xb8b9, 0x1, 0x1);
        gbc.writeMem(0x1559, { 0x2e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x231f);
        EXPECT(gbc.pc(), 0x155b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0317
        gbc.setState(0xc9fc, 0xbd71, 0x53a0, 0x3c5, 0x1a42, 0x7614, 0x1, 0x0);
        gbc.writeMem(0xc9fc, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbd71);
        EXPECT(gbc.pc(), 0xc9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9fc), 0x2e);
        EXPECT(gbc.readMem(0xc9fd), 0x5e);
        // 2E 0318
        gbc.setState(0x90ad, 0x9346, 0xe6a0, 0x760f, 0xd15, 0x3961, 0x0, 0x1);
        gbc.writeMem(0x90ad, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9346);
        EXPECT(gbc.pc(), 0x90af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ad), 0x2e);
        EXPECT(gbc.readMem(0x90ae), 0xdd);
        // 2E 0319
        gbc.setState(0x8223, 0x997d, 0x2460, 0xa4e1, 0xa4a5, 0xdf65, 0x1, 0x0);
        gbc.writeMem(0x8223, { 0x2e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x997d);
        EXPECT(gbc.pc(), 0x8225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8223), 0x2e);
        EXPECT(gbc.readMem(0x8224), 0x2a);
        // 2E 031A
        gbc.setState(0x6058, 0xc6fc, 0x280, 0x6990, 0x95af, 0xb1da, 0x0, 0x1);
        gbc.writeMem(0x6058, { 0x2e, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc6fc);
        EXPECT(gbc.pc(), 0x605a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 031B
        gbc.setState(0x9ec0, 0xc0ce, 0x1c10, 0xd29b, 0x3b5e, 0xdc6d, 0x1, 0x0);
        gbc.writeMem(0x9ec0, { 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc0ce);
        EXPECT(gbc.pc(), 0x9ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec0), 0x2e);
        EXPECT(gbc.readMem(0x9ec1), 0xf2);
        // 2E 031C
        gbc.setState(0xde7d, 0x1192, 0xb7c0, 0xea80, 0xe834, 0x8839, 0x1, 0x0);
        gbc.writeMem(0xde7d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1192);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7d), 0x2e);
        EXPECT(gbc.readMem(0xde7e), 0x75);
        // 2E 031D
        gbc.setState(0x30b, 0x7384, 0x3f60, 0x2e39, 0xf2fc, 0xcc85, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0x2e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7384);
        EXPECT(gbc.pc(), 0x30d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 031E
        gbc.setState(0xab92, 0x971, 0x2220, 0xfab3, 0x41f3, 0xddbc, 0x1, 0x1);
        gbc.writeMem(0xab92, { 0x2e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x971);
        EXPECT(gbc.pc(), 0xab94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab92), 0x2e);
        EXPECT(gbc.readMem(0xab93), 0x2);
        // 2E 031F
        gbc.setState(0xa4a, 0x52b1, 0xf420, 0xee5c, 0xd4b9, 0x32c5, 0x0, 0x1);
        gbc.writeMem(0xa4a, { 0x2e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x52b1);
        EXPECT(gbc.pc(), 0xa4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0320
        gbc.setState(0x20ac, 0xfd4b, 0x5530, 0x95c6, 0x6bb4, 0x8ca1, 0x1, 0x1);
        gbc.writeMem(0x20ac, { 0x2e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfd4b);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0321
        gbc.setState(0x7e18, 0x4f7c, 0xeff0, 0x754c, 0xa68c, 0x26c7, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4f7c);
        EXPECT(gbc.pc(), 0x7e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0322
        gbc.setState(0x8908, 0xf315, 0x51f0, 0xd1cf, 0x7219, 0x779d, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0x2e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf315);
        EXPECT(gbc.pc(), 0x890a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8908), 0x2e);
        EXPECT(gbc.readMem(0x8909), 0xb5);
        // 2E 0323
        gbc.setState(0x4eb, 0xf00a, 0x9600, 0x4fa7, 0xc0f5, 0x2f89, 0x1, 0x0);
        gbc.writeMem(0x4eb, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf00a);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0324
        gbc.setState(0xe28d, 0x83b8, 0x32a0, 0x3a04, 0xfa85, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0xe28d, { 0x2e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x83b8);
        EXPECT(gbc.pc(), 0xe28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28d), 0x2e);
        EXPECT(gbc.readMem(0xe28e), 0x73);
        // 2E 0325
        gbc.setState(0x2d19, 0x7df9, 0x4620, 0x39ad, 0xd635, 0x3985, 0x1, 0x0);
        gbc.writeMem(0x2d19, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7df9);
        EXPECT(gbc.pc(), 0x2d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0326
        gbc.setState(0xd116, 0x4228, 0x9160, 0x1e3e, 0xd8e9, 0x43a8, 0x1, 0x0);
        gbc.writeMem(0xd116, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4228);
        EXPECT(gbc.pc(), 0xd118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd116), 0x2e);
        EXPECT(gbc.readMem(0xd117), 0x7a);
        // 2E 0327
        gbc.setState(0x485f, 0x7308, 0x5900, 0xdd35, 0x38ab, 0xb3b7, 0x1, 0x1);
        gbc.writeMem(0x485f, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7308);
        EXPECT(gbc.pc(), 0x4861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0328
        gbc.setState(0x48f1, 0xc30e, 0xc170, 0xf791, 0x6242, 0xd6e2, 0x1, 0x0);
        gbc.writeMem(0x48f1, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc30e);
        EXPECT(gbc.pc(), 0x48f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 032A
        gbc.setState(0x13d9, 0x63c3, 0xe80, 0xfa5e, 0x4147, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x13d9, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x63c3);
        EXPECT(gbc.pc(), 0x13db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 032B
        gbc.setState(0x6184, 0xf35, 0x4a80, 0xdd26, 0x2d8f, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0x6184, { 0x2e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf35);
        EXPECT(gbc.pc(), 0x6186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 032C
        gbc.setState(0x2199, 0x3206, 0x6d40, 0xf286, 0x99ec, 0x250b, 0x1, 0x1);
        gbc.writeMem(0x2199, { 0x2e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3206);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 032D
        gbc.setState(0xb48d, 0xd3c0, 0x63f0, 0x7a0b, 0x8412, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0xb48d, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd3c0);
        EXPECT(gbc.pc(), 0xb48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48d), 0x2e);
        EXPECT(gbc.readMem(0xb48e), 0x75);
        // 2E 032E
        gbc.setState(0x3a1e, 0x5dd1, 0x7320, 0xfff0, 0xff7c, 0xa3a8, 0x0, 0x1);
        gbc.writeMem(0x3a1e, { 0x2e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5dd1);
        EXPECT(gbc.pc(), 0x3a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 032F
        gbc.setState(0xf8d, 0x1225, 0x4480, 0x4564, 0x4b96, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0xf8d, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1225);
        EXPECT(gbc.pc(), 0xf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0330
        gbc.setState(0x99ff, 0xf8e, 0xcf20, 0xe398, 0xb58c, 0xca4d, 0x1, 0x0);
        gbc.writeMem(0x99ff, { 0x2e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf8e);
        EXPECT(gbc.pc(), 0x9a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ff), 0x2e);
        EXPECT(gbc.readMem(0x9a00), 0x8a);
        // 2E 0331
        gbc.setState(0x7bfa, 0xb69f, 0xd2b0, 0xaac5, 0xd7df, 0x90aa, 0x0, 0x0);
        gbc.writeMem(0x7bfa, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x7bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0332
        gbc.setState(0x2b4a, 0xe43f, 0xa5d0, 0x2455, 0x6fe4, 0x8431, 0x1, 0x1);
        gbc.writeMem(0x2b4a, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe43f);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0333
        gbc.setState(0x5b1b, 0xfe9e, 0xf620, 0x266, 0x65e0, 0x99b9, 0x1, 0x0);
        gbc.writeMem(0x5b1b, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfe9e);
        EXPECT(gbc.pc(), 0x5b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0334
        gbc.setState(0x7a22, 0xf410, 0x47d0, 0x77b0, 0x88a4, 0xb02, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf410);
        EXPECT(gbc.pc(), 0x7a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0335
        gbc.setState(0x12b0, 0x7811, 0x2600, 0x9906, 0x4df3, 0x6d87, 0x0, 0x1);
        gbc.writeMem(0x12b0, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7811);
        EXPECT(gbc.pc(), 0x12b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0336
        gbc.setState(0xc2ac, 0x85db, 0x6500, 0x5079, 0x2bc8, 0xbb5c, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x85db);
        EXPECT(gbc.pc(), 0xc2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ac), 0x2e);
        EXPECT(gbc.readMem(0xc2ad), 0x3b);
        // 2E 0337
        gbc.setState(0x956, 0x41b2, 0xf6b0, 0xbbb6, 0xdad3, 0x1aae, 0x0, 0x0);
        gbc.writeMem(0x956, { 0x2e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x41b2);
        EXPECT(gbc.pc(), 0x958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0338
        gbc.setState(0xd86a, 0xda4, 0x62f0, 0xe133, 0x94dc, 0x3620, 0x0, 0x0);
        gbc.writeMem(0xd86a, { 0x2e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xda4);
        EXPECT(gbc.pc(), 0xd86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86a), 0x2e);
        EXPECT(gbc.readMem(0xd86b), 0x91);
        // 2E 0339
        gbc.setState(0xe227, 0x9e77, 0x3ef0, 0xbefd, 0x9b4e, 0xf845, 0x0, 0x0);
        gbc.writeMem(0xe227, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9e77);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe227), 0x2e);
        EXPECT(gbc.readMem(0xe228), 0xdf);
        // 2E 033A
        gbc.setState(0x9d5f, 0x950c, 0xe600, 0xf51f, 0x4827, 0x6714, 0x0, 0x0);
        gbc.writeMem(0x9d5f, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x950c);
        EXPECT(gbc.pc(), 0x9d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5f), 0x2e);
        EXPECT(gbc.readMem(0x9d60), 0xbf);
        // 2E 033B
        gbc.setState(0x917b, 0x6043, 0x810, 0xdf5c, 0x31e9, 0x5dfd, 0x0, 0x0);
        gbc.writeMem(0x917b, { 0x2e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6043);
        EXPECT(gbc.pc(), 0x917d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917b), 0x2e);
        EXPECT(gbc.readMem(0x917c), 0x50);
        // 2E 033C
        gbc.setState(0x430, 0x12b1, 0xa250, 0xc18f, 0x5b52, 0x9f6e, 0x1, 0x0);
        gbc.writeMem(0x430, { 0x2e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x12b1);
        EXPECT(gbc.pc(), 0x432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 033D
        gbc.setState(0xe419, 0x472b, 0x8070, 0xe282, 0x95e8, 0xb671, 0x0, 0x1);
        gbc.writeMem(0xe419, { 0x2e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x472b);
        EXPECT(gbc.pc(), 0xe41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe419), 0x2e);
        EXPECT(gbc.readMem(0xe41a), 0xfa);
        // 2E 033E
        gbc.setState(0xa17b, 0xee4a, 0xdd50, 0x70a5, 0x8a83, 0x61f5, 0x0, 0x0);
        gbc.writeMem(0xa17b, { 0x2e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0xa17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17b), 0x2e);
        EXPECT(gbc.readMem(0xa17c), 0x87);
        // 2E 033F
        gbc.setState(0x3dad, 0xc019, 0x91f0, 0xfa63, 0xc505, 0xc062, 0x0, 0x1);
        gbc.writeMem(0x3dad, { 0x2e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc019);
        EXPECT(gbc.pc(), 0x3daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0340
        gbc.setState(0x7345, 0xd58c, 0xfad0, 0x13b1, 0xeb73, 0x9b04, 0x0, 0x0);
        gbc.writeMem(0x7345, { 0x2e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0x7347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0341
        gbc.setState(0x656c, 0x65c6, 0x1f80, 0xb385, 0xf166, 0xd59f, 0x1, 0x1);
        gbc.writeMem(0x656c, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x65c6);
        EXPECT(gbc.pc(), 0x656e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0342
        gbc.setState(0x50c3, 0x2da0, 0xcc0, 0x5769, 0x74b4, 0xac9b, 0x1, 0x0);
        gbc.writeMem(0x50c3, { 0x2e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2da0);
        EXPECT(gbc.pc(), 0x50c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0343
        gbc.setState(0x3eae, 0xced6, 0x5610, 0x10f, 0x989a, 0x6f83, 0x1, 0x0);
        gbc.writeMem(0x3eae, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xced6);
        EXPECT(gbc.pc(), 0x3eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0344
        gbc.setState(0xea17, 0xc0fd, 0x55f0, 0x553c, 0xa991, 0xe804, 0x0, 0x1);
        gbc.writeMem(0xea17, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc0fd);
        EXPECT(gbc.pc(), 0xea19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea17), 0x2e);
        EXPECT(gbc.readMem(0xea18), 0x2e);
        // 2E 0345
        gbc.setState(0x97a, 0xeeee, 0xbb50, 0x3, 0x47b7, 0x72c5, 0x1, 0x1);
        gbc.writeMem(0x97a, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xeeee);
        EXPECT(gbc.pc(), 0x97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0346
        gbc.setState(0x2274, 0xd88c, 0xe790, 0xf5fe, 0x4fbe, 0x1cad, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0x2e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd88c);
        EXPECT(gbc.pc(), 0x2276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0347
        gbc.setState(0x5fe5, 0x26c5, 0x1c0, 0x9107, 0x36fb, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x5fe5, { 0x2e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x26c5);
        EXPECT(gbc.pc(), 0x5fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0348
        gbc.setState(0x4df7, 0xebfd, 0xe870, 0x577d, 0x3984, 0xa988, 0x0, 0x1);
        gbc.writeMem(0x4df7, { 0x2e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xebfd);
        EXPECT(gbc.pc(), 0x4df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0349
        gbc.setState(0x4710, 0xaaa2, 0xece0, 0xf7f5, 0x40cd, 0xa1a6, 0x0, 0x0);
        gbc.writeMem(0x4710, { 0x2e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaaa2);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 034A
        gbc.setState(0x60c3, 0xd73a, 0x2ff0, 0xdf17, 0x91a, 0x70f5, 0x1, 0x1);
        gbc.writeMem(0x60c3, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd73a);
        EXPECT(gbc.pc(), 0x60c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 034B
        gbc.setState(0xb94, 0x497c, 0xce30, 0x6eff, 0xd5a4, 0xf1c4, 0x1, 0x1);
        gbc.writeMem(0xb94, { 0x2e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x497c);
        EXPECT(gbc.pc(), 0xb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 034C
        gbc.setState(0x6344, 0xfdbe, 0xe4d0, 0x2be0, 0xb688, 0xd79b, 0x1, 0x0);
        gbc.writeMem(0x6344, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfdbe);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 034D
        gbc.setState(0xc4ac, 0xb3d6, 0x85c0, 0xfa52, 0x2578, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0xc4ac, { 0x2e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb3d6);
        EXPECT(gbc.pc(), 0xc4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ac), 0x2e);
        EXPECT(gbc.readMem(0xc4ad), 0xd3);
        // 2E 034E
        gbc.setState(0xb440, 0x430f, 0x50f0, 0xe1f0, 0x14ce, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0xb440, { 0x2e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x430f);
        EXPECT(gbc.pc(), 0xb442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb440), 0x2e);
        EXPECT(gbc.readMem(0xb441), 0xce);
        // 2E 034F
        gbc.setState(0x7b8c, 0x4a9d, 0x41a0, 0x9bbe, 0x7fc6, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0x7b8c, { 0x2e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0x7b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0350
        gbc.setState(0xb57f, 0xe358, 0x8340, 0x4522, 0x943c, 0x5c75, 0x0, 0x0);
        gbc.writeMem(0xb57f, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0xb581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb57f), 0x2e);
        EXPECT(gbc.readMem(0xb580), 0xd8);
        // 2E 0351
        gbc.setState(0x6a, 0xdd17, 0xbfd0, 0xa5d1, 0x525a, 0x79c, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0x2e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdd17);
        EXPECT(gbc.pc(), 0x6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0352
        gbc.setState(0xe2f5, 0xcafa, 0xf20, 0xeb82, 0x3901, 0xd38a, 0x0, 0x1);
        gbc.writeMem(0xe2f5, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcafa);
        EXPECT(gbc.pc(), 0xe2f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f5), 0x2e);
        EXPECT(gbc.readMem(0xe2f6), 0xaf);
        // 2E 0353
        gbc.setState(0x438f, 0xc662, 0x2f00, 0xb18d, 0x4f0e, 0x568, 0x0, 0x1);
        gbc.writeMem(0x438f, { 0x2e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc662);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0354
        gbc.setState(0x25c7, 0xdba1, 0x72d0, 0x91f3, 0xa53c, 0xce37, 0x0, 0x0);
        gbc.writeMem(0x25c7, { 0x2e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x25c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0355
        gbc.setState(0x5824, 0xbd64, 0x49d0, 0x7d22, 0x4a48, 0x969b, 0x1, 0x1);
        gbc.writeMem(0x5824, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0x5826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0356
        gbc.setState(0x99c4, 0x36c4, 0x1b80, 0xfc0d, 0x2550, 0x1d43, 0x0, 0x0);
        gbc.writeMem(0x99c4, { 0x2e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x36c4);
        EXPECT(gbc.pc(), 0x99c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c4), 0x2e);
        EXPECT(gbc.readMem(0x99c5), 0x68);
        // 2E 0357
        gbc.setState(0x331a, 0xe0c9, 0x62b0, 0x98db, 0xcba1, 0xe8f1, 0x0, 0x1);
        gbc.writeMem(0x331a, { 0x2e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe0c9);
        EXPECT(gbc.pc(), 0x331c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0358
        gbc.setState(0xd51d, 0xa3b2, 0x9810, 0x9fca, 0xa506, 0x9088, 0x1, 0x0);
        gbc.writeMem(0xd51d, { 0x2e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa3b2);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51d), 0x2e);
        EXPECT(gbc.readMem(0xd51e), 0x1b);
        // 2E 035A
        gbc.setState(0xac72, 0xc9ab, 0xe390, 0x5bb3, 0x4a4b, 0x7d52, 0x1, 0x0);
        gbc.writeMem(0xac72, { 0x2e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0xac74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac72), 0x2e);
        EXPECT(gbc.readMem(0xac73), 0x3e);
        // 2E 035B
        gbc.setState(0xcb73, 0x164f, 0xe0c0, 0xa0f7, 0x4097, 0x570c, 0x0, 0x0);
        gbc.writeMem(0xcb73, { 0x2e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0xcb75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb73), 0x2e);
        EXPECT(gbc.readMem(0xcb74), 0xa8);
        // 2E 035C
        gbc.setState(0x88a4, 0x3497, 0x8280, 0x668a, 0x6bf3, 0xb49c, 0x1, 0x1);
        gbc.writeMem(0x88a4, { 0x2e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3497);
        EXPECT(gbc.pc(), 0x88a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a4), 0x2e);
        EXPECT(gbc.readMem(0x88a5), 0x4);
        // 2E 035D
        gbc.setState(0x5c61, 0x7971, 0x5f70, 0x4e72, 0x3eec, 0xae6c, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0x2e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7971);
        EXPECT(gbc.pc(), 0x5c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 035E
        gbc.setState(0x77b6, 0x3203, 0xadc0, 0x6ee, 0x341d, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0x2e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3203);
        EXPECT(gbc.pc(), 0x77b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 035F
        gbc.setState(0xbd16, 0xd01c, 0xe9c0, 0x7dd7, 0x6fc9, 0x915c, 0x0, 0x1);
        gbc.writeMem(0xbd16, { 0x2e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd01c);
        EXPECT(gbc.pc(), 0xbd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd16), 0x2e);
        EXPECT(gbc.readMem(0xbd17), 0x8d);
        // 2E 0360
        gbc.setState(0xaf9a, 0x4bab, 0xb180, 0xd6ec, 0x4775, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0xaf9a, { 0x2e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4bab);
        EXPECT(gbc.pc(), 0xaf9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9a), 0x2e);
        EXPECT(gbc.readMem(0xaf9b), 0x37);
        // 2E 0361
        gbc.setState(0xb8e0, 0xf5c4, 0xf080, 0x2900, 0xbc1f, 0xbf68, 0x1, 0x0);
        gbc.writeMem(0xb8e0, { 0x2e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf5c4);
        EXPECT(gbc.pc(), 0xb8e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e0), 0x2e);
        EXPECT(gbc.readMem(0xb8e1), 0x15);
        // 2E 0362
        gbc.setState(0x3cec, 0x62a3, 0xe5d0, 0xa661, 0xc3d5, 0xa7ed, 0x1, 0x1);
        gbc.writeMem(0x3cec, { 0x2e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x62a3);
        EXPECT(gbc.pc(), 0x3cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0363
        gbc.setState(0x912d, 0x288, 0x8ee0, 0xf255, 0x90c1, 0x33fc, 0x1, 0x0);
        gbc.writeMem(0x912d, { 0x2e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x288);
        EXPECT(gbc.pc(), 0x912f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912d), 0x2e);
        EXPECT(gbc.readMem(0x912e), 0x7f);
        // 2E 0364
        gbc.setState(0x7045, 0x7541, 0xc860, 0xf1b5, 0xd9a3, 0x7b46, 0x0, 0x0);
        gbc.writeMem(0x7045, { 0x2e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7541);
        EXPECT(gbc.pc(), 0x7047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0365
        gbc.setState(0xc44, 0xfb81, 0x1490, 0xa376, 0xcb45, 0xaa98, 0x0, 0x0);
        gbc.writeMem(0xc44, { 0x2e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfb81);
        EXPECT(gbc.pc(), 0xc46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0367
        gbc.setState(0x9dbe, 0x84e7, 0xffa0, 0x5d5, 0x8e3b, 0xf4aa, 0x1, 0x0);
        gbc.writeMem(0x9dbe, { 0x2e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x84e7);
        EXPECT(gbc.pc(), 0x9dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0x2e);
        EXPECT(gbc.readMem(0x9dbf), 0xe9);
        // 2E 0368
        gbc.setState(0x706, 0x58cf, 0x43e0, 0xd4f2, 0x4fba, 0xf296, 0x1, 0x1);
        gbc.writeMem(0x706, { 0x2e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0369
        gbc.setState(0xcad0, 0x8f11, 0xd3e0, 0xa9c2, 0x6dde, 0xf3b3, 0x1, 0x1);
        gbc.writeMem(0xcad0, { 0x2e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8f11);
        EXPECT(gbc.pc(), 0xcad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad0), 0x2e);
        EXPECT(gbc.readMem(0xcad1), 0xe);
        // 2E 036A
        gbc.setState(0xbf97, 0x2690, 0xbbc0, 0x3006, 0x6f4c, 0x639e, 0x1, 0x1);
        gbc.writeMem(0xbf97, { 0x2e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0xbf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf97), 0x2e);
        EXPECT(gbc.readMem(0xbf98), 0x16);
        // 2E 036B
        gbc.setState(0x9e9f, 0x36fb, 0x6ea0, 0xa120, 0x7b3c, 0x3ffb, 0x1, 0x1);
        gbc.writeMem(0x9e9f, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x36fb);
        EXPECT(gbc.pc(), 0x9ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9f), 0x2e);
        EXPECT(gbc.readMem(0x9ea0), 0xa4);
        // 2E 036D
        gbc.setState(0x6b6c, 0x559f, 0xf6f0, 0xe6f9, 0xe5ed, 0xef58, 0x1, 0x1);
        gbc.writeMem(0x6b6c, { 0x2e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0x6b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 036E
        gbc.setState(0x47d, 0x2a93, 0x9150, 0x5660, 0xd9a4, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x47d, { 0x2e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 036F
        gbc.setState(0xe4d1, 0x7688, 0xa730, 0xe581, 0x7a64, 0x9c9b, 0x0, 0x1);
        gbc.writeMem(0xe4d1, { 0x2e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7688);
        EXPECT(gbc.pc(), 0xe4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d1), 0x2e);
        EXPECT(gbc.readMem(0xe4d2), 0xd);
        // 2E 0370
        gbc.setState(0x5050, 0x67ed, 0xff60, 0x834b, 0x62f2, 0x8b13, 0x0, 0x0);
        gbc.writeMem(0x5050, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x67ed);
        EXPECT(gbc.pc(), 0x5052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0371
        gbc.setState(0x51f2, 0x8e79, 0xdd40, 0x40e, 0x53eb, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0x51f2, { 0x2e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8e79);
        EXPECT(gbc.pc(), 0x51f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0372
        gbc.setState(0x1115, 0x1c9f, 0xf510, 0xfd6d, 0xc52b, 0x32af, 0x1, 0x0);
        gbc.writeMem(0x1115, { 0x2e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1c9f);
        EXPECT(gbc.pc(), 0x1117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0373
        gbc.setState(0xca4c, 0x94b1, 0x2a50, 0xdd7c, 0xb273, 0xd98c, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0x2e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x94b1);
        EXPECT(gbc.pc(), 0xca4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4c), 0x2e);
        EXPECT(gbc.readMem(0xca4d), 0x17);
        // 2E 0374
        gbc.setState(0x760d, 0xc230, 0xe8d0, 0x332f, 0x1809, 0x59d9, 0x0, 0x1);
        gbc.writeMem(0x760d, { 0x2e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc230);
        EXPECT(gbc.pc(), 0x760f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0375
        gbc.setState(0xdfdb, 0xdc1f, 0x7d0, 0xc782, 0x4858, 0xc3b3, 0x1, 0x1);
        gbc.writeMem(0xdfdb, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdc1f);
        EXPECT(gbc.pc(), 0xdfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdb), 0x2e);
        EXPECT(gbc.readMem(0xdfdc), 0xbd);
        // 2E 0376
        gbc.setState(0xe1ff, 0x40f2, 0x4ea0, 0x17cf, 0x80d0, 0x4262, 0x1, 0x0);
        gbc.writeMem(0xe1ff, { 0x2e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x40f2);
        EXPECT(gbc.pc(), 0xe201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ff), 0x2e);
        EXPECT(gbc.readMem(0xe200), 0x5e);
        // 2E 0377
        gbc.setState(0xb5f4, 0xf1a9, 0x9ad0, 0x16c0, 0x70e, 0x314a, 0x1, 0x1);
        gbc.writeMem(0xb5f4, { 0x2e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf1a9);
        EXPECT(gbc.pc(), 0xb5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f4), 0x2e);
        EXPECT(gbc.readMem(0xb5f5), 0x61);
        // 2E 0378
        gbc.setState(0x7bc1, 0xa4c7, 0x60f0, 0x22a2, 0x41e, 0x5fa4, 0x1, 0x0);
        gbc.writeMem(0x7bc1, { 0x2e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa4c7);
        EXPECT(gbc.pc(), 0x7bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0379
        gbc.setState(0x2b1d, 0xaabb, 0x7980, 0x5eaf, 0x563a, 0xd121, 0x0, 0x0);
        gbc.writeMem(0x2b1d, { 0x2e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x2b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 037A
        gbc.setState(0xd422, 0xbf10, 0x1730, 0x6cf2, 0x120, 0x2cc1, 0x0, 0x0);
        gbc.writeMem(0xd422, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0xd424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd422), 0x2e);
        EXPECT(gbc.readMem(0xd423), 0x1f);
        // 2E 037B
        gbc.setState(0xc68e, 0xe503, 0x8780, 0x8a9b, 0x2413, 0x38a0, 0x0, 0x1);
        gbc.writeMem(0xc68e, { 0x2e, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe503);
        EXPECT(gbc.pc(), 0xc690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68e), 0x2e);
        EXPECT(gbc.readMem(0xc68f), 0x88);
        // 2E 037C
        gbc.setState(0xa68, 0xed0d, 0x4110, 0xb731, 0x890e, 0xf26c, 0x1, 0x0);
        gbc.writeMem(0xa68, { 0x2e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xed0d);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 037D
        gbc.setState(0xa5e4, 0x8a22, 0x17f0, 0xa837, 0x2102, 0x2122, 0x1, 0x1);
        gbc.writeMem(0xa5e4, { 0x2e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8a22);
        EXPECT(gbc.pc(), 0xa5e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e4), 0x2e);
        EXPECT(gbc.readMem(0xa5e5), 0xd5);
        // 2E 037E
        gbc.setState(0xedf, 0xe5b1, 0x7920, 0x5249, 0x2ff7, 0xea48, 0x1, 0x1);
        gbc.writeMem(0xedf, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe5b1);
        EXPECT(gbc.pc(), 0xee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 037F
        gbc.setState(0xe169, 0xcbfe, 0x57a0, 0x57cb, 0xf040, 0xbdf, 0x0, 0x1);
        gbc.writeMem(0xe169, { 0x2e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcbfe);
        EXPECT(gbc.pc(), 0xe16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe169), 0x2e);
        EXPECT(gbc.readMem(0xe16a), 0x46);
        // 2E 0380
        gbc.setState(0x43ed, 0xd2f7, 0x78f0, 0x4d96, 0xea08, 0x8941, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0x2e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0x43ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0381
        gbc.setState(0xc722, 0x89ef, 0x8bd0, 0xcf67, 0xe7c6, 0x7e85, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0x2e, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x89ef);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc722), 0x2e);
        EXPECT(gbc.readMem(0xc723), 0xec);
        // 2E 0382
        gbc.setState(0xe553, 0x380c, 0x2ff0, 0xcd85, 0x4d24, 0xa70f, 0x0, 0x1);
        gbc.writeMem(0xe553, { 0x2e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x380c);
        EXPECT(gbc.pc(), 0xe555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe553), 0x2e);
        EXPECT(gbc.readMem(0xe554), 0xa4);
        // 2E 0383
        gbc.setState(0x4eb8, 0xd197, 0x5180, 0xec, 0xab73, 0x94ca, 0x1, 0x0);
        gbc.writeMem(0x4eb8, { 0x2e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x4eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0384
        gbc.setState(0x2f5e, 0x75ba, 0x6070, 0x9f74, 0xf5ef, 0xb66c, 0x1, 0x1);
        gbc.writeMem(0x2f5e, { 0x2e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x75ba);
        EXPECT(gbc.pc(), 0x2f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 0385
        gbc.setState(0x8594, 0x7ab4, 0xee0, 0x68d2, 0x1601, 0x95e8, 0x1, 0x0);
        gbc.writeMem(0x8594, { 0x2e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7ab4);
        EXPECT(gbc.pc(), 0x8596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8594), 0x2e);
        EXPECT(gbc.readMem(0x8595), 0xab);
        // 2E 0386
        gbc.setState(0x80cc, 0x58f, 0xe0e0, 0xbb65, 0x73a1, 0xde4b, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x58f);
        EXPECT(gbc.pc(), 0x80ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cc), 0x2e);
        EXPECT(gbc.readMem(0x80cd), 0xfd);
        // 2E 0387
        gbc.setState(0x137, 0xccf5, 0xbe40, 0x1749, 0x6d25, 0x9f22, 0x1, 0x0);
        gbc.writeMem(0x137, { 0x2e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xccf5);
        EXPECT(gbc.pc(), 0x139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 0388
        gbc.setState(0x35b8, 0xe8cf, 0x5200, 0xbc8e, 0xe533, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x35b8, { 0x2e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe8cf);
        EXPECT(gbc.pc(), 0x35ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 038A
        gbc.setState(0x2d52, 0xc9b7, 0x35e0, 0x3713, 0xa0d6, 0xde2c, 0x0, 0x0);
        gbc.writeMem(0x2d52, { 0x2e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc9b7);
        EXPECT(gbc.pc(), 0x2d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 038C
        gbc.setState(0x7c5e, 0xa186, 0x29e0, 0x953c, 0xee58, 0xa84f, 0x1, 0x1);
        gbc.writeMem(0x7c5e, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa186);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 038D
        gbc.setState(0x364c, 0xce3c, 0x5b00, 0x6fe7, 0xadbb, 0x79d9, 0x1, 0x1);
        gbc.writeMem(0x364c, { 0x2e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xce3c);
        EXPECT(gbc.pc(), 0x364e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 038E
        gbc.setState(0xb33e, 0xda28, 0xecd0, 0x34c4, 0xe3a5, 0xf83d, 0x1, 0x1);
        gbc.writeMem(0xb33e, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xda28);
        EXPECT(gbc.pc(), 0xb340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33e), 0x2e);
        EXPECT(gbc.readMem(0xb33f), 0x4c);
        // 2E 038F
        gbc.setState(0xc2dd, 0x5624, 0x11e0, 0xb7cc, 0x6279, 0x4b13, 0x1, 0x0);
        gbc.writeMem(0xc2dd, { 0x2e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5624);
        EXPECT(gbc.pc(), 0xc2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2dd), 0x2e);
        EXPECT(gbc.readMem(0xc2de), 0x92);
        // 2E 0390
        gbc.setState(0x4e10, 0x6338, 0x7a90, 0xd87f, 0xb306, 0x3276, 0x1, 0x0);
        gbc.writeMem(0x4e10, { 0x2e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6338);
        EXPECT(gbc.pc(), 0x4e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0391
        gbc.setState(0xc6d, 0x2f5a, 0xfe0, 0x9ad4, 0xce18, 0x55e3, 0x0, 0x1);
        gbc.writeMem(0xc6d, { 0x2e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2f5a);
        EXPECT(gbc.pc(), 0xc6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0392
        gbc.setState(0x99c2, 0x4c9e, 0x98a0, 0x222f, 0x132c, 0xcde4, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0x2e, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4c9e);
        EXPECT(gbc.pc(), 0x99c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c2), 0x2e);
        EXPECT(gbc.readMem(0x99c3), 0x1e);
        // 2E 0393
        gbc.setState(0xaa0c, 0x96ce, 0x79a0, 0x8820, 0x9b72, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0xaa0c, { 0x2e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x96ce);
        EXPECT(gbc.pc(), 0xaa0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0c), 0x2e);
        EXPECT(gbc.readMem(0xaa0d), 0xda);
        // 2E 0394
        gbc.setState(0x7ba0, 0xabbc, 0xf350, 0x4276, 0xd41, 0x4ccb, 0x1, 0x1);
        gbc.writeMem(0x7ba0, { 0x2e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xabbc);
        EXPECT(gbc.pc(), 0x7ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 0395
        gbc.setState(0x669e, 0x71f5, 0x3320, 0xa3de, 0x792a, 0xae96, 0x1, 0x1);
        gbc.writeMem(0x669e, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x71f5);
        EXPECT(gbc.pc(), 0x66a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 0396
        gbc.setState(0xbdc7, 0xb676, 0xfa20, 0x6a41, 0x4d36, 0x31f, 0x1, 0x1);
        gbc.writeMem(0xbdc7, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb676);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc7), 0x2e);
        EXPECT(gbc.readMem(0xbdc8), 0xb6);
        // 2E 0397
        gbc.setState(0xc2e1, 0xf7fe, 0x6f70, 0xd58, 0x35a6, 0x98c8, 0x1, 0x0);
        gbc.writeMem(0xc2e1, { 0x2e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf7fe);
        EXPECT(gbc.pc(), 0xc2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e1), 0x2e);
        EXPECT(gbc.readMem(0xc2e2), 0xa5);
        // 2E 0399
        gbc.setState(0xd988, 0x8ab, 0xd460, 0x1e72, 0x1b6, 0x5d17, 0x0, 0x0);
        gbc.writeMem(0xd988, { 0x2e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8ab);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0x2e);
        EXPECT(gbc.readMem(0xd989), 0x8c);
        // 2E 039A
        gbc.setState(0x76f9, 0x93cb, 0x2320, 0x902c, 0x895b, 0x6a74, 0x1, 0x1);
        gbc.writeMem(0x76f9, { 0x2e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x93cb);
        EXPECT(gbc.pc(), 0x76fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 039B
        gbc.setState(0x1476, 0xe336, 0x1e00, 0x38a0, 0xa2a, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0x1476, { 0x2e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe336);
        EXPECT(gbc.pc(), 0x1478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 039C
        gbc.setState(0xcca8, 0x5bb3, 0x5390, 0xd2ca, 0x9bc0, 0x7540, 0x1, 0x0);
        gbc.writeMem(0xcca8, { 0x2e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5bb3);
        EXPECT(gbc.pc(), 0xccaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca8), 0x2e);
        EXPECT(gbc.readMem(0xcca9), 0xa9);
        // 2E 039D
        gbc.setState(0x2154, 0xd4ae, 0xb6f0, 0xeedb, 0xac73, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x2154, { 0x2e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd4ae);
        EXPECT(gbc.pc(), 0x2156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 039E
        gbc.setState(0xc728, 0xebdf, 0x1b70, 0xf52a, 0x9c36, 0x4083, 0x0, 0x1);
        gbc.writeMem(0xc728, { 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xebdf);
        EXPECT(gbc.pc(), 0xc72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc728), 0x2e);
        EXPECT(gbc.readMem(0xc729), 0xbb);
        // 2E 039F
        gbc.setState(0x5693, 0xff6e, 0x7760, 0x9bf9, 0x2ffe, 0x6ff6, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0x5695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03A0
        gbc.setState(0x1348, 0x5b6d, 0xbe60, 0xc668, 0x2921, 0x96af, 0x0, 0x0);
        gbc.writeMem(0x1348, { 0x2e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5b6d);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03A1
        gbc.setState(0xbad8, 0xb54, 0xe4e0, 0x1dfe, 0x1dcd, 0x3ce8, 0x0, 0x0);
        gbc.writeMem(0xbad8, { 0x2e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb54);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad8), 0x2e);
        EXPECT(gbc.readMem(0xbad9), 0xfb);
        // 2E 03A2
        gbc.setState(0x1a6c, 0xd1e4, 0xb560, 0x2b0, 0x1974, 0xd08e, 0x1, 0x1);
        gbc.writeMem(0x1a6c, { 0x2e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd1e4);
        EXPECT(gbc.pc(), 0x1a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03A3
        gbc.setState(0x4f70, 0xeb33, 0xe010, 0xe6c8, 0xb0df, 0xd6d8, 0x1, 0x1);
        gbc.writeMem(0x4f70, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeb33);
        EXPECT(gbc.pc(), 0x4f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03A4
        gbc.setState(0x8c34, 0xdcc2, 0x52b0, 0xa7b, 0x122a, 0x9284, 0x0, 0x0);
        gbc.writeMem(0x8c34, { 0x2e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdcc2);
        EXPECT(gbc.pc(), 0x8c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c34), 0x2e);
        EXPECT(gbc.readMem(0x8c35), 0x2b);
        // 2E 03A5
        gbc.setState(0x7f54, 0x22b2, 0x91f0, 0x5a49, 0xa05b, 0x7d90, 0x0, 0x1);
        gbc.writeMem(0x7f54, { 0x2e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x22b2);
        EXPECT(gbc.pc(), 0x7f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03A6
        gbc.setState(0x96ea, 0x4fba, 0x6ce0, 0x863e, 0x68af, 0xfdbf, 0x1, 0x0);
        gbc.writeMem(0x96ea, { 0x2e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4fba);
        EXPECT(gbc.pc(), 0x96ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ea), 0x2e);
        EXPECT(gbc.readMem(0x96eb), 0xa7);
        // 2E 03A7
        gbc.setState(0x4c4d, 0x5e6e, 0x9e10, 0x8311, 0x1c30, 0x5c67, 0x1, 0x0);
        gbc.writeMem(0x4c4d, { 0x2e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5e6e);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03A8
        gbc.setState(0x936f, 0xf5d2, 0x9f50, 0x18f0, 0xce10, 0x2b9, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf5d2);
        EXPECT(gbc.pc(), 0x9371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936f), 0x2e);
        EXPECT(gbc.readMem(0x9370), 0xae);
        // 2E 03A9
        gbc.setState(0x17b4, 0xd33d, 0x510, 0xd05d, 0x72bc, 0x97f2, 0x0, 0x0);
        gbc.writeMem(0x17b4, { 0x2e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd33d);
        EXPECT(gbc.pc(), 0x17b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03AA
        gbc.setState(0x680f, 0x58d2, 0xb190, 0xe18b, 0xad4d, 0x4933, 0x1, 0x0);
        gbc.writeMem(0x680f, { 0x2e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x58d2);
        EXPECT(gbc.pc(), 0x6811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03AB
        gbc.setState(0xbebc, 0x3588, 0x46c0, 0xcfdf, 0xd497, 0x3a82, 0x1, 0x0);
        gbc.writeMem(0xbebc, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3588);
        EXPECT(gbc.pc(), 0xbebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebc), 0x2e);
        EXPECT(gbc.readMem(0xbebd), 0x54);
        // 2E 03AC
        gbc.setState(0x26e6, 0x8669, 0x9ab0, 0xe383, 0xf5ce, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0x26e6, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8669);
        EXPECT(gbc.pc(), 0x26e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03AD
        gbc.setState(0xadb4, 0xb9b8, 0xe390, 0xeee9, 0x6f8b, 0x1d7b, 0x1, 0x1);
        gbc.writeMem(0xadb4, { 0x2e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb9b8);
        EXPECT(gbc.pc(), 0xadb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb4), 0x2e);
        EXPECT(gbc.readMem(0xadb5), 0xdb);
        // 2E 03AF
        gbc.setState(0x4c9b, 0x864e, 0x1810, 0x9cc7, 0x3c3a, 0x25f0, 0x1, 0x1);
        gbc.writeMem(0x4c9b, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x864e);
        EXPECT(gbc.pc(), 0x4c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03B0
        gbc.setState(0xdd7f, 0xc2c9, 0xa4b0, 0xca82, 0x5c09, 0x6b25, 0x1, 0x0);
        gbc.writeMem(0xdd7f, { 0x2e, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0xdd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7f), 0x2e);
        EXPECT(gbc.readMem(0xdd80), 0xde);
        // 2E 03B2
        gbc.setState(0xe66, 0xd650, 0xb0f0, 0x255e, 0x8e22, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0xe66, { 0x2e, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd650);
        EXPECT(gbc.pc(), 0xe68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03B3
        gbc.setState(0x9ffd, 0xb9fb, 0xaea0, 0x4998, 0xc5ef, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0x9ffd, { 0x2e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb9fb);
        EXPECT(gbc.pc(), 0x9fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffd), 0x2e);
        EXPECT(gbc.readMem(0x9ffe), 0xcd);
        // 2E 03B4
        gbc.setState(0xecb7, 0xb64c, 0x7d50, 0x4f60, 0xa894, 0xe722, 0x1, 0x0);
        gbc.writeMem(0xecb7, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0xecb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb7), 0x2e);
        EXPECT(gbc.readMem(0xecb8), 0xbd);
        // 2E 03B5
        gbc.setState(0x7679, 0x6850, 0x1e80, 0x862e, 0xb7df, 0xc7ed, 0x0, 0x1);
        gbc.writeMem(0x7679, { 0x2e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6850);
        EXPECT(gbc.pc(), 0x767b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03B7
        gbc.setState(0x5e09, 0x12dc, 0x86d0, 0x1cef, 0x4650, 0x903b, 0x1, 0x0);
        gbc.writeMem(0x5e09, { 0x2e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x12dc);
        EXPECT(gbc.pc(), 0x5e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03B8
        gbc.setState(0x42b2, 0x2bc1, 0xc330, 0x61b6, 0xf062, 0xa54a, 0x0, 0x1);
        gbc.writeMem(0x42b2, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2bc1);
        EXPECT(gbc.pc(), 0x42b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03B9
        gbc.setState(0x5f90, 0xd614, 0x4e60, 0x7db2, 0xf9a5, 0x8f06, 0x0, 0x0);
        gbc.writeMem(0x5f90, { 0x2e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd614);
        EXPECT(gbc.pc(), 0x5f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03BA
        gbc.setState(0xcf4a, 0x365, 0x400, 0xe67d, 0xfac4, 0x10f3, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x365);
        EXPECT(gbc.pc(), 0xcf4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0x2e);
        EXPECT(gbc.readMem(0xcf4b), 0xd8);
        // 2E 03BB
        gbc.setState(0x516e, 0x9b57, 0x34f0, 0xe9c9, 0xd677, 0xc41a, 0x1, 0x0);
        gbc.writeMem(0x516e, { 0x2e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9b57);
        EXPECT(gbc.pc(), 0x5170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03BD
        gbc.setState(0x546f, 0x86a3, 0xc0, 0xfd79, 0x91e4, 0xc49c, 0x0, 0x1);
        gbc.writeMem(0x546f, { 0x2e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x86a3);
        EXPECT(gbc.pc(), 0x5471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03BE
        gbc.setState(0xe3b6, 0x4a23, 0xbe60, 0x3714, 0x7931, 0xb8b2, 0x1, 0x1);
        gbc.writeMem(0xe3b6, { 0x2e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4a23);
        EXPECT(gbc.pc(), 0xe3b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b6), 0x2e);
        EXPECT(gbc.readMem(0xe3b7), 0x78);
        // 2E 03BF
        gbc.setState(0x174a, 0x99e1, 0xdf60, 0xf62d, 0x356e, 0x3a3b, 0x1, 0x1);
        gbc.writeMem(0x174a, { 0x2e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x99e1);
        EXPECT(gbc.pc(), 0x174c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C0
        gbc.setState(0x1d8a, 0x4ad1, 0xa7e0, 0xed6, 0xf5a6, 0x37e0, 0x1, 0x0);
        gbc.writeMem(0x1d8a, { 0x2e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x1d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C1
        gbc.setState(0x5ff4, 0x3dd2, 0xaa80, 0xdf3e, 0xf29c, 0xf0fa, 0x1, 0x1);
        gbc.writeMem(0x5ff4, { 0x2e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3dd2);
        EXPECT(gbc.pc(), 0x5ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C2
        gbc.setState(0x502d, 0x3f87, 0xd3a0, 0xeeec, 0xa507, 0x5b2, 0x1, 0x1);
        gbc.writeMem(0x502d, { 0x2e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3f87);
        EXPECT(gbc.pc(), 0x502f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C3
        gbc.setState(0x14b9, 0x73c8, 0x180, 0x33ba, 0x3795, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x73c8);
        EXPECT(gbc.pc(), 0x14bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C5
        gbc.setState(0x8bb5, 0xc641, 0x8020, 0x988b, 0xd17d, 0x49b4, 0x0, 0x0);
        gbc.writeMem(0x8bb5, { 0x2e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc641);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb5), 0x2e);
        EXPECT(gbc.readMem(0x8bb6), 0x65);
        // 2E 03C6
        gbc.setState(0x2c5d, 0x62e, 0x6e60, 0xaaa2, 0x810f, 0x3f7, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0x2e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x62e);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C7
        gbc.setState(0x97c0, 0xa8de, 0x81e0, 0xcaeb, 0x2044, 0x526f, 0x0, 0x1);
        gbc.writeMem(0x97c0, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa8de);
        EXPECT(gbc.pc(), 0x97c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c0), 0x2e);
        EXPECT(gbc.readMem(0x97c1), 0xaf);
        // 2E 03C8
        gbc.setState(0x52f, 0xf02d, 0xd7e0, 0xac0f, 0x1de1, 0x8f41, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0x2e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf02d);
        EXPECT(gbc.pc(), 0x531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03C9
        gbc.setState(0x59eb, 0x8e21, 0x6bd0, 0xb31c, 0x7e9b, 0xa8e4, 0x0, 0x0);
        gbc.writeMem(0x59eb, { 0x2e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8e21);
        EXPECT(gbc.pc(), 0x59ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03CA
        gbc.setState(0xbd5d, 0xadac, 0x6610, 0xdbb7, 0xe344, 0x9bfe, 0x1, 0x1);
        gbc.writeMem(0xbd5d, { 0x2e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0xbd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5d), 0x2e);
        EXPECT(gbc.readMem(0xbd5e), 0xaf);
        // 2E 03CC
        gbc.setState(0x388e, 0xd4fe, 0x4700, 0xb593, 0x1e27, 0x29e1, 0x0, 0x0);
        gbc.writeMem(0x388e, { 0x2e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd4fe);
        EXPECT(gbc.pc(), 0x3890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03CD
        gbc.setState(0xae48, 0x9013, 0x5360, 0x9473, 0xab25, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0xae48, { 0x2e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9013);
        EXPECT(gbc.pc(), 0xae4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae48), 0x2e);
        EXPECT(gbc.readMem(0xae49), 0xd8);
        // 2E 03CE
        gbc.setState(0xc293, 0xcff4, 0x6d40, 0x9a35, 0x9396, 0x3c1b, 0x0, 0x0);
        gbc.writeMem(0xc293, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcff4);
        EXPECT(gbc.pc(), 0xc295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc293), 0x2e);
        EXPECT(gbc.readMem(0xc294), 0xf0);
        // 2E 03CF
        gbc.setState(0xe6cd, 0x93d7, 0xa0d0, 0xc1c2, 0x569e, 0xdafa, 0x0, 0x1);
        gbc.writeMem(0xe6cd, { 0x2e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0xe6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cd), 0x2e);
        EXPECT(gbc.readMem(0xe6ce), 0xf0);
        // 2E 03D0
        gbc.setState(0x9317, 0x158f, 0x5260, 0xe803, 0x5adb, 0x94bd, 0x1, 0x1);
        gbc.writeMem(0x9317, { 0x2e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x158f);
        EXPECT(gbc.pc(), 0x9319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9317), 0x2e);
        EXPECT(gbc.readMem(0x9318), 0x42);
        // 2E 03D1
        gbc.setState(0xea31, 0x7cd7, 0xea50, 0xeaf, 0x8659, 0x4f92, 0x1, 0x0);
        gbc.writeMem(0xea31, { 0x2e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7cd7);
        EXPECT(gbc.pc(), 0xea33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea31), 0x2e);
        EXPECT(gbc.readMem(0xea32), 0x6a);
        // 2E 03D2
        gbc.setState(0x1664, 0xe32a, 0x5f00, 0xcdd3, 0xd3ea, 0xdd35, 0x1, 0x1);
        gbc.writeMem(0x1664, { 0x2e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe32a);
        EXPECT(gbc.pc(), 0x1666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 2E 03D3
        gbc.setState(0xc1bd, 0x5341, 0x9d80, 0xa443, 0x34ec, 0x1b0, 0x1, 0x1);
        gbc.writeMem(0xc1bd, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5341);
        EXPECT(gbc.pc(), 0xc1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1bd), 0x2e);
        EXPECT(gbc.readMem(0xc1be), 0x95);
        // 2E 03D4
        gbc.setState(0xa459, 0x4296, 0x4f50, 0x9e33, 0x55b3, 0x6a70, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0x2e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4296);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa459), 0x2e);
        EXPECT(gbc.readMem(0xa45a), 0x54);
        // 2E 03D5
        gbc.setState(0x96b7, 0x3767, 0x7240, 0xc097, 0x3298, 0x6d3f, 0x1, 0x0);
        gbc.writeMem(0x96b7, { 0x2e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3767);
        EXPECT(gbc.pc(), 0x96b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b7), 0x2e);
        EXPECT(gbc.readMem(0x96b8), 0x64);
        // 2E 03D6
        gbc.setState(0x9c57, 0x9598, 0xfac0, 0xb501, 0x5565, 0x4c1b, 0x0, 0x0);
        gbc.writeMem(0x9c57, { 0x2e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0x9c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c57), 0x2e);
        EXPECT(gbc.readMem(0x9c58), 0x7b);
        // 2E 03D7
        gbc.setState(0x3353, 0xc44a, 0x4a60, 0x2e59, 0xbfc4, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0x2e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc44a);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03D8
        gbc.setState(0xdcc0, 0x8d2f, 0x6730, 0x31d8, 0xafb7, 0x4d22, 0x0, 0x1);
        gbc.writeMem(0xdcc0, { 0x2e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8d2f);
        EXPECT(gbc.pc(), 0xdcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc0), 0x2e);
        EXPECT(gbc.readMem(0xdcc1), 0x18);
        // 2E 03D9
        gbc.setState(0xd867, 0x922c, 0x6390, 0x37a2, 0xbe14, 0x5ea4, 0x0, 0x1);
        gbc.writeMem(0xd867, { 0x2e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x922c);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd867), 0x2e);
        EXPECT(gbc.readMem(0xd868), 0xfd);
        // 2E 03DA
        gbc.setState(0xaee4, 0x9f33, 0xa9f0, 0xf2e9, 0x9dd7, 0x245a, 0x0, 0x0);
        gbc.writeMem(0xaee4, { 0x2e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9f33);
        EXPECT(gbc.pc(), 0xaee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee4), 0x2e);
        EXPECT(gbc.readMem(0xaee5), 0xda);
        // 2E 03DB
        gbc.setState(0x7c5e, 0xe18, 0x8c20, 0xce01, 0xcf18, 0x56c2, 0x0, 0x0);
        gbc.writeMem(0x7c5e, { 0x2e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe18);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 2E 03DC
        gbc.setState(0xbc07, 0xdf25, 0xfc60, 0x22da, 0x7a35, 0xdbd5, 0x1, 0x1);
        gbc.writeMem(0xbc07, { 0x2e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdf25);
        EXPECT(gbc.pc(), 0xbc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc07), 0x2e);
        EXPECT(gbc.readMem(0xbc08), 0x6e);
        // 2E 03DD
        gbc.setState(0xe69f, 0xc463, 0xa200, 0xcdae, 0x57c9, 0x30ce, 0x0, 0x0);
        gbc.writeMem(0xe69f, { 0x2e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc463);
        EXPECT(gbc.pc(), 0xe6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe69f), 0x2e);
        EXPECT(gbc.readMem(0xe6a0), 0xd7);
        // 2E 03DE
        gbc.setState(0xed36, 0xd6c0, 0x2c60, 0x2adb, 0x2d1d, 0x9c7a, 0x1, 0x0);
        gbc.writeMem(0xed36, { 0x2e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd6c0);
        EXPECT(gbc.pc(), 0xed38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed36), 0x2e);
        EXPECT(gbc.readMem(0xed37), 0x9b);
        // 2E 03DF
        gbc.setState(0x1b5e, 0x9abe, 0x6cd0, 0x9135, 0x7f5f, 0x6142, 0x0, 0x0);
        gbc.writeMem(0x1b5e, { 0x2e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9abe);
        EXPECT(gbc.pc(), 0x1b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03E0
        gbc.setState(0xe93a, 0xa269, 0x2620, 0xe980, 0x26ca, 0x5d1c, 0x1, 0x1);
        gbc.writeMem(0xe93a, { 0x2e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa269);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93a), 0x2e);
        EXPECT(gbc.readMem(0xe93b), 0xf8);
        // 2E 03E1
        gbc.setState(0x19a2, 0xdcc7, 0x47d0, 0xc958, 0x8ea0, 0x8be5, 0x0, 0x1);
        gbc.writeMem(0x19a2, { 0x2e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0x19a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 2E 03E2
        gbc.setState(0x8e38, 0x180a, 0x3970, 0x7918, 0x1812, 0x6959, 0x1, 0x0);
        gbc.writeMem(0x8e38, { 0x2e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x180a);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e38), 0x2e);
        EXPECT(gbc.readMem(0x8e39), 0x95);
        // 2E 03E3
        gbc.setState(0xd607, 0x9cb5, 0x24c0, 0x51b6, 0xe55f, 0x1c6, 0x1, 0x1);
        gbc.writeMem(0xd607, { 0x2e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9cb5);
        EXPECT(gbc.pc(), 0xd609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd607), 0x2e);
        EXPECT(gbc.readMem(0xd608), 0x8);
        // 2E 03E4
        gbc.setState(0xadbf, 0x7f79, 0x7a70, 0x8cf6, 0x568a, 0xd24b, 0x0, 0x1);
        gbc.writeMem(0xadbf, { 0x2e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7f79);
        EXPECT(gbc.pc(), 0xadc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbf), 0x2e);
        EXPECT(gbc.readMem(0xadc0), 0xca);
        // 2E 03E5
        gbc.setState(0x68b0, 0x3822, 0x5970, 0x9934, 0x7333, 0x87e, 0x1, 0x0);
        gbc.writeMem(0x68b0, { 0x2e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3822);
        EXPECT(gbc.pc(), 0x68b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 2E 03E7
        gbc.setState(0x3653, 0xd29a, 0x8060, 0xcfd7, 0x1ff8, 0x7ece, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0x2e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd29a);
        EXPECT(gbc.pc(), 0x3655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
