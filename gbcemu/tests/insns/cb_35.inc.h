    TEST(gbcemu, opcode_cb_35) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 35 0000
        gbc.setState(0x22b7, 0x5b40, 0xd360, 0xcce6, 0x2943, 0xe5a3, 0x1, 0x1);
        gbc.writeMem(0x22b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0001
        gbc.setState(0x5ea3, 0x8685, 0x15e0, 0xba4a, 0xa50c, 0xbe94, 0x1, 0x1);
        gbc.writeMem(0x5ea3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8685, gbc.sp());
        EXPECT(0x5ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0002
        gbc.setState(0x1c76, 0xf47f, 0xea40, 0xc195, 0x80fa, 0xa798, 0x1, 0x0);
        gbc.writeMem(0x1c76, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf47f, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0003
        gbc.setState(0x85e7, 0x117c, 0x3430, 0x5b0d, 0xd1b1, 0x1a50, 0x0, 0x1);
        gbc.writeMem(0x85e7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0x85e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e7));
        EXPECT(0x35, gbc.readMem(0x85e8));
        // CB 35 0004
        gbc.setState(0xdb8e, 0x57f0, 0x170, 0x38fd, 0xb2ae, 0x64fc, 0x1, 0x0);
        gbc.writeMem(0xdb8e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0xdb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8e));
        EXPECT(0x35, gbc.readMem(0xdb8f));
        // CB 35 0005
        gbc.setState(0x80d4, 0xf60f, 0x2a30, 0xd946, 0xf107, 0xdb09, 0x1, 0x1);
        gbc.writeMem(0x80d4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf60f, gbc.sp());
        EXPECT(0x80d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d4));
        EXPECT(0x35, gbc.readMem(0x80d5));
        // CB 35 0006
        gbc.setState(0xd460, 0x23eb, 0xfe20, 0x7c52, 0x7b41, 0xc4d0, 0x1, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x23eb, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd460));
        EXPECT(0x35, gbc.readMem(0xd461));
        // CB 35 0008
        gbc.setState(0x8ef0, 0xfc66, 0xb600, 0x16af, 0xd25e, 0x9ade, 0x0, 0x1);
        gbc.writeMem(0x8ef0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfc66, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef0));
        EXPECT(0x35, gbc.readMem(0x8ef1));
        // CB 35 0009
        gbc.setState(0x152, 0x1a28, 0x3020, 0xde4d, 0x4178, 0x29ac, 0x0, 0x1);
        gbc.writeMem(0x152, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a28, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 000A
        gbc.setState(0xc100, 0x3237, 0x82b0, 0x7240, 0xf642, 0xe5cf, 0x1, 0x0);
        gbc.writeMem(0xc100, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3237, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc100));
        EXPECT(0x35, gbc.readMem(0xc101));
        // CB 35 000B
        gbc.setState(0x6ddf, 0xdd84, 0x4840, 0xb692, 0xc8d4, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x6ddf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 000C
        gbc.setState(0xbefc, 0xbe76, 0xfa00, 0xeb86, 0xf8db, 0x1d15, 0x0, 0x1);
        gbc.writeMem(0xbefc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefc));
        EXPECT(0x35, gbc.readMem(0xbefd));
        // CB 35 000D
        gbc.setState(0xeeb6, 0x959a, 0x9cb0, 0xdc5c, 0x85e0, 0xafde, 0x1, 0x1);
        gbc.writeMem(0xeeb6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb6));
        EXPECT(0x35, gbc.readMem(0xeeb7));
        // CB 35 000E
        gbc.setState(0x31ae, 0xf777, 0xfb10, 0x37bd, 0xdb7f, 0xc0f3, 0x1, 0x0);
        gbc.writeMem(0x31ae, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 000F
        gbc.setState(0xd818, 0x31b4, 0xa8b0, 0x747e, 0xff86, 0xc40b, 0x0, 0x0);
        gbc.writeMem(0xd818, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd818));
        EXPECT(0x35, gbc.readMem(0xd819));
        // CB 35 0010
        gbc.setState(0x96eb, 0xbb52, 0xcc70, 0xceda, 0xee4b, 0xd3e3, 0x0, 0x1);
        gbc.writeMem(0x96eb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x96ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96eb));
        EXPECT(0x35, gbc.readMem(0x96ec));
        // CB 35 0011
        gbc.setState(0xc7a6, 0x56cd, 0xda50, 0xaa9e, 0x4bd6, 0x95b1, 0x1, 0x1);
        gbc.writeMem(0xc7a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0xc7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a6));
        EXPECT(0x35, gbc.readMem(0xc7a7));
        // CB 35 0012
        gbc.setState(0xca5a, 0x42a7, 0xe4a0, 0xcac, 0x2e8f, 0xc77d, 0x1, 0x0);
        gbc.writeMem(0xca5a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x42a7, gbc.sp());
        EXPECT(0xca5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5a));
        EXPECT(0x35, gbc.readMem(0xca5b));
        // CB 35 0014
        gbc.setState(0xd57f, 0xb728, 0x3320, 0x82ae, 0xcea9, 0x8756, 0x1, 0x0);
        gbc.writeMem(0xd57f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb728, gbc.sp());
        EXPECT(0xd581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57f));
        EXPECT(0x35, gbc.readMem(0xd580));
        // CB 35 0015
        gbc.setState(0x41ca, 0x5498, 0xfdc0, 0xe2ed, 0x97f6, 0x98db, 0x1, 0x0);
        gbc.writeMem(0x41ca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5498, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0016
        gbc.setState(0x1041, 0xc84a, 0xe610, 0xc5e0, 0xae9b, 0x117, 0x0, 0x1);
        gbc.writeMem(0x1041, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc84a, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0017
        gbc.setState(0x226d, 0xe1c5, 0x3020, 0xdfa6, 0x8df2, 0x5ca4, 0x0, 0x1);
        gbc.writeMem(0x226d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe1c5, gbc.sp());
        EXPECT(0x226f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0018
        gbc.setState(0x7c74, 0x55f9, 0x7d50, 0x3394, 0xb30, 0x3998, 0x1, 0x1);
        gbc.writeMem(0x7c74, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x55f9, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0019
        gbc.setState(0xadad, 0xc627, 0xf290, 0xbce3, 0x1c76, 0x359e, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadad));
        EXPECT(0x35, gbc.readMem(0xadae));
        // CB 35 001A
        gbc.setState(0xc8e, 0x84fb, 0xfa70, 0x6f24, 0x9723, 0xdd9e, 0x0, 0x0);
        gbc.writeMem(0xc8e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x84fb, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 001B
        gbc.setState(0x1179, 0xc46f, 0xee0, 0xdaf9, 0x643, 0x8c65, 0x0, 0x1);
        gbc.writeMem(0x1179, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc46f, gbc.sp());
        EXPECT(0x117b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 001C
        gbc.setState(0x92fa, 0xe87, 0x3230, 0xe1de, 0xbc42, 0xa9c8, 0x1, 0x1);
        gbc.writeMem(0x92fa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe87, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fa));
        EXPECT(0x35, gbc.readMem(0x92fb));
        // CB 35 001D
        gbc.setState(0xaaef, 0xe246, 0x5c0, 0xb68a, 0xc058, 0xfe73, 0x0, 0x1);
        gbc.writeMem(0xaaef, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe246, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaef));
        EXPECT(0x35, gbc.readMem(0xaaf0));
        // CB 35 001E
        gbc.setState(0x376e, 0xb4c8, 0x7850, 0xfe51, 0x736f, 0xe7b1, 0x0, 0x0);
        gbc.writeMem(0x376e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb4c8, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 001F
        gbc.setState(0x216e, 0xeaad, 0x51e0, 0xc19a, 0x1770, 0x477d, 0x1, 0x1);
        gbc.writeMem(0x216e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x2170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0020
        gbc.setState(0x92bc, 0x49f4, 0x9fc0, 0xfcf5, 0xda21, 0x8eb8, 0x0, 0x0);
        gbc.writeMem(0x92bc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bc));
        EXPECT(0x35, gbc.readMem(0x92bd));
        // CB 35 0021
        gbc.setState(0x1213, 0xa2bb, 0x2a10, 0x8846, 0xf324, 0x2a0f, 0x1, 0x1);
        gbc.writeMem(0x1213, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0x1215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0022
        gbc.setState(0xcb20, 0xa35, 0x14d0, 0xfa09, 0x28a3, 0xc81c, 0x1, 0x1);
        gbc.writeMem(0xcb20, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa35, gbc.sp());
        EXPECT(0xcb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb20));
        EXPECT(0x35, gbc.readMem(0xcb21));
        // CB 35 0023
        gbc.setState(0x6d72, 0x957b, 0xa130, 0xc1a8, 0x8fa8, 0xe26, 0x1, 0x0);
        gbc.writeMem(0x6d72, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0024
        gbc.setState(0xa7b6, 0x9419, 0xa9b0, 0x65f5, 0x5823, 0xba3d, 0x0, 0x1);
        gbc.writeMem(0xa7b6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9419, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b6));
        EXPECT(0x35, gbc.readMem(0xa7b7));
        // CB 35 0025
        gbc.setState(0x18c6, 0x6f34, 0x12e0, 0x40ba, 0xcf42, 0x3a3d, 0x1, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6f34, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0026
        gbc.setState(0x67d0, 0x96b0, 0xa30, 0xbc74, 0x10ad, 0xf8aa, 0x0, 0x1);
        gbc.writeMem(0x67d0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x67d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0027
        gbc.setState(0x9064, 0x3c3a, 0x92b0, 0xa4c, 0x4f51, 0xae60, 0x1, 0x1);
        gbc.writeMem(0x9064, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3c3a, gbc.sp());
        EXPECT(0x9066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9064));
        EXPECT(0x35, gbc.readMem(0x9065));
        // CB 35 0028
        gbc.setState(0xa15, 0xc312, 0xde40, 0xd8f4, 0x539d, 0xbd02, 0x0, 0x0);
        gbc.writeMem(0xa15, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0029
        gbc.setState(0xdf66, 0x7948, 0xc6a0, 0x18f2, 0xdb21, 0x48f2, 0x0, 0x0);
        gbc.writeMem(0xdf66, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0xdf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf66));
        EXPECT(0x35, gbc.readMem(0xdf67));
        // CB 35 002A
        gbc.setState(0x27c6, 0x95e1, 0x45d0, 0x8e01, 0x9469, 0x8c77, 0x0, 0x0);
        gbc.writeMem(0x27c6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 002C
        gbc.setState(0xaa5b, 0xf7f4, 0x2a90, 0x8a8a, 0xa628, 0xf879, 0x0, 0x1);
        gbc.writeMem(0xaa5b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0xaa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5b));
        EXPECT(0x35, gbc.readMem(0xaa5c));
        // CB 35 002D
        gbc.setState(0x158a, 0x563a, 0x3eb0, 0x4a20, 0xc65, 0x2842, 0x0, 0x0);
        gbc.writeMem(0x158a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x563a, gbc.sp());
        EXPECT(0x158c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 002E
        gbc.setState(0x8167, 0x19b3, 0x3a60, 0x607a, 0x8ee0, 0xba98, 0x1, 0x0);
        gbc.writeMem(0x8167, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x19b3, gbc.sp());
        EXPECT(0x8169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8167));
        EXPECT(0x35, gbc.readMem(0x8168));
        // CB 35 002F
        gbc.setState(0x5386, 0xa750, 0xb270, 0xf320, 0x9c4e, 0xc64, 0x1, 0x1);
        gbc.writeMem(0x5386, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0x5388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0030
        gbc.setState(0xe79b, 0xf4af, 0xb5d0, 0xee29, 0xe317, 0x1119, 0x1, 0x1);
        gbc.writeMem(0xe79b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf4af, gbc.sp());
        EXPECT(0xe79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79b));
        EXPECT(0x35, gbc.readMem(0xe79c));
        // CB 35 0031
        gbc.setState(0x4337, 0x722a, 0x94c0, 0x41e9, 0x1cdc, 0x6af5, 0x1, 0x0);
        gbc.writeMem(0x4337, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x722a, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0032
        gbc.setState(0x9228, 0x4da9, 0xfe20, 0xb21e, 0x6ea2, 0xcd16, 0x0, 0x0);
        gbc.writeMem(0x9228, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0x922a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9228));
        EXPECT(0x35, gbc.readMem(0x9229));
        // CB 35 0033
        gbc.setState(0x24e3, 0x2e87, 0x9ee0, 0x7ff9, 0x40cb, 0xc75c, 0x1, 0x1);
        gbc.writeMem(0x24e3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2e87, gbc.sp());
        EXPECT(0x24e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0034
        gbc.setState(0xe360, 0xf88c, 0x8490, 0x44a4, 0x5eb5, 0x35fd, 0x0, 0x1);
        gbc.writeMem(0xe360, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf88c, gbc.sp());
        EXPECT(0xe362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe360));
        EXPECT(0x35, gbc.readMem(0xe361));
        // CB 35 0035
        gbc.setState(0xe19d, 0x372e, 0x4c60, 0xf1cb, 0xaf60, 0x3790, 0x0, 0x1);
        gbc.writeMem(0xe19d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0xe19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19d));
        EXPECT(0x35, gbc.readMem(0xe19e));
        // CB 35 0036
        gbc.setState(0x717e, 0xe569, 0x9910, 0x1955, 0xd0b1, 0xb66e, 0x0, 0x0);
        gbc.writeMem(0x717e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe569, gbc.sp());
        EXPECT(0x7180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0037
        gbc.setState(0x5d19, 0x1e23, 0x1fc0, 0x39df, 0xb84d, 0x2b97, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0038
        gbc.setState(0x17ab, 0x747e, 0x77d0, 0x7e38, 0xab30, 0x66d8, 0x1, 0x1);
        gbc.writeMem(0x17ab, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0039
        gbc.setState(0x5405, 0xb4f5, 0x20f0, 0x6691, 0xe747, 0x7d6e, 0x1, 0x0);
        gbc.writeMem(0x5405, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb4f5, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 003A
        gbc.setState(0xa2bb, 0xcfd, 0x43a0, 0xa930, 0xfdad, 0x4951, 0x1, 0x1);
        gbc.writeMem(0xa2bb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2bb));
        EXPECT(0x35, gbc.readMem(0xa2bc));
        // CB 35 003B
        gbc.setState(0xb406, 0xcb6d, 0xc480, 0x36a0, 0x72be, 0xae59, 0x0, 0x0);
        gbc.writeMem(0xb406, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcb6d, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb406));
        EXPECT(0x35, gbc.readMem(0xb407));
        // CB 35 003C
        gbc.setState(0x518d, 0x7dd6, 0x6d60, 0xa522, 0x9136, 0xf58f, 0x1, 0x0);
        gbc.writeMem(0x518d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7dd6, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 003D
        gbc.setState(0x8d4b, 0xa9e8, 0xf730, 0x9378, 0x8535, 0x116b, 0x1, 0x1);
        gbc.writeMem(0x8d4b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4b));
        EXPECT(0x35, gbc.readMem(0x8d4c));
        // CB 35 003E
        gbc.setState(0x8609, 0xd645, 0x9f40, 0x1742, 0x9d94, 0xacde, 0x0, 0x0);
        gbc.writeMem(0x8609, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8609));
        EXPECT(0x35, gbc.readMem(0x860a));
        // CB 35 003F
        gbc.setState(0x31b2, 0x6906, 0x5dc0, 0xa6ff, 0x5d71, 0x9df9, 0x1, 0x0);
        gbc.writeMem(0x31b2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6906, gbc.sp());
        EXPECT(0x31b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0040
        gbc.setState(0x751a, 0xcc06, 0xc5a0, 0x37aa, 0x8ad7, 0x1ad8, 0x1, 0x0);
        gbc.writeMem(0x751a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcc06, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0041
        gbc.setState(0x11c8, 0x1ac4, 0xc330, 0x340f, 0x39ef, 0x8b60, 0x1, 0x1);
        gbc.writeMem(0x11c8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0042
        gbc.setState(0x5fb9, 0x6a44, 0x4430, 0x32fe, 0xa007, 0xb2c6, 0x1, 0x1);
        gbc.writeMem(0x5fb9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6a44, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0043
        gbc.setState(0xfae, 0xed1b, 0x57e0, 0x23cd, 0x2884, 0x7c79, 0x1, 0x1);
        gbc.writeMem(0xfae, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xed1b, gbc.sp());
        EXPECT(0xfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0044
        gbc.setState(0x8a7e, 0xd7c0, 0x94b0, 0x1662, 0x782e, 0x737c, 0x1, 0x1);
        gbc.writeMem(0x8a7e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd7c0, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7e));
        EXPECT(0x35, gbc.readMem(0x8a7f));
        // CB 35 0045
        gbc.setState(0x44c0, 0x364e, 0x6360, 0xbe73, 0x1030, 0x5c11, 0x1, 0x0);
        gbc.writeMem(0x44c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0x44c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0046
        gbc.setState(0x5f4, 0xeb30, 0x8140, 0x41df, 0x8f25, 0xbb75, 0x0, 0x0);
        gbc.writeMem(0x5f4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeb30, gbc.sp());
        EXPECT(0x5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0048
        gbc.setState(0xc304, 0x54e4, 0x4050, 0xc433, 0x1988, 0x1879, 0x0, 0x0);
        gbc.writeMem(0xc304, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x54e4, gbc.sp());
        EXPECT(0xc306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc304));
        EXPECT(0x35, gbc.readMem(0xc305));
        // CB 35 0049
        gbc.setState(0x9ac3, 0x3a6c, 0xab40, 0xf376, 0xd70a, 0x4034, 0x0, 0x0);
        gbc.writeMem(0x9ac3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac3));
        EXPECT(0x35, gbc.readMem(0x9ac4));
        // CB 35 004A
        gbc.setState(0x463f, 0x3d1f, 0xa490, 0xf570, 0x6f59, 0x7daf, 0x0, 0x1);
        gbc.writeMem(0x463f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3d1f, gbc.sp());
        EXPECT(0x4641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 004B
        gbc.setState(0x9423, 0x8dd1, 0x7110, 0x90ae, 0x2787, 0xc524, 0x1, 0x1);
        gbc.writeMem(0x9423, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9423));
        EXPECT(0x35, gbc.readMem(0x9424));
        // CB 35 004C
        gbc.setState(0x981f, 0x13cc, 0x460, 0x6642, 0xad9, 0x8356, 0x0, 0x1);
        gbc.writeMem(0x981f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981f));
        EXPECT(0x35, gbc.readMem(0x9820));
        // CB 35 004D
        gbc.setState(0x2651, 0x7c86, 0xc800, 0x4e37, 0x2e32, 0xeb2d, 0x0, 0x1);
        gbc.writeMem(0x2651, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0x2653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 004E
        gbc.setState(0xa18d, 0xf6a7, 0x3950, 0x611c, 0x1653, 0x6065, 0x1, 0x1);
        gbc.writeMem(0xa18d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf6a7, gbc.sp());
        EXPECT(0xa18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18d));
        EXPECT(0x35, gbc.readMem(0xa18e));
        // CB 35 0051
        gbc.setState(0x5a56, 0xb434, 0x35f0, 0xd7f6, 0x7468, 0x89ba, 0x0, 0x1);
        gbc.writeMem(0x5a56, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0052
        gbc.setState(0x8eca, 0xe1f5, 0xbf0, 0xd682, 0x772b, 0xc9e2, 0x1, 0x1);
        gbc.writeMem(0x8eca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe1f5, gbc.sp());
        EXPECT(0x8ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eca));
        EXPECT(0x35, gbc.readMem(0x8ecb));
        // CB 35 0053
        gbc.setState(0x4a64, 0xf2e0, 0x5920, 0x2ab, 0xb574, 0x28b6, 0x0, 0x1);
        gbc.writeMem(0x4a64, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf2e0, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0054
        gbc.setState(0xc285, 0xc7a2, 0x4400, 0x5e24, 0x4068, 0xc4ef, 0x0, 0x1);
        gbc.writeMem(0xc285, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc7a2, gbc.sp());
        EXPECT(0xc287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc285));
        EXPECT(0x35, gbc.readMem(0xc286));
        // CB 35 0055
        gbc.setState(0xd60d, 0xae51, 0x40e0, 0xccc0, 0xdc95, 0xf0c7, 0x1, 0x1);
        gbc.writeMem(0xd60d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60d));
        EXPECT(0x35, gbc.readMem(0xd60e));
        // CB 35 0056
        gbc.setState(0x6f7c, 0x27c5, 0xe00, 0x1d37, 0x54c8, 0x3f9a, 0x1, 0x1);
        gbc.writeMem(0x6f7c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x6f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0057
        gbc.setState(0x237e, 0xc12a, 0x4c70, 0x130d, 0x5057, 0xcef2, 0x0, 0x1);
        gbc.writeMem(0x237e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0x2380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0058
        gbc.setState(0x60d4, 0xa3b0, 0x7270, 0xef2f, 0xf013, 0x3af8, 0x1, 0x1);
        gbc.writeMem(0x60d4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x60d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0059
        gbc.setState(0x4a6a, 0xb00a, 0x8e60, 0xea20, 0x48c1, 0x4f98, 0x1, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb00a, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 005A
        gbc.setState(0xdd0f, 0x7e7e, 0x3f00, 0x989d, 0x42e8, 0xd6b3, 0x0, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7e7e, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0f));
        EXPECT(0x35, gbc.readMem(0xdd10));
        // CB 35 005B
        gbc.setState(0x19d6, 0xb762, 0x5740, 0x689, 0x843d, 0x883, 0x0, 0x1);
        gbc.writeMem(0x19d6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0x19d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 005C
        gbc.setState(0x17cc, 0x7c92, 0xbb80, 0xab50, 0xbc96, 0x5745, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7c92, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 005D
        gbc.setState(0x41a2, 0x6231, 0xab20, 0xf74, 0x47d6, 0xc8b9, 0x0, 0x1);
        gbc.writeMem(0x41a2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6231, gbc.sp());
        EXPECT(0x41a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 005E
        gbc.setState(0xe147, 0xaaa7, 0x10f0, 0xc583, 0x8e6a, 0xcc64, 0x0, 0x0);
        gbc.writeMem(0xe147, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaaa7, gbc.sp());
        EXPECT(0xe149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe147));
        EXPECT(0x35, gbc.readMem(0xe148));
        // CB 35 005F
        gbc.setState(0xcc24, 0x668e, 0x7ba0, 0x8adb, 0x2c28, 0x9e0f, 0x0, 0x1);
        gbc.writeMem(0xcc24, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0xcc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc24));
        EXPECT(0x35, gbc.readMem(0xcc25));
        // CB 35 0060
        gbc.setState(0xe29, 0xfe64, 0xa560, 0xd5da, 0xbc25, 0x6ad5, 0x0, 0x1);
        gbc.writeMem(0xe29, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe64, gbc.sp());
        EXPECT(0xe2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0061
        gbc.setState(0xe89e, 0xf669, 0xb50, 0x593, 0xcd46, 0xc821, 0x0, 0x0);
        gbc.writeMem(0xe89e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89e));
        EXPECT(0x35, gbc.readMem(0xe89f));
        // CB 35 0062
        gbc.setState(0x82a3, 0x7c23, 0x9b10, 0xc7b3, 0x43d4, 0x96a6, 0x1, 0x0);
        gbc.writeMem(0x82a3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7c23, gbc.sp());
        EXPECT(0x82a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a3));
        EXPECT(0x35, gbc.readMem(0x82a4));
        // CB 35 0063
        gbc.setState(0x117b, 0xb837, 0x7900, 0xad89, 0x8070, 0xbeb2, 0x0, 0x0);
        gbc.writeMem(0x117b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb837, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0064
        gbc.setState(0x16fb, 0xfd71, 0xaa90, 0xbc7a, 0x3eb9, 0x6b64, 0x0, 0x0);
        gbc.writeMem(0x16fb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfd71, gbc.sp());
        EXPECT(0x16fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0065
        gbc.setState(0x3400, 0x28cb, 0x8cd0, 0xcba8, 0xcc4b, 0xf71f, 0x0, 0x1);
        gbc.writeMem(0x3400, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x28cb, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0066
        gbc.setState(0xd020, 0x8994, 0xd550, 0xc69a, 0x3d9a, 0x27a7, 0x0, 0x0);
        gbc.writeMem(0xd020, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8994, gbc.sp());
        EXPECT(0xd022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd020));
        EXPECT(0x35, gbc.readMem(0xd021));
        // CB 35 0067
        gbc.setState(0x8340, 0x4d79, 0x1e70, 0x5d8e, 0x32a1, 0xfe6b, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8340));
        EXPECT(0x35, gbc.readMem(0x8341));
        // CB 35 0068
        gbc.setState(0x1b79, 0x457c, 0xef30, 0x43d5, 0x38f4, 0x38e8, 0x1, 0x0);
        gbc.writeMem(0x1b79, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0069
        gbc.setState(0xaa37, 0x9cf3, 0xb8b0, 0x3e2d, 0x7145, 0x7849, 0x1, 0x1);
        gbc.writeMem(0xaa37, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0xaa39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa37));
        EXPECT(0x35, gbc.readMem(0xaa38));
        // CB 35 006A
        gbc.setState(0x1e3, 0xe872, 0x9d80, 0x4466, 0x26bf, 0xad4, 0x1, 0x0);
        gbc.writeMem(0x1e3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe872, gbc.sp());
        EXPECT(0x1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 006B
        gbc.setState(0x7b13, 0x3d0, 0x99e0, 0xe92d, 0x35ee, 0xe441, 0x0, 0x0);
        gbc.writeMem(0x7b13, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 006C
        gbc.setState(0x7b9, 0xd4ad, 0x8100, 0xe5c0, 0x96b4, 0x2f2d, 0x1, 0x0);
        gbc.writeMem(0x7b9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd4ad, gbc.sp());
        EXPECT(0x7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 006D
        gbc.setState(0xb4d4, 0x547c, 0x1030, 0x3b52, 0x2a0e, 0x3c66, 0x0, 0x1);
        gbc.writeMem(0xb4d4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x547c, gbc.sp());
        EXPECT(0xb4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d4));
        EXPECT(0x35, gbc.readMem(0xb4d5));
        // CB 35 006E
        gbc.setState(0x43fd, 0xb13e, 0x7270, 0x293a, 0xb48c, 0xfca3, 0x1, 0x0);
        gbc.writeMem(0x43fd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0x43ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 006F
        gbc.setState(0x89e5, 0x2b33, 0xef30, 0x9969, 0xf397, 0x4c00, 0x1, 0x0);
        gbc.writeMem(0x89e5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0x89e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e5));
        EXPECT(0x35, gbc.readMem(0x89e6));
        // CB 35 0070
        gbc.setState(0xa40a, 0x1108, 0x6ff0, 0xb32c, 0x1488, 0x4734, 0x1, 0x0);
        gbc.writeMem(0xa40a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1108, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40a));
        EXPECT(0x35, gbc.readMem(0xa40b));
        // CB 35 0071
        gbc.setState(0xd42d, 0xa3c2, 0x4060, 0xefba, 0xea51, 0x15d9, 0x0, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0x35, gbc.readMem(0xd42e));
        // CB 35 0072
        gbc.setState(0xa80a, 0xf273, 0x38b0, 0x7b1d, 0x92f8, 0xb874, 0x1, 0x1);
        gbc.writeMem(0xa80a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf273, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x35, gbc.readMem(0xa80b));
        // CB 35 0073
        gbc.setState(0x876b, 0xac84, 0x9640, 0xc68e, 0x6278, 0x66a7, 0x0, 0x1);
        gbc.writeMem(0x876b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x876d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876b));
        EXPECT(0x35, gbc.readMem(0x876c));
        // CB 35 0074
        gbc.setState(0xdf48, 0x44bf, 0x6920, 0x607, 0x3fa5, 0x9afa, 0x1, 0x1);
        gbc.writeMem(0xdf48, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf48));
        EXPECT(0x35, gbc.readMem(0xdf49));
        // CB 35 0075
        gbc.setState(0x871a, 0x7410, 0xfd00, 0x2c5d, 0x8e7f, 0x9069, 0x0, 0x1);
        gbc.writeMem(0x871a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7410, gbc.sp());
        EXPECT(0x871c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871a));
        EXPECT(0x35, gbc.readMem(0x871b));
        // CB 35 0076
        gbc.setState(0xdb1d, 0xa36, 0xf8d0, 0xd72b, 0x4862, 0x1b1f, 0x0, 0x0);
        gbc.writeMem(0xdb1d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1d));
        EXPECT(0x35, gbc.readMem(0xdb1e));
        // CB 35 0077
        gbc.setState(0x8e4c, 0xf2d0, 0xddb0, 0xe04d, 0x3cad, 0x8b33, 0x0, 0x0);
        gbc.writeMem(0x8e4c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf2d0, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4c));
        EXPECT(0x35, gbc.readMem(0x8e4d));
        // CB 35 0078
        gbc.setState(0x733a, 0x5390, 0xc340, 0xf6cf, 0x8bec, 0xc374, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0079
        gbc.setState(0x2c2, 0xbb9f, 0x930, 0xcfb6, 0x67ad, 0x20, 0x0, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb9f, gbc.sp());
        EXPECT(0x2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 007A
        gbc.setState(0xc97d, 0x79, 0x7c00, 0x58b, 0xd96a, 0xc00, 0x0, 0x1);
        gbc.writeMem(0xc97d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x79, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97d));
        EXPECT(0x35, gbc.readMem(0xc97e));
        // CB 35 007B
        gbc.setState(0x448a, 0x2aa7, 0x3d70, 0x6048, 0x16dd, 0xdb69, 0x0, 0x1);
        gbc.writeMem(0x448a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0x448c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 007C
        gbc.setState(0x2cdb, 0x4405, 0x7bb0, 0xa71b, 0x91ac, 0x3e3b, 0x1, 0x0);
        gbc.writeMem(0x2cdb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4405, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 007D
        gbc.setState(0x346c, 0x7421, 0xb020, 0xf297, 0x8cb1, 0x1bf8, 0x0, 0x0);
        gbc.writeMem(0x346c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7421, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 007F
        gbc.setState(0x134, 0xe987, 0x7f70, 0x6310, 0x2d3c, 0x848, 0x1, 0x1);
        gbc.writeMem(0x134, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe987, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0080
        gbc.setState(0x3f3b, 0x4609, 0xa500, 0xf46e, 0xdea5, 0x22d8, 0x1, 0x0);
        gbc.writeMem(0x3f3b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4609, gbc.sp());
        EXPECT(0x3f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0082
        gbc.setState(0x5a4d, 0x6789, 0x4280, 0x5ef, 0xee28, 0xed1, 0x1, 0x1);
        gbc.writeMem(0x5a4d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6789, gbc.sp());
        EXPECT(0x5a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0083
        gbc.setState(0xca4, 0xba39, 0x4580, 0xfd19, 0x478e, 0xa661, 0x0, 0x1);
        gbc.writeMem(0xca4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0084
        gbc.setState(0x5a8b, 0x315d, 0xdb20, 0xd2bf, 0xac46, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x5a8b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x315d, gbc.sp());
        EXPECT(0x5a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0085
        gbc.setState(0x10fd, 0xb89b, 0xdc40, 0x8b7c, 0x4fbb, 0x60bb, 0x0, 0x1);
        gbc.writeMem(0x10fd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb89b, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0087
        gbc.setState(0x9dbf, 0xd52b, 0x3680, 0xf7d2, 0xbffd, 0x8285, 0x1, 0x0);
        gbc.writeMem(0x9dbf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd52b, gbc.sp());
        EXPECT(0x9dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbf));
        EXPECT(0x35, gbc.readMem(0x9dc0));
        // CB 35 0088
        gbc.setState(0x8371, 0xd87d, 0x5580, 0x31ed, 0x48a4, 0x122e, 0x0, 0x0);
        gbc.writeMem(0x8371, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd87d, gbc.sp());
        EXPECT(0x8373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8371));
        EXPECT(0x35, gbc.readMem(0x8372));
        // CB 35 0089
        gbc.setState(0x74b7, 0xc237, 0x5e00, 0xa1ec, 0x78a6, 0x58e8, 0x0, 0x1);
        gbc.writeMem(0x74b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0x74b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 008A
        gbc.setState(0xe59c, 0xfb6, 0x4820, 0xdb7f, 0xc570, 0x8b5d, 0x0, 0x0);
        gbc.writeMem(0xe59c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59c));
        EXPECT(0x35, gbc.readMem(0xe59d));
        // CB 35 008B
        gbc.setState(0x9e06, 0x428c, 0xba40, 0xf624, 0xfe06, 0xef23, 0x1, 0x0);
        gbc.writeMem(0x9e06, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x428c, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e06));
        EXPECT(0x35, gbc.readMem(0x9e07));
        // CB 35 008C
        gbc.setState(0x1019, 0x408b, 0xfd80, 0xe76, 0xa59e, 0xb981, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 008D
        gbc.setState(0xc8d, 0x29c, 0xe040, 0xc245, 0x466f, 0x582, 0x1, 0x0);
        gbc.writeMem(0xc8d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 008E
        gbc.setState(0x8185, 0x7f46, 0x8000, 0x89bd, 0xe3e9, 0x837f, 0x1, 0x0);
        gbc.writeMem(0x8185, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8185));
        EXPECT(0x35, gbc.readMem(0x8186));
        // CB 35 0090
        gbc.setState(0xd58, 0xa69b, 0xaa10, 0x7c, 0x9f36, 0xcd2b, 0x1, 0x1);
        gbc.writeMem(0xd58, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa69b, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0091
        gbc.setState(0xc4b0, 0x8243, 0x8ed0, 0x1bda, 0x296a, 0x8199, 0x1, 0x0);
        gbc.writeMem(0xc4b0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8243, gbc.sp());
        EXPECT(0xc4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b0));
        EXPECT(0x35, gbc.readMem(0xc4b1));
        // CB 35 0092
        gbc.setState(0xaeea, 0x3917, 0x8ad0, 0x6e7, 0xaee0, 0x18ad, 0x0, 0x0);
        gbc.writeMem(0xaeea, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0xaeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeea));
        EXPECT(0x35, gbc.readMem(0xaeeb));
        // CB 35 0093
        gbc.setState(0x7bd9, 0xe07b, 0x17c0, 0xc5e7, 0x9d2a, 0x6b47, 0x1, 0x1);
        gbc.writeMem(0x7bd9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe07b, gbc.sp());
        EXPECT(0x7bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0094
        gbc.setState(0x9e04, 0xc133, 0x6600, 0xec4d, 0xe76f, 0x5482, 0x0, 0x0);
        gbc.writeMem(0x9e04, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc133, gbc.sp());
        EXPECT(0x9e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e04));
        EXPECT(0x35, gbc.readMem(0x9e05));
        // CB 35 0095
        gbc.setState(0x183c, 0xa6b9, 0x8510, 0xe05c, 0x1707, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0x183c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa6b9, gbc.sp());
        EXPECT(0x183e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0096
        gbc.setState(0xdaea, 0x8f71, 0x8270, 0x5f77, 0x7121, 0x7a72, 0x1, 0x0);
        gbc.writeMem(0xdaea, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8f71, gbc.sp());
        EXPECT(0xdaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaea));
        EXPECT(0x35, gbc.readMem(0xdaeb));
        // CB 35 0097
        gbc.setState(0x61ff, 0x82e5, 0x36b0, 0x196f, 0xb10d, 0xf330, 0x0, 0x0);
        gbc.writeMem(0x61ff, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0x6201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0098
        gbc.setState(0x4f55, 0x70f, 0x8430, 0x923e, 0x3cf2, 0xc06, 0x1, 0x0);
        gbc.writeMem(0x4f55, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70f, gbc.sp());
        EXPECT(0x4f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0099
        gbc.setState(0xae7, 0x7979, 0xfef0, 0x8454, 0xd175, 0xfb67, 0x1, 0x0);
        gbc.writeMem(0xae7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 009A
        gbc.setState(0x134d, 0x90c9, 0xf6c0, 0xc726, 0xf688, 0x67b9, 0x0, 0x1);
        gbc.writeMem(0x134d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x90c9, gbc.sp());
        EXPECT(0x134f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 009B
        gbc.setState(0x95df, 0xa0d, 0xd550, 0x5ed3, 0x9825, 0x8c17, 0x1, 0x0);
        gbc.writeMem(0x95df, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0x95e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95df));
        EXPECT(0x35, gbc.readMem(0x95e0));
        // CB 35 009C
        gbc.setState(0x32c5, 0x7047, 0xa540, 0x2cf9, 0xbb3a, 0x8b37, 0x0, 0x1);
        gbc.writeMem(0x32c5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7047, gbc.sp());
        EXPECT(0x32c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 009D
        gbc.setState(0x77b1, 0x92a0, 0xab0, 0xe762, 0x6e08, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0x77b1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x92a0, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 009E
        gbc.setState(0x4f33, 0x9a1, 0xbc10, 0xd284, 0x2f49, 0x371e, 0x1, 0x0);
        gbc.writeMem(0x4f33, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9a1, gbc.sp());
        EXPECT(0x4f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 009F
        gbc.setState(0x1b27, 0x8e47, 0xae80, 0x3733, 0xfde0, 0x9c69, 0x1, 0x1);
        gbc.writeMem(0x1b27, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00A0
        gbc.setState(0xbab3, 0x41bb, 0xa470, 0xce79, 0x9b05, 0x66dc, 0x1, 0x1);
        gbc.writeMem(0xbab3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x41bb, gbc.sp());
        EXPECT(0xbab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab3));
        EXPECT(0x35, gbc.readMem(0xbab4));
        // CB 35 00A2
        gbc.setState(0xdd34, 0xba97, 0xce00, 0x91df, 0x7443, 0x21e8, 0x1, 0x1);
        gbc.writeMem(0xdd34, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0xdd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd34));
        EXPECT(0x35, gbc.readMem(0xdd35));
        // CB 35 00A3
        gbc.setState(0x2bc6, 0x743c, 0xdfa0, 0x416e, 0x81ad, 0xc6b3, 0x0, 0x0);
        gbc.writeMem(0x2bc6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x743c, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00A5
        gbc.setState(0x27b0, 0xc757, 0x5210, 0xe75d, 0xb429, 0x1a3f, 0x1, 0x0);
        gbc.writeMem(0x27b0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00A7
        gbc.setState(0xad2c, 0x7e43, 0xc3d0, 0x8c6, 0xbc8d, 0x4982, 0x1, 0x1);
        gbc.writeMem(0xad2c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7e43, gbc.sp());
        EXPECT(0xad2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2c));
        EXPECT(0x35, gbc.readMem(0xad2d));
        // CB 35 00A8
        gbc.setState(0x9925, 0x2a72, 0x59d0, 0xd6ce, 0xe23e, 0x5a27, 0x0, 0x0);
        gbc.writeMem(0x9925, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9925));
        EXPECT(0x35, gbc.readMem(0x9926));
        // CB 35 00A9
        gbc.setState(0xd037, 0x1039, 0x4f00, 0x416a, 0xc951, 0x553d, 0x1, 0x0);
        gbc.writeMem(0xd037, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0xd039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd037));
        EXPECT(0x35, gbc.readMem(0xd038));
        // CB 35 00AA
        gbc.setState(0xd285, 0x9461, 0x67d0, 0x1083, 0x30ab, 0x2b29, 0x0, 0x1);
        gbc.writeMem(0xd285, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0xd287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd285));
        EXPECT(0x35, gbc.readMem(0xd286));
        // CB 35 00AB
        gbc.setState(0x5786, 0x82e2, 0xf500, 0x8a2, 0x4a10, 0xda6e, 0x0, 0x0);
        gbc.writeMem(0x5786, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x82e2, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00AC
        gbc.setState(0x238d, 0xdc4f, 0x71b0, 0xbac8, 0x98ce, 0x61a, 0x1, 0x0);
        gbc.writeMem(0x238d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00AD
        gbc.setState(0xe88f, 0x6e15, 0x3b50, 0x4edf, 0xc4c6, 0xf23f, 0x0, 0x1);
        gbc.writeMem(0xe88f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6e15, gbc.sp());
        EXPECT(0xe891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88f));
        EXPECT(0x35, gbc.readMem(0xe890));
        // CB 35 00AE
        gbc.setState(0xd51f, 0x1c1a, 0xbc00, 0xb9a, 0xe15c, 0xf505, 0x1, 0x0);
        gbc.writeMem(0xd51f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51f));
        EXPECT(0x35, gbc.readMem(0xd520));
        // CB 35 00AF
        gbc.setState(0x65ce, 0xbfc5, 0x6a70, 0x2dd7, 0x1a1d, 0x6577, 0x1, 0x0);
        gbc.writeMem(0x65ce, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B0
        gbc.setState(0x31fa, 0x43e, 0xefe0, 0x7ec9, 0x2550, 0x289e, 0x0, 0x0);
        gbc.writeMem(0x31fa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B1
        gbc.setState(0xe438, 0xc4bb, 0xd310, 0xa16, 0x489, 0x1e8d, 0x1, 0x1);
        gbc.writeMem(0xe438, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc4bb, gbc.sp());
        EXPECT(0xe43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe438));
        EXPECT(0x35, gbc.readMem(0xe439));
        // CB 35 00B2
        gbc.setState(0x505c, 0x373, 0x9920, 0xab58, 0xe26f, 0xeab4, 0x0, 0x0);
        gbc.writeMem(0x505c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x505e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B3
        gbc.setState(0x3a96, 0xc591, 0xa680, 0x14be, 0x4585, 0x2512, 0x1, 0x0);
        gbc.writeMem(0x3a96, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x3a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B5
        gbc.setState(0x9e4d, 0x29f3, 0x1c30, 0x7f19, 0x7488, 0x6c8b, 0x0, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x29f3, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0x35, gbc.readMem(0x9e4e));
        // CB 35 00B6
        gbc.setState(0xcf4d, 0xbabb, 0x9200, 0x362f, 0xd99b, 0xf234, 0x0, 0x0);
        gbc.writeMem(0xcf4d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbabb, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4d));
        EXPECT(0x35, gbc.readMem(0xcf4e));
        // CB 35 00B7
        gbc.setState(0x657, 0x1299, 0xa830, 0xae8e, 0x2453, 0x56e8, 0x1, 0x0);
        gbc.writeMem(0x657, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1299, gbc.sp());
        EXPECT(0x659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B8
        gbc.setState(0x3a3d, 0x9cbe, 0x29b0, 0xcb6b, 0x40e7, 0x4b44, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9cbe, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00B9
        gbc.setState(0x5371, 0xa4ec, 0xd230, 0xd8e9, 0x5795, 0x735d, 0x1, 0x0);
        gbc.writeMem(0x5371, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00BB
        gbc.setState(0x13c3, 0x4d9c, 0x240, 0x834d, 0x5b18, 0x5d2a, 0x0, 0x0);
        gbc.writeMem(0x13c3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00BC
        gbc.setState(0x72a, 0xd596, 0xa60, 0xad85, 0xd296, 0x1abe, 0x0, 0x0);
        gbc.writeMem(0x72a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00BD
        gbc.setState(0xaef9, 0xf708, 0xcef0, 0x8c03, 0x30e1, 0xfdc8, 0x0, 0x1);
        gbc.writeMem(0xaef9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf708, gbc.sp());
        EXPECT(0xaefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef9));
        EXPECT(0x35, gbc.readMem(0xaefa));
        // CB 35 00BE
        gbc.setState(0x6622, 0xdab4, 0xc140, 0xb4cf, 0x7776, 0x2df7, 0x0, 0x1);
        gbc.writeMem(0x6622, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0x6624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00BF
        gbc.setState(0xc329, 0x717c, 0x1c40, 0xfdc8, 0x7092, 0x47fd, 0x1, 0x0);
        gbc.writeMem(0xc329, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0xc32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc329));
        EXPECT(0x35, gbc.readMem(0xc32a));
        // CB 35 00C0
        gbc.setState(0x346b, 0x7c4d, 0x2290, 0x854, 0xc01d, 0xff34, 0x1, 0x1);
        gbc.writeMem(0x346b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7c4d, gbc.sp());
        EXPECT(0x346d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00C1
        gbc.setState(0x7df0, 0x29c5, 0x9af0, 0xec7, 0xd9a8, 0x6bfe, 0x1, 0x1);
        gbc.writeMem(0x7df0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x29c5, gbc.sp());
        EXPECT(0x7df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00C2
        gbc.setState(0x427e, 0x4757, 0x3140, 0xe857, 0x580d, 0xca6a, 0x1, 0x1);
        gbc.writeMem(0x427e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4757, gbc.sp());
        EXPECT(0x4280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00C3
        gbc.setState(0xc41a, 0xab48, 0xc150, 0x88a1, 0xffd, 0xb6b3, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0x35, gbc.readMem(0xc41b));
        // CB 35 00C4
        gbc.setState(0xdcc0, 0xb9a7, 0x46b0, 0xba51, 0x5e7f, 0x9e88, 0x1, 0x1);
        gbc.writeMem(0xdcc0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0xdcc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc0));
        EXPECT(0x35, gbc.readMem(0xdcc1));
        // CB 35 00C6
        gbc.setState(0x4a7d, 0xb63c, 0x8ac0, 0x15ae, 0x7fb3, 0x3b65, 0x1, 0x0);
        gbc.writeMem(0x4a7d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00C7
        gbc.setState(0x7c63, 0xb599, 0x85c0, 0x242f, 0xe5b0, 0xda2d, 0x0, 0x1);
        gbc.writeMem(0x7c63, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00C8
        gbc.setState(0xe7d1, 0xde7f, 0xa910, 0xf9fa, 0xcd7c, 0x87ab, 0x0, 0x0);
        gbc.writeMem(0xe7d1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d1));
        EXPECT(0x35, gbc.readMem(0xe7d2));
        // CB 35 00C9
        gbc.setState(0x53b4, 0x881b, 0x3690, 0x8a6, 0xd458, 0x5b84, 0x0, 0x0);
        gbc.writeMem(0x53b4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00CA
        gbc.setState(0x95, 0x2325, 0x3910, 0x6ba8, 0x20f0, 0xc446, 0x0, 0x1);
        gbc.writeMem(0x95, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00CB
        gbc.setState(0x6317, 0xb9f0, 0xbc60, 0x32b8, 0x7e63, 0xd1ce, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb9f0, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00CC
        gbc.setState(0xdb96, 0x4a5c, 0xaaa0, 0xb706, 0xa729, 0x8035, 0x1, 0x0);
        gbc.writeMem(0xdb96, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0xdb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb96));
        EXPECT(0x35, gbc.readMem(0xdb97));
        // CB 35 00CD
        gbc.setState(0x975b, 0x1699, 0x14b0, 0x84d, 0x3c81, 0xdc, 0x1, 0x0);
        gbc.writeMem(0x975b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x975d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975b));
        EXPECT(0x35, gbc.readMem(0x975c));
        // CB 35 00CE
        gbc.setState(0xeef, 0xca94, 0xe6e0, 0x47f, 0x8615, 0xd34d, 0x0, 0x1);
        gbc.writeMem(0xeef, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0xef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00CF
        gbc.setState(0xd0f4, 0xbc40, 0xae60, 0xac8c, 0xb007, 0x4a31, 0x1, 0x0);
        gbc.writeMem(0xd0f4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbc40, gbc.sp());
        EXPECT(0xd0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f4));
        EXPECT(0x35, gbc.readMem(0xd0f5));
        // CB 35 00D0
        gbc.setState(0x3e22, 0x5a8e, 0x1510, 0x57ca, 0x48ff, 0x5df8, 0x0, 0x0);
        gbc.writeMem(0x3e22, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D1
        gbc.setState(0xd85c, 0xc8d, 0x5470, 0x11d6, 0x409a, 0xf504, 0x1, 0x1);
        gbc.writeMem(0xd85c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc8d, gbc.sp());
        EXPECT(0xd85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85c));
        EXPECT(0x35, gbc.readMem(0xd85d));
        // CB 35 00D2
        gbc.setState(0x2f2f, 0x1dd3, 0xd920, 0xdfdd, 0x280e, 0xe3f3, 0x0, 0x0);
        gbc.writeMem(0x2f2f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1dd3, gbc.sp());
        EXPECT(0x2f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D3
        gbc.setState(0x595, 0x7c9a, 0x1ae0, 0x74c7, 0x664d, 0xef07, 0x1, 0x0);
        gbc.writeMem(0x595, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7c9a, gbc.sp());
        EXPECT(0x597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D4
        gbc.setState(0x2336, 0xe94b, 0x1550, 0x35d6, 0x8d2d, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D5
        gbc.setState(0x45cc, 0x942d, 0x14b0, 0xfd60, 0xe973, 0xec22, 0x0, 0x1);
        gbc.writeMem(0x45cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x942d, gbc.sp());
        EXPECT(0x45ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D6
        gbc.setState(0xa2d3, 0xef50, 0x9110, 0x2eb9, 0xcd55, 0x221, 0x1, 0x0);
        gbc.writeMem(0xa2d3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xef50, gbc.sp());
        EXPECT(0xa2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d3));
        EXPECT(0x35, gbc.readMem(0xa2d4));
        // CB 35 00D7
        gbc.setState(0x1272, 0x238d, 0x4cf0, 0xeed4, 0x7ae1, 0x7819, 0x0, 0x1);
        gbc.writeMem(0x1272, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x238d, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D8
        gbc.setState(0x34d3, 0x4d25, 0x3750, 0x30d2, 0x49b8, 0x1466, 0x1, 0x0);
        gbc.writeMem(0x34d3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x34d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00D9
        gbc.setState(0x7a42, 0x1ddb, 0xd520, 0xf9fe, 0xca3b, 0xe8f2, 0x1, 0x1);
        gbc.writeMem(0x7a42, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ddb, gbc.sp());
        EXPECT(0x7a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00DA
        gbc.setState(0x6314, 0xd7f5, 0x3730, 0x9079, 0x7d63, 0xecbd, 0x1, 0x1);
        gbc.writeMem(0x6314, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd7f5, gbc.sp());
        EXPECT(0x6316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00DB
        gbc.setState(0xadd5, 0x2b84, 0x8e70, 0x2812, 0x560, 0xd7eb, 0x0, 0x1);
        gbc.writeMem(0xadd5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2b84, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd5));
        EXPECT(0x35, gbc.readMem(0xadd6));
        // CB 35 00DC
        gbc.setState(0x4218, 0xbcff, 0x90b0, 0x2df8, 0x8d8d, 0x81a2, 0x0, 0x0);
        gbc.writeMem(0x4218, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbcff, gbc.sp());
        EXPECT(0x421a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00DD
        gbc.setState(0x4ec0, 0xe662, 0x9710, 0x4994, 0xaa1, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0x4ec0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe662, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00DE
        gbc.setState(0x8f8e, 0xf65b, 0x73f0, 0x7655, 0xfbe1, 0x2dea, 0x0, 0x1);
        gbc.writeMem(0x8f8e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf65b, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8e));
        EXPECT(0x35, gbc.readMem(0x8f8f));
        // CB 35 00DF
        gbc.setState(0xc75c, 0xe70, 0xd010, 0x53fe, 0xfc0f, 0x4d26, 0x0, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75c));
        EXPECT(0x35, gbc.readMem(0xc75d));
        // CB 35 00E0
        gbc.setState(0x14e2, 0x972c, 0x650, 0x57e3, 0xd6c1, 0x3c3e, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0x14e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E1
        gbc.setState(0xa78e, 0x6109, 0x7450, 0x5037, 0x26d3, 0x11b7, 0x0, 0x1);
        gbc.writeMem(0xa78e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0xa790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78e));
        EXPECT(0x35, gbc.readMem(0xa78f));
        // CB 35 00E2
        gbc.setState(0xb822, 0x36d7, 0xd940, 0x231c, 0x6e71, 0xc3ee, 0x0, 0x0);
        gbc.writeMem(0xb822, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb822));
        EXPECT(0x35, gbc.readMem(0xb823));
        // CB 35 00E3
        gbc.setState(0x8e3, 0x3b76, 0x60c0, 0x7c4a, 0xe2ca, 0x92d3, 0x0, 0x0);
        gbc.writeMem(0x8e3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3b76, gbc.sp());
        EXPECT(0x8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E4
        gbc.setState(0x3097, 0xa242, 0xdc40, 0x5d08, 0xe3bc, 0x157f, 0x1, 0x1);
        gbc.writeMem(0x3097, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x3099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E5
        gbc.setState(0x2466, 0xf718, 0xe2b0, 0xf722, 0xc6a9, 0x82d2, 0x1, 0x1);
        gbc.writeMem(0x2466, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf718, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E6
        gbc.setState(0x2f09, 0x251e, 0x390, 0x3394, 0xb4d9, 0x2d9b, 0x1, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x251e, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E7
        gbc.setState(0x8d87, 0x24a0, 0x98f0, 0x3ee5, 0xd223, 0x3248, 0x0, 0x0);
        gbc.writeMem(0x8d87, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d87));
        EXPECT(0x35, gbc.readMem(0x8d88));
        // CB 35 00E8
        gbc.setState(0x1a97, 0x724b, 0x1030, 0x2b0, 0x5d0d, 0xb646, 0x1, 0x0);
        gbc.writeMem(0x1a97, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0x1a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00E9
        gbc.setState(0x61b0, 0x728d, 0xa950, 0xcef2, 0xb584, 0x8aba, 0x1, 0x0);
        gbc.writeMem(0x61b0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x728d, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00EA
        gbc.setState(0xe0e, 0xa747, 0x6090, 0x4f69, 0x9cec, 0xb4fe, 0x1, 0x0);
        gbc.writeMem(0xe0e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xe10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00EB
        gbc.setState(0x99cc, 0x6d2e, 0x6170, 0xb38b, 0x6b64, 0x587b, 0x0, 0x1);
        gbc.writeMem(0x99cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0x99ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cc));
        EXPECT(0x35, gbc.readMem(0x99cd));
        // CB 35 00EC
        gbc.setState(0x257a, 0xaded, 0xd720, 0xfd0b, 0x77fb, 0x245f, 0x1, 0x1);
        gbc.writeMem(0x257a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaded, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00ED
        gbc.setState(0xb308, 0x9463, 0x3a00, 0x985b, 0xc6ea, 0x9b0a, 0x0, 0x0);
        gbc.writeMem(0xb308, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9463, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb308));
        EXPECT(0x35, gbc.readMem(0xb309));
        // CB 35 00EE
        gbc.setState(0xcb6c, 0xa7a6, 0x1b0, 0x6369, 0x4163, 0xd223, 0x0, 0x0);
        gbc.writeMem(0xcb6c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa7a6, gbc.sp());
        EXPECT(0xcb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6c));
        EXPECT(0x35, gbc.readMem(0xcb6d));
        // CB 35 00EF
        gbc.setState(0x629, 0x769, 0xbcd0, 0x3002, 0x3659, 0xffe, 0x1, 0x1);
        gbc.writeMem(0x629, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x769, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F0
        gbc.setState(0x12ee, 0xe58c, 0x7db0, 0x76ca, 0x10b4, 0xc3a6, 0x0, 0x1);
        gbc.writeMem(0x12ee, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe58c, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F1
        gbc.setState(0xde57, 0x2d96, 0x3250, 0x34e1, 0x740d, 0xf79c, 0x1, 0x1);
        gbc.writeMem(0xde57, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde57));
        EXPECT(0x35, gbc.readMem(0xde58));
        // CB 35 00F2
        gbc.setState(0x2c, 0x7342, 0x610, 0xb188, 0xfbcd, 0x7942, 0x1, 0x0);
        gbc.writeMem(0x2c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7342, gbc.sp());
        EXPECT(0x2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F3
        gbc.setState(0x553f, 0x2c55, 0x15d0, 0x8bbc, 0x2989, 0x68bf, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F4
        gbc.setState(0x6c1, 0xdfc5, 0x56d0, 0xc7d0, 0x3b7e, 0xf54, 0x0, 0x0);
        gbc.writeMem(0x6c1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdfc5, gbc.sp());
        EXPECT(0x6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F5
        gbc.setState(0x8acd, 0xe55, 0x35b0, 0xd20b, 0xd035, 0xbf9f, 0x0, 0x1);
        gbc.writeMem(0x8acd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe55, gbc.sp());
        EXPECT(0x8acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acd));
        EXPECT(0x35, gbc.readMem(0x8ace));
        // CB 35 00F6
        gbc.setState(0x5f1d, 0xd41d, 0x35f0, 0x2dbb, 0x6cc2, 0xcebf, 0x0, 0x1);
        gbc.writeMem(0x5f1d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd41d, gbc.sp());
        EXPECT(0x5f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F7
        gbc.setState(0xcdd2, 0xdeb2, 0x65c0, 0xd5ee, 0xcd37, 0x9f0e, 0x1, 0x1);
        gbc.writeMem(0xcdd2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdeb2, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd2));
        EXPECT(0x35, gbc.readMem(0xcdd3));
        // CB 35 00F8
        gbc.setState(0x431a, 0x17b5, 0x2160, 0x47e2, 0xeb25, 0x7f20, 0x0, 0x1);
        gbc.writeMem(0x431a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00F9
        gbc.setState(0x3572, 0xf1d7, 0xd080, 0x1b41, 0xc70e, 0x61bf, 0x0, 0x1);
        gbc.writeMem(0x3572, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf1d7, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FA
        gbc.setState(0x28c3, 0x82fd, 0xdf60, 0x167f, 0x3cb1, 0x3406, 0x0, 0x1);
        gbc.writeMem(0x28c3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x82fd, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FB
        gbc.setState(0x1a2e, 0x27f3, 0x3030, 0x4684, 0x823c, 0x5ef5, 0x0, 0x0);
        gbc.writeMem(0x1a2e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27f3, gbc.sp());
        EXPECT(0x1a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FC
        gbc.setState(0x4b26, 0x15bf, 0x8140, 0xcfaf, 0x57a6, 0xa6b1, 0x1, 0x1);
        gbc.writeMem(0x4b26, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FD
        gbc.setState(0x48c8, 0x2b6f, 0xe830, 0xd432, 0xa4c8, 0xe69b, 0x1, 0x1);
        gbc.writeMem(0x48c8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0x48ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FE
        gbc.setState(0x5a21, 0x83ae, 0xc2d0, 0x3ba, 0x4bd2, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x5a21, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x5a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 00FF
        gbc.setState(0xa0d4, 0xbf2f, 0xa280, 0xf375, 0x2ad6, 0xa817, 0x1, 0x1);
        gbc.writeMem(0xa0d4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0xa0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d4));
        EXPECT(0x35, gbc.readMem(0xa0d5));
        // CB 35 0100
        gbc.setState(0x9294, 0xe061, 0xee0, 0x50cd, 0x2a9, 0x9b43, 0x0, 0x1);
        gbc.writeMem(0x9294, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe061, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9294));
        EXPECT(0x35, gbc.readMem(0x9295));
        // CB 35 0101
        gbc.setState(0xac98, 0xa3ec, 0xd5b0, 0xf932, 0x9cda, 0x9435, 0x0, 0x1);
        gbc.writeMem(0xac98, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa3ec, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0x35, gbc.readMem(0xac99));
        // CB 35 0102
        gbc.setState(0x196a, 0x15e8, 0x2050, 0x6b2d, 0xfa8a, 0xecb6, 0x0, 0x0);
        gbc.writeMem(0x196a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x15e8, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0103
        gbc.setState(0xd4fa, 0x6f89, 0xd00, 0xdc1c, 0x4e0, 0x5d29, 0x0, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6f89, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fa));
        EXPECT(0x35, gbc.readMem(0xd4fb));
        // CB 35 0105
        gbc.setState(0x10f4, 0x1ecf, 0xfc50, 0xc912, 0x24e8, 0x2967, 0x1, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0106
        gbc.setState(0x8f12, 0x1bba, 0x2b10, 0xbea9, 0x5293, 0xd05, 0x1, 0x1);
        gbc.writeMem(0x8f12, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bba, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f12));
        EXPECT(0x35, gbc.readMem(0x8f13));
        // CB 35 0107
        gbc.setState(0xa06d, 0x971c, 0xe950, 0x3771, 0xd4e9, 0x1742, 0x0, 0x1);
        gbc.writeMem(0xa06d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06d));
        EXPECT(0x35, gbc.readMem(0xa06e));
        // CB 35 0108
        gbc.setState(0x27b0, 0x57f6, 0x6350, 0xecc7, 0xf74e, 0x64c1, 0x1, 0x0);
        gbc.writeMem(0x27b0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x57f6, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0109
        gbc.setState(0xfa9, 0x988f, 0xc4c0, 0x4a4e, 0x9d11, 0x1490, 0x0, 0x0);
        gbc.writeMem(0xfa9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x988f, gbc.sp());
        EXPECT(0xfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 010A
        gbc.setState(0x45fa, 0x441e, 0xeb60, 0xeaa6, 0x6fe9, 0x53aa, 0x0, 0x1);
        gbc.writeMem(0x45fa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0x45fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 010B
        gbc.setState(0xc1c7, 0x4abe, 0xffe0, 0x115f, 0x70bb, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0xc1c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4abe, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c7));
        EXPECT(0x35, gbc.readMem(0xc1c8));
        // CB 35 010C
        gbc.setState(0x5221, 0x90c0, 0x5890, 0x8b2d, 0x7159, 0xdb68, 0x1, 0x1);
        gbc.writeMem(0x5221, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x5223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 010D
        gbc.setState(0xa0c0, 0xde10, 0x6a20, 0xdc34, 0x9e3c, 0x4122, 0x1, 0x0);
        gbc.writeMem(0xa0c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xde10, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c0));
        EXPECT(0x35, gbc.readMem(0xa0c1));
        // CB 35 010E
        gbc.setState(0x8fb, 0x2e78, 0x4a20, 0x5704, 0x948, 0xf508, 0x0, 0x0);
        gbc.writeMem(0x8fb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2e78, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 010F
        gbc.setState(0xebfa, 0xb471, 0x8b0, 0x1e49, 0x57c1, 0x5ded, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfa));
        EXPECT(0x35, gbc.readMem(0xebfb));
        // CB 35 0110
        gbc.setState(0xe3dc, 0x9c2, 0xcc00, 0x4c36, 0x1c50, 0x56dd, 0x0, 0x0);
        gbc.writeMem(0xe3dc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9c2, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dc));
        EXPECT(0x35, gbc.readMem(0xe3dd));
        // CB 35 0111
        gbc.setState(0xbaa9, 0x61fb, 0x7780, 0x88c1, 0xa9a1, 0xd68c, 0x0, 0x1);
        gbc.writeMem(0xbaa9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa9));
        EXPECT(0x35, gbc.readMem(0xbaaa));
        // CB 35 0112
        gbc.setState(0x377, 0xc184, 0x10, 0x7377, 0x65cf, 0x34d5, 0x0, 0x0);
        gbc.writeMem(0x377, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc184, gbc.sp());
        EXPECT(0x379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0113
        gbc.setState(0x771f, 0x8ca9, 0xb30, 0x12b2, 0x8f2a, 0xb04e, 0x0, 0x1);
        gbc.writeMem(0x771f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8ca9, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0114
        gbc.setState(0x8070, 0x2637, 0x23d0, 0x3c68, 0x123a, 0x6a20, 0x1, 0x1);
        gbc.writeMem(0x8070, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2637, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8070));
        EXPECT(0x35, gbc.readMem(0x8071));
        // CB 35 0115
        gbc.setState(0x71c1, 0x6b32, 0xeeb0, 0xd612, 0xf17, 0x529c, 0x0, 0x0);
        gbc.writeMem(0x71c1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0116
        gbc.setState(0xe6de, 0x5fb0, 0x57e0, 0x8440, 0xa7b, 0xe349, 0x1, 0x1);
        gbc.writeMem(0xe6de, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5fb0, gbc.sp());
        EXPECT(0xe6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6de));
        EXPECT(0x35, gbc.readMem(0xe6df));
        // CB 35 0117
        gbc.setState(0xded, 0x3659, 0x67b0, 0xc468, 0x28bf, 0xa0c9, 0x0, 0x0);
        gbc.writeMem(0xded, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0118
        gbc.setState(0xa14b, 0x6ec7, 0x9110, 0x751f, 0x3903, 0x607a, 0x1, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6ec7, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14b));
        EXPECT(0x35, gbc.readMem(0xa14c));
        // CB 35 0119
        gbc.setState(0xdb61, 0x29a8, 0x590, 0xaf04, 0x51c5, 0x97e0, 0x1, 0x1);
        gbc.writeMem(0xdb61, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x29a8, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0x35, gbc.readMem(0xdb62));
        // CB 35 011A
        gbc.setState(0x7921, 0xab99, 0x3820, 0x2325, 0x8a64, 0x31d4, 0x1, 0x0);
        gbc.writeMem(0x7921, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xab99, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 011B
        gbc.setState(0x82d8, 0x6f4, 0x9dd0, 0x7c0b, 0x5cda, 0x10d2, 0x1, 0x0);
        gbc.writeMem(0x82d8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6f4, gbc.sp());
        EXPECT(0x82da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d8));
        EXPECT(0x35, gbc.readMem(0x82d9));
        // CB 35 011C
        gbc.setState(0x5ec8, 0x3757, 0x3c10, 0xe908, 0x64e0, 0x3660, 0x1, 0x0);
        gbc.writeMem(0x5ec8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3757, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 011D
        gbc.setState(0x6052, 0x10d4, 0x2ce0, 0xf442, 0x285a, 0x2329, 0x1, 0x0);
        gbc.writeMem(0x6052, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0x6054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 011E
        gbc.setState(0xb404, 0xa309, 0x9f10, 0x3fc4, 0x321f, 0xc60d, 0x0, 0x0);
        gbc.writeMem(0xb404, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa309, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb404));
        EXPECT(0x35, gbc.readMem(0xb405));
        // CB 35 011F
        gbc.setState(0x8105, 0x3fe6, 0xfbf0, 0x7cf2, 0xde97, 0x366b, 0x0, 0x1);
        gbc.writeMem(0x8105, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0x8107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8105));
        EXPECT(0x35, gbc.readMem(0x8106));
        // CB 35 0121
        gbc.setState(0x1c4c, 0xe52d, 0xfd00, 0x41ba, 0xcbc7, 0xb815, 0x1, 0x0);
        gbc.writeMem(0x1c4c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0122
        gbc.setState(0xb7cc, 0x24c0, 0x9290, 0xe5da, 0xd044, 0x2e01, 0x0, 0x1);
        gbc.writeMem(0xb7cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x24c0, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cc));
        EXPECT(0x35, gbc.readMem(0xb7cd));
        // CB 35 0124
        gbc.setState(0x3f3d, 0xd545, 0x3470, 0x9c6a, 0x164a, 0xb55, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd545, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0125
        gbc.setState(0xbf6b, 0x85c4, 0x50f0, 0xfd4a, 0xd764, 0xfa5a, 0x0, 0x0);
        gbc.writeMem(0xbf6b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x85c4, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6b));
        EXPECT(0x35, gbc.readMem(0xbf6c));
        // CB 35 0127
        gbc.setState(0xf58, 0xc46a, 0x1db0, 0x9f7f, 0x46d7, 0x23a2, 0x0, 0x0);
        gbc.writeMem(0xf58, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc46a, gbc.sp());
        EXPECT(0xf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0129
        gbc.setState(0xd2c, 0x1a4f, 0xf4a0, 0xfd86, 0x8abc, 0xd7b3, 0x1, 0x0);
        gbc.writeMem(0xd2c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a4f, gbc.sp());
        EXPECT(0xd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 012A
        gbc.setState(0xdd82, 0x370b, 0x4650, 0x4ffd, 0x7c8c, 0x183c, 0x0, 0x0);
        gbc.writeMem(0xdd82, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0xdd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd82));
        EXPECT(0x35, gbc.readMem(0xdd83));
        // CB 35 012B
        gbc.setState(0x8976, 0x6ebf, 0x4280, 0x4d09, 0x2e7d, 0xb26b, 0x1, 0x0);
        gbc.writeMem(0x8976, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6ebf, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8976));
        EXPECT(0x35, gbc.readMem(0x8977));
        // CB 35 012C
        gbc.setState(0x88, 0xe636, 0xb930, 0xcfb0, 0xaa0f, 0x165b, 0x1, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe636, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 012D
        gbc.setState(0x6d9a, 0x75b, 0xbe40, 0x6785, 0x921a, 0x856e, 0x0, 0x0);
        gbc.writeMem(0x6d9a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 012E
        gbc.setState(0x3520, 0xaf75, 0xd980, 0x3d8a, 0x4bb5, 0xfca9, 0x0, 0x0);
        gbc.writeMem(0x3520, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaf75, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 012F
        gbc.setState(0x2fbb, 0xb5e9, 0xceb0, 0xc846, 0x2b94, 0x9b08, 0x0, 0x1);
        gbc.writeMem(0x2fbb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb5e9, gbc.sp());
        EXPECT(0x2fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0130
        gbc.setState(0xc1d1, 0xccd2, 0x6c90, 0x46e9, 0x5f05, 0x3a10, 0x1, 0x0);
        gbc.writeMem(0xc1d1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d1));
        EXPECT(0x35, gbc.readMem(0xc1d2));
        // CB 35 0131
        gbc.setState(0x5059, 0x2572, 0x7a70, 0xd985, 0xcfd2, 0x86, 0x0, 0x0);
        gbc.writeMem(0x5059, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x505b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0132
        gbc.setState(0x9e3e, 0x928, 0x20, 0x64fa, 0x47eb, 0x3e25, 0x1, 0x1);
        gbc.writeMem(0x9e3e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x928, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0x35, gbc.readMem(0x9e3f));
        // CB 35 0133
        gbc.setState(0x55b4, 0x9752, 0x53f0, 0x73c4, 0xf0ce, 0x1bb0, 0x1, 0x1);
        gbc.writeMem(0x55b4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0x55b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0134
        gbc.setState(0x972, 0xc3b0, 0x8e50, 0x9037, 0x1c03, 0xc5d2, 0x1, 0x1);
        gbc.writeMem(0x972, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0x974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0135
        gbc.setState(0x7744, 0x409a, 0x8450, 0x3420, 0x9796, 0xea6f, 0x0, 0x1);
        gbc.writeMem(0x7744, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x409a, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0136
        gbc.setState(0x6a6d, 0x545f, 0xe520, 0x7cc5, 0x1442, 0x8c2e, 0x1, 0x1);
        gbc.writeMem(0x6a6d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0x6a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0137
        gbc.setState(0xb568, 0x5c60, 0x1400, 0x617b, 0xf6b7, 0x21fe, 0x1, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5c60, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0x35, gbc.readMem(0xb569));
        // CB 35 0138
        gbc.setState(0x4ea7, 0xe82f, 0x4dc0, 0x4eee, 0x539d, 0xf69, 0x1, 0x0);
        gbc.writeMem(0x4ea7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0139
        gbc.setState(0xd5bb, 0x81aa, 0x2290, 0xf299, 0xc670, 0xb192, 0x1, 0x0);
        gbc.writeMem(0xd5bb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x81aa, gbc.sp());
        EXPECT(0xd5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5bb));
        EXPECT(0x35, gbc.readMem(0xd5bc));
        // CB 35 013A
        gbc.setState(0xc541, 0xca36, 0xfad0, 0x6be4, 0xd467, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xca36, gbc.sp());
        EXPECT(0xc543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc541));
        EXPECT(0x35, gbc.readMem(0xc542));
        // CB 35 013B
        gbc.setState(0xecc6, 0x1892, 0xe680, 0xdc2, 0xe563, 0x7b14, 0x0, 0x0);
        gbc.writeMem(0xecc6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1892, gbc.sp());
        EXPECT(0xecc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc6));
        EXPECT(0x35, gbc.readMem(0xecc7));
        // CB 35 013C
        gbc.setState(0x1590, 0xa608, 0xd440, 0x6a21, 0xb50a, 0xb97c, 0x1, 0x1);
        gbc.writeMem(0x1590, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0x1592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 013D
        gbc.setState(0x3196, 0xc71d, 0x7370, 0x4803, 0x6e9e, 0x779b, 0x1, 0x1);
        gbc.writeMem(0x3196, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc71d, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 013E
        gbc.setState(0xac34, 0x5741, 0xa020, 0xdc69, 0x915f, 0x61e2, 0x0, 0x0);
        gbc.writeMem(0xac34, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0xac36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac34));
        EXPECT(0x35, gbc.readMem(0xac35));
        // CB 35 013F
        gbc.setState(0xde69, 0xfc84, 0x4210, 0x561c, 0xa7d, 0x845a, 0x1, 0x0);
        gbc.writeMem(0xde69, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0xde6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde69));
        EXPECT(0x35, gbc.readMem(0xde6a));
        // CB 35 0140
        gbc.setState(0xd26, 0x1d21, 0x6f80, 0x778e, 0xe1c9, 0x870d, 0x1, 0x1);
        gbc.writeMem(0xd26, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0141
        gbc.setState(0x95f8, 0xf0fb, 0xe160, 0xacb, 0xf213, 0xa6a8, 0x0, 0x1);
        gbc.writeMem(0x95f8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf0fb, gbc.sp());
        EXPECT(0x95fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f8));
        EXPECT(0x35, gbc.readMem(0x95f9));
        // CB 35 0142
        gbc.setState(0x60fb, 0xcf56, 0xa930, 0x87b8, 0x5266, 0xf88c, 0x1, 0x0);
        gbc.writeMem(0x60fb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcf56, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0143
        gbc.setState(0x3fdd, 0xeb16, 0xa840, 0x73cd, 0x9a81, 0x105d, 0x0, 0x1);
        gbc.writeMem(0x3fdd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeb16, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0144
        gbc.setState(0x97b7, 0xc34a, 0x95f0, 0xce14, 0x382a, 0xde21, 0x1, 0x0);
        gbc.writeMem(0x97b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x97b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b7));
        EXPECT(0x35, gbc.readMem(0x97b8));
        // CB 35 0145
        gbc.setState(0xcc15, 0x269d, 0x7fe0, 0x3c18, 0x90b6, 0xf3ce, 0x1, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x269d, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0x35, gbc.readMem(0xcc16));
        // CB 35 0147
        gbc.setState(0xdb5f, 0x62a3, 0xee70, 0x2a8a, 0x85d4, 0x907d, 0x0, 0x0);
        gbc.writeMem(0xdb5f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x62a3, gbc.sp());
        EXPECT(0xdb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5f));
        EXPECT(0x35, gbc.readMem(0xdb60));
        // CB 35 0148
        gbc.setState(0x17ea, 0xdd49, 0xaca0, 0x1e8a, 0x8bd4, 0x504c, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd49, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0149
        gbc.setState(0x1297, 0x5c58, 0xfce0, 0x3a4a, 0xd173, 0x801f, 0x0, 0x0);
        gbc.writeMem(0x1297, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0x1299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 014A
        gbc.setState(0x52ff, 0xed13, 0x9f00, 0xdf79, 0x7348, 0x74f8, 0x1, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xed13, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 014B
        gbc.setState(0xc980, 0x8d16, 0x6e50, 0x6a0f, 0x2df5, 0x7714, 0x1, 0x0);
        gbc.writeMem(0xc980, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0xc982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc980));
        EXPECT(0x35, gbc.readMem(0xc981));
        // CB 35 014C
        gbc.setState(0xd7f8, 0xa9cf, 0x7970, 0x5927, 0x2df9, 0xb3ea, 0x0, 0x1);
        gbc.writeMem(0xd7f8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa9cf, gbc.sp());
        EXPECT(0xd7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f8));
        EXPECT(0x35, gbc.readMem(0xd7f9));
        // CB 35 014D
        gbc.setState(0x2e07, 0xbe0f, 0xebf0, 0x15cc, 0x5171, 0x55d9, 0x0, 0x0);
        gbc.writeMem(0x2e07, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0x2e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 014F
        gbc.setState(0xde19, 0xf4e2, 0xa010, 0x28c7, 0x6f09, 0x71ad, 0x0, 0x0);
        gbc.writeMem(0xde19, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf4e2, gbc.sp());
        EXPECT(0xde1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde19));
        EXPECT(0x35, gbc.readMem(0xde1a));
        // CB 35 0150
        gbc.setState(0x3941, 0xa09c, 0x5270, 0x96be, 0x8950, 0x21bc, 0x1, 0x0);
        gbc.writeMem(0x3941, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa09c, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0151
        gbc.setState(0x2a17, 0xdc73, 0xc4a0, 0xb7bd, 0x9c1b, 0x8f4e, 0x0, 0x0);
        gbc.writeMem(0x2a17, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0152
        gbc.setState(0x5db8, 0x14b2, 0xbe60, 0x8a88, 0xe3cf, 0x3f2a, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0153
        gbc.setState(0x4cad, 0x3b73, 0xd590, 0x7d2d, 0xb58c, 0xb4a0, 0x0, 0x1);
        gbc.writeMem(0x4cad, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0154
        gbc.setState(0xb2d0, 0x2386, 0xfe60, 0xfa70, 0xc7c4, 0xc8b8, 0x1, 0x0);
        gbc.writeMem(0xb2d0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2386, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d0));
        EXPECT(0x35, gbc.readMem(0xb2d1));
        // CB 35 0155
        gbc.setState(0x63b6, 0xab0b, 0x42c0, 0x8505, 0x269c, 0x3051, 0x1, 0x0);
        gbc.writeMem(0x63b6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0156
        gbc.setState(0x12a5, 0xd540, 0x9cb0, 0xd18c, 0x56de, 0x54fc, 0x1, 0x1);
        gbc.writeMem(0x12a5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd540, gbc.sp());
        EXPECT(0x12a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0157
        gbc.setState(0x9aff, 0xb476, 0x4230, 0xe32a, 0xd0d3, 0x7c66, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb476, gbc.sp());
        EXPECT(0x9b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aff));
        EXPECT(0x35, gbc.readMem(0x9b00));
        // CB 35 0159
        gbc.setState(0xb2cf, 0xfecd, 0xd1f0, 0x43f0, 0x3305, 0xf4c7, 0x1, 0x1);
        gbc.writeMem(0xb2cf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0xb2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cf));
        EXPECT(0x35, gbc.readMem(0xb2d0));
        // CB 35 015A
        gbc.setState(0x2ae8, 0x2634, 0x37b0, 0x7c46, 0x75b9, 0x5cf2, 0x0, 0x0);
        gbc.writeMem(0x2ae8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2634, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 015B
        gbc.setState(0x61be, 0x7166, 0xfd80, 0x4dde, 0xf90f, 0x2f5d, 0x1, 0x0);
        gbc.writeMem(0x61be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7166, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 015D
        gbc.setState(0x822a, 0x72c7, 0x1e40, 0x1ba1, 0xc807, 0x7493, 0x1, 0x0);
        gbc.writeMem(0x822a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x72c7, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822a));
        EXPECT(0x35, gbc.readMem(0x822b));
        // CB 35 015E
        gbc.setState(0x96eb, 0x63ee, 0x780, 0xa67b, 0x37f8, 0xf873, 0x1, 0x0);
        gbc.writeMem(0x96eb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x63ee, gbc.sp());
        EXPECT(0x96ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96eb));
        EXPECT(0x35, gbc.readMem(0x96ec));
        // CB 35 015F
        gbc.setState(0x8ca3, 0x9763, 0x9990, 0xa272, 0x51c8, 0xca6d, 0x1, 0x1);
        gbc.writeMem(0x8ca3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca3));
        EXPECT(0x35, gbc.readMem(0x8ca4));
        // CB 35 0160
        gbc.setState(0x17e4, 0xdbd2, 0xa5d0, 0x9783, 0xe35f, 0x706e, 0x1, 0x0);
        gbc.writeMem(0x17e4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdbd2, gbc.sp());
        EXPECT(0x17e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0161
        gbc.setState(0xd30d, 0xd839, 0x830, 0xedcf, 0xbb79, 0x6365, 0x1, 0x0);
        gbc.writeMem(0xd30d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd839, gbc.sp());
        EXPECT(0xd30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30d));
        EXPECT(0x35, gbc.readMem(0xd30e));
        // CB 35 0162
        gbc.setState(0xcb65, 0xf749, 0xf550, 0x33d6, 0xf2ba, 0x73c1, 0x0, 0x0);
        gbc.writeMem(0xcb65, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0xcb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb65));
        EXPECT(0x35, gbc.readMem(0xcb66));
        // CB 35 0163
        gbc.setState(0x7759, 0xf178, 0xe30, 0x6ec9, 0xcfc2, 0xf587, 0x0, 0x0);
        gbc.writeMem(0x7759, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf178, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0165
        gbc.setState(0x6957, 0x8f56, 0x8bf0, 0x870f, 0x8541, 0xc288, 0x1, 0x1);
        gbc.writeMem(0x6957, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8f56, gbc.sp());
        EXPECT(0x6959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0166
        gbc.setState(0x80fd, 0x3bf6, 0x8e00, 0x1d30, 0x37ad, 0xf905, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3bf6, gbc.sp());
        EXPECT(0x80ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fd));
        EXPECT(0x35, gbc.readMem(0x80fe));
        // CB 35 0167
        gbc.setState(0xd312, 0x60ee, 0xbf10, 0xa49, 0x4dde, 0xcd5f, 0x1, 0x1);
        gbc.writeMem(0xd312, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x60ee, gbc.sp());
        EXPECT(0xd314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd312));
        EXPECT(0x35, gbc.readMem(0xd313));
        // CB 35 0168
        gbc.setState(0xca97, 0xec83, 0xe120, 0xbf51, 0x7c8d, 0xcf28, 0x0, 0x0);
        gbc.writeMem(0xca97, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0xca99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca97));
        EXPECT(0x35, gbc.readMem(0xca98));
        // CB 35 0169
        gbc.setState(0x369c, 0x4de6, 0x1270, 0x6916, 0x365a, 0x2cfb, 0x1, 0x1);
        gbc.writeMem(0x369c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 016A
        gbc.setState(0xa891, 0xb771, 0x9930, 0x4e9c, 0x9299, 0x41db, 0x0, 0x1);
        gbc.writeMem(0xa891, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0xa893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa891));
        EXPECT(0x35, gbc.readMem(0xa892));
        // CB 35 016B
        gbc.setState(0xc1bd, 0x7a70, 0x4970, 0xb767, 0x6f08, 0x8051, 0x0, 0x0);
        gbc.writeMem(0xc1bd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bd));
        EXPECT(0x35, gbc.readMem(0xc1be));
        // CB 35 016C
        gbc.setState(0xceb6, 0x3fa0, 0x1220, 0xb965, 0x551d, 0x3296, 0x0, 0x1);
        gbc.writeMem(0xceb6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb6));
        EXPECT(0x35, gbc.readMem(0xceb7));
        // CB 35 016D
        gbc.setState(0x1695, 0x7192, 0xd480, 0x401c, 0xe63d, 0x6553, 0x1, 0x0);
        gbc.writeMem(0x1695, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 016E
        gbc.setState(0x2514, 0x65f6, 0x39f0, 0x633c, 0x7c5d, 0x472c, 0x0, 0x1);
        gbc.writeMem(0x2514, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x65f6, gbc.sp());
        EXPECT(0x2516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 016F
        gbc.setState(0x9d30, 0x33f3, 0xbb00, 0x33ea, 0xcc85, 0xcb5b, 0x1, 0x1);
        gbc.writeMem(0x9d30, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x33f3, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d30));
        EXPECT(0x35, gbc.readMem(0x9d31));
        // CB 35 0170
        gbc.setState(0x5f25, 0x106f, 0xe530, 0xd3c, 0x88ab, 0x1f45, 0x0, 0x0);
        gbc.writeMem(0x5f25, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x106f, gbc.sp());
        EXPECT(0x5f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0171
        gbc.setState(0x5d4c, 0xba6c, 0x4550, 0x4e14, 0x29bb, 0xc1f4, 0x0, 0x0);
        gbc.writeMem(0x5d4c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x5d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0172
        gbc.setState(0x4ef6, 0xa73c, 0x6350, 0x3748, 0x32c1, 0x472, 0x0, 0x0);
        gbc.writeMem(0x4ef6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa73c, gbc.sp());
        EXPECT(0x4ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0173
        gbc.setState(0xa725, 0xc8, 0x410, 0x5ff4, 0xf867, 0xd71b, 0x1, 0x0);
        gbc.writeMem(0xa725, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xa727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa725));
        EXPECT(0x35, gbc.readMem(0xa726));
        // CB 35 0174
        gbc.setState(0x159, 0xd636, 0x6c20, 0x423b, 0xbf01, 0x6503, 0x1, 0x0);
        gbc.writeMem(0x159, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd636, gbc.sp());
        EXPECT(0x15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0175
        gbc.setState(0xaed9, 0x23a8, 0x8930, 0xc9ac, 0xb6e9, 0xb1a7, 0x0, 0x1);
        gbc.writeMem(0xaed9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0xaedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed9));
        EXPECT(0x35, gbc.readMem(0xaeda));
        // CB 35 0176
        gbc.setState(0x9fc5, 0x62b2, 0x2380, 0x8784, 0xf500, 0x54bf, 0x0, 0x0);
        gbc.writeMem(0x9fc5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc5));
        EXPECT(0x35, gbc.readMem(0x9fc6));
        // CB 35 0177
        gbc.setState(0x42dc, 0xbc20, 0x7210, 0xe515, 0x1a59, 0x6682, 0x1, 0x0);
        gbc.writeMem(0x42dc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbc20, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0178
        gbc.setState(0x5645, 0xfc4e, 0xb2a0, 0x1583, 0x9e35, 0xb8aa, 0x1, 0x1);
        gbc.writeMem(0x5645, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0179
        gbc.setState(0xbbe3, 0x400e, 0x6f10, 0x6665, 0x1524, 0xbf34, 0x1, 0x0);
        gbc.writeMem(0xbbe3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0x35, gbc.readMem(0xbbe4));
        // CB 35 017A
        gbc.setState(0x774b, 0x8dc0, 0x8900, 0xc749, 0x4a, 0x6e85, 0x1, 0x1);
        gbc.writeMem(0x774b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8dc0, gbc.sp());
        EXPECT(0x774d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 017B
        gbc.setState(0x4472, 0x6ba6, 0x3630, 0x7915, 0xdc1d, 0x8f7e, 0x1, 0x0);
        gbc.writeMem(0x4472, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6ba6, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 017C
        gbc.setState(0x9066, 0x5e2, 0xa360, 0x293a, 0x6d08, 0x3260, 0x0, 0x0);
        gbc.writeMem(0x9066, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5e2, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9066));
        EXPECT(0x35, gbc.readMem(0x9067));
        // CB 35 017D
        gbc.setState(0x5f46, 0xbbf1, 0xac60, 0x60be, 0x485d, 0xe23b, 0x0, 0x1);
        gbc.writeMem(0x5f46, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 017F
        gbc.setState(0x6d7d, 0x16c9, 0xa7b0, 0xc623, 0x4a77, 0xdd03, 0x1, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x6d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0180
        gbc.setState(0xdaa, 0xf693, 0xc80, 0x418c, 0x2770, 0xbe23, 0x0, 0x0);
        gbc.writeMem(0xdaa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf693, gbc.sp());
        EXPECT(0xdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0181
        gbc.setState(0x8513, 0x9116, 0x8190, 0xbaf4, 0x5309, 0xa2d4, 0x0, 0x0);
        gbc.writeMem(0x8513, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9116, gbc.sp());
        EXPECT(0x8515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8513));
        EXPECT(0x35, gbc.readMem(0x8514));
        // CB 35 0182
        gbc.setState(0x7af8, 0x344c, 0x9420, 0xc3bd, 0x153a, 0x4b2d, 0x0, 0x1);
        gbc.writeMem(0x7af8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0183
        gbc.setState(0x613b, 0xc98e, 0xb80, 0xaea5, 0x7707, 0xe991, 0x0, 0x1);
        gbc.writeMem(0x613b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0184
        gbc.setState(0x90d0, 0x6d6, 0xefc0, 0xa013, 0x69e2, 0x644d, 0x1, 0x0);
        gbc.writeMem(0x90d0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6d6, gbc.sp());
        EXPECT(0x90d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d0));
        EXPECT(0x35, gbc.readMem(0x90d1));
        // CB 35 0185
        gbc.setState(0x5fd7, 0x3cb1, 0x3b60, 0x9fbc, 0x307, 0xb864, 0x0, 0x1);
        gbc.writeMem(0x5fd7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x5fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0186
        gbc.setState(0xd5de, 0x2de3, 0x5da0, 0xbf64, 0xa5dc, 0x108b, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2de3, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5de));
        EXPECT(0x35, gbc.readMem(0xd5df));
        // CB 35 0187
        gbc.setState(0x596f, 0xc502, 0x20c0, 0xd60a, 0x9c8, 0xbccc, 0x0, 0x1);
        gbc.writeMem(0x596f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc502, gbc.sp());
        EXPECT(0x5971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0188
        gbc.setState(0x8a1, 0xcf81, 0x2fa0, 0xee0a, 0x5251, 0xa661, 0x0, 0x1);
        gbc.writeMem(0x8a1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0x8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0189
        gbc.setState(0x191e, 0x3597, 0x7450, 0x7520, 0x1a7b, 0x870d, 0x0, 0x1);
        gbc.writeMem(0x191e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0x1920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 018A
        gbc.setState(0x37a0, 0xdc00, 0x6e70, 0xf132, 0xb848, 0x2777, 0x1, 0x1);
        gbc.writeMem(0x37a0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 018B
        gbc.setState(0x112d, 0x9f19, 0x67d0, 0x6234, 0xc80, 0xce12, 0x0, 0x0);
        gbc.writeMem(0x112d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0x112f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 018C
        gbc.setState(0x3f1, 0x10d7, 0xe880, 0x7001, 0x696f, 0xe4b9, 0x0, 0x1);
        gbc.writeMem(0x3f1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x10d7, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 018D
        gbc.setState(0xedc4, 0xb661, 0x29f0, 0xe1c8, 0x58b, 0x4561, 0x0, 0x0);
        gbc.writeMem(0xedc4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb661, gbc.sp());
        EXPECT(0xedc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc4));
        EXPECT(0x35, gbc.readMem(0xedc5));
        // CB 35 018E
        gbc.setState(0xce4a, 0x40e0, 0x40d0, 0x16d, 0x3ebe, 0x5917, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x40e0, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4a));
        EXPECT(0x35, gbc.readMem(0xce4b));
        // CB 35 018F
        gbc.setState(0x4925, 0x6b0a, 0xea90, 0x277, 0x9f37, 0xf762, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6b0a, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0190
        gbc.setState(0x7e97, 0xe08d, 0x2a50, 0x6081, 0x205f, 0x72e4, 0x1, 0x1);
        gbc.writeMem(0x7e97, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe08d, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0191
        gbc.setState(0x2862, 0x7be2, 0x1070, 0x4455, 0xa61f, 0xf8eb, 0x0, 0x0);
        gbc.writeMem(0x2862, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7be2, gbc.sp());
        EXPECT(0x2864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0192
        gbc.setState(0x4ce2, 0x6907, 0x62b0, 0x2e5f, 0x3007, 0x77, 0x1, 0x1);
        gbc.writeMem(0x4ce2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0193
        gbc.setState(0x4fc, 0xe048, 0x3af0, 0x1929, 0xbc40, 0x2f80, 0x1, 0x1);
        gbc.writeMem(0x4fc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0x4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0194
        gbc.setState(0x13e5, 0x2204, 0xc5f0, 0x8868, 0xe47a, 0xf2fe, 0x0, 0x0);
        gbc.writeMem(0x13e5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2204, gbc.sp());
        EXPECT(0x13e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0195
        gbc.setState(0x4a5d, 0xbfd8, 0x38d0, 0xf137, 0x286e, 0x7655, 0x1, 0x0);
        gbc.writeMem(0x4a5d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbfd8, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0196
        gbc.setState(0x10a8, 0x1efa, 0xb860, 0x316e, 0xf0e8, 0x50db, 0x1, 0x1);
        gbc.writeMem(0x10a8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x10aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0197
        gbc.setState(0x9663, 0x2b89, 0xe100, 0xe269, 0xbc30, 0xa7f6, 0x1, 0x1);
        gbc.writeMem(0x9663, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9663));
        EXPECT(0x35, gbc.readMem(0x9664));
        // CB 35 0198
        gbc.setState(0x4f71, 0x54e2, 0x4610, 0xdfe0, 0xca6b, 0x50ec, 0x0, 0x0);
        gbc.writeMem(0x4f71, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x54e2, gbc.sp());
        EXPECT(0x4f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0199
        gbc.setState(0x406f, 0x931a, 0xd760, 0xc759, 0x3b21, 0x920e, 0x1, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 019A
        gbc.setState(0xed9e, 0xef3, 0x35e0, 0x48d6, 0x6881, 0xb24a, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef3, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9e));
        EXPECT(0x35, gbc.readMem(0xed9f));
        // CB 35 019B
        gbc.setState(0x6f6f, 0x200d, 0x36f0, 0x7d7c, 0x9af6, 0x7a7, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x200d, gbc.sp());
        EXPECT(0x6f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 019C
        gbc.setState(0x9eaf, 0xf922, 0xe160, 0x3f27, 0xd15a, 0xf60d, 0x1, 0x0);
        gbc.writeMem(0x9eaf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf922, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eaf));
        EXPECT(0x35, gbc.readMem(0x9eb0));
        // CB 35 019D
        gbc.setState(0xd0a6, 0x2bd0, 0xe0f0, 0xd224, 0x2d7c, 0xa092, 0x0, 0x1);
        gbc.writeMem(0xd0a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0x35, gbc.readMem(0xd0a7));
        // CB 35 019E
        gbc.setState(0x58be, 0x92e2, 0xd270, 0x1b0f, 0x9b01, 0xd31e, 0x1, 0x0);
        gbc.writeMem(0x58be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x92e2, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 019F
        gbc.setState(0x86d, 0x3c04, 0xbb20, 0x7b81, 0x6ce, 0xe16b, 0x1, 0x0);
        gbc.writeMem(0x86d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c04, gbc.sp());
        EXPECT(0x86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A0
        gbc.setState(0x6358, 0xd308, 0x6710, 0xa06, 0xe412, 0x4122, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd308, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A1
        gbc.setState(0x9ef4, 0x3f7b, 0xb200, 0x665b, 0x1a8d, 0xb2b4, 0x1, 0x0);
        gbc.writeMem(0x9ef4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3f7b, gbc.sp());
        EXPECT(0x9ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef4));
        EXPECT(0x35, gbc.readMem(0x9ef5));
        // CB 35 01A2
        gbc.setState(0x6cf4, 0x9e0b, 0x5e40, 0x65aa, 0x7c55, 0x903c, 0x1, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9e0b, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A3
        gbc.setState(0x44bd, 0xc54b, 0xdc60, 0x2847, 0x718d, 0x2dfa, 0x0, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc54b, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A4
        gbc.setState(0x830e, 0x63cc, 0x4160, 0xef5a, 0x10cb, 0xc973, 0x1, 0x0);
        gbc.writeMem(0x830e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x63cc, gbc.sp());
        EXPECT(0x8310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830e));
        EXPECT(0x35, gbc.readMem(0x830f));
        // CB 35 01A5
        gbc.setState(0x2c3, 0x1075, 0x6110, 0xc1f0, 0xe957, 0xfd90, 0x0, 0x0);
        gbc.writeMem(0x2c3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1075, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A6
        gbc.setState(0x42dd, 0x939, 0x7ee0, 0xe2bc, 0x19e7, 0xa307, 0x1, 0x0);
        gbc.writeMem(0x42dd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x42df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A7
        gbc.setState(0x3218, 0x4dae, 0x4940, 0xf6e2, 0x1a7d, 0xeb65, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4dae, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A8
        gbc.setState(0x5a65, 0xa5ac, 0xa4d0, 0x27bc, 0xe0a7, 0xf0a5, 0x1, 0x0);
        gbc.writeMem(0x5a65, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa5ac, gbc.sp());
        EXPECT(0x5a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01A9
        gbc.setState(0xd887, 0xca12, 0x5790, 0x9f19, 0x5962, 0x9792, 0x1, 0x0);
        gbc.writeMem(0xd887, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd887));
        EXPECT(0x35, gbc.readMem(0xd888));
        // CB 35 01AA
        gbc.setState(0x9cb9, 0x5003, 0x7f20, 0x95d7, 0xcfa, 0x4275, 0x1, 0x1);
        gbc.writeMem(0x9cb9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0x9cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb9));
        EXPECT(0x35, gbc.readMem(0x9cba));
        // CB 35 01AB
        gbc.setState(0xa9ed, 0x2860, 0x8be0, 0xdec3, 0xa2cb, 0xcc8c, 0x1, 0x0);
        gbc.writeMem(0xa9ed, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2860, gbc.sp());
        EXPECT(0xa9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ed));
        EXPECT(0x35, gbc.readMem(0xa9ee));
        // CB 35 01AC
        gbc.setState(0xa343, 0xbd4a, 0x7660, 0x6d32, 0xa823, 0x519, 0x0, 0x1);
        gbc.writeMem(0xa343, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa343));
        EXPECT(0x35, gbc.readMem(0xa344));
        // CB 35 01AE
        gbc.setState(0x9722, 0x7443, 0xdb60, 0x425c, 0x3e42, 0x7be9, 0x1, 0x1);
        gbc.writeMem(0x9722, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7443, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9722));
        EXPECT(0x35, gbc.readMem(0x9723));
        // CB 35 01AF
        gbc.setState(0xcc5b, 0xe62b, 0x470, 0xda42, 0x656f, 0x297f, 0x0, 0x1);
        gbc.writeMem(0xcc5b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe62b, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5b));
        EXPECT(0x35, gbc.readMem(0xcc5c));
        // CB 35 01B0
        gbc.setState(0x1e43, 0xb4a5, 0x7500, 0x2d7d, 0x18a9, 0x3dd6, 0x1, 0x1);
        gbc.writeMem(0x1e43, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01B1
        gbc.setState(0xbd39, 0x4d41, 0x7710, 0xa8ce, 0x2401, 0x754a, 0x0, 0x0);
        gbc.writeMem(0xbd39, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd39));
        EXPECT(0x35, gbc.readMem(0xbd3a));
        // CB 35 01B2
        gbc.setState(0xafc0, 0x85df, 0xcfe0, 0x57c5, 0xd82b, 0xea67, 0x1, 0x1);
        gbc.writeMem(0xafc0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x85df, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc0));
        EXPECT(0x35, gbc.readMem(0xafc1));
        // CB 35 01B3
        gbc.setState(0xc51a, 0x4d57, 0x4d10, 0x3cdf, 0xc18b, 0x28ab, 0x0, 0x0);
        gbc.writeMem(0xc51a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51a));
        EXPECT(0x35, gbc.readMem(0xc51b));
        // CB 35 01B4
        gbc.setState(0x2b10, 0xbbc9, 0xd350, 0x5c9a, 0x49f9, 0xe08f, 0x0, 0x1);
        gbc.writeMem(0x2b10, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0x2b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01B5
        gbc.setState(0xb997, 0x4fce, 0x7380, 0xaf1d, 0x8c89, 0xf6fd, 0x0, 0x0);
        gbc.writeMem(0xb997, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb997));
        EXPECT(0x35, gbc.readMem(0xb998));
        // CB 35 01B6
        gbc.setState(0xa1c0, 0x9072, 0x96c0, 0xedd7, 0x87c7, 0x208a, 0x0, 0x1);
        gbc.writeMem(0xa1c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0xa1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c0));
        EXPECT(0x35, gbc.readMem(0xa1c1));
        // CB 35 01B7
        gbc.setState(0x51d9, 0x9969, 0x7e40, 0xe584, 0x6415, 0x4ad6, 0x0, 0x1);
        gbc.writeMem(0x51d9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0x51db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01B8
        gbc.setState(0x6236, 0xcd7e, 0x4f00, 0x3b00, 0x20a7, 0x221b, 0x0, 0x1);
        gbc.writeMem(0x6236, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01B9
        gbc.setState(0x958f, 0x8bdd, 0x7c90, 0x9084, 0x42c1, 0x717b, 0x1, 0x1);
        gbc.writeMem(0x958f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8bdd, gbc.sp());
        EXPECT(0x9591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958f));
        EXPECT(0x35, gbc.readMem(0x9590));
        // CB 35 01BA
        gbc.setState(0x59c9, 0xc80c, 0x5b60, 0xb65c, 0x34c4, 0x1782, 0x1, 0x0);
        gbc.writeMem(0x59c9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc80c, gbc.sp());
        EXPECT(0x59cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01BB
        gbc.setState(0xdadd, 0xa1b3, 0x7bf0, 0xbb3f, 0xc799, 0x4d0b, 0x1, 0x1);
        gbc.writeMem(0xdadd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa1b3, gbc.sp());
        EXPECT(0xdadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdadd));
        EXPECT(0x35, gbc.readMem(0xdade));
        // CB 35 01BC
        gbc.setState(0x1ea1, 0xc976, 0xb80, 0x9231, 0x80ec, 0x36f3, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0x1ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01BD
        gbc.setState(0xb0d2, 0x4a92, 0xef80, 0x1c39, 0x8c43, 0xcaf4, 0x0, 0x1);
        gbc.writeMem(0xb0d2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4a92, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d2));
        EXPECT(0x35, gbc.readMem(0xb0d3));
        // CB 35 01BE
        gbc.setState(0x9f8a, 0xe991, 0xae70, 0x52e8, 0x9dd4, 0x93f9, 0x0, 0x0);
        gbc.writeMem(0x9f8a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe991, gbc.sp());
        EXPECT(0x9f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8a));
        EXPECT(0x35, gbc.readMem(0x9f8b));
        // CB 35 01BF
        gbc.setState(0xc067, 0xd7e6, 0xe8b0, 0xa0c1, 0x9c38, 0xe88e, 0x1, 0x1);
        gbc.writeMem(0xc067, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc067));
        EXPECT(0x35, gbc.readMem(0xc068));
        // CB 35 01C0
        gbc.setState(0x6d2f, 0xfbf3, 0x11b0, 0x45c, 0x3a12, 0x69be, 0x1, 0x0);
        gbc.writeMem(0x6d2f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfbf3, gbc.sp());
        EXPECT(0x6d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01C1
        gbc.setState(0x7e, 0xf92d, 0xdee0, 0xa19d, 0xe934, 0x17fb, 0x1, 0x1);
        gbc.writeMem(0x7e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf92d, gbc.sp());
        EXPECT(0x80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01C2
        gbc.setState(0x1145, 0x2b4, 0xbce0, 0xb78a, 0x1031, 0x7f9, 0x0, 0x1);
        gbc.writeMem(0x1145, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2b4, gbc.sp());
        EXPECT(0x1147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01C3
        gbc.setState(0xc763, 0x9c53, 0x8010, 0x3d76, 0x66e2, 0x8a, 0x0, 0x1);
        gbc.writeMem(0xc763, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0xc765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc763));
        EXPECT(0x35, gbc.readMem(0xc764));
        // CB 35 01C4
        gbc.setState(0x789c, 0x47b4, 0xb430, 0x2658, 0x5d6a, 0xae6c, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01C5
        gbc.setState(0xc1bc, 0x52de, 0x3ee0, 0xd19b, 0x2627, 0x127, 0x1, 0x1);
        gbc.writeMem(0xc1bc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x52de, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bc));
        EXPECT(0x35, gbc.readMem(0xc1bd));
        // CB 35 01C6
        gbc.setState(0xb747, 0x7025, 0x5f10, 0xe6c7, 0x5b74, 0x9cff, 0x0, 0x0);
        gbc.writeMem(0xb747, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7025, gbc.sp());
        EXPECT(0xb749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb747));
        EXPECT(0x35, gbc.readMem(0xb748));
        // CB 35 01C7
        gbc.setState(0x75c7, 0xd467, 0x3880, 0x6033, 0x69a1, 0xb3d6, 0x1, 0x0);
        gbc.writeMem(0x75c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd467, gbc.sp());
        EXPECT(0x75c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01C9
        gbc.setState(0xbe50, 0xf498, 0x4780, 0xf0a7, 0x57f7, 0xf9a6, 0x1, 0x0);
        gbc.writeMem(0xbe50, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf498, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe50));
        EXPECT(0x35, gbc.readMem(0xbe51));
        // CB 35 01CA
        gbc.setState(0x8d3d, 0x5f4c, 0x6770, 0x1c5e, 0xc898, 0x1333, 0x1, 0x1);
        gbc.writeMem(0x8d3d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f4c, gbc.sp());
        EXPECT(0x8d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3d));
        EXPECT(0x35, gbc.readMem(0x8d3e));
        // CB 35 01CB
        gbc.setState(0x4742, 0xe05a, 0x7820, 0x5bce, 0x5d75, 0x75a9, 0x1, 0x1);
        gbc.writeMem(0x4742, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01CC
        gbc.setState(0x35a1, 0x580, 0xf5b0, 0xd64e, 0x9023, 0x296c, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x580, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01CD
        gbc.setState(0x4de5, 0xb306, 0xb070, 0x7960, 0xecb5, 0x67ea, 0x0, 0x0);
        gbc.writeMem(0x4de5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb306, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01CE
        gbc.setState(0x2eeb, 0xfdaa, 0x79a0, 0xb679, 0xe96a, 0x1025, 0x1, 0x0);
        gbc.writeMem(0x2eeb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfdaa, gbc.sp());
        EXPECT(0x2eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01CF
        gbc.setState(0x480d, 0x4b98, 0x2930, 0x4485, 0xc4a8, 0xf136, 0x1, 0x1);
        gbc.writeMem(0x480d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4b98, gbc.sp());
        EXPECT(0x480f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01D0
        gbc.setState(0xe715, 0x3a94, 0xbdd0, 0xf96c, 0xc51, 0xc459, 0x1, 0x1);
        gbc.writeMem(0xe715, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3a94, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe715));
        EXPECT(0x35, gbc.readMem(0xe716));
        // CB 35 01D2
        gbc.setState(0x81cf, 0x6057, 0x5d30, 0xf213, 0xa9ff, 0x3100, 0x0, 0x1);
        gbc.writeMem(0x81cf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6057, gbc.sp());
        EXPECT(0x81d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cf));
        EXPECT(0x35, gbc.readMem(0x81d0));
        // CB 35 01D3
        gbc.setState(0x3eec, 0xdbcc, 0xe710, 0x958b, 0xfff9, 0x2351, 0x1, 0x0);
        gbc.writeMem(0x3eec, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdbcc, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01D4
        gbc.setState(0x6586, 0x6ed2, 0x3330, 0x7057, 0xe92e, 0xa60f, 0x0, 0x0);
        gbc.writeMem(0x6586, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0x6588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01D5
        gbc.setState(0x570e, 0x8772, 0xe5a0, 0x50b, 0xcd93, 0xa03f, 0x1, 0x0);
        gbc.writeMem(0x570e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8772, gbc.sp());
        EXPECT(0x5710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01D6
        gbc.setState(0xad1a, 0xaac5, 0xbd50, 0x2d72, 0x5dba, 0x3d83, 0x1, 0x0);
        gbc.writeMem(0xad1a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaac5, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1a));
        EXPECT(0x35, gbc.readMem(0xad1b));
        // CB 35 01D7
        gbc.setState(0x955a, 0x717f, 0x20d0, 0xb27b, 0x85c4, 0xe846, 0x1, 0x0);
        gbc.writeMem(0x955a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x717f, gbc.sp());
        EXPECT(0x955c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955a));
        EXPECT(0x35, gbc.readMem(0x955b));
        // CB 35 01D8
        gbc.setState(0x3817, 0x50f2, 0x9360, 0x23b9, 0xd82f, 0xffcb, 0x0, 0x1);
        gbc.writeMem(0x3817, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01D9
        gbc.setState(0xd402, 0x894f, 0x7b40, 0xa862, 0xa99, 0xa82e, 0x0, 0x1);
        gbc.writeMem(0xd402, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x894f, gbc.sp());
        EXPECT(0xd404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd402));
        EXPECT(0x35, gbc.readMem(0xd403));
        // CB 35 01DA
        gbc.setState(0x10a6, 0xa0d6, 0xdb70, 0x3d79, 0x63ee, 0x7bc4, 0x0, 0x0);
        gbc.writeMem(0x10a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa0d6, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01DB
        gbc.setState(0xa2f6, 0x9b61, 0xbc30, 0xf3c, 0x1750, 0xa9af, 0x1, 0x0);
        gbc.writeMem(0xa2f6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0xa2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f6));
        EXPECT(0x35, gbc.readMem(0xa2f7));
        // CB 35 01DC
        gbc.setState(0xe7ef, 0x48ca, 0x2da0, 0x85da, 0x7059, 0x6c32, 0x0, 0x0);
        gbc.writeMem(0xe7ef, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x48ca, gbc.sp());
        EXPECT(0xe7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ef));
        EXPECT(0x35, gbc.readMem(0xe7f0));
        // CB 35 01DD
        gbc.setState(0x324e, 0x33f0, 0x670, 0x7f45, 0xf93c, 0x755d, 0x1, 0x1);
        gbc.writeMem(0x324e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01DF
        gbc.setState(0xf4e, 0xd3d9, 0xd940, 0xbd0b, 0xc9cb, 0xc79e, 0x0, 0x1);
        gbc.writeMem(0xf4e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E0
        gbc.setState(0x87, 0x6ed, 0x3060, 0x212f, 0x52d2, 0x74bf, 0x0, 0x0);
        gbc.writeMem(0x87, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0x89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E1
        gbc.setState(0x314e, 0xd2fb, 0x83a0, 0xb75c, 0xf1b1, 0x542e, 0x1, 0x0);
        gbc.writeMem(0x314e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd2fb, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E2
        gbc.setState(0x5a24, 0xb5bd, 0x66c0, 0x268b, 0x2608, 0x5fb7, 0x1, 0x0);
        gbc.writeMem(0x5a24, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb5bd, gbc.sp());
        EXPECT(0x5a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E4
        gbc.setState(0xe5bb, 0x5b94, 0xec0, 0x11a5, 0xa57c, 0x5420, 0x1, 0x1);
        gbc.writeMem(0xe5bb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5b94, gbc.sp());
        EXPECT(0xe5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bb));
        EXPECT(0x35, gbc.readMem(0xe5bc));
        // CB 35 01E5
        gbc.setState(0x65b3, 0x9ccd, 0x7030, 0xf7cf, 0x2ad7, 0x965, 0x0, 0x0);
        gbc.writeMem(0x65b3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E6
        gbc.setState(0x8148, 0xe913, 0xce60, 0x56b2, 0xd8fa, 0xdf2b, 0x0, 0x0);
        gbc.writeMem(0x8148, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe913, gbc.sp());
        EXPECT(0x814a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8148));
        EXPECT(0x35, gbc.readMem(0x8149));
        // CB 35 01E7
        gbc.setState(0x4a55, 0xf976, 0x290, 0x4600, 0xcc02, 0x8674, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf976, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01E8
        gbc.setState(0xa548, 0xe190, 0xd310, 0xaaf3, 0xe88d, 0x37d9, 0x0, 0x1);
        gbc.writeMem(0xa548, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa548));
        EXPECT(0x35, gbc.readMem(0xa549));
        // CB 35 01E9
        gbc.setState(0xc587, 0xa7fb, 0x5ee0, 0x44fe, 0x9e7e, 0xbe4a, 0x1, 0x0);
        gbc.writeMem(0xc587, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa7fb, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0x35, gbc.readMem(0xc588));
        // CB 35 01EA
        gbc.setState(0x29d, 0x459d, 0xabe0, 0x9d1, 0xcd71, 0x1688, 0x1, 0x0);
        gbc.writeMem(0x29d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01EB
        gbc.setState(0x261c, 0x9e7c, 0x8700, 0x1f7, 0xe66f, 0x5a53, 0x0, 0x0);
        gbc.writeMem(0x261c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9e7c, gbc.sp());
        EXPECT(0x261e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01EC
        gbc.setState(0xa21a, 0x8d29, 0x3680, 0xaff6, 0x6874, 0x8fcc, 0x1, 0x0);
        gbc.writeMem(0xa21a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8d29, gbc.sp());
        EXPECT(0xa21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21a));
        EXPECT(0x35, gbc.readMem(0xa21b));
        // CB 35 01ED
        gbc.setState(0xa1ba, 0x4bd3, 0xea70, 0x8208, 0x9376, 0xc078, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0x35, gbc.readMem(0xa1bb));
        // CB 35 01EE
        gbc.setState(0xc8af, 0x3c60, 0x85d0, 0xe191, 0xea9d, 0x48, 0x1, 0x1);
        gbc.writeMem(0xc8af, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3c60, gbc.sp());
        EXPECT(0xc8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8af));
        EXPECT(0x35, gbc.readMem(0xc8b0));
        // CB 35 01EF
        gbc.setState(0x6c3e, 0xeb20, 0xae00, 0xd164, 0x7317, 0x7702, 0x1, 0x1);
        gbc.writeMem(0x6c3e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0x6c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01F0
        gbc.setState(0xcff3, 0x5247, 0x78c0, 0x660b, 0x5a2b, 0x80eb, 0x0, 0x0);
        gbc.writeMem(0xcff3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0xcff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff3));
        EXPECT(0x35, gbc.readMem(0xcff4));
        // CB 35 01F1
        gbc.setState(0x69c0, 0xc0b0, 0xd390, 0xe126, 0x34a3, 0x7510, 0x0, 0x1);
        gbc.writeMem(0x69c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x69c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01F2
        gbc.setState(0xa863, 0xd642, 0x8680, 0x7, 0xecc1, 0x8f13, 0x1, 0x0);
        gbc.writeMem(0xa863, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0xa865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa863));
        EXPECT(0x35, gbc.readMem(0xa864));
        // CB 35 01F3
        gbc.setState(0x8df8, 0xe931, 0xab80, 0x817f, 0x467c, 0x7f76, 0x0, 0x0);
        gbc.writeMem(0x8df8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df8));
        EXPECT(0x35, gbc.readMem(0x8df9));
        // CB 35 01F4
        gbc.setState(0x610c, 0xc34a, 0x72e0, 0xaee9, 0x34f2, 0x17e, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01F5
        gbc.setState(0x8965, 0x951a, 0x2f10, 0x65e0, 0x3cbd, 0xc80, 0x1, 0x0);
        gbc.writeMem(0x8965, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x951a, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8965));
        EXPECT(0x35, gbc.readMem(0x8966));
        // CB 35 01F6
        gbc.setState(0xd7cb, 0x4e27, 0xb9f0, 0x392b, 0xbf25, 0x715b, 0x0, 0x1);
        gbc.writeMem(0xd7cb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0xd7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cb));
        EXPECT(0x35, gbc.readMem(0xd7cc));
        // CB 35 01F7
        gbc.setState(0x52d9, 0x93bd, 0x1000, 0x4e56, 0x478b, 0xeb3d, 0x1, 0x0);
        gbc.writeMem(0x52d9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0x52db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01F8
        gbc.setState(0x9f6, 0xe51c, 0xece0, 0x85f6, 0xc454, 0x3a10, 0x1, 0x0);
        gbc.writeMem(0x9f6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe51c, gbc.sp());
        EXPECT(0x9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01F9
        gbc.setState(0xbda, 0x36a7, 0x61c0, 0xc0c0, 0x7bdb, 0xeff7, 0x0, 0x1);
        gbc.writeMem(0xbda, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0xbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01FA
        gbc.setState(0x29f8, 0xba2a, 0x3140, 0x5840, 0xa4e1, 0x350d, 0x1, 0x0);
        gbc.writeMem(0x29f8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xba2a, gbc.sp());
        EXPECT(0x29fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01FB
        gbc.setState(0xa2f1, 0x5e19, 0x91d0, 0xa079, 0x1545, 0x10da, 0x0, 0x0);
        gbc.writeMem(0xa2f1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5e19, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f1));
        EXPECT(0x35, gbc.readMem(0xa2f2));
        // CB 35 01FC
        gbc.setState(0x83a8, 0xcd9a, 0xf350, 0xcff0, 0x9431, 0x638d, 0x0, 0x0);
        gbc.writeMem(0x83a8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcd9a, gbc.sp());
        EXPECT(0x83aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a8));
        EXPECT(0x35, gbc.readMem(0x83a9));
        // CB 35 01FD
        gbc.setState(0x1fb7, 0xe78e, 0xca60, 0x9079, 0xe647, 0xe39e, 0x0, 0x1);
        gbc.writeMem(0x1fb7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe78e, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01FE
        gbc.setState(0x2601, 0x56e4, 0xdcd0, 0xd532, 0x2f7b, 0xcfc5, 0x0, 0x1);
        gbc.writeMem(0x2601, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x56e4, gbc.sp());
        EXPECT(0x2603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 01FF
        gbc.setState(0x17cd, 0xdbb9, 0x3d40, 0x81c0, 0x7cba, 0xa2f2, 0x0, 0x0);
        gbc.writeMem(0x17cd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0x17cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0200
        gbc.setState(0xda78, 0xb3d0, 0xa610, 0xde5f, 0xd9b7, 0x7360, 0x1, 0x0);
        gbc.writeMem(0xda78, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0xda7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda78));
        EXPECT(0x35, gbc.readMem(0xda79));
        // CB 35 0201
        gbc.setState(0xec9e, 0x7bf6, 0x5810, 0x6ff8, 0x6654, 0x1fbd, 0x0, 0x0);
        gbc.writeMem(0xec9e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7bf6, gbc.sp());
        EXPECT(0xeca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9e));
        EXPECT(0x35, gbc.readMem(0xec9f));
        // CB 35 0202
        gbc.setState(0x53b7, 0xd940, 0x79d0, 0x4877, 0x384f, 0x7861, 0x1, 0x1);
        gbc.writeMem(0x53b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0203
        gbc.setState(0x2414, 0xe8f9, 0xe880, 0x2010, 0x72fa, 0xadf8, 0x1, 0x1);
        gbc.writeMem(0x2414, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8f9, gbc.sp());
        EXPECT(0x2416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0204
        gbc.setState(0x74fb, 0x26d6, 0x81b0, 0x6350, 0x8972, 0x3c2b, 0x1, 0x1);
        gbc.writeMem(0x74fb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0205
        gbc.setState(0x628, 0x702c, 0xa230, 0x814e, 0xd18b, 0x6873, 0x1, 0x1);
        gbc.writeMem(0x628, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x702c, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0206
        gbc.setState(0xd226, 0x6f79, 0x71a0, 0xd5a6, 0xadec, 0x7248, 0x1, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0xd228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd226));
        EXPECT(0x35, gbc.readMem(0xd227));
        // CB 35 0208
        gbc.setState(0x1cb0, 0xb028, 0xda90, 0x72ce, 0xad45, 0xc6bc, 0x0, 0x0);
        gbc.writeMem(0x1cb0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb028, gbc.sp());
        EXPECT(0x1cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0209
        gbc.setState(0x165b, 0x3aa4, 0x9780, 0x2197, 0x9e44, 0xdc8a, 0x1, 0x1);
        gbc.writeMem(0x165b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3aa4, gbc.sp());
        EXPECT(0x165d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 020A
        gbc.setState(0x2541, 0x14b4, 0xdec0, 0xb1bc, 0x7233, 0xc7b2, 0x0, 0x1);
        gbc.writeMem(0x2541, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x14b4, gbc.sp());
        EXPECT(0x2543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 020B
        gbc.setState(0xa5e5, 0xe5cc, 0x8af0, 0x2df4, 0xbae7, 0xaebe, 0x1, 0x1);
        gbc.writeMem(0xa5e5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0xa5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e5));
        EXPECT(0x35, gbc.readMem(0xa5e6));
        // CB 35 020C
        gbc.setState(0x9abf, 0xfb96, 0x5540, 0x96cd, 0x30a5, 0x4de1, 0x0, 0x1);
        gbc.writeMem(0x9abf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abf));
        EXPECT(0x35, gbc.readMem(0x9ac0));
        // CB 35 020D
        gbc.setState(0xc682, 0x1b6, 0x8110, 0x1894, 0xea38, 0xef71, 0x1, 0x1);
        gbc.writeMem(0xc682, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0xc684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc682));
        EXPECT(0x35, gbc.readMem(0xc683));
        // CB 35 020E
        gbc.setState(0x71be, 0x8aea, 0xfe20, 0xaeb2, 0x7c5e, 0x8bcb, 0x1, 0x1);
        gbc.writeMem(0x71be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 020F
        gbc.setState(0x2c31, 0xbe33, 0x6540, 0xd75f, 0x70b7, 0x4b73, 0x1, 0x0);
        gbc.writeMem(0x2c31, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0x2c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0210
        gbc.setState(0x9661, 0x6bbd, 0x2e50, 0x2145, 0x2d4, 0x975e, 0x1, 0x0);
        gbc.writeMem(0x9661, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6bbd, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9661));
        EXPECT(0x35, gbc.readMem(0x9662));
        // CB 35 0211
        gbc.setState(0x4df2, 0x813e, 0x13f0, 0x94f3, 0x469a, 0x63a9, 0x0, 0x0);
        gbc.writeMem(0x4df2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0212
        gbc.setState(0x95f, 0xc8be, 0xf860, 0xee2, 0x4c70, 0xe1e9, 0x1, 0x1);
        gbc.writeMem(0x95f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc8be, gbc.sp());
        EXPECT(0x961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0213
        gbc.setState(0x48f7, 0x1fb4, 0x63b0, 0xd023, 0x9ad7, 0x93e5, 0x0, 0x1);
        gbc.writeMem(0x48f7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1fb4, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0216
        gbc.setState(0x3d1e, 0xe7a3, 0x9c50, 0xd74d, 0xda57, 0x98cb, 0x0, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0217
        gbc.setState(0x19ba, 0xf08d, 0xcbf0, 0xdbc4, 0xd760, 0x5ca6, 0x0, 0x0);
        gbc.writeMem(0x19ba, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0x19bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0218
        gbc.setState(0x8035, 0x99b4, 0xf010, 0x5c33, 0xb2e5, 0xdbe9, 0x1, 0x0);
        gbc.writeMem(0x8035, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x99b4, gbc.sp());
        EXPECT(0x8037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8035));
        EXPECT(0x35, gbc.readMem(0x8036));
        // CB 35 0219
        gbc.setState(0x59ac, 0x69c7, 0xf9d0, 0x7c2f, 0x371, 0x9875, 0x0, 0x1);
        gbc.writeMem(0x59ac, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x69c7, gbc.sp());
        EXPECT(0x59ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 021A
        gbc.setState(0x1e6e, 0xb7ff, 0x1fe0, 0x899b, 0x71e4, 0x12fd, 0x0, 0x0);
        gbc.writeMem(0x1e6e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb7ff, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 021B
        gbc.setState(0x4c13, 0x4e43, 0x6190, 0x7a91, 0x6cfb, 0x6913, 0x0, 0x0);
        gbc.writeMem(0x4c13, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0x4c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 021C
        gbc.setState(0xb798, 0x1730, 0x45a0, 0xf02d, 0x57cc, 0x33d0, 0x0, 0x1);
        gbc.writeMem(0xb798, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb798));
        EXPECT(0x35, gbc.readMem(0xb799));
        // CB 35 021D
        gbc.setState(0x5463, 0x442, 0x6370, 0x81a4, 0x2f48, 0xcea5, 0x0, 0x1);
        gbc.writeMem(0x5463, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x442, gbc.sp());
        EXPECT(0x5465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 021E
        gbc.setState(0x2e2f, 0x25bf, 0x480, 0x2cb, 0x530c, 0xd537, 0x1, 0x0);
        gbc.writeMem(0x2e2f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 021F
        gbc.setState(0x8ae9, 0xbb2c, 0xb230, 0xb1c5, 0x1002, 0x4565, 0x1, 0x1);
        gbc.writeMem(0x8ae9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbb2c, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae9));
        EXPECT(0x35, gbc.readMem(0x8aea));
        // CB 35 0220
        gbc.setState(0x87cc, 0x8a82, 0x3c70, 0xda48, 0xc018, 0xe2d3, 0x1, 0x1);
        gbc.writeMem(0x87cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8a82, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cc));
        EXPECT(0x35, gbc.readMem(0x87cd));
        // CB 35 0221
        gbc.setState(0x40a0, 0xf529, 0xf0a0, 0x6505, 0xe64e, 0x1751, 0x1, 0x1);
        gbc.writeMem(0x40a0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf529, gbc.sp());
        EXPECT(0x40a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0223
        gbc.setState(0x3aa4, 0x565e, 0x4b30, 0xf154, 0xa886, 0x1049, 0x1, 0x1);
        gbc.writeMem(0x3aa4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x565e, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0224
        gbc.setState(0x408a, 0x1dea, 0x4d80, 0x5885, 0x2190, 0x4ee, 0x1, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0225
        gbc.setState(0xebb9, 0xbf59, 0x2500, 0x541d, 0x22cf, 0xf5e, 0x0, 0x1);
        gbc.writeMem(0xebb9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbf59, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb9));
        EXPECT(0x35, gbc.readMem(0xebba));
        // CB 35 0226
        gbc.setState(0x1bd3, 0x47b8, 0xdad0, 0x4f6e, 0x44a6, 0xfe7a, 0x1, 0x1);
        gbc.writeMem(0x1bd3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0x1bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0227
        gbc.setState(0x433f, 0xdb9c, 0x97a0, 0x504d, 0x71be, 0x5f09, 0x1, 0x1);
        gbc.writeMem(0x433f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb9c, gbc.sp());
        EXPECT(0x4341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0228
        gbc.setState(0xb5d7, 0x6317, 0xfca0, 0x5f6, 0x46b7, 0xaf09, 0x1, 0x0);
        gbc.writeMem(0xb5d7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6317, gbc.sp());
        EXPECT(0xb5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d7));
        EXPECT(0x35, gbc.readMem(0xb5d8));
        // CB 35 0229
        gbc.setState(0xe7f6, 0x6b4d, 0x4440, 0xd0b1, 0x4d08, 0xec17, 0x0, 0x0);
        gbc.writeMem(0xe7f6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0x35, gbc.readMem(0xe7f7));
        // CB 35 022A
        gbc.setState(0x83a, 0xa59b, 0x3a10, 0x3a58, 0x62a1, 0xc3f, 0x0, 0x1);
        gbc.writeMem(0x83a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa59b, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 022C
        gbc.setState(0x406d, 0xb5f0, 0x5ee0, 0x8c2a, 0x8e07, 0x1b16, 0x0, 0x1);
        gbc.writeMem(0x406d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb5f0, gbc.sp());
        EXPECT(0x406f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 022D
        gbc.setState(0x966a, 0x5afa, 0x73a0, 0x6f69, 0xd89d, 0xfab0, 0x1, 0x1);
        gbc.writeMem(0x966a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0x966c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966a));
        EXPECT(0x35, gbc.readMem(0x966b));
        // CB 35 022E
        gbc.setState(0xb60a, 0x9e0a, 0xf6a0, 0xb584, 0x8f4e, 0xb973, 0x0, 0x1);
        gbc.writeMem(0xb60a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60a));
        EXPECT(0x35, gbc.readMem(0xb60b));
        // CB 35 022F
        gbc.setState(0xab22, 0x90dc, 0xc230, 0xa006, 0x9430, 0x971b, 0x0, 0x1);
        gbc.writeMem(0xab22, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x90dc, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab22));
        EXPECT(0x35, gbc.readMem(0xab23));
        // CB 35 0230
        gbc.setState(0xd222, 0x67b, 0xe130, 0x8e4, 0xee06, 0xcfa, 0x0, 0x1);
        gbc.writeMem(0xd222, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x67b, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd222));
        EXPECT(0x35, gbc.readMem(0xd223));
        // CB 35 0231
        gbc.setState(0x27ae, 0xd6f9, 0x2c30, 0x2161, 0x8bcc, 0x3a6f, 0x1, 0x1);
        gbc.writeMem(0x27ae, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd6f9, gbc.sp());
        EXPECT(0x27b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0232
        gbc.setState(0x80ca, 0xd93d, 0x2c00, 0xbc66, 0x8f32, 0xec7f, 0x0, 0x1);
        gbc.writeMem(0x80ca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x80cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ca));
        EXPECT(0x35, gbc.readMem(0x80cb));
        // CB 35 0233
        gbc.setState(0xbd53, 0x860, 0x1910, 0x2d69, 0x7c51, 0xa3db, 0x1, 0x0);
        gbc.writeMem(0xbd53, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0xbd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd53));
        EXPECT(0x35, gbc.readMem(0xbd54));
        // CB 35 0234
        gbc.setState(0xe6e9, 0xc7ed, 0xb100, 0x4083, 0xa124, 0xd898, 0x1, 0x1);
        gbc.writeMem(0xe6e9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0xe6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e9));
        EXPECT(0x35, gbc.readMem(0xe6ea));
        // CB 35 0235
        gbc.setState(0xebde, 0x9844, 0x35a0, 0x8389, 0x94, 0x548a, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0x35, gbc.readMem(0xebdf));
        // CB 35 0236
        gbc.setState(0x6050, 0x7563, 0x2990, 0x1061, 0x34da, 0xc1ef, 0x1, 0x0);
        gbc.writeMem(0x6050, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7563, gbc.sp());
        EXPECT(0x6052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0237
        gbc.setState(0xc756, 0x13af, 0x8430, 0x48, 0xfb1, 0x6acc, 0x0, 0x1);
        gbc.writeMem(0xc756, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0xc758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc756));
        EXPECT(0x35, gbc.readMem(0xc757));
        // CB 35 0238
        gbc.setState(0x25a6, 0x12c, 0x8880, 0x26f5, 0x6fdc, 0xdc01, 0x0, 0x0);
        gbc.writeMem(0x25a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x12c, gbc.sp());
        EXPECT(0x25a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0239
        gbc.setState(0x33de, 0x8420, 0x3f30, 0xec4d, 0x7e1e, 0x81f3, 0x0, 0x1);
        gbc.writeMem(0x33de, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 023C
        gbc.setState(0xb695, 0x30bc, 0x9440, 0x60d4, 0x3267, 0x38d, 0x1, 0x0);
        gbc.writeMem(0xb695, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0xb697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb695));
        EXPECT(0x35, gbc.readMem(0xb696));
        // CB 35 023D
        gbc.setState(0x6394, 0xd4c6, 0x8040, 0x7be9, 0x8c45, 0x723a, 0x0, 0x0);
        gbc.writeMem(0x6394, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0x6396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 023E
        gbc.setState(0x453e, 0x60ce, 0x6820, 0xd8c7, 0x7c8b, 0x999f, 0x1, 0x0);
        gbc.writeMem(0x453e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x60ce, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 023F
        gbc.setState(0xa81f, 0xec89, 0x4590, 0x71eb, 0x289c, 0x80f3, 0x1, 0x1);
        gbc.writeMem(0xa81f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0xa821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81f));
        EXPECT(0x35, gbc.readMem(0xa820));
        // CB 35 0240
        gbc.setState(0x2b27, 0x5d6b, 0x9e70, 0xe18e, 0xf7f2, 0xc121, 0x0, 0x0);
        gbc.writeMem(0x2b27, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5d6b, gbc.sp());
        EXPECT(0x2b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0241
        gbc.setState(0x66fd, 0xe6f2, 0xb0, 0xb0b6, 0x4bda, 0x8fae, 0x1, 0x1);
        gbc.writeMem(0x66fd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe6f2, gbc.sp());
        EXPECT(0x66ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0242
        gbc.setState(0x4f35, 0x4d8c, 0x3b40, 0xe604, 0x70ca, 0x271c, 0x0, 0x0);
        gbc.writeMem(0x4f35, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4d8c, gbc.sp());
        EXPECT(0x4f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0243
        gbc.setState(0x178, 0xf747, 0xe1e0, 0x873d, 0xd111, 0x14f5, 0x1, 0x0);
        gbc.writeMem(0x178, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0x17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0244
        gbc.setState(0x3d1a, 0xa86d, 0xb4a0, 0x97e3, 0x5f2c, 0x6c44, 0x1, 0x0);
        gbc.writeMem(0x3d1a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0245
        gbc.setState(0xc08c, 0x6d25, 0x2ef0, 0x8c7d, 0x4a13, 0xba93, 0x0, 0x0);
        gbc.writeMem(0xc08c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0xc08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08c));
        EXPECT(0x35, gbc.readMem(0xc08d));
        // CB 35 0246
        gbc.setState(0x4622, 0x3c25, 0x2170, 0xe25b, 0x71d0, 0x437e, 0x0, 0x0);
        gbc.writeMem(0x4622, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0247
        gbc.setState(0x1a69, 0x6a28, 0xfae0, 0xf9f5, 0x1ae0, 0xefee, 0x1, 0x1);
        gbc.writeMem(0x1a69, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6a28, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0248
        gbc.setState(0xef96, 0xc9d2, 0xe8e0, 0xd001, 0xd980, 0x8eeb, 0x0, 0x1);
        gbc.writeMem(0xef96, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0xef98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef96));
        EXPECT(0x35, gbc.readMem(0xef97));
        // CB 35 0249
        gbc.setState(0x6195, 0xe456, 0xbf20, 0x2f7, 0x577e, 0xa7ad, 0x1, 0x1);
        gbc.writeMem(0x6195, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 024A
        gbc.setState(0xd84c, 0x4ad3, 0x78d0, 0x6aca, 0x9a96, 0x4e95, 0x0, 0x0);
        gbc.writeMem(0xd84c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4ad3, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84c));
        EXPECT(0x35, gbc.readMem(0xd84d));
        // CB 35 024B
        gbc.setState(0x49e9, 0xb842, 0xb250, 0x31fa, 0x23b2, 0xd6aa, 0x1, 0x1);
        gbc.writeMem(0x49e9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb842, gbc.sp());
        EXPECT(0x49eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 024C
        gbc.setState(0xe0f0, 0x7af8, 0xfcc0, 0xd505, 0x1d85, 0x5870, 0x1, 0x0);
        gbc.writeMem(0xe0f0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7af8, gbc.sp());
        EXPECT(0xe0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f0));
        EXPECT(0x35, gbc.readMem(0xe0f1));
        // CB 35 024D
        gbc.setState(0x4237, 0xf893, 0x670, 0x2067, 0x96b, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 024E
        gbc.setState(0x7f71, 0xa637, 0x6220, 0xb4aa, 0x30cb, 0x2877, 0x1, 0x0);
        gbc.writeMem(0x7f71, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa637, gbc.sp());
        EXPECT(0x7f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 024F
        gbc.setState(0x706b, 0x4e0a, 0xaaa0, 0x908c, 0x7df3, 0xf486, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0250
        gbc.setState(0xd946, 0xe8c8, 0x3070, 0x4a, 0x8921, 0x1631, 0x0, 0x0);
        gbc.writeMem(0xd946, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe8c8, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd946));
        EXPECT(0x35, gbc.readMem(0xd947));
        // CB 35 0251
        gbc.setState(0xed8c, 0x1ce4, 0x3960, 0x5e1c, 0x2ee4, 0xd485, 0x0, 0x1);
        gbc.writeMem(0xed8c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0xed8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8c));
        EXPECT(0x35, gbc.readMem(0xed8d));
        // CB 35 0252
        gbc.setState(0x51be, 0x6619, 0x4f40, 0x4c48, 0xb5a2, 0x121b, 0x1, 0x0);
        gbc.writeMem(0x51be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0x51c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0253
        gbc.setState(0x1553, 0x687f, 0x42e0, 0xe674, 0x85c0, 0x93b7, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x687f, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0254
        gbc.setState(0xb308, 0x364e, 0x8a70, 0x358, 0x5af4, 0x836c, 0x0, 0x0);
        gbc.writeMem(0xb308, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb308));
        EXPECT(0x35, gbc.readMem(0xb309));
        // CB 35 0255
        gbc.setState(0xe2e6, 0x7744, 0x5ec0, 0x388f, 0x3449, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0xe2e6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xe2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e6));
        EXPECT(0x35, gbc.readMem(0xe2e7));
        // CB 35 0256
        gbc.setState(0x3070, 0x52fd, 0xebe0, 0x5801, 0x757a, 0xed59, 0x1, 0x1);
        gbc.writeMem(0x3070, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0x3072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0257
        gbc.setState(0xe321, 0x7e5d, 0x6ed0, 0x8504, 0x3ba6, 0x5c6, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e5d, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe321));
        EXPECT(0x35, gbc.readMem(0xe322));
        // CB 35 0258
        gbc.setState(0xbb4e, 0xedb9, 0x3e0, 0x4e42, 0x5a3f, 0xf6bc, 0x1, 0x1);
        gbc.writeMem(0xbb4e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xedb9, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4e));
        EXPECT(0x35, gbc.readMem(0xbb4f));
        // CB 35 0259
        gbc.setState(0xcb13, 0x4a89, 0xd380, 0xec83, 0x73bd, 0x2710, 0x1, 0x1);
        gbc.writeMem(0xcb13, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        EXPECT(0x35, gbc.readMem(0xcb14));
        // CB 35 025A
        gbc.setState(0xb587, 0x99a5, 0xbe00, 0x1dd1, 0xb051, 0x1154, 0x0, 0x1);
        gbc.writeMem(0xb587, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x99a5, gbc.sp());
        EXPECT(0xb589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb587));
        EXPECT(0x35, gbc.readMem(0xb588));
        // CB 35 025B
        gbc.setState(0xccd4, 0xd1d4, 0x7840, 0xddd2, 0x9c77, 0xed18, 0x1, 0x1);
        gbc.writeMem(0xccd4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd1d4, gbc.sp());
        EXPECT(0xccd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd4));
        EXPECT(0x35, gbc.readMem(0xccd5));
        // CB 35 025D
        gbc.setState(0x7c48, 0x164b, 0xc820, 0x260, 0x7093, 0x8c43, 0x1, 0x1);
        gbc.writeMem(0x7c48, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 025E
        gbc.setState(0x87a1, 0x98a9, 0x8ab0, 0x89c4, 0x8d14, 0x5ae9, 0x1, 0x1);
        gbc.writeMem(0x87a1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a1));
        EXPECT(0x35, gbc.readMem(0x87a2));
        // CB 35 0260
        gbc.setState(0x88e3, 0x88c8, 0x550, 0x2060, 0xbf09, 0x81d1, 0x0, 0x0);
        gbc.writeMem(0x88e3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x88c8, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e3));
        EXPECT(0x35, gbc.readMem(0x88e4));
        // CB 35 0261
        gbc.setState(0x7ca5, 0x5ac2, 0xdb40, 0x6a31, 0xe994, 0xa92e, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5ac2, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0262
        gbc.setState(0x6d25, 0xc567, 0x5300, 0xe831, 0xded7, 0x61, 0x1, 0x0);
        gbc.writeMem(0x6d25, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0263
        gbc.setState(0xcc28, 0x14e3, 0x6680, 0x5e1, 0xda43, 0xcbd4, 0x1, 0x0);
        gbc.writeMem(0xcc28, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc28));
        EXPECT(0x35, gbc.readMem(0xcc29));
        // CB 35 0264
        gbc.setState(0xb4a4, 0xca17, 0x2e00, 0xcb9a, 0x7994, 0x5698, 0x1, 0x0);
        gbc.writeMem(0xb4a4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xca17, gbc.sp());
        EXPECT(0xb4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a4));
        EXPECT(0x35, gbc.readMem(0xb4a5));
        // CB 35 0265
        gbc.setState(0xafae, 0xcc8c, 0xb870, 0xd58e, 0x118d, 0x442b, 0x0, 0x0);
        gbc.writeMem(0xafae, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafae));
        EXPECT(0x35, gbc.readMem(0xafaf));
        // CB 35 0266
        gbc.setState(0x38f9, 0x9ed2, 0x3cd0, 0x5715, 0x64cf, 0x5aeb, 0x1, 0x1);
        gbc.writeMem(0x38f9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0x38fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0267
        gbc.setState(0xbf4b, 0x4ff5, 0x9bc0, 0xe3c5, 0xe264, 0xff9c, 0x1, 0x0);
        gbc.writeMem(0xbf4b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0xbf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4b));
        EXPECT(0x35, gbc.readMem(0xbf4c));
        // CB 35 0268
        gbc.setState(0x143, 0x935a, 0xf5c0, 0xb681, 0xd4d, 0x73dd, 0x0, 0x1);
        gbc.writeMem(0x143, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x935a, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0269
        gbc.setState(0x32e2, 0x1c6f, 0x5800, 0xf353, 0xb246, 0xd43a, 0x1, 0x1);
        gbc.writeMem(0x32e2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0x32e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 026A
        gbc.setState(0x55c0, 0xa4f9, 0x5e40, 0xdfee, 0xabca, 0xd50f, 0x0, 0x1);
        gbc.writeMem(0x55c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0x55c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 026B
        gbc.setState(0xeb1f, 0xd166, 0x9180, 0xf1f7, 0x857b, 0x572a, 0x1, 0x1);
        gbc.writeMem(0xeb1f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd166, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1f));
        EXPECT(0x35, gbc.readMem(0xeb20));
        // CB 35 026C
        gbc.setState(0x831c, 0x3630, 0xbcf0, 0xaaf3, 0xd2e8, 0x6437, 0x1, 0x0);
        gbc.writeMem(0x831c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3630, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831c));
        EXPECT(0x35, gbc.readMem(0x831d));
        // CB 35 026D
        gbc.setState(0x62af, 0x3fad, 0xffe0, 0xb6c2, 0x8848, 0xc6c, 0x1, 0x0);
        gbc.writeMem(0x62af, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3fad, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 026E
        gbc.setState(0xc2a1, 0xcf15, 0x7e50, 0xeea7, 0x68cd, 0xb0e8, 0x0, 0x0);
        gbc.writeMem(0xc2a1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcf15, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a1));
        EXPECT(0x35, gbc.readMem(0xc2a2));
        // CB 35 026F
        gbc.setState(0xc6f0, 0x454d, 0x6110, 0xadea, 0xe567, 0x28b7, 0x1, 0x0);
        gbc.writeMem(0xc6f0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x454d, gbc.sp());
        EXPECT(0xc6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f0));
        EXPECT(0x35, gbc.readMem(0xc6f1));
        // CB 35 0270
        gbc.setState(0x6273, 0x8d0c, 0x26e0, 0xca4, 0x107f, 0xea2, 0x0, 0x1);
        gbc.writeMem(0x6273, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0x6275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0271
        gbc.setState(0xccc2, 0xf531, 0x2360, 0xd866, 0x2722, 0xa90e, 0x0, 0x1);
        gbc.writeMem(0xccc2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf531, gbc.sp());
        EXPECT(0xccc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc2));
        EXPECT(0x35, gbc.readMem(0xccc3));
        // CB 35 0272
        gbc.setState(0x1c2f, 0x41da, 0x57b0, 0x4ec5, 0x4bdc, 0x1b6, 0x1, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x41da, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0273
        gbc.setState(0xcdd5, 0x85f, 0x2ca0, 0x7a0, 0x35dd, 0xf03, 0x1, 0x1);
        gbc.writeMem(0xcdd5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x85f, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd5));
        EXPECT(0x35, gbc.readMem(0xcdd6));
        // CB 35 0274
        gbc.setState(0x3e86, 0xc8b8, 0x5510, 0x68f4, 0x334c, 0xf627, 0x1, 0x0);
        gbc.writeMem(0x3e86, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc8b8, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0277
        gbc.setState(0xe77e, 0xdb42, 0xf8d0, 0xa248, 0x556e, 0xf03a, 0x1, 0x0);
        gbc.writeMem(0xe77e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77e));
        EXPECT(0x35, gbc.readMem(0xe77f));
        // CB 35 0278
        gbc.setState(0x5db6, 0xe2a2, 0xcc80, 0x8b9b, 0xa04e, 0x3bcd, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe2a2, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0279
        gbc.setState(0xd25a, 0x82c3, 0x6050, 0xaff, 0x8c25, 0x6e2d, 0x0, 0x1);
        gbc.writeMem(0xd25a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x82c3, gbc.sp());
        EXPECT(0xd25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25a));
        EXPECT(0x35, gbc.readMem(0xd25b));
        // CB 35 027A
        gbc.setState(0xaed9, 0xab22, 0x2f30, 0xb88c, 0xc962, 0x81fe, 0x0, 0x0);
        gbc.writeMem(0xaed9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0xaedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed9));
        EXPECT(0x35, gbc.readMem(0xaeda));
        // CB 35 027B
        gbc.setState(0xe8c7, 0xf22d, 0x8e20, 0xa819, 0xd3d9, 0x4094, 0x0, 0x1);
        gbc.writeMem(0xe8c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf22d, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c7));
        EXPECT(0x35, gbc.readMem(0xe8c8));
        // CB 35 027C
        gbc.setState(0xe3bb, 0x5419, 0xf780, 0x7a60, 0x38d5, 0xaaf4, 0x0, 0x0);
        gbc.writeMem(0xe3bb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0xe3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bb));
        EXPECT(0x35, gbc.readMem(0xe3bc));
        // CB 35 027D
        gbc.setState(0x2eca, 0x9586, 0xc670, 0x104e, 0xb7ce, 0xc07b, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 027E
        gbc.setState(0x49db, 0x15ef, 0x3aa0, 0x1554, 0x887b, 0x29f5, 0x1, 0x1);
        gbc.writeMem(0x49db, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x15ef, gbc.sp());
        EXPECT(0x49dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 027F
        gbc.setState(0x36f, 0xe052, 0x60f0, 0xb12b, 0x316f, 0xb745, 0x1, 0x0);
        gbc.writeMem(0x36f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe052, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0280
        gbc.setState(0x7e46, 0x98e0, 0x5c90, 0x10a2, 0x4830, 0x17ef, 0x0, 0x1);
        gbc.writeMem(0x7e46, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0x7e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0281
        gbc.setState(0xe2fc, 0x5d07, 0x5140, 0x4bdf, 0x89be, 0x6bba, 0x1, 0x1);
        gbc.writeMem(0xe2fc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5d07, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0x35, gbc.readMem(0xe2fd));
        // CB 35 0282
        gbc.setState(0x4ef1, 0xa06, 0xefe0, 0xc3ce, 0xbb20, 0xc4dc, 0x0, 0x1);
        gbc.writeMem(0x4ef1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa06, gbc.sp());
        EXPECT(0x4ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0283
        gbc.setState(0x69c6, 0xc2fa, 0xee00, 0x7f9b, 0xf5e5, 0x1ab0, 0x1, 0x0);
        gbc.writeMem(0x69c6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0284
        gbc.setState(0x192b, 0x734a, 0x5850, 0x72a3, 0x9a9a, 0x4aec, 0x1, 0x1);
        gbc.writeMem(0x192b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x192d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0285
        gbc.setState(0xc355, 0x691, 0x5e0, 0x38a9, 0x492, 0x8a32, 0x0, 0x0);
        gbc.writeMem(0xc355, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x691, gbc.sp());
        EXPECT(0xc357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc355));
        EXPECT(0x35, gbc.readMem(0xc356));
        // CB 35 0286
        gbc.setState(0x495, 0x7f83, 0x2e10, 0xc66b, 0x398b, 0x544, 0x1, 0x1);
        gbc.writeMem(0x495, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7f83, gbc.sp());
        EXPECT(0x497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0287
        gbc.setState(0x1a7b, 0xbf0d, 0xa600, 0x561f, 0x996e, 0x9b2e, 0x0, 0x1);
        gbc.writeMem(0x1a7b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbf0d, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0288
        gbc.setState(0x5741, 0x7425, 0x2e70, 0xe7f6, 0x5a8f, 0x8cfe, 0x1, 0x0);
        gbc.writeMem(0x5741, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0x5743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0289
        gbc.setState(0x5be3, 0x4484, 0x20d0, 0x9449, 0xf5de, 0x8648, 0x0, 0x1);
        gbc.writeMem(0x5be3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0x5be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 028A
        gbc.setState(0xdc74, 0xc30f, 0x7190, 0x74f9, 0x746d, 0xa5d7, 0x0, 0x0);
        gbc.writeMem(0xdc74, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc30f, gbc.sp());
        EXPECT(0xdc76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc74));
        EXPECT(0x35, gbc.readMem(0xdc75));
        // CB 35 028B
        gbc.setState(0x1a31, 0x9fbd, 0x2d90, 0xd6e6, 0xcce9, 0x5ae0, 0x1, 0x1);
        gbc.writeMem(0x1a31, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0x1a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 028C
        gbc.setState(0x87e7, 0x614, 0x8180, 0x2a73, 0xd03, 0xf3f3, 0x1, 0x0);
        gbc.writeMem(0x87e7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0x87e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e7));
        EXPECT(0x35, gbc.readMem(0x87e8));
        // CB 35 028D
        gbc.setState(0xa20d, 0x66ea, 0x4c70, 0x3b19, 0xdf43, 0x188a, 0x1, 0x1);
        gbc.writeMem(0xa20d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0xa20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20d));
        EXPECT(0x35, gbc.readMem(0xa20e));
        // CB 35 028E
        gbc.setState(0x7a7b, 0xe68b, 0xb2a0, 0x5583, 0x7dad, 0xa2aa, 0x1, 0x1);
        gbc.writeMem(0x7a7b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe68b, gbc.sp());
        EXPECT(0x7a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 028F
        gbc.setState(0x1915, 0xb25f, 0x5710, 0x9429, 0xcebe, 0xaf21, 0x0, 0x0);
        gbc.writeMem(0x1915, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x1917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0290
        gbc.setState(0xd22, 0xe24e, 0xd4d0, 0x586c, 0xd98a, 0x5a7a, 0x1, 0x1);
        gbc.writeMem(0xd22, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0291
        gbc.setState(0x89bc, 0xb1ef, 0x4e00, 0x236c, 0x2e43, 0xcca1, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0x35, gbc.readMem(0x89bd));
        // CB 35 0292
        gbc.setState(0xba2d, 0xa3f9, 0xfc70, 0xce95, 0x7607, 0x265f, 0x1, 0x0);
        gbc.writeMem(0xba2d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa3f9, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2d));
        EXPECT(0x35, gbc.readMem(0xba2e));
        // CB 35 0293
        gbc.setState(0xe355, 0x44dc, 0xdcb0, 0xf2f0, 0xbb3b, 0xf1f8, 0x1, 0x1);
        gbc.writeMem(0xe355, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x44dc, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe355));
        EXPECT(0x35, gbc.readMem(0xe356));
        // CB 35 0294
        gbc.setState(0xa6a5, 0xea55, 0x45c0, 0x229d, 0xa47b, 0xe377, 0x0, 0x0);
        gbc.writeMem(0xa6a5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xea55, gbc.sp());
        EXPECT(0xa6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a5));
        EXPECT(0x35, gbc.readMem(0xa6a6));
        // CB 35 0295
        gbc.setState(0xa7ea, 0xba47, 0x4a80, 0xc6b2, 0xbf8, 0x9608, 0x1, 0x0);
        gbc.writeMem(0xa7ea, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0xa7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ea));
        EXPECT(0x35, gbc.readMem(0xa7eb));
        // CB 35 0296
        gbc.setState(0x4307, 0xec7b, 0xb5a0, 0xc50e, 0xbe4c, 0x370c, 0x0, 0x1);
        gbc.writeMem(0x4307, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0297
        gbc.setState(0xbe30, 0x4d47, 0xeba0, 0xa719, 0xecb9, 0x5c29, 0x0, 0x1);
        gbc.writeMem(0xbe30, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe30));
        EXPECT(0x35, gbc.readMem(0xbe31));
        // CB 35 0298
        gbc.setState(0x6392, 0x70ca, 0x9550, 0xd4e6, 0x61a6, 0x44a5, 0x0, 0x0);
        gbc.writeMem(0x6392, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0299
        gbc.setState(0x1128, 0xde15, 0xf160, 0xbafc, 0xef1c, 0xd2dc, 0x1, 0x0);
        gbc.writeMem(0x1128, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xde15, gbc.sp());
        EXPECT(0x112a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 029A
        gbc.setState(0x7ed9, 0x8626, 0xd800, 0x898a, 0x92e6, 0x5f03, 0x0, 0x1);
        gbc.writeMem(0x7ed9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0x7edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 029B
        gbc.setState(0xc262, 0x7e88, 0x7ac0, 0x3dfc, 0x15c2, 0x1bb7, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0xc264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc262));
        EXPECT(0x35, gbc.readMem(0xc263));
        // CB 35 029C
        gbc.setState(0xec90, 0xa37c, 0xda10, 0xfbd5, 0x11af, 0xa5ca, 0x0, 0x1);
        gbc.writeMem(0xec90, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa37c, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec90));
        EXPECT(0x35, gbc.readMem(0xec91));
        // CB 35 029D
        gbc.setState(0x1bad, 0x102b, 0x6cc0, 0x8c8c, 0x65e7, 0xf75e, 0x0, 0x0);
        gbc.writeMem(0x1bad, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x102b, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 029E
        gbc.setState(0xb6e6, 0x2a5d, 0x7c80, 0x5af0, 0x5943, 0x358c, 0x0, 0x0);
        gbc.writeMem(0xb6e6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e6));
        EXPECT(0x35, gbc.readMem(0xb6e7));
        // CB 35 029F
        gbc.setState(0x2b2b, 0xae02, 0xb170, 0x13a4, 0x1d06, 0x335, 0x1, 0x0);
        gbc.writeMem(0x2b2b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0x2b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02A1
        gbc.setState(0xb208, 0xe3a5, 0x71a0, 0x94c3, 0x2006, 0xd975, 0x0, 0x1);
        gbc.writeMem(0xb208, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0xb20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb208));
        EXPECT(0x35, gbc.readMem(0xb209));
        // CB 35 02A2
        gbc.setState(0xc844, 0x7ed6, 0x7900, 0x968f, 0x2565, 0x4ad, 0x1, 0x0);
        gbc.writeMem(0xc844, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc844));
        EXPECT(0x35, gbc.readMem(0xc845));
        // CB 35 02A3
        gbc.setState(0xa0d0, 0x71d5, 0x5e30, 0xc28c, 0x8722, 0x5778, 0x0, 0x0);
        gbc.writeMem(0xa0d0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x71d5, gbc.sp());
        EXPECT(0xa0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d0));
        EXPECT(0x35, gbc.readMem(0xa0d1));
        // CB 35 02A4
        gbc.setState(0x2451, 0x76ed, 0x8650, 0x975d, 0x1431, 0x6c32, 0x1, 0x0);
        gbc.writeMem(0x2451, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02A5
        gbc.setState(0x69e7, 0x23b, 0x5d90, 0x3d20, 0x54f7, 0x521b, 0x1, 0x0);
        gbc.writeMem(0x69e7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x69e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02A6
        gbc.setState(0x9cfb, 0x2a35, 0x6ee0, 0x2a91, 0x9b8e, 0x22c4, 0x1, 0x0);
        gbc.writeMem(0x9cfb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2a35, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfb));
        EXPECT(0x35, gbc.readMem(0x9cfc));
        // CB 35 02A8
        gbc.setState(0x6781, 0xf98b, 0xee20, 0x4f2b, 0x675b, 0x146a, 0x0, 0x0);
        gbc.writeMem(0x6781, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0x6783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02A9
        gbc.setState(0x80b7, 0x75e7, 0x4e40, 0xa84, 0x61f2, 0x257a, 0x0, 0x0);
        gbc.writeMem(0x80b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b7));
        EXPECT(0x35, gbc.readMem(0x80b8));
        // CB 35 02AA
        gbc.setState(0x7a99, 0xd722, 0x3e00, 0x56b7, 0x5a72, 0x74b, 0x0, 0x1);
        gbc.writeMem(0x7a99, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd722, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02AB
        gbc.setState(0xa536, 0x673b, 0x8e10, 0xa4c9, 0x308c, 0x617f, 0x0, 0x1);
        gbc.writeMem(0xa536, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x673b, gbc.sp());
        EXPECT(0xa538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa536));
        EXPECT(0x35, gbc.readMem(0xa537));
        // CB 35 02AD
        gbc.setState(0x9e02, 0x7d37, 0x1c0, 0x19e, 0x2c77, 0x4572, 0x1, 0x1);
        gbc.writeMem(0x9e02, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7d37, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0x35, gbc.readMem(0x9e03));
        // CB 35 02AE
        gbc.setState(0x7d31, 0x3554, 0x5a90, 0x42d1, 0x2f8d, 0xef6, 0x0, 0x1);
        gbc.writeMem(0x7d31, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3554, gbc.sp());
        EXPECT(0x7d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02AF
        gbc.setState(0xa931, 0x88f4, 0xa1f0, 0x4675, 0xf1af, 0x769c, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0xa933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa931));
        EXPECT(0x35, gbc.readMem(0xa932));
        // CB 35 02B0
        gbc.setState(0x99d7, 0xedaa, 0x3dd0, 0x8899, 0x5b80, 0xe52d, 0x1, 0x1);
        gbc.writeMem(0x99d7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x99d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d7));
        EXPECT(0x35, gbc.readMem(0x99d8));
        // CB 35 02B1
        gbc.setState(0xb44e, 0x4f9e, 0xb8b0, 0xf006, 0xbbcb, 0xaf66, 0x1, 0x0);
        gbc.writeMem(0xb44e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4f9e, gbc.sp());
        EXPECT(0xb450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44e));
        EXPECT(0x35, gbc.readMem(0xb44f));
        // CB 35 02B3
        gbc.setState(0x5ff7, 0x8d8d, 0x7ac0, 0x6a9b, 0x67c3, 0x7178, 0x0, 0x1);
        gbc.writeMem(0x5ff7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8d8d, gbc.sp());
        EXPECT(0x5ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02B4
        gbc.setState(0x4054, 0xf215, 0xa0, 0xce91, 0xcab2, 0x9230, 0x0, 0x1);
        gbc.writeMem(0x4054, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02B5
        gbc.setState(0xccba, 0x3584, 0x7310, 0xf675, 0x1765, 0x2689, 0x1, 0x1);
        gbc.writeMem(0xccba, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3584, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccba));
        EXPECT(0x35, gbc.readMem(0xccbb));
        // CB 35 02B6
        gbc.setState(0x79df, 0x21f1, 0x1da0, 0x12c0, 0x2da, 0x792c, 0x1, 0x1);
        gbc.writeMem(0x79df, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x21f1, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02B7
        gbc.setState(0x204f, 0x4def, 0x61d0, 0xe4f, 0x3554, 0xb528, 0x0, 0x1);
        gbc.writeMem(0x204f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4def, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02B8
        gbc.setState(0x49f7, 0x3cf9, 0x6c50, 0x3ccb, 0x76c2, 0x410f, 0x1, 0x1);
        gbc.writeMem(0x49f7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02B9
        gbc.setState(0x9824, 0x4449, 0xf4b0, 0x1c32, 0x3592, 0xee50, 0x1, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4449, gbc.sp());
        EXPECT(0x9826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9824));
        EXPECT(0x35, gbc.readMem(0x9825));
        // CB 35 02BA
        gbc.setState(0x9523, 0x1bcb, 0x2570, 0x4882, 0x3e63, 0xc4d9, 0x1, 0x1);
        gbc.writeMem(0x9523, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0x9525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9523));
        EXPECT(0x35, gbc.readMem(0x9524));
        // CB 35 02BB
        gbc.setState(0x8f01, 0x18aa, 0x80f0, 0x4bc1, 0x3d4e, 0x935, 0x1, 0x0);
        gbc.writeMem(0x8f01, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x18aa, gbc.sp());
        EXPECT(0x8f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f01));
        EXPECT(0x35, gbc.readMem(0x8f02));
        // CB 35 02BC
        gbc.setState(0xb876, 0xf85f, 0xf0, 0x10c1, 0x6abd, 0x37b0, 0x1, 0x1);
        gbc.writeMem(0xb876, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf85f, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb876));
        EXPECT(0x35, gbc.readMem(0xb877));
        // CB 35 02BD
        gbc.setState(0x96b0, 0x5f11, 0x2ce0, 0x7dd, 0xaab4, 0xe4fd, 0x1, 0x1);
        gbc.writeMem(0x96b0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5f11, gbc.sp());
        EXPECT(0x96b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b0));
        EXPECT(0x35, gbc.readMem(0x96b1));
        // CB 35 02BE
        gbc.setState(0xb8e5, 0x68ec, 0x28f0, 0x902d, 0x75d6, 0x3cff, 0x1, 0x1);
        gbc.writeMem(0xb8e5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x68ec, gbc.sp());
        EXPECT(0xb8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e5));
        EXPECT(0x35, gbc.readMem(0xb8e6));
        // CB 35 02BF
        gbc.setState(0xb678, 0x78e3, 0x8cc0, 0x1337, 0x486b, 0xf440, 0x0, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x78e3, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb678));
        EXPECT(0x35, gbc.readMem(0xb679));
        // CB 35 02C1
        gbc.setState(0x608f, 0x2e4b, 0x5bf0, 0x64d3, 0x4bbd, 0x9501, 0x0, 0x1);
        gbc.writeMem(0x608f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02C2
        gbc.setState(0xbd1, 0x3ac4, 0xfe60, 0x1833, 0x8dd3, 0x9607, 0x0, 0x1);
        gbc.writeMem(0xbd1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ac4, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02C3
        gbc.setState(0x78b2, 0x1afb, 0x1f40, 0xf8b4, 0x5dc, 0x136f, 0x0, 0x1);
        gbc.writeMem(0x78b2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1afb, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02C5
        gbc.setState(0x8ae7, 0xf8aa, 0x8380, 0xd437, 0x5775, 0x9dff, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae7));
        EXPECT(0x35, gbc.readMem(0x8ae8));
        // CB 35 02C6
        gbc.setState(0xb34, 0x510, 0x1930, 0x62e3, 0x5b62, 0xaa27, 0x0, 0x0);
        gbc.writeMem(0xb34, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x510, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02C7
        gbc.setState(0xbbd1, 0x7df9, 0x6380, 0xcc95, 0x1fb0, 0x2a57, 0x1, 0x1);
        gbc.writeMem(0xbbd1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0xbbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd1));
        EXPECT(0x35, gbc.readMem(0xbbd2));
        // CB 35 02C8
        gbc.setState(0x9db7, 0xa648, 0x54c0, 0xa305, 0x13a3, 0xa7d7, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db7));
        EXPECT(0x35, gbc.readMem(0x9db8));
        // CB 35 02CA
        gbc.setState(0x89cb, 0x53e6, 0xaa40, 0x7785, 0x9ff3, 0x4e1c, 0x1, 0x1);
        gbc.writeMem(0x89cb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cb));
        EXPECT(0x35, gbc.readMem(0x89cc));
        // CB 35 02CB
        gbc.setState(0x5fc3, 0x1b7a, 0x9660, 0x427c, 0x470c, 0x5468, 0x1, 0x1);
        gbc.writeMem(0x5fc3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1b7a, gbc.sp());
        EXPECT(0x5fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02CC
        gbc.setState(0x50ca, 0x22d9, 0x6790, 0xcf82, 0x96a2, 0xd226, 0x0, 0x1);
        gbc.writeMem(0x50ca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x22d9, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02CD
        gbc.setState(0xaaf8, 0xa3ef, 0xb610, 0xd2bf, 0x4c0c, 0xa98a, 0x1, 0x0);
        gbc.writeMem(0xaaf8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0xaafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf8));
        EXPECT(0x35, gbc.readMem(0xaaf9));
        // CB 35 02CE
        gbc.setState(0x2f6e, 0x704d, 0x260, 0x772, 0xa515, 0x4098, 0x1, 0x1);
        gbc.writeMem(0x2f6e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x704d, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02CF
        gbc.setState(0xeac0, 0xc65e, 0x2420, 0x2b1d, 0x726, 0x52eb, 0x1, 0x0);
        gbc.writeMem(0xeac0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0xeac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac0));
        EXPECT(0x35, gbc.readMem(0xeac1));
        // CB 35 02D0
        gbc.setState(0xd415, 0x145f, 0x7070, 0xc244, 0x19bb, 0x2f9c, 0x0, 0x1);
        gbc.writeMem(0xd415, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0xd417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd415));
        EXPECT(0x35, gbc.readMem(0xd416));
        // CB 35 02D1
        gbc.setState(0x77e1, 0x203e, 0x3200, 0x5edf, 0xfa88, 0xae37, 0x0, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02D2
        gbc.setState(0x92fd, 0xa9d9, 0x9920, 0xf750, 0x8162, 0xce6c, 0x1, 0x1);
        gbc.writeMem(0x92fd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0x92ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fd));
        EXPECT(0x35, gbc.readMem(0x92fe));
        // CB 35 02D3
        gbc.setState(0x60f4, 0x8260, 0x78b0, 0x324a, 0x4a4d, 0x215f, 0x0, 0x0);
        gbc.writeMem(0x60f4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02D4
        gbc.setState(0xdb15, 0x34e, 0x9190, 0xc08d, 0x186f, 0x58a, 0x1, 0x0);
        gbc.writeMem(0xdb15, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0xdb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb15));
        EXPECT(0x35, gbc.readMem(0xdb16));
        // CB 35 02D5
        gbc.setState(0x9ad0, 0xbeed, 0x73d0, 0x6037, 0x4684, 0xa9a7, 0x1, 0x0);
        gbc.writeMem(0x9ad0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbeed, gbc.sp());
        EXPECT(0x9ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad0));
        EXPECT(0x35, gbc.readMem(0x9ad1));
        // CB 35 02D6
        gbc.setState(0x8c91, 0x1874, 0xa320, 0xa258, 0xb1e9, 0x7015, 0x1, 0x1);
        gbc.writeMem(0x8c91, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1874, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c91));
        EXPECT(0x35, gbc.readMem(0x8c92));
        // CB 35 02D7
        gbc.setState(0x7fc4, 0x45d2, 0x57f0, 0x1f32, 0xd606, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0x7fc4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x45d2, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02D8
        gbc.setState(0xef7d, 0x4f4b, 0xb310, 0x82f4, 0xb693, 0xaeec, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4f4b, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0x35, gbc.readMem(0xef7e));
        // CB 35 02D9
        gbc.setState(0x5b30, 0x421f, 0x6d30, 0x16f9, 0x36a2, 0x677a, 0x0, 0x0);
        gbc.writeMem(0x5b30, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02DA
        gbc.setState(0x8bd3, 0x169f, 0xad70, 0x300f, 0xe195, 0x93de, 0x0, 0x0);
        gbc.writeMem(0x8bd3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x169f, gbc.sp());
        EXPECT(0x8bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd3));
        EXPECT(0x35, gbc.readMem(0x8bd4));
        // CB 35 02DB
        gbc.setState(0x490f, 0x24fa, 0x91a0, 0x7c09, 0x3893, 0xff7a, 0x1, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x24fa, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02DD
        gbc.setState(0x6721, 0x6eb, 0x2b30, 0xf6ea, 0xc816, 0x4a1f, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6eb, gbc.sp());
        EXPECT(0x6723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02DE
        gbc.setState(0xe840, 0x3369, 0x5f70, 0x39b9, 0x521b, 0x528c, 0x0, 0x1);
        gbc.writeMem(0xe840, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3369, gbc.sp());
        EXPECT(0xe842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe840));
        EXPECT(0x35, gbc.readMem(0xe841));
        // CB 35 02DF
        gbc.setState(0x241d, 0x9a4c, 0xed90, 0x17ba, 0x4f48, 0x90a3, 0x0, 0x0);
        gbc.writeMem(0x241d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9a4c, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02E0
        gbc.setState(0xceaa, 0x87d2, 0x1b50, 0x61f3, 0x36d7, 0xb8eb, 0x1, 0x1);
        gbc.writeMem(0xceaa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x87d2, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x35, gbc.readMem(0xceab));
        // CB 35 02E1
        gbc.setState(0xbbee, 0x647d, 0xfe90, 0x577b, 0xb289, 0x7947, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbee));
        EXPECT(0x35, gbc.readMem(0xbbef));
        // CB 35 02E2
        gbc.setState(0xefa0, 0x8d47, 0x1120, 0x1121, 0xc8d4, 0xaf09, 0x0, 0x0);
        gbc.writeMem(0xefa0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8d47, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa0));
        EXPECT(0x35, gbc.readMem(0xefa1));
        // CB 35 02E5
        gbc.setState(0x6ca9, 0x7264, 0x8170, 0x3825, 0x309f, 0x46f0, 0x1, 0x1);
        gbc.writeMem(0x6ca9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7264, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02E6
        gbc.setState(0x1774, 0xf308, 0xeee0, 0xac5, 0xcbc6, 0x8eb5, 0x0, 0x1);
        gbc.writeMem(0x1774, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf308, gbc.sp());
        EXPECT(0x1776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02E7
        gbc.setState(0x539e, 0xdcc5, 0x3310, 0xaf27, 0xd7f, 0xf854, 0x0, 0x1);
        gbc.writeMem(0x539e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0x53a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02E8
        gbc.setState(0xadc6, 0x1caf, 0x6ab0, 0xea16, 0xfba8, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0xadc6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1caf, gbc.sp());
        EXPECT(0xadc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc6));
        EXPECT(0x35, gbc.readMem(0xadc7));
        // CB 35 02E9
        gbc.setState(0x70c2, 0xfc82, 0x2100, 0x3fd, 0xd186, 0x91a5, 0x1, 0x1);
        gbc.writeMem(0x70c2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc82, gbc.sp());
        EXPECT(0x70c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02EA
        gbc.setState(0xd0be, 0x749d, 0x1d20, 0xfe77, 0xa597, 0x3751, 0x1, 0x1);
        gbc.writeMem(0xd0be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x749d, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0be));
        EXPECT(0x35, gbc.readMem(0xd0bf));
        // CB 35 02EB
        gbc.setState(0x6e29, 0x4955, 0x9b30, 0x8848, 0x957e, 0x420a, 0x1, 0x0);
        gbc.writeMem(0x6e29, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02EC
        gbc.setState(0xe960, 0x6b33, 0x8900, 0x4e73, 0x84f, 0x339, 0x0, 0x0);
        gbc.writeMem(0xe960, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b33, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe960));
        EXPECT(0x35, gbc.readMem(0xe961));
        // CB 35 02ED
        gbc.setState(0x8881, 0xf744, 0x7d10, 0x337a, 0x845c, 0x21ec, 0x1, 0x1);
        gbc.writeMem(0x8881, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf744, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8881));
        EXPECT(0x35, gbc.readMem(0x8882));
        // CB 35 02EE
        gbc.setState(0x3147, 0x61f6, 0xd9e0, 0xeccf, 0x558c, 0x69f7, 0x0, 0x0);
        gbc.writeMem(0x3147, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x61f6, gbc.sp());
        EXPECT(0x3149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02EF
        gbc.setState(0x9364, 0xdf34, 0x7800, 0xa10e, 0x1f54, 0x30b7, 0x1, 0x0);
        gbc.writeMem(0x9364, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdf34, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9364));
        EXPECT(0x35, gbc.readMem(0x9365));
        // CB 35 02F0
        gbc.setState(0x5622, 0xba38, 0xa5b0, 0xf95f, 0x1b67, 0xaf8, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02F1
        gbc.setState(0x3ca8, 0xaf8, 0x9e0, 0x788, 0xd9b0, 0xf4ef, 0x1, 0x1);
        gbc.writeMem(0x3ca8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02F2
        gbc.setState(0xac2e, 0x11ea, 0x9c70, 0xb78b, 0xa6ff, 0x476f, 0x0, 0x0);
        gbc.writeMem(0xac2e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2e));
        EXPECT(0x35, gbc.readMem(0xac2f));
        // CB 35 02F3
        gbc.setState(0x40e2, 0x4469, 0xe830, 0xea12, 0xbd6, 0xc660, 0x0, 0x1);
        gbc.writeMem(0x40e2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02F4
        gbc.setState(0xdc83, 0xa145, 0xc230, 0x4a8f, 0x53c, 0xe124, 0x0, 0x1);
        gbc.writeMem(0xdc83, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa145, gbc.sp());
        EXPECT(0xdc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc83));
        EXPECT(0x35, gbc.readMem(0xdc84));
        // CB 35 02F5
        gbc.setState(0x3ab, 0x3016, 0xfb20, 0x15b8, 0x249a, 0x3ded, 0x1, 0x1);
        gbc.writeMem(0x3ab, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3016, gbc.sp());
        EXPECT(0x3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02F6
        gbc.setState(0x4dd4, 0x3ad7, 0xdbd0, 0xf7eb, 0x410, 0xba4a, 0x0, 0x1);
        gbc.writeMem(0x4dd4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3ad7, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02F7
        gbc.setState(0xb4f9, 0x80e3, 0xb2c0, 0x5143, 0xae30, 0x9551, 0x0, 0x1);
        gbc.writeMem(0xb4f9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x80e3, gbc.sp());
        EXPECT(0xb4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f9));
        EXPECT(0x35, gbc.readMem(0xb4fa));
        // CB 35 02F8
        gbc.setState(0xd32b, 0x4b25, 0x490, 0x93c, 0xf636, 0x9da2, 0x0, 0x1);
        gbc.writeMem(0xd32b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4b25, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0x35, gbc.readMem(0xd32c));
        // CB 35 02F9
        gbc.setState(0x8428, 0x3d46, 0xb320, 0xeec1, 0x423f, 0x5ab3, 0x1, 0x0);
        gbc.writeMem(0x8428, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x35, gbc.readMem(0x8429));
        // CB 35 02FB
        gbc.setState(0x58a6, 0x86c1, 0x4dd0, 0x3616, 0xdc9a, 0x7c7b, 0x0, 0x1);
        gbc.writeMem(0x58a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x58a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02FC
        gbc.setState(0xe7c0, 0x5a42, 0xa590, 0x1fa9, 0xf8f0, 0x5ad3, 0x1, 0x1);
        gbc.writeMem(0xe7c0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c0));
        EXPECT(0x35, gbc.readMem(0xe7c1));
        // CB 35 02FD
        gbc.setState(0x2792, 0x1cd3, 0x5c90, 0x3a9, 0x306e, 0x95ad, 0x0, 0x0);
        gbc.writeMem(0x2792, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1cd3, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 02FE
        gbc.setState(0x93e8, 0xf119, 0xd3c0, 0xd684, 0x11ec, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x93e8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf119, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e8));
        EXPECT(0x35, gbc.readMem(0x93e9));
        // CB 35 02FF
        gbc.setState(0x8e8b, 0x3d7, 0xa500, 0xf392, 0x138, 0xe04d, 0x0, 0x0);
        gbc.writeMem(0x8e8b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3d7, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8b));
        EXPECT(0x35, gbc.readMem(0x8e8c));
        // CB 35 0301
        gbc.setState(0x7ac9, 0x172b, 0x1250, 0xa9f7, 0x2542, 0x957, 0x0, 0x0);
        gbc.writeMem(0x7ac9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x172b, gbc.sp());
        EXPECT(0x7acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0302
        gbc.setState(0xe5e1, 0xdddb, 0x79f0, 0x2e13, 0x2ed8, 0xdbe6, 0x1, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0xe5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e1));
        EXPECT(0x35, gbc.readMem(0xe5e2));
        // CB 35 0303
        gbc.setState(0xa5f5, 0xa709, 0xe870, 0x7a7d, 0xcfb2, 0xe280, 0x1, 0x1);
        gbc.writeMem(0xa5f5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa709, gbc.sp());
        EXPECT(0xa5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f5));
        EXPECT(0x35, gbc.readMem(0xa5f6));
        // CB 35 0304
        gbc.setState(0x5cc9, 0xb5a8, 0xf810, 0x1acf, 0xf0e7, 0x6392, 0x1, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0305
        gbc.setState(0x9afa, 0x6ea7, 0xa60, 0xe345, 0x17e1, 0x5c30, 0x1, 0x0);
        gbc.writeMem(0x9afa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ea7, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0x35, gbc.readMem(0x9afb));
        // CB 35 0306
        gbc.setState(0x3799, 0xa6a0, 0x3f30, 0xb46a, 0x217f, 0xe687, 0x1, 0x1);
        gbc.writeMem(0x3799, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0x379b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0307
        gbc.setState(0xa069, 0x3110, 0xd840, 0x224c, 0x434a, 0xd8a7, 0x0, 0x1);
        gbc.writeMem(0xa069, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3110, gbc.sp());
        EXPECT(0xa06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa069));
        EXPECT(0x35, gbc.readMem(0xa06a));
        // CB 35 0308
        gbc.setState(0x8b5, 0x4405, 0x2030, 0x54f0, 0xe7de, 0xb8ab, 0x0, 0x1);
        gbc.writeMem(0x8b5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4405, gbc.sp());
        EXPECT(0x8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0309
        gbc.setState(0x3d77, 0x5bd1, 0x26d0, 0x63cf, 0x83be, 0x9a2e, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 030A
        gbc.setState(0xefe3, 0x5fae, 0x8d0, 0x5cfb, 0xf6a, 0x2e5, 0x0, 0x0);
        gbc.writeMem(0xefe3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0xefe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe3));
        EXPECT(0x35, gbc.readMem(0xefe4));
        // CB 35 030B
        gbc.setState(0x7925, 0xf669, 0xf3c0, 0xcb3d, 0xfe2b, 0x1e7d, 0x1, 0x1);
        gbc.writeMem(0x7925, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0x7927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 030C
        gbc.setState(0xa03e, 0xe43d, 0xb550, 0x8bd6, 0x85ba, 0x5d10, 0x1, 0x1);
        gbc.writeMem(0xa03e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03e));
        EXPECT(0x35, gbc.readMem(0xa03f));
        // CB 35 030D
        gbc.setState(0xc0f5, 0x1d54, 0x4df0, 0x181e, 0xb874, 0x8e6c, 0x0, 0x1);
        gbc.writeMem(0xc0f5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1d54, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0x35, gbc.readMem(0xc0f6));
        // CB 35 030E
        gbc.setState(0x9a47, 0x65d9, 0x4c80, 0xa74e, 0xd1a9, 0x1d31, 0x1, 0x0);
        gbc.writeMem(0x9a47, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x65d9, gbc.sp());
        EXPECT(0x9a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a47));
        EXPECT(0x35, gbc.readMem(0x9a48));
        // CB 35 030F
        gbc.setState(0x91c2, 0x4adf, 0x3fc0, 0x21df, 0xdfb9, 0x4526, 0x0, 0x0);
        gbc.writeMem(0x91c2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4adf, gbc.sp());
        EXPECT(0x91c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c2));
        EXPECT(0x35, gbc.readMem(0x91c3));
        // CB 35 0310
        gbc.setState(0x3096, 0x1741, 0xd890, 0xa3f1, 0x8ed8, 0x970c, 0x1, 0x1);
        gbc.writeMem(0x3096, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0311
        gbc.setState(0x8dde, 0x9ded, 0x9300, 0xc71a, 0x4295, 0x13a8, 0x0, 0x1);
        gbc.writeMem(0x8dde, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dde));
        EXPECT(0x35, gbc.readMem(0x8ddf));
        // CB 35 0312
        gbc.setState(0x606a, 0x7ec6, 0x440, 0x3c6a, 0xfc16, 0xf9ca, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0313
        gbc.setState(0x8d94, 0xa402, 0x3e10, 0xc2a6, 0x7976, 0x633d, 0x1, 0x0);
        gbc.writeMem(0x8d94, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa402, gbc.sp());
        EXPECT(0x8d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d94));
        EXPECT(0x35, gbc.readMem(0x8d95));
        // CB 35 0314
        gbc.setState(0xb638, 0x523b, 0x2110, 0xfcfe, 0xb1fc, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0xb638, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x523b, gbc.sp());
        EXPECT(0xb63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb638));
        EXPECT(0x35, gbc.readMem(0xb639));
        // CB 35 0316
        gbc.setState(0x1ffb, 0xa276, 0x610, 0x6fac, 0xdd16, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0x1ffb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0x1ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0317
        gbc.setState(0xadc3, 0xceb9, 0x21c0, 0x1038, 0x70b1, 0xadd8, 0x0, 0x1);
        gbc.writeMem(0xadc3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc3));
        EXPECT(0x35, gbc.readMem(0xadc4));
        // CB 35 0318
        gbc.setState(0x2dc0, 0x73fa, 0xf400, 0x65c5, 0x40a8, 0x5bba, 0x1, 0x0);
        gbc.writeMem(0x2dc0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x73fa, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0319
        gbc.setState(0xd546, 0xeaab, 0xc680, 0xda67, 0x44c2, 0x7c0a, 0x0, 0x1);
        gbc.writeMem(0xd546, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeaab, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd546));
        EXPECT(0x35, gbc.readMem(0xd547));
        // CB 35 031A
        gbc.setState(0x2118, 0xeb58, 0xebc0, 0xbed8, 0xd9a5, 0xeda7, 0x0, 0x1);
        gbc.writeMem(0x2118, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeb58, gbc.sp());
        EXPECT(0x211a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 031B
        gbc.setState(0x221d, 0x6e06, 0x2240, 0x698e, 0x8605, 0x7e58, 0x0, 0x0);
        gbc.writeMem(0x221d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6e06, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 031C
        gbc.setState(0x84e0, 0xc9d4, 0x5300, 0x85d3, 0xee2f, 0xcfae, 0x0, 0x1);
        gbc.writeMem(0x84e0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc9d4, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e0));
        EXPECT(0x35, gbc.readMem(0x84e1));
        // CB 35 031D
        gbc.setState(0xc8c2, 0xff0c, 0x3b40, 0x5bd2, 0xe883, 0x848d, 0x1, 0x0);
        gbc.writeMem(0xc8c2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xff0c, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c2));
        EXPECT(0x35, gbc.readMem(0xc8c3));
        // CB 35 031E
        gbc.setState(0x9970, 0xace5, 0xca70, 0xb3fd, 0x69b, 0xab8d, 0x0, 0x1);
        gbc.writeMem(0x9970, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x35, gbc.readMem(0x9971));
        // CB 35 031F
        gbc.setState(0xd8e0, 0xae42, 0xfa30, 0xa7ee, 0x6e66, 0x1e4f, 0x1, 0x0);
        gbc.writeMem(0xd8e0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0xd8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e0));
        EXPECT(0x35, gbc.readMem(0xd8e1));
        // CB 35 0320
        gbc.setState(0x8704, 0x96f, 0x5b70, 0x2254, 0xe878, 0xcdc6, 0x1, 0x0);
        gbc.writeMem(0x8704, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x96f, gbc.sp());
        EXPECT(0x8706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8704));
        EXPECT(0x35, gbc.readMem(0x8705));
        // CB 35 0321
        gbc.setState(0x5b6, 0xe233, 0x35c0, 0x79ac, 0x3699, 0x54d, 0x1, 0x1);
        gbc.writeMem(0x5b6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe233, gbc.sp());
        EXPECT(0x5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0322
        gbc.setState(0xa771, 0x2c73, 0x32e0, 0x51a2, 0x6c5f, 0xc722, 0x0, 0x0);
        gbc.writeMem(0xa771, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2c73, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa771));
        EXPECT(0x35, gbc.readMem(0xa772));
        // CB 35 0323
        gbc.setState(0xde0b, 0x773, 0x6910, 0x578e, 0x7059, 0xbbb3, 0x0, 0x1);
        gbc.writeMem(0xde0b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0xde0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0b));
        EXPECT(0x35, gbc.readMem(0xde0c));
        // CB 35 0324
        gbc.setState(0x473e, 0x4901, 0x8050, 0xff17, 0xbe89, 0x2487, 0x1, 0x0);
        gbc.writeMem(0x473e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4901, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0325
        gbc.setState(0x2990, 0xe1a8, 0x6560, 0x97c4, 0x3c0a, 0xf551, 0x1, 0x1);
        gbc.writeMem(0x2990, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe1a8, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0326
        gbc.setState(0x612c, 0x3f77, 0x9dd0, 0x9b6f, 0x1ac0, 0xda4c, 0x0, 0x0);
        gbc.writeMem(0x612c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3f77, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0327
        gbc.setState(0xdd7, 0x3ac0, 0x5670, 0x1178, 0x57a0, 0xd69f, 0x1, 0x1);
        gbc.writeMem(0xdd7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3ac0, gbc.sp());
        EXPECT(0xdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0328
        gbc.setState(0x1328, 0x275a, 0xb1f0, 0x58dc, 0x9000, 0x2370, 0x0, 0x0);
        gbc.writeMem(0x1328, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x275a, gbc.sp());
        EXPECT(0x132a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0329
        gbc.setState(0x370b, 0xc3f3, 0xc2a0, 0xc243, 0x92bf, 0xb356, 0x1, 0x1);
        gbc.writeMem(0x370b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc3f3, gbc.sp());
        EXPECT(0x370d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 032A
        gbc.setState(0xb750, 0x21aa, 0x39a0, 0x1e24, 0x2f5c, 0x3c07, 0x0, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb750));
        EXPECT(0x35, gbc.readMem(0xb751));
        // CB 35 032B
        gbc.setState(0x7f05, 0xc621, 0x6490, 0x7bc9, 0x5913, 0x53f4, 0x1, 0x1);
        gbc.writeMem(0x7f05, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0x7f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 032C
        gbc.setState(0x1f39, 0x9ea3, 0x82a0, 0x4050, 0xb942, 0x8a7b, 0x1, 0x0);
        gbc.writeMem(0x1f39, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9ea3, gbc.sp());
        EXPECT(0x1f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 032D
        gbc.setState(0x5788, 0xf430, 0x4570, 0x2857, 0x522e, 0xebdd, 0x0, 0x1);
        gbc.writeMem(0x5788, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf430, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 032E
        gbc.setState(0xbe70, 0xd370, 0x59a0, 0xc851, 0x7f27, 0xc2e1, 0x0, 0x0);
        gbc.writeMem(0xbe70, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe70));
        EXPECT(0x35, gbc.readMem(0xbe71));
        // CB 35 032F
        gbc.setState(0x3556, 0x2772, 0xf330, 0x8845, 0x236a, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0x3556, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x3558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0330
        gbc.setState(0x9302, 0x66d8, 0x6810, 0xbc75, 0x8533, 0x4bd1, 0x1, 0x1);
        gbc.writeMem(0x9302, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x66d8, gbc.sp());
        EXPECT(0x9304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9302));
        EXPECT(0x35, gbc.readMem(0x9303));
        // CB 35 0331
        gbc.setState(0x5e0b, 0x917a, 0x34d0, 0xbac1, 0xedb4, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0x5e0b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0x5e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0332
        gbc.setState(0x17be, 0x769d, 0xa1f0, 0x1f39, 0x6677, 0x2128, 0x1, 0x1);
        gbc.writeMem(0x17be, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x769d, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0333
        gbc.setState(0xbab1, 0x5069, 0xece0, 0x4d48, 0x81ee, 0x7769, 0x1, 0x0);
        gbc.writeMem(0xbab1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5069, gbc.sp());
        EXPECT(0xbab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab1));
        EXPECT(0x35, gbc.readMem(0xbab2));
        // CB 35 0334
        gbc.setState(0x2234, 0xb776, 0x9ec0, 0x31f5, 0x4735, 0x8a31, 0x0, 0x1);
        gbc.writeMem(0x2234, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb776, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0335
        gbc.setState(0x18b5, 0x7aa2, 0x1a50, 0xcec0, 0x284d, 0x2ae0, 0x0, 0x0);
        gbc.writeMem(0x18b5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7aa2, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0336
        gbc.setState(0xcddc, 0x8d0c, 0xd060, 0xdc5a, 0xa9d, 0x1363, 0x0, 0x1);
        gbc.writeMem(0xcddc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0xcdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddc));
        EXPECT(0x35, gbc.readMem(0xcddd));
        // CB 35 0337
        gbc.setState(0x901d, 0xbab6, 0x43b0, 0x8832, 0x39ad, 0x173e, 0x1, 0x0);
        gbc.writeMem(0x901d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbab6, gbc.sp());
        EXPECT(0x901f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901d));
        EXPECT(0x35, gbc.readMem(0x901e));
        // CB 35 0338
        gbc.setState(0xcd42, 0x34ed, 0x2b30, 0x4034, 0x1520, 0xfca6, 0x0, 0x0);
        gbc.writeMem(0xcd42, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x34ed, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd42));
        EXPECT(0x35, gbc.readMem(0xcd43));
        // CB 35 0339
        gbc.setState(0x4aed, 0xfd06, 0x6020, 0xf35c, 0x79ec, 0xaf48, 0x1, 0x1);
        gbc.writeMem(0x4aed, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfd06, gbc.sp());
        EXPECT(0x4aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033A
        gbc.setState(0xef3, 0x7118, 0x3700, 0xb546, 0x5379, 0xd086, 0x1, 0x1);
        gbc.writeMem(0xef3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7118, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033B
        gbc.setState(0x79f7, 0xd004, 0xdf30, 0x2a9c, 0x1448, 0x1e5e, 0x1, 0x1);
        gbc.writeMem(0x79f7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033C
        gbc.setState(0x58df, 0xfe56, 0x8480, 0x7b14, 0xff93, 0x3d1, 0x0, 0x1);
        gbc.writeMem(0x58df, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033D
        gbc.setState(0x7045, 0x2e4b, 0x3080, 0xf840, 0xffd1, 0xc09, 0x0, 0x1);
        gbc.writeMem(0x7045, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033E
        gbc.setState(0x5a74, 0x3d72, 0x64c0, 0x7b10, 0xa139, 0x455f, 0x0, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3d72, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 033F
        gbc.setState(0x5169, 0x792d, 0x61a0, 0x4945, 0x6d13, 0xf376, 0x1, 0x1);
        gbc.writeMem(0x5169, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x792d, gbc.sp());
        EXPECT(0x516b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0340
        gbc.setState(0x555e, 0x4f0, 0xe910, 0x3a2f, 0xdc64, 0x7729, 0x1, 0x1);
        gbc.writeMem(0x555e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4f0, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0342
        gbc.setState(0x3361, 0x704b, 0x9260, 0x8c1c, 0x498f, 0xd0f2, 0x0, 0x1);
        gbc.writeMem(0x3361, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0x3363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0343
        gbc.setState(0x71c7, 0xe25d, 0x87d0, 0x18d0, 0x635d, 0x4ba0, 0x0, 0x0);
        gbc.writeMem(0x71c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe25d, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0345
        gbc.setState(0x76a2, 0x8fc9, 0xa730, 0xe678, 0x3d46, 0xd3ad, 0x0, 0x1);
        gbc.writeMem(0x76a2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x76a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0346
        gbc.setState(0xc23b, 0x6ad, 0x4940, 0xc4b5, 0xb04c, 0x734b, 0x0, 0x1);
        gbc.writeMem(0xc23b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6ad, gbc.sp());
        EXPECT(0xc23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23b));
        EXPECT(0x35, gbc.readMem(0xc23c));
        // CB 35 0347
        gbc.setState(0xc620, 0x6699, 0x23d0, 0xae50, 0x9c6, 0xd328, 0x0, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc620));
        EXPECT(0x35, gbc.readMem(0xc621));
        // CB 35 0348
        gbc.setState(0xe65d, 0x3a35, 0xbe80, 0x729d, 0xe68a, 0xedd, 0x0, 0x1);
        gbc.writeMem(0xe65d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65d));
        EXPECT(0x35, gbc.readMem(0xe65e));
        // CB 35 0349
        gbc.setState(0x6386, 0x233b, 0xf820, 0x353d, 0x51fd, 0xf991, 0x1, 0x0);
        gbc.writeMem(0x6386, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x233b, gbc.sp());
        EXPECT(0x6388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 034A
        gbc.setState(0xee04, 0x135d, 0x5f90, 0xa014, 0xfdce, 0xee74, 0x0, 0x0);
        gbc.writeMem(0xee04, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0x35, gbc.readMem(0xee05));
        // CB 35 034B
        gbc.setState(0xc42a, 0x24c8, 0x7b40, 0xea4d, 0xb3fa, 0xd255, 0x1, 0x0);
        gbc.writeMem(0xc42a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x24c8, gbc.sp());
        EXPECT(0xc42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42a));
        EXPECT(0x35, gbc.readMem(0xc42b));
        // CB 35 034C
        gbc.setState(0x5ccf, 0xdb6, 0xa140, 0xaca5, 0xc6b, 0x9860, 0x0, 0x1);
        gbc.writeMem(0x5ccf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0x5cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 034D
        gbc.setState(0x3d1d, 0x6a97, 0xd520, 0xbbee, 0x7fb7, 0x35f9, 0x0, 0x1);
        gbc.writeMem(0x3d1d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6a97, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 034E
        gbc.setState(0x4f83, 0x66fa, 0xe470, 0x94fd, 0xbb21, 0xccb1, 0x1, 0x0);
        gbc.writeMem(0x4f83, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x66fa, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 034F
        gbc.setState(0x3ff5, 0xb788, 0x6ab0, 0xf9b1, 0x7200, 0xef79, 0x0, 0x1);
        gbc.writeMem(0x3ff5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0350
        gbc.setState(0x69df, 0x4506, 0x2310, 0xf03a, 0xbadb, 0xea84, 0x0, 0x1);
        gbc.writeMem(0x69df, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x69e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0351
        gbc.setState(0x9b94, 0x297a, 0x1c50, 0xa215, 0x48a2, 0x9e13, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0x35, gbc.readMem(0x9b95));
        // CB 35 0352
        gbc.setState(0x1ca5, 0x76bc, 0xf5e0, 0xcbd4, 0xd05, 0xe1c3, 0x1, 0x1);
        gbc.writeMem(0x1ca5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x76bc, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0353
        gbc.setState(0x4b04, 0x897d, 0x3840, 0x508a, 0xfaf5, 0x1ccf, 0x0, 0x0);
        gbc.writeMem(0x4b04, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0354
        gbc.setState(0x529d, 0xb3c7, 0xb4e0, 0x2c4e, 0x29ac, 0x21a3, 0x1, 0x0);
        gbc.writeMem(0x529d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0355
        gbc.setState(0x5035, 0xe63f, 0xcd0, 0xd64f, 0xe839, 0xe030, 0x1, 0x1);
        gbc.writeMem(0x5035, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe63f, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0356
        gbc.setState(0xbc06, 0x9bb5, 0x8590, 0x5485, 0xef6c, 0x2f07, 0x1, 0x0);
        gbc.writeMem(0xbc06, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9bb5, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc06));
        EXPECT(0x35, gbc.readMem(0xbc07));
        // CB 35 0357
        gbc.setState(0x37d4, 0xeca5, 0x44e0, 0x783f, 0xc447, 0xb710, 0x0, 0x0);
        gbc.writeMem(0x37d4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeca5, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0358
        gbc.setState(0x335e, 0xac29, 0x3220, 0xbb12, 0xb499, 0x6137, 0x0, 0x0);
        gbc.writeMem(0x335e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x3360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 035A
        gbc.setState(0x4ce9, 0x764, 0x34a0, 0x203, 0x37ec, 0x616d, 0x0, 0x1);
        gbc.writeMem(0x4ce9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 035B
        gbc.setState(0x7b55, 0x332b, 0xee80, 0x9769, 0x3480, 0xd4c5, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 035C
        gbc.setState(0x6b96, 0xfd94, 0x5fa0, 0x9d2e, 0xaa79, 0xa454, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfd94, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 035D
        gbc.setState(0xd1b6, 0xf6d9, 0xa370, 0xc4cb, 0xa52a, 0x287b, 0x0, 0x0);
        gbc.writeMem(0xd1b6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0xd1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b6));
        EXPECT(0x35, gbc.readMem(0xd1b7));
        // CB 35 035E
        gbc.setState(0x146c, 0x6f54, 0xcf30, 0x2e08, 0x416, 0x9bc8, 0x1, 0x0);
        gbc.writeMem(0x146c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 035F
        gbc.setState(0xcdd8, 0xbea9, 0xeba0, 0xf778, 0xdc9a, 0xf36e, 0x0, 0x1);
        gbc.writeMem(0xcdd8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        EXPECT(0x35, gbc.readMem(0xcdd9));
        // CB 35 0360
        gbc.setState(0x59d0, 0xa3af, 0xd700, 0xc7d4, 0x758, 0x758e, 0x1, 0x0);
        gbc.writeMem(0x59d0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa3af, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0361
        gbc.setState(0x31a6, 0x3730, 0xc1b0, 0x56dc, 0x65ba, 0xf172, 0x1, 0x0);
        gbc.writeMem(0x31a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3730, gbc.sp());
        EXPECT(0x31a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0362
        gbc.setState(0x8b9d, 0x88c2, 0x9240, 0x819e, 0x7474, 0x337f, 0x1, 0x0);
        gbc.writeMem(0x8b9d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x88c2, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9d));
        EXPECT(0x35, gbc.readMem(0x8b9e));
        // CB 35 0363
        gbc.setState(0x41bb, 0x1de7, 0x8b60, 0x12fd, 0xecb, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x41bb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0x41bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0364
        gbc.setState(0x4e07, 0xb6d8, 0xb520, 0xa171, 0x630b, 0x5965, 0x0, 0x1);
        gbc.writeMem(0x4e07, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb6d8, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0365
        gbc.setState(0x6529, 0x6122, 0x4200, 0x2b48, 0x142d, 0xd5cd, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0366
        gbc.setState(0xb3ca, 0xaba0, 0x8ca0, 0x3598, 0xb26a, 0xc038, 0x1, 0x0);
        gbc.writeMem(0xb3ca, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaba0, gbc.sp());
        EXPECT(0xb3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ca));
        EXPECT(0x35, gbc.readMem(0xb3cb));
        // CB 35 0367
        gbc.setState(0x181e, 0xe53a, 0x20c0, 0xd063, 0x6f7b, 0x1f2b, 0x0, 0x1);
        gbc.writeMem(0x181e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe53a, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0368
        gbc.setState(0x6e46, 0x7952, 0x35c0, 0x4a73, 0x3a0, 0x5dfc, 0x0, 0x1);
        gbc.writeMem(0x6e46, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7952, gbc.sp());
        EXPECT(0x6e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0369
        gbc.setState(0x838a, 0xd281, 0x7280, 0x1095, 0xed06, 0xa8c8, 0x0, 0x1);
        gbc.writeMem(0x838a, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd281, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838a));
        EXPECT(0x35, gbc.readMem(0x838b));
        // CB 35 036A
        gbc.setState(0x44c2, 0x5325, 0x3e40, 0x3cdf, 0xf314, 0xab48, 0x0, 0x0);
        gbc.writeMem(0x44c2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5325, gbc.sp());
        EXPECT(0x44c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 036B
        gbc.setState(0xd6c7, 0x7f2d, 0x71c0, 0x33ec, 0x8f57, 0xf71a, 0x0, 0x1);
        gbc.writeMem(0xd6c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0xd6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c7));
        EXPECT(0x35, gbc.readMem(0xd6c8));
        // CB 35 036C
        gbc.setState(0xc044, 0x1d26, 0x4790, 0x7ad6, 0xbf75, 0xd053, 0x1, 0x1);
        gbc.writeMem(0xc044, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0xc046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc044));
        EXPECT(0x35, gbc.readMem(0xc045));
        // CB 35 036D
        gbc.setState(0xc695, 0x96f0, 0x28a0, 0x3e6b, 0xd6f9, 0x940f, 0x0, 0x1);
        gbc.writeMem(0xc695, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc695));
        EXPECT(0x35, gbc.readMem(0xc696));
        // CB 35 036E
        gbc.setState(0x359, 0xc250, 0x9bf0, 0x8dfe, 0xb5e0, 0x4e59, 0x0, 0x0);
        gbc.writeMem(0x359, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0x35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 036F
        gbc.setState(0xec94, 0x1803, 0x7aa0, 0x5a44, 0xb02b, 0x829a, 0x0, 0x1);
        gbc.writeMem(0xec94, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1803, gbc.sp());
        EXPECT(0xec96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec94));
        EXPECT(0x35, gbc.readMem(0xec95));
        // CB 35 0370
        gbc.setState(0xbfb2, 0xd0c0, 0x9070, 0x6a82, 0xc7ad, 0x4913, 0x1, 0x1);
        gbc.writeMem(0xbfb2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd0c0, gbc.sp());
        EXPECT(0xbfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb2));
        EXPECT(0x35, gbc.readMem(0xbfb3));
        // CB 35 0371
        gbc.setState(0x69b7, 0xe328, 0x7620, 0x6efe, 0xe74, 0x7839, 0x0, 0x1);
        gbc.writeMem(0x69b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe328, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0372
        gbc.setState(0x76c8, 0x495a, 0x4840, 0xe3d2, 0xc5f1, 0xd4ec, 0x0, 0x1);
        gbc.writeMem(0x76c8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0x76ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0373
        gbc.setState(0x8644, 0xb383, 0xf380, 0xea05, 0x5e71, 0x12b2, 0x0, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb383, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8644));
        EXPECT(0x35, gbc.readMem(0x8645));
        // CB 35 0374
        gbc.setState(0x9603, 0x2da8, 0x3b00, 0xe2aa, 0xacbf, 0x282, 0x1, 0x1);
        gbc.writeMem(0x9603, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0x35, gbc.readMem(0x9604));
        // CB 35 0375
        gbc.setState(0x6e40, 0x9785, 0x9f40, 0xfcf3, 0x1723, 0xab13, 0x1, 0x1);
        gbc.writeMem(0x6e40, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9785, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0376
        gbc.setState(0xb519, 0xdc1d, 0x5c20, 0x7af5, 0x97ca, 0x59d5, 0x1, 0x1);
        gbc.writeMem(0xb519, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdc1d, gbc.sp());
        EXPECT(0xb51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb519));
        EXPECT(0x35, gbc.readMem(0xb51a));
        // CB 35 0377
        gbc.setState(0xaf74, 0x4230, 0x8260, 0x186f, 0x7a6e, 0x1a30, 0x1, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf74));
        EXPECT(0x35, gbc.readMem(0xaf75));
        // CB 35 0378
        gbc.setState(0xdbb0, 0xf5dd, 0x7f40, 0x15f2, 0x7ecb, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xdbb0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf5dd, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb0));
        EXPECT(0x35, gbc.readMem(0xdbb1));
        // CB 35 0379
        gbc.setState(0xbc98, 0xe8c0, 0xd4d0, 0xf36c, 0xaf1f, 0xe393, 0x1, 0x0);
        gbc.writeMem(0xbc98, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0xbc9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc98));
        EXPECT(0x35, gbc.readMem(0xbc99));
        // CB 35 037A
        gbc.setState(0x92bf, 0x326, 0x5530, 0xce85, 0x3197, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0x92bf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x92c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bf));
        EXPECT(0x35, gbc.readMem(0x92c0));
        // CB 35 037B
        gbc.setState(0x626c, 0x6f95, 0x8570, 0x1846, 0xf216, 0x76f, 0x1, 0x0);
        gbc.writeMem(0x626c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0x626e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 037C
        gbc.setState(0xef12, 0xb0a0, 0x8be0, 0x315f, 0x95b7, 0x1167, 0x1, 0x1);
        gbc.writeMem(0xef12, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb0a0, gbc.sp());
        EXPECT(0xef14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef12));
        EXPECT(0x35, gbc.readMem(0xef13));
        // CB 35 037D
        gbc.setState(0xb838, 0x8639, 0xc20, 0x1d03, 0xdd74, 0x75f7, 0x0, 0x1);
        gbc.writeMem(0xb838, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0xb83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb838));
        EXPECT(0x35, gbc.readMem(0xb839));
        // CB 35 037E
        gbc.setState(0x1320, 0xa079, 0x9340, 0x3e19, 0x125, 0xc596, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa079, gbc.sp());
        EXPECT(0x1322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 037F
        gbc.setState(0x3177, 0x2d78, 0x6bc0, 0xa73f, 0xf2fe, 0x5694, 0x0, 0x1);
        gbc.writeMem(0x3177, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0x3179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0380
        gbc.setState(0x6fde, 0xe6d, 0x5400, 0x5580, 0x6df7, 0x12a, 0x0, 0x0);
        gbc.writeMem(0x6fde, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe6d, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0381
        gbc.setState(0xa672, 0x9657, 0x9800, 0x76d3, 0x63f8, 0x96f2, 0x1, 0x0);
        gbc.writeMem(0xa672, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa672));
        EXPECT(0x35, gbc.readMem(0xa673));
        // CB 35 0382
        gbc.setState(0x23, 0x482b, 0x4ce0, 0xba89, 0x312b, 0x2eea, 0x1, 0x1);
        gbc.writeMem(0x23, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x482b, gbc.sp());
        EXPECT(0x25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0383
        gbc.setState(0x83b8, 0x46c1, 0xd560, 0x5788, 0x3deb, 0x453b, 0x1, 0x0);
        gbc.writeMem(0x83b8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x83ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b8));
        EXPECT(0x35, gbc.readMem(0x83b9));
        // CB 35 0384
        gbc.setState(0xd778, 0xb08d, 0x2ae0, 0xb6fe, 0xb40d, 0x6944, 0x0, 0x1);
        gbc.writeMem(0xd778, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0xd77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd778));
        EXPECT(0x35, gbc.readMem(0xd779));
        // CB 35 0385
        gbc.setState(0xa8b7, 0x2b22, 0x98f0, 0xf356, 0xc22a, 0xe597, 0x0, 0x0);
        gbc.writeMem(0xa8b7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2b22, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b7));
        EXPECT(0x35, gbc.readMem(0xa8b8));
        // CB 35 0386
        gbc.setState(0xbc1f, 0x551f, 0x6ce0, 0xf559, 0x11c5, 0xc802, 0x0, 0x0);
        gbc.writeMem(0xbc1f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x551f, gbc.sp());
        EXPECT(0xbc21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1f));
        EXPECT(0x35, gbc.readMem(0xbc20));
        // CB 35 0387
        gbc.setState(0xdd83, 0x145b, 0x82e0, 0x976b, 0xfc9b, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0xdd83, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0xdd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd83));
        EXPECT(0x35, gbc.readMem(0xdd84));
        // CB 35 0388
        gbc.setState(0x376c, 0xb345, 0x72a0, 0x6f60, 0x8bd1, 0xf1aa, 0x0, 0x0);
        gbc.writeMem(0x376c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb345, gbc.sp());
        EXPECT(0x376e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0389
        gbc.setState(0xb0d6, 0x2027, 0x21d0, 0x3944, 0xa4e, 0xace7, 0x0, 0x1);
        gbc.writeMem(0xb0d6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2027, gbc.sp());
        EXPECT(0xb0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d6));
        EXPECT(0x35, gbc.readMem(0xb0d7));
        // CB 35 038A
        gbc.setState(0x9af1, 0x9bf1, 0x54d0, 0x9adf, 0xa4bc, 0x370d, 0x1, 0x1);
        gbc.writeMem(0x9af1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0x9af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af1));
        EXPECT(0x35, gbc.readMem(0x9af2));
        // CB 35 038B
        gbc.setState(0x3f0e, 0x5466, 0xb3b0, 0xd53b, 0x404e, 0x9c5f, 0x0, 0x1);
        gbc.writeMem(0x3f0e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5466, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 038D
        gbc.setState(0x2391, 0xa9b6, 0xe2c0, 0x1585, 0x886, 0x30b4, 0x1, 0x0);
        gbc.writeMem(0x2391, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 038E
        gbc.setState(0x3c51, 0x764b, 0xd140, 0x1690, 0xd2c1, 0x95ce, 0x1, 0x1);
        gbc.writeMem(0x3c51, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x3c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 038F
        gbc.setState(0xbc91, 0x5706, 0xebc0, 0xbaa2, 0xf1e8, 0x6c16, 0x1, 0x0);
        gbc.writeMem(0xbc91, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5706, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc91));
        EXPECT(0x35, gbc.readMem(0xbc92));
        // CB 35 0391
        gbc.setState(0xd8dd, 0xd06, 0x3700, 0x48b8, 0x142c, 0xfc79, 0x0, 0x1);
        gbc.writeMem(0xd8dd, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0xd8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8dd));
        EXPECT(0x35, gbc.readMem(0xd8de));
        // CB 35 0392
        gbc.setState(0x6987, 0xf11a, 0x310, 0x2cd1, 0x23d4, 0x37b2, 0x0, 0x1);
        gbc.writeMem(0x6987, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf11a, gbc.sp());
        EXPECT(0x6989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0393
        gbc.setState(0x8b8d, 0xad37, 0x8c0, 0x2cbe, 0x971b, 0x19b8, 0x0, 0x1);
        gbc.writeMem(0x8b8d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x8b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8d));
        EXPECT(0x35, gbc.readMem(0x8b8e));
        // CB 35 0394
        gbc.setState(0xe3c7, 0x948e, 0xa1d0, 0xd2a0, 0x3798, 0x4003, 0x1, 0x1);
        gbc.writeMem(0xe3c7, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x948e, gbc.sp());
        EXPECT(0xe3c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c7));
        EXPECT(0x35, gbc.readMem(0xe3c8));
        // CB 35 0395
        gbc.setState(0x727e, 0xafe7, 0x4240, 0x349c, 0x854f, 0x227a, 0x0, 0x1);
        gbc.writeMem(0x727e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xafe7, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0396
        gbc.setState(0x91f4, 0xf0b1, 0xd5d0, 0x444a, 0x8400, 0x941, 0x0, 0x0);
        gbc.writeMem(0x91f4, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf0b1, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f4));
        EXPECT(0x35, gbc.readMem(0x91f5));
        // CB 35 0397
        gbc.setState(0xa49d, 0xad59, 0xc000, 0x395b, 0x5555, 0xa4e1, 0x1, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xad59, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0x35, gbc.readMem(0xa49e));
        // CB 35 0398
        gbc.setState(0x4906, 0xc56f, 0xb7c0, 0xcaff, 0x3fc3, 0x14d, 0x0, 0x0);
        gbc.writeMem(0x4906, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x4908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 0399
        gbc.setState(0x2bc3, 0x7ff2, 0x1b90, 0xe5bb, 0xba1e, 0x97dd, 0x0, 0x0);
        gbc.writeMem(0x2bc3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 039A
        gbc.setState(0x3f1b, 0xb656, 0x7e60, 0xfc82, 0xb51d, 0x9b7e, 0x1, 0x1);
        gbc.writeMem(0x3f1b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb656, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 039B
        gbc.setState(0x5742, 0xa0d4, 0xc500, 0x3fdc, 0xf22, 0x43db, 0x0, 0x1);
        gbc.writeMem(0x5742, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa0d4, gbc.sp());
        EXPECT(0x5744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 039C
        gbc.setState(0x66a3, 0x7137, 0x3d0, 0xcc0, 0x24c7, 0xd5c, 0x1, 0x1);
        gbc.writeMem(0x66a3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7137, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 039E
        gbc.setState(0x27f9, 0x4a89, 0xf170, 0xdb7, 0xff86, 0xb7fe, 0x0, 0x1);
        gbc.writeMem(0x27f9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x27fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 039F
        gbc.setState(0xed73, 0xf6cb, 0x86d0, 0x6f7d, 0xf1fa, 0xfe2e, 0x0, 0x0);
        gbc.writeMem(0xed73, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf6cb, gbc.sp());
        EXPECT(0xed75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed73));
        EXPECT(0x35, gbc.readMem(0xed74));
        // CB 35 03A0
        gbc.setState(0x54b1, 0x1c1c, 0x4810, 0x93eb, 0x96c, 0x7122, 0x1, 0x1);
        gbc.writeMem(0x54b1, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0x54b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A1
        gbc.setState(0x108b, 0xf00f, 0x6f80, 0x8835, 0x8f5f, 0x1015, 0x0, 0x1);
        gbc.writeMem(0x108b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf00f, gbc.sp());
        EXPECT(0x108d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A2
        gbc.setState(0xcb62, 0x79b6, 0x9de0, 0x9487, 0x52b1, 0x73f6, 0x0, 0x0);
        gbc.writeMem(0xcb62, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x79b6, gbc.sp());
        EXPECT(0xcb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb62));
        EXPECT(0x35, gbc.readMem(0xcb63));
        // CB 35 03A3
        gbc.setState(0x11d8, 0x48a6, 0x3c10, 0x73d5, 0x54dd, 0x32b1, 0x1, 0x0);
        gbc.writeMem(0x11d8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x48a6, gbc.sp());
        EXPECT(0x11da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A4
        gbc.setState(0xef51, 0x921a, 0xab80, 0x376, 0x73ec, 0xd618, 0x1, 0x1);
        gbc.writeMem(0xef51, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0xef53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef51));
        EXPECT(0x35, gbc.readMem(0xef52));
        // CB 35 03A5
        gbc.setState(0x6b28, 0x7bd3, 0x7b40, 0xef9c, 0xab9c, 0x4f6a, 0x0, 0x1);
        gbc.writeMem(0x6b28, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A6
        gbc.setState(0xd819, 0x572b, 0x1790, 0xb658, 0x256a, 0x5c4a, 0x1, 0x0);
        gbc.writeMem(0xd819, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x572b, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd819));
        EXPECT(0x35, gbc.readMem(0xd81a));
        // CB 35 03A7
        gbc.setState(0x719d, 0x5ad0, 0x9950, 0x9220, 0xc7b0, 0x462, 0x0, 0x1);
        gbc.writeMem(0x719d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x719f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A8
        gbc.setState(0x72dc, 0xa388, 0xb110, 0x3965, 0xe4f5, 0xcec5, 0x0, 0x0);
        gbc.writeMem(0x72dc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03A9
        gbc.setState(0x447d, 0x3f10, 0x8410, 0x5413, 0x5b9d, 0x43ff, 0x1, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3f10, gbc.sp());
        EXPECT(0x447f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03AA
        gbc.setState(0x41b2, 0xc5b6, 0x5070, 0xa6ab, 0x8a95, 0x1ebf, 0x1, 0x0);
        gbc.writeMem(0x41b2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc5b6, gbc.sp());
        EXPECT(0x41b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03AB
        gbc.setState(0x53a6, 0x4fe, 0xabc0, 0x6ff7, 0x27e1, 0xe14b, 0x1, 0x1);
        gbc.writeMem(0x53a6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4fe, gbc.sp());
        EXPECT(0x53a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03AD
        gbc.setState(0x9d10, 0x11c4, 0x92f0, 0x88dd, 0xffd7, 0xf435, 0x1, 0x1);
        gbc.writeMem(0x9d10, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d10));
        EXPECT(0x35, gbc.readMem(0x9d11));
        // CB 35 03AF
        gbc.setState(0x4bc5, 0x31a9, 0x6b20, 0xd896, 0x16ab, 0x1905, 0x0, 0x0);
        gbc.writeMem(0x4bc5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x31a9, gbc.sp());
        EXPECT(0x4bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03B0
        gbc.setState(0xc747, 0xa2d8, 0xeab0, 0x4c1d, 0x9ce4, 0xdaa4, 0x1, 0x1);
        gbc.writeMem(0xc747, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa2d8, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc747));
        EXPECT(0x35, gbc.readMem(0xc748));
        // CB 35 03B1
        gbc.setState(0x1598, 0x216a, 0x9d80, 0xb98d, 0xf61a, 0x57, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03B2
        gbc.setState(0x6e1f, 0x7758, 0xe750, 0xae3a, 0xd1b, 0x7c2b, 0x0, 0x1);
        gbc.writeMem(0x6e1f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0x6e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03B3
        gbc.setState(0x77e5, 0xe212, 0x7220, 0xebce, 0x8171, 0x9f2e, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe212, gbc.sp());
        EXPECT(0x77e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03B4
        gbc.setState(0x8134, 0x4fc0, 0x3c90, 0xcd24, 0xb5e8, 0xd941, 0x1, 0x1);
        gbc.writeMem(0x8134, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0x8136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8134));
        EXPECT(0x35, gbc.readMem(0x8135));
        // CB 35 03B5
        gbc.setState(0xd393, 0xbec1, 0x9960, 0x3a94, 0xc5ad, 0x532, 0x0, 0x0);
        gbc.writeMem(0xd393, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd393));
        EXPECT(0x35, gbc.readMem(0xd394));
        // CB 35 03B6
        gbc.setState(0x9f46, 0xee76, 0x84e0, 0xb9ef, 0x2587, 0xd11d, 0x1, 0x0);
        gbc.writeMem(0x9f46, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x9f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f46));
        EXPECT(0x35, gbc.readMem(0x9f47));
        // CB 35 03B7
        gbc.setState(0x64b5, 0x2a9f, 0x8a60, 0xbfc9, 0x78c7, 0x3fd6, 0x0, 0x1);
        gbc.writeMem(0x64b5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0x64b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03B8
        gbc.setState(0xd12c, 0xa5eb, 0x6a60, 0x8398, 0x66c7, 0xfe05, 0x1, 0x1);
        gbc.writeMem(0xd12c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa5eb, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12c));
        EXPECT(0x35, gbc.readMem(0xd12d));
        // CB 35 03B9
        gbc.setState(0x7f7e, 0xe692, 0x7800, 0xdcc6, 0x1426, 0xb8a4, 0x0, 0x0);
        gbc.writeMem(0x7f7e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe692, gbc.sp());
        EXPECT(0x7f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03BB
        gbc.setState(0xf20, 0x891f, 0xb0b0, 0x8fe4, 0x8f72, 0x9381, 0x1, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03BD
        gbc.setState(0x3f07, 0x59c4, 0x7b00, 0x19df, 0xb2bd, 0x1ea0, 0x0, 0x0);
        gbc.writeMem(0x3f07, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x59c4, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03BF
        gbc.setState(0x9abb, 0x9e46, 0x6990, 0x8946, 0xd209, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x9abb, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e46, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abb));
        EXPECT(0x35, gbc.readMem(0x9abc));
        // CB 35 03C0
        gbc.setState(0xa320, 0xe5fe, 0x81e0, 0x384d, 0x2ba0, 0x3725, 0x0, 0x0);
        gbc.writeMem(0xa320, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe5fe, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa320));
        EXPECT(0x35, gbc.readMem(0xa321));
        // CB 35 03C1
        gbc.setState(0xce67, 0x243a, 0x5a10, 0xf070, 0x19d8, 0x5403, 0x1, 0x0);
        gbc.writeMem(0xce67, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x243a, gbc.sp());
        EXPECT(0xce69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce67));
        EXPECT(0x35, gbc.readMem(0xce68));
        // CB 35 03C2
        gbc.setState(0xb64c, 0xae4b, 0xf450, 0x2d84, 0xe1f4, 0x2ae3, 0x1, 0x1);
        gbc.writeMem(0xb64c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0xb64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64c));
        EXPECT(0x35, gbc.readMem(0xb64d));
        // CB 35 03C3
        gbc.setState(0x9493, 0x5721, 0x5830, 0xfe18, 0xaa4d, 0xd590, 0x1, 0x1);
        gbc.writeMem(0x9493, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5721, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9493));
        EXPECT(0x35, gbc.readMem(0x9494));
        // CB 35 03C4
        gbc.setState(0x5da0, 0xe24e, 0x46e0, 0x215e, 0x99eb, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x5da0, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03C5
        gbc.setState(0x80f9, 0x7339, 0xc1b0, 0x5dde, 0x2eea, 0x4412, 0x0, 0x1);
        gbc.writeMem(0x80f9, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7339, gbc.sp());
        EXPECT(0x80fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f9));
        EXPECT(0x35, gbc.readMem(0x80fa));
        // CB 35 03C6
        gbc.setState(0xe0ff, 0x7237, 0xd120, 0xec08, 0x47ff, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0xe0ff, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7237, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ff));
        EXPECT(0x35, gbc.readMem(0xe100));
        // CB 35 03C8
        gbc.setState(0xcf23, 0x25b8, 0x27f0, 0x99be, 0x88c9, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0xcf23, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x25b8, gbc.sp());
        EXPECT(0xcf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf23));
        EXPECT(0x35, gbc.readMem(0xcf24));
        // CB 35 03C9
        gbc.setState(0x9730, 0xee04, 0xc7c0, 0x9598, 0xf54d, 0xe22d, 0x1, 0x1);
        gbc.writeMem(0x9730, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9730));
        EXPECT(0x35, gbc.readMem(0x9731));
        // CB 35 03CA
        gbc.setState(0xb133, 0xf0de, 0x2e40, 0x1161, 0x15fa, 0x3f4f, 0x1, 0x1);
        gbc.writeMem(0xb133, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf0de, gbc.sp());
        EXPECT(0xb135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb133));
        EXPECT(0x35, gbc.readMem(0xb134));
        // CB 35 03CB
        gbc.setState(0x45f3, 0xe530, 0x6460, 0xa91e, 0xf978, 0x60bf, 0x1, 0x0);
        gbc.writeMem(0x45f3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe530, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03CC
        gbc.setState(0xd883, 0xc02, 0x6460, 0xe429, 0x3172, 0xa99a, 0x0, 0x1);
        gbc.writeMem(0xd883, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc02, gbc.sp());
        EXPECT(0xd885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd883));
        EXPECT(0x35, gbc.readMem(0xd884));
        // CB 35 03CD
        gbc.setState(0xb67c, 0x3700, 0x92a0, 0xe156, 0xb5f9, 0x4fbe, 0x1, 0x1);
        gbc.writeMem(0xb67c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3700, gbc.sp());
        EXPECT(0xb67e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67c));
        EXPECT(0x35, gbc.readMem(0xb67d));
        // CB 35 03CE
        gbc.setState(0x8807, 0xc0ec, 0xad90, 0x962b, 0x60d6, 0xd478, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc0ec, gbc.sp());
        EXPECT(0x8809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8807));
        EXPECT(0x35, gbc.readMem(0x8808));
        // CB 35 03CF
        gbc.setState(0x438c, 0xfd0, 0x8d20, 0x73a0, 0x19a2, 0xc71d, 0x1, 0x1);
        gbc.writeMem(0x438c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfd0, gbc.sp());
        EXPECT(0x438e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03D0
        gbc.setState(0xb96c, 0xc63f, 0x36a0, 0xf94b, 0x9fd7, 0x5753, 0x1, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc63f, gbc.sp());
        EXPECT(0xb96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96c));
        EXPECT(0x35, gbc.readMem(0xb96d));
        // CB 35 03D1
        gbc.setState(0x6274, 0x504, 0xade0, 0xd394, 0xe856, 0xafbd, 0x1, 0x1);
        gbc.writeMem(0x6274, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03D3
        gbc.setState(0x8970, 0xa119, 0xcb70, 0xaa09, 0x1313, 0x3b5a, 0x0, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0x35, gbc.readMem(0x8971));
        // CB 35 03D4
        gbc.setState(0x8415, 0x9097, 0x14b0, 0xbf62, 0xe3b6, 0x3536, 0x1, 0x1);
        gbc.writeMem(0x8415, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9097, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8415));
        EXPECT(0x35, gbc.readMem(0x8416));
        // CB 35 03D5
        gbc.setState(0xc4a8, 0xc13a, 0x43d0, 0x8c47, 0x85b9, 0xb7d4, 0x0, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0xc4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a8));
        EXPECT(0x35, gbc.readMem(0xc4a9));
        // CB 35 03D6
        gbc.setState(0x102e, 0x4cdd, 0x8950, 0xaf04, 0x6135, 0x8307, 0x0, 0x0);
        gbc.writeMem(0x102e, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x1030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03D7
        gbc.setState(0xd635, 0x4888, 0x7020, 0xf4, 0x80f9, 0xd512, 0x0, 0x0);
        gbc.writeMem(0xd635, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4888, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd635));
        EXPECT(0x35, gbc.readMem(0xd636));
        // CB 35 03D8
        gbc.setState(0x20f, 0x4b63, 0xfb10, 0x614e, 0x68cd, 0x5c6c, 0x0, 0x1);
        gbc.writeMem(0x20f, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03D9
        gbc.setState(0xb044, 0x3a0c, 0xabe0, 0x3973, 0xb396, 0xb076, 0x1, 0x1);
        gbc.writeMem(0xb044, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3a0c, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb044));
        EXPECT(0x35, gbc.readMem(0xb045));
        // CB 35 03DA
        gbc.setState(0xc82b, 0x7d79, 0x940, 0x7b72, 0xd1f, 0xecf6, 0x0, 0x0);
        gbc.writeMem(0xc82b, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7d79, gbc.sp());
        EXPECT(0xc82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82b));
        EXPECT(0x35, gbc.readMem(0xc82c));
        // CB 35 03DB
        gbc.setState(0x1b01, 0xe576, 0x5440, 0xa48, 0xa7fd, 0x8d82, 0x0, 0x1);
        gbc.writeMem(0x1b01, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0x1b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03DC
        gbc.setState(0x76b2, 0xc0c1, 0x1f80, 0x4d35, 0x944a, 0xcb4e, 0x0, 0x1);
        gbc.writeMem(0x76b2, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03DD
        gbc.setState(0x1cf6, 0xd5fd, 0x4bb0, 0x7489, 0xde24, 0x3725, 0x1, 0x0);
        gbc.writeMem(0x1cf6, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd5fd, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03DE
        gbc.setState(0x5803, 0xc06b, 0xad50, 0x75ec, 0xb568, 0x1b4b, 0x0, 0x1);
        gbc.writeMem(0x5803, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc06b, gbc.sp());
        EXPECT(0x5805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03DF
        gbc.setState(0x66aa, 0x9633, 0xfd10, 0x8a6e, 0xcc55, 0xa71d, 0x1, 0x1);
        gbc.writeMem(0x66aa, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9633, gbc.sp());
        EXPECT(0x66ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03E0
        gbc.setState(0xb9f3, 0x4cc0, 0x8e30, 0x8dba, 0xbff3, 0x9656, 0x1, 0x1);
        gbc.writeMem(0xb9f3, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4cc0, gbc.sp());
        EXPECT(0xb9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f3));
        EXPECT(0x35, gbc.readMem(0xb9f4));
        // CB 35 03E1
        gbc.setState(0x6d69, 0x2810, 0x1bc0, 0x93f9, 0xc58f, 0x1b8e, 0x1, 0x0);
        gbc.writeMem(0x6d69, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x6d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03E2
        gbc.setState(0x7733, 0x38bd, 0xb780, 0x2b5c, 0xf261, 0x2b03, 0x0, 0x1);
        gbc.writeMem(0x7733, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x38bd, gbc.sp());
        EXPECT(0x7735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03E3
        gbc.setState(0x30a5, 0xd396, 0x55a0, 0xc82a, 0x29e0, 0xeb45, 0x0, 0x0);
        gbc.writeMem(0x30a5, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03E4
        gbc.setState(0x3ebf, 0x4a0d, 0x14a0, 0x983f, 0x7d5a, 0x44c0, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 35 03E5
        gbc.setState(0xa5cc, 0x4df7, 0xeb90, 0xe174, 0xd4a0, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0xa5cc, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cc));
        EXPECT(0x35, gbc.readMem(0xa5cd));
        // CB 35 03E6
        gbc.setState(0xd523, 0xf8ca, 0xbcd0, 0x9987, 0x23c3, 0xe47, 0x1, 0x1);
        gbc.writeMem(0xd523, { 0xcb, 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0xd525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd523));
        EXPECT(0x35, gbc.readMem(0xd524));
    }
