#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_74)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_74) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 74 0000
        gbc.setState(0xb547, 0x9a2d, 0x4710, 0x4017, 0x15e9, 0x3df4, 0x1, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0xb549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb547), 0xcb);
        EXPECT(gbc.readMem(0xb548), 0x74);
        // CB 74 0001
        gbc.setState(0x93c7, 0x14fa, 0x9900, 0x4533, 0x74e9, 0xfab8, 0x0, 0x0);
        gbc.writeMem(0x93c7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x14fa);
        EXPECT(gbc.pc(), 0x93c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c7), 0xcb);
        EXPECT(gbc.readMem(0x93c8), 0x74);
        // CB 74 0002
        gbc.setState(0x553e, 0x5643, 0x2c30, 0x4e79, 0x72df, 0x2f12, 0x1, 0x0);
        gbc.writeMem(0x553e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5643);
        EXPECT(gbc.pc(), 0x5540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0003
        gbc.setState(0x2887, 0xe8ad, 0x0, 0x852e, 0x8075, 0x8cd7, 0x1, 0x0);
        gbc.writeMem(0x2887, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe8ad);
        EXPECT(gbc.pc(), 0x2889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0004
        gbc.setState(0x13b9, 0x6f53, 0x3220, 0xeac6, 0xfc91, 0x7dac, 0x0, 0x0);
        gbc.writeMem(0x13b9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6f53);
        EXPECT(gbc.pc(), 0x13bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0005
        gbc.setState(0x2e5f, 0xab7f, 0xc3e0, 0xec7, 0x6db7, 0x5b1b, 0x1, 0x0);
        gbc.writeMem(0x2e5f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xab7f);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0006
        gbc.setState(0x411e, 0x6cbe, 0x7020, 0xca0a, 0xf312, 0x8d8a, 0x1, 0x1);
        gbc.writeMem(0x411e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6cbe);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0007
        gbc.setState(0xde73, 0x3549, 0x1ba0, 0xf75e, 0x6a04, 0xdd30, 0x1, 0x0);
        gbc.writeMem(0xde73, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0xde75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde73), 0xcb);
        EXPECT(gbc.readMem(0xde74), 0x74);
        // CB 74 0008
        gbc.setState(0x93c2, 0x8082, 0x1bb0, 0x2cc3, 0x29c0, 0x6202, 0x1, 0x1);
        gbc.writeMem(0x93c2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8082);
        EXPECT(gbc.pc(), 0x93c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c2), 0xcb);
        EXPECT(gbc.readMem(0x93c3), 0x74);
        // CB 74 0009
        gbc.setState(0x43b0, 0x9115, 0x6640, 0x42da, 0x550c, 0xd7b0, 0x1, 0x1);
        gbc.writeMem(0x43b0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9115);
        EXPECT(gbc.pc(), 0x43b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 000B
        gbc.setState(0x41d2, 0x568f, 0x7d80, 0x7210, 0xaee8, 0xc0ab, 0x1, 0x0);
        gbc.writeMem(0x41d2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x568f);
        EXPECT(gbc.pc(), 0x41d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 000C
        gbc.setState(0xc7db, 0x46f3, 0xf7a0, 0xfe39, 0x872e, 0x1698, 0x0, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x46f3);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7db), 0xcb);
        EXPECT(gbc.readMem(0xc7dc), 0x74);
        // CB 74 000E
        gbc.setState(0x1e50, 0x4c9, 0x8600, 0xfa7f, 0x3752, 0x25c9, 0x0, 0x1);
        gbc.writeMem(0x1e50, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4c9);
        EXPECT(gbc.pc(), 0x1e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 000F
        gbc.setState(0x67b1, 0x802c, 0x15f0, 0x4026, 0x2d27, 0x208, 0x1, 0x1);
        gbc.writeMem(0x67b1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x802c);
        EXPECT(gbc.pc(), 0x67b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0010
        gbc.setState(0xb0c7, 0x1b43, 0xbf60, 0xf836, 0x42a9, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0xb0c7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1b43);
        EXPECT(gbc.pc(), 0xb0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c7), 0xcb);
        EXPECT(gbc.readMem(0xb0c8), 0x74);
        // CB 74 0011
        gbc.setState(0x36b3, 0xc688, 0x9bb0, 0x826d, 0xe5a3, 0x51ce, 0x0, 0x0);
        gbc.writeMem(0x36b3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc688);
        EXPECT(gbc.pc(), 0x36b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0012
        gbc.setState(0xd293, 0x197e, 0xb960, 0xd92a, 0x2adb, 0xa13e, 0x0, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x197e);
        EXPECT(gbc.pc(), 0xd295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd293), 0xcb);
        EXPECT(gbc.readMem(0xd294), 0x74);
        // CB 74 0013
        gbc.setState(0xb7d6, 0xde0d, 0xc1b0, 0xc387, 0xcfd2, 0x54f8, 0x0, 0x0);
        gbc.writeMem(0xb7d6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xde0d);
        EXPECT(gbc.pc(), 0xb7d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d6), 0xcb);
        EXPECT(gbc.readMem(0xb7d7), 0x74);
        // CB 74 0014
        gbc.setState(0x7b2f, 0x7836, 0x1af0, 0x7fe, 0xba6b, 0x1c8a, 0x0, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7836);
        EXPECT(gbc.pc(), 0x7b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0015
        gbc.setState(0x814, 0x7219, 0x9ea0, 0xa26d, 0xc9a0, 0x718, 0x0, 0x0);
        gbc.writeMem(0x814, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0016
        gbc.setState(0xde44, 0x491e, 0x8480, 0x82bf, 0xdd02, 0xe0a3, 0x1, 0x0);
        gbc.writeMem(0xde44, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x491e);
        EXPECT(gbc.pc(), 0xde46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde44), 0xcb);
        EXPECT(gbc.readMem(0xde45), 0x74);
        // CB 74 0017
        gbc.setState(0x3713, 0x298f, 0xc090, 0xe68f, 0x456d, 0x285, 0x1, 0x0);
        gbc.writeMem(0x3713, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x298f);
        EXPECT(gbc.pc(), 0x3715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0018
        gbc.setState(0xa7d3, 0x2187, 0x6c30, 0x1823, 0xd42, 0xfe81, 0x1, 0x1);
        gbc.writeMem(0xa7d3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2187);
        EXPECT(gbc.pc(), 0xa7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d3), 0xcb);
        EXPECT(gbc.readMem(0xa7d4), 0x74);
        // CB 74 0019
        gbc.setState(0xeaf5, 0x9b1, 0x1190, 0xa99d, 0x48bf, 0xf0ce, 0x0, 0x0);
        gbc.writeMem(0xeaf5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9b1);
        EXPECT(gbc.pc(), 0xeaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf5), 0xcb);
        EXPECT(gbc.readMem(0xeaf6), 0x74);
        // CB 74 001A
        gbc.setState(0x4a20, 0x477, 0x54c0, 0x493e, 0x2b34, 0x8dc4, 0x1, 0x1);
        gbc.writeMem(0x4a20, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x477);
        EXPECT(gbc.pc(), 0x4a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 001B
        gbc.setState(0xa02c, 0x6043, 0x49c0, 0x5e32, 0xf158, 0x7d4, 0x1, 0x1);
        gbc.writeMem(0xa02c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6043);
        EXPECT(gbc.pc(), 0xa02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02c), 0xcb);
        EXPECT(gbc.readMem(0xa02d), 0x74);
        // CB 74 001C
        gbc.setState(0x9139, 0xdb4d, 0x84b0, 0x1477, 0x337, 0x1441, 0x1, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdb4d);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9139), 0xcb);
        EXPECT(gbc.readMem(0x913a), 0x74);
        // CB 74 001D
        gbc.setState(0xe08c, 0xbe7f, 0xf370, 0xe2bd, 0x2f17, 0x7bb, 0x0, 0x0);
        gbc.writeMem(0xe08c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbe7f);
        EXPECT(gbc.pc(), 0xe08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08c), 0xcb);
        EXPECT(gbc.readMem(0xe08d), 0x74);
        // CB 74 001E
        gbc.setState(0xb05c, 0x6fbf, 0xbd0, 0xcee, 0x31c8, 0x2998, 0x0, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6fbf);
        EXPECT(gbc.pc(), 0xb05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05c), 0xcb);
        EXPECT(gbc.readMem(0xb05d), 0x74);
        // CB 74 001F
        gbc.setState(0xe30f, 0xe15f, 0x50a0, 0x4dee, 0x5731, 0x91b8, 0x0, 0x1);
        gbc.writeMem(0xe30f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe15f);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30f), 0xcb);
        EXPECT(gbc.readMem(0xe310), 0x74);
        // CB 74 0020
        gbc.setState(0x1c8a, 0x9ec4, 0x5140, 0x4322, 0xeaa6, 0x5abd, 0x1, 0x1);
        gbc.writeMem(0x1c8a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9ec4);
        EXPECT(gbc.pc(), 0x1c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0021
        gbc.setState(0x6549, 0x32a8, 0x18c0, 0xa7cf, 0xae77, 0x6311, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x32a8);
        EXPECT(gbc.pc(), 0x654b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0022
        gbc.setState(0x2407, 0x4688, 0x5500, 0x50e0, 0xec20, 0x1d10, 0x0, 0x0);
        gbc.writeMem(0x2407, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4688);
        EXPECT(gbc.pc(), 0x2409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0023
        gbc.setState(0x9716, 0x6493, 0x3df0, 0x2a2e, 0x4c28, 0xacfa, 0x1, 0x1);
        gbc.writeMem(0x9716, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6493);
        EXPECT(gbc.pc(), 0x9718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9716), 0xcb);
        EXPECT(gbc.readMem(0x9717), 0x74);
        // CB 74 0024
        gbc.setState(0x81ed, 0x4c4e, 0xf2f0, 0x43cf, 0x62f8, 0xdc07, 0x1, 0x0);
        gbc.writeMem(0x81ed, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4c4e);
        EXPECT(gbc.pc(), 0x81ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ed), 0xcb);
        EXPECT(gbc.readMem(0x81ee), 0x74);
        // CB 74 0025
        gbc.setState(0xafee, 0xc3cd, 0xffa0, 0xcff0, 0x2e03, 0x9bec, 0x0, 0x1);
        gbc.writeMem(0xafee, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc3cd);
        EXPECT(gbc.pc(), 0xaff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafee), 0xcb);
        EXPECT(gbc.readMem(0xafef), 0x74);
        // CB 74 0026
        gbc.setState(0x371f, 0x7c5f, 0x6ae0, 0x5f7c, 0xcff1, 0x4f1b, 0x0, 0x0);
        gbc.writeMem(0x371f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7c5f);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0027
        gbc.setState(0x4ea4, 0xbcd3, 0xb890, 0x8f4f, 0x9a93, 0x6582, 0x0, 0x0);
        gbc.writeMem(0x4ea4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbcd3);
        EXPECT(gbc.pc(), 0x4ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0028
        gbc.setState(0x355a, 0x875b, 0xff0, 0x3b2f, 0x638, 0x4ac7, 0x1, 0x1);
        gbc.writeMem(0x355a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x875b);
        EXPECT(gbc.pc(), 0x355c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0029
        gbc.setState(0xcd5c, 0x6b79, 0x21c0, 0x9b86, 0xf5e2, 0x7810, 0x0, 0x1);
        gbc.writeMem(0xcd5c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6b79);
        EXPECT(gbc.pc(), 0xcd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5c), 0xcb);
        EXPECT(gbc.readMem(0xcd5d), 0x74);
        // CB 74 002A
        gbc.setState(0x588e, 0xd0d3, 0x5950, 0x10b2, 0x2a1d, 0xd09f, 0x0, 0x0);
        gbc.writeMem(0x588e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd0d3);
        EXPECT(gbc.pc(), 0x5890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 002B
        gbc.setState(0x41c4, 0xdffe, 0xa760, 0x8132, 0x72dd, 0xebb1, 0x1, 0x1);
        gbc.writeMem(0x41c4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdffe);
        EXPECT(gbc.pc(), 0x41c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 002C
        gbc.setState(0x6e4e, 0x13a4, 0x76a0, 0xe0d1, 0x5bc1, 0x67fd, 0x1, 0x1);
        gbc.writeMem(0x6e4e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x13a4);
        EXPECT(gbc.pc(), 0x6e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 002D
        gbc.setState(0xe8a1, 0x360f, 0xe8c0, 0x50e0, 0x9638, 0xc0ec, 0x0, 0x0);
        gbc.writeMem(0xe8a1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x360f);
        EXPECT(gbc.pc(), 0xe8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a1), 0xcb);
        EXPECT(gbc.readMem(0xe8a2), 0x74);
        // CB 74 002E
        gbc.setState(0x2ed0, 0x987, 0x6450, 0x8886, 0x3a94, 0xadd3, 0x1, 0x1);
        gbc.writeMem(0x2ed0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x987);
        EXPECT(gbc.pc(), 0x2ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 002F
        gbc.setState(0x60f3, 0x26ee, 0x8500, 0x4, 0x2659, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0x60f3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0030
        gbc.setState(0xec7c, 0x51ba, 0x7010, 0x88ef, 0xd8d8, 0x424c, 0x0, 0x0);
        gbc.writeMem(0xec7c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x51ba);
        EXPECT(gbc.pc(), 0xec7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7c), 0xcb);
        EXPECT(gbc.readMem(0xec7d), 0x74);
        // CB 74 0031
        gbc.setState(0xdaf9, 0x9842, 0xa0b0, 0xf22c, 0xf2d, 0x593a, 0x0, 0x0);
        gbc.writeMem(0xdaf9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9842);
        EXPECT(gbc.pc(), 0xdafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf9), 0xcb);
        EXPECT(gbc.readMem(0xdafa), 0x74);
        // CB 74 0032
        gbc.setState(0xe012, 0x7f04, 0x4a00, 0x56fc, 0x6a91, 0x35bd, 0x0, 0x0);
        gbc.writeMem(0xe012, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7f04);
        EXPECT(gbc.pc(), 0xe014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe012), 0xcb);
        EXPECT(gbc.readMem(0xe013), 0x74);
        // CB 74 0034
        gbc.setState(0x3557, 0x8143, 0xda60, 0x96ad, 0x98a6, 0xd154, 0x1, 0x0);
        gbc.writeMem(0x3557, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8143);
        EXPECT(gbc.pc(), 0x3559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0036
        gbc.setState(0xa3f8, 0xe3c1, 0x5050, 0xb756, 0xd16d, 0xaf8a, 0x1, 0x0);
        gbc.writeMem(0xa3f8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe3c1);
        EXPECT(gbc.pc(), 0xa3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f8), 0xcb);
        EXPECT(gbc.readMem(0xa3f9), 0x74);
        // CB 74 0037
        gbc.setState(0xddc7, 0x53d1, 0x4680, 0xe5b7, 0x7673, 0x5d4c, 0x0, 0x0);
        gbc.writeMem(0xddc7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x53d1);
        EXPECT(gbc.pc(), 0xddc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc7), 0xcb);
        EXPECT(gbc.readMem(0xddc8), 0x74);
        // CB 74 0038
        gbc.setState(0xefbf, 0xc2a5, 0xedf0, 0x3e0c, 0x92e0, 0xa051, 0x1, 0x0);
        gbc.writeMem(0xefbf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc2a5);
        EXPECT(gbc.pc(), 0xefc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbf), 0xcb);
        EXPECT(gbc.readMem(0xefc0), 0x74);
        // CB 74 0039
        gbc.setState(0xc219, 0x94ba, 0xee30, 0xff39, 0x3303, 0xd70e, 0x0, 0x0);
        gbc.writeMem(0xc219, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x94ba);
        EXPECT(gbc.pc(), 0xc21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc219), 0xcb);
        EXPECT(gbc.readMem(0xc21a), 0x74);
        // CB 74 003A
        gbc.setState(0x2e51, 0xb95e, 0xb520, 0x516f, 0x596e, 0x8732, 0x1, 0x1);
        gbc.writeMem(0x2e51, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb95e);
        EXPECT(gbc.pc(), 0x2e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 003B
        gbc.setState(0x8f39, 0x9cd8, 0xbd30, 0x9f8f, 0x1335, 0xf252, 0x1, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9cd8);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0x74);
        // CB 74 003C
        gbc.setState(0x6661, 0x5e25, 0x8a10, 0xc196, 0x33c1, 0x536d, 0x1, 0x0);
        gbc.writeMem(0x6661, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5e25);
        EXPECT(gbc.pc(), 0x6663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 003D
        gbc.setState(0x686d, 0xfb83, 0x4820, 0x149b, 0xb072, 0xa2f4, 0x1, 0x1);
        gbc.writeMem(0x686d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfb83);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 003E
        gbc.setState(0x890b, 0xa813, 0xcdf0, 0x96d6, 0x3fba, 0xb506, 0x1, 0x0);
        gbc.writeMem(0x890b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa813);
        EXPECT(gbc.pc(), 0x890d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890b), 0xcb);
        EXPECT(gbc.readMem(0x890c), 0x74);
        // CB 74 003F
        gbc.setState(0xd3b2, 0x1838, 0x5010, 0x5c0c, 0xe003, 0x7209, 0x0, 0x1);
        gbc.writeMem(0xd3b2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1838);
        EXPECT(gbc.pc(), 0xd3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b2), 0xcb);
        EXPECT(gbc.readMem(0xd3b3), 0x74);
        // CB 74 0040
        gbc.setState(0xb99c, 0x3159, 0xbc80, 0xde1a, 0xc039, 0x1dd6, 0x0, 0x0);
        gbc.writeMem(0xb99c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3159);
        EXPECT(gbc.pc(), 0xb99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99c), 0xcb);
        EXPECT(gbc.readMem(0xb99d), 0x74);
        // CB 74 0041
        gbc.setState(0xa93a, 0xfb4, 0xee60, 0xa4a0, 0xf506, 0xfe3a, 0x1, 0x1);
        gbc.writeMem(0xa93a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfb4);
        EXPECT(gbc.pc(), 0xa93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93a), 0xcb);
        EXPECT(gbc.readMem(0xa93b), 0x74);
        // CB 74 0042
        gbc.setState(0x3822, 0xbe3c, 0xad60, 0x4adc, 0xef6, 0xa2d1, 0x0, 0x0);
        gbc.writeMem(0x3822, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbe3c);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0044
        gbc.setState(0xdc7b, 0x3651, 0x91d0, 0x7189, 0xb98, 0x45d, 0x1, 0x1);
        gbc.writeMem(0xdc7b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3651);
        EXPECT(gbc.pc(), 0xdc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7b), 0xcb);
        EXPECT(gbc.readMem(0xdc7c), 0x74);
        // CB 74 0045
        gbc.setState(0xcb71, 0x4951, 0xd80, 0x2ac5, 0x7a6f, 0xd2d, 0x1, 0x1);
        gbc.writeMem(0xcb71, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4951);
        EXPECT(gbc.pc(), 0xcb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb71), 0xcb);
        EXPECT(gbc.readMem(0xcb72), 0x74);
        // CB 74 0046
        gbc.setState(0x15b2, 0xcb87, 0x1be0, 0x237a, 0xc768, 0x539f, 0x1, 0x0);
        gbc.writeMem(0x15b2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcb87);
        EXPECT(gbc.pc(), 0x15b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0047
        gbc.setState(0xd28c, 0x3752, 0xcda0, 0x476e, 0x8c84, 0xc2b5, 0x1, 0x0);
        gbc.writeMem(0xd28c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3752);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28c), 0xcb);
        EXPECT(gbc.readMem(0xd28d), 0x74);
        // CB 74 0048
        gbc.setState(0x1bc4, 0xc968, 0xc410, 0x9c76, 0x3fc2, 0xcad, 0x0, 0x0);
        gbc.writeMem(0x1bc4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x1bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0049
        gbc.setState(0xd8a4, 0x1edf, 0x2e20, 0xbc10, 0xc480, 0x7c, 0x0, 0x1);
        gbc.writeMem(0xd8a4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1edf);
        EXPECT(gbc.pc(), 0xd8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a4), 0xcb);
        EXPECT(gbc.readMem(0xd8a5), 0x74);
        // CB 74 004A
        gbc.setState(0xa0d5, 0xc858, 0x8550, 0xb729, 0x6dd8, 0x51b0, 0x0, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc858);
        EXPECT(gbc.pc(), 0xa0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d5), 0xcb);
        EXPECT(gbc.readMem(0xa0d6), 0x74);
        // CB 74 004B
        gbc.setState(0xa461, 0x9d79, 0x6280, 0x3005, 0x731e, 0x6cfd, 0x0, 0x0);
        gbc.writeMem(0xa461, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9d79);
        EXPECT(gbc.pc(), 0xa463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa461), 0xcb);
        EXPECT(gbc.readMem(0xa462), 0x74);
        // CB 74 004C
        gbc.setState(0x7c9f, 0x29db, 0xadf0, 0xf012, 0xc274, 0x3f47, 0x1, 0x0);
        gbc.writeMem(0x7c9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x29db);
        EXPECT(gbc.pc(), 0x7ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 004D
        gbc.setState(0xb2b, 0xde8c, 0x81b0, 0xb562, 0x1820, 0x657c, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xde8c);
        EXPECT(gbc.pc(), 0xb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 004E
        gbc.setState(0xbdab, 0xd50, 0xc600, 0x7894, 0xd7c3, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xbdab, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd50);
        EXPECT(gbc.pc(), 0xbdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdab), 0xcb);
        EXPECT(gbc.readMem(0xbdac), 0x74);
        // CB 74 004F
        gbc.setState(0xc27a, 0x905, 0xca40, 0x8d72, 0x57fa, 0x261b, 0x0, 0x0);
        gbc.writeMem(0xc27a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x905);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27a), 0xcb);
        EXPECT(gbc.readMem(0xc27b), 0x74);
        // CB 74 0051
        gbc.setState(0xb59d, 0x1bb7, 0x97b0, 0x48ab, 0x4710, 0xa14d, 0x1, 0x0);
        gbc.writeMem(0xb59d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1bb7);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59d), 0xcb);
        EXPECT(gbc.readMem(0xb59e), 0x74);
        // CB 74 0052
        gbc.setState(0xc480, 0xb277, 0x11c0, 0xb4f0, 0x750e, 0x8ebe, 0x1, 0x1);
        gbc.writeMem(0xc480, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb277);
        EXPECT(gbc.pc(), 0xc482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc480), 0xcb);
        EXPECT(gbc.readMem(0xc481), 0x74);
        // CB 74 0053
        gbc.setState(0xe4b1, 0xb722, 0x7d00, 0x5314, 0x92f7, 0x8351, 0x0, 0x1);
        gbc.writeMem(0xe4b1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb722);
        EXPECT(gbc.pc(), 0xe4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b1), 0xcb);
        EXPECT(gbc.readMem(0xe4b2), 0x74);
        // CB 74 0054
        gbc.setState(0x8904, 0x6a97, 0x6dc0, 0x82b6, 0x989d, 0xf3bc, 0x0, 0x0);
        gbc.writeMem(0x8904, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6a97);
        EXPECT(gbc.pc(), 0x8906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8904), 0xcb);
        EXPECT(gbc.readMem(0x8905), 0x74);
        // CB 74 0055
        gbc.setState(0x49c9, 0x7b4a, 0xe490, 0xc83, 0xa258, 0x4565, 0x1, 0x1);
        gbc.writeMem(0x49c9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0x49cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0056
        gbc.setState(0x9a2c, 0x7600, 0xc420, 0x340f, 0x400e, 0xd223, 0x0, 0x1);
        gbc.writeMem(0x9a2c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7600);
        EXPECT(gbc.pc(), 0x9a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2c), 0xcb);
        EXPECT(gbc.readMem(0x9a2d), 0x74);
        // CB 74 0057
        gbc.setState(0xe7fe, 0x9895, 0xacd0, 0x6b4a, 0xf90b, 0x4ac5, 0x1, 0x0);
        gbc.writeMem(0xe7fe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9895);
        EXPECT(gbc.pc(), 0xe800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fe), 0xcb);
        EXPECT(gbc.readMem(0xe7ff), 0x74);
        // CB 74 0058
        gbc.setState(0x4946, 0x1e62, 0x4750, 0xd2ad, 0x284e, 0xe1e2, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1e62);
        EXPECT(gbc.pc(), 0x4948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0059
        gbc.setState(0x6830, 0xe9e2, 0x4fb0, 0xc9ad, 0xe41b, 0xd4c1, 0x1, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0x6832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 005A
        gbc.setState(0x171f, 0x6ff0, 0xe7e0, 0xf6f9, 0x50d5, 0xf1ae, 0x1, 0x1);
        gbc.writeMem(0x171f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6ff0);
        EXPECT(gbc.pc(), 0x1721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 005B
        gbc.setState(0xd994, 0x72c6, 0x720, 0x9a18, 0xaea5, 0xd652, 0x1, 0x1);
        gbc.writeMem(0xd994, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x72c6);
        EXPECT(gbc.pc(), 0xd996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd994), 0xcb);
        EXPECT(gbc.readMem(0xd995), 0x74);
        // CB 74 005C
        gbc.setState(0xa286, 0x9f7a, 0xee80, 0x5d65, 0x9670, 0x970e, 0x0, 0x0);
        gbc.writeMem(0xa286, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9f7a);
        EXPECT(gbc.pc(), 0xa288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa286), 0xcb);
        EXPECT(gbc.readMem(0xa287), 0x74);
        // CB 74 005D
        gbc.setState(0x3266, 0x4bc2, 0x5200, 0xa085, 0xe877, 0xb191, 0x1, 0x0);
        gbc.writeMem(0x3266, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4bc2);
        EXPECT(gbc.pc(), 0x3268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 005E
        gbc.setState(0x2080, 0x188b, 0x2150, 0x45fc, 0xc24c, 0x7674, 0x0, 0x0);
        gbc.writeMem(0x2080, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x188b);
        EXPECT(gbc.pc(), 0x2082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 005F
        gbc.setState(0xe487, 0x4147, 0x45d0, 0xdb56, 0x5891, 0xcb86, 0x1, 0x0);
        gbc.writeMem(0xe487, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4147);
        EXPECT(gbc.pc(), 0xe489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe487), 0xcb);
        EXPECT(gbc.readMem(0xe488), 0x74);
        // CB 74 0060
        gbc.setState(0x791e, 0xe8f7, 0x1dc0, 0x5b55, 0x75fd, 0x3070, 0x0, 0x1);
        gbc.writeMem(0x791e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe8f7);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0061
        gbc.setState(0x71f, 0x2431, 0x3ed0, 0xbd97, 0x6cde, 0x6ae0, 0x0, 0x1);
        gbc.writeMem(0x71f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0x721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0062
        gbc.setState(0xaf6d, 0x56eb, 0x5f40, 0x7e16, 0x81ff, 0x5900, 0x0, 0x0);
        gbc.writeMem(0xaf6d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x56eb);
        EXPECT(gbc.pc(), 0xaf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6d), 0xcb);
        EXPECT(gbc.readMem(0xaf6e), 0x74);
        // CB 74 0063
        gbc.setState(0x432b, 0xb400, 0x46d0, 0xc322, 0x9b51, 0x8126, 0x0, 0x1);
        gbc.writeMem(0x432b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb400);
        EXPECT(gbc.pc(), 0x432d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0064
        gbc.setState(0xc711, 0xb743, 0xf840, 0xdc66, 0x455d, 0xf55a, 0x1, 0x0);
        gbc.writeMem(0xc711, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb743);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc711), 0xcb);
        EXPECT(gbc.readMem(0xc712), 0x74);
        // CB 74 0065
        gbc.setState(0x4084, 0xa668, 0x1220, 0x79e7, 0x8501, 0xbac2, 0x0, 0x0);
        gbc.writeMem(0x4084, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa668);
        EXPECT(gbc.pc(), 0x4086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0066
        gbc.setState(0xce8, 0x99a1, 0xf200, 0xc8f3, 0xec1d, 0xbf25, 0x1, 0x1);
        gbc.writeMem(0xce8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x99a1);
        EXPECT(gbc.pc(), 0xcea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0067
        gbc.setState(0x29e3, 0xb793, 0x21d0, 0x9833, 0xc493, 0xe6c2, 0x1, 0x1);
        gbc.writeMem(0x29e3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb793);
        EXPECT(gbc.pc(), 0x29e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0068
        gbc.setState(0x8eb, 0xe00e, 0x7ce0, 0x8e73, 0xbe54, 0xe12a, 0x0, 0x1);
        gbc.writeMem(0x8eb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe00e);
        EXPECT(gbc.pc(), 0x8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0069
        gbc.setState(0x173a, 0x3637, 0x9c20, 0x42d8, 0x4232, 0x7d7e, 0x0, 0x0);
        gbc.writeMem(0x173a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3637);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 006A
        gbc.setState(0x91e8, 0x613d, 0x68e0, 0xb62d, 0x7820, 0x891a, 0x0, 0x1);
        gbc.writeMem(0x91e8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x613d);
        EXPECT(gbc.pc(), 0x91ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e8), 0xcb);
        EXPECT(gbc.readMem(0x91e9), 0x74);
        // CB 74 006B
        gbc.setState(0x4dba, 0x68a1, 0xa450, 0x26cd, 0x779e, 0x2e77, 0x1, 0x1);
        gbc.writeMem(0x4dba, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x68a1);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 006C
        gbc.setState(0x849c, 0xf4b0, 0xa410, 0x6865, 0xd16a, 0xf633, 0x1, 0x0);
        gbc.writeMem(0x849c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf4b0);
        EXPECT(gbc.pc(), 0x849e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849c), 0xcb);
        EXPECT(gbc.readMem(0x849d), 0x74);
        // CB 74 006D
        gbc.setState(0x4d87, 0x4a51, 0x6930, 0xfb71, 0x6308, 0x2fee, 0x1, 0x1);
        gbc.writeMem(0x4d87, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4a51);
        EXPECT(gbc.pc(), 0x4d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 006E
        gbc.setState(0x7146, 0x37fd, 0x67c0, 0x1019, 0x8900, 0x4b02, 0x1, 0x0);
        gbc.writeMem(0x7146, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x37fd);
        EXPECT(gbc.pc(), 0x7148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 006F
        gbc.setState(0x972d, 0x4396, 0x48f0, 0x6635, 0xbbcc, 0xb382, 0x0, 0x0);
        gbc.writeMem(0x972d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4396);
        EXPECT(gbc.pc(), 0x972f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972d), 0xcb);
        EXPECT(gbc.readMem(0x972e), 0x74);
        // CB 74 0070
        gbc.setState(0x8a2e, 0x7e39, 0x3190, 0x6ec2, 0x344d, 0x8c3f, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7e39);
        EXPECT(gbc.pc(), 0x8a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2e), 0xcb);
        EXPECT(gbc.readMem(0x8a2f), 0x74);
        // CB 74 0071
        gbc.setState(0xcacb, 0xb57b, 0x75a0, 0x4f2, 0xe742, 0x39, 0x0, 0x1);
        gbc.writeMem(0xcacb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb57b);
        EXPECT(gbc.pc(), 0xcacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcacb), 0xcb);
        EXPECT(gbc.readMem(0xcacc), 0x74);
        // CB 74 0072
        gbc.setState(0x9153, 0x2595, 0x3fc0, 0x54dc, 0xc235, 0x488e, 0x0, 0x0);
        gbc.writeMem(0x9153, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2595);
        EXPECT(gbc.pc(), 0x9155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9153), 0xcb);
        EXPECT(gbc.readMem(0x9154), 0x74);
        // CB 74 0073
        gbc.setState(0x9b4c, 0x84d9, 0x1b0, 0x9bdc, 0x9fe4, 0x9b71, 0x0, 0x0);
        gbc.writeMem(0x9b4c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x84d9);
        EXPECT(gbc.pc(), 0x9b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4c), 0xcb);
        EXPECT(gbc.readMem(0x9b4d), 0x74);
        // CB 74 0074
        gbc.setState(0x9aeb, 0xd99b, 0x3e60, 0x7eef, 0x14b2, 0x14f, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd99b);
        EXPECT(gbc.pc(), 0x9aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aeb), 0xcb);
        EXPECT(gbc.readMem(0x9aec), 0x74);
        // CB 74 0075
        gbc.setState(0x8a84, 0x1cc, 0x8ef0, 0xe05b, 0x37e3, 0x3d63, 0x0, 0x0);
        gbc.writeMem(0x8a84, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1cc);
        EXPECT(gbc.pc(), 0x8a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a84), 0xcb);
        EXPECT(gbc.readMem(0x8a85), 0x74);
        // CB 74 0076
        gbc.setState(0x8fc5, 0x2cd4, 0x3420, 0x606e, 0x4ad2, 0x6a97, 0x1, 0x1);
        gbc.writeMem(0x8fc5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2cd4);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc5), 0xcb);
        EXPECT(gbc.readMem(0x8fc6), 0x74);
        // CB 74 0077
        gbc.setState(0x2e, 0x39cd, 0x3f0, 0x74af, 0x747b, 0x8453, 0x1, 0x0);
        gbc.writeMem(0x2e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x39cd);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0078
        gbc.setState(0xdf85, 0x25d5, 0x3af0, 0xa839, 0x1ca, 0x2173, 0x1, 0x0);
        gbc.writeMem(0xdf85, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x25d5);
        EXPECT(gbc.pc(), 0xdf87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf85), 0xcb);
        EXPECT(gbc.readMem(0xdf86), 0x74);
        // CB 74 0079
        gbc.setState(0xde27, 0xebce, 0xa490, 0x87bc, 0xfc95, 0x2123, 0x0, 0x1);
        gbc.writeMem(0xde27, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xebce);
        EXPECT(gbc.pc(), 0xde29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde27), 0xcb);
        EXPECT(gbc.readMem(0xde28), 0x74);
        // CB 74 007A
        gbc.setState(0x9ddc, 0xfa04, 0x1940, 0x7bd7, 0xb382, 0x37b0, 0x0, 0x0);
        gbc.writeMem(0x9ddc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfa04);
        EXPECT(gbc.pc(), 0x9dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddc), 0xcb);
        EXPECT(gbc.readMem(0x9ddd), 0x74);
        // CB 74 007B
        gbc.setState(0x91a9, 0x7dc7, 0xa930, 0x3792, 0xc63b, 0xf2b3, 0x1, 0x0);
        gbc.writeMem(0x91a9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0x91ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0xcb);
        EXPECT(gbc.readMem(0x91aa), 0x74);
        // CB 74 007C
        gbc.setState(0x8663, 0x408d, 0xf490, 0x1a11, 0xf50c, 0xe864, 0x1, 0x1);
        gbc.writeMem(0x8663, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x408d);
        EXPECT(gbc.pc(), 0x8665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8663), 0xcb);
        EXPECT(gbc.readMem(0x8664), 0x74);
        // CB 74 007D
        gbc.setState(0xd68c, 0x1328, 0x16b0, 0x99a3, 0x9071, 0xccbe, 0x0, 0x0);
        gbc.writeMem(0xd68c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0xd68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68c), 0xcb);
        EXPECT(gbc.readMem(0xd68d), 0x74);
        // CB 74 007E
        gbc.setState(0x882d, 0x5c97, 0x7650, 0x55c2, 0x79a3, 0xf45d, 0x0, 0x1);
        gbc.writeMem(0x882d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5c97);
        EXPECT(gbc.pc(), 0x882f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882d), 0xcb);
        EXPECT(gbc.readMem(0x882e), 0x74);
        // CB 74 007F
        gbc.setState(0xd4e2, 0xda67, 0x9360, 0x1e28, 0x8ace, 0xfb56, 0x0, 0x0);
        gbc.writeMem(0xd4e2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xda67);
        EXPECT(gbc.pc(), 0xd4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e2), 0xcb);
        EXPECT(gbc.readMem(0xd4e3), 0x74);
        // CB 74 0080
        gbc.setState(0xbd1b, 0xc48c, 0x6c40, 0xa9d1, 0x7ae2, 0x7058, 0x1, 0x0);
        gbc.writeMem(0xbd1b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc48c);
        EXPECT(gbc.pc(), 0xbd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1b), 0xcb);
        EXPECT(gbc.readMem(0xbd1c), 0x74);
        // CB 74 0081
        gbc.setState(0x9c82, 0x45c3, 0xbb80, 0xe50e, 0x33e9, 0x751e, 0x1, 0x1);
        gbc.writeMem(0x9c82, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x45c3);
        EXPECT(gbc.pc(), 0x9c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c82), 0xcb);
        EXPECT(gbc.readMem(0x9c83), 0x74);
        // CB 74 0082
        gbc.setState(0xed4b, 0xbca3, 0xb250, 0x292a, 0x7da6, 0x8907, 0x1, 0x0);
        gbc.writeMem(0xed4b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbca3);
        EXPECT(gbc.pc(), 0xed4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed4b), 0xcb);
        EXPECT(gbc.readMem(0xed4c), 0x74);
        // CB 74 0083
        gbc.setState(0x328c, 0x9192, 0x5070, 0x6325, 0x3892, 0x5d85, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9192);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0084
        gbc.setState(0x3526, 0x3962, 0xe50, 0x98c1, 0x1a24, 0xc131, 0x0, 0x0);
        gbc.writeMem(0x3526, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3962);
        EXPECT(gbc.pc(), 0x3528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0085
        gbc.setState(0x10fe, 0x7ebc, 0x5bd0, 0xbb4c, 0x77b7, 0x8bd0, 0x1, 0x0);
        gbc.writeMem(0x10fe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0086
        gbc.setState(0xc59f, 0xb3, 0x80b0, 0xcb07, 0x590f, 0x518, 0x1, 0x1);
        gbc.writeMem(0xc59f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb3);
        EXPECT(gbc.pc(), 0xc5a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59f), 0xcb);
        EXPECT(gbc.readMem(0xc5a0), 0x74);
        // CB 74 0087
        gbc.setState(0x1e81, 0xb1ac, 0x7740, 0x266d, 0x283, 0xe252, 0x1, 0x1);
        gbc.writeMem(0x1e81, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb1ac);
        EXPECT(gbc.pc(), 0x1e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0088
        gbc.setState(0xe5d3, 0x1589, 0x3c50, 0xcaf1, 0xbbc1, 0xbe0c, 0x1, 0x0);
        gbc.writeMem(0xe5d3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1589);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0x74);
        // CB 74 0089
        gbc.setState(0x915d, 0xec63, 0x2ab0, 0xf61a, 0xfdb2, 0x6dbb, 0x1, 0x1);
        gbc.writeMem(0x915d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xec63);
        EXPECT(gbc.pc(), 0x915f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915d), 0xcb);
        EXPECT(gbc.readMem(0x915e), 0x74);
        // CB 74 008A
        gbc.setState(0xa0ac, 0x3a5f, 0xbff0, 0xc89f, 0xc873, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0xa0ac, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3a5f);
        EXPECT(gbc.pc(), 0xa0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ac), 0xcb);
        EXPECT(gbc.readMem(0xa0ad), 0x74);
        // CB 74 008B
        gbc.setState(0x2561, 0x9253, 0x29a0, 0x7cc6, 0xe93e, 0xc1bd, 0x0, 0x0);
        gbc.writeMem(0x2561, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9253);
        EXPECT(gbc.pc(), 0x2563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 008C
        gbc.setState(0xd721, 0x213, 0xef80, 0xbed8, 0xdc29, 0x150, 0x0, 0x1);
        gbc.writeMem(0xd721, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0xd723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd721), 0xcb);
        EXPECT(gbc.readMem(0xd722), 0x74);
        // CB 74 008D
        gbc.setState(0xcb15, 0xfb53, 0x6260, 0x72bc, 0xa4df, 0x2b82, 0x1, 0x0);
        gbc.writeMem(0xcb15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfb53);
        EXPECT(gbc.pc(), 0xcb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb15), 0xcb);
        EXPECT(gbc.readMem(0xcb16), 0x74);
        // CB 74 008E
        gbc.setState(0x9f25, 0xb82a, 0x93e0, 0x7af4, 0xeadd, 0x646e, 0x1, 0x1);
        gbc.writeMem(0x9f25, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb82a);
        EXPECT(gbc.pc(), 0x9f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f25), 0xcb);
        EXPECT(gbc.readMem(0x9f26), 0x74);
        // CB 74 008F
        gbc.setState(0x20c8, 0x6e22, 0x4fc0, 0x6eca, 0x7438, 0xa7a5, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6e22);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0090
        gbc.setState(0x74b9, 0xf67d, 0xe520, 0x128d, 0xabe0, 0x2509, 0x1, 0x1);
        gbc.writeMem(0x74b9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf67d);
        EXPECT(gbc.pc(), 0x74bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0091
        gbc.setState(0x5569, 0x8153, 0x8200, 0x4f7d, 0xab82, 0xb074, 0x0, 0x1);
        gbc.writeMem(0x5569, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8153);
        EXPECT(gbc.pc(), 0x556b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0092
        gbc.setState(0xc91a, 0x2861, 0x3b10, 0x8eba, 0xe36e, 0xebec, 0x1, 0x1);
        gbc.writeMem(0xc91a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91a), 0xcb);
        EXPECT(gbc.readMem(0xc91b), 0x74);
        // CB 74 0093
        gbc.setState(0xc9d7, 0x4ca2, 0xd9e0, 0x55bf, 0x2c14, 0x2458, 0x0, 0x0);
        gbc.writeMem(0xc9d7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4ca2);
        EXPECT(gbc.pc(), 0xc9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d7), 0xcb);
        EXPECT(gbc.readMem(0xc9d8), 0x74);
        // CB 74 0094
        gbc.setState(0xbc3e, 0x6f9c, 0xc80, 0x38dd, 0x4be0, 0xf75e, 0x0, 0x1);
        gbc.writeMem(0xbc3e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6f9c);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3e), 0xcb);
        EXPECT(gbc.readMem(0xbc3f), 0x74);
        // CB 74 0095
        gbc.setState(0xaa15, 0x6587, 0x2da0, 0x8605, 0xb4, 0x2d6a, 0x0, 0x0);
        gbc.writeMem(0xaa15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6587);
        EXPECT(gbc.pc(), 0xaa17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa15), 0xcb);
        EXPECT(gbc.readMem(0xaa16), 0x74);
        // CB 74 0096
        gbc.setState(0x8cae, 0xe87e, 0xaef0, 0xe169, 0x85b8, 0xc774, 0x0, 0x1);
        gbc.writeMem(0x8cae, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x8cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cae), 0xcb);
        EXPECT(gbc.readMem(0x8caf), 0x74);
        // CB 74 0097
        gbc.setState(0x7ea4, 0xc069, 0x8f00, 0x8d5e, 0x3e79, 0x2b95, 0x0, 0x0);
        gbc.writeMem(0x7ea4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc069);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0098
        gbc.setState(0x93c3, 0x8d6d, 0xbc70, 0xb885, 0x54da, 0xc92d, 0x1, 0x1);
        gbc.writeMem(0x93c3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8d6d);
        EXPECT(gbc.pc(), 0x93c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c3), 0xcb);
        EXPECT(gbc.readMem(0x93c4), 0x74);
        // CB 74 0099
        gbc.setState(0x28b9, 0x7835, 0xe980, 0xf62f, 0x8912, 0x8639, 0x1, 0x1);
        gbc.writeMem(0x28b9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7835);
        EXPECT(gbc.pc(), 0x28bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 009A
        gbc.setState(0xdaea, 0x1223, 0x9280, 0xd48, 0x1f82, 0xa69a, 0x1, 0x1);
        gbc.writeMem(0xdaea, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1223);
        EXPECT(gbc.pc(), 0xdaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaea), 0xcb);
        EXPECT(gbc.readMem(0xdaeb), 0x74);
        // CB 74 009B
        gbc.setState(0xa1d, 0x2b86, 0x7670, 0xb57f, 0x1bef, 0xedc2, 0x1, 0x1);
        gbc.writeMem(0xa1d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0xa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 009C
        gbc.setState(0xc904, 0xa0a8, 0x96f0, 0x6196, 0x37bf, 0x130d, 0x1, 0x1);
        gbc.writeMem(0xc904, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa0a8);
        EXPECT(gbc.pc(), 0xc906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc904), 0xcb);
        EXPECT(gbc.readMem(0xc905), 0x74);
        // CB 74 009D
        gbc.setState(0x421c, 0x621f, 0x3e00, 0x14ef, 0x7902, 0xbb62, 0x0, 0x1);
        gbc.writeMem(0x421c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x621f);
        EXPECT(gbc.pc(), 0x421e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 009E
        gbc.setState(0x3203, 0xf914, 0xf0, 0x4fee, 0x6882, 0x5ea, 0x1, 0x1);
        gbc.writeMem(0x3203, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf914);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 009F
        gbc.setState(0x2d4a, 0x2772, 0x2490, 0xe9f3, 0xd990, 0xa040, 0x1, 0x0);
        gbc.writeMem(0x2d4a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x2d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00A0
        gbc.setState(0x5e7a, 0xb3fa, 0xb300, 0x9f97, 0xb3f6, 0x352f, 0x1, 0x1);
        gbc.writeMem(0x5e7a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb3fa);
        EXPECT(gbc.pc(), 0x5e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00A1
        gbc.setState(0x33c8, 0x6e1e, 0x44f0, 0x76d0, 0x8011, 0xd5e5, 0x1, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6e1e);
        EXPECT(gbc.pc(), 0x33ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00A2
        gbc.setState(0x9012, 0xb1cd, 0xed40, 0x4df4, 0x9e3f, 0x2db6, 0x1, 0x1);
        gbc.writeMem(0x9012, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb1cd);
        EXPECT(gbc.pc(), 0x9014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9012), 0xcb);
        EXPECT(gbc.readMem(0x9013), 0x74);
        // CB 74 00A3
        gbc.setState(0x1ce8, 0x375, 0x4d80, 0x600e, 0x8c29, 0x8307, 0x1, 0x0);
        gbc.writeMem(0x1ce8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0x1cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00A4
        gbc.setState(0xc927, 0x5840, 0xe310, 0x6e0b, 0x1051, 0xb485, 0x0, 0x1);
        gbc.writeMem(0xc927, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5840);
        EXPECT(gbc.pc(), 0xc929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc927), 0xcb);
        EXPECT(gbc.readMem(0xc928), 0x74);
        // CB 74 00A5
        gbc.setState(0x9374, 0x2bff, 0x9040, 0x6ac, 0x794f, 0xffa8, 0x1, 0x0);
        gbc.writeMem(0x9374, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0x9376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9374), 0xcb);
        EXPECT(gbc.readMem(0x9375), 0x74);
        // CB 74 00A6
        gbc.setState(0xad8, 0x85a0, 0x960, 0x7e4e, 0x880f, 0xc206, 0x1, 0x0);
        gbc.writeMem(0xad8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x85a0);
        EXPECT(gbc.pc(), 0xada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00A8
        gbc.setState(0xc4bd, 0xcebe, 0x3d0, 0x9b8c, 0x47a8, 0x8a2b, 0x1, 0x1);
        gbc.writeMem(0xc4bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcebe);
        EXPECT(gbc.pc(), 0xc4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bd), 0xcb);
        EXPECT(gbc.readMem(0xc4be), 0x74);
        // CB 74 00A9
        gbc.setState(0xdae2, 0x6a19, 0x6b50, 0x633f, 0x59dc, 0x1657, 0x0, 0x1);
        gbc.writeMem(0xdae2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6a19);
        EXPECT(gbc.pc(), 0xdae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae2), 0xcb);
        EXPECT(gbc.readMem(0xdae3), 0x74);
        // CB 74 00AA
        gbc.setState(0x9a75, 0x3a01, 0x6e30, 0x3280, 0x8e5d, 0x8fb0, 0x0, 0x0);
        gbc.writeMem(0x9a75, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3a01);
        EXPECT(gbc.pc(), 0x9a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a75), 0xcb);
        EXPECT(gbc.readMem(0x9a76), 0x74);
        // CB 74 00AB
        gbc.setState(0xb3e3, 0x5e8f, 0x5bb0, 0xdbc3, 0x50c7, 0x5634, 0x0, 0x1);
        gbc.writeMem(0xb3e3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5e8f);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e3), 0xcb);
        EXPECT(gbc.readMem(0xb3e4), 0x74);
        // CB 74 00AC
        gbc.setState(0xccd2, 0xa03e, 0x1280, 0x6b82, 0xaf5, 0xcba2, 0x1, 0x1);
        gbc.writeMem(0xccd2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa03e);
        EXPECT(gbc.pc(), 0xccd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd2), 0xcb);
        EXPECT(gbc.readMem(0xccd3), 0x74);
        // CB 74 00AD
        gbc.setState(0xad10, 0x9357, 0xa2c0, 0xe0c9, 0x230f, 0x46b2, 0x0, 0x1);
        gbc.writeMem(0xad10, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9357);
        EXPECT(gbc.pc(), 0xad12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad10), 0xcb);
        EXPECT(gbc.readMem(0xad11), 0x74);
        // CB 74 00AE
        gbc.setState(0x4512, 0x3eb5, 0x1f70, 0x7852, 0x2aa1, 0xfb5d, 0x0, 0x0);
        gbc.writeMem(0x4512, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3eb5);
        EXPECT(gbc.pc(), 0x4514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00AF
        gbc.setState(0xbfe9, 0x42ca, 0x59f0, 0x49c5, 0x4714, 0xe741, 0x0, 0x1);
        gbc.writeMem(0xbfe9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe9), 0xcb);
        EXPECT(gbc.readMem(0xbfea), 0x74);
        // CB 74 00B0
        gbc.setState(0xb864, 0xa94c, 0xcdb0, 0x5b9d, 0xb4d7, 0x830a, 0x1, 0x1);
        gbc.writeMem(0xb864, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0xb866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb864), 0xcb);
        EXPECT(gbc.readMem(0xb865), 0x74);
        // CB 74 00B1
        gbc.setState(0x89e2, 0x9e2e, 0xb400, 0xd3ae, 0xf940, 0x102, 0x0, 0x1);
        gbc.writeMem(0x89e2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9e2e);
        EXPECT(gbc.pc(), 0x89e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e2), 0xcb);
        EXPECT(gbc.readMem(0x89e3), 0x74);
        // CB 74 00B3
        gbc.setState(0xb267, 0xd16c, 0xa2b0, 0x788c, 0x2efb, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0xb267, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd16c);
        EXPECT(gbc.pc(), 0xb269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb267), 0xcb);
        EXPECT(gbc.readMem(0xb268), 0x74);
        // CB 74 00B4
        gbc.setState(0x7597, 0x9f04, 0xd5f0, 0x9d33, 0x132b, 0x739b, 0x0, 0x1);
        gbc.writeMem(0x7597, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9f04);
        EXPECT(gbc.pc(), 0x7599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00B5
        gbc.setState(0xea9d, 0x10b0, 0xb200, 0x2777, 0x57b, 0xf8b7, 0x0, 0x1);
        gbc.writeMem(0xea9d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x10b0);
        EXPECT(gbc.pc(), 0xea9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9d), 0xcb);
        EXPECT(gbc.readMem(0xea9e), 0x74);
        // CB 74 00B6
        gbc.setState(0xe974, 0x572a, 0x3df0, 0x4016, 0x82b7, 0xfd0d, 0x0, 0x1);
        gbc.writeMem(0xe974, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0xe976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe974), 0xcb);
        EXPECT(gbc.readMem(0xe975), 0x74);
        // CB 74 00B7
        gbc.setState(0x1dbc, 0xad7a, 0x4730, 0xbbf6, 0xb5a5, 0x39d6, 0x1, 0x1);
        gbc.writeMem(0x1dbc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xad7a);
        EXPECT(gbc.pc(), 0x1dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00B8
        gbc.setState(0x6c53, 0x636c, 0x60b0, 0x1e99, 0xa881, 0x1185, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x636c);
        EXPECT(gbc.pc(), 0x6c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00B9
        gbc.setState(0x6b42, 0x6ea8, 0xa9c0, 0xc063, 0x503b, 0x5c3b, 0x1, 0x1);
        gbc.writeMem(0x6b42, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6ea8);
        EXPECT(gbc.pc(), 0x6b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00BA
        gbc.setState(0x71f, 0x8c0f, 0x6a30, 0x88ea, 0xaa68, 0x716d, 0x1, 0x0);
        gbc.writeMem(0x71f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8c0f);
        EXPECT(gbc.pc(), 0x721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00BB
        gbc.setState(0x8029, 0x9352, 0x2b0, 0x478b, 0xeb5f, 0xaa4c, 0x1, 0x0);
        gbc.writeMem(0x8029, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9352);
        EXPECT(gbc.pc(), 0x802b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8029), 0xcb);
        EXPECT(gbc.readMem(0x802a), 0x74);
        // CB 74 00BC
        gbc.setState(0x1602, 0xe05c, 0x9450, 0x3d61, 0xcd26, 0xea6b, 0x0, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe05c);
        EXPECT(gbc.pc(), 0x1604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00BD
        gbc.setState(0x5821, 0x1c58, 0x1110, 0xb44f, 0x6e1c, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x5821, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0x5823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00BE
        gbc.setState(0x6674, 0x6c46, 0xc9d0, 0x9132, 0x5de2, 0xd289, 0x1, 0x1);
        gbc.writeMem(0x6674, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6c46);
        EXPECT(gbc.pc(), 0x6676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00BF
        gbc.setState(0x7309, 0x8fe2, 0x1fd0, 0xa1cf, 0xdc79, 0x37be, 0x0, 0x0);
        gbc.writeMem(0x7309, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8fe2);
        EXPECT(gbc.pc(), 0x730b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00C0
        gbc.setState(0x6154, 0xb123, 0x7630, 0x551c, 0x8ed6, 0x728, 0x1, 0x0);
        gbc.writeMem(0x6154, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb123);
        EXPECT(gbc.pc(), 0x6156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00C1
        gbc.setState(0xa1a4, 0x6e81, 0xb840, 0x479d, 0x9606, 0x7f45, 0x0, 0x0);
        gbc.writeMem(0xa1a4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6e81);
        EXPECT(gbc.pc(), 0xa1a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a4), 0xcb);
        EXPECT(gbc.readMem(0xa1a5), 0x74);
        // CB 74 00C2
        gbc.setState(0xa75f, 0xe1f2, 0x58a0, 0x50e4, 0x589e, 0x37dc, 0x0, 0x1);
        gbc.writeMem(0xa75f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe1f2);
        EXPECT(gbc.pc(), 0xa761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75f), 0xcb);
        EXPECT(gbc.readMem(0xa760), 0x74);
        // CB 74 00C3
        gbc.setState(0x967f, 0x3e74, 0xd340, 0x642d, 0xdbac, 0xaac8, 0x0, 0x1);
        gbc.writeMem(0x967f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3e74);
        EXPECT(gbc.pc(), 0x9681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967f), 0xcb);
        EXPECT(gbc.readMem(0x9680), 0x74);
        // CB 74 00C5
        gbc.setState(0xa813, 0x3e9d, 0x8150, 0xbe35, 0xbef4, 0xbee6, 0x1, 0x1);
        gbc.writeMem(0xa813, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3e9d);
        EXPECT(gbc.pc(), 0xa815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa813), 0xcb);
        EXPECT(gbc.readMem(0xa814), 0x74);
        // CB 74 00C7
        gbc.setState(0x138b, 0x4549, 0x9050, 0xf9f0, 0xbc24, 0x3708, 0x0, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4549);
        EXPECT(gbc.pc(), 0x138d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00C8
        gbc.setState(0x695f, 0x5f5b, 0xf940, 0x34a, 0x1d2f, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x695f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5f5b);
        EXPECT(gbc.pc(), 0x6961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00C9
        gbc.setState(0xc04e, 0x2e09, 0x2e50, 0xf00f, 0x90f9, 0xd966, 0x0, 0x0);
        gbc.writeMem(0xc04e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2e09);
        EXPECT(gbc.pc(), 0xc050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04e), 0xcb);
        EXPECT(gbc.readMem(0xc04f), 0x74);
        // CB 74 00CA
        gbc.setState(0x1698, 0x4163, 0x50c0, 0x91c4, 0x4fb0, 0x9052, 0x0, 0x0);
        gbc.writeMem(0x1698, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4163);
        EXPECT(gbc.pc(), 0x169a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00CB
        gbc.setState(0x4b5f, 0xe3ac, 0x3480, 0x59ea, 0x7c71, 0xdcaa, 0x1, 0x1);
        gbc.writeMem(0x4b5f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe3ac);
        EXPECT(gbc.pc(), 0x4b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00CC
        gbc.setState(0x9475, 0x8f66, 0xf5f0, 0xdf78, 0x461e, 0x3287, 0x0, 0x1);
        gbc.writeMem(0x9475, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8f66);
        EXPECT(gbc.pc(), 0x9477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9475), 0xcb);
        EXPECT(gbc.readMem(0x9476), 0x74);
        // CB 74 00CD
        gbc.setState(0x4569, 0x41f7, 0x33f0, 0xed4e, 0x1a94, 0xb57f, 0x1, 0x1);
        gbc.writeMem(0x4569, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x41f7);
        EXPECT(gbc.pc(), 0x456b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00CE
        gbc.setState(0x9ec2, 0x30f5, 0xa840, 0xd900, 0x8243, 0xd977, 0x0, 0x1);
        gbc.writeMem(0x9ec2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x30f5);
        EXPECT(gbc.pc(), 0x9ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec2), 0xcb);
        EXPECT(gbc.readMem(0x9ec3), 0x74);
        // CB 74 00CF
        gbc.setState(0x7e34, 0x7589, 0x9c90, 0x4bfe, 0x9bfb, 0x3198, 0x1, 0x1);
        gbc.writeMem(0x7e34, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7589);
        EXPECT(gbc.pc(), 0x7e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00D0
        gbc.setState(0xceb5, 0xc0b2, 0x4a80, 0xfbe7, 0xa717, 0xf3d5, 0x1, 0x1);
        gbc.writeMem(0xceb5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc0b2);
        EXPECT(gbc.pc(), 0xceb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb5), 0xcb);
        EXPECT(gbc.readMem(0xceb6), 0x74);
        // CB 74 00D1
        gbc.setState(0x5c26, 0xa428, 0x95a0, 0xbdd7, 0x9b25, 0x2e6, 0x0, 0x0);
        gbc.writeMem(0x5c26, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa428);
        EXPECT(gbc.pc(), 0x5c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00D2
        gbc.setState(0xecdb, 0xcd41, 0x7a80, 0xb1a3, 0xc29, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0xecdb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcd41);
        EXPECT(gbc.pc(), 0xecdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdb), 0xcb);
        EXPECT(gbc.readMem(0xecdc), 0x74);
        // CB 74 00D3
        gbc.setState(0x9c7b, 0xecd3, 0x6600, 0xd120, 0x4399, 0x237, 0x1, 0x0);
        gbc.writeMem(0x9c7b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xecd3);
        EXPECT(gbc.pc(), 0x9c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7b), 0xcb);
        EXPECT(gbc.readMem(0x9c7c), 0x74);
        // CB 74 00D4
        gbc.setState(0xc91b, 0xe9e9, 0x280, 0x1078, 0x2b4b, 0x66fe, 0x0, 0x1);
        gbc.writeMem(0xc91b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe9e9);
        EXPECT(gbc.pc(), 0xc91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91b), 0xcb);
        EXPECT(gbc.readMem(0xc91c), 0x74);
        // CB 74 00D5
        gbc.setState(0xa43a, 0xeb1, 0x2310, 0xfe3b, 0xeca9, 0x95d8, 0x1, 0x1);
        gbc.writeMem(0xa43a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeb1);
        EXPECT(gbc.pc(), 0xa43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43a), 0xcb);
        EXPECT(gbc.readMem(0xa43b), 0x74);
        // CB 74 00D6
        gbc.setState(0x6dd3, 0x5882, 0x80a0, 0x18a8, 0xdc32, 0x634d, 0x1, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5882);
        EXPECT(gbc.pc(), 0x6dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00D7
        gbc.setState(0x795f, 0x3b33, 0xba60, 0x3665, 0xbd95, 0xe3a8, 0x0, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0x7961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00D8
        gbc.setState(0xb1b5, 0x41c0, 0x12e0, 0x6fa, 0x330d, 0xf07a, 0x0, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x41c0);
        EXPECT(gbc.pc(), 0xb1b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b5), 0xcb);
        EXPECT(gbc.readMem(0xb1b6), 0x74);
        // CB 74 00D9
        gbc.setState(0x791a, 0xead9, 0x9c40, 0x7d37, 0xd5c0, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0x791a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xead9);
        EXPECT(gbc.pc(), 0x791c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00DA
        gbc.setState(0x8f82, 0x6e10, 0xd8b0, 0x11a8, 0xe8f0, 0x5ba2, 0x0, 0x0);
        gbc.writeMem(0x8f82, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6e10);
        EXPECT(gbc.pc(), 0x8f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f82), 0xcb);
        EXPECT(gbc.readMem(0x8f83), 0x74);
        // CB 74 00DB
        gbc.setState(0x345c, 0xad96, 0xc710, 0x2add, 0xe835, 0xc670, 0x0, 0x0);
        gbc.writeMem(0x345c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xad96);
        EXPECT(gbc.pc(), 0x345e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00DC
        gbc.setState(0x1af, 0xf587, 0x4380, 0x5e14, 0x1964, 0x8813, 0x1, 0x1);
        gbc.writeMem(0x1af, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf587);
        EXPECT(gbc.pc(), 0x1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00DD
        gbc.setState(0x4851, 0xca07, 0x1300, 0xdc01, 0x98d3, 0xfbda, 0x0, 0x0);
        gbc.writeMem(0x4851, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xca07);
        EXPECT(gbc.pc(), 0x4853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00DE
        gbc.setState(0x82a9, 0x245d, 0xa150, 0x6d4f, 0xb832, 0x3b5d, 0x0, 0x1);
        gbc.writeMem(0x82a9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x245d);
        EXPECT(gbc.pc(), 0x82ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a9), 0xcb);
        EXPECT(gbc.readMem(0x82aa), 0x74);
        // CB 74 00DF
        gbc.setState(0xb40e, 0xb04b, 0x370, 0xfd28, 0x9bb8, 0x8785, 0x0, 0x1);
        gbc.writeMem(0xb40e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb04b);
        EXPECT(gbc.pc(), 0xb410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40e), 0xcb);
        EXPECT(gbc.readMem(0xb40f), 0x74);
        // CB 74 00E0
        gbc.setState(0x86a9, 0xcf3b, 0xe40, 0xa9a3, 0xf3d3, 0xeb16, 0x1, 0x1);
        gbc.writeMem(0x86a9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcf3b);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a9), 0xcb);
        EXPECT(gbc.readMem(0x86aa), 0x74);
        // CB 74 00E1
        gbc.setState(0x814f, 0xca5a, 0xb530, 0xdee6, 0x9049, 0xa84d, 0x0, 0x0);
        gbc.writeMem(0x814f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xca5a);
        EXPECT(gbc.pc(), 0x8151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814f), 0xcb);
        EXPECT(gbc.readMem(0x8150), 0x74);
        // CB 74 00E2
        gbc.setState(0xc3a, 0x9735, 0x3a0, 0x9472, 0x9565, 0x6128, 0x1, 0x1);
        gbc.writeMem(0xc3a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9735);
        EXPECT(gbc.pc(), 0xc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00E3
        gbc.setState(0x7b86, 0x5e23, 0xaa30, 0xba94, 0xae44, 0x20f0, 0x0, 0x0);
        gbc.writeMem(0x7b86, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5e23);
        EXPECT(gbc.pc(), 0x7b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00E4
        gbc.setState(0x53b0, 0x2be7, 0xa4d0, 0x4481, 0x82dc, 0x9d84, 0x1, 0x0);
        gbc.writeMem(0x53b0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2be7);
        EXPECT(gbc.pc(), 0x53b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00E6
        gbc.setState(0xac89, 0x41a0, 0xec90, 0xedc7, 0x2530, 0x7e58, 0x0, 0x0);
        gbc.writeMem(0xac89, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x41a0);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0x74);
        // CB 74 00E7
        gbc.setState(0xc602, 0x1451, 0x780, 0xc2e5, 0x5872, 0xc209, 0x0, 0x0);
        gbc.writeMem(0xc602, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1451);
        EXPECT(gbc.pc(), 0xc604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc602), 0xcb);
        EXPECT(gbc.readMem(0xc603), 0x74);
        // CB 74 00E8
        gbc.setState(0xf5, 0x8ddc, 0x5d90, 0x26e1, 0xf680, 0xa295, 0x0, 0x0);
        gbc.writeMem(0xf5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ddc);
        EXPECT(gbc.pc(), 0xf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00E9
        gbc.setState(0xd15, 0xb545, 0xf4e0, 0xfbc1, 0x33ed, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0xd15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb545);
        EXPECT(gbc.pc(), 0xd17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00EA
        gbc.setState(0x164f, 0xc1ad, 0x7c40, 0xf6c9, 0x4f4a, 0x3697, 0x1, 0x0);
        gbc.writeMem(0x164f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc1ad);
        EXPECT(gbc.pc(), 0x1651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00EB
        gbc.setState(0x9597, 0x88f9, 0x2150, 0x5ec7, 0x8cbf, 0xabaa, 0x1, 0x0);
        gbc.writeMem(0x9597, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x88f9);
        EXPECT(gbc.pc(), 0x9599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9597), 0xcb);
        EXPECT(gbc.readMem(0x9598), 0x74);
        // CB 74 00EC
        gbc.setState(0x3ec, 0x7c9b, 0x4100, 0xbb58, 0xb605, 0xae0d, 0x0, 0x0);
        gbc.writeMem(0x3ec, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7c9b);
        EXPECT(gbc.pc(), 0x3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00ED
        gbc.setState(0xaddf, 0x8096, 0x50, 0x1693, 0x7387, 0xad5a, 0x1, 0x0);
        gbc.writeMem(0xaddf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8096);
        EXPECT(gbc.pc(), 0xade1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddf), 0xcb);
        EXPECT(gbc.readMem(0xade0), 0x74);
        // CB 74 00EE
        gbc.setState(0x68da, 0x4f26, 0xff40, 0xa33f, 0x4c85, 0xab44, 0x1, 0x0);
        gbc.writeMem(0x68da, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4f26);
        EXPECT(gbc.pc(), 0x68dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00EF
        gbc.setState(0x53d1, 0x3dd4, 0xc960, 0x7456, 0x5ae3, 0xb3ac, 0x0, 0x1);
        gbc.writeMem(0x53d1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3dd4);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00F0
        gbc.setState(0xd23b, 0x2ba4, 0x4d0, 0x113c, 0x754c, 0x61f5, 0x1, 0x1);
        gbc.writeMem(0xd23b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2ba4);
        EXPECT(gbc.pc(), 0xd23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23b), 0xcb);
        EXPECT(gbc.readMem(0xd23c), 0x74);
        // CB 74 00F1
        gbc.setState(0xb8fa, 0x2a66, 0xf420, 0xe56f, 0x6e2e, 0xe7e7, 0x1, 0x1);
        gbc.writeMem(0xb8fa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2a66);
        EXPECT(gbc.pc(), 0xb8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fa), 0xcb);
        EXPECT(gbc.readMem(0xb8fb), 0x74);
        // CB 74 00F2
        gbc.setState(0x2506, 0xfba5, 0xb990, 0x90f7, 0x8db2, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x2506, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfba5);
        EXPECT(gbc.pc(), 0x2508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00F4
        gbc.setState(0xd999, 0xf3b8, 0x7930, 0x6676, 0xc34e, 0xbc5e, 0x1, 0x1);
        gbc.writeMem(0xd999, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf3b8);
        EXPECT(gbc.pc(), 0xd99b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd999), 0xcb);
        EXPECT(gbc.readMem(0xd99a), 0x74);
        // CB 74 00F5
        gbc.setState(0x8af9, 0xfbd, 0x8eb0, 0x2582, 0x8328, 0x4b54, 0x1, 0x0);
        gbc.writeMem(0x8af9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfbd);
        EXPECT(gbc.pc(), 0x8afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af9), 0xcb);
        EXPECT(gbc.readMem(0x8afa), 0x74);
        // CB 74 00F6
        gbc.setState(0xe3b0, 0x568, 0x31e0, 0x34cf, 0x432f, 0x9898, 0x1, 0x0);
        gbc.writeMem(0xe3b0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x568);
        EXPECT(gbc.pc(), 0xe3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b0), 0xcb);
        EXPECT(gbc.readMem(0xe3b1), 0x74);
        // CB 74 00F7
        gbc.setState(0xe033, 0x7573, 0xaa90, 0x35ee, 0x279f, 0xbd43, 0x0, 0x0);
        gbc.writeMem(0xe033, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7573);
        EXPECT(gbc.pc(), 0xe035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe033), 0xcb);
        EXPECT(gbc.readMem(0xe034), 0x74);
        // CB 74 00F8
        gbc.setState(0x7fde, 0xe292, 0xc850, 0xa453, 0xee06, 0x2e90, 0x1, 0x0);
        gbc.writeMem(0x7fde, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe292);
        EXPECT(gbc.pc(), 0x7fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00F9
        gbc.setState(0x30d, 0xee24, 0x9120, 0x4170, 0x15a4, 0x2d91, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xee24);
        EXPECT(gbc.pc(), 0x30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00FA
        gbc.setState(0x7ae2, 0x5073, 0xc630, 0xed17, 0x3d85, 0xc191, 0x0, 0x0);
        gbc.writeMem(0x7ae2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5073);
        EXPECT(gbc.pc(), 0x7ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00FB
        gbc.setState(0xc03e, 0x4fd9, 0x1b00, 0x3036, 0xaa3a, 0xcb05, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4fd9);
        EXPECT(gbc.pc(), 0xc040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03e), 0xcb);
        EXPECT(gbc.readMem(0xc03f), 0x74);
        // CB 74 00FC
        gbc.setState(0xadd2, 0xfada, 0x5ba0, 0xfba7, 0x4050, 0x14d8, 0x1, 0x1);
        gbc.writeMem(0xadd2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfada);
        EXPECT(gbc.pc(), 0xadd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd2), 0xcb);
        EXPECT(gbc.readMem(0xadd3), 0x74);
        // CB 74 00FD
        gbc.setState(0x6c07, 0xde48, 0x520, 0xa747, 0xb35, 0x986f, 0x1, 0x1);
        gbc.writeMem(0x6c07, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0x6c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 00FE
        gbc.setState(0x15, 0x1f15, 0xdf50, 0xd558, 0xa290, 0xe23, 0x0, 0x1);
        gbc.writeMem(0x15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1f15);
        EXPECT(gbc.pc(), 0x17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 00FF
        gbc.setState(0x4229, 0xb97e, 0x61f0, 0x9af0, 0x9685, 0xa23d, 0x0, 0x0);
        gbc.writeMem(0x4229, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb97e);
        EXPECT(gbc.pc(), 0x422b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0100
        gbc.setState(0xa70e, 0x7f60, 0xe110, 0x9b12, 0x8d1c, 0x16c4, 0x0, 0x0);
        gbc.writeMem(0xa70e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7f60);
        EXPECT(gbc.pc(), 0xa710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70e), 0xcb);
        EXPECT(gbc.readMem(0xa70f), 0x74);
        // CB 74 0101
        gbc.setState(0xb770, 0x37e7, 0xaa70, 0x91fb, 0xaa80, 0x8b02, 0x0, 0x1);
        gbc.writeMem(0xb770, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x37e7);
        EXPECT(gbc.pc(), 0xb772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb770), 0xcb);
        EXPECT(gbc.readMem(0xb771), 0x74);
        // CB 74 0102
        gbc.setState(0x6a9, 0x2331, 0x67e0, 0x89e1, 0x5de9, 0xe8fa, 0x0, 0x0);
        gbc.writeMem(0x6a9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2331);
        EXPECT(gbc.pc(), 0x6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0103
        gbc.setState(0xeee7, 0xb4ba, 0xd0a0, 0xf64, 0xf12a, 0xd727, 0x0, 0x0);
        gbc.writeMem(0xeee7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb4ba);
        EXPECT(gbc.pc(), 0xeee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee7), 0xcb);
        EXPECT(gbc.readMem(0xeee8), 0x74);
        // CB 74 0104
        gbc.setState(0xe3e5, 0x41b0, 0x3350, 0xeff6, 0x1035, 0x3d14, 0x0, 0x1);
        gbc.writeMem(0xe3e5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x41b0);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e5), 0xcb);
        EXPECT(gbc.readMem(0xe3e6), 0x74);
        // CB 74 0105
        gbc.setState(0xdc1b, 0x31ce, 0x7ef0, 0x714d, 0x559f, 0x85d6, 0x1, 0x1);
        gbc.writeMem(0xdc1b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x31ce);
        EXPECT(gbc.pc(), 0xdc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1b), 0xcb);
        EXPECT(gbc.readMem(0xdc1c), 0x74);
        // CB 74 0106
        gbc.setState(0x17c2, 0x4306, 0x38c0, 0xfbf8, 0x2ba2, 0xd6a4, 0x1, 0x1);
        gbc.writeMem(0x17c2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4306);
        EXPECT(gbc.pc(), 0x17c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0107
        gbc.setState(0xb2c5, 0x2f7a, 0xe750, 0x59c7, 0x3432, 0xd1c2, 0x0, 0x0);
        gbc.writeMem(0xb2c5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0xb2c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c5), 0xcb);
        EXPECT(gbc.readMem(0xb2c6), 0x74);
        // CB 74 0108
        gbc.setState(0x4b19, 0x428a, 0xbba0, 0xf519, 0xa6cb, 0xdc3e, 0x1, 0x0);
        gbc.writeMem(0x4b19, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x428a);
        EXPECT(gbc.pc(), 0x4b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0109
        gbc.setState(0xa26d, 0x6bd5, 0xe230, 0xd441, 0x15da, 0xb0f5, 0x1, 0x1);
        gbc.writeMem(0xa26d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6bd5);
        EXPECT(gbc.pc(), 0xa26f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26d), 0xcb);
        EXPECT(gbc.readMem(0xa26e), 0x74);
        // CB 74 010A
        gbc.setState(0x659a, 0x7fc2, 0xa1d0, 0x9e8d, 0x8baf, 0x8b0a, 0x1, 0x1);
        gbc.writeMem(0x659a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x659c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 010B
        gbc.setState(0x1538, 0x60b1, 0xe710, 0xca2e, 0xe43d, 0x21f3, 0x1, 0x1);
        gbc.writeMem(0x1538, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x60b1);
        EXPECT(gbc.pc(), 0x153a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 010C
        gbc.setState(0x8419, 0x21e4, 0xa7d0, 0x2930, 0xbce1, 0x2a02, 0x1, 0x0);
        gbc.writeMem(0x8419, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x21e4);
        EXPECT(gbc.pc(), 0x841b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8419), 0xcb);
        EXPECT(gbc.readMem(0x841a), 0x74);
        // CB 74 010D
        gbc.setState(0x5d3a, 0xb238, 0xf80, 0x7019, 0xff63, 0x97ba, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb238);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 010E
        gbc.setState(0xc993, 0x2a71, 0x6d80, 0x3eb7, 0x60fe, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2a71);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc993), 0xcb);
        EXPECT(gbc.readMem(0xc994), 0x74);
        // CB 74 010F
        gbc.setState(0x65b8, 0xe245, 0x1a20, 0x6594, 0xb7bc, 0x65ee, 0x0, 0x0);
        gbc.writeMem(0x65b8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe245);
        EXPECT(gbc.pc(), 0x65ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0110
        gbc.setState(0xd069, 0xf444, 0x92e0, 0x2337, 0x5712, 0xbc68, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf444);
        EXPECT(gbc.pc(), 0xd06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd069), 0xcb);
        EXPECT(gbc.readMem(0xd06a), 0x74);
        // CB 74 0111
        gbc.setState(0xe277, 0xbd52, 0x87c0, 0x71a6, 0xbfc1, 0x9ab8, 0x0, 0x1);
        gbc.writeMem(0xe277, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd52);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe277), 0xcb);
        EXPECT(gbc.readMem(0xe278), 0x74);
        // CB 74 0112
        gbc.setState(0x439f, 0x6b72, 0xfdc0, 0x6beb, 0x8125, 0xba48, 0x0, 0x0);
        gbc.writeMem(0x439f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6b72);
        EXPECT(gbc.pc(), 0x43a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0113
        gbc.setState(0xad17, 0xb863, 0xcc70, 0x8ae3, 0x5db7, 0x22e2, 0x0, 0x1);
        gbc.writeMem(0xad17, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0xad19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad17), 0xcb);
        EXPECT(gbc.readMem(0xad18), 0x74);
        // CB 74 0114
        gbc.setState(0xb9a4, 0x4b2b, 0xb280, 0xe4a7, 0xf39a, 0x6c67, 0x0, 0x0);
        gbc.writeMem(0xb9a4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4b2b);
        EXPECT(gbc.pc(), 0xb9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a4), 0xcb);
        EXPECT(gbc.readMem(0xb9a5), 0x74);
        // CB 74 0115
        gbc.setState(0xb7ef, 0x1256, 0x7690, 0x377a, 0x5eb0, 0xed06, 0x1, 0x1);
        gbc.writeMem(0xb7ef, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1256);
        EXPECT(gbc.pc(), 0xb7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ef), 0xcb);
        EXPECT(gbc.readMem(0xb7f0), 0x74);
        // CB 74 0116
        gbc.setState(0x3906, 0x7113, 0x8640, 0x1e1d, 0x6a74, 0x95b, 0x0, 0x1);
        gbc.writeMem(0x3906, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7113);
        EXPECT(gbc.pc(), 0x3908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0117
        gbc.setState(0xcefb, 0xf7b, 0xa500, 0x7d1d, 0xf41a, 0xbe20, 0x0, 0x1);
        gbc.writeMem(0xcefb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf7b);
        EXPECT(gbc.pc(), 0xcefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefb), 0xcb);
        EXPECT(gbc.readMem(0xcefc), 0x74);
        // CB 74 0119
        gbc.setState(0x1cb4, 0x33cb, 0xd700, 0x7107, 0x3e5, 0x26e4, 0x0, 0x1);
        gbc.writeMem(0x1cb4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x33cb);
        EXPECT(gbc.pc(), 0x1cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 011A
        gbc.setState(0x37db, 0x741f, 0xfd40, 0x89d0, 0x70b2, 0x7d10, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x741f);
        EXPECT(gbc.pc(), 0x37dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 011B
        gbc.setState(0x4b26, 0xf004, 0xd800, 0x164e, 0xa4a7, 0x57d3, 0x1, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf004);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 011C
        gbc.setState(0x336d, 0x63c2, 0x3eb0, 0x2aa8, 0xeb8, 0x1838, 0x0, 0x1);
        gbc.writeMem(0x336d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x63c2);
        EXPECT(gbc.pc(), 0x336f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 011D
        gbc.setState(0x8637, 0x3f3a, 0xde0, 0xb6c3, 0x20ba, 0xfa4, 0x0, 0x0);
        gbc.writeMem(0x8637, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3f3a);
        EXPECT(gbc.pc(), 0x8639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8637), 0xcb);
        EXPECT(gbc.readMem(0x8638), 0x74);
        // CB 74 011E
        gbc.setState(0x40ea, 0xb84b, 0xf600, 0x5e50, 0x84c5, 0x8bd6, 0x0, 0x1);
        gbc.writeMem(0x40ea, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb84b);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 011F
        gbc.setState(0xc07, 0xe3a9, 0xceb0, 0xf7de, 0x77f9, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0xc07, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe3a9);
        EXPECT(gbc.pc(), 0xc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0120
        gbc.setState(0x1187, 0x6e1, 0xfb20, 0xe883, 0x99a3, 0x55b2, 0x1, 0x0);
        gbc.writeMem(0x1187, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6e1);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0121
        gbc.setState(0x7be4, 0x14bd, 0x4f50, 0x9a7f, 0xabb, 0x70f, 0x1, 0x1);
        gbc.writeMem(0x7be4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x14bd);
        EXPECT(gbc.pc(), 0x7be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0122
        gbc.setState(0x7937, 0x14ec, 0x2500, 0x4f35, 0xccc6, 0xd27f, 0x0, 0x1);
        gbc.writeMem(0x7937, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x7939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0123
        gbc.setState(0xbec0, 0x659d, 0x8a00, 0xc941, 0x4e0a, 0x119, 0x0, 0x1);
        gbc.writeMem(0xbec0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x659d);
        EXPECT(gbc.pc(), 0xbec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec0), 0xcb);
        EXPECT(gbc.readMem(0xbec1), 0x74);
        // CB 74 0124
        gbc.setState(0xcea, 0xdef9, 0x7330, 0x8a00, 0x4c2e, 0x8c91, 0x1, 0x1);
        gbc.writeMem(0xcea, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0xcec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0125
        gbc.setState(0x5cd, 0xe089, 0xdac0, 0x24b7, 0x136d, 0xa431, 0x0, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe089);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0126
        gbc.setState(0x699c, 0x88ce, 0x3460, 0x1ec0, 0x2ef0, 0x2e14, 0x1, 0x0);
        gbc.writeMem(0x699c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x88ce);
        EXPECT(gbc.pc(), 0x699e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0127
        gbc.setState(0xa06a, 0xaa51, 0x3b10, 0xa525, 0x488d, 0xb0a2, 0x0, 0x1);
        gbc.writeMem(0xa06a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaa51);
        EXPECT(gbc.pc(), 0xa06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa06a), 0xcb);
        EXPECT(gbc.readMem(0xa06b), 0x74);
        // CB 74 0128
        gbc.setState(0x5424, 0xdda7, 0x7440, 0xea99, 0xb2c7, 0xff6a, 0x0, 0x1);
        gbc.writeMem(0x5424, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdda7);
        EXPECT(gbc.pc(), 0x5426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0129
        gbc.setState(0xd564, 0x843, 0xf230, 0x4757, 0xfdf2, 0xbd5a, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x843);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd564), 0xcb);
        EXPECT(gbc.readMem(0xd565), 0x74);
        // CB 74 012A
        gbc.setState(0xcf21, 0xfffa, 0xde60, 0x65c5, 0xa474, 0x7141, 0x1, 0x0);
        gbc.writeMem(0xcf21, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfffa);
        EXPECT(gbc.pc(), 0xcf23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf21), 0xcb);
        EXPECT(gbc.readMem(0xcf22), 0x74);
        // CB 74 012B
        gbc.setState(0xa991, 0x2e44, 0xc030, 0x8acb, 0x97f1, 0x3df8, 0x1, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2e44);
        EXPECT(gbc.pc(), 0xa993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa991), 0xcb);
        EXPECT(gbc.readMem(0xa992), 0x74);
        // CB 74 012C
        gbc.setState(0x7a06, 0x90ac, 0x8f20, 0xb4c4, 0xe9ab, 0x514a, 0x1, 0x0);
        gbc.writeMem(0x7a06, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0x7a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 012D
        gbc.setState(0xcbf9, 0x3435, 0x7240, 0x23ad, 0x455a, 0x1266, 0x0, 0x1);
        gbc.writeMem(0xcbf9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0xcbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf9), 0xcb);
        EXPECT(gbc.readMem(0xcbfa), 0x74);
        // CB 74 012F
        gbc.setState(0x4ec3, 0x2054, 0x7e00, 0x1605, 0xc5f9, 0xa853, 0x0, 0x0);
        gbc.writeMem(0x4ec3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0x4ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0130
        gbc.setState(0x1dd8, 0x2cd7, 0x8cc0, 0x860f, 0x352b, 0xc149, 0x1, 0x0);
        gbc.writeMem(0x1dd8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2cd7);
        EXPECT(gbc.pc(), 0x1dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0131
        gbc.setState(0x98ba, 0x801a, 0xf870, 0xeb62, 0x9bef, 0xc3ef, 0x1, 0x1);
        gbc.writeMem(0x98ba, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x801a);
        EXPECT(gbc.pc(), 0x98bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ba), 0xcb);
        EXPECT(gbc.readMem(0x98bb), 0x74);
        // CB 74 0133
        gbc.setState(0xa27b, 0xfcf7, 0xb480, 0x10b7, 0x5a02, 0xfa6d, 0x0, 0x1);
        gbc.writeMem(0xa27b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0xa27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27b), 0xcb);
        EXPECT(gbc.readMem(0xa27c), 0x74);
        // CB 74 0134
        gbc.setState(0x628a, 0x594b, 0x6370, 0xbb68, 0x245, 0x9354, 0x0, 0x0);
        gbc.writeMem(0x628a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0x628c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0135
        gbc.setState(0xc0db, 0xc1d0, 0x8fa0, 0x5cac, 0xc127, 0x5cba, 0x1, 0x1);
        gbc.writeMem(0xc0db, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc1d0);
        EXPECT(gbc.pc(), 0xc0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0db), 0xcb);
        EXPECT(gbc.readMem(0xc0dc), 0x74);
        // CB 74 0136
        gbc.setState(0xdb7e, 0xdc45, 0x250, 0x3c20, 0xce8d, 0x412b, 0x0, 0x0);
        gbc.writeMem(0xdb7e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdc45);
        EXPECT(gbc.pc(), 0xdb80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7e), 0xcb);
        EXPECT(gbc.readMem(0xdb7f), 0x74);
        // CB 74 0137
        gbc.setState(0x8223, 0x5b26, 0xb990, 0x2bf9, 0x8650, 0xe9c9, 0x0, 0x0);
        gbc.writeMem(0x8223, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5b26);
        EXPECT(gbc.pc(), 0x8225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8223), 0xcb);
        EXPECT(gbc.readMem(0x8224), 0x74);
        // CB 74 0138
        gbc.setState(0xa94c, 0x4d96, 0x3220, 0x2149, 0x8834, 0x3902, 0x0, 0x1);
        gbc.writeMem(0xa94c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4d96);
        EXPECT(gbc.pc(), 0xa94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94c), 0xcb);
        EXPECT(gbc.readMem(0xa94d), 0x74);
        // CB 74 0139
        gbc.setState(0xd9a, 0x8572, 0x33b0, 0xb8a, 0xe561, 0x2e4d, 0x1, 0x1);
        gbc.writeMem(0xd9a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8572);
        EXPECT(gbc.pc(), 0xd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 013A
        gbc.setState(0x30a2, 0x118e, 0xaae0, 0x6031, 0x6419, 0x8371, 0x1, 0x0);
        gbc.writeMem(0x30a2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x118e);
        EXPECT(gbc.pc(), 0x30a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 013B
        gbc.setState(0xad09, 0xadd9, 0x34f0, 0xf679, 0xec49, 0xfcb, 0x0, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xadd9);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad09), 0xcb);
        EXPECT(gbc.readMem(0xad0a), 0x74);
        // CB 74 013C
        gbc.setState(0xa22d, 0x91ec, 0x92a0, 0x122e, 0x3bad, 0x1e8, 0x1, 0x1);
        gbc.writeMem(0xa22d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x91ec);
        EXPECT(gbc.pc(), 0xa22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22d), 0xcb);
        EXPECT(gbc.readMem(0xa22e), 0x74);
        // CB 74 013D
        gbc.setState(0x637a, 0x1506, 0x4990, 0xebc8, 0xee40, 0x105e, 0x1, 0x0);
        gbc.writeMem(0x637a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1506);
        EXPECT(gbc.pc(), 0x637c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 013E
        gbc.setState(0xac6, 0x7a22, 0xbfc0, 0xaac7, 0xb912, 0xa5a0, 0x0, 0x1);
        gbc.writeMem(0xac6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7a22);
        EXPECT(gbc.pc(), 0xac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 013F
        gbc.setState(0x821c, 0xec7, 0x10b0, 0x6f3a, 0xe1fe, 0xc397, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xec7);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0x74);
        // CB 74 0141
        gbc.setState(0x9e08, 0xa69f, 0x3830, 0xca84, 0x4651, 0x857b, 0x0, 0x0);
        gbc.writeMem(0x9e08, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa69f);
        EXPECT(gbc.pc(), 0x9e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e08), 0xcb);
        EXPECT(gbc.readMem(0x9e09), 0x74);
        // CB 74 0142
        gbc.setState(0x2e79, 0x7e9, 0x6080, 0xbf67, 0x4fb5, 0x6140, 0x1, 0x1);
        gbc.writeMem(0x2e79, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7e9);
        EXPECT(gbc.pc(), 0x2e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0143
        gbc.setState(0xa9f1, 0x3472, 0xe7c0, 0x27be, 0xdb8b, 0xf746, 0x0, 0x1);
        gbc.writeMem(0xa9f1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3472);
        EXPECT(gbc.pc(), 0xa9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f1), 0xcb);
        EXPECT(gbc.readMem(0xa9f2), 0x74);
        // CB 74 0144
        gbc.setState(0x8fa2, 0x3452, 0x8c40, 0xd4ba, 0x54d8, 0x2b27, 0x1, 0x0);
        gbc.writeMem(0x8fa2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3452);
        EXPECT(gbc.pc(), 0x8fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa2), 0xcb);
        EXPECT(gbc.readMem(0x8fa3), 0x74);
        // CB 74 0145
        gbc.setState(0x75c, 0x4140, 0x2960, 0x48d4, 0x26c0, 0x5434, 0x0, 0x0);
        gbc.writeMem(0x75c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4140);
        EXPECT(gbc.pc(), 0x75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0146
        gbc.setState(0xd017, 0xafdf, 0xed60, 0x197e, 0x3203, 0x632f, 0x1, 0x1);
        gbc.writeMem(0xd017, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xafdf);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd017), 0xcb);
        EXPECT(gbc.readMem(0xd018), 0x74);
        // CB 74 0147
        gbc.setState(0x163, 0x8c9e, 0xae10, 0xbc6d, 0x3297, 0x73b3, 0x1, 0x1);
        gbc.writeMem(0x163, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8c9e);
        EXPECT(gbc.pc(), 0x165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0148
        gbc.setState(0xd701, 0xead2, 0x4440, 0x3f45, 0xa6a9, 0xb3e, 0x0, 0x0);
        gbc.writeMem(0xd701, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xead2);
        EXPECT(gbc.pc(), 0xd703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd701), 0xcb);
        EXPECT(gbc.readMem(0xd702), 0x74);
        // CB 74 0149
        gbc.setState(0x3d3e, 0x80b, 0x9ec0, 0x83e7, 0x31fa, 0x974b, 0x1, 0x1);
        gbc.writeMem(0x3d3e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x80b);
        EXPECT(gbc.pc(), 0x3d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 014A
        gbc.setState(0x43f8, 0xd52e, 0xc40, 0x4f5, 0x5191, 0xc5f3, 0x0, 0x1);
        gbc.writeMem(0x43f8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd52e);
        EXPECT(gbc.pc(), 0x43fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 014B
        gbc.setState(0xd88, 0xb81a, 0x1740, 0xe0b9, 0x9c95, 0x501a, 0x0, 0x0);
        gbc.writeMem(0xd88, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 014C
        gbc.setState(0x194c, 0xffd3, 0xb220, 0x99a5, 0x57fb, 0xe28a, 0x1, 0x0);
        gbc.writeMem(0x194c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0x194e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 014D
        gbc.setState(0xcf83, 0x9d8f, 0xf990, 0xe53d, 0x4920, 0x88ff, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0xcf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf83), 0xcb);
        EXPECT(gbc.readMem(0xcf84), 0x74);
        // CB 74 014E
        gbc.setState(0x98a8, 0x7ad8, 0x4880, 0xb30c, 0x66ab, 0x62f4, 0x0, 0x1);
        gbc.writeMem(0x98a8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7ad8);
        EXPECT(gbc.pc(), 0x98aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a8), 0xcb);
        EXPECT(gbc.readMem(0x98a9), 0x74);
        // CB 74 014F
        gbc.setState(0xc095, 0x306d, 0x7640, 0x16c2, 0xc4ae, 0x21f0, 0x1, 0x1);
        gbc.writeMem(0xc095, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x306d);
        EXPECT(gbc.pc(), 0xc097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc095), 0xcb);
        EXPECT(gbc.readMem(0xc096), 0x74);
        // CB 74 0150
        gbc.setState(0xe533, 0x7b06, 0x54e0, 0xc078, 0xa21b, 0x2ae4, 0x1, 0x1);
        gbc.writeMem(0xe533, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7b06);
        EXPECT(gbc.pc(), 0xe535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe533), 0xcb);
        EXPECT(gbc.readMem(0xe534), 0x74);
        // CB 74 0151
        gbc.setState(0x8e14, 0x68a9, 0x85c0, 0xcc5b, 0x83d2, 0x77b2, 0x1, 0x0);
        gbc.writeMem(0x8e14, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x68a9);
        EXPECT(gbc.pc(), 0x8e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e14), 0xcb);
        EXPECT(gbc.readMem(0x8e15), 0x74);
        // CB 74 0152
        gbc.setState(0x439, 0x52a1, 0x89e0, 0xca1, 0x557e, 0xc925, 0x1, 0x0);
        gbc.writeMem(0x439, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x52a1);
        EXPECT(gbc.pc(), 0x43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0154
        gbc.setState(0xa27d, 0xc025, 0xccd0, 0xf60, 0xb712, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0xa27d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0xa27f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa27d), 0xcb);
        EXPECT(gbc.readMem(0xa27e), 0x74);
        // CB 74 0155
        gbc.setState(0x3359, 0x2623, 0xc130, 0xb745, 0x9d85, 0x9b8, 0x1, 0x1);
        gbc.writeMem(0x3359, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2623);
        EXPECT(gbc.pc(), 0x335b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0156
        gbc.setState(0x635e, 0xb4be, 0xe420, 0xb44b, 0x8bf6, 0x9fc6, 0x0, 0x1);
        gbc.writeMem(0x635e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb4be);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0157
        gbc.setState(0x14d6, 0x2cb1, 0x3d20, 0xf3cb, 0xc665, 0x7d11, 0x0, 0x0);
        gbc.writeMem(0x14d6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2cb1);
        EXPECT(gbc.pc(), 0x14d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0158
        gbc.setState(0x7e9f, 0x114f, 0xd6d0, 0x6bd0, 0x27b9, 0x8921, 0x1, 0x0);
        gbc.writeMem(0x7e9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x114f);
        EXPECT(gbc.pc(), 0x7ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0159
        gbc.setState(0xbe89, 0xe6d5, 0xaf80, 0x1837, 0xb95f, 0x3f8, 0x1, 0x1);
        gbc.writeMem(0xbe89, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe6d5);
        EXPECT(gbc.pc(), 0xbe8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe89), 0xcb);
        EXPECT(gbc.readMem(0xbe8a), 0x74);
        // CB 74 015A
        gbc.setState(0x4350, 0x3a, 0x78b0, 0x820b, 0x9754, 0xf174, 0x0, 0x1);
        gbc.writeMem(0x4350, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0x4352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 015B
        gbc.setState(0xee6, 0x8bd4, 0xa500, 0x6709, 0x2f3f, 0x5c03, 0x0, 0x0);
        gbc.writeMem(0xee6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8bd4);
        EXPECT(gbc.pc(), 0xee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 015C
        gbc.setState(0x167e, 0x383c, 0x5fd0, 0xaf4c, 0xd9fe, 0x40e1, 0x0, 0x1);
        gbc.writeMem(0x167e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x383c);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 015D
        gbc.setState(0x9b3d, 0x2173, 0x48c0, 0x1c77, 0x5268, 0x35c7, 0x1, 0x0);
        gbc.writeMem(0x9b3d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2173);
        EXPECT(gbc.pc(), 0x9b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3d), 0xcb);
        EXPECT(gbc.readMem(0x9b3e), 0x74);
        // CB 74 015E
        gbc.setState(0x2754, 0xde3c, 0x51e0, 0x9f2c, 0x42b9, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x2754, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xde3c);
        EXPECT(gbc.pc(), 0x2756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 015F
        gbc.setState(0x4ce5, 0xb4e6, 0x1e20, 0xaacb, 0x867, 0x90df, 0x1, 0x0);
        gbc.writeMem(0x4ce5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb4e6);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0160
        gbc.setState(0x7d0e, 0xc791, 0x35d0, 0x526a, 0x741a, 0x936f, 0x1, 0x0);
        gbc.writeMem(0x7d0e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc791);
        EXPECT(gbc.pc(), 0x7d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0161
        gbc.setState(0x1f57, 0xa4a3, 0x4390, 0x2acf, 0x4445, 0x9866, 0x0, 0x1);
        gbc.writeMem(0x1f57, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa4a3);
        EXPECT(gbc.pc(), 0x1f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0162
        gbc.setState(0xaa01, 0x15f2, 0x49a0, 0x306c, 0xa13b, 0x7023, 0x0, 0x0);
        gbc.writeMem(0xaa01, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x15f2);
        EXPECT(gbc.pc(), 0xaa03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa01), 0xcb);
        EXPECT(gbc.readMem(0xaa02), 0x74);
        // CB 74 0163
        gbc.setState(0x4a9f, 0xf34b, 0x6eb0, 0x9bbd, 0x77a8, 0x453d, 0x1, 0x1);
        gbc.writeMem(0x4a9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf34b);
        EXPECT(gbc.pc(), 0x4aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0164
        gbc.setState(0x22d0, 0xf26b, 0x1e0, 0x7e5b, 0xb6f0, 0xaac3, 0x1, 0x0);
        gbc.writeMem(0x22d0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf26b);
        EXPECT(gbc.pc(), 0x22d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0165
        gbc.setState(0xeda7, 0x236e, 0x4e40, 0x9519, 0xa361, 0xc5ec, 0x0, 0x0);
        gbc.writeMem(0xeda7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x236e);
        EXPECT(gbc.pc(), 0xeda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda7), 0xcb);
        EXPECT(gbc.readMem(0xeda8), 0x74);
        // CB 74 0166
        gbc.setState(0xe3bb, 0xbada, 0x28e0, 0x56c1, 0x8b13, 0x991a, 0x0, 0x1);
        gbc.writeMem(0xe3bb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbada);
        EXPECT(gbc.pc(), 0xe3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bb), 0xcb);
        EXPECT(gbc.readMem(0xe3bc), 0x74);
        // CB 74 0167
        gbc.setState(0xdd22, 0xd2f8, 0x3830, 0x7c36, 0x3eea, 0x2fd6, 0x1, 0x0);
        gbc.writeMem(0xdd22, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd2f8);
        EXPECT(gbc.pc(), 0xdd24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd22), 0xcb);
        EXPECT(gbc.readMem(0xdd23), 0x74);
        // CB 74 0168
        gbc.setState(0x1cd8, 0xe0db, 0x38c0, 0x3d1d, 0x8789, 0x32c3, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe0db);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0169
        gbc.setState(0xa8c4, 0x157e, 0x8570, 0x56b0, 0x85c9, 0x73bc, 0x0, 0x0);
        gbc.writeMem(0xa8c4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x157e);
        EXPECT(gbc.pc(), 0xa8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c4), 0xcb);
        EXPECT(gbc.readMem(0xa8c5), 0x74);
        // CB 74 016A
        gbc.setState(0x829f, 0xdf27, 0xf6b0, 0x287f, 0xe12f, 0xb83f, 0x1, 0x1);
        gbc.writeMem(0x829f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdf27);
        EXPECT(gbc.pc(), 0x82a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829f), 0xcb);
        EXPECT(gbc.readMem(0x82a0), 0x74);
        // CB 74 016B
        gbc.setState(0x8cd7, 0xe8c2, 0xd770, 0x3ec3, 0xd6b0, 0xb176, 0x0, 0x1);
        gbc.writeMem(0x8cd7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe8c2);
        EXPECT(gbc.pc(), 0x8cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd7), 0xcb);
        EXPECT(gbc.readMem(0x8cd8), 0x74);
        // CB 74 016C
        gbc.setState(0x2701, 0xba80, 0x7cd0, 0x93ba, 0xd4ed, 0xd4dc, 0x1, 0x1);
        gbc.writeMem(0x2701, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xba80);
        EXPECT(gbc.pc(), 0x2703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 016D
        gbc.setState(0x962d, 0x6e7e, 0xc960, 0xb557, 0x87f1, 0x7ac1, 0x0, 0x1);
        gbc.writeMem(0x962d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6e7e);
        EXPECT(gbc.pc(), 0x962f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962d), 0xcb);
        EXPECT(gbc.readMem(0x962e), 0x74);
        // CB 74 016E
        gbc.setState(0x2c6, 0xde7d, 0x4000, 0xfcab, 0xed43, 0x1abc, 0x0, 0x1);
        gbc.writeMem(0x2c6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0x2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 016F
        gbc.setState(0x4cc8, 0x464, 0xcdc0, 0x386d, 0x1ad8, 0xb407, 0x0, 0x1);
        gbc.writeMem(0x4cc8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x464);
        EXPECT(gbc.pc(), 0x4cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0170
        gbc.setState(0xb4e5, 0xead6, 0x7a40, 0x39d8, 0x31e3, 0xe3cc, 0x0, 0x0);
        gbc.writeMem(0xb4e5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xead6);
        EXPECT(gbc.pc(), 0xb4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e5), 0xcb);
        EXPECT(gbc.readMem(0xb4e6), 0x74);
        // CB 74 0171
        gbc.setState(0x704, 0xfba1, 0x6d00, 0x43b7, 0x9d40, 0xbc19, 0x0, 0x1);
        gbc.writeMem(0x704, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfba1);
        EXPECT(gbc.pc(), 0x706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0172
        gbc.setState(0x3eaa, 0xec85, 0x5e40, 0xb90, 0xc6ec, 0xefc3, 0x1, 0x0);
        gbc.writeMem(0x3eaa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xec85);
        EXPECT(gbc.pc(), 0x3eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0173
        gbc.setState(0x5c6e, 0xd6a2, 0xae70, 0x67c6, 0x7f4b, 0xda6c, 0x0, 0x0);
        gbc.writeMem(0x5c6e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd6a2);
        EXPECT(gbc.pc(), 0x5c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0174
        gbc.setState(0x16bd, 0xbcc8, 0xd8c0, 0xe2cc, 0x76e, 0xa4e0, 0x0, 0x0);
        gbc.writeMem(0x16bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbcc8);
        EXPECT(gbc.pc(), 0x16bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0175
        gbc.setState(0xcb44, 0xa558, 0x5050, 0x81b4, 0x2ade, 0x62b5, 0x1, 0x0);
        gbc.writeMem(0xcb44, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa558);
        EXPECT(gbc.pc(), 0xcb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb44), 0xcb);
        EXPECT(gbc.readMem(0xcb45), 0x74);
        // CB 74 0176
        gbc.setState(0x31bd, 0x443d, 0x3c60, 0xa1d1, 0x8ad2, 0x352f, 0x0, 0x1);
        gbc.writeMem(0x31bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x443d);
        EXPECT(gbc.pc(), 0x31bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0177
        gbc.setState(0xae14, 0x87d2, 0x6910, 0xb43, 0x1aae, 0x1807, 0x0, 0x0);
        gbc.writeMem(0xae14, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x87d2);
        EXPECT(gbc.pc(), 0xae16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae14), 0xcb);
        EXPECT(gbc.readMem(0xae15), 0x74);
        // CB 74 0178
        gbc.setState(0x3ad7, 0x42cb, 0xe60, 0x4e49, 0x4841, 0x51b6, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x42cb);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0179
        gbc.setState(0x65d, 0xa0f4, 0x1be0, 0x3662, 0xd60c, 0xcd0c, 0x0, 0x0);
        gbc.writeMem(0x65d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa0f4);
        EXPECT(gbc.pc(), 0x65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 017A
        gbc.setState(0x3a1e, 0xa1ab, 0xec00, 0x175, 0x7c99, 0x2770, 0x1, 0x1);
        gbc.writeMem(0x3a1e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa1ab);
        EXPECT(gbc.pc(), 0x3a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 017B
        gbc.setState(0xc992, 0x7f92, 0x47c0, 0xcd89, 0x1c8a, 0xcaa3, 0x1, 0x1);
        gbc.writeMem(0xc992, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7f92);
        EXPECT(gbc.pc(), 0xc994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc992), 0xcb);
        EXPECT(gbc.readMem(0xc993), 0x74);
        // CB 74 017D
        gbc.setState(0x98c6, 0x4f36, 0xa020, 0x7636, 0x3a33, 0x46e7, 0x0, 0x1);
        gbc.writeMem(0x98c6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4f36);
        EXPECT(gbc.pc(), 0x98c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c6), 0xcb);
        EXPECT(gbc.readMem(0x98c7), 0x74);
        // CB 74 017E
        gbc.setState(0x7f9e, 0x13fd, 0xb520, 0x5bcc, 0x9191, 0x98fa, 0x1, 0x1);
        gbc.writeMem(0x7f9e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x13fd);
        EXPECT(gbc.pc(), 0x7fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 017F
        gbc.setState(0xa849, 0x3d0f, 0xfb80, 0x95f0, 0x4b45, 0x54fd, 0x0, 0x1);
        gbc.writeMem(0xa849, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3d0f);
        EXPECT(gbc.pc(), 0xa84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa849), 0xcb);
        EXPECT(gbc.readMem(0xa84a), 0x74);
        // CB 74 0180
        gbc.setState(0xb3fb, 0x7bb3, 0xe300, 0x581a, 0xd4e9, 0x5bfb, 0x0, 0x0);
        gbc.writeMem(0xb3fb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7bb3);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fb), 0xcb);
        EXPECT(gbc.readMem(0xb3fc), 0x74);
        // CB 74 0181
        gbc.setState(0x994f, 0x7968, 0xa60, 0x1040, 0x6171, 0xb28d, 0x0, 0x1);
        gbc.writeMem(0x994f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7968);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994f), 0xcb);
        EXPECT(gbc.readMem(0x9950), 0x74);
        // CB 74 0182
        gbc.setState(0x562c, 0xc173, 0x650, 0x6622, 0xf716, 0x3d4d, 0x0, 0x0);
        gbc.writeMem(0x562c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc173);
        EXPECT(gbc.pc(), 0x562e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0183
        gbc.setState(0xd883, 0x68a4, 0x6320, 0x2086, 0x6b29, 0x1017, 0x0, 0x0);
        gbc.writeMem(0xd883, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x68a4);
        EXPECT(gbc.pc(), 0xd885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd883), 0xcb);
        EXPECT(gbc.readMem(0xd884), 0x74);
        // CB 74 0184
        gbc.setState(0x6c9, 0x6429, 0x91a0, 0x69f9, 0x4d87, 0xc291, 0x0, 0x0);
        gbc.writeMem(0x6c9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6429);
        EXPECT(gbc.pc(), 0x6cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0185
        gbc.setState(0x4914, 0x9ef2, 0xa0b0, 0xf47c, 0xc7a0, 0x4632, 0x1, 0x0);
        gbc.writeMem(0x4914, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9ef2);
        EXPECT(gbc.pc(), 0x4916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0186
        gbc.setState(0x4e57, 0x622f, 0xaf30, 0xf33f, 0xbf6d, 0x6f79, 0x0, 0x1);
        gbc.writeMem(0x4e57, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x622f);
        EXPECT(gbc.pc(), 0x4e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0187
        gbc.setState(0x8df0, 0x6f82, 0x4530, 0x963c, 0x1d2e, 0x2e08, 0x1, 0x1);
        gbc.writeMem(0x8df0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6f82);
        EXPECT(gbc.pc(), 0x8df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df0), 0xcb);
        EXPECT(gbc.readMem(0x8df1), 0x74);
        // CB 74 0188
        gbc.setState(0x6b36, 0xc85b, 0x9290, 0x7d04, 0xb80, 0xe2a8, 0x1, 0x0);
        gbc.writeMem(0x6b36, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc85b);
        EXPECT(gbc.pc(), 0x6b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0189
        gbc.setState(0x51cf, 0x7079, 0x9090, 0x76de, 0x4c56, 0x8ef6, 0x1, 0x0);
        gbc.writeMem(0x51cf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7079);
        EXPECT(gbc.pc(), 0x51d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 018A
        gbc.setState(0xdc7b, 0x213d, 0x81f0, 0x3f3a, 0x325, 0x8256, 0x1, 0x1);
        gbc.writeMem(0xdc7b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x213d);
        EXPECT(gbc.pc(), 0xdc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7b), 0xcb);
        EXPECT(gbc.readMem(0xdc7c), 0x74);
        // CB 74 018B
        gbc.setState(0x68a5, 0x594, 0x63f0, 0x2284, 0x171c, 0x881b, 0x1, 0x1);
        gbc.writeMem(0x68a5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x594);
        EXPECT(gbc.pc(), 0x68a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 018C
        gbc.setState(0x23a2, 0xaeef, 0x6790, 0x558, 0x2cdb, 0xa7e4, 0x0, 0x1);
        gbc.writeMem(0x23a2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaeef);
        EXPECT(gbc.pc(), 0x23a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 018E
        gbc.setState(0xd5fd, 0x5a15, 0xe300, 0xac6d, 0x4eb1, 0x3794, 0x1, 0x0);
        gbc.writeMem(0xd5fd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5a15);
        EXPECT(gbc.pc(), 0xd5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fd), 0xcb);
        EXPECT(gbc.readMem(0xd5fe), 0x74);
        // CB 74 018F
        gbc.setState(0x9469, 0xbd02, 0x3430, 0x261c, 0x661a, 0xdd71, 0x1, 0x0);
        gbc.writeMem(0x9469, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbd02);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9469), 0xcb);
        EXPECT(gbc.readMem(0x946a), 0x74);
        // CB 74 0190
        gbc.setState(0xd53e, 0x6e23, 0x4900, 0xb547, 0x86cb, 0xcbca, 0x0, 0x0);
        gbc.writeMem(0xd53e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6e23);
        EXPECT(gbc.pc(), 0xd540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53e), 0xcb);
        EXPECT(gbc.readMem(0xd53f), 0x74);
        // CB 74 0191
        gbc.setState(0xc988, 0xf02e, 0x91f0, 0x266c, 0x1461, 0xde8f, 0x0, 0x0);
        gbc.writeMem(0xc988, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf02e);
        EXPECT(gbc.pc(), 0xc98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc988), 0xcb);
        EXPECT(gbc.readMem(0xc989), 0x74);
        // CB 74 0192
        gbc.setState(0x9960, 0x1a5, 0xb330, 0x2668, 0xf976, 0xe789, 0x1, 0x0);
        gbc.writeMem(0x9960, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1a5);
        EXPECT(gbc.pc(), 0x9962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9960), 0xcb);
        EXPECT(gbc.readMem(0x9961), 0x74);
        // CB 74 0193
        gbc.setState(0x6a15, 0x66a7, 0xdd10, 0xaf05, 0xca9a, 0x4ad7, 0x0, 0x0);
        gbc.writeMem(0x6a15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x66a7);
        EXPECT(gbc.pc(), 0x6a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0194
        gbc.setState(0x9f19, 0x9d65, 0xf9a0, 0x4774, 0xb01e, 0xe17d, 0x1, 0x1);
        gbc.writeMem(0x9f19, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f19), 0xcb);
        EXPECT(gbc.readMem(0x9f1a), 0x74);
        // CB 74 0195
        gbc.setState(0xdfa1, 0xd223, 0xe330, 0x4923, 0x1a9e, 0xcfd5, 0x0, 0x0);
        gbc.writeMem(0xdfa1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd223);
        EXPECT(gbc.pc(), 0xdfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa1), 0xcb);
        EXPECT(gbc.readMem(0xdfa2), 0x74);
        // CB 74 0196
        gbc.setState(0x9797, 0xb063, 0x2e0, 0x520c, 0x15b8, 0xf5ae, 0x0, 0x1);
        gbc.writeMem(0x9797, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb063);
        EXPECT(gbc.pc(), 0x9799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9797), 0xcb);
        EXPECT(gbc.readMem(0x9798), 0x74);
        // CB 74 0197
        gbc.setState(0x5e9a, 0xa638, 0xe8d0, 0x20ff, 0xc8d0, 0x31e5, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa638);
        EXPECT(gbc.pc(), 0x5e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0198
        gbc.setState(0xa962, 0x3a6, 0x1800, 0x190d, 0xeae1, 0xcae1, 0x0, 0x1);
        gbc.writeMem(0xa962, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3a6);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa962), 0xcb);
        EXPECT(gbc.readMem(0xa963), 0x74);
        // CB 74 0199
        gbc.setState(0x45ab, 0xeb53, 0x6900, 0xec11, 0xcbda, 0xe956, 0x0, 0x0);
        gbc.writeMem(0x45ab, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0x45ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 019A
        gbc.setState(0xf33, 0x689, 0xc2f0, 0x5a0, 0x67be, 0x7f98, 0x0, 0x1);
        gbc.writeMem(0xf33, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x689);
        EXPECT(gbc.pc(), 0xf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 019B
        gbc.setState(0x2246, 0x8ea1, 0xe3c0, 0x4bf, 0x201a, 0x45aa, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8ea1);
        EXPECT(gbc.pc(), 0x2248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 019C
        gbc.setState(0x19b7, 0xc43, 0x3d50, 0xc36c, 0xbfc2, 0x4a78, 0x1, 0x0);
        gbc.writeMem(0x19b7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc43);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 019D
        gbc.setState(0xec0b, 0x8519, 0x2790, 0x76b8, 0x4a23, 0xaf0f, 0x1, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8519);
        EXPECT(gbc.pc(), 0xec0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0b), 0xcb);
        EXPECT(gbc.readMem(0xec0c), 0x74);
        // CB 74 019E
        gbc.setState(0x740f, 0x4c92, 0xb490, 0x7291, 0xa542, 0x8d6, 0x0, 0x1);
        gbc.writeMem(0x740f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4c92);
        EXPECT(gbc.pc(), 0x7411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 019F
        gbc.setState(0x9c61, 0x680d, 0xa140, 0xa898, 0x1d38, 0x8a6d, 0x1, 0x1);
        gbc.writeMem(0x9c61, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x680d);
        EXPECT(gbc.pc(), 0x9c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c61), 0xcb);
        EXPECT(gbc.readMem(0x9c62), 0x74);
        // CB 74 01A0
        gbc.setState(0xee7d, 0x6ad8, 0xbea0, 0x7f10, 0x987e, 0xc3e8, 0x1, 0x1);
        gbc.writeMem(0xee7d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6ad8);
        EXPECT(gbc.pc(), 0xee7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee7d), 0xcb);
        EXPECT(gbc.readMem(0xee7e), 0x74);
        // CB 74 01A1
        gbc.setState(0x285b, 0x82a6, 0x6270, 0x8699, 0xb69c, 0xed59, 0x1, 0x1);
        gbc.writeMem(0x285b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x82a6);
        EXPECT(gbc.pc(), 0x285d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01A2
        gbc.setState(0xb154, 0x5ea0, 0xa130, 0xc81b, 0x4ef3, 0x6462, 0x1, 0x1);
        gbc.writeMem(0xb154, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5ea0);
        EXPECT(gbc.pc(), 0xb156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb154), 0xcb);
        EXPECT(gbc.readMem(0xb155), 0x74);
        // CB 74 01A3
        gbc.setState(0x47c5, 0x1d4f, 0xb9f0, 0x224d, 0x2b83, 0x22e1, 0x1, 0x0);
        gbc.writeMem(0x47c5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1d4f);
        EXPECT(gbc.pc(), 0x47c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01A4
        gbc.setState(0x825f, 0x9101, 0xb760, 0x8326, 0xb439, 0xf207, 0x1, 0x0);
        gbc.writeMem(0x825f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9101);
        EXPECT(gbc.pc(), 0x8261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x825f), 0xcb);
        EXPECT(gbc.readMem(0x8260), 0x74);
        // CB 74 01A6
        gbc.setState(0xebd4, 0xca22, 0xc020, 0x8b97, 0xfc36, 0xee2, 0x0, 0x0);
        gbc.writeMem(0xebd4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xca22);
        EXPECT(gbc.pc(), 0xebd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd4), 0xcb);
        EXPECT(gbc.readMem(0xebd5), 0x74);
        // CB 74 01A7
        gbc.setState(0xa502, 0xad9, 0x89d0, 0x82d1, 0xee6b, 0x7b25, 0x0, 0x0);
        gbc.writeMem(0xa502, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xad9);
        EXPECT(gbc.pc(), 0xa504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa502), 0xcb);
        EXPECT(gbc.readMem(0xa503), 0x74);
        // CB 74 01A8
        gbc.setState(0x3216, 0x1a16, 0xdf80, 0xc781, 0x19ca, 0x1ef, 0x1, 0x1);
        gbc.writeMem(0x3216, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1a16);
        EXPECT(gbc.pc(), 0x3218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01A9
        gbc.setState(0x4646, 0x96f3, 0x7020, 0x66db, 0x58ef, 0xe34d, 0x0, 0x0);
        gbc.writeMem(0x4646, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x96f3);
        EXPECT(gbc.pc(), 0x4648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01AA
        gbc.setState(0xc7e3, 0xf36a, 0xc800, 0x3bd3, 0x9a53, 0xc6c4, 0x0, 0x1);
        gbc.writeMem(0xc7e3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf36a);
        EXPECT(gbc.pc(), 0xc7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e3), 0xcb);
        EXPECT(gbc.readMem(0xc7e4), 0x74);
        // CB 74 01AB
        gbc.setState(0x6a0a, 0xdb1, 0xbd0, 0x2ce1, 0xc870, 0x7718, 0x0, 0x1);
        gbc.writeMem(0x6a0a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdb1);
        EXPECT(gbc.pc(), 0x6a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01AC
        gbc.setState(0x1cfc, 0xeb60, 0xb890, 0xe765, 0xfc12, 0x38f8, 0x0, 0x0);
        gbc.writeMem(0x1cfc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01AD
        gbc.setState(0xb8a9, 0x80e8, 0x6ed0, 0xca7d, 0x4f, 0x48ee, 0x0, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x80e8);
        EXPECT(gbc.pc(), 0xb8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a9), 0xcb);
        EXPECT(gbc.readMem(0xb8aa), 0x74);
        // CB 74 01AE
        gbc.setState(0x80c6, 0xf933, 0x81b0, 0x7c09, 0xafe9, 0xa690, 0x1, 0x0);
        gbc.writeMem(0x80c6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf933);
        EXPECT(gbc.pc(), 0x80c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c6), 0xcb);
        EXPECT(gbc.readMem(0x80c7), 0x74);
        // CB 74 01AF
        gbc.setState(0x8c7e, 0xc067, 0xc3c0, 0x2a4e, 0x59d1, 0x8ae, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc067);
        EXPECT(gbc.pc(), 0x8c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7e), 0xcb);
        EXPECT(gbc.readMem(0x8c7f), 0x74);
        // CB 74 01B0
        gbc.setState(0xc7ec, 0x6bf5, 0x8ed0, 0xeff8, 0x9188, 0xb429, 0x1, 0x1);
        gbc.writeMem(0xc7ec, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6bf5);
        EXPECT(gbc.pc(), 0xc7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ec), 0xcb);
        EXPECT(gbc.readMem(0xc7ed), 0x74);
        // CB 74 01B1
        gbc.setState(0x61f0, 0x26cf, 0x3660, 0x39d3, 0xa5b8, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0x61f0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x26cf);
        EXPECT(gbc.pc(), 0x61f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01B2
        gbc.setState(0x9981, 0xbc61, 0xb70, 0xb540, 0xbf3c, 0xbc54, 0x0, 0x1);
        gbc.writeMem(0x9981, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbc61);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9981), 0xcb);
        EXPECT(gbc.readMem(0x9982), 0x74);
        // CB 74 01B3
        gbc.setState(0x5776, 0x5c01, 0x9f20, 0xeec3, 0xc3f9, 0x3953, 0x0, 0x1);
        gbc.writeMem(0x5776, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c01);
        EXPECT(gbc.pc(), 0x5778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01B5
        gbc.setState(0x126f, 0xde6a, 0xdbb0, 0x7b46, 0xc890, 0xa0b1, 0x1, 0x0);
        gbc.writeMem(0x126f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xde6a);
        EXPECT(gbc.pc(), 0x1271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01B6
        gbc.setState(0x3eb1, 0xcf80, 0xc620, 0x655d, 0x89e4, 0xe922, 0x1, 0x1);
        gbc.writeMem(0x3eb1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcf80);
        EXPECT(gbc.pc(), 0x3eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01B7
        gbc.setState(0x34ec, 0xd53, 0x8600, 0x6aac, 0xca7c, 0x31e6, 0x0, 0x1);
        gbc.writeMem(0x34ec, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd53);
        EXPECT(gbc.pc(), 0x34ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01B8
        gbc.setState(0xda88, 0xa4d3, 0x78d0, 0xdec6, 0x5edf, 0xc65b, 0x0, 0x0);
        gbc.writeMem(0xda88, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa4d3);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda88), 0xcb);
        EXPECT(gbc.readMem(0xda89), 0x74);
        // CB 74 01B9
        gbc.setState(0xa0cf, 0x2b6c, 0xd070, 0xfa1f, 0x615e, 0x7cf9, 0x0, 0x0);
        gbc.writeMem(0xa0cf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2b6c);
        EXPECT(gbc.pc(), 0xa0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0cf), 0xcb);
        EXPECT(gbc.readMem(0xa0d0), 0x74);
        // CB 74 01BA
        gbc.setState(0x3e94, 0x96c8, 0x6d90, 0x95ff, 0x3221, 0x80b2, 0x1, 0x1);
        gbc.writeMem(0x3e94, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x96c8);
        EXPECT(gbc.pc(), 0x3e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01BB
        gbc.setState(0x4be7, 0x39a2, 0x740, 0xcd69, 0xd1c8, 0xe7d6, 0x0, 0x0);
        gbc.writeMem(0x4be7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x39a2);
        EXPECT(gbc.pc(), 0x4be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01BC
        gbc.setState(0x955, 0x8f37, 0x3530, 0x65f1, 0x112f, 0x362f, 0x1, 0x0);
        gbc.writeMem(0x955, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8f37);
        EXPECT(gbc.pc(), 0x957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01BD
        gbc.setState(0x6424, 0x67c7, 0xb780, 0xff13, 0x90a2, 0x9305, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x67c7);
        EXPECT(gbc.pc(), 0x6426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01BE
        gbc.setState(0xdf9f, 0x3565, 0x1560, 0x3568, 0x7700, 0x1d16, 0x0, 0x0);
        gbc.writeMem(0xdf9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3565);
        EXPECT(gbc.pc(), 0xdfa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9f), 0xcb);
        EXPECT(gbc.readMem(0xdfa0), 0x74);
        // CB 74 01BF
        gbc.setState(0xe948, 0x2ced, 0x5c90, 0xa7dc, 0xd49d, 0x7e82, 0x1, 0x0);
        gbc.writeMem(0xe948, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2ced);
        EXPECT(gbc.pc(), 0xe94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe948), 0xcb);
        EXPECT(gbc.readMem(0xe949), 0x74);
        // CB 74 01C0
        gbc.setState(0x64a, 0xcdb1, 0xff30, 0x9cba, 0x298c, 0xe85b, 0x0, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcdb1);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01C1
        gbc.setState(0x4b85, 0x4b43, 0x28f0, 0xff6f, 0x8f02, 0x3a44, 0x0, 0x0);
        gbc.writeMem(0x4b85, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4b43);
        EXPECT(gbc.pc(), 0x4b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01C2
        gbc.setState(0x900d, 0x6b06, 0x27d0, 0x661f, 0x7cce, 0xf764, 0x0, 0x0);
        gbc.writeMem(0x900d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6b06);
        EXPECT(gbc.pc(), 0x900f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900d), 0xcb);
        EXPECT(gbc.readMem(0x900e), 0x74);
        // CB 74 01C3
        gbc.setState(0x4531, 0x98d6, 0x6f40, 0xbbbd, 0x4aa9, 0x8dce, 0x1, 0x1);
        gbc.writeMem(0x4531, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x98d6);
        EXPECT(gbc.pc(), 0x4533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01C4
        gbc.setState(0xb312, 0x4ea0, 0xa80, 0xd819, 0x4372, 0xc5e1, 0x1, 0x1);
        gbc.writeMem(0xb312, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4ea0);
        EXPECT(gbc.pc(), 0xb314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb312), 0xcb);
        EXPECT(gbc.readMem(0xb313), 0x74);
        // CB 74 01C5
        gbc.setState(0x288c, 0x53f4, 0x72f0, 0xd4c5, 0xd683, 0xf0fc, 0x1, 0x1);
        gbc.writeMem(0x288c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x53f4);
        EXPECT(gbc.pc(), 0x288e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01C6
        gbc.setState(0x3ab0, 0x862c, 0xce00, 0x4e66, 0x6a9, 0xd16, 0x0, 0x1);
        gbc.writeMem(0x3ab0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x862c);
        EXPECT(gbc.pc(), 0x3ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01C7
        gbc.setState(0x1bab, 0x36d3, 0xf6a0, 0x7258, 0x2af5, 0x60da, 0x0, 0x1);
        gbc.writeMem(0x1bab, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x36d3);
        EXPECT(gbc.pc(), 0x1bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01C8
        gbc.setState(0xc6cb, 0xf1c0, 0xaaf0, 0x32e1, 0x98b6, 0x7ca2, 0x0, 0x0);
        gbc.writeMem(0xc6cb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0xc6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6cb), 0xcb);
        EXPECT(gbc.readMem(0xc6cc), 0x74);
        // CB 74 01C9
        gbc.setState(0xcae6, 0xf5c1, 0xd200, 0x35f6, 0xcf21, 0x9b5c, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0xcae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae6), 0xcb);
        EXPECT(gbc.readMem(0xcae7), 0x74);
        // CB 74 01CA
        gbc.setState(0xcb0c, 0x9953, 0xdc80, 0x23e7, 0x9ed, 0xfacb, 0x0, 0x1);
        gbc.writeMem(0xcb0c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9953);
        EXPECT(gbc.pc(), 0xcb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0c), 0xcb);
        EXPECT(gbc.readMem(0xcb0d), 0x74);
        // CB 74 01CB
        gbc.setState(0xdf0c, 0xd10e, 0xb650, 0x552f, 0x8269, 0x35e9, 0x0, 0x0);
        gbc.writeMem(0xdf0c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd10e);
        EXPECT(gbc.pc(), 0xdf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0c), 0xcb);
        EXPECT(gbc.readMem(0xdf0d), 0x74);
        // CB 74 01CC
        gbc.setState(0x44cb, 0x43, 0xfd40, 0x7b37, 0x861d, 0xf3ee, 0x1, 0x1);
        gbc.writeMem(0x44cb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x43);
        EXPECT(gbc.pc(), 0x44cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01CD
        gbc.setState(0x4abe, 0xf8b2, 0xa020, 0xb94f, 0x294b, 0xc13a, 0x0, 0x1);
        gbc.writeMem(0x4abe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf8b2);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01CE
        gbc.setState(0x1f94, 0xac23, 0xef60, 0x2ca, 0xb9f6, 0x636c, 0x0, 0x0);
        gbc.writeMem(0x1f94, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xac23);
        EXPECT(gbc.pc(), 0x1f96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01CF
        gbc.setState(0x77b4, 0x3a92, 0x7e00, 0x35, 0xa407, 0xc6d4, 0x0, 0x1);
        gbc.writeMem(0x77b4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3a92);
        EXPECT(gbc.pc(), 0x77b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01D0
        gbc.setState(0x21c4, 0x71f9, 0xcbe0, 0xa506, 0xd008, 0x8aa5, 0x0, 0x1);
        gbc.writeMem(0x21c4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x71f9);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01D1
        gbc.setState(0x462b, 0x318e, 0x31a0, 0x7400, 0x2d94, 0x7af0, 0x1, 0x1);
        gbc.writeMem(0x462b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x318e);
        EXPECT(gbc.pc(), 0x462d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01D2
        gbc.setState(0x193, 0xac72, 0x8010, 0x8275, 0x570a, 0xf890, 0x1, 0x1);
        gbc.writeMem(0x193, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xac72);
        EXPECT(gbc.pc(), 0x195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01D3
        gbc.setState(0xdd3b, 0xbb66, 0x4870, 0x6f09, 0xdd50, 0xaf67, 0x1, 0x0);
        gbc.writeMem(0xdd3b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbb66);
        EXPECT(gbc.pc(), 0xdd3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3b), 0xcb);
        EXPECT(gbc.readMem(0xdd3c), 0x74);
        // CB 74 01D5
        gbc.setState(0xddb7, 0xb926, 0x91a0, 0x970b, 0x601a, 0x7fea, 0x1, 0x0);
        gbc.writeMem(0xddb7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb926);
        EXPECT(gbc.pc(), 0xddb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb7), 0xcb);
        EXPECT(gbc.readMem(0xddb8), 0x74);
        // CB 74 01D6
        gbc.setState(0xc03f, 0x55a2, 0xab40, 0x24af, 0x6b28, 0x7ea1, 0x0, 0x1);
        gbc.writeMem(0xc03f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x55a2);
        EXPECT(gbc.pc(), 0xc041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03f), 0xcb);
        EXPECT(gbc.readMem(0xc040), 0x74);
        // CB 74 01D7
        gbc.setState(0x2316, 0x5206, 0x6b30, 0x91e8, 0xe92b, 0x9103, 0x1, 0x1);
        gbc.writeMem(0x2316, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5206);
        EXPECT(gbc.pc(), 0x2318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01D8
        gbc.setState(0x5d70, 0x8f18, 0x3850, 0xcadd, 0xbcc1, 0x6971, 0x1, 0x0);
        gbc.writeMem(0x5d70, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8f18);
        EXPECT(gbc.pc(), 0x5d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01D9
        gbc.setState(0x5cd9, 0xa744, 0x9490, 0xf780, 0xac7f, 0x83d2, 0x0, 0x0);
        gbc.writeMem(0x5cd9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa744);
        EXPECT(gbc.pc(), 0x5cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01DA
        gbc.setState(0x4400, 0xf457, 0xcb90, 0xf012, 0xb85d, 0x2d53, 0x1, 0x0);
        gbc.writeMem(0x4400, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf457);
        EXPECT(gbc.pc(), 0x4402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01DB
        gbc.setState(0x80bb, 0xf6f, 0x6c0, 0x915, 0x149d, 0xa510, 0x0, 0x0);
        gbc.writeMem(0x80bb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf6f);
        EXPECT(gbc.pc(), 0x80bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bb), 0xcb);
        EXPECT(gbc.readMem(0x80bc), 0x74);
        // CB 74 01DC
        gbc.setState(0xe03, 0xd68d, 0x7c40, 0x30e0, 0x16fa, 0xebbf, 0x1, 0x0);
        gbc.writeMem(0xe03, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd68d);
        EXPECT(gbc.pc(), 0xe05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01DE
        gbc.setState(0x4335, 0xa892, 0xf5b0, 0x9058, 0x799b, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0x4335, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa892);
        EXPECT(gbc.pc(), 0x4337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01DF
        gbc.setState(0xba51, 0x6fbd, 0x6e80, 0x70d6, 0x8425, 0x9a03, 0x1, 0x1);
        gbc.writeMem(0xba51, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6fbd);
        EXPECT(gbc.pc(), 0xba53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba51), 0xcb);
        EXPECT(gbc.readMem(0xba52), 0x74);
        // CB 74 01E0
        gbc.setState(0x9fc5, 0x791a, 0x9250, 0xa594, 0x12e7, 0x3a26, 0x1, 0x1);
        gbc.writeMem(0x9fc5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x791a);
        EXPECT(gbc.pc(), 0x9fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc5), 0xcb);
        EXPECT(gbc.readMem(0x9fc6), 0x74);
        // CB 74 01E1
        gbc.setState(0xead5, 0x941f, 0x3740, 0x3ea9, 0xea71, 0x8dc2, 0x0, 0x0);
        gbc.writeMem(0xead5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x941f);
        EXPECT(gbc.pc(), 0xead7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead5), 0xcb);
        EXPECT(gbc.readMem(0xead6), 0x74);
        // CB 74 01E2
        gbc.setState(0xbdc9, 0xa059, 0x8b40, 0x6898, 0x87b, 0xaba0, 0x1, 0x0);
        gbc.writeMem(0xbdc9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa059);
        EXPECT(gbc.pc(), 0xbdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc9), 0xcb);
        EXPECT(gbc.readMem(0xbdca), 0x74);
        // CB 74 01E3
        gbc.setState(0x4dd0, 0xdfe, 0xfd30, 0xd864, 0x696e, 0x9f34, 0x0, 0x1);
        gbc.writeMem(0x4dd0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0x4dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01E4
        gbc.setState(0x9e03, 0xd5c2, 0x4f00, 0x7d41, 0xb7bb, 0xae6c, 0x1, 0x1);
        gbc.writeMem(0x9e03, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd5c2);
        EXPECT(gbc.pc(), 0x9e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e03), 0xcb);
        EXPECT(gbc.readMem(0x9e04), 0x74);
        // CB 74 01E5
        gbc.setState(0x5d96, 0x5931, 0x4350, 0x42c4, 0xcf99, 0xda55, 0x0, 0x1);
        gbc.writeMem(0x5d96, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5931);
        EXPECT(gbc.pc(), 0x5d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01E6
        gbc.setState(0x58c4, 0xa16e, 0x37c0, 0x498f, 0xebe2, 0x8897, 0x0, 0x0);
        gbc.writeMem(0x58c4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa16e);
        EXPECT(gbc.pc(), 0x58c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01E7
        gbc.setState(0xd12a, 0x7b86, 0x89f0, 0xa034, 0x19ec, 0x6b15, 0x0, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7b86);
        EXPECT(gbc.pc(), 0xd12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12a), 0xcb);
        EXPECT(gbc.readMem(0xd12b), 0x74);
        // CB 74 01E8
        gbc.setState(0xc78c, 0xbea9, 0x46f0, 0x4000, 0x9085, 0x567c, 0x1, 0x1);
        gbc.writeMem(0xc78c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0xc78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc78c), 0xcb);
        EXPECT(gbc.readMem(0xc78d), 0x74);
        // CB 74 01E9
        gbc.setState(0xb4c8, 0x7d32, 0xdc70, 0x9207, 0x102a, 0xe607, 0x0, 0x0);
        gbc.writeMem(0xb4c8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7d32);
        EXPECT(gbc.pc(), 0xb4ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c8), 0xcb);
        EXPECT(gbc.readMem(0xb4c9), 0x74);
        // CB 74 01EA
        gbc.setState(0x2ea8, 0x7d65, 0xfdb0, 0xa283, 0x19d6, 0xc82d, 0x0, 0x0);
        gbc.writeMem(0x2ea8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7d65);
        EXPECT(gbc.pc(), 0x2eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01EB
        gbc.setState(0xa756, 0xeed7, 0x5580, 0xcca3, 0x8fac, 0x9670, 0x0, 0x0);
        gbc.writeMem(0xa756, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xeed7);
        EXPECT(gbc.pc(), 0xa758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa756), 0xcb);
        EXPECT(gbc.readMem(0xa757), 0x74);
        // CB 74 01EC
        gbc.setState(0x9021, 0x7f10, 0xa40, 0x1db2, 0xd85e, 0xa975, 0x0, 0x1);
        gbc.writeMem(0x9021, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0x9023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9021), 0xcb);
        EXPECT(gbc.readMem(0x9022), 0x74);
        // CB 74 01ED
        gbc.setState(0x1c6b, 0x8cbb, 0x6820, 0x3ce8, 0xa965, 0xb8b8, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8cbb);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01EE
        gbc.setState(0x57ad, 0x786, 0x79e0, 0x551d, 0x450f, 0x8dc8, 0x0, 0x0);
        gbc.writeMem(0x57ad, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x786);
        EXPECT(gbc.pc(), 0x57af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01EF
        gbc.setState(0x351e, 0xe57a, 0x7200, 0x463e, 0xcb70, 0x107, 0x0, 0x1);
        gbc.writeMem(0x351e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe57a);
        EXPECT(gbc.pc(), 0x3520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01F1
        gbc.setState(0xd74a, 0x5b53, 0x9af0, 0xc758, 0x1a72, 0xb752, 0x0, 0x0);
        gbc.writeMem(0xd74a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5b53);
        EXPECT(gbc.pc(), 0xd74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74a), 0xcb);
        EXPECT(gbc.readMem(0xd74b), 0x74);
        // CB 74 01F2
        gbc.setState(0x2393, 0xc45e, 0xa750, 0xa8f8, 0x2a68, 0x7fa8, 0x0, 0x0);
        gbc.writeMem(0x2393, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc45e);
        EXPECT(gbc.pc(), 0x2395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01F3
        gbc.setState(0x45d5, 0xb0d0, 0x4f40, 0xe0f3, 0xfe46, 0xe1eb, 0x0, 0x1);
        gbc.writeMem(0x45d5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb0d0);
        EXPECT(gbc.pc(), 0x45d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01F4
        gbc.setState(0xe656, 0x1f21, 0x4480, 0x6c50, 0xea37, 0xc7db, 0x1, 0x0);
        gbc.writeMem(0xe656, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1f21);
        EXPECT(gbc.pc(), 0xe658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe656), 0xcb);
        EXPECT(gbc.readMem(0xe657), 0x74);
        // CB 74 01F5
        gbc.setState(0xe3da, 0x98f2, 0x4370, 0xf8, 0xd220, 0xdf15, 0x0, 0x1);
        gbc.writeMem(0xe3da, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x98f2);
        EXPECT(gbc.pc(), 0xe3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3da), 0xcb);
        EXPECT(gbc.readMem(0xe3db), 0x74);
        // CB 74 01F6
        gbc.setState(0x88df, 0xf415, 0xab60, 0xdb08, 0xd4f2, 0x489a, 0x1, 0x0);
        gbc.writeMem(0x88df, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf415);
        EXPECT(gbc.pc(), 0x88e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88df), 0xcb);
        EXPECT(gbc.readMem(0x88e0), 0x74);
        // CB 74 01F7
        gbc.setState(0x8973, 0x7d0e, 0x3f70, 0x916d, 0x88ea, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0x8973, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7d0e);
        EXPECT(gbc.pc(), 0x8975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8973), 0xcb);
        EXPECT(gbc.readMem(0x8974), 0x74);
        // CB 74 01F8
        gbc.setState(0x71b3, 0x78f7, 0xb0d0, 0xcdb9, 0x884f, 0x3afb, 0x0, 0x0);
        gbc.writeMem(0x71b3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x78f7);
        EXPECT(gbc.pc(), 0x71b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01F9
        gbc.setState(0xda08, 0x14cd, 0x8970, 0xc323, 0x75df, 0x9334, 0x0, 0x1);
        gbc.writeMem(0xda08, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x14cd);
        EXPECT(gbc.pc(), 0xda0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda08), 0xcb);
        EXPECT(gbc.readMem(0xda09), 0x74);
        // CB 74 01FA
        gbc.setState(0x80d3, 0x2610, 0xccd0, 0xbc78, 0xbd6, 0x3f2c, 0x0, 0x0);
        gbc.writeMem(0x80d3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0x80d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d3), 0xcb);
        EXPECT(gbc.readMem(0x80d4), 0x74);
        // CB 74 01FB
        gbc.setState(0x274d, 0xb495, 0x9740, 0x1c28, 0xed07, 0x9ae8, 0x0, 0x1);
        gbc.writeMem(0x274d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb495);
        EXPECT(gbc.pc(), 0x274f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 01FC
        gbc.setState(0x8b90, 0xbd1d, 0x1830, 0x29f8, 0xf770, 0x6e6c, 0x1, 0x1);
        gbc.writeMem(0x8b90, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbd1d);
        EXPECT(gbc.pc(), 0x8b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b90), 0xcb);
        EXPECT(gbc.readMem(0x8b91), 0x74);
        // CB 74 01FD
        gbc.setState(0x17a1, 0x770d, 0x2bd0, 0x707b, 0x4dd0, 0xfd6e, 0x1, 0x1);
        gbc.writeMem(0x17a1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x770d);
        EXPECT(gbc.pc(), 0x17a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 01FE
        gbc.setState(0xa17c, 0x8b78, 0xab40, 0x2176, 0xb8be, 0x43c6, 0x1, 0x0);
        gbc.writeMem(0xa17c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8b78);
        EXPECT(gbc.pc(), 0xa17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17c), 0xcb);
        EXPECT(gbc.readMem(0xa17d), 0x74);
        // CB 74 01FF
        gbc.setState(0x4b0c, 0x4d1e, 0xe8a0, 0x3536, 0x541e, 0xd88c, 0x1, 0x0);
        gbc.writeMem(0x4b0c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4d1e);
        EXPECT(gbc.pc(), 0x4b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0200
        gbc.setState(0x2dba, 0x6eac, 0x9ae0, 0x9b24, 0xc57a, 0x149d, 0x0, 0x1);
        gbc.writeMem(0x2dba, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6eac);
        EXPECT(gbc.pc(), 0x2dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0201
        gbc.setState(0xc5a, 0xf5f9, 0x4c0, 0xa087, 0xec3d, 0xacce, 0x0, 0x1);
        gbc.writeMem(0xc5a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf5f9);
        EXPECT(gbc.pc(), 0xc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0202
        gbc.setState(0xdc1c, 0x9f1a, 0xa820, 0x4b4c, 0x541b, 0x51ed, 0x0, 0x0);
        gbc.writeMem(0xdc1c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9f1a);
        EXPECT(gbc.pc(), 0xdc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1c), 0xcb);
        EXPECT(gbc.readMem(0xdc1d), 0x74);
        // CB 74 0203
        gbc.setState(0x449b, 0x1bc9, 0x7740, 0xac6, 0x5ea3, 0x2546, 0x0, 0x1);
        gbc.writeMem(0x449b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1bc9);
        EXPECT(gbc.pc(), 0x449d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0204
        gbc.setState(0x1e8f, 0xe1bf, 0x690, 0x477b, 0xcf0, 0xa016, 0x1, 0x0);
        gbc.writeMem(0x1e8f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe1bf);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0205
        gbc.setState(0x1dbe, 0x5457, 0xa500, 0x6be5, 0x5f43, 0xee1a, 0x0, 0x1);
        gbc.writeMem(0x1dbe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5457);
        EXPECT(gbc.pc(), 0x1dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0206
        gbc.setState(0xc62d, 0x41a6, 0xb470, 0x3bde, 0xbb2f, 0xc2b0, 0x0, 0x0);
        gbc.writeMem(0xc62d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x41a6);
        EXPECT(gbc.pc(), 0xc62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62d), 0xcb);
        EXPECT(gbc.readMem(0xc62e), 0x74);
        // CB 74 0207
        gbc.setState(0x83e9, 0x3361, 0x4770, 0x8af1, 0x6a5d, 0xcb2b, 0x0, 0x0);
        gbc.writeMem(0x83e9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3361);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0x74);
        // CB 74 0208
        gbc.setState(0x7030, 0x968b, 0xbe90, 0xf2d0, 0xc8a9, 0xcb9a, 0x1, 0x0);
        gbc.writeMem(0x7030, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0x7032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0209
        gbc.setState(0xda3b, 0x78a5, 0xecc0, 0xbb8b, 0xa6b7, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0xda3b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3b), 0xcb);
        EXPECT(gbc.readMem(0xda3c), 0x74);
        // CB 74 020A
        gbc.setState(0x293, 0x4279, 0x2e70, 0x7f39, 0x8f7, 0x83f7, 0x0, 0x1);
        gbc.writeMem(0x293, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4279);
        EXPECT(gbc.pc(), 0x295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 020B
        gbc.setState(0xee9f, 0xf562, 0x8bd0, 0xdaf2, 0x12b5, 0xa2ef, 0x0, 0x0);
        gbc.writeMem(0xee9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf562);
        EXPECT(gbc.pc(), 0xeea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9f), 0xcb);
        EXPECT(gbc.readMem(0xeea0), 0x74);
        // CB 74 020C
        gbc.setState(0xb6e5, 0xa3f6, 0x9200, 0x7cc2, 0x9333, 0xe641, 0x0, 0x0);
        gbc.writeMem(0xb6e5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa3f6);
        EXPECT(gbc.pc(), 0xb6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e5), 0xcb);
        EXPECT(gbc.readMem(0xb6e6), 0x74);
        // CB 74 020D
        gbc.setState(0xbce6, 0x5fd3, 0x3200, 0x3e44, 0x57b4, 0x2670, 0x0, 0x1);
        gbc.writeMem(0xbce6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5fd3);
        EXPECT(gbc.pc(), 0xbce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce6), 0xcb);
        EXPECT(gbc.readMem(0xbce7), 0x74);
        // CB 74 020E
        gbc.setState(0x6fd0, 0xaa94, 0xb290, 0xd16e, 0x80c8, 0x7e75, 0x1, 0x0);
        gbc.writeMem(0x6fd0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaa94);
        EXPECT(gbc.pc(), 0x6fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 020F
        gbc.setState(0xba79, 0xf7c0, 0x7050, 0xfbf2, 0x931b, 0x20b8, 0x1, 0x0);
        gbc.writeMem(0xba79, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf7c0);
        EXPECT(gbc.pc(), 0xba7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba79), 0xcb);
        EXPECT(gbc.readMem(0xba7a), 0x74);
        // CB 74 0210
        gbc.setState(0x175f, 0xf0bc, 0x7390, 0x67, 0x79f0, 0x58a2, 0x1, 0x1);
        gbc.writeMem(0x175f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf0bc);
        EXPECT(gbc.pc(), 0x1761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0211
        gbc.setState(0x959, 0x3e62, 0xe370, 0x4fb0, 0x3fba, 0xce48, 0x0, 0x1);
        gbc.writeMem(0x959, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3e62);
        EXPECT(gbc.pc(), 0x95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0212
        gbc.setState(0xb5e2, 0x98dc, 0xa700, 0xb202, 0xe95c, 0x4851, 0x0, 0x1);
        gbc.writeMem(0xb5e2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x98dc);
        EXPECT(gbc.pc(), 0xb5e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e2), 0xcb);
        EXPECT(gbc.readMem(0xb5e3), 0x74);
        // CB 74 0213
        gbc.setState(0xa17e, 0x8b15, 0x2240, 0xf44c, 0xb6d6, 0x9dc3, 0x0, 0x1);
        gbc.writeMem(0xa17e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8b15);
        EXPECT(gbc.pc(), 0xa180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17e), 0xcb);
        EXPECT(gbc.readMem(0xa17f), 0x74);
        // CB 74 0214
        gbc.setState(0x3987, 0x3935, 0x5560, 0xe8a9, 0x2137, 0x6dd8, 0x1, 0x0);
        gbc.writeMem(0x3987, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3935);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0215
        gbc.setState(0xeb09, 0xefa, 0xb030, 0xad01, 0x4fc, 0x2aa0, 0x1, 0x1);
        gbc.writeMem(0xeb09, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xefa);
        EXPECT(gbc.pc(), 0xeb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb09), 0xcb);
        EXPECT(gbc.readMem(0xeb0a), 0x74);
        // CB 74 0216
        gbc.setState(0x1c04, 0x5da5, 0xe010, 0xf127, 0x5d82, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x1c04, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5da5);
        EXPECT(gbc.pc(), 0x1c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0217
        gbc.setState(0xb23d, 0x5339, 0x4680, 0x968f, 0x63e0, 0xd788, 0x1, 0x1);
        gbc.writeMem(0xb23d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5339);
        EXPECT(gbc.pc(), 0xb23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23d), 0xcb);
        EXPECT(gbc.readMem(0xb23e), 0x74);
        // CB 74 0218
        gbc.setState(0xee2, 0x32b5, 0xbbd0, 0x5d0d, 0x3bb9, 0xb11f, 0x0, 0x0);
        gbc.writeMem(0xee2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x32b5);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0219
        gbc.setState(0x9322, 0x16b, 0xd070, 0xde25, 0xe3c3, 0xc4fb, 0x1, 0x0);
        gbc.writeMem(0x9322, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x16b);
        EXPECT(gbc.pc(), 0x9324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9322), 0xcb);
        EXPECT(gbc.readMem(0x9323), 0x74);
        // CB 74 021A
        gbc.setState(0x8947, 0xec1, 0x9560, 0xc4d4, 0xbfdd, 0xe9a6, 0x0, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xec1);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0x74);
        // CB 74 021B
        gbc.setState(0x341d, 0x6bf9, 0x39b0, 0x502, 0xd16b, 0x59ca, 0x0, 0x1);
        gbc.writeMem(0x341d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6bf9);
        EXPECT(gbc.pc(), 0x341f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 021D
        gbc.setState(0x1785, 0xe0ca, 0x40a0, 0x1ccf, 0x3dd2, 0xa2eb, 0x0, 0x0);
        gbc.writeMem(0x1785, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe0ca);
        EXPECT(gbc.pc(), 0x1787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 021E
        gbc.setState(0x429, 0xa3fc, 0x9650, 0x6fe0, 0xcd9b, 0x3425, 0x1, 0x0);
        gbc.writeMem(0x429, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0x42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 021F
        gbc.setState(0xaa74, 0xa9fd, 0x33a0, 0x7021, 0x2b23, 0x5fc3, 0x0, 0x0);
        gbc.writeMem(0xaa74, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa9fd);
        EXPECT(gbc.pc(), 0xaa76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa74), 0xcb);
        EXPECT(gbc.readMem(0xaa75), 0x74);
        // CB 74 0220
        gbc.setState(0x863a, 0xca21, 0x23b0, 0x63ef, 0xa848, 0x7716, 0x0, 0x0);
        gbc.writeMem(0x863a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xca21);
        EXPECT(gbc.pc(), 0x863c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863a), 0xcb);
        EXPECT(gbc.readMem(0x863b), 0x74);
        // CB 74 0221
        gbc.setState(0x15f7, 0xecd0, 0xefc0, 0x5b7c, 0x68b7, 0x30aa, 0x0, 0x0);
        gbc.writeMem(0x15f7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xecd0);
        EXPECT(gbc.pc(), 0x15f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0222
        gbc.setState(0x9b48, 0xffe7, 0x9dc0, 0x1bf7, 0xaabb, 0x1d07, 0x0, 0x1);
        gbc.writeMem(0x9b48, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0x9b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b48), 0xcb);
        EXPECT(gbc.readMem(0x9b49), 0x74);
        // CB 74 0223
        gbc.setState(0x8ca1, 0xb4e9, 0x49a0, 0xb51a, 0x35db, 0x3f9a, 0x0, 0x1);
        gbc.writeMem(0x8ca1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb4e9);
        EXPECT(gbc.pc(), 0x8ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca1), 0xcb);
        EXPECT(gbc.readMem(0x8ca2), 0x74);
        // CB 74 0224
        gbc.setState(0x51ec, 0x8400, 0xc220, 0x405e, 0xd26f, 0x8643, 0x0, 0x1);
        gbc.writeMem(0x51ec, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8400);
        EXPECT(gbc.pc(), 0x51ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0225
        gbc.setState(0x7374, 0x905e, 0x8180, 0xf69c, 0x8325, 0x735e, 0x1, 0x0);
        gbc.writeMem(0x7374, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x905e);
        EXPECT(gbc.pc(), 0x7376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0226
        gbc.setState(0x6c64, 0x3d8e, 0xbd70, 0x60ff, 0x80d8, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3d8e);
        EXPECT(gbc.pc(), 0x6c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0227
        gbc.setState(0x4dca, 0x69de, 0x3bf0, 0xc749, 0xd49, 0xc289, 0x0, 0x1);
        gbc.writeMem(0x4dca, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x69de);
        EXPECT(gbc.pc(), 0x4dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0228
        gbc.setState(0x47b3, 0x5830, 0xa3a0, 0x91f6, 0x1f73, 0xede4, 0x0, 0x1);
        gbc.writeMem(0x47b3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5830);
        EXPECT(gbc.pc(), 0x47b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0229
        gbc.setState(0x534, 0xe28, 0xa420, 0xd919, 0xde5c, 0x8d4f, 0x0, 0x0);
        gbc.writeMem(0x534, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe28);
        EXPECT(gbc.pc(), 0x536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 022A
        gbc.setState(0x9eb2, 0x3af4, 0x7bf0, 0x90c2, 0x6501, 0x7c6, 0x1, 0x1);
        gbc.writeMem(0x9eb2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3af4);
        EXPECT(gbc.pc(), 0x9eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb2), 0xcb);
        EXPECT(gbc.readMem(0x9eb3), 0x74);
        // CB 74 022B
        gbc.setState(0x94c5, 0x84f3, 0x8960, 0x71fc, 0xba2a, 0x398b, 0x1, 0x0);
        gbc.writeMem(0x94c5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x84f3);
        EXPECT(gbc.pc(), 0x94c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c5), 0xcb);
        EXPECT(gbc.readMem(0x94c6), 0x74);
        // CB 74 022C
        gbc.setState(0x153b, 0xa41c, 0xa2c0, 0x6497, 0x4ea9, 0x8c70, 0x0, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa41c);
        EXPECT(gbc.pc(), 0x153d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 022D
        gbc.setState(0xaa02, 0xd3d6, 0x3b50, 0xe7e7, 0x3702, 0x7388, 0x0, 0x1);
        gbc.writeMem(0xaa02, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd3d6);
        EXPECT(gbc.pc(), 0xaa04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa02), 0xcb);
        EXPECT(gbc.readMem(0xaa03), 0x74);
        // CB 74 022E
        gbc.setState(0xaa4a, 0x7598, 0x65a0, 0xbe9d, 0x3963, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0xaa4a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7598);
        EXPECT(gbc.pc(), 0xaa4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4a), 0xcb);
        EXPECT(gbc.readMem(0xaa4b), 0x74);
        // CB 74 022F
        gbc.setState(0xcdf6, 0x44ff, 0x8540, 0x9b25, 0x420d, 0x65ca, 0x0, 0x0);
        gbc.writeMem(0xcdf6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0xcdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf6), 0xcb);
        EXPECT(gbc.readMem(0xcdf7), 0x74);
        // CB 74 0230
        gbc.setState(0x8dd1, 0xa42a, 0x1040, 0x2827, 0xcfe5, 0x9c81, 0x0, 0x1);
        gbc.writeMem(0x8dd1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x8dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd1), 0xcb);
        EXPECT(gbc.readMem(0x8dd2), 0x74);
        // CB 74 0231
        gbc.setState(0x9485, 0x8f30, 0x5a30, 0x148e, 0x3d6, 0x2cb1, 0x1, 0x1);
        gbc.writeMem(0x9485, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8f30);
        EXPECT(gbc.pc(), 0x9487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9485), 0xcb);
        EXPECT(gbc.readMem(0x9486), 0x74);
        // CB 74 0232
        gbc.setState(0x9d42, 0xc469, 0x39c0, 0xe42e, 0x43e3, 0x3176, 0x1, 0x1);
        gbc.writeMem(0x9d42, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc469);
        EXPECT(gbc.pc(), 0x9d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d42), 0xcb);
        EXPECT(gbc.readMem(0x9d43), 0x74);
        // CB 74 0233
        gbc.setState(0xdcf7, 0xaf77, 0xa640, 0xbd57, 0x53a5, 0x2f84, 0x0, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xaf77);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf7), 0xcb);
        EXPECT(gbc.readMem(0xdcf8), 0x74);
        // CB 74 0234
        gbc.setState(0x2457, 0x30db, 0x1a70, 0x2f62, 0xda75, 0x5b93, 0x1, 0x1);
        gbc.writeMem(0x2457, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x30db);
        EXPECT(gbc.pc(), 0x2459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0235
        gbc.setState(0xa137, 0x8bfe, 0xb30, 0x478e, 0xd243, 0x5199, 0x0, 0x0);
        gbc.writeMem(0xa137, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8bfe);
        EXPECT(gbc.pc(), 0xa139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa137), 0xcb);
        EXPECT(gbc.readMem(0xa138), 0x74);
        // CB 74 0237
        gbc.setState(0xbda3, 0xa164, 0x90b0, 0x8b11, 0xd72d, 0x25ab, 0x0, 0x1);
        gbc.writeMem(0xbda3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa164);
        EXPECT(gbc.pc(), 0xbda5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda3), 0xcb);
        EXPECT(gbc.readMem(0xbda4), 0x74);
        // CB 74 0238
        gbc.setState(0x66d2, 0x453c, 0xb380, 0x7034, 0x706d, 0xae0, 0x0, 0x1);
        gbc.writeMem(0x66d2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x66d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0239
        gbc.setState(0x1b4b, 0xdae4, 0xbf00, 0xc3d3, 0x1962, 0xde62, 0x1, 0x0);
        gbc.writeMem(0x1b4b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdae4);
        EXPECT(gbc.pc(), 0x1b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 023A
        gbc.setState(0x8fa6, 0xc72e, 0x3640, 0xf79f, 0x4b50, 0x9246, 0x1, 0x1);
        gbc.writeMem(0x8fa6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc72e);
        EXPECT(gbc.pc(), 0x8fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa6), 0xcb);
        EXPECT(gbc.readMem(0x8fa7), 0x74);
        // CB 74 023B
        gbc.setState(0x965e, 0xdf7b, 0x20e0, 0xb5a5, 0xddda, 0xede8, 0x0, 0x1);
        gbc.writeMem(0x965e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdf7b);
        EXPECT(gbc.pc(), 0x9660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965e), 0xcb);
        EXPECT(gbc.readMem(0x965f), 0x74);
        // CB 74 023C
        gbc.setState(0x1b3b, 0xbda7, 0xdd30, 0x204b, 0x98f0, 0x6eb5, 0x0, 0x0);
        gbc.writeMem(0x1b3b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbda7);
        EXPECT(gbc.pc(), 0x1b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 023D
        gbc.setState(0x4ec0, 0xcc4e, 0x4fc0, 0x1752, 0x2bba, 0x8dd8, 0x0, 0x1);
        gbc.writeMem(0x4ec0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcc4e);
        EXPECT(gbc.pc(), 0x4ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 023E
        gbc.setState(0x1f83, 0x69ab, 0xb8e0, 0xc450, 0x2019, 0x9420, 0x0, 0x0);
        gbc.writeMem(0x1f83, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x69ab);
        EXPECT(gbc.pc(), 0x1f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 023F
        gbc.setState(0x74c1, 0xa515, 0x7390, 0xcbbc, 0x7150, 0x91ad, 0x1, 0x0);
        gbc.writeMem(0x74c1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa515);
        EXPECT(gbc.pc(), 0x74c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0240
        gbc.setState(0x945d, 0x7239, 0x8f20, 0xada7, 0x9faf, 0xbcc2, 0x0, 0x0);
        gbc.writeMem(0x945d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7239);
        EXPECT(gbc.pc(), 0x945f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945d), 0xcb);
        EXPECT(gbc.readMem(0x945e), 0x74);
        // CB 74 0243
        gbc.setState(0x3b97, 0x7922, 0xc7f0, 0x5e, 0x7ef8, 0x9997, 0x1, 0x1);
        gbc.writeMem(0x3b97, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7922);
        EXPECT(gbc.pc(), 0x3b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0244
        gbc.setState(0xd9da, 0xd77c, 0x8600, 0x84ea, 0xde5c, 0xa7db, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd77c);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9da), 0xcb);
        EXPECT(gbc.readMem(0xd9db), 0x74);
        // CB 74 0245
        gbc.setState(0x2d22, 0x944, 0xc810, 0x8d74, 0x789a, 0x8d47, 0x0, 0x0);
        gbc.writeMem(0x2d22, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x944);
        EXPECT(gbc.pc(), 0x2d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0246
        gbc.setState(0x4d87, 0xd0ed, 0xf330, 0x97c8, 0x7031, 0xe407, 0x0, 0x0);
        gbc.writeMem(0x4d87, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0x4d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0247
        gbc.setState(0x2ecd, 0xff22, 0x5930, 0x5ec4, 0x2841, 0xf632, 0x0, 0x0);
        gbc.writeMem(0x2ecd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0x2ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0248
        gbc.setState(0x762a, 0xbed6, 0x1790, 0xa125, 0x4d0f, 0x27fd, 0x1, 0x0);
        gbc.writeMem(0x762a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbed6);
        EXPECT(gbc.pc(), 0x762c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0249
        gbc.setState(0xf0f, 0x9914, 0x5c30, 0xed42, 0xdf91, 0x873d, 0x1, 0x1);
        gbc.writeMem(0xf0f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9914);
        EXPECT(gbc.pc(), 0xf11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 024A
        gbc.setState(0xed10, 0x5bad, 0xe940, 0x51a, 0x6e14, 0x7c96, 0x0, 0x0);
        gbc.writeMem(0xed10, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5bad);
        EXPECT(gbc.pc(), 0xed12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed10), 0xcb);
        EXPECT(gbc.readMem(0xed11), 0x74);
        // CB 74 024B
        gbc.setState(0xb5cc, 0x10ea, 0xed50, 0xcb6, 0x7804, 0x10c1, 0x1, 0x0);
        gbc.writeMem(0xb5cc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x10ea);
        EXPECT(gbc.pc(), 0xb5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cc), 0xcb);
        EXPECT(gbc.readMem(0xb5cd), 0x74);
        // CB 74 024C
        gbc.setState(0x5524, 0xb115, 0xb7b0, 0xae5a, 0x87a4, 0xb099, 0x0, 0x0);
        gbc.writeMem(0x5524, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb115);
        EXPECT(gbc.pc(), 0x5526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 024D
        gbc.setState(0x7e62, 0xc8a7, 0x3e40, 0xa66e, 0x3e64, 0x3aaf, 0x1, 0x0);
        gbc.writeMem(0x7e62, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc8a7);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 024E
        gbc.setState(0x29a4, 0xc941, 0xbc30, 0x4db4, 0xd66f, 0x8c0c, 0x1, 0x1);
        gbc.writeMem(0x29a4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc941);
        EXPECT(gbc.pc(), 0x29a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0250
        gbc.setState(0xa838, 0x9913, 0xcc20, 0x7697, 0x423b, 0x8450, 0x0, 0x0);
        gbc.writeMem(0xa838, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9913);
        EXPECT(gbc.pc(), 0xa83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa838), 0xcb);
        EXPECT(gbc.readMem(0xa839), 0x74);
        // CB 74 0251
        gbc.setState(0x1d6c, 0x92fe, 0xd070, 0x533d, 0x7531, 0x3241, 0x0, 0x0);
        gbc.writeMem(0x1d6c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x92fe);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0252
        gbc.setState(0x7e29, 0x4bc8, 0x4ce0, 0xbe3f, 0x75ee, 0xb2d4, 0x1, 0x1);
        gbc.writeMem(0x7e29, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4bc8);
        EXPECT(gbc.pc(), 0x7e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0253
        gbc.setState(0x66e8, 0x77eb, 0x19f0, 0xd1d9, 0xf4e9, 0x78e9, 0x1, 0x0);
        gbc.writeMem(0x66e8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x77eb);
        EXPECT(gbc.pc(), 0x66ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0254
        gbc.setState(0x6f68, 0xe3c1, 0xd230, 0xc69e, 0xb559, 0x9cc9, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe3c1);
        EXPECT(gbc.pc(), 0x6f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0255
        gbc.setState(0x269, 0x5055, 0xe600, 0x59b0, 0x3560, 0x8563, 0x0, 0x1);
        gbc.writeMem(0x269, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5055);
        EXPECT(gbc.pc(), 0x26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0256
        gbc.setState(0xc239, 0xeb88, 0xa0d0, 0xbb46, 0xb751, 0x1867, 0x1, 0x0);
        gbc.writeMem(0xc239, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xeb88);
        EXPECT(gbc.pc(), 0xc23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0xcb);
        EXPECT(gbc.readMem(0xc23a), 0x74);
        // CB 74 0257
        gbc.setState(0x14bd, 0x8cbe, 0xc5d0, 0x885b, 0x9a50, 0x3970, 0x0, 0x1);
        gbc.writeMem(0x14bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8cbe);
        EXPECT(gbc.pc(), 0x14bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0258
        gbc.setState(0x5deb, 0xf9e4, 0x9900, 0x2614, 0x2f5d, 0x8524, 0x0, 0x1);
        gbc.writeMem(0x5deb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf9e4);
        EXPECT(gbc.pc(), 0x5ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0259
        gbc.setState(0xe862, 0xe5a9, 0xc910, 0xb8ae, 0x5ae9, 0x4542, 0x1, 0x0);
        gbc.writeMem(0xe862, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe5a9);
        EXPECT(gbc.pc(), 0xe864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe862), 0xcb);
        EXPECT(gbc.readMem(0xe863), 0x74);
        // CB 74 025B
        gbc.setState(0x7101, 0xd0df, 0x330, 0x3040, 0x1766, 0xf4da, 0x1, 0x1);
        gbc.writeMem(0x7101, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd0df);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 025C
        gbc.setState(0xe12, 0x8907, 0x7d70, 0x367e, 0x2427, 0xebbf, 0x0, 0x0);
        gbc.writeMem(0xe12, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8907);
        EXPECT(gbc.pc(), 0xe14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 025D
        gbc.setState(0x7b39, 0xe6cf, 0x2ca0, 0xecd1, 0x4c98, 0x71ae, 0x0, 0x1);
        gbc.writeMem(0x7b39, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe6cf);
        EXPECT(gbc.pc(), 0x7b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 025E
        gbc.setState(0x86cd, 0xaa1, 0xf430, 0x249c, 0x8574, 0xcce5, 0x1, 0x0);
        gbc.writeMem(0x86cd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaa1);
        EXPECT(gbc.pc(), 0x86cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cd), 0xcb);
        EXPECT(gbc.readMem(0x86ce), 0x74);
        // CB 74 025F
        gbc.setState(0xc632, 0xfaba, 0x9020, 0x6864, 0x21aa, 0xabb4, 0x0, 0x1);
        gbc.writeMem(0xc632, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfaba);
        EXPECT(gbc.pc(), 0xc634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc632), 0xcb);
        EXPECT(gbc.readMem(0xc633), 0x74);
        // CB 74 0260
        gbc.setState(0x671, 0xe141, 0xe820, 0x8dcc, 0xe03, 0xccc4, 0x1, 0x0);
        gbc.writeMem(0x671, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe141);
        EXPECT(gbc.pc(), 0x673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0261
        gbc.setState(0xd1c0, 0x6186, 0x41a0, 0xb801, 0x42db, 0x942c, 0x0, 0x1);
        gbc.writeMem(0xd1c0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6186);
        EXPECT(gbc.pc(), 0xd1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c0), 0xcb);
        EXPECT(gbc.readMem(0xd1c1), 0x74);
        // CB 74 0262
        gbc.setState(0x31e9, 0xbdb7, 0xbbc0, 0xb046, 0x397, 0xccf3, 0x0, 0x0);
        gbc.writeMem(0x31e9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbdb7);
        EXPECT(gbc.pc(), 0x31eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0263
        gbc.setState(0x4ca1, 0x704, 0xec00, 0xd880, 0x8590, 0x7d56, 0x0, 0x1);
        gbc.writeMem(0x4ca1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x704);
        EXPECT(gbc.pc(), 0x4ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0264
        gbc.setState(0xd50f, 0x9c95, 0x840, 0x9af9, 0xc486, 0x1728, 0x1, 0x0);
        gbc.writeMem(0xd50f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0xd511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd50f), 0xcb);
        EXPECT(gbc.readMem(0xd510), 0x74);
        // CB 74 0266
        gbc.setState(0x2a74, 0xa218, 0x1610, 0xe8dc, 0xbcf1, 0x83aa, 0x0, 0x1);
        gbc.writeMem(0x2a74, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa218);
        EXPECT(gbc.pc(), 0x2a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0267
        gbc.setState(0x7b6f, 0x5989, 0x7560, 0xde04, 0x90ec, 0xb480, 0x0, 0x1);
        gbc.writeMem(0x7b6f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5989);
        EXPECT(gbc.pc(), 0x7b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0268
        gbc.setState(0x5e9b, 0x58f5, 0xd090, 0xe7d3, 0xd169, 0x5bbb, 0x0, 0x0);
        gbc.writeMem(0x5e9b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x58f5);
        EXPECT(gbc.pc(), 0x5e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0269
        gbc.setState(0x728e, 0x385, 0x6e50, 0x6cf0, 0x8ff, 0x9129, 0x0, 0x0);
        gbc.writeMem(0x728e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x385);
        EXPECT(gbc.pc(), 0x7290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 026B
        gbc.setState(0xd142, 0xad90, 0x83d0, 0xfe03, 0xc38a, 0x24ef, 0x1, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xad90);
        EXPECT(gbc.pc(), 0xd144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd142), 0xcb);
        EXPECT(gbc.readMem(0xd143), 0x74);
        // CB 74 026C
        gbc.setState(0x6f33, 0xa70d, 0x4be0, 0x1608, 0x1a9e, 0xaa6e, 0x0, 0x0);
        gbc.writeMem(0x6f33, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa70d);
        EXPECT(gbc.pc(), 0x6f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 026E
        gbc.setState(0xe1a2, 0x1f8b, 0x70e0, 0xf89d, 0x2d93, 0xee0c, 0x1, 0x1);
        gbc.writeMem(0xe1a2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1f8b);
        EXPECT(gbc.pc(), 0xe1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a2), 0xcb);
        EXPECT(gbc.readMem(0xe1a3), 0x74);
        // CB 74 026F
        gbc.setState(0xb9fa, 0xb49f, 0x9430, 0x1f85, 0x9150, 0x4414, 0x1, 0x1);
        gbc.writeMem(0xb9fa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0xb9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fa), 0xcb);
        EXPECT(gbc.readMem(0xb9fb), 0x74);
        // CB 74 0270
        gbc.setState(0xe193, 0x2844, 0x5f40, 0xe548, 0x431d, 0xf40b, 0x0, 0x1);
        gbc.writeMem(0xe193, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2844);
        EXPECT(gbc.pc(), 0xe195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe193), 0xcb);
        EXPECT(gbc.readMem(0xe194), 0x74);
        // CB 74 0271
        gbc.setState(0x7410, 0xe41f, 0xc430, 0xcf4, 0xf073, 0x93a2, 0x0, 0x1);
        gbc.writeMem(0x7410, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe41f);
        EXPECT(gbc.pc(), 0x7412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0272
        gbc.setState(0xd774, 0xe064, 0xa3b0, 0xe107, 0xf964, 0xa199, 0x0, 0x1);
        gbc.writeMem(0xd774, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe064);
        EXPECT(gbc.pc(), 0xd776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd774), 0xcb);
        EXPECT(gbc.readMem(0xd775), 0x74);
        // CB 74 0273
        gbc.setState(0x791a, 0x23df, 0x2560, 0x93b, 0x1f26, 0x7cff, 0x1, 0x0);
        gbc.writeMem(0x791a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x23df);
        EXPECT(gbc.pc(), 0x791c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0274
        gbc.setState(0x462c, 0xb849, 0x47e0, 0x1e70, 0x598c, 0xe861, 0x0, 0x0);
        gbc.writeMem(0x462c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb849);
        EXPECT(gbc.pc(), 0x462e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0275
        gbc.setState(0xc741, 0x4607, 0x54f0, 0x8d96, 0x115f, 0x5d25, 0x1, 0x1);
        gbc.writeMem(0xc741, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4607);
        EXPECT(gbc.pc(), 0xc743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc741), 0xcb);
        EXPECT(gbc.readMem(0xc742), 0x74);
        // CB 74 0276
        gbc.setState(0x2a20, 0x8251, 0xec00, 0xd849, 0x65d2, 0x29bc, 0x1, 0x0);
        gbc.writeMem(0x2a20, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8251);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0277
        gbc.setState(0x1a63, 0x6716, 0xc970, 0x71f, 0x6c84, 0x7408, 0x1, 0x1);
        gbc.writeMem(0x1a63, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6716);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0278
        gbc.setState(0x7e12, 0x9e93, 0x6d10, 0x390b, 0xecfe, 0x72e7, 0x0, 0x0);
        gbc.writeMem(0x7e12, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9e93);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0279
        gbc.setState(0x5338, 0x5db8, 0x9340, 0xd260, 0x9b22, 0xa901, 0x0, 0x0);
        gbc.writeMem(0x5338, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5db8);
        EXPECT(gbc.pc(), 0x533a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 027A
        gbc.setState(0x5b3f, 0x4b6b, 0xe970, 0xb5ec, 0x1e54, 0xd62f, 0x1, 0x0);
        gbc.writeMem(0x5b3f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4b6b);
        EXPECT(gbc.pc(), 0x5b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 027B
        gbc.setState(0x10ae, 0x9648, 0x5f50, 0x37, 0x5bfd, 0x51a1, 0x0, 0x1);
        gbc.writeMem(0x10ae, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9648);
        EXPECT(gbc.pc(), 0x10b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 027C
        gbc.setState(0x93d4, 0x1621, 0xfef0, 0xe919, 0x68a0, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x93d4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1621);
        EXPECT(gbc.pc(), 0x93d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d4), 0xcb);
        EXPECT(gbc.readMem(0x93d5), 0x74);
        // CB 74 027D
        gbc.setState(0x8a40, 0x7d88, 0x2350, 0x99bd, 0xae0c, 0x7f66, 0x1, 0x1);
        gbc.writeMem(0x8a40, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7d88);
        EXPECT(gbc.pc(), 0x8a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a40), 0xcb);
        EXPECT(gbc.readMem(0x8a41), 0x74);
        // CB 74 027E
        gbc.setState(0xb89c, 0xf19f, 0xb490, 0x5137, 0x8c2f, 0xfb39, 0x1, 0x0);
        gbc.writeMem(0xb89c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf19f);
        EXPECT(gbc.pc(), 0xb89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89c), 0xcb);
        EXPECT(gbc.readMem(0xb89d), 0x74);
        // CB 74 027F
        gbc.setState(0x2ba7, 0xb38b, 0xfa70, 0xf005, 0xefee, 0xadb7, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb38b);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0280
        gbc.setState(0xb8a3, 0x8757, 0xac30, 0x1439, 0x36ff, 0xab69, 0x1, 0x0);
        gbc.writeMem(0xb8a3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8757);
        EXPECT(gbc.pc(), 0xb8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a3), 0xcb);
        EXPECT(gbc.readMem(0xb8a4), 0x74);
        // CB 74 0281
        gbc.setState(0x4972, 0xc68d, 0x49e0, 0x199f, 0xec51, 0x5824, 0x1, 0x1);
        gbc.writeMem(0x4972, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc68d);
        EXPECT(gbc.pc(), 0x4974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0282
        gbc.setState(0xcc10, 0x79d3, 0xebc0, 0x8f9c, 0xeedd, 0xa7fd, 0x0, 0x1);
        gbc.writeMem(0xcc10, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x79d3);
        EXPECT(gbc.pc(), 0xcc12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc10), 0xcb);
        EXPECT(gbc.readMem(0xcc11), 0x74);
        // CB 74 0283
        gbc.setState(0x5d8a, 0x74a2, 0x350, 0xd24a, 0xb2c3, 0x6c58, 0x0, 0x0);
        gbc.writeMem(0x5d8a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x74a2);
        EXPECT(gbc.pc(), 0x5d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0284
        gbc.setState(0x10c0, 0x129a, 0x8e20, 0x62cd, 0x7aea, 0xe0e, 0x1, 0x1);
        gbc.writeMem(0x10c0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x129a);
        EXPECT(gbc.pc(), 0x10c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0285
        gbc.setState(0x5569, 0x46b6, 0x9fe0, 0x38d0, 0x3254, 0xd9d5, 0x1, 0x0);
        gbc.writeMem(0x5569, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x46b6);
        EXPECT(gbc.pc(), 0x556b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0286
        gbc.setState(0xed4b, 0x8b1, 0x50e0, 0xa1d9, 0xb742, 0x9ff8, 0x0, 0x1);
        gbc.writeMem(0xed4b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8b1);
        EXPECT(gbc.pc(), 0xed4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4b), 0xcb);
        EXPECT(gbc.readMem(0xed4c), 0x74);
        // CB 74 0287
        gbc.setState(0xcaac, 0x82b9, 0xfd50, 0x9412, 0x9664, 0x20bb, 0x1, 0x0);
        gbc.writeMem(0xcaac, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x82b9);
        EXPECT(gbc.pc(), 0xcaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaac), 0xcb);
        EXPECT(gbc.readMem(0xcaad), 0x74);
        // CB 74 0288
        gbc.setState(0x6d01, 0x7c63, 0x72c0, 0x7cb9, 0x3d26, 0x860f, 0x0, 0x0);
        gbc.writeMem(0x6d01, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7c63);
        EXPECT(gbc.pc(), 0x6d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0289
        gbc.setState(0x102b, 0x28ad, 0x9d30, 0x75b8, 0xeacf, 0x7f72, 0x1, 0x0);
        gbc.writeMem(0x102b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x28ad);
        EXPECT(gbc.pc(), 0x102d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 028A
        gbc.setState(0x19d5, 0x5bf6, 0xa4b0, 0x8ad0, 0x1dae, 0x8eb, 0x1, 0x1);
        gbc.writeMem(0x19d5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5bf6);
        EXPECT(gbc.pc(), 0x19d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 028B
        gbc.setState(0xa0e9, 0x8286, 0x7ce0, 0x3122, 0x17d3, 0x1785, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8286);
        EXPECT(gbc.pc(), 0xa0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e9), 0xcb);
        EXPECT(gbc.readMem(0xa0ea), 0x74);
        // CB 74 028C
        gbc.setState(0x2738, 0xe4a5, 0xcca0, 0x68b2, 0x7b11, 0x2a60, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe4a5);
        EXPECT(gbc.pc(), 0x273a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 028D
        gbc.setState(0x2622, 0x639b, 0xc080, 0xc5a, 0x9006, 0xd244, 0x1, 0x1);
        gbc.writeMem(0x2622, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x639b);
        EXPECT(gbc.pc(), 0x2624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 028E
        gbc.setState(0x2be7, 0xe839, 0xf1a0, 0x92a3, 0xa69, 0xe699, 0x1, 0x1);
        gbc.writeMem(0x2be7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe839);
        EXPECT(gbc.pc(), 0x2be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 028F
        gbc.setState(0x728b, 0x2b91, 0xb4f0, 0x102, 0xc6d8, 0x656d, 0x0, 0x1);
        gbc.writeMem(0x728b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2b91);
        EXPECT(gbc.pc(), 0x728d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0290
        gbc.setState(0x91d3, 0xcc09, 0x750, 0xd39a, 0xcbcb, 0x584c, 0x1, 0x0);
        gbc.writeMem(0x91d3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcc09);
        EXPECT(gbc.pc(), 0x91d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d3), 0xcb);
        EXPECT(gbc.readMem(0x91d4), 0x74);
        // CB 74 0291
        gbc.setState(0x1f9e, 0x3ce2, 0x10d0, 0x4c3e, 0x3623, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0x1f9e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3ce2);
        EXPECT(gbc.pc(), 0x1fa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0292
        gbc.setState(0x77d1, 0x1cf, 0x4770, 0x6b59, 0xba46, 0xd360, 0x1, 0x1);
        gbc.writeMem(0x77d1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0293
        gbc.setState(0xc77c, 0xc630, 0xf970, 0xb071, 0x616, 0x5274, 0x0, 0x0);
        gbc.writeMem(0xc77c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc630);
        EXPECT(gbc.pc(), 0xc77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77c), 0xcb);
        EXPECT(gbc.readMem(0xc77d), 0x74);
        // CB 74 0294
        gbc.setState(0x610a, 0x3ddd, 0xf780, 0x8df7, 0x2423, 0x6a48, 0x1, 0x0);
        gbc.writeMem(0x610a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3ddd);
        EXPECT(gbc.pc(), 0x610c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0295
        gbc.setState(0x183c, 0x3d74, 0x13a0, 0xab48, 0x2888, 0xcdd0, 0x0, 0x0);
        gbc.writeMem(0x183c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3d74);
        EXPECT(gbc.pc(), 0x183e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0297
        gbc.setState(0x5086, 0x61ea, 0x4690, 0x9c79, 0xf7ce, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0x5086, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x61ea);
        EXPECT(gbc.pc(), 0x5088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0298
        gbc.setState(0xbcf9, 0x9214, 0x8d30, 0xc0c4, 0x2e29, 0xe223, 0x1, 0x0);
        gbc.writeMem(0xbcf9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9214);
        EXPECT(gbc.pc(), 0xbcfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf9), 0xcb);
        EXPECT(gbc.readMem(0xbcfa), 0x74);
        // CB 74 0299
        gbc.setState(0x2863, 0x1cf5, 0xc000, 0xc238, 0xc1f2, 0x8941, 0x0, 0x1);
        gbc.writeMem(0x2863, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1cf5);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 029A
        gbc.setState(0x78bd, 0x3ad6, 0x8030, 0x93f7, 0x408f, 0xc008, 0x0, 0x0);
        gbc.writeMem(0x78bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3ad6);
        EXPECT(gbc.pc(), 0x78bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 029B
        gbc.setState(0x2c28, 0xfec8, 0x7ce0, 0xf677, 0x783, 0x66b5, 0x1, 0x0);
        gbc.writeMem(0x2c28, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfec8);
        EXPECT(gbc.pc(), 0x2c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 029C
        gbc.setState(0xdffe, 0x8572, 0x8170, 0x739a, 0xafd3, 0xd210, 0x1, 0x0);
        gbc.writeMem(0xdffe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8572);
        EXPECT(gbc.pc(), 0xe000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdffe), 0xcb);
        EXPECT(gbc.readMem(0xdfff), 0x74);
        // CB 74 029E
        gbc.setState(0x1b9d, 0xa040, 0x3e50, 0xbffb, 0xcb36, 0x6279, 0x1, 0x1);
        gbc.writeMem(0x1b9d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa040);
        EXPECT(gbc.pc(), 0x1b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 029F
        gbc.setState(0x8122, 0xb624, 0xe9b0, 0xc74e, 0x6c8a, 0xb0f0, 0x1, 0x1);
        gbc.writeMem(0x8122, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb624);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8122), 0xcb);
        EXPECT(gbc.readMem(0x8123), 0x74);
        // CB 74 02A0
        gbc.setState(0x9d2c, 0x4f3c, 0x2ef0, 0x813d, 0x153f, 0xd399, 0x1, 0x0);
        gbc.writeMem(0x9d2c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4f3c);
        EXPECT(gbc.pc(), 0x9d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2c), 0xcb);
        EXPECT(gbc.readMem(0x9d2d), 0x74);
        // CB 74 02A1
        gbc.setState(0x3e42, 0x50b3, 0x3a40, 0x5719, 0x888f, 0x82e2, 0x1, 0x1);
        gbc.writeMem(0x3e42, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x50b3);
        EXPECT(gbc.pc(), 0x3e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02A2
        gbc.setState(0x8606, 0x8f20, 0xe4e0, 0x8e13, 0x6ba1, 0x5db1, 0x1, 0x1);
        gbc.writeMem(0x8606, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8f20);
        EXPECT(gbc.pc(), 0x8608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8606), 0xcb);
        EXPECT(gbc.readMem(0x8607), 0x74);
        // CB 74 02A3
        gbc.setState(0xbb9c, 0xb81f, 0x1b80, 0x648, 0xb9a7, 0x2c34, 0x0, 0x0);
        gbc.writeMem(0xbb9c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb81f);
        EXPECT(gbc.pc(), 0xbb9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9c), 0xcb);
        EXPECT(gbc.readMem(0xbb9d), 0x74);
        // CB 74 02A4
        gbc.setState(0xa9b, 0x4fb9, 0x9f60, 0xa07f, 0xb538, 0x8101, 0x1, 0x0);
        gbc.writeMem(0xa9b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4fb9);
        EXPECT(gbc.pc(), 0xa9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02A5
        gbc.setState(0x9823, 0xba2f, 0x6b90, 0x6042, 0xd213, 0xa6c3, 0x1, 0x1);
        gbc.writeMem(0x9823, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xba2f);
        EXPECT(gbc.pc(), 0x9825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9823), 0xcb);
        EXPECT(gbc.readMem(0x9824), 0x74);
        // CB 74 02A6
        gbc.setState(0x93f, 0xb071, 0x16d0, 0x5e58, 0xfe74, 0x8860, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02A7
        gbc.setState(0x4900, 0x284d, 0x6510, 0xc096, 0x513d, 0xadae, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x284d);
        EXPECT(gbc.pc(), 0x4902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02A8
        gbc.setState(0x7a17, 0x892f, 0x18d0, 0xe0cc, 0xeace, 0xe10e, 0x0, 0x1);
        gbc.writeMem(0x7a17, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x892f);
        EXPECT(gbc.pc(), 0x7a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02A9
        gbc.setState(0x7d76, 0x367, 0x9970, 0x9b6f, 0xf115, 0x1e26, 0x0, 0x1);
        gbc.writeMem(0x7d76, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x367);
        EXPECT(gbc.pc(), 0x7d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02AA
        gbc.setState(0x4118, 0x20db, 0xb060, 0xede1, 0xe3e2, 0x5d15, 0x0, 0x1);
        gbc.writeMem(0x4118, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x20db);
        EXPECT(gbc.pc(), 0x411a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02AB
        gbc.setState(0x6650, 0x4e6c, 0x4910, 0xb918, 0x3b1a, 0x830d, 0x1, 0x0);
        gbc.writeMem(0x6650, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4e6c);
        EXPECT(gbc.pc(), 0x6652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02AC
        gbc.setState(0x78e4, 0xf34f, 0x9420, 0xddf8, 0x6497, 0x27f3, 0x1, 0x0);
        gbc.writeMem(0x78e4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf34f);
        EXPECT(gbc.pc(), 0x78e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02AE
        gbc.setState(0x3b87, 0x409, 0x4ce0, 0x2c1, 0x4906, 0x80de, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x409);
        EXPECT(gbc.pc(), 0x3b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02AF
        gbc.setState(0x7a9c, 0x144f, 0x2d10, 0xb2df, 0x74b0, 0xb79e, 0x0, 0x1);
        gbc.writeMem(0x7a9c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x144f);
        EXPECT(gbc.pc(), 0x7a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B0
        gbc.setState(0x31e2, 0x1c8d, 0x5db0, 0x9df0, 0xfca2, 0x58e, 0x0, 0x1);
        gbc.writeMem(0x31e2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0x31e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B1
        gbc.setState(0x5726, 0xdc81, 0x6b50, 0x355f, 0xff6e, 0x3b2, 0x0, 0x1);
        gbc.writeMem(0x5726, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdc81);
        EXPECT(gbc.pc(), 0x5728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B2
        gbc.setState(0x242e, 0xb5c3, 0x3c0, 0xb5e6, 0x4a95, 0x5150, 0x1, 0x0);
        gbc.writeMem(0x242e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb5c3);
        EXPECT(gbc.pc(), 0x2430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02B3
        gbc.setState(0x5973, 0x80aa, 0x65d0, 0xbaf1, 0xfa03, 0xcd0e, 0x0, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x5975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B4
        gbc.setState(0xc40, 0xc294, 0xbe50, 0x2244, 0xf79, 0xc791, 0x0, 0x0);
        gbc.writeMem(0xc40, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc294);
        EXPECT(gbc.pc(), 0xc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B5
        gbc.setState(0x5fc0, 0x85c9, 0xc3b0, 0x24ca, 0xa811, 0xb2d1, 0x1, 0x0);
        gbc.writeMem(0x5fc0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x85c9);
        EXPECT(gbc.pc(), 0x5fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B6
        gbc.setState(0x226c, 0x410, 0xf300, 0x8815, 0xbfd1, 0xa042, 0x0, 0x0);
        gbc.writeMem(0x226c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x410);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02B7
        gbc.setState(0x7e69, 0x6738, 0xa10, 0xf44e, 0x5f14, 0xc52d, 0x1, 0x1);
        gbc.writeMem(0x7e69, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6738);
        EXPECT(gbc.pc(), 0x7e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02B8
        gbc.setState(0xb3de, 0xf8a1, 0xda60, 0xb52a, 0x59e6, 0x7341, 0x0, 0x0);
        gbc.writeMem(0xb3de, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf8a1);
        EXPECT(gbc.pc(), 0xb3e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3de), 0xcb);
        EXPECT(gbc.readMem(0xb3df), 0x74);
        // CB 74 02B9
        gbc.setState(0xb6d0, 0xa487, 0x87d0, 0x1b53, 0x97e9, 0xfea7, 0x0, 0x1);
        gbc.writeMem(0xb6d0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa487);
        EXPECT(gbc.pc(), 0xb6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d0), 0xcb);
        EXPECT(gbc.readMem(0xb6d1), 0x74);
        // CB 74 02BA
        gbc.setState(0xd4ee, 0x20a8, 0x5ad0, 0x16a3, 0x71fe, 0xf14e, 0x0, 0x0);
        gbc.writeMem(0xd4ee, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0xd4f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ee), 0xcb);
        EXPECT(gbc.readMem(0xd4ef), 0x74);
        // CB 74 02BB
        gbc.setState(0xa67d, 0x666a, 0x1c20, 0x4dd6, 0x9ad5, 0x591d, 0x0, 0x1);
        gbc.writeMem(0xa67d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x666a);
        EXPECT(gbc.pc(), 0xa67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67d), 0xcb);
        EXPECT(gbc.readMem(0xa67e), 0x74);
        // CB 74 02BC
        gbc.setState(0x6954, 0x8bb1, 0xeec0, 0x8792, 0x264c, 0x4d5d, 0x0, 0x0);
        gbc.writeMem(0x6954, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8bb1);
        EXPECT(gbc.pc(), 0x6956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02BD
        gbc.setState(0x7091, 0x6617, 0x4670, 0x2d61, 0xda41, 0xa616, 0x1, 0x1);
        gbc.writeMem(0x7091, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6617);
        EXPECT(gbc.pc(), 0x7093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02BF
        gbc.setState(0x609b, 0x1f4d, 0xcc20, 0x3827, 0x1441, 0x4208, 0x0, 0x0);
        gbc.writeMem(0x609b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1f4d);
        EXPECT(gbc.pc(), 0x609d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02C0
        gbc.setState(0x1a3c, 0x6679, 0xbd30, 0x7b1c, 0xbcec, 0x5f7a, 0x1, 0x1);
        gbc.writeMem(0x1a3c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6679);
        EXPECT(gbc.pc(), 0x1a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02C1
        gbc.setState(0x2267, 0x3b69, 0xe6a0, 0x4241, 0x9256, 0x614d, 0x0, 0x1);
        gbc.writeMem(0x2267, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3b69);
        EXPECT(gbc.pc(), 0x2269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02C2
        gbc.setState(0xb6e3, 0x82b2, 0x6020, 0x3129, 0x5984, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0xb6e3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x82b2);
        EXPECT(gbc.pc(), 0xb6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e3), 0xcb);
        EXPECT(gbc.readMem(0xb6e4), 0x74);
        // CB 74 02C3
        gbc.setState(0xbafa, 0x6a21, 0x6dd0, 0xe9db, 0x6f41, 0xd7db, 0x0, 0x0);
        gbc.writeMem(0xbafa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6a21);
        EXPECT(gbc.pc(), 0xbafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafa), 0xcb);
        EXPECT(gbc.readMem(0xbafb), 0x74);
        // CB 74 02C4
        gbc.setState(0xc3d6, 0xa007, 0xced0, 0x26cc, 0xffb7, 0x4542, 0x0, 0x1);
        gbc.writeMem(0xc3d6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa007);
        EXPECT(gbc.pc(), 0xc3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d6), 0xcb);
        EXPECT(gbc.readMem(0xc3d7), 0x74);
        // CB 74 02C5
        gbc.setState(0x54ee, 0x8fa9, 0x1ed0, 0x6c94, 0x1d44, 0x7d41, 0x1, 0x1);
        gbc.writeMem(0x54ee, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0x54f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02C6
        gbc.setState(0xa94e, 0x28fd, 0xe360, 0x7eb, 0x8b5, 0x7065, 0x0, 0x0);
        gbc.writeMem(0xa94e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x28fd);
        EXPECT(gbc.pc(), 0xa950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94e), 0xcb);
        EXPECT(gbc.readMem(0xa94f), 0x74);
        // CB 74 02C7
        gbc.setState(0x59b1, 0xa9ad, 0xbc80, 0xb519, 0xea40, 0x46b4, 0x0, 0x1);
        gbc.writeMem(0x59b1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa9ad);
        EXPECT(gbc.pc(), 0x59b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02C8
        gbc.setState(0xebe2, 0x7bda, 0x4310, 0x5a31, 0x4dea, 0xb96a, 0x0, 0x1);
        gbc.writeMem(0xebe2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7bda);
        EXPECT(gbc.pc(), 0xebe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe2), 0xcb);
        EXPECT(gbc.readMem(0xebe3), 0x74);
        // CB 74 02C9
        gbc.setState(0x4ee4, 0x6eb5, 0xed30, 0x9553, 0x2f3b, 0xfad0, 0x0, 0x1);
        gbc.writeMem(0x4ee4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6eb5);
        EXPECT(gbc.pc(), 0x4ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02CA
        gbc.setState(0xb919, 0x741a, 0x560, 0xfc84, 0x8b, 0x8838, 0x1, 0x1);
        gbc.writeMem(0xb919, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x741a);
        EXPECT(gbc.pc(), 0xb91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb919), 0xcb);
        EXPECT(gbc.readMem(0xb91a), 0x74);
        // CB 74 02CB
        gbc.setState(0x8664, 0x9cbf, 0x9200, 0x95b6, 0xb40b, 0x30da, 0x1, 0x0);
        gbc.writeMem(0x8664, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9cbf);
        EXPECT(gbc.pc(), 0x8666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8664), 0xcb);
        EXPECT(gbc.readMem(0x8665), 0x74);
        // CB 74 02CD
        gbc.setState(0x3c9a, 0x91a0, 0xc840, 0x6f67, 0x471, 0x4ec0, 0x1, 0x1);
        gbc.writeMem(0x3c9a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x3c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02CE
        gbc.setState(0x8ad0, 0x1ca2, 0xe780, 0x2058, 0x72b4, 0xcf, 0x0, 0x0);
        gbc.writeMem(0x8ad0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1ca2);
        EXPECT(gbc.pc(), 0x8ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad0), 0xcb);
        EXPECT(gbc.readMem(0x8ad1), 0x74);
        // CB 74 02CF
        gbc.setState(0x488, 0x8d46, 0xadb0, 0xf50c, 0x1f88, 0x1904, 0x1, 0x1);
        gbc.writeMem(0x488, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8d46);
        EXPECT(gbc.pc(), 0x48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02D0
        gbc.setState(0x5c8, 0xe018, 0xfd80, 0xb611, 0x230, 0x9b67, 0x1, 0x0);
        gbc.writeMem(0x5c8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe018);
        EXPECT(gbc.pc(), 0x5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02D1
        gbc.setState(0x24e1, 0xba8b, 0xfd30, 0x2961, 0x958, 0x6fd5, 0x1, 0x0);
        gbc.writeMem(0x24e1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0x24e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02D2
        gbc.setState(0x8258, 0xce03, 0xaa60, 0x7347, 0x694b, 0x2f97, 0x0, 0x0);
        gbc.writeMem(0x8258, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xce03);
        EXPECT(gbc.pc(), 0x825a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8258), 0xcb);
        EXPECT(gbc.readMem(0x8259), 0x74);
        // CB 74 02D3
        gbc.setState(0xebfa, 0x65aa, 0x19b0, 0x60b0, 0xf880, 0x97de, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x65aa);
        EXPECT(gbc.pc(), 0xebfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfa), 0xcb);
        EXPECT(gbc.readMem(0xebfb), 0x74);
        // CB 74 02D4
        gbc.setState(0x42ac, 0xabeb, 0xa80, 0x3002, 0xdf98, 0xd1c5, 0x0, 0x1);
        gbc.writeMem(0x42ac, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xabeb);
        EXPECT(gbc.pc(), 0x42ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02D5
        gbc.setState(0xeac5, 0x8b5c, 0x4040, 0x44de, 0x3ac2, 0x6626, 0x0, 0x1);
        gbc.writeMem(0xeac5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8b5c);
        EXPECT(gbc.pc(), 0xeac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac5), 0xcb);
        EXPECT(gbc.readMem(0xeac6), 0x74);
        // CB 74 02D6
        gbc.setState(0x54bf, 0x6eed, 0x5b80, 0x438a, 0x4f76, 0x2136, 0x1, 0x1);
        gbc.writeMem(0x54bf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6eed);
        EXPECT(gbc.pc(), 0x54c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02D7
        gbc.setState(0xe91f, 0x47bf, 0x9240, 0x9bb, 0xafc0, 0x69b9, 0x0, 0x1);
        gbc.writeMem(0xe91f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x47bf);
        EXPECT(gbc.pc(), 0xe921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91f), 0xcb);
        EXPECT(gbc.readMem(0xe920), 0x74);
        // CB 74 02D8
        gbc.setState(0x1cff, 0xcda6, 0xd6f0, 0xf00f, 0xfa8d, 0xd9dd, 0x1, 0x0);
        gbc.writeMem(0x1cff, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xcda6);
        EXPECT(gbc.pc(), 0x1d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02D9
        gbc.setState(0x307a, 0x9aa2, 0x4d10, 0xc8ea, 0xe29f, 0x3643, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9aa2);
        EXPECT(gbc.pc(), 0x307c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02DA
        gbc.setState(0x5f38, 0x2258, 0x8620, 0x3259, 0x5058, 0x2cc2, 0x0, 0x0);
        gbc.writeMem(0x5f38, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2258);
        EXPECT(gbc.pc(), 0x5f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02DB
        gbc.setState(0x4e43, 0xda89, 0x8890, 0x1e62, 0x2ab, 0xf00e, 0x0, 0x0);
        gbc.writeMem(0x4e43, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0x4e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02DC
        gbc.setState(0x8b2f, 0xdb91, 0xa350, 0xd0f7, 0x2eb0, 0x11bb, 0x1, 0x1);
        gbc.writeMem(0x8b2f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdb91);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2f), 0xcb);
        EXPECT(gbc.readMem(0x8b30), 0x74);
        // CB 74 02DD
        gbc.setState(0x51df, 0x150b, 0x36c0, 0xf3e0, 0x4e63, 0x4c31, 0x1, 0x0);
        gbc.writeMem(0x51df, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x150b);
        EXPECT(gbc.pc(), 0x51e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02DE
        gbc.setState(0x684a, 0x4751, 0x98c0, 0x213d, 0x4750, 0xae53, 0x0, 0x1);
        gbc.writeMem(0x684a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4751);
        EXPECT(gbc.pc(), 0x684c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02DF
        gbc.setState(0x92b4, 0x4127, 0x6570, 0xcf75, 0x5d03, 0x429, 0x0, 0x0);
        gbc.writeMem(0x92b4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4127);
        EXPECT(gbc.pc(), 0x92b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92b4), 0xcb);
        EXPECT(gbc.readMem(0x92b5), 0x74);
        // CB 74 02E0
        gbc.setState(0x5919, 0x4567, 0xc7e0, 0xf0fe, 0x326b, 0x833e, 0x0, 0x0);
        gbc.writeMem(0x5919, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0x591b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02E1
        gbc.setState(0xbae, 0xc7ca, 0x2290, 0x21bf, 0xc964, 0xc47e, 0x0, 0x0);
        gbc.writeMem(0xbae, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0xbb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02E2
        gbc.setState(0xe7da, 0xae4e, 0x85f0, 0xe5a3, 0xc97, 0xa706, 0x1, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xae4e);
        EXPECT(gbc.pc(), 0xe7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7da), 0xcb);
        EXPECT(gbc.readMem(0xe7db), 0x74);
        // CB 74 02E3
        gbc.setState(0xcde7, 0xed40, 0xad0, 0x322, 0xf5a0, 0xeb40, 0x0, 0x0);
        gbc.writeMem(0xcde7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xed40);
        EXPECT(gbc.pc(), 0xcde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde7), 0xcb);
        EXPECT(gbc.readMem(0xcde8), 0x74);
        // CB 74 02E4
        gbc.setState(0xde4e, 0xb21a, 0x38f0, 0x285e, 0xbd04, 0x7e91, 0x0, 0x0);
        gbc.writeMem(0xde4e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb21a);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0x74);
        // CB 74 02E5
        gbc.setState(0x6d3a, 0xff8c, 0x4e40, 0x8222, 0x752e, 0x6d1d, 0x0, 0x0);
        gbc.writeMem(0x6d3a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xff8c);
        EXPECT(gbc.pc(), 0x6d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02E6
        gbc.setState(0xc37e, 0x95c2, 0x96b0, 0xe4b5, 0xcf9, 0x6b30, 0x0, 0x1);
        gbc.writeMem(0xc37e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x95c2);
        EXPECT(gbc.pc(), 0xc380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37e), 0xcb);
        EXPECT(gbc.readMem(0xc37f), 0x74);
        // CB 74 02E7
        gbc.setState(0x313e, 0x8505, 0x51e0, 0xd5e7, 0x7f87, 0x82e6, 0x1, 0x0);
        gbc.writeMem(0x313e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8505);
        EXPECT(gbc.pc(), 0x3140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02E8
        gbc.setState(0x827c, 0x4d9d, 0x6090, 0xc7ba, 0xfd97, 0x71a6, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4d9d);
        EXPECT(gbc.pc(), 0x827e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827c), 0xcb);
        EXPECT(gbc.readMem(0x827d), 0x74);
        // CB 74 02E9
        gbc.setState(0xdc6f, 0x538, 0xd950, 0x43d5, 0x782f, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0xdc6f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x538);
        EXPECT(gbc.pc(), 0xdc71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6f), 0xcb);
        EXPECT(gbc.readMem(0xdc70), 0x74);
        // CB 74 02EA
        gbc.setState(0x5236, 0x88d5, 0xd8d0, 0x68f2, 0xd6f6, 0x4302, 0x0, 0x1);
        gbc.writeMem(0x5236, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x88d5);
        EXPECT(gbc.pc(), 0x5238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02EB
        gbc.setState(0x239, 0x691b, 0xf150, 0x3659, 0x6c95, 0x7e76, 0x1, 0x1);
        gbc.writeMem(0x239, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x691b);
        EXPECT(gbc.pc(), 0x23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 02EC
        gbc.setState(0xc472, 0x43a0, 0xa1d0, 0x3cc9, 0x8992, 0x4238, 0x0, 0x1);
        gbc.writeMem(0xc472, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x43a0);
        EXPECT(gbc.pc(), 0xc474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc472), 0xcb);
        EXPECT(gbc.readMem(0xc473), 0x74);
        // CB 74 02ED
        gbc.setState(0x3ecc, 0xc938, 0xc80, 0x2533, 0xfa3e, 0x6cd2, 0x1, 0x1);
        gbc.writeMem(0x3ecc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc938);
        EXPECT(gbc.pc(), 0x3ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02EE
        gbc.setState(0xd0ca, 0xcc82, 0x3d50, 0x8253, 0x946a, 0x98b3, 0x0, 0x1);
        gbc.writeMem(0xd0ca, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcc82);
        EXPECT(gbc.pc(), 0xd0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ca), 0xcb);
        EXPECT(gbc.readMem(0xd0cb), 0x74);
        // CB 74 02EF
        gbc.setState(0xade5, 0xea7f, 0x3200, 0x910, 0xf2ff, 0x2eb5, 0x1, 0x0);
        gbc.writeMem(0xade5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xea7f);
        EXPECT(gbc.pc(), 0xade7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade5), 0xcb);
        EXPECT(gbc.readMem(0xade6), 0x74);
        // CB 74 02F0
        gbc.setState(0xd711, 0x625d, 0xaf20, 0xe3f8, 0xde2e, 0x5f5, 0x0, 0x0);
        gbc.writeMem(0xd711, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x625d);
        EXPECT(gbc.pc(), 0xd713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd711), 0xcb);
        EXPECT(gbc.readMem(0xd712), 0x74);
        // CB 74 02F1
        gbc.setState(0x741c, 0xd359, 0xe240, 0xc8e0, 0x4ff, 0x5e5a, 0x0, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd359);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02F2
        gbc.setState(0xb67d, 0x6a69, 0x1de0, 0xaae, 0xc497, 0xc147, 0x0, 0x0);
        gbc.writeMem(0xb67d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6a69);
        EXPECT(gbc.pc(), 0xb67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67d), 0xcb);
        EXPECT(gbc.readMem(0xb67e), 0x74);
        // CB 74 02F3
        gbc.setState(0x8e32, 0x6414, 0xe9a0, 0x17a, 0x2d78, 0xae81, 0x1, 0x0);
        gbc.writeMem(0x8e32, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6414);
        EXPECT(gbc.pc(), 0x8e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e32), 0xcb);
        EXPECT(gbc.readMem(0x8e33), 0x74);
        // CB 74 02F4
        gbc.setState(0xa985, 0xc186, 0x6f0, 0x792b, 0x7fb5, 0x558a, 0x1, 0x1);
        gbc.writeMem(0xa985, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc186);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa985), 0xcb);
        EXPECT(gbc.readMem(0xa986), 0x74);
        // CB 74 02F5
        gbc.setState(0xc498, 0xe0e, 0x7980, 0x8458, 0x5083, 0xc732, 0x0, 0x0);
        gbc.writeMem(0xc498, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe0e);
        EXPECT(gbc.pc(), 0xc49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc498), 0xcb);
        EXPECT(gbc.readMem(0xc499), 0x74);
        // CB 74 02F6
        gbc.setState(0xde8a, 0x34, 0xb920, 0xaec4, 0xa163, 0x7246, 0x0, 0x1);
        gbc.writeMem(0xde8a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x34);
        EXPECT(gbc.pc(), 0xde8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8a), 0xcb);
        EXPECT(gbc.readMem(0xde8b), 0x74);
        // CB 74 02F8
        gbc.setState(0x35b3, 0x9ade, 0x94c0, 0xe630, 0x1246, 0x1cc4, 0x0, 0x1);
        gbc.writeMem(0x35b3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9ade);
        EXPECT(gbc.pc(), 0x35b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 02F9
        gbc.setState(0x8ffa, 0xd9e5, 0x2a40, 0x85d2, 0x98f0, 0xb103, 0x0, 0x0);
        gbc.writeMem(0x8ffa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd9e5);
        EXPECT(gbc.pc(), 0x8ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffa), 0xcb);
        EXPECT(gbc.readMem(0x8ffb), 0x74);
        // CB 74 02FA
        gbc.setState(0xd344, 0xf81a, 0xd9f0, 0xb5d9, 0x1f88, 0x84a2, 0x1, 0x0);
        gbc.writeMem(0xd344, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf81a);
        EXPECT(gbc.pc(), 0xd346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd344), 0xcb);
        EXPECT(gbc.readMem(0xd345), 0x74);
        // CB 74 02FB
        gbc.setState(0x84fc, 0x1089, 0x3d40, 0x26d0, 0x8859, 0x7673, 0x0, 0x0);
        gbc.writeMem(0x84fc, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1089);
        EXPECT(gbc.pc(), 0x84fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fc), 0xcb);
        EXPECT(gbc.readMem(0x84fd), 0x74);
        // CB 74 02FC
        gbc.setState(0x8d25, 0xf30, 0xbbb0, 0x5953, 0x22cd, 0x71c1, 0x1, 0x0);
        gbc.writeMem(0x8d25, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf30);
        EXPECT(gbc.pc(), 0x8d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d25), 0xcb);
        EXPECT(gbc.readMem(0x8d26), 0x74);
        // CB 74 02FD
        gbc.setState(0x808d, 0x9df3, 0x2f80, 0x48b9, 0xc486, 0xe8f1, 0x1, 0x0);
        gbc.writeMem(0x808d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9df3);
        EXPECT(gbc.pc(), 0x808f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x808d), 0xcb);
        EXPECT(gbc.readMem(0x808e), 0x74);
        // CB 74 02FE
        gbc.setState(0xda73, 0x767a, 0xf3b0, 0x1126, 0x2243, 0x8a08, 0x1, 0x0);
        gbc.writeMem(0xda73, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x767a);
        EXPECT(gbc.pc(), 0xda75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda73), 0xcb);
        EXPECT(gbc.readMem(0xda74), 0x74);
        // CB 74 02FF
        gbc.setState(0x684b, 0xeaa6, 0x3ad0, 0xdb9e, 0x9c6f, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0x684b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeaa6);
        EXPECT(gbc.pc(), 0x684d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0300
        gbc.setState(0xace3, 0xc984, 0xa320, 0x3ed6, 0xb3f6, 0x1c93, 0x0, 0x0);
        gbc.writeMem(0xace3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc984);
        EXPECT(gbc.pc(), 0xace5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace3), 0xcb);
        EXPECT(gbc.readMem(0xace4), 0x74);
        // CB 74 0302
        gbc.setState(0x28d, 0x4270, 0xd010, 0xf5b9, 0x51b5, 0x8796, 0x0, 0x1);
        gbc.writeMem(0x28d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4270);
        EXPECT(gbc.pc(), 0x28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0304
        gbc.setState(0x3a1, 0x37c3, 0x7840, 0xc98d, 0xe483, 0x449e, 0x0, 0x0);
        gbc.writeMem(0x3a1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x37c3);
        EXPECT(gbc.pc(), 0x3a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0305
        gbc.setState(0xcb0, 0x2ab4, 0x37d0, 0xfab, 0x382a, 0xbd54, 0x0, 0x0);
        gbc.writeMem(0xcb0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2ab4);
        EXPECT(gbc.pc(), 0xcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0306
        gbc.setState(0xc1b2, 0xee7, 0xa400, 0xb368, 0x24a6, 0xfbf9, 0x0, 0x1);
        gbc.writeMem(0xc1b2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xee7);
        EXPECT(gbc.pc(), 0xc1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b2), 0xcb);
        EXPECT(gbc.readMem(0xc1b3), 0x74);
        // CB 74 0307
        gbc.setState(0x6ef6, 0xb0aa, 0x3ff0, 0x3ed9, 0x1b23, 0x9f30, 0x0, 0x1);
        gbc.writeMem(0x6ef6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb0aa);
        EXPECT(gbc.pc(), 0x6ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0308
        gbc.setState(0x1b09, 0xb86b, 0x2610, 0xb3e9, 0xedc3, 0x8321, 0x0, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb86b);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0309
        gbc.setState(0xb0cb, 0xc2b5, 0x4600, 0x9eae, 0xe64c, 0x73f0, 0x1, 0x0);
        gbc.writeMem(0xb0cb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc2b5);
        EXPECT(gbc.pc(), 0xb0cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cb), 0xcb);
        EXPECT(gbc.readMem(0xb0cc), 0x74);
        // CB 74 030A
        gbc.setState(0x6fed, 0x9dd9, 0xad10, 0xe0e4, 0xada8, 0x47f9, 0x0, 0x0);
        gbc.writeMem(0x6fed, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9dd9);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 030B
        gbc.setState(0xee0d, 0xdced, 0x3910, 0xd0ef, 0x427e, 0x7fdf, 0x1, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdced);
        EXPECT(gbc.pc(), 0xee0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0d), 0xcb);
        EXPECT(gbc.readMem(0xee0e), 0x74);
        // CB 74 030C
        gbc.setState(0x270b, 0xd03, 0x1a10, 0x9ff5, 0x44c5, 0xe0b, 0x0, 0x0);
        gbc.writeMem(0x270b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd03);
        EXPECT(gbc.pc(), 0x270d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 030D
        gbc.setState(0xc23d, 0x3fbd, 0xc310, 0xa775, 0xf09b, 0x69f1, 0x1, 0x0);
        gbc.writeMem(0xc23d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3fbd);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23d), 0xcb);
        EXPECT(gbc.readMem(0xc23e), 0x74);
        // CB 74 030E
        gbc.setState(0x64, 0xa020, 0x8d50, 0x1865, 0xb751, 0xe665, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa020);
        EXPECT(gbc.pc(), 0x66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 030F
        gbc.setState(0x108c, 0x3c13, 0xee50, 0x50f9, 0xdb72, 0xf425, 0x1, 0x0);
        gbc.writeMem(0x108c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3c13);
        EXPECT(gbc.pc(), 0x108e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0310
        gbc.setState(0x2a2d, 0xc68c, 0xc2b0, 0x596d, 0x387e, 0x378c, 0x0, 0x1);
        gbc.writeMem(0x2a2d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc68c);
        EXPECT(gbc.pc(), 0x2a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0311
        gbc.setState(0xec43, 0x1ea8, 0x1520, 0x60ca, 0xa054, 0xd116, 0x1, 0x1);
        gbc.writeMem(0xec43, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1ea8);
        EXPECT(gbc.pc(), 0xec45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec43), 0xcb);
        EXPECT(gbc.readMem(0xec44), 0x74);
        // CB 74 0312
        gbc.setState(0x83be, 0xd124, 0xbcd0, 0xf9e3, 0x75ef, 0x62c2, 0x1, 0x1);
        gbc.writeMem(0x83be, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd124);
        EXPECT(gbc.pc(), 0x83c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83be), 0xcb);
        EXPECT(gbc.readMem(0x83bf), 0x74);
        // CB 74 0313
        gbc.setState(0xd5c, 0x46f7, 0x36b0, 0x4d61, 0x9ac2, 0x3633, 0x1, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x46f7);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0314
        gbc.setState(0x96ae, 0xca29, 0x7670, 0xf83a, 0x573d, 0x6550, 0x1, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xca29);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0x74);
        // CB 74 0315
        gbc.setState(0xdd12, 0xb529, 0x51e0, 0x553b, 0x557f, 0xfa3, 0x0, 0x1);
        gbc.writeMem(0xdd12, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb529);
        EXPECT(gbc.pc(), 0xdd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd12), 0xcb);
        EXPECT(gbc.readMem(0xdd13), 0x74);
        // CB 74 0316
        gbc.setState(0x177b, 0x5ca3, 0x1200, 0x5cf9, 0xe320, 0xbe20, 0x1, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5ca3);
        EXPECT(gbc.pc(), 0x177d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0318
        gbc.setState(0xca78, 0xc8e0, 0x8860, 0xf68e, 0xe904, 0x200c, 0x1, 0x1);
        gbc.writeMem(0xca78, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc8e0);
        EXPECT(gbc.pc(), 0xca7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca78), 0xcb);
        EXPECT(gbc.readMem(0xca79), 0x74);
        // CB 74 0319
        gbc.setState(0x3090, 0x2a32, 0x3070, 0xeeb2, 0x705b, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x3090, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2a32);
        EXPECT(gbc.pc(), 0x3092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 031A
        gbc.setState(0x3fc5, 0x5351, 0x7130, 0x1e67, 0x8181, 0x6767, 0x1, 0x1);
        gbc.writeMem(0x3fc5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5351);
        EXPECT(gbc.pc(), 0x3fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 031B
        gbc.setState(0xa213, 0x2189, 0x4be0, 0x7ebb, 0x42cf, 0x3bfc, 0x1, 0x0);
        gbc.writeMem(0xa213, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2189);
        EXPECT(gbc.pc(), 0xa215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa213), 0xcb);
        EXPECT(gbc.readMem(0xa214), 0x74);
        // CB 74 031C
        gbc.setState(0x9551, 0xa5df, 0xe180, 0x6927, 0x424c, 0x7274, 0x1, 0x0);
        gbc.writeMem(0x9551, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa5df);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9551), 0xcb);
        EXPECT(gbc.readMem(0x9552), 0x74);
        // CB 74 031D
        gbc.setState(0xe1b4, 0xd0f3, 0x1fd0, 0xbd93, 0x4c5a, 0x3579, 0x0, 0x1);
        gbc.writeMem(0xe1b4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd0f3);
        EXPECT(gbc.pc(), 0xe1b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b4), 0xcb);
        EXPECT(gbc.readMem(0xe1b5), 0x74);
        // CB 74 031E
        gbc.setState(0x640c, 0x8632, 0x50a0, 0x8220, 0x708, 0xc065, 0x1, 0x0);
        gbc.writeMem(0x640c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8632);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 031F
        gbc.setState(0x69b6, 0x65e9, 0x5780, 0xaf9, 0xb1c, 0x51e8, 0x0, 0x1);
        gbc.writeMem(0x69b6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0x69b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0320
        gbc.setState(0x827f, 0x7d3f, 0xed40, 0xe3bd, 0xdf4, 0x8bed, 0x0, 0x0);
        gbc.writeMem(0x827f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7d3f);
        EXPECT(gbc.pc(), 0x8281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827f), 0xcb);
        EXPECT(gbc.readMem(0x8280), 0x74);
        // CB 74 0321
        gbc.setState(0x9395, 0x3e11, 0x34a0, 0x63c0, 0xff13, 0xce2e, 0x0, 0x0);
        gbc.writeMem(0x9395, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e11);
        EXPECT(gbc.pc(), 0x9397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9395), 0xcb);
        EXPECT(gbc.readMem(0x9396), 0x74);
        // CB 74 0322
        gbc.setState(0x6629, 0x9ce2, 0xd2f0, 0x3217, 0xe261, 0xa10b, 0x0, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9ce2);
        EXPECT(gbc.pc(), 0x662b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0323
        gbc.setState(0xb44, 0xe4ba, 0xbd50, 0x6673, 0xa67, 0x72a9, 0x0, 0x0);
        gbc.writeMem(0xb44, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe4ba);
        EXPECT(gbc.pc(), 0xb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0325
        gbc.setState(0x535e, 0x4492, 0x6670, 0x323a, 0x4b44, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x535e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4492);
        EXPECT(gbc.pc(), 0x5360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0326
        gbc.setState(0x8104, 0x859a, 0xb590, 0x498c, 0x4907, 0xfa9a, 0x1, 0x0);
        gbc.writeMem(0x8104, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x8106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8104), 0xcb);
        EXPECT(gbc.readMem(0x8105), 0x74);
        // CB 74 0328
        gbc.setState(0xec19, 0x9e11, 0xd1f0, 0x72f4, 0x8ee5, 0x821c, 0x1, 0x1);
        gbc.writeMem(0xec19, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9e11);
        EXPECT(gbc.pc(), 0xec1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec19), 0xcb);
        EXPECT(gbc.readMem(0xec1a), 0x74);
        // CB 74 0329
        gbc.setState(0x62c4, 0x32b7, 0x20e0, 0xebfb, 0xc4c, 0x51e1, 0x0, 0x0);
        gbc.writeMem(0x62c4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x32b7);
        EXPECT(gbc.pc(), 0x62c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 032A
        gbc.setState(0x1917, 0x165a, 0x6fc0, 0x9563, 0xbc39, 0x2ae9, 0x0, 0x1);
        gbc.writeMem(0x1917, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x165a);
        EXPECT(gbc.pc(), 0x1919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 032B
        gbc.setState(0x47a2, 0xe995, 0xfb90, 0xed6f, 0x845b, 0xa848, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe995);
        EXPECT(gbc.pc(), 0x47a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 032C
        gbc.setState(0x3b96, 0x9b2e, 0x3970, 0x30a0, 0x4720, 0x8773, 0x0, 0x1);
        gbc.writeMem(0x3b96, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9b2e);
        EXPECT(gbc.pc(), 0x3b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 032D
        gbc.setState(0x78a2, 0x9cd5, 0x1d50, 0xe84d, 0xbdd9, 0x2665, 0x1, 0x1);
        gbc.writeMem(0x78a2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9cd5);
        EXPECT(gbc.pc(), 0x78a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 032E
        gbc.setState(0x25d0, 0xbe2c, 0xb0f0, 0xdc88, 0x10a1, 0x4a7f, 0x0, 0x1);
        gbc.writeMem(0x25d0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbe2c);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 032F
        gbc.setState(0x30c, 0x3620, 0x6aa0, 0x523c, 0xf973, 0x35b9, 0x1, 0x1);
        gbc.writeMem(0x30c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3620);
        EXPECT(gbc.pc(), 0x30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0330
        gbc.setState(0xce2b, 0x5903, 0x5d00, 0xff5, 0x25d4, 0x455f, 0x0, 0x0);
        gbc.writeMem(0xce2b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5903);
        EXPECT(gbc.pc(), 0xce2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2b), 0xcb);
        EXPECT(gbc.readMem(0xce2c), 0x74);
        // CB 74 0331
        gbc.setState(0xb16f, 0x14b5, 0x96a0, 0xa3d6, 0x6872, 0x4d15, 0x0, 0x1);
        gbc.writeMem(0xb16f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0xb171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16f), 0xcb);
        EXPECT(gbc.readMem(0xb170), 0x74);
        // CB 74 0332
        gbc.setState(0x28bf, 0xbd79, 0xed50, 0x8670, 0x54df, 0xb29, 0x0, 0x0);
        gbc.writeMem(0x28bf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbd79);
        EXPECT(gbc.pc(), 0x28c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0333
        gbc.setState(0x47d7, 0x585, 0x2f90, 0x1cca, 0xac66, 0x7726, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x585);
        EXPECT(gbc.pc(), 0x47d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0334
        gbc.setState(0xb3d1, 0xffa2, 0x1100, 0xabfc, 0x815f, 0x2ab6, 0x0, 0x0);
        gbc.writeMem(0xb3d1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xffa2);
        EXPECT(gbc.pc(), 0xb3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d1), 0xcb);
        EXPECT(gbc.readMem(0xb3d2), 0x74);
        // CB 74 0335
        gbc.setState(0xdef9, 0xb26a, 0x6580, 0xf848, 0x7312, 0xafe1, 0x0, 0x0);
        gbc.writeMem(0xdef9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb26a);
        EXPECT(gbc.pc(), 0xdefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef9), 0xcb);
        EXPECT(gbc.readMem(0xdefa), 0x74);
        // CB 74 0336
        gbc.setState(0x3fdb, 0xa975, 0xe2d0, 0x5e7e, 0x8ea5, 0x8f46, 0x1, 0x1);
        gbc.writeMem(0x3fdb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x3fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0338
        gbc.setState(0x839c, 0x5870, 0x3e00, 0x6844, 0xe6cd, 0xd1d2, 0x1, 0x0);
        gbc.writeMem(0x839c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5870);
        EXPECT(gbc.pc(), 0x839e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839c), 0xcb);
        EXPECT(gbc.readMem(0x839d), 0x74);
        // CB 74 0339
        gbc.setState(0x9291, 0xc1e6, 0xb350, 0x607e, 0x44b8, 0x83fa, 0x1, 0x0);
        gbc.writeMem(0x9291, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc1e6);
        EXPECT(gbc.pc(), 0x9293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9291), 0xcb);
        EXPECT(gbc.readMem(0x9292), 0x74);
        // CB 74 033A
        gbc.setState(0xbdb8, 0xed0f, 0x8600, 0xe094, 0x8b19, 0x92f9, 0x0, 0x0);
        gbc.writeMem(0xbdb8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xed0f);
        EXPECT(gbc.pc(), 0xbdba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb8), 0xcb);
        EXPECT(gbc.readMem(0xbdb9), 0x74);
        // CB 74 033B
        gbc.setState(0x91e9, 0x44e4, 0x1d20, 0xe6d7, 0x8292, 0xeca, 0x0, 0x0);
        gbc.writeMem(0x91e9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x44e4);
        EXPECT(gbc.pc(), 0x91eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e9), 0xcb);
        EXPECT(gbc.readMem(0x91ea), 0x74);
        // CB 74 033C
        gbc.setState(0x15ee, 0x3929, 0x2b00, 0x2eb3, 0x41d5, 0x6842, 0x0, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3929);
        EXPECT(gbc.pc(), 0x15f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 033D
        gbc.setState(0x1dc3, 0x3d96, 0x6ef0, 0x1590, 0x4a8f, 0xca16, 0x0, 0x1);
        gbc.writeMem(0x1dc3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3d96);
        EXPECT(gbc.pc(), 0x1dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 033E
        gbc.setState(0x4f42, 0xa285, 0x8870, 0x7c32, 0xd8ce, 0xfa18, 0x1, 0x0);
        gbc.writeMem(0x4f42, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa285);
        EXPECT(gbc.pc(), 0x4f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 033F
        gbc.setState(0xc3f5, 0x1cde, 0x63a0, 0xf758, 0x8fb6, 0x1fb, 0x0, 0x0);
        gbc.writeMem(0xc3f5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1cde);
        EXPECT(gbc.pc(), 0xc3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f5), 0xcb);
        EXPECT(gbc.readMem(0xc3f6), 0x74);
        // CB 74 0340
        gbc.setState(0xdaa2, 0x2a83, 0xa770, 0x9fa7, 0x47dd, 0xe0a, 0x0, 0x1);
        gbc.writeMem(0xdaa2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2a83);
        EXPECT(gbc.pc(), 0xdaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa2), 0xcb);
        EXPECT(gbc.readMem(0xdaa3), 0x74);
        // CB 74 0341
        gbc.setState(0xd0b8, 0xf004, 0xdd30, 0x7d60, 0xd0f5, 0xff85, 0x1, 0x0);
        gbc.writeMem(0xd0b8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf004);
        EXPECT(gbc.pc(), 0xd0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b8), 0xcb);
        EXPECT(gbc.readMem(0xd0b9), 0x74);
        // CB 74 0342
        gbc.setState(0xd06d, 0x6ab7, 0x99c0, 0xad0b, 0x18b1, 0xd806, 0x0, 0x0);
        gbc.writeMem(0xd06d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6ab7);
        EXPECT(gbc.pc(), 0xd06f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd06d), 0xcb);
        EXPECT(gbc.readMem(0xd06e), 0x74);
        // CB 74 0344
        gbc.setState(0x9321, 0x5d02, 0xfcd0, 0x6022, 0x7d8a, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0x9321, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5d02);
        EXPECT(gbc.pc(), 0x9323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9321), 0xcb);
        EXPECT(gbc.readMem(0x9322), 0x74);
        // CB 74 0345
        gbc.setState(0x35c1, 0x85c8, 0x3b90, 0x7885, 0x3ac6, 0xbe01, 0x1, 0x1);
        gbc.writeMem(0x35c1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x85c8);
        EXPECT(gbc.pc(), 0x35c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0346
        gbc.setState(0x8109, 0xa9b4, 0x4430, 0xecc1, 0xa6dc, 0xe9ad, 0x1, 0x0);
        gbc.writeMem(0x8109, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa9b4);
        EXPECT(gbc.pc(), 0x810b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8109), 0xcb);
        EXPECT(gbc.readMem(0x810a), 0x74);
        // CB 74 0347
        gbc.setState(0x84a4, 0x2aa4, 0xaa50, 0x940b, 0x8c45, 0x6129, 0x1, 0x0);
        gbc.writeMem(0x84a4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2aa4);
        EXPECT(gbc.pc(), 0x84a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a4), 0xcb);
        EXPECT(gbc.readMem(0x84a5), 0x74);
        // CB 74 0348
        gbc.setState(0xeb19, 0xd543, 0x76d0, 0x3ac2, 0x837e, 0x8c34, 0x1, 0x0);
        gbc.writeMem(0xeb19, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd543);
        EXPECT(gbc.pc(), 0xeb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb19), 0xcb);
        EXPECT(gbc.readMem(0xeb1a), 0x74);
        // CB 74 0349
        gbc.setState(0xbbf3, 0x3c25, 0x7600, 0xa53d, 0xaf7b, 0x6354, 0x1, 0x1);
        gbc.writeMem(0xbbf3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3c25);
        EXPECT(gbc.pc(), 0xbbf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf3), 0xcb);
        EXPECT(gbc.readMem(0xbbf4), 0x74);
        // CB 74 034A
        gbc.setState(0xde8e, 0x3a63, 0xb260, 0x2186, 0x3c9d, 0x880, 0x0, 0x0);
        gbc.writeMem(0xde8e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3a63);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8e), 0xcb);
        EXPECT(gbc.readMem(0xde8f), 0x74);
        // CB 74 034B
        gbc.setState(0x8631, 0xbdca, 0x4350, 0xf4b9, 0x3e7f, 0xde80, 0x0, 0x0);
        gbc.writeMem(0x8631, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbdca);
        EXPECT(gbc.pc(), 0x8633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8631), 0xcb);
        EXPECT(gbc.readMem(0x8632), 0x74);
        // CB 74 034C
        gbc.setState(0xeff7, 0x8de6, 0x1650, 0xd4c4, 0x64d0, 0xa3c9, 0x1, 0x0);
        gbc.writeMem(0xeff7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8de6);
        EXPECT(gbc.pc(), 0xeff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff7), 0xcb);
        EXPECT(gbc.readMem(0xeff8), 0x74);
        // CB 74 034D
        gbc.setState(0x1234, 0x5b54, 0x9dc0, 0x7fb2, 0xbe0e, 0x9f7f, 0x0, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 034E
        gbc.setState(0x8a95, 0xf2af, 0x8320, 0x7546, 0xe89c, 0xd498, 0x1, 0x0);
        gbc.writeMem(0x8a95, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf2af);
        EXPECT(gbc.pc(), 0x8a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a95), 0xcb);
        EXPECT(gbc.readMem(0x8a96), 0x74);
        // CB 74 034F
        gbc.setState(0x7130, 0x9dc8, 0x83d0, 0x3c0f, 0x3ebb, 0x1cca, 0x0, 0x1);
        gbc.writeMem(0x7130, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9dc8);
        EXPECT(gbc.pc(), 0x7132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0350
        gbc.setState(0x810c, 0xd42e, 0xfcb0, 0x1424, 0xb710, 0x3431, 0x0, 0x1);
        gbc.writeMem(0x810c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x810e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x810c), 0xcb);
        EXPECT(gbc.readMem(0x810d), 0x74);
        // CB 74 0351
        gbc.setState(0xec6c, 0xc66b, 0xd720, 0x212, 0xb729, 0x2a89, 0x0, 0x1);
        gbc.writeMem(0xec6c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc66b);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0x74);
        // CB 74 0352
        gbc.setState(0x9562, 0x4683, 0x7200, 0x6512, 0xb2ee, 0x34d9, 0x1, 0x1);
        gbc.writeMem(0x9562, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4683);
        EXPECT(gbc.pc(), 0x9564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9562), 0xcb);
        EXPECT(gbc.readMem(0x9563), 0x74);
        // CB 74 0354
        gbc.setState(0x6ee6, 0x983a, 0xbb30, 0x2ec4, 0x25e0, 0xf4d4, 0x0, 0x1);
        gbc.writeMem(0x6ee6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x983a);
        EXPECT(gbc.pc(), 0x6ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0355
        gbc.setState(0x360c, 0x61d, 0x66e0, 0x28e7, 0x3121, 0x84a0, 0x1, 0x1);
        gbc.writeMem(0x360c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x61d);
        EXPECT(gbc.pc(), 0x360e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0356
        gbc.setState(0xe66, 0xe9ef, 0x2950, 0x5db5, 0xb00b, 0x72a0, 0x0, 0x0);
        gbc.writeMem(0xe66, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe9ef);
        EXPECT(gbc.pc(), 0xe68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0357
        gbc.setState(0x815a, 0x3fa6, 0x2980, 0x988b, 0x1880, 0xe56c, 0x1, 0x0);
        gbc.writeMem(0x815a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3fa6);
        EXPECT(gbc.pc(), 0x815c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815a), 0xcb);
        EXPECT(gbc.readMem(0x815b), 0x74);
        // CB 74 0358
        gbc.setState(0xe926, 0xfd00, 0x2a60, 0xe096, 0xa0ad, 0xb230, 0x0, 0x1);
        gbc.writeMem(0xe926, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfd00);
        EXPECT(gbc.pc(), 0xe928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe926), 0xcb);
        EXPECT(gbc.readMem(0xe927), 0x74);
        // CB 74 0359
        gbc.setState(0x4e24, 0x1fd1, 0xfef0, 0x7238, 0x7cee, 0x4e97, 0x1, 0x0);
        gbc.writeMem(0x4e24, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1fd1);
        EXPECT(gbc.pc(), 0x4e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 035A
        gbc.setState(0xd303, 0xcfc5, 0x4b00, 0xc902, 0x7332, 0x3d30, 0x0, 0x0);
        gbc.writeMem(0xd303, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcfc5);
        EXPECT(gbc.pc(), 0xd305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd303), 0xcb);
        EXPECT(gbc.readMem(0xd304), 0x74);
        // CB 74 035B
        gbc.setState(0x4dfe, 0x1863, 0xdf50, 0xe5d1, 0x2b0b, 0x7e9d, 0x0, 0x0);
        gbc.writeMem(0x4dfe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1863);
        EXPECT(gbc.pc(), 0x4e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 035C
        gbc.setState(0x2ed6, 0xfaee, 0xf650, 0xb976, 0xd49, 0x7ce6, 0x0, 0x0);
        gbc.writeMem(0x2ed6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfaee);
        EXPECT(gbc.pc(), 0x2ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 035D
        gbc.setState(0x1af9, 0xdcba, 0xeb10, 0x938a, 0xa450, 0x7d7d, 0x1, 0x0);
        gbc.writeMem(0x1af9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xdcba);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 035E
        gbc.setState(0x7ba6, 0x5452, 0x4280, 0xff13, 0x31e5, 0xdfc6, 0x0, 0x0);
        gbc.writeMem(0x7ba6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5452);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 035F
        gbc.setState(0x525e, 0xc79e, 0xfb50, 0x6955, 0x87e0, 0x4734, 0x0, 0x1);
        gbc.writeMem(0x525e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc79e);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0360
        gbc.setState(0x63bf, 0xd4a2, 0xe80, 0x544b, 0x8c48, 0x14b, 0x0, 0x0);
        gbc.writeMem(0x63bf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0x63c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0361
        gbc.setState(0x3690, 0x320b, 0xad10, 0xa587, 0x9fb4, 0xfbe1, 0x1, 0x0);
        gbc.writeMem(0x3690, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x320b);
        EXPECT(gbc.pc(), 0x3692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0363
        gbc.setState(0xc87f, 0xae0b, 0x8dd0, 0xfedb, 0x854f, 0xfd93, 0x1, 0x1);
        gbc.writeMem(0xc87f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xae0b);
        EXPECT(gbc.pc(), 0xc881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87f), 0xcb);
        EXPECT(gbc.readMem(0xc880), 0x74);
        // CB 74 0364
        gbc.setState(0x3a40, 0x76df, 0xd070, 0x5467, 0xfacd, 0xb53b, 0x0, 0x0);
        gbc.writeMem(0x3a40, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x76df);
        EXPECT(gbc.pc(), 0x3a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0365
        gbc.setState(0x7dd3, 0x2016, 0x4470, 0xad7, 0x4d31, 0xf620, 0x1, 0x1);
        gbc.writeMem(0x7dd3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2016);
        EXPECT(gbc.pc(), 0x7dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0366
        gbc.setState(0xcbee, 0x8ee4, 0xe7d0, 0x14ba, 0x4993, 0x684b, 0x0, 0x1);
        gbc.writeMem(0xcbee, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8ee4);
        EXPECT(gbc.pc(), 0xcbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbee), 0xcb);
        EXPECT(gbc.readMem(0xcbef), 0x74);
        // CB 74 0367
        gbc.setState(0x9abe, 0xc0a, 0x9d10, 0x9b18, 0xef2f, 0xa1f5, 0x1, 0x1);
        gbc.writeMem(0x9abe, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc0a);
        EXPECT(gbc.pc(), 0x9ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9abe), 0xcb);
        EXPECT(gbc.readMem(0x9abf), 0x74);
        // CB 74 0368
        gbc.setState(0x943d, 0xafb7, 0x64f0, 0xe541, 0xec59, 0xc109, 0x0, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0x943f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943d), 0xcb);
        EXPECT(gbc.readMem(0x943e), 0x74);
        // CB 74 0369
        gbc.setState(0xa1da, 0xc42c, 0x1b0, 0xa355, 0x9bee, 0x8707, 0x0, 0x1);
        gbc.writeMem(0xa1da, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc42c);
        EXPECT(gbc.pc(), 0xa1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1da), 0xcb);
        EXPECT(gbc.readMem(0xa1db), 0x74);
        // CB 74 036B
        gbc.setState(0x8878, 0x74ff, 0x7940, 0xf8e7, 0x379f, 0x5ccb, 0x0, 0x1);
        gbc.writeMem(0x8878, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x74ff);
        EXPECT(gbc.pc(), 0x887a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8878), 0xcb);
        EXPECT(gbc.readMem(0x8879), 0x74);
        // CB 74 036C
        gbc.setState(0x6e0c, 0xce30, 0x7ce0, 0x48b7, 0x576a, 0x1dc6, 0x0, 0x1);
        gbc.writeMem(0x6e0c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0x6e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 036D
        gbc.setState(0x780e, 0x5e55, 0xd7c0, 0xe208, 0x8d66, 0x6ea3, 0x1, 0x0);
        gbc.writeMem(0x780e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5e55);
        EXPECT(gbc.pc(), 0x7810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 036E
        gbc.setState(0x5990, 0xd5cc, 0xa710, 0xcf77, 0x5592, 0x6e25, 0x1, 0x1);
        gbc.writeMem(0x5990, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd5cc);
        EXPECT(gbc.pc(), 0x5992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 036F
        gbc.setState(0x432a, 0xe8f7, 0x5320, 0x576b, 0xf6a5, 0xb6eb, 0x0, 0x1);
        gbc.writeMem(0x432a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe8f7);
        EXPECT(gbc.pc(), 0x432c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0370
        gbc.setState(0x42c1, 0xb9cc, 0x8300, 0x171a, 0x4fb5, 0x636c, 0x1, 0x0);
        gbc.writeMem(0x42c1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb9cc);
        EXPECT(gbc.pc(), 0x42c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0371
        gbc.setState(0x8e04, 0xdcd4, 0xf10, 0x1f0a, 0x4b2c, 0x80ef, 0x0, 0x1);
        gbc.writeMem(0x8e04, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0x8e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e04), 0xcb);
        EXPECT(gbc.readMem(0x8e05), 0x74);
        // CB 74 0373
        gbc.setState(0xd0fd, 0xb8cc, 0xbe00, 0x3271, 0x6b1b, 0x842a, 0x1, 0x1);
        gbc.writeMem(0xd0fd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb8cc);
        EXPECT(gbc.pc(), 0xd0ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fd), 0xcb);
        EXPECT(gbc.readMem(0xd0fe), 0x74);
        // CB 74 0374
        gbc.setState(0x9fa, 0x2f76, 0xee90, 0x5307, 0x563f, 0x4be4, 0x1, 0x1);
        gbc.writeMem(0x9fa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2f76);
        EXPECT(gbc.pc(), 0x9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0375
        gbc.setState(0x7bdd, 0x9952, 0xcd10, 0x93d0, 0xb374, 0x8a39, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9952);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0376
        gbc.setState(0x12e5, 0xf7c9, 0xedc0, 0x4100, 0x621b, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0x12e5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0x12e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0377
        gbc.setState(0xc854, 0xcbcf, 0xdfa0, 0xc598, 0x10b0, 0x73d8, 0x1, 0x1);
        gbc.writeMem(0xc854, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcbcf);
        EXPECT(gbc.pc(), 0xc856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc854), 0xcb);
        EXPECT(gbc.readMem(0xc855), 0x74);
        // CB 74 0379
        gbc.setState(0xd812, 0x5d68, 0x3de0, 0xe44c, 0xef0d, 0xc60c, 0x0, 0x0);
        gbc.writeMem(0xd812, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5d68);
        EXPECT(gbc.pc(), 0xd814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd812), 0xcb);
        EXPECT(gbc.readMem(0xd813), 0x74);
        // CB 74 037B
        gbc.setState(0xc57e, 0x2098, 0xdc70, 0x2776, 0x7b0b, 0xb45a, 0x1, 0x1);
        gbc.writeMem(0xc57e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2098);
        EXPECT(gbc.pc(), 0xc580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57e), 0xcb);
        EXPECT(gbc.readMem(0xc57f), 0x74);
        // CB 74 037C
        gbc.setState(0x496e, 0x8159, 0xef30, 0xc541, 0x452a, 0xca6b, 0x1, 0x0);
        gbc.writeMem(0x496e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8159);
        EXPECT(gbc.pc(), 0x4970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 037D
        gbc.setState(0x22b4, 0xd2b3, 0xee30, 0x823a, 0x7d1a, 0xa8e5, 0x0, 0x1);
        gbc.writeMem(0x22b4, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd2b3);
        EXPECT(gbc.pc(), 0x22b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 037E
        gbc.setState(0x4ad3, 0x4c39, 0x85c0, 0xb8e, 0x6ede, 0x512, 0x1, 0x0);
        gbc.writeMem(0x4ad3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0x4ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 037F
        gbc.setState(0xea33, 0x7dd7, 0xa310, 0x38d4, 0xa80d, 0x4847, 0x0, 0x0);
        gbc.writeMem(0xea33, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7dd7);
        EXPECT(gbc.pc(), 0xea35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea33), 0xcb);
        EXPECT(gbc.readMem(0xea34), 0x74);
        // CB 74 0380
        gbc.setState(0x6301, 0x9000, 0x9b70, 0xef, 0x5447, 0x9f6, 0x0, 0x0);
        gbc.writeMem(0x6301, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9000);
        EXPECT(gbc.pc(), 0x6303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0381
        gbc.setState(0x1b8d, 0x8760, 0x36e0, 0xd2a8, 0x71e, 0x51ca, 0x0, 0x1);
        gbc.writeMem(0x1b8d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x1b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0382
        gbc.setState(0xa9d3, 0x15e1, 0x7c60, 0x8df5, 0x998, 0xad3e, 0x1, 0x0);
        gbc.writeMem(0xa9d3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x15e1);
        EXPECT(gbc.pc(), 0xa9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d3), 0xcb);
        EXPECT(gbc.readMem(0xa9d4), 0x74);
        // CB 74 0383
        gbc.setState(0xe62, 0xaeea, 0x38a0, 0x7180, 0x5f28, 0x779d, 0x1, 0x1);
        gbc.writeMem(0xe62, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaeea);
        EXPECT(gbc.pc(), 0xe64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0384
        gbc.setState(0xb80b, 0xf4e5, 0xcb20, 0x7683, 0x5393, 0x56e1, 0x1, 0x0);
        gbc.writeMem(0xb80b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf4e5);
        EXPECT(gbc.pc(), 0xb80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80b), 0xcb);
        EXPECT(gbc.readMem(0xb80c), 0x74);
        // CB 74 0385
        gbc.setState(0xe396, 0xd9bd, 0x9f0, 0x4bd7, 0xae6a, 0xeb01, 0x0, 0x0);
        gbc.writeMem(0xe396, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9bd);
        EXPECT(gbc.pc(), 0xe398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe396), 0xcb);
        EXPECT(gbc.readMem(0xe397), 0x74);
        // CB 74 0386
        gbc.setState(0xb993, 0x7ece, 0x9ab0, 0x4f81, 0x21ac, 0xd73e, 0x1, 0x0);
        gbc.writeMem(0xb993, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7ece);
        EXPECT(gbc.pc(), 0xb995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb993), 0xcb);
        EXPECT(gbc.readMem(0xb994), 0x74);
        // CB 74 0387
        gbc.setState(0x4c4b, 0xe099, 0xd4c0, 0x2c35, 0xcb0d, 0xd22b, 0x0, 0x0);
        gbc.writeMem(0x4c4b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe099);
        EXPECT(gbc.pc(), 0x4c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0388
        gbc.setState(0x1254, 0x1d73, 0x79b0, 0x9c0, 0x622a, 0xdfe0, 0x1, 0x1);
        gbc.writeMem(0x1254, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1d73);
        EXPECT(gbc.pc(), 0x1256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0389
        gbc.setState(0xefb9, 0x3364, 0xf130, 0xa183, 0xfbc7, 0xb36a, 0x0, 0x0);
        gbc.writeMem(0xefb9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3364);
        EXPECT(gbc.pc(), 0xefbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb9), 0xcb);
        EXPECT(gbc.readMem(0xefba), 0x74);
        // CB 74 038A
        gbc.setState(0xb25b, 0x90a7, 0xd230, 0xbe3a, 0xb63f, 0xefd9, 0x1, 0x0);
        gbc.writeMem(0xb25b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x90a7);
        EXPECT(gbc.pc(), 0xb25d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25b), 0xcb);
        EXPECT(gbc.readMem(0xb25c), 0x74);
        // CB 74 038B
        gbc.setState(0x7fdd, 0xa58c, 0xf380, 0x4a, 0x7e76, 0xfe88, 0x0, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa58c);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 038C
        gbc.setState(0x497c, 0x86e0, 0xe710, 0x481c, 0x3800, 0xdbdb, 0x0, 0x0);
        gbc.writeMem(0x497c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x86e0);
        EXPECT(gbc.pc(), 0x497e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 038D
        gbc.setState(0xd849, 0x3e38, 0x3c60, 0xe9af, 0x84d8, 0xdf2b, 0x1, 0x1);
        gbc.writeMem(0xd849, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3e38);
        EXPECT(gbc.pc(), 0xd84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd849), 0xcb);
        EXPECT(gbc.readMem(0xd84a), 0x74);
        // CB 74 038E
        gbc.setState(0x66f0, 0x1e14, 0x4860, 0x84a7, 0x5189, 0x5018, 0x1, 0x1);
        gbc.writeMem(0x66f0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1e14);
        EXPECT(gbc.pc(), 0x66f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 038F
        gbc.setState(0xaf7e, 0x5089, 0x8570, 0x46ea, 0x794a, 0x571a, 0x0, 0x0);
        gbc.writeMem(0xaf7e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0xaf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7e), 0xcb);
        EXPECT(gbc.readMem(0xaf7f), 0x74);
        // CB 74 0390
        gbc.setState(0x7339, 0x4d34, 0x4a0, 0xf863, 0xb691, 0x723a, 0x0, 0x1);
        gbc.writeMem(0x7339, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4d34);
        EXPECT(gbc.pc(), 0x733b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0391
        gbc.setState(0xc35a, 0xebd2, 0xe50, 0x9f1e, 0xf2ed, 0x7d5b, 0x1, 0x1);
        gbc.writeMem(0xc35a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xebd2);
        EXPECT(gbc.pc(), 0xc35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35a), 0xcb);
        EXPECT(gbc.readMem(0xc35b), 0x74);
        // CB 74 0392
        gbc.setState(0x6243, 0x45c, 0x6070, 0xb77a, 0xf731, 0x3f37, 0x0, 0x1);
        gbc.writeMem(0x6243, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x45c);
        EXPECT(gbc.pc(), 0x6245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0393
        gbc.setState(0xdec7, 0xcaba, 0xced0, 0x5c76, 0xe347, 0x19ee, 0x1, 0x1);
        gbc.writeMem(0xdec7, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcaba);
        EXPECT(gbc.pc(), 0xdec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec7), 0xcb);
        EXPECT(gbc.readMem(0xdec8), 0x74);
        // CB 74 0394
        gbc.setState(0x75a, 0x6641, 0x8c20, 0x7e7, 0xba90, 0xb78a, 0x1, 0x0);
        gbc.writeMem(0x75a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6641);
        EXPECT(gbc.pc(), 0x75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 0395
        gbc.setState(0x5c62, 0x4088, 0xa730, 0xa319, 0xcbf1, 0x19e9, 0x1, 0x0);
        gbc.writeMem(0x5c62, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4088);
        EXPECT(gbc.pc(), 0x5c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 0396
        gbc.setState(0xab2b, 0x8365, 0x8130, 0x9080, 0xd65d, 0x2332, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0x74);
        // CB 74 0397
        gbc.setState(0xe001, 0xbd78, 0xfdd0, 0x9e46, 0xc9f8, 0x564c, 0x0, 0x1);
        gbc.writeMem(0xe001, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbd78);
        EXPECT(gbc.pc(), 0xe003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe001), 0xcb);
        EXPECT(gbc.readMem(0xe002), 0x74);
        // CB 74 0398
        gbc.setState(0xbd51, 0xad81, 0x5f40, 0x1266, 0x5228, 0x74f4, 0x0, 0x0);
        gbc.writeMem(0xbd51, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0xbd53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd51), 0xcb);
        EXPECT(gbc.readMem(0xbd52), 0x74);
        // CB 74 0399
        gbc.setState(0xa75a, 0xe93d, 0xdfb0, 0x3bf9, 0xe1d8, 0x6219, 0x0, 0x0);
        gbc.writeMem(0xa75a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe93d);
        EXPECT(gbc.pc(), 0xa75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75a), 0xcb);
        EXPECT(gbc.readMem(0xa75b), 0x74);
        // CB 74 039A
        gbc.setState(0xdaa, 0xa6c2, 0x76a0, 0xe08a, 0x6d2e, 0x794b, 0x0, 0x0);
        gbc.writeMem(0xdaa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa6c2);
        EXPECT(gbc.pc(), 0xdac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 039B
        gbc.setState(0x6a6, 0x62f9, 0x3e70, 0xb546, 0xf92e, 0x8c51, 0x1, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x62f9);
        EXPECT(gbc.pc(), 0x6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 039C
        gbc.setState(0x3e8d, 0x732e, 0x2dc0, 0xd68a, 0xecb5, 0xa867, 0x0, 0x0);
        gbc.writeMem(0x3e8d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x732e);
        EXPECT(gbc.pc(), 0x3e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 039D
        gbc.setState(0x580f, 0x208, 0xf8c0, 0x369, 0xe3dc, 0x54f3, 0x1, 0x0);
        gbc.writeMem(0x580f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x208);
        EXPECT(gbc.pc(), 0x5811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 039E
        gbc.setState(0x3923, 0x827c, 0xe7b0, 0x9a1f, 0xd692, 0xb039, 0x1, 0x1);
        gbc.writeMem(0x3923, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x827c);
        EXPECT(gbc.pc(), 0x3925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 039F
        gbc.setState(0xe941, 0x246a, 0x6560, 0xabed, 0xa1, 0x714c, 0x1, 0x1);
        gbc.writeMem(0xe941, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x246a);
        EXPECT(gbc.pc(), 0xe943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe941), 0xcb);
        EXPECT(gbc.readMem(0xe942), 0x74);
        // CB 74 03A0
        gbc.setState(0x9811, 0xbb08, 0x55b0, 0x24b, 0x1a59, 0x32ab, 0x1, 0x1);
        gbc.writeMem(0x9811, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbb08);
        EXPECT(gbc.pc(), 0x9813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9811), 0xcb);
        EXPECT(gbc.readMem(0x9812), 0x74);
        // CB 74 03A1
        gbc.setState(0xd743, 0xa16c, 0xaa30, 0x4ac6, 0xfc8d, 0x41ec, 0x1, 0x1);
        gbc.writeMem(0xd743, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa16c);
        EXPECT(gbc.pc(), 0xd745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd743), 0xcb);
        EXPECT(gbc.readMem(0xd744), 0x74);
        // CB 74 03A2
        gbc.setState(0x8124, 0x1977, 0x4500, 0xbcf2, 0x834f, 0x487, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1977);
        EXPECT(gbc.pc(), 0x8126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8124), 0xcb);
        EXPECT(gbc.readMem(0x8125), 0x74);
        // CB 74 03A3
        gbc.setState(0x23d0, 0x4c64, 0x6f90, 0xf42c, 0x6dad, 0x4f0d, 0x0, 0x0);
        gbc.writeMem(0x23d0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4c64);
        EXPECT(gbc.pc(), 0x23d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03A4
        gbc.setState(0xef3c, 0x751b, 0xe3e0, 0xf720, 0xe007, 0x2602, 0x0, 0x1);
        gbc.writeMem(0xef3c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0xef3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3c), 0xcb);
        EXPECT(gbc.readMem(0xef3d), 0x74);
        // CB 74 03A5
        gbc.setState(0x522c, 0xb7e6, 0xcb50, 0xc390, 0x35bc, 0x751c, 0x1, 0x0);
        gbc.writeMem(0x522c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb7e6);
        EXPECT(gbc.pc(), 0x522e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03A6
        gbc.setState(0x4401, 0x3dff, 0xf120, 0xf25c, 0x91f3, 0xcd60, 0x0, 0x1);
        gbc.writeMem(0x4401, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3dff);
        EXPECT(gbc.pc(), 0x4403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03A7
        gbc.setState(0x75bd, 0xbcfa, 0xbb60, 0xfa5, 0xef80, 0x173c, 0x0, 0x1);
        gbc.writeMem(0x75bd, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbcfa);
        EXPECT(gbc.pc(), 0x75bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03A8
        gbc.setState(0x2f9f, 0xf182, 0xfd90, 0x4f6f, 0x284e, 0xf503, 0x0, 0x0);
        gbc.writeMem(0x2f9f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf182);
        EXPECT(gbc.pc(), 0x2fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03A9
        gbc.setState(0xab10, 0x9858, 0xe500, 0xe4f9, 0x896, 0xdbe7, 0x0, 0x1);
        gbc.writeMem(0xab10, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9858);
        EXPECT(gbc.pc(), 0xab12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab10), 0xcb);
        EXPECT(gbc.readMem(0xab11), 0x74);
        // CB 74 03AA
        gbc.setState(0x366a, 0xcecf, 0x8ce0, 0x5a5b, 0x91fe, 0x2590, 0x1, 0x1);
        gbc.writeMem(0x366a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03AB
        gbc.setState(0x7627, 0x5732, 0xd930, 0x227b, 0x26d4, 0xc6b9, 0x0, 0x1);
        gbc.writeMem(0x7627, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0x7629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03AC
        gbc.setState(0xd5e9, 0x369f, 0xcdc0, 0x615a, 0xf935, 0x9bba, 0x1, 0x1);
        gbc.writeMem(0xd5e9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x369f);
        EXPECT(gbc.pc(), 0xd5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e9), 0xcb);
        EXPECT(gbc.readMem(0xd5ea), 0x74);
        // CB 74 03AD
        gbc.setState(0xdcaa, 0x89be, 0xd850, 0x384c, 0x9e4c, 0xf9eb, 0x0, 0x1);
        gbc.writeMem(0xdcaa, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x89be);
        EXPECT(gbc.pc(), 0xdcac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcaa), 0xcb);
        EXPECT(gbc.readMem(0xdcab), 0x74);
        // CB 74 03AE
        gbc.setState(0x894d, 0xf3e7, 0xc160, 0x2634, 0xf9de, 0xea86, 0x0, 0x1);
        gbc.writeMem(0x894d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf3e7);
        EXPECT(gbc.pc(), 0x894f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894d), 0xcb);
        EXPECT(gbc.readMem(0x894e), 0x74);
        // CB 74 03AF
        gbc.setState(0x8836, 0x526, 0xde70, 0x2651, 0x68f5, 0xd73f, 0x1, 0x0);
        gbc.writeMem(0x8836, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x526);
        EXPECT(gbc.pc(), 0x8838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8836), 0xcb);
        EXPECT(gbc.readMem(0x8837), 0x74);
        // CB 74 03B0
        gbc.setState(0x6a22, 0x1b42, 0xce10, 0x61fd, 0x87d7, 0xc7c1, 0x0, 0x1);
        gbc.writeMem(0x6a22, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1b42);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03B1
        gbc.setState(0xdb07, 0xc662, 0xeda0, 0x40fa, 0x3898, 0xe482, 0x0, 0x0);
        gbc.writeMem(0xdb07, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc662);
        EXPECT(gbc.pc(), 0xdb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb07), 0xcb);
        EXPECT(gbc.readMem(0xdb08), 0x74);
        // CB 74 03B2
        gbc.setState(0x864b, 0xace5, 0xf5d0, 0x7873, 0xd32c, 0xf9ea, 0x1, 0x0);
        gbc.writeMem(0x864b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xace5);
        EXPECT(gbc.pc(), 0x864d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864b), 0xcb);
        EXPECT(gbc.readMem(0x864c), 0x74);
        // CB 74 03B3
        gbc.setState(0x1f15, 0x7569, 0xf2b0, 0x7621, 0xe059, 0xb178, 0x1, 0x1);
        gbc.writeMem(0x1f15, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7569);
        EXPECT(gbc.pc(), 0x1f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03B4
        gbc.setState(0xd290, 0xb4f9, 0x2600, 0x62f5, 0xa134, 0x921d, 0x0, 0x1);
        gbc.writeMem(0xd290, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb4f9);
        EXPECT(gbc.pc(), 0xd292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd290), 0xcb);
        EXPECT(gbc.readMem(0xd291), 0x74);
        // CB 74 03B5
        gbc.setState(0xe876, 0x85cf, 0x7560, 0x9e06, 0xcdf4, 0x5eaa, 0x1, 0x1);
        gbc.writeMem(0xe876, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0xe878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe876), 0xcb);
        EXPECT(gbc.readMem(0xe877), 0x74);
        // CB 74 03B6
        gbc.setState(0xa8bb, 0xb73b, 0xa2c0, 0x1f72, 0xe51c, 0xf505, 0x0, 0x0);
        gbc.writeMem(0xa8bb, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb73b);
        EXPECT(gbc.pc(), 0xa8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bb), 0xcb);
        EXPECT(gbc.readMem(0xa8bc), 0x74);
        // CB 74 03B7
        gbc.setState(0x3cd5, 0x5115, 0x1e90, 0x129e, 0xedaf, 0xe8f1, 0x1, 0x0);
        gbc.writeMem(0x3cd5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5115);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03B8
        gbc.setState(0x9c94, 0x4ed8, 0x5db0, 0xe451, 0xa377, 0x8890, 0x0, 0x1);
        gbc.writeMem(0x9c94, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4ed8);
        EXPECT(gbc.pc(), 0x9c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c94), 0xcb);
        EXPECT(gbc.readMem(0x9c95), 0x74);
        // CB 74 03B9
        gbc.setState(0xa783, 0x1887, 0xf3a0, 0xe598, 0x6a46, 0x4c44, 0x0, 0x0);
        gbc.writeMem(0xa783, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0xa785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa783), 0xcb);
        EXPECT(gbc.readMem(0xa784), 0x74);
        // CB 74 03BA
        gbc.setState(0x712, 0x96c8, 0x23e0, 0x2848, 0xb88f, 0xad15, 0x0, 0x0);
        gbc.writeMem(0x712, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x96c8);
        EXPECT(gbc.pc(), 0x714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03BB
        gbc.setState(0xad17, 0x3c92, 0xdc0, 0x29f, 0x4ff3, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xad17, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3c92);
        EXPECT(gbc.pc(), 0xad19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad17), 0xcb);
        EXPECT(gbc.readMem(0xad18), 0x74);
        // CB 74 03BC
        gbc.setState(0xef37, 0x31ce, 0xb030, 0xa2f5, 0x7dc5, 0xc8c9, 0x0, 0x0);
        gbc.writeMem(0xef37, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x31ce);
        EXPECT(gbc.pc(), 0xef39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef37), 0xcb);
        EXPECT(gbc.readMem(0xef38), 0x74);
        // CB 74 03BD
        gbc.setState(0xe1cf, 0x438, 0x6e10, 0x7a19, 0xdd74, 0x323c, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x438);
        EXPECT(gbc.pc(), 0xe1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cf), 0xcb);
        EXPECT(gbc.readMem(0xe1d0), 0x74);
        // CB 74 03BE
        gbc.setState(0x8f3e, 0xc5be, 0x7790, 0x8a7a, 0x4e59, 0xb950, 0x1, 0x1);
        gbc.writeMem(0x8f3e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc5be);
        EXPECT(gbc.pc(), 0x8f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f3e), 0xcb);
        EXPECT(gbc.readMem(0x8f3f), 0x74);
        // CB 74 03BF
        gbc.setState(0x1baf, 0xa1cb, 0x31b0, 0x515f, 0xf61f, 0x8499, 0x0, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa1cb);
        EXPECT(gbc.pc(), 0x1bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03C0
        gbc.setState(0x3aec, 0x8c33, 0x5890, 0xf3bc, 0x6b04, 0xae28, 0x1, 0x1);
        gbc.writeMem(0x3aec, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8c33);
        EXPECT(gbc.pc(), 0x3aee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03C3
        gbc.setState(0x845a, 0xe676, 0xda70, 0x526a, 0x40ab, 0x1d13, 0x1, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe676);
        EXPECT(gbc.pc(), 0x845c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845a), 0xcb);
        EXPECT(gbc.readMem(0x845b), 0x74);
        // CB 74 03C4
        gbc.setState(0x11a6, 0xe4ee, 0x5b90, 0x6b38, 0x2e1b, 0x1499, 0x0, 0x1);
        gbc.writeMem(0x11a6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe4ee);
        EXPECT(gbc.pc(), 0x11a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03C5
        gbc.setState(0x111c, 0x7f87, 0xdad0, 0x1eee, 0x461c, 0xeb22, 0x0, 0x1);
        gbc.writeMem(0x111c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7f87);
        EXPECT(gbc.pc(), 0x111e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03C6
        gbc.setState(0xb4e5, 0x1b57, 0x2f40, 0xd132, 0x5b34, 0x8c07, 0x1, 0x0);
        gbc.writeMem(0xb4e5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1b57);
        EXPECT(gbc.pc(), 0xb4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e5), 0xcb);
        EXPECT(gbc.readMem(0xb4e6), 0x74);
        // CB 74 03C7
        gbc.setState(0x9d80, 0x531f, 0x2270, 0x43be, 0x4f5e, 0x39f9, 0x0, 0x1);
        gbc.writeMem(0x9d80, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x531f);
        EXPECT(gbc.pc(), 0x9d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d80), 0xcb);
        EXPECT(gbc.readMem(0x9d81), 0x74);
        // CB 74 03C8
        gbc.setState(0xa4d, 0xb260, 0x5f00, 0x5070, 0xee41, 0x6bde, 0x0, 0x0);
        gbc.writeMem(0xa4d, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb260);
        EXPECT(gbc.pc(), 0xa4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03C9
        gbc.setState(0x5f72, 0x9381, 0x83a0, 0xb68e, 0xd550, 0xc4e, 0x0, 0x0);
        gbc.writeMem(0x5f72, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9381);
        EXPECT(gbc.pc(), 0x5f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03CA
        gbc.setState(0xe1e0, 0x2688, 0x8570, 0x1613, 0xae80, 0xe02e, 0x1, 0x1);
        gbc.writeMem(0xe1e0, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2688);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e0), 0xcb);
        EXPECT(gbc.readMem(0xe1e1), 0x74);
        // CB 74 03CB
        gbc.setState(0x410f, 0xdca4, 0x1990, 0x6fbb, 0x48e, 0x4b8, 0x0, 0x0);
        gbc.writeMem(0x410f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdca4);
        EXPECT(gbc.pc(), 0x4111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03CC
        gbc.setState(0x7e9b, 0xe9e5, 0x7230, 0x82e, 0x70e5, 0x846c, 0x0, 0x1);
        gbc.writeMem(0x7e9b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe9e5);
        EXPECT(gbc.pc(), 0x7e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03CD
        gbc.setState(0x891c, 0x7535, 0x6e70, 0xc975, 0xe1cc, 0x6ccb, 0x0, 0x0);
        gbc.writeMem(0x891c, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7535);
        EXPECT(gbc.pc(), 0x891e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891c), 0xcb);
        EXPECT(gbc.readMem(0x891d), 0x74);
        // CB 74 03CE
        gbc.setState(0x3593, 0x8b6b, 0xcd0, 0x9ab2, 0x4152, 0x498, 0x0, 0x1);
        gbc.writeMem(0x3593, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03CF
        gbc.setState(0xe2ca, 0x7b7f, 0x61b0, 0x69b2, 0x94c2, 0x3673, 0x0, 0x1);
        gbc.writeMem(0xe2ca, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7b7f);
        EXPECT(gbc.pc(), 0xe2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ca), 0xcb);
        EXPECT(gbc.readMem(0xe2cb), 0x74);
        // CB 74 03D0
        gbc.setState(0x80c5, 0x34fc, 0xba40, 0x6089, 0xdb2a, 0x7efc, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x34fc);
        EXPECT(gbc.pc(), 0x80c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c5), 0xcb);
        EXPECT(gbc.readMem(0x80c6), 0x74);
        // CB 74 03D1
        gbc.setState(0x1c72, 0xcc85, 0xf6a0, 0xc7e1, 0x9d4d, 0x974c, 0x0, 0x1);
        gbc.writeMem(0x1c72, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcc85);
        EXPECT(gbc.pc(), 0x1c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03D2
        gbc.setState(0x11cf, 0x37a, 0xe130, 0xb388, 0xa686, 0x73b5, 0x1, 0x0);
        gbc.writeMem(0x11cf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x37a);
        EXPECT(gbc.pc(), 0x11d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03D3
        gbc.setState(0x4708, 0x1298, 0xe430, 0xaf52, 0xe679, 0x592, 0x1, 0x1);
        gbc.writeMem(0x4708, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1298);
        EXPECT(gbc.pc(), 0x470a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03D4
        gbc.setState(0xd2ab, 0xba7c, 0x5dc0, 0x9823, 0xb8b7, 0x23e0, 0x1, 0x1);
        gbc.writeMem(0xd2ab, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xba7c);
        EXPECT(gbc.pc(), 0xd2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ab), 0xcb);
        EXPECT(gbc.readMem(0xd2ac), 0x74);
        // CB 74 03D5
        gbc.setState(0x331e, 0x42ee, 0x24d0, 0xa25b, 0x638f, 0xf461, 0x0, 0x0);
        gbc.writeMem(0x331e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x42ee);
        EXPECT(gbc.pc(), 0x3320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03D6
        gbc.setState(0x9ac8, 0xbfb1, 0x2490, 0x3157, 0xbb03, 0xfb53, 0x0, 0x1);
        gbc.writeMem(0x9ac8, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbfb1);
        EXPECT(gbc.pc(), 0x9aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac8), 0xcb);
        EXPECT(gbc.readMem(0x9ac9), 0x74);
        // CB 74 03D7
        gbc.setState(0x590e, 0x2d40, 0x2d50, 0x7483, 0x3afa, 0xa754, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2d40);
        EXPECT(gbc.pc(), 0x5910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03D8
        gbc.setState(0xd7e2, 0x676a, 0xaa20, 0x6322, 0xa777, 0x429d, 0x1, 0x1);
        gbc.writeMem(0xd7e2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x676a);
        EXPECT(gbc.pc(), 0xd7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        EXPECT(gbc.readMem(0xd7e3), 0x74);
        // CB 74 03D9
        gbc.setState(0xdec3, 0x66ac, 0xc660, 0x2358, 0x18fd, 0x80df, 0x1, 0x1);
        gbc.writeMem(0xdec3, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x66ac);
        EXPECT(gbc.pc(), 0xdec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec3), 0xcb);
        EXPECT(gbc.readMem(0xdec4), 0x74);
        // CB 74 03DA
        gbc.setState(0xb3d1, 0xa5b8, 0xe450, 0x322, 0xb9e9, 0x6b17, 0x1, 0x0);
        gbc.writeMem(0xb3d1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa5b8);
        EXPECT(gbc.pc(), 0xb3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d1), 0xcb);
        EXPECT(gbc.readMem(0xb3d2), 0x74);
        // CB 74 03DB
        gbc.setState(0xd536, 0x186, 0xe600, 0xc46b, 0x21a0, 0xb9c2, 0x1, 0x0);
        gbc.writeMem(0xd536, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x186);
        EXPECT(gbc.pc(), 0xd538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd536), 0xcb);
        EXPECT(gbc.readMem(0xd537), 0x74);
        // CB 74 03DC
        gbc.setState(0x5f4f, 0xa0a4, 0xe20, 0x15c8, 0x401, 0x6315, 0x0, 0x0);
        gbc.writeMem(0x5f4f, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0x5f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03DD
        gbc.setState(0xcbaf, 0x251f, 0xd8e0, 0x75b1, 0x5d74, 0x8ea4, 0x1, 0x0);
        gbc.writeMem(0xcbaf, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x251f);
        EXPECT(gbc.pc(), 0xcbb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaf), 0xcb);
        EXPECT(gbc.readMem(0xcbb0), 0x74);
        // CB 74 03DE
        gbc.setState(0x72b, 0x7859, 0x8d20, 0xba92, 0xa41f, 0x1d64, 0x1, 0x0);
        gbc.writeMem(0x72b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0x72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03DF
        gbc.setState(0x3cd1, 0xc83c, 0xc580, 0x228b, 0xcf80, 0xea61, 0x0, 0x0);
        gbc.writeMem(0x3cd1, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc83c);
        EXPECT(gbc.pc(), 0x3cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03E1
        gbc.setState(0xfc6, 0xd049, 0x9cd0, 0x469, 0xa732, 0x8be5, 0x0, 0x0);
        gbc.writeMem(0xfc6, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd049);
        EXPECT(gbc.pc(), 0xfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 74 03E3
        gbc.setState(0xd02b, 0x7415, 0xf500, 0x23f3, 0xbae, 0x1d57, 0x0, 0x0);
        gbc.writeMem(0xd02b, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7415);
        EXPECT(gbc.pc(), 0xd02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02b), 0xcb);
        EXPECT(gbc.readMem(0xd02c), 0x74);
        // CB 74 03E4
        gbc.setState(0x46c2, 0x53f5, 0xa140, 0x6ff3, 0x4ee9, 0x6ca, 0x0, 0x1);
        gbc.writeMem(0x46c2, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x53f5);
        EXPECT(gbc.pc(), 0x46c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03E5
        gbc.setState(0xab71, 0x9ce3, 0x38b0, 0xc242, 0x13e4, 0xf409, 0x1, 0x1);
        gbc.writeMem(0xab71, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9ce3);
        EXPECT(gbc.pc(), 0xab73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab71), 0xcb);
        EXPECT(gbc.readMem(0xab72), 0x74);
        // CB 74 03E6
        gbc.setState(0x47c9, 0xf8aa, 0xf340, 0x5a0c, 0x86, 0xf76a, 0x1, 0x0);
        gbc.writeMem(0x47c9, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf8aa);
        EXPECT(gbc.pc(), 0x47cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 74 03E7
        gbc.setState(0x6b4a, 0x6bf, 0x93f0, 0xa582, 0x28fa, 0xdb1c, 0x0, 0x0);
        gbc.writeMem(0x6b4a, { 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6bf);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
