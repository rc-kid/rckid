    TEST(gbcemu, opcode_cb_3c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 3C 0000
        gbc.setState(0xb389, 0xcfcc, 0xf480, 0x258, 0xa2c4, 0x29af, 0x1, 0x1);
        gbc.writeMem(0xb389, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb389));
        EXPECT(0x3c, gbc.readMem(0xb38a));
        // CB 3C 0001
        gbc.setState(0x403c, 0xa72b, 0x37f0, 0x9227, 0x4a2e, 0x56cf, 0x1, 0x1);
        gbc.writeMem(0x403c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa72b, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0002
        gbc.setState(0x5722, 0x4aa8, 0xb7d0, 0xd038, 0xfea4, 0xc820, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0004
        gbc.setState(0x2a1a, 0xa678, 0xc080, 0x1a68, 0xa7f8, 0xe641, 0x0, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa678, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0005
        gbc.setState(0x42d3, 0xda20, 0xd2d0, 0xf886, 0x56ed, 0xd763, 0x1, 0x0);
        gbc.writeMem(0x42d3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xda20, gbc.sp());
        EXPECT(0x42d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0006
        gbc.setState(0x27dd, 0xe3ed, 0x9270, 0xbe9f, 0xaad7, 0x480b, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0007
        gbc.setState(0x3730, 0x9077, 0x4ab0, 0x9922, 0x6f8c, 0xee5e, 0x1, 0x0);
        gbc.writeMem(0x3730, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0x3732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0008
        gbc.setState(0x865d, 0xbae0, 0x6c10, 0xe94b, 0x4241, 0xb7ca, 0x0, 0x0);
        gbc.writeMem(0x865d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0x3c, gbc.readMem(0x865e));
        // CB 3C 0009
        gbc.setState(0x9a59, 0xc881, 0x77c0, 0x71c, 0xb0b8, 0x5b8b, 0x0, 0x1);
        gbc.writeMem(0x9a59, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x9a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a59));
        EXPECT(0x3c, gbc.readMem(0x9a5a));
        // CB 3C 000A
        gbc.setState(0x3cd5, 0xc1b, 0xb3c0, 0xdaf3, 0xc8a9, 0xaaed, 0x1, 0x0);
        gbc.writeMem(0x3cd5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc1b, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 000B
        gbc.setState(0x8c88, 0x3edb, 0x2880, 0x9b3d, 0x42cc, 0x2194, 0x1, 0x1);
        gbc.writeMem(0x8c88, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3edb, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c88));
        EXPECT(0x3c, gbc.readMem(0x8c89));
        // CB 3C 000C
        gbc.setState(0x8ac8, 0x7be2, 0xd770, 0xa1d6, 0x50b8, 0x1e1d, 0x1, 0x1);
        gbc.writeMem(0x8ac8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7be2, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0x3c, gbc.readMem(0x8ac9));
        // CB 3C 000D
        gbc.setState(0x2460, 0x55f2, 0xab0, 0x16a3, 0xa39e, 0xe829, 0x1, 0x1);
        gbc.writeMem(0x2460, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x55f2, gbc.sp());
        EXPECT(0x2462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 000E
        gbc.setState(0x82b, 0xae0f, 0xc270, 0x150e, 0x7f9, 0x1baa, 0x0, 0x1);
        gbc.writeMem(0x82b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 000F
        gbc.setState(0x7981, 0xe131, 0xe870, 0x626c, 0x66b4, 0x3564, 0x1, 0x1);
        gbc.writeMem(0x7981, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe131, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0010
        gbc.setState(0x9db3, 0xa78c, 0xaf80, 0x1f9c, 0x1076, 0x6812, 0x0, 0x0);
        gbc.writeMem(0x9db3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0x9db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db3));
        EXPECT(0x3c, gbc.readMem(0x9db4));
        // CB 3C 0011
        gbc.setState(0xc007, 0x34a3, 0x4350, 0x8270, 0x2b2c, 0x236f, 0x0, 0x1);
        gbc.writeMem(0xc007, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x34a3, gbc.sp());
        EXPECT(0xc009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc007));
        EXPECT(0x3c, gbc.readMem(0xc008));
        // CB 3C 0012
        gbc.setState(0xa985, 0xe307, 0x5260, 0x8ace, 0x1c61, 0x827d, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe307, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0x3c, gbc.readMem(0xa986));
        // CB 3C 0014
        gbc.setState(0x1630, 0xa8c9, 0xfe90, 0x95f5, 0x3f4b, 0x36a6, 0x0, 0x0);
        gbc.writeMem(0x1630, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0015
        gbc.setState(0xb4f9, 0xb136, 0xe270, 0xbe2e, 0xae0d, 0xae85, 0x0, 0x0);
        gbc.writeMem(0xb4f9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb136, gbc.sp());
        EXPECT(0xb4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f9));
        EXPECT(0x3c, gbc.readMem(0xb4fa));
        // CB 3C 0017
        gbc.setState(0xbc90, 0x69e4, 0x8740, 0x9218, 0xd569, 0xd9cd, 0x1, 0x1);
        gbc.writeMem(0xbc90, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0xbc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc90));
        EXPECT(0x3c, gbc.readMem(0xbc91));
        // CB 3C 0018
        gbc.setState(0xd55d, 0x8a54, 0x5690, 0xf79d, 0x3c85, 0x710e, 0x1, 0x0);
        gbc.writeMem(0xd55d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8a54, gbc.sp());
        EXPECT(0xd55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55d));
        EXPECT(0x3c, gbc.readMem(0xd55e));
        // CB 3C 0019
        gbc.setState(0x4434, 0xfbe0, 0xcd10, 0xfa98, 0x2ba1, 0xde5c, 0x1, 0x0);
        gbc.writeMem(0x4434, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 001A
        gbc.setState(0x9dc9, 0x3c4b, 0xbf20, 0x3ad5, 0xf7f3, 0x9c2e, 0x0, 0x1);
        gbc.writeMem(0x9dc9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc9));
        EXPECT(0x3c, gbc.readMem(0x9dca));
        // CB 3C 001B
        gbc.setState(0x2e93, 0x4e88, 0xafe0, 0x6e5f, 0xa91e, 0xbae4, 0x1, 0x0);
        gbc.writeMem(0x2e93, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e88, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 001C
        gbc.setState(0x4e70, 0xda09, 0x7da0, 0xc383, 0x8851, 0xa989, 0x1, 0x1);
        gbc.writeMem(0x4e70, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xda09, gbc.sp());
        EXPECT(0x4e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 001D
        gbc.setState(0xcec0, 0x8b7e, 0xb3b0, 0x6653, 0x45ab, 0x962a, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8b7e, gbc.sp());
        EXPECT(0xcec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec0));
        EXPECT(0x3c, gbc.readMem(0xcec1));
        // CB 3C 001E
        gbc.setState(0x2d23, 0x5559, 0x37a0, 0x801b, 0x4326, 0x782f, 0x0, 0x0);
        gbc.writeMem(0x2d23, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 001F
        gbc.setState(0x957d, 0xc912, 0x9fe0, 0x1cbc, 0xbcda, 0x45d7, 0x1, 0x0);
        gbc.writeMem(0x957d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc912, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0x3c, gbc.readMem(0x957e));
        // CB 3C 0020
        gbc.setState(0x2625, 0x18eb, 0x2f50, 0xaf01, 0xbd06, 0xe04e, 0x0, 0x0);
        gbc.writeMem(0x2625, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0021
        gbc.setState(0x3630, 0x1abe, 0x7580, 0x38a7, 0x32b, 0x4913, 0x0, 0x1);
        gbc.writeMem(0x3630, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0x3632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0022
        gbc.setState(0xa827, 0xd283, 0x3ee0, 0xa116, 0x98ea, 0x1c11, 0x0, 0x1);
        gbc.writeMem(0xa827, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa827));
        EXPECT(0x3c, gbc.readMem(0xa828));
        // CB 3C 0024
        gbc.setState(0x7e80, 0xfd44, 0x8440, 0x8f9, 0x93a4, 0xe7f, 0x1, 0x0);
        gbc.writeMem(0x7e80, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0025
        gbc.setState(0xe203, 0x9a7f, 0x9a20, 0xfb7d, 0x9c5e, 0x3486, 0x0, 0x1);
        gbc.writeMem(0xe203, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9a7f, gbc.sp());
        EXPECT(0xe205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe203));
        EXPECT(0x3c, gbc.readMem(0xe204));
        // CB 3C 0026
        gbc.setState(0xa49a, 0x9324, 0x9b40, 0x8579, 0xda68, 0x5b47, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9324, gbc.sp());
        EXPECT(0xa49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49a));
        EXPECT(0x3c, gbc.readMem(0xa49b));
        // CB 3C 0027
        gbc.setState(0x8e05, 0x20f5, 0x7cd0, 0x73d6, 0xbe8c, 0x969b, 0x1, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x20f5, gbc.sp());
        EXPECT(0x8e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e05));
        EXPECT(0x3c, gbc.readMem(0x8e06));
        // CB 3C 0028
        gbc.setState(0x947, 0xbfc2, 0x8080, 0x754c, 0x33d0, 0x48aa, 0x1, 0x0);
        gbc.writeMem(0x947, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbfc2, gbc.sp());
        EXPECT(0x949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0029
        gbc.setState(0x5af3, 0xc140, 0xa6b0, 0x866f, 0x9e56, 0x10b4, 0x0, 0x0);
        gbc.writeMem(0x5af3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc140, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 002A
        gbc.setState(0x673c, 0x17ca, 0x8690, 0xa270, 0xb858, 0xf81f, 0x0, 0x0);
        gbc.writeMem(0x673c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x17ca, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 002B
        gbc.setState(0x79b1, 0xfbc2, 0xc90, 0x7d0e, 0xc696, 0x2ac7, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfbc2, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 002C
        gbc.setState(0xc013, 0xbbf1, 0xebb0, 0x5543, 0xee28, 0x98d1, 0x0, 0x0);
        gbc.writeMem(0xc013, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0xc015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc013));
        EXPECT(0x3c, gbc.readMem(0xc014));
        // CB 3C 002D
        gbc.setState(0x3b85, 0xe1d8, 0xcfd0, 0xf440, 0xb249, 0xdd16, 0x0, 0x1);
        gbc.writeMem(0x3b85, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe1d8, gbc.sp());
        EXPECT(0x3b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 002E
        gbc.setState(0xa450, 0x22cd, 0x1900, 0x67f1, 0x2572, 0xe8d7, 0x1, 0x0);
        gbc.writeMem(0xa450, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa450));
        EXPECT(0x3c, gbc.readMem(0xa451));
        // CB 3C 002F
        gbc.setState(0x28ca, 0x6caa, 0x2ec0, 0x2a02, 0x9fd8, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x28ca, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6caa, gbc.sp());
        EXPECT(0x28cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0030
        gbc.setState(0xb1ce, 0xc477, 0x2330, 0x6c89, 0x6ee4, 0x677, 0x1, 0x1);
        gbc.writeMem(0xb1ce, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0x3c, gbc.readMem(0xb1cf));
        // CB 3C 0031
        gbc.setState(0xc61f, 0x8535, 0x9e40, 0xbbdc, 0xcf86, 0xbba7, 0x1, 0x1);
        gbc.writeMem(0xc61f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8535, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0x3c, gbc.readMem(0xc620));
        // CB 3C 0032
        gbc.setState(0xb8d1, 0x983d, 0xe8b0, 0xf93e, 0x1f77, 0x1684, 0x0, 0x1);
        gbc.writeMem(0xb8d1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x983d, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d1));
        EXPECT(0x3c, gbc.readMem(0xb8d2));
        // CB 3C 0033
        gbc.setState(0xe3a7, 0x9e1f, 0x3a00, 0x902f, 0x38d3, 0x1d3, 0x0, 0x1);
        gbc.writeMem(0xe3a7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9e1f, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a7));
        EXPECT(0x3c, gbc.readMem(0xe3a8));
        // CB 3C 0034
        gbc.setState(0xac8c, 0xf457, 0x3750, 0x4bfd, 0xb0d8, 0xe93c, 0x1, 0x0);
        gbc.writeMem(0xac8c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8c));
        EXPECT(0x3c, gbc.readMem(0xac8d));
        // CB 3C 0035
        gbc.setState(0xc104, 0x8efc, 0x4a70, 0x29fb, 0x4ead, 0x50ea, 0x0, 0x0);
        gbc.writeMem(0xc104, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0xc106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc104));
        EXPECT(0x3c, gbc.readMem(0xc105));
        // CB 3C 0036
        gbc.setState(0x5f8b, 0x3160, 0x7630, 0xa2ae, 0x17f, 0x974, 0x1, 0x1);
        gbc.writeMem(0x5f8b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3160, gbc.sp());
        EXPECT(0x5f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0037
        gbc.setState(0xbb56, 0x860f, 0x6660, 0xd18a, 0xf264, 0xe4, 0x1, 0x0);
        gbc.writeMem(0xbb56, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0xbb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb56));
        EXPECT(0x3c, gbc.readMem(0xbb57));
        // CB 3C 0038
        gbc.setState(0x147d, 0xd38d, 0x5a30, 0xecf9, 0xdbac, 0x4267, 0x0, 0x0);
        gbc.writeMem(0x147d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd38d, gbc.sp());
        EXPECT(0x147f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0039
        gbc.setState(0xd58d, 0xfba2, 0xf6f0, 0x2285, 0x2e6e, 0x772b, 0x0, 0x0);
        gbc.writeMem(0xd58d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfba2, gbc.sp());
        EXPECT(0xd58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58d));
        EXPECT(0x3c, gbc.readMem(0xd58e));
        // CB 3C 003A
        gbc.setState(0xb45d, 0x12d1, 0x97b0, 0xb2, 0x6093, 0x4390, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x12d1, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45d));
        EXPECT(0x3c, gbc.readMem(0xb45e));
        // CB 3C 003B
        gbc.setState(0x2fff, 0xd180, 0xa100, 0x9982, 0x9c38, 0x29dd, 0x1, 0x1);
        gbc.writeMem(0x2fff, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd180, gbc.sp());
        EXPECT(0x3001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 003C
        gbc.setState(0x6bc4, 0x4161, 0xed70, 0xd1cb, 0xa394, 0x906b, 0x0, 0x1);
        gbc.writeMem(0x6bc4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4161, gbc.sp());
        EXPECT(0x6bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 003D
        gbc.setState(0x2df6, 0x123c, 0x5800, 0xbc79, 0x40aa, 0x4672, 0x0, 0x0);
        gbc.writeMem(0x2df6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0x2df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 003E
        gbc.setState(0xc93e, 0x14c6, 0xe210, 0x4c50, 0x3a1, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0xc93e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93e));
        EXPECT(0x3c, gbc.readMem(0xc93f));
        // CB 3C 003F
        gbc.setState(0x3e2e, 0xce48, 0x2a60, 0x9392, 0x27e8, 0x3751, 0x0, 0x0);
        gbc.writeMem(0x3e2e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x3e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0040
        gbc.setState(0xe6be, 0xe1a5, 0x2ee0, 0x55ee, 0xea92, 0xc61d, 0x1, 0x1);
        gbc.writeMem(0xe6be, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0xe6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6be));
        EXPECT(0x3c, gbc.readMem(0xe6bf));
        // CB 3C 0041
        gbc.setState(0x3e5d, 0x3fdd, 0xd8b0, 0x5332, 0xf2fe, 0x670d, 0x1, 0x0);
        gbc.writeMem(0x3e5d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3fdd, gbc.sp());
        EXPECT(0x3e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0042
        gbc.setState(0xdec7, 0x9231, 0x6dc0, 0x4a70, 0xff24, 0xfe4b, 0x0, 0x0);
        gbc.writeMem(0xdec7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9231, gbc.sp());
        EXPECT(0xdec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec7));
        EXPECT(0x3c, gbc.readMem(0xdec8));
        // CB 3C 0043
        gbc.setState(0xab9f, 0x72da, 0xa80, 0xc76f, 0x97ef, 0x273f, 0x0, 0x1);
        gbc.writeMem(0xab9f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0xaba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9f));
        EXPECT(0x3c, gbc.readMem(0xaba0));
        // CB 3C 0044
        gbc.setState(0x6653, 0x9f99, 0xe790, 0x9394, 0xfa2, 0xfaee, 0x0, 0x0);
        gbc.writeMem(0x6653, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9f99, gbc.sp());
        EXPECT(0x6655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0045
        gbc.setState(0xd79b, 0x91dc, 0x40d0, 0x79a, 0x3eae, 0xead6, 0x0, 0x1);
        gbc.writeMem(0xd79b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x91dc, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd79b));
        EXPECT(0x3c, gbc.readMem(0xd79c));
        // CB 3C 0046
        gbc.setState(0x5661, 0x121d, 0x2e90, 0xcb5c, 0x7c5e, 0xd068, 0x1, 0x1);
        gbc.writeMem(0x5661, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x121d, gbc.sp());
        EXPECT(0x5663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0047
        gbc.setState(0x9031, 0xf46f, 0x16b0, 0x3b4, 0x2546, 0xa88e, 0x1, 0x0);
        gbc.writeMem(0x9031, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf46f, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9031));
        EXPECT(0x3c, gbc.readMem(0x9032));
        // CB 3C 0048
        gbc.setState(0x3286, 0x1933, 0x8700, 0xc4fa, 0x886e, 0xab56, 0x0, 0x0);
        gbc.writeMem(0x3286, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1933, gbc.sp());
        EXPECT(0x3288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0049
        gbc.setState(0x850b, 0x8c8a, 0xc8d0, 0x8334, 0x166a, 0xf606, 0x0, 0x1);
        gbc.writeMem(0x850b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8c8a, gbc.sp());
        EXPECT(0x850d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850b));
        EXPECT(0x3c, gbc.readMem(0x850c));
        // CB 3C 004A
        gbc.setState(0x520e, 0xeca9, 0xad00, 0xcbfa, 0x3e59, 0xe2b4, 0x1, 0x0);
        gbc.writeMem(0x520e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 004B
        gbc.setState(0xa923, 0xc3ba, 0x52f0, 0xb1c3, 0x322c, 0xa0c3, 0x0, 0x0);
        gbc.writeMem(0xa923, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0xa925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa923));
        EXPECT(0x3c, gbc.readMem(0xa924));
        // CB 3C 004C
        gbc.setState(0x6f71, 0x7696, 0xd780, 0x3b2b, 0xb7c3, 0x4682, 0x0, 0x0);
        gbc.writeMem(0x6f71, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 004D
        gbc.setState(0x4881, 0x715e, 0x2f40, 0x2c1b, 0xcaa9, 0xfb31, 0x0, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x715e, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 004E
        gbc.setState(0xd3ba, 0x28f5, 0x9e70, 0x21e4, 0x2ae8, 0x2cbe, 0x1, 0x1);
        gbc.writeMem(0xd3ba, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ba));
        EXPECT(0x3c, gbc.readMem(0xd3bb));
        // CB 3C 0050
        gbc.setState(0x7b88, 0x4794, 0x64e0, 0x8f2d, 0xf190, 0x7bbd, 0x0, 0x1);
        gbc.writeMem(0x7b88, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0051
        gbc.setState(0x6b3d, 0xe456, 0x9110, 0x95d1, 0x3379, 0x924, 0x1, 0x0);
        gbc.writeMem(0x6b3d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0052
        gbc.setState(0x45b1, 0xb79e, 0x9c0, 0x6aeb, 0x1182, 0xff7c, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb79e, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0053
        gbc.setState(0x5b63, 0xc0ab, 0xe020, 0x7e34, 0xe976, 0x3f72, 0x0, 0x0);
        gbc.writeMem(0x5b63, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc0ab, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0054
        gbc.setState(0x5914, 0xa0fc, 0x3460, 0x2697, 0xb823, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x5914, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0x5916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0055
        gbc.setState(0x48dd, 0xba13, 0x4e90, 0x5d26, 0x23ba, 0x5b04, 0x1, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0056
        gbc.setState(0x72bc, 0x665f, 0xa050, 0xe807, 0x83b5, 0xbea1, 0x1, 0x1);
        gbc.writeMem(0x72bc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x665f, gbc.sp());
        EXPECT(0x72be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0057
        gbc.setState(0xbae8, 0x9b82, 0x4480, 0x52ae, 0xff, 0xb5c5, 0x1, 0x0);
        gbc.writeMem(0xbae8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9b82, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae8));
        EXPECT(0x3c, gbc.readMem(0xbae9));
        // CB 3C 0059
        gbc.setState(0x1b38, 0xa782, 0xc710, 0x7b51, 0x4b0a, 0x4420, 0x0, 0x1);
        gbc.writeMem(0x1b38, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa782, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 005A
        gbc.setState(0xaad6, 0xd9b7, 0x5b0, 0x9f48, 0x7e9f, 0x5e01, 0x0, 0x0);
        gbc.writeMem(0xaad6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad6));
        EXPECT(0x3c, gbc.readMem(0xaad7));
        // CB 3C 005C
        gbc.setState(0x4097, 0xbfbe, 0xd890, 0xb943, 0x997f, 0x8350, 0x0, 0x1);
        gbc.writeMem(0x4097, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0x4099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 005D
        gbc.setState(0xa8e, 0xd7b5, 0x4100, 0x68f4, 0x5df5, 0xa446, 0x0, 0x1);
        gbc.writeMem(0xa8e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0xa90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 005E
        gbc.setState(0x5e85, 0x964b, 0xdcb0, 0x7c17, 0xd38d, 0xf878, 0x0, 0x1);
        gbc.writeMem(0x5e85, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x964b, gbc.sp());
        EXPECT(0x5e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 005F
        gbc.setState(0x1ada, 0x363a, 0xc9c0, 0x29c2, 0xdea, 0x7ef1, 0x1, 0x1);
        gbc.writeMem(0x1ada, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x363a, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0060
        gbc.setState(0x63c3, 0x2576, 0x5c10, 0x85bd, 0xbe09, 0xf1b9, 0x0, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2576, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0061
        gbc.setState(0x7197, 0xa783, 0x2320, 0x3b2f, 0xeb46, 0x60e5, 0x0, 0x1);
        gbc.writeMem(0x7197, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x7199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0062
        gbc.setState(0x39a4, 0xdbdc, 0x81e0, 0x45fc, 0x3685, 0x4254, 0x1, 0x1);
        gbc.writeMem(0x39a4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0x39a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0063
        gbc.setState(0xdd63, 0x9858, 0xca0, 0xba19, 0xa1c0, 0x6e70, 0x1, 0x0);
        gbc.writeMem(0xdd63, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0xdd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd63));
        EXPECT(0x3c, gbc.readMem(0xdd64));
        // CB 3C 0064
        gbc.setState(0xbd6f, 0x56ce, 0x4a60, 0xacf2, 0x5db7, 0x4846, 0x1, 0x1);
        gbc.writeMem(0xbd6f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x56ce, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6f));
        EXPECT(0x3c, gbc.readMem(0xbd70));
        // CB 3C 0065
        gbc.setState(0x9bf8, 0x2cd8, 0xc250, 0x1b5b, 0x8e7f, 0x9264, 0x0, 0x0);
        gbc.writeMem(0x9bf8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf8));
        EXPECT(0x3c, gbc.readMem(0x9bf9));
        // CB 3C 0066
        gbc.setState(0x9e30, 0xad19, 0xcbd0, 0xa183, 0x6711, 0x8665, 0x0, 0x0);
        gbc.writeMem(0x9e30, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x9e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e30));
        EXPECT(0x3c, gbc.readMem(0x9e31));
        // CB 3C 0067
        gbc.setState(0x29a9, 0xa9b8, 0x3e20, 0x6a06, 0xa7e4, 0x1d7, 0x0, 0x0);
        gbc.writeMem(0x29a9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0068
        gbc.setState(0x34f3, 0x548d, 0xe9a0, 0xb50, 0xd04f, 0xce81, 0x0, 0x1);
        gbc.writeMem(0x34f3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x548d, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0069
        gbc.setState(0xa42f, 0xb42f, 0x2db0, 0xf5fc, 0xd637, 0xd9bc, 0x0, 0x1);
        gbc.writeMem(0xa42f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb42f, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42f));
        EXPECT(0x3c, gbc.readMem(0xa430));
        // CB 3C 006A
        gbc.setState(0x859a, 0x292e, 0xedf0, 0x6973, 0x370a, 0xf0ef, 0x1, 0x0);
        gbc.writeMem(0x859a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0x859c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859a));
        EXPECT(0x3c, gbc.readMem(0x859b));
        // CB 3C 006B
        gbc.setState(0x7c41, 0x3c62, 0x6dd0, 0x8fb0, 0x4bd6, 0xb07e, 0x0, 0x0);
        gbc.writeMem(0x7c41, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3c62, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 006C
        gbc.setState(0xc71c, 0xd6ca, 0x9be0, 0x2bd6, 0xa3b, 0x44fa, 0x1, 0x0);
        gbc.writeMem(0xc71c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd6ca, gbc.sp());
        EXPECT(0xc71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71c));
        EXPECT(0x3c, gbc.readMem(0xc71d));
        // CB 3C 006D
        gbc.setState(0x41b1, 0x2ea6, 0xb910, 0x338d, 0x7c4d, 0x54f1, 0x0, 0x0);
        gbc.writeMem(0x41b1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 006E
        gbc.setState(0xde21, 0xb155, 0xefb0, 0xdd3c, 0xa1ca, 0x518a, 0x0, 0x1);
        gbc.writeMem(0xde21, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb155, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0x3c, gbc.readMem(0xde22));
        // CB 3C 0070
        gbc.setState(0x44ea, 0x7534, 0xd470, 0x4632, 0xaaf4, 0xb53d, 0x1, 0x0);
        gbc.writeMem(0x44ea, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7534, gbc.sp());
        EXPECT(0x44ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0071
        gbc.setState(0x2f01, 0x2c1b, 0x5ae0, 0xb0e7, 0xc5e0, 0x3feb, 0x1, 0x1);
        gbc.writeMem(0x2f01, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0x2f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0072
        gbc.setState(0x6edb, 0xa1ca, 0xff80, 0x19a8, 0x744d, 0x7a8c, 0x0, 0x1);
        gbc.writeMem(0x6edb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa1ca, gbc.sp());
        EXPECT(0x6edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0073
        gbc.setState(0xe15f, 0x3c55, 0x34b0, 0x6c0, 0xc68b, 0x6eef, 0x0, 0x1);
        gbc.writeMem(0xe15f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0xe161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15f));
        EXPECT(0x3c, gbc.readMem(0xe160));
        // CB 3C 0074
        gbc.setState(0x84de, 0xf227, 0xfb20, 0x60c7, 0xc85, 0x8aab, 0x1, 0x1);
        gbc.writeMem(0x84de, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf227, gbc.sp());
        EXPECT(0x84e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84de));
        EXPECT(0x3c, gbc.readMem(0x84df));
        // CB 3C 0075
        gbc.setState(0x766b, 0xe326, 0xfc60, 0xd393, 0xf56e, 0xa885, 0x0, 0x0);
        gbc.writeMem(0x766b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe326, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0076
        gbc.setState(0xdb1f, 0xc833, 0x50d0, 0x3dba, 0xfb15, 0x5cbf, 0x1, 0x0);
        gbc.writeMem(0xdb1f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1f));
        EXPECT(0x3c, gbc.readMem(0xdb20));
        // CB 3C 0077
        gbc.setState(0x1d63, 0xf42f, 0xbae0, 0x111f, 0xb92f, 0x3e41, 0x1, 0x0);
        gbc.writeMem(0x1d63, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0x1d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0078
        gbc.setState(0xeef8, 0xf9b8, 0xdaa0, 0x25a9, 0x5ba1, 0x6060, 0x1, 0x0);
        gbc.writeMem(0xeef8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0xeefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef8));
        EXPECT(0x3c, gbc.readMem(0xeef9));
        // CB 3C 0079
        gbc.setState(0xaf7a, 0xda57, 0x4ca0, 0x4894, 0xdbbd, 0x34db, 0x0, 0x1);
        gbc.writeMem(0xaf7a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xda57, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7a));
        EXPECT(0x3c, gbc.readMem(0xaf7b));
        // CB 3C 007A
        gbc.setState(0xd888, 0x34c8, 0x24c0, 0x34ca, 0x8d86, 0xf853, 0x0, 0x1);
        gbc.writeMem(0xd888, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x34c8, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd888));
        EXPECT(0x3c, gbc.readMem(0xd889));
        // CB 3C 007B
        gbc.setState(0x5fb7, 0x7609, 0x7cb0, 0xd4bf, 0xb29e, 0x9cd0, 0x1, 0x0);
        gbc.writeMem(0x5fb7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0x5fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 007C
        gbc.setState(0xc604, 0xd231, 0x84e0, 0x6693, 0xd5fd, 0xc67, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd231, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc604));
        EXPECT(0x3c, gbc.readMem(0xc605));
        // CB 3C 007D
        gbc.setState(0x13f1, 0x294d, 0xf260, 0x3d1c, 0x43f0, 0x9086, 0x0, 0x1);
        gbc.writeMem(0x13f1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x294d, gbc.sp());
        EXPECT(0x13f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 007F
        gbc.setState(0x7719, 0xbefb, 0xc660, 0x802, 0x8d3d, 0x3638, 0x1, 0x1);
        gbc.writeMem(0x7719, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0x771b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0080
        gbc.setState(0x8b8d, 0xe930, 0xfc30, 0x90cb, 0xf233, 0xe8d1, 0x1, 0x1);
        gbc.writeMem(0x8b8d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe930, gbc.sp());
        EXPECT(0x8b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8d));
        EXPECT(0x3c, gbc.readMem(0x8b8e));
        // CB 3C 0081
        gbc.setState(0x659e, 0xb0aa, 0xc930, 0x747a, 0x4d, 0x1373, 0x0, 0x1);
        gbc.writeMem(0x659e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb0aa, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0082
        gbc.setState(0xda5c, 0xda4a, 0x1600, 0x349e, 0x3c33, 0xd40c, 0x0, 0x1);
        gbc.writeMem(0xda5c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0xda5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5c));
        EXPECT(0x3c, gbc.readMem(0xda5d));
        // CB 3C 0083
        gbc.setState(0x8cf4, 0x9d0f, 0x9fb0, 0xc53c, 0x7754, 0x7ee2, 0x0, 0x0);
        gbc.writeMem(0x8cf4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9d0f, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0x3c, gbc.readMem(0x8cf5));
        // CB 3C 0084
        gbc.setState(0xc384, 0xacb1, 0x5fd0, 0x30ac, 0x66c1, 0x9924, 0x0, 0x1);
        gbc.writeMem(0xc384, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xacb1, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0x3c, gbc.readMem(0xc385));
        // CB 3C 0086
        gbc.setState(0xc9c7, 0x8a0e, 0x8c80, 0x9777, 0xd19f, 0x431c, 0x0, 0x0);
        gbc.writeMem(0xc9c7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0xc9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c7));
        EXPECT(0x3c, gbc.readMem(0xc9c8));
        // CB 3C 0087
        gbc.setState(0x2f4, 0xfbf6, 0x1360, 0x1d81, 0x8aa4, 0x564, 0x0, 0x1);
        gbc.writeMem(0x2f4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfbf6, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0088
        gbc.setState(0xb3d9, 0xe47e, 0xaf0, 0xd55e, 0x92a5, 0x43f9, 0x0, 0x0);
        gbc.writeMem(0xb3d9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe47e, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d9));
        EXPECT(0x3c, gbc.readMem(0xb3da));
        // CB 3C 0089
        gbc.setState(0x667a, 0xd1cf, 0x71a0, 0xdf81, 0xefee, 0x8fa3, 0x0, 0x0);
        gbc.writeMem(0x667a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd1cf, gbc.sp());
        EXPECT(0x667c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 008A
        gbc.setState(0xb392, 0x20a2, 0xcc10, 0x2052, 0xd6c3, 0xf988, 0x0, 0x0);
        gbc.writeMem(0xb392, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0xb394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb392));
        EXPECT(0x3c, gbc.readMem(0xb393));
        // CB 3C 008B
        gbc.setState(0x6871, 0xfa17, 0x4570, 0xee5f, 0x741e, 0xbdac, 0x0, 0x0);
        gbc.writeMem(0x6871, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfa17, gbc.sp());
        EXPECT(0x6873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 008C
        gbc.setState(0xe4f6, 0x1cbe, 0x68f0, 0x4d29, 0xbfa7, 0x6ce7, 0x0, 0x0);
        gbc.writeMem(0xe4f6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1cbe, gbc.sp());
        EXPECT(0xe4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f6));
        EXPECT(0x3c, gbc.readMem(0xe4f7));
        // CB 3C 008D
        gbc.setState(0xbac5, 0x5249, 0xf660, 0xda8c, 0xdcf7, 0x923c, 0x1, 0x1);
        gbc.writeMem(0xbac5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac5));
        EXPECT(0x3c, gbc.readMem(0xbac6));
        // CB 3C 008E
        gbc.setState(0x441a, 0x6304, 0x3950, 0xc37d, 0x757c, 0xfb27, 0x1, 0x0);
        gbc.writeMem(0x441a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6304, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 008F
        gbc.setState(0x6b67, 0x12f1, 0xe440, 0xf295, 0x3db6, 0xe689, 0x0, 0x0);
        gbc.writeMem(0x6b67, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x6b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0090
        gbc.setState(0xabc, 0x8cd5, 0x4f40, 0xad9c, 0xe7f, 0x69d7, 0x1, 0x0);
        gbc.writeMem(0xabc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8cd5, gbc.sp());
        EXPECT(0xabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0091
        gbc.setState(0x7ad0, 0xf74d, 0xd550, 0x763e, 0x5dfa, 0xb072, 0x0, 0x1);
        gbc.writeMem(0x7ad0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf74d, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0092
        gbc.setState(0x9c37, 0xfd25, 0xdba0, 0xb62a, 0xf6b6, 0xcf11, 0x0, 0x0);
        gbc.writeMem(0x9c37, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfd25, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c37));
        EXPECT(0x3c, gbc.readMem(0x9c38));
        // CB 3C 0093
        gbc.setState(0x8b4, 0xf9df, 0x8b20, 0xa255, 0xa1d, 0x871a, 0x1, 0x0);
        gbc.writeMem(0x8b4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf9df, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0094
        gbc.setState(0xb99c, 0xe7c9, 0x3c80, 0xe4eb, 0xbad8, 0xb1dd, 0x0, 0x0);
        gbc.writeMem(0xb99c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7c9, gbc.sp());
        EXPECT(0xb99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99c));
        EXPECT(0x3c, gbc.readMem(0xb99d));
        // CB 3C 0095
        gbc.setState(0x2b1e, 0x3ff, 0xe650, 0xd15c, 0x3e3a, 0x1c36, 0x0, 0x1);
        gbc.writeMem(0x2b1e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3ff, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0096
        gbc.setState(0x1df0, 0x3ab6, 0x1fc0, 0xbbc3, 0x65e4, 0xf69e, 0x1, 0x0);
        gbc.writeMem(0x1df0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3ab6, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0097
        gbc.setState(0xd8e7, 0x8ce6, 0x5e90, 0x51d7, 0xcf0b, 0xa38a, 0x0, 0x0);
        gbc.writeMem(0xd8e7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ce6, gbc.sp());
        EXPECT(0xd8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e7));
        EXPECT(0x3c, gbc.readMem(0xd8e8));
        // CB 3C 0098
        gbc.setState(0x8978, 0xa38d, 0x4aa0, 0x36ae, 0xa6, 0xf8f7, 0x1, 0x1);
        gbc.writeMem(0x8978, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0x897a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8978));
        EXPECT(0x3c, gbc.readMem(0x8979));
        // CB 3C 0099
        gbc.setState(0x92d7, 0x6efe, 0x5ca0, 0x5c75, 0xc7d7, 0xb0f1, 0x0, 0x0);
        gbc.writeMem(0x92d7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6efe, gbc.sp());
        EXPECT(0x92d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d7));
        EXPECT(0x3c, gbc.readMem(0x92d8));
        // CB 3C 009A
        gbc.setState(0x4390, 0xe258, 0xe140, 0xd569, 0x70d2, 0xe462, 0x0, 0x0);
        gbc.writeMem(0x4390, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe258, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 009B
        gbc.setState(0xa405, 0xd7ca, 0xdb40, 0x17b, 0x1eee, 0x8be2, 0x1, 0x1);
        gbc.writeMem(0xa405, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd7ca, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa405));
        EXPECT(0x3c, gbc.readMem(0xa406));
        // CB 3C 009C
        gbc.setState(0x3d4, 0x6097, 0xb5b0, 0x94e3, 0x17e5, 0xdcac, 0x0, 0x1);
        gbc.writeMem(0x3d4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6097, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 009D
        gbc.setState(0xc0b2, 0xc564, 0xc90, 0xd1d1, 0x814e, 0xf43a, 0x1, 0x1);
        gbc.writeMem(0xc0b2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc564, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b2));
        EXPECT(0x3c, gbc.readMem(0xc0b3));
        // CB 3C 009E
        gbc.setState(0xab5e, 0xbe07, 0x4030, 0xc962, 0x7c44, 0x15e, 0x0, 0x0);
        gbc.writeMem(0xab5e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbe07, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5e));
        EXPECT(0x3c, gbc.readMem(0xab5f));
        // CB 3C 009F
        gbc.setState(0xaf60, 0xfd95, 0xd600, 0xa9ec, 0x731, 0xd5ff, 0x0, 0x0);
        gbc.writeMem(0xaf60, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd95, gbc.sp());
        EXPECT(0xaf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf60));
        EXPECT(0x3c, gbc.readMem(0xaf61));
        // CB 3C 00A0
        gbc.setState(0x44ff, 0xe9aa, 0x4ce0, 0x425f, 0xb24d, 0x6a14, 0x0, 0x1);
        gbc.writeMem(0x44ff, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe9aa, gbc.sp());
        EXPECT(0x4501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00A1
        gbc.setState(0x2e81, 0x95b6, 0xb6a0, 0xec94, 0xa412, 0x63a5, 0x1, 0x0);
        gbc.writeMem(0x2e81, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x95b6, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00A2
        gbc.setState(0x19b6, 0x3a9f, 0x4020, 0x1e51, 0x745d, 0x9b74, 0x0, 0x0);
        gbc.writeMem(0x19b6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3a9f, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00A3
        gbc.setState(0xbea2, 0xcbc1, 0x9140, 0xdcf9, 0x4d49, 0x44e, 0x1, 0x0);
        gbc.writeMem(0xbea2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcbc1, gbc.sp());
        EXPECT(0xbea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea2));
        EXPECT(0x3c, gbc.readMem(0xbea3));
        // CB 3C 00A4
        gbc.setState(0x4ae5, 0xa84c, 0x9800, 0xdfac, 0x20ed, 0xf2a9, 0x0, 0x1);
        gbc.writeMem(0x4ae5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0x4ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00A5
        gbc.setState(0x9e5a, 0xeceb, 0x470, 0x2409, 0xd698, 0x223c, 0x1, 0x0);
        gbc.writeMem(0x9e5a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeceb, gbc.sp());
        EXPECT(0x9e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5a));
        EXPECT(0x3c, gbc.readMem(0x9e5b));
        // CB 3C 00A7
        gbc.setState(0x348b, 0x2824, 0x6c50, 0xfe39, 0xe7a2, 0x6425, 0x1, 0x1);
        gbc.writeMem(0x348b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2824, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00A8
        gbc.setState(0xb5b3, 0xa85b, 0xb830, 0x95c2, 0x4463, 0x988a, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b3));
        EXPECT(0x3c, gbc.readMem(0xb5b4));
        // CB 3C 00A9
        gbc.setState(0x29f3, 0xa16f, 0xad30, 0x71cd, 0xce7e, 0x9d75, 0x1, 0x0);
        gbc.writeMem(0x29f3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa16f, gbc.sp());
        EXPECT(0x29f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00AA
        gbc.setState(0x3fd2, 0xe7cb, 0x4530, 0x4a0f, 0xc4f7, 0xf6fd, 0x0, 0x0);
        gbc.writeMem(0x3fd2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe7cb, gbc.sp());
        EXPECT(0x3fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00AB
        gbc.setState(0x74d6, 0xaee6, 0x4670, 0x1c17, 0x2560, 0xf4c0, 0x0, 0x0);
        gbc.writeMem(0x74d6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaee6, gbc.sp());
        EXPECT(0x74d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00AC
        gbc.setState(0x5f56, 0x6be4, 0xb840, 0x3552, 0xb94a, 0xf128, 0x0, 0x1);
        gbc.writeMem(0x5f56, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6be4, gbc.sp());
        EXPECT(0x5f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00AD
        gbc.setState(0xb47f, 0xef64, 0x21c0, 0xd5f0, 0x834d, 0x6877, 0x0, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0x3c, gbc.readMem(0xb480));
        // CB 3C 00AE
        gbc.setState(0x7b6, 0x9a61, 0x3800, 0x20d1, 0x26, 0x471b, 0x1, 0x0);
        gbc.writeMem(0x7b6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9a61, gbc.sp());
        EXPECT(0x7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00AF
        gbc.setState(0x8fe7, 0x1a76, 0x9b10, 0xcc0c, 0xfecf, 0x5687, 0x0, 0x0);
        gbc.writeMem(0x8fe7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe7));
        EXPECT(0x3c, gbc.readMem(0x8fe8));
        // CB 3C 00B0
        gbc.setState(0xce0f, 0xbf96, 0x9ff0, 0x5852, 0x4229, 0x615c, 0x1, 0x0);
        gbc.writeMem(0xce0f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0xce11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0f));
        EXPECT(0x3c, gbc.readMem(0xce10));
        // CB 3C 00B1
        gbc.setState(0xce7f, 0x81fb, 0x9a90, 0xa29, 0x4ab4, 0xdf8a, 0x0, 0x1);
        gbc.writeMem(0xce7f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0xce81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7f));
        EXPECT(0x3c, gbc.readMem(0xce80));
        // CB 3C 00B2
        gbc.setState(0x426, 0x706a, 0xe940, 0x268d, 0x88ab, 0xb0e0, 0x0, 0x0);
        gbc.writeMem(0x426, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x706a, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00B3
        gbc.setState(0x7e15, 0x63b3, 0x8620, 0xe89f, 0x42f5, 0x450f, 0x0, 0x0);
        gbc.writeMem(0x7e15, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x63b3, gbc.sp());
        EXPECT(0x7e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00B4
        gbc.setState(0xd79b, 0x3d41, 0xd630, 0xfd47, 0xbd12, 0x6d5c, 0x0, 0x0);
        gbc.writeMem(0xd79b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd79b));
        EXPECT(0x3c, gbc.readMem(0xd79c));
        // CB 3C 00B5
        gbc.setState(0xba6, 0x86ed, 0x1590, 0x48e9, 0xe276, 0x23e5, 0x1, 0x1);
        gbc.writeMem(0xba6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x86ed, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00B6
        gbc.setState(0x68c4, 0x2764, 0xd5e0, 0xa569, 0x820b, 0x151, 0x1, 0x0);
        gbc.writeMem(0x68c4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00B7
        gbc.setState(0xc53, 0xdd22, 0x5230, 0x75c7, 0x9147, 0xcf6, 0x1, 0x0);
        gbc.writeMem(0xc53, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd22, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00B8
        gbc.setState(0xe712, 0xc85f, 0xfa60, 0xd2c3, 0x62b6, 0x2b3c, 0x1, 0x1);
        gbc.writeMem(0xe712, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc85f, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe712));
        EXPECT(0x3c, gbc.readMem(0xe713));
        // CB 3C 00B9
        gbc.setState(0x7a13, 0x2b2e, 0x20a0, 0xa548, 0x2ddc, 0x6168, 0x0, 0x1);
        gbc.writeMem(0x7a13, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2b2e, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00BA
        gbc.setState(0xb463, 0x659a, 0x8be0, 0xe2ad, 0x4c79, 0x3b6d, 0x1, 0x0);
        gbc.writeMem(0xb463, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x659a, gbc.sp());
        EXPECT(0xb465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb463));
        EXPECT(0x3c, gbc.readMem(0xb464));
        // CB 3C 00BC
        gbc.setState(0x58b1, 0xeb24, 0x15e0, 0xf69b, 0xd0ed, 0x5497, 0x0, 0x0);
        gbc.writeMem(0x58b1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeb24, gbc.sp());
        EXPECT(0x58b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00BD
        gbc.setState(0x4bec, 0x4848, 0xde60, 0x69f6, 0x9318, 0x375b, 0x0, 0x0);
        gbc.writeMem(0x4bec, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4848, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00BE
        gbc.setState(0x1b92, 0xb2ff, 0x2e50, 0xfdd5, 0x8c90, 0x4887, 0x1, 0x0);
        gbc.writeMem(0x1b92, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb2ff, gbc.sp());
        EXPECT(0x1b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00BF
        gbc.setState(0x5c74, 0x8a22, 0x39a0, 0x82ca, 0x243b, 0x440f, 0x0, 0x0);
        gbc.writeMem(0x5c74, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8a22, gbc.sp());
        EXPECT(0x5c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00C0
        gbc.setState(0x8dd8, 0x8e10, 0x25f0, 0xf6c0, 0x81c2, 0x44b7, 0x1, 0x1);
        gbc.writeMem(0x8dd8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd8));
        EXPECT(0x3c, gbc.readMem(0x8dd9));
        // CB 3C 00C1
        gbc.setState(0x52c4, 0x751e, 0x1050, 0x7da6, 0xa17e, 0x9190, 0x1, 0x0);
        gbc.writeMem(0x52c4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00C2
        gbc.setState(0x7544, 0xd526, 0xb8e0, 0xffd9, 0xa8b5, 0x7f5f, 0x1, 0x0);
        gbc.writeMem(0x7544, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd526, gbc.sp());
        EXPECT(0x7546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00C3
        gbc.setState(0xd45c, 0x5a55, 0x2070, 0xc5c0, 0x7648, 0x16d1, 0x0, 0x1);
        gbc.writeMem(0xd45c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5a55, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45c));
        EXPECT(0x3c, gbc.readMem(0xd45d));
        // CB 3C 00C4
        gbc.setState(0xa060, 0xafe, 0xcf0, 0x814b, 0x9eb6, 0x45f8, 0x1, 0x1);
        gbc.writeMem(0xa060, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xafe, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa060));
        EXPECT(0x3c, gbc.readMem(0xa061));
        // CB 3C 00C5
        gbc.setState(0x707a, 0xfadb, 0x9f50, 0x4b6, 0x316d, 0x17c6, 0x1, 0x1);
        gbc.writeMem(0x707a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfadb, gbc.sp());
        EXPECT(0x707c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00C6
        gbc.setState(0x1599, 0x3d93, 0x9cc0, 0x4223, 0x7805, 0x2798, 0x1, 0x1);
        gbc.writeMem(0x1599, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0x159b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00C7
        gbc.setState(0x4c2d, 0x495d, 0x51f0, 0xc063, 0x63f8, 0xfa78, 0x1, 0x1);
        gbc.writeMem(0x4c2d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0x4c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00C8
        gbc.setState(0x3899, 0x25a0, 0xca80, 0xecb1, 0xaa6d, 0xb90e, 0x0, 0x0);
        gbc.writeMem(0x3899, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x25a0, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00C9
        gbc.setState(0xa00d, 0x50c9, 0x3680, 0x8750, 0x1d11, 0xbdb0, 0x1, 0x0);
        gbc.writeMem(0xa00d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x50c9, gbc.sp());
        EXPECT(0xa00f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00d));
        EXPECT(0x3c, gbc.readMem(0xa00e));
        // CB 3C 00CA
        gbc.setState(0x1d5c, 0xecef, 0xec20, 0x75a9, 0x8628, 0xd749, 0x0, 0x1);
        gbc.writeMem(0x1d5c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x1d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00CB
        gbc.setState(0x65a4, 0xd2bf, 0x2930, 0x24d2, 0xf3e9, 0xa350, 0x0, 0x0);
        gbc.writeMem(0x65a4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd2bf, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00CC
        gbc.setState(0x3b64, 0x1ae2, 0x6820, 0x3cf6, 0x28da, 0xd4ad, 0x1, 0x0);
        gbc.writeMem(0x3b64, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1ae2, gbc.sp());
        EXPECT(0x3b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00CD
        gbc.setState(0xc4d2, 0x2c1a, 0x8460, 0x274e, 0x4b62, 0xf38f, 0x1, 0x0);
        gbc.writeMem(0xc4d2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2c1a, gbc.sp());
        EXPECT(0xc4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d2));
        EXPECT(0x3c, gbc.readMem(0xc4d3));
        // CB 3C 00CF
        gbc.setState(0xa5db, 0x7645, 0xbdd0, 0xcc31, 0xc0ec, 0x4e13, 0x1, 0x1);
        gbc.writeMem(0xa5db, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0xa5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5db));
        EXPECT(0x3c, gbc.readMem(0xa5dc));
        // CB 3C 00D0
        gbc.setState(0x6850, 0x5725, 0x900, 0x801f, 0x1028, 0x4d7c, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5725, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00D2
        gbc.setState(0x8477, 0xa190, 0x9b60, 0x5f42, 0x8206, 0xdd5a, 0x1, 0x0);
        gbc.writeMem(0x8477, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8477));
        EXPECT(0x3c, gbc.readMem(0x8478));
        // CB 3C 00D3
        gbc.setState(0x5a34, 0x8c43, 0x7c50, 0x490, 0xc718, 0xb3d, 0x0, 0x0);
        gbc.writeMem(0x5a34, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8c43, gbc.sp());
        EXPECT(0x5a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00D4
        gbc.setState(0xabf1, 0x7ffb, 0xbc80, 0x4d19, 0x431, 0xaf69, 0x1, 0x1);
        gbc.writeMem(0xabf1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7ffb, gbc.sp());
        EXPECT(0xabf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf1));
        EXPECT(0x3c, gbc.readMem(0xabf2));
        // CB 3C 00D5
        gbc.setState(0x90fe, 0xc218, 0x5cc0, 0x4bd6, 0xaff3, 0x3624, 0x1, 0x1);
        gbc.writeMem(0x90fe, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fe));
        EXPECT(0x3c, gbc.readMem(0x90ff));
        // CB 3C 00D6
        gbc.setState(0x5a52, 0x886b, 0xfd50, 0x251b, 0x35fd, 0xc478, 0x1, 0x1);
        gbc.writeMem(0x5a52, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00D7
        gbc.setState(0x8b6f, 0x508c, 0x7d00, 0xf58c, 0xee84, 0x124e, 0x1, 0x0);
        gbc.writeMem(0x8b6f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x508c, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6f));
        EXPECT(0x3c, gbc.readMem(0x8b70));
        // CB 3C 00D8
        gbc.setState(0x29c, 0x65fb, 0x2180, 0xb16b, 0x28b1, 0xd9bd, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00D9
        gbc.setState(0x6a57, 0xcc7f, 0x4cb0, 0x7328, 0xf6f9, 0xe139, 0x1, 0x1);
        gbc.writeMem(0x6a57, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00DA
        gbc.setState(0x9d2b, 0xb307, 0x53a0, 0x7398, 0xdcc8, 0x743e, 0x0, 0x1);
        gbc.writeMem(0x9d2b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb307, gbc.sp());
        EXPECT(0x9d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2b));
        EXPECT(0x3c, gbc.readMem(0x9d2c));
        // CB 3C 00DB
        gbc.setState(0x323e, 0x4fd9, 0xa9f0, 0x4afc, 0xc06c, 0xbba8, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4fd9, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00DC
        gbc.setState(0x91b8, 0x5c9, 0xf260, 0xe6b1, 0xa70a, 0x1f59, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5c9, gbc.sp());
        EXPECT(0x91ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b8));
        EXPECT(0x3c, gbc.readMem(0x91b9));
        // CB 3C 00DD
        gbc.setState(0xc0d5, 0xa039, 0x4590, 0x6c56, 0xf57a, 0xaf56, 0x1, 0x1);
        gbc.writeMem(0xc0d5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d5));
        EXPECT(0x3c, gbc.readMem(0xc0d6));
        // CB 3C 00DE
        gbc.setState(0x4e0e, 0xb819, 0xdad0, 0x6d09, 0xa3a3, 0xebc9, 0x0, 0x0);
        gbc.writeMem(0x4e0e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb819, gbc.sp());
        EXPECT(0x4e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00DF
        gbc.setState(0x403d, 0x3991, 0x18c0, 0x3981, 0xeab, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0x403d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3991, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E0
        gbc.setState(0x19f9, 0x309b, 0xc0, 0x97a, 0xbcf7, 0x4db6, 0x0, 0x0);
        gbc.writeMem(0x19f9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x309b, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E1
        gbc.setState(0x527, 0x5479, 0xfa50, 0xd7d8, 0x1620, 0xc1f4, 0x0, 0x0);
        gbc.writeMem(0x527, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5479, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E2
        gbc.setState(0x30ae, 0x7662, 0x97c0, 0xe26, 0xc7d, 0xb154, 0x0, 0x0);
        gbc.writeMem(0x30ae, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E4
        gbc.setState(0x1f83, 0x3fca, 0x25c0, 0xbdc0, 0xdc74, 0x5875, 0x1, 0x1);
        gbc.writeMem(0x1f83, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3fca, gbc.sp());
        EXPECT(0x1f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00E5
        gbc.setState(0x537a, 0xa89f, 0x27b0, 0x4076, 0x19bd, 0xdf6e, 0x1, 0x0);
        gbc.writeMem(0x537a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa89f, gbc.sp());
        EXPECT(0x537c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E6
        gbc.setState(0x5f7d, 0xef3e, 0x2870, 0x3a85, 0x3520, 0x2e0a, 0x1, 0x0);
        gbc.writeMem(0x5f7d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xef3e, gbc.sp());
        EXPECT(0x5f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00E8
        gbc.setState(0x52cf, 0x9195, 0x5f90, 0xa48b, 0x6fa7, 0xb557, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9195, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00E9
        gbc.setState(0x44d7, 0xe606, 0x6cb0, 0xecba, 0xa26e, 0xe6d9, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe606, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00EA
        gbc.setState(0xd03c, 0xf0a7, 0xb010, 0x5098, 0x73a1, 0xcc4f, 0x1, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0x3c, gbc.readMem(0xd03d));
        // CB 3C 00EB
        gbc.setState(0x510e, 0x9265, 0x6c90, 0xd941, 0x84c1, 0xbd7d, 0x1, 0x1);
        gbc.writeMem(0x510e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9265, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00EC
        gbc.setState(0xc1dd, 0x758d, 0x2d80, 0x55e2, 0xcbaa, 0x3be0, 0x1, 0x1);
        gbc.writeMem(0xc1dd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0xc1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1dd));
        EXPECT(0x3c, gbc.readMem(0xc1de));
        // CB 3C 00ED
        gbc.setState(0x65, 0xba2f, 0x8740, 0x4c06, 0x24ec, 0xfb0, 0x1, 0x1);
        gbc.writeMem(0x65, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xba2f, gbc.sp());
        EXPECT(0x67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00EE
        gbc.setState(0x5f79, 0xc8bd, 0x61e0, 0x8f42, 0x3709, 0x5eb0, 0x1, 0x0);
        gbc.writeMem(0x5f79, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc8bd, gbc.sp());
        EXPECT(0x5f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00EF
        gbc.setState(0x403f, 0xb107, 0xa020, 0x4545, 0xd9ca, 0xeac8, 0x1, 0x1);
        gbc.writeMem(0x403f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb107, gbc.sp());
        EXPECT(0x4041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00F0
        gbc.setState(0x5c5b, 0xb3b4, 0xcee0, 0xb957, 0xbeac, 0x5f96, 0x0, 0x1);
        gbc.writeMem(0x5c5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb3b4, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00F1
        gbc.setState(0x2503, 0x3d60, 0x8f50, 0x43fb, 0x15b9, 0xfbdf, 0x0, 0x1);
        gbc.writeMem(0x2503, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3d60, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00F2
        gbc.setState(0x34f3, 0xc030, 0x3310, 0xda55, 0x3702, 0x4d7d, 0x1, 0x1);
        gbc.writeMem(0x34f3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00F3
        gbc.setState(0x1854, 0xd696, 0x2830, 0x431a, 0x9e7, 0xa191, 0x0, 0x1);
        gbc.writeMem(0x1854, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd696, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00F4
        gbc.setState(0x8c14, 0xd69c, 0xf800, 0x2128, 0x357, 0xf5e, 0x0, 0x0);
        gbc.writeMem(0x8c14, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd69c, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c14));
        EXPECT(0x3c, gbc.readMem(0x8c15));
        // CB 3C 00F5
        gbc.setState(0x5640, 0xce04, 0x1cf0, 0xeabb, 0xfe7, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0x5640, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0x5642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00F6
        gbc.setState(0x6f17, 0x51e7, 0x9270, 0x4660, 0xa14b, 0xa34d, 0x0, 0x0);
        gbc.writeMem(0x6f17, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x51e7, gbc.sp());
        EXPECT(0x6f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00F7
        gbc.setState(0x42bd, 0x299e, 0x7b0, 0x3a1b, 0x3c79, 0xce99, 0x1, 0x1);
        gbc.writeMem(0x42bd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00F8
        gbc.setState(0x7d8d, 0xc756, 0x19f0, 0xf4d8, 0xc933, 0x261c, 0x0, 0x1);
        gbc.writeMem(0x7d8d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc756, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00F9
        gbc.setState(0x3eb5, 0x8f3c, 0xe600, 0xb906, 0x5f97, 0x4a20, 0x1, 0x0);
        gbc.writeMem(0x3eb5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8f3c, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00FA
        gbc.setState(0x3600, 0xb16d, 0xcfe0, 0x98fc, 0x2dd9, 0xaa87, 0x1, 0x0);
        gbc.writeMem(0x3600, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0x3602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00FB
        gbc.setState(0x409c, 0x9982, 0x93d0, 0xf7ed, 0x445e, 0xac57, 0x1, 0x0);
        gbc.writeMem(0x409c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9982, gbc.sp());
        EXPECT(0x409e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00FC
        gbc.setState(0xd46, 0xe3f6, 0x86d0, 0x5865, 0xe7e5, 0x5ddf, 0x1, 0x0);
        gbc.writeMem(0xd46, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe3f6, gbc.sp());
        EXPECT(0xd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 00FD
        gbc.setState(0x4f4a, 0xce9e, 0xa3b0, 0xcc3e, 0xd6d, 0x7a91, 0x0, 0x0);
        gbc.writeMem(0x4f4a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0x4f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 00FE
        gbc.setState(0xb141, 0xdc21, 0x2b10, 0x6fed, 0xd061, 0xdd66, 0x1, 0x0);
        gbc.writeMem(0xb141, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdc21, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb141));
        EXPECT(0x3c, gbc.readMem(0xb142));
        // CB 3C 00FF
        gbc.setState(0x1ec0, 0x45e0, 0x7570, 0x44e5, 0xbed4, 0xc669, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0x1ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0100
        gbc.setState(0xbcc6, 0x676f, 0x4980, 0x6012, 0xcca3, 0x4bca, 0x1, 0x1);
        gbc.writeMem(0xbcc6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x676f, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc6));
        EXPECT(0x3c, gbc.readMem(0xbcc7));
        // CB 3C 0101
        gbc.setState(0xd156, 0x149d, 0x820, 0x5299, 0x8daf, 0x4ab4, 0x1, 0x0);
        gbc.writeMem(0xd156, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x149d, gbc.sp());
        EXPECT(0xd158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd156));
        EXPECT(0x3c, gbc.readMem(0xd157));
        // CB 3C 0102
        gbc.setState(0xcf6a, 0x7a65, 0xe250, 0xc4ec, 0x44ac, 0x13a1, 0x0, 0x1);
        gbc.writeMem(0xcf6a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7a65, gbc.sp());
        EXPECT(0xcf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6a));
        EXPECT(0x3c, gbc.readMem(0xcf6b));
        // CB 3C 0103
        gbc.setState(0xe607, 0x116d, 0x3630, 0xe8f7, 0x52f9, 0xe392, 0x0, 0x1);
        gbc.writeMem(0xe607, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x116d, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe607));
        EXPECT(0x3c, gbc.readMem(0xe608));
        // CB 3C 0104
        gbc.setState(0x77ec, 0x5040, 0xa360, 0xf1f6, 0xbf78, 0xa96f, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x77ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0105
        gbc.setState(0x840a, 0xc3d, 0x1800, 0x1a0c, 0xec, 0xb397, 0x1, 0x1);
        gbc.writeMem(0x840a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3d, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840a));
        EXPECT(0x3c, gbc.readMem(0x840b));
        // CB 3C 0106
        gbc.setState(0xb8a7, 0x7058, 0xe690, 0x9da7, 0x5660, 0x37ad, 0x0, 0x1);
        gbc.writeMem(0xb8a7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7058, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0x3c, gbc.readMem(0xb8a8));
        // CB 3C 0107
        gbc.setState(0x7195, 0x18ac, 0x50f0, 0x514e, 0x40b4, 0xe21, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x18ac, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0108
        gbc.setState(0xb238, 0xa190, 0xba30, 0xd397, 0x6007, 0x9df7, 0x1, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0x3c, gbc.readMem(0xb239));
        // CB 3C 0109
        gbc.setState(0x9519, 0x5e8, 0xdff0, 0x9b91, 0x4324, 0xaabc, 0x1, 0x1);
        gbc.writeMem(0x9519, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9519));
        EXPECT(0x3c, gbc.readMem(0x951a));
        // CB 3C 010C
        gbc.setState(0x5b21, 0x27ee, 0x3350, 0x6c37, 0x1949, 0x8c4e, 0x0, 0x1);
        gbc.writeMem(0x5b21, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x27ee, gbc.sp());
        EXPECT(0x5b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 010D
        gbc.setState(0xc242, 0x4458, 0x8a80, 0x220f, 0x6ac6, 0x72fe, 0x1, 0x0);
        gbc.writeMem(0xc242, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc242));
        EXPECT(0x3c, gbc.readMem(0xc243));
        // CB 3C 010E
        gbc.setState(0x3422, 0x756e, 0xae40, 0x232c, 0x2e13, 0x7561, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0x3424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 010F
        gbc.setState(0x1c9b, 0x12d5, 0x4b0, 0xbd76, 0x4307, 0x42e8, 0x0, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x12d5, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0110
        gbc.setState(0x6ff8, 0xeb33, 0x3560, 0x8e42, 0x1a19, 0xce68, 0x1, 0x1);
        gbc.writeMem(0x6ff8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeb33, gbc.sp());
        EXPECT(0x6ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0111
        gbc.setState(0x23cb, 0xfd67, 0xf050, 0xa206, 0xcda2, 0xcccd, 0x1, 0x1);
        gbc.writeMem(0x23cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfd67, gbc.sp());
        EXPECT(0x23cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0112
        gbc.setState(0xe248, 0xb84c, 0xd440, 0x7607, 0x5cb7, 0x3c83, 0x0, 0x0);
        gbc.writeMem(0xe248, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb84c, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0x3c, gbc.readMem(0xe249));
        // CB 3C 0113
        gbc.setState(0x6b59, 0x9f5a, 0xbc0, 0x9b8e, 0x2ba9, 0x840f, 0x1, 0x1);
        gbc.writeMem(0x6b59, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x6b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0114
        gbc.setState(0x75f1, 0xa499, 0x5a50, 0xca58, 0x9a16, 0xc9bb, 0x0, 0x1);
        gbc.writeMem(0x75f1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0115
        gbc.setState(0xd92e, 0xaee6, 0x3440, 0xe21, 0xbebc, 0xf7eb, 0x0, 0x0);
        gbc.writeMem(0xd92e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaee6, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92e));
        EXPECT(0x3c, gbc.readMem(0xd92f));
        // CB 3C 0117
        gbc.setState(0xd1c9, 0xfb24, 0xe960, 0x99e9, 0x99e5, 0xd0e0, 0x1, 0x1);
        gbc.writeMem(0xd1c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c9));
        EXPECT(0x3c, gbc.readMem(0xd1ca));
        // CB 3C 0118
        gbc.setState(0xeccc, 0x3cd1, 0x5ae0, 0xc66, 0x7ea3, 0x4204, 0x1, 0x1);
        gbc.writeMem(0xeccc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3cd1, gbc.sp());
        EXPECT(0xecce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccc));
        EXPECT(0x3c, gbc.readMem(0xeccd));
        // CB 3C 0119
        gbc.setState(0x7434, 0x53e, 0xf0f0, 0x59cc, 0x4335, 0xa02a, 0x1, 0x0);
        gbc.writeMem(0x7434, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x53e, gbc.sp());
        EXPECT(0x7436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 011A
        gbc.setState(0x2a23, 0xc773, 0x3a30, 0xe428, 0xc376, 0x8d6c, 0x0, 0x1);
        gbc.writeMem(0x2a23, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc773, gbc.sp());
        EXPECT(0x2a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 011B
        gbc.setState(0x51f5, 0xf9a8, 0x6ff0, 0x75b4, 0x6139, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0x51f5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x51f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 011C
        gbc.setState(0xb6c9, 0x123, 0x66c0, 0x6578, 0x5fd0, 0x5c03, 0x0, 0x0);
        gbc.writeMem(0xb6c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x123, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c9));
        EXPECT(0x3c, gbc.readMem(0xb6ca));
        // CB 3C 011D
        gbc.setState(0xb653, 0x5359, 0x8400, 0x20d1, 0xe9f5, 0x6348, 0x0, 0x0);
        gbc.writeMem(0xb653, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5359, gbc.sp());
        EXPECT(0xb655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb653));
        EXPECT(0x3c, gbc.readMem(0xb654));
        // CB 3C 011E
        gbc.setState(0x635b, 0xb38c, 0x7850, 0x4616, 0xd884, 0x967f, 0x1, 0x0);
        gbc.writeMem(0x635b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb38c, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 011F
        gbc.setState(0xfe5, 0x147, 0xac10, 0x6a8b, 0xb24, 0x9940, 0x1, 0x1);
        gbc.writeMem(0xfe5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0xfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0120
        gbc.setState(0x2f96, 0x7591, 0xb4a0, 0x412c, 0xfb8f, 0x600, 0x0, 0x0);
        gbc.writeMem(0x2f96, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0x2f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0121
        gbc.setState(0x4861, 0xa5e0, 0x57a0, 0x3e3, 0xe8c2, 0x24c4, 0x1, 0x1);
        gbc.writeMem(0x4861, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x4863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0122
        gbc.setState(0xbe00, 0xa91a, 0x5b00, 0xc980, 0x77b5, 0xe354, 0x1, 0x1);
        gbc.writeMem(0xbe00, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0xbe02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe00));
        EXPECT(0x3c, gbc.readMem(0xbe01));
        // CB 3C 0123
        gbc.setState(0x8f2e, 0x3900, 0x15a0, 0xb997, 0x9e9f, 0x5657, 0x0, 0x0);
        gbc.writeMem(0x8f2e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3900, gbc.sp());
        EXPECT(0x8f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2e));
        EXPECT(0x3c, gbc.readMem(0x8f2f));
        // CB 3C 0124
        gbc.setState(0x8f6c, 0xb04, 0xfd80, 0xd0b5, 0x5c5b, 0xf3f6, 0x0, 0x1);
        gbc.writeMem(0x8f6c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0x8f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6c));
        EXPECT(0x3c, gbc.readMem(0x8f6d));
        // CB 3C 0125
        gbc.setState(0x5b, 0xde1c, 0x45d0, 0x8488, 0xeff4, 0x3088, 0x0, 0x0);
        gbc.writeMem(0x5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde1c, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0126
        gbc.setState(0x5fd2, 0xb2ed, 0x9fe0, 0x48eb, 0xb94d, 0xe34f, 0x1, 0x0);
        gbc.writeMem(0x5fd2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0127
        gbc.setState(0x72, 0x95f8, 0xa920, 0x5d9b, 0x90a9, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0x72, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x95f8, gbc.sp());
        EXPECT(0x74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0128
        gbc.setState(0x547, 0x5df8, 0x2150, 0xc386, 0x79d9, 0x538c, 0x0, 0x1);
        gbc.writeMem(0x547, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0x549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0129
        gbc.setState(0xafa7, 0x43a2, 0x76e0, 0x9dec, 0x780, 0xae9a, 0x1, 0x0);
        gbc.writeMem(0xafa7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43a2, gbc.sp());
        EXPECT(0xafa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa7));
        EXPECT(0x3c, gbc.readMem(0xafa8));
        // CB 3C 012A
        gbc.setState(0xa81e, 0x8fd, 0x92b0, 0x8423, 0x4fd8, 0x6b30, 0x0, 0x0);
        gbc.writeMem(0xa81e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8fd, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81e));
        EXPECT(0x3c, gbc.readMem(0xa81f));
        // CB 3C 012B
        gbc.setState(0x8315, 0xcc79, 0xea30, 0x344, 0x26ca, 0x48e7, 0x0, 0x1);
        gbc.writeMem(0x8315, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcc79, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x3c, gbc.readMem(0x8316));
        // CB 3C 012C
        gbc.setState(0x2926, 0x402, 0x2870, 0xe5f3, 0x3753, 0x921e, 0x0, 0x0);
        gbc.writeMem(0x2926, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x2928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 012D
        gbc.setState(0x6459, 0x7ab4, 0x860, 0xf70a, 0x9ce0, 0xc70, 0x0, 0x0);
        gbc.writeMem(0x6459, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ab4, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 012E
        gbc.setState(0xc97b, 0xedbf, 0x50e0, 0xea8f, 0xba3c, 0xb060, 0x0, 0x0);
        gbc.writeMem(0xc97b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xedbf, gbc.sp());
        EXPECT(0xc97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97b));
        EXPECT(0x3c, gbc.readMem(0xc97c));
        // CB 3C 012F
        gbc.setState(0xd0d7, 0x485f, 0x4fa0, 0x4b7, 0xc0f3, 0x833d, 0x1, 0x1);
        gbc.writeMem(0xd0d7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d7));
        EXPECT(0x3c, gbc.readMem(0xd0d8));
        // CB 3C 0130
        gbc.setState(0x5c3, 0xc87b, 0xa3e0, 0x4f6c, 0x2e35, 0x1d99, 0x0, 0x1);
        gbc.writeMem(0x5c3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0131
        gbc.setState(0xa13b, 0xc3f3, 0x2a30, 0xa4c8, 0xc99e, 0x77fe, 0x1, 0x1);
        gbc.writeMem(0xa13b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc3f3, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13b));
        EXPECT(0x3c, gbc.readMem(0xa13c));
        // CB 3C 0132
        gbc.setState(0xaa75, 0xe35d, 0xe7b0, 0x3837, 0x7a9, 0xf7d3, 0x0, 0x1);
        gbc.writeMem(0xaa75, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe35d, gbc.sp());
        EXPECT(0xaa77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa75));
        EXPECT(0x3c, gbc.readMem(0xaa76));
        // CB 3C 0133
        gbc.setState(0x461a, 0x4224, 0x40b0, 0x26a9, 0x7495, 0xe97, 0x1, 0x1);
        gbc.writeMem(0x461a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4224, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0134
        gbc.setState(0x9575, 0xa452, 0x84b0, 0x1e1f, 0x86ef, 0x881, 0x0, 0x0);
        gbc.writeMem(0x9575, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa452, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9575));
        EXPECT(0x3c, gbc.readMem(0x9576));
        // CB 3C 0136
        gbc.setState(0x8196, 0x21d5, 0xdf90, 0xa676, 0x39bd, 0xfc51, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x21d5, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0x3c, gbc.readMem(0x8197));
        // CB 3C 0137
        gbc.setState(0x1e20, 0xc8e3, 0xc990, 0x8125, 0xe24f, 0x576b, 0x1, 0x1);
        gbc.writeMem(0x1e20, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0138
        gbc.setState(0x6110, 0xe5d4, 0x9740, 0x633c, 0x3111, 0xeea, 0x0, 0x0);
        gbc.writeMem(0x6110, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe5d4, gbc.sp());
        EXPECT(0x6112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0139
        gbc.setState(0x45d8, 0xb6c, 0x6340, 0x2dd2, 0x3303, 0x51dd, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 013A
        gbc.setState(0x402f, 0x5e43, 0xa090, 0x73ec, 0xecd, 0x3027, 0x0, 0x0);
        gbc.writeMem(0x402f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5e43, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 013B
        gbc.setState(0x726d, 0x7b9f, 0xfd0, 0xae8, 0xf682, 0x384d, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7b9f, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 013D
        gbc.setState(0x71cf, 0xaed1, 0x9d60, 0x8cf6, 0x88a0, 0x508, 0x1, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaed1, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 013E
        gbc.setState(0x5fa1, 0x2529, 0x8190, 0x38de, 0x1e61, 0x5d47, 0x0, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2529, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 013F
        gbc.setState(0x473c, 0x1282, 0x23c0, 0x69d8, 0x488, 0x2a76, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0140
        gbc.setState(0xa3d4, 0x993, 0x4010, 0x1d55, 0x4003, 0x213f, 0x0, 0x1);
        gbc.writeMem(0xa3d4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x993, gbc.sp());
        EXPECT(0xa3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d4));
        EXPECT(0x3c, gbc.readMem(0xa3d5));
        // CB 3C 0141
        gbc.setState(0xbcf8, 0xc262, 0x2880, 0x7bf5, 0xcb94, 0x336c, 0x0, 0x1);
        gbc.writeMem(0xbcf8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc262, gbc.sp());
        EXPECT(0xbcfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf8));
        EXPECT(0x3c, gbc.readMem(0xbcf9));
        // CB 3C 0142
        gbc.setState(0x68b6, 0xd974, 0xf730, 0xc43b, 0xe591, 0xbaa8, 0x1, 0x0);
        gbc.writeMem(0x68b6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd974, gbc.sp());
        EXPECT(0x68b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0143
        gbc.setState(0x8364, 0xa3d9, 0xea00, 0x2867, 0x2180, 0x46dd, 0x1, 0x0);
        gbc.writeMem(0x8364, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa3d9, gbc.sp());
        EXPECT(0x8366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8364));
        EXPECT(0x3c, gbc.readMem(0x8365));
        // CB 3C 0144
        gbc.setState(0xc62f, 0xf212, 0xac90, 0x8028, 0x7cc, 0xbafc, 0x1, 0x1);
        gbc.writeMem(0xc62f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf212, gbc.sp());
        EXPECT(0xc631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62f));
        EXPECT(0x3c, gbc.readMem(0xc630));
        // CB 3C 0145
        gbc.setState(0xb03e, 0xe097, 0x6ec0, 0x2f90, 0x6a0c, 0x5688, 0x1, 0x1);
        gbc.writeMem(0xb03e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03e));
        EXPECT(0x3c, gbc.readMem(0xb03f));
        // CB 3C 0147
        gbc.setState(0x800c, 0xa5b5, 0xa1f0, 0x9a4d, 0x13a0, 0x58b8, 0x0, 0x1);
        gbc.writeMem(0x800c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa5b5, gbc.sp());
        EXPECT(0x800e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800c));
        EXPECT(0x3c, gbc.readMem(0x800d));
        // CB 3C 0148
        gbc.setState(0xd554, 0x47f0, 0xe3b0, 0x2a2e, 0xbd66, 0xd74d, 0x1, 0x0);
        gbc.writeMem(0xd554, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x47f0, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0x3c, gbc.readMem(0xd555));
        // CB 3C 014A
        gbc.setState(0x873f, 0x3c52, 0xbdd0, 0xcee1, 0xf7b4, 0x2238, 0x0, 0x1);
        gbc.writeMem(0x873f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3c52, gbc.sp());
        EXPECT(0x8741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873f));
        EXPECT(0x3c, gbc.readMem(0x8740));
        // CB 3C 014B
        gbc.setState(0x2344, 0x4466, 0xd310, 0xc71b, 0x6590, 0xdaa6, 0x1, 0x1);
        gbc.writeMem(0x2344, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x2346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 014C
        gbc.setState(0x46dc, 0xea66, 0xf6c0, 0xbfc3, 0x2994, 0x78b6, 0x0, 0x1);
        gbc.writeMem(0x46dc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xea66, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 014E
        gbc.setState(0x19b2, 0x4749, 0xf490, 0xfbd8, 0xd653, 0xa685, 0x0, 0x1);
        gbc.writeMem(0x19b2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4749, gbc.sp());
        EXPECT(0x19b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 014F
        gbc.setState(0x96c2, 0x4ce, 0x25a0, 0x8dcd, 0x8b76, 0xd657, 0x1, 0x1);
        gbc.writeMem(0x96c2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0x3c, gbc.readMem(0x96c3));
        // CB 3C 0150
        gbc.setState(0x3a69, 0x39d0, 0xb510, 0x4b9a, 0xff6e, 0x1440, 0x0, 0x1);
        gbc.writeMem(0x3a69, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0x3a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0151
        gbc.setState(0x6fdb, 0xe004, 0x9eb0, 0x8fe0, 0xea5e, 0xf8af, 0x0, 0x0);
        gbc.writeMem(0x6fdb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe004, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0153
        gbc.setState(0x3d10, 0x6a5a, 0xc7a0, 0x98ff, 0x7381, 0xb009, 0x1, 0x0);
        gbc.writeMem(0x3d10, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6a5a, gbc.sp());
        EXPECT(0x3d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0154
        gbc.setState(0xd984, 0xea0b, 0xc170, 0xe97c, 0x2cdb, 0xe542, 0x0, 0x1);
        gbc.writeMem(0xd984, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0x3c, gbc.readMem(0xd985));
        // CB 3C 0155
        gbc.setState(0x2120, 0xf2d3, 0x44d0, 0x6ad8, 0x9a1b, 0xbf29, 0x0, 0x1);
        gbc.writeMem(0x2120, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf2d3, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0156
        gbc.setState(0x6254, 0x1eda, 0xb80, 0x6328, 0xe547, 0x3e22, 0x1, 0x0);
        gbc.writeMem(0x6254, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0x6256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0157
        gbc.setState(0x4cc3, 0x36a0, 0x4af0, 0x4b6c, 0x90e9, 0xcfa1, 0x0, 0x0);
        gbc.writeMem(0x4cc3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0158
        gbc.setState(0xcfea, 0x2a24, 0x1390, 0xb652, 0x520c, 0x626d, 0x1, 0x0);
        gbc.writeMem(0xcfea, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0xcfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfea));
        EXPECT(0x3c, gbc.readMem(0xcfeb));
        // CB 3C 0159
        gbc.setState(0xd90d, 0x3244, 0x6e00, 0x9f56, 0x1dcb, 0xe968, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3244, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0x3c, gbc.readMem(0xd90e));
        // CB 3C 015A
        gbc.setState(0x8298, 0xecf5, 0xf4f0, 0x4407, 0xc668, 0x912c, 0x1, 0x1);
        gbc.writeMem(0x8298, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xecf5, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8298));
        EXPECT(0x3c, gbc.readMem(0x8299));
        // CB 3C 015B
        gbc.setState(0x74cf, 0x70fa, 0x80f0, 0xebae, 0xb4a3, 0x4324, 0x0, 0x0);
        gbc.writeMem(0x74cf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x70fa, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 015C
        gbc.setState(0x79b6, 0xa6d, 0xa500, 0x228d, 0xb8d2, 0x4e3a, 0x0, 0x0);
        gbc.writeMem(0x79b6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa6d, gbc.sp());
        EXPECT(0x79b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 015D
        gbc.setState(0x46bf, 0x64f8, 0x9c40, 0x705f, 0x83c5, 0x191, 0x1, 0x1);
        gbc.writeMem(0x46bf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x64f8, gbc.sp());
        EXPECT(0x46c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 015E
        gbc.setState(0x43e2, 0x5577, 0xd6b0, 0x6636, 0x342d, 0xe7b3, 0x1, 0x1);
        gbc.writeMem(0x43e2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5577, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 015F
        gbc.setState(0xd398, 0xaadd, 0xd050, 0x7ead, 0x8773, 0xe6ce, 0x1, 0x1);
        gbc.writeMem(0xd398, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaadd, gbc.sp());
        EXPECT(0xd39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd398));
        EXPECT(0x3c, gbc.readMem(0xd399));
        // CB 3C 0160
        gbc.setState(0xc118, 0xed59, 0xc0b0, 0x7c95, 0x6e2c, 0xfae, 0x1, 0x1);
        gbc.writeMem(0xc118, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc118));
        EXPECT(0x3c, gbc.readMem(0xc119));
        // CB 3C 0161
        gbc.setState(0x4b4a, 0x467d, 0xd5b0, 0xcf51, 0x167a, 0x6c20, 0x0, 0x0);
        gbc.writeMem(0x4b4a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x467d, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0162
        gbc.setState(0xe6db, 0x48c4, 0x1d10, 0x1232, 0x90be, 0x2c44, 0x0, 0x1);
        gbc.writeMem(0xe6db, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0xe6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6db));
        EXPECT(0x3c, gbc.readMem(0xe6dc));
        // CB 3C 0163
        gbc.setState(0x720a, 0x6582, 0xa8f0, 0x3003, 0xba17, 0x4592, 0x1, 0x1);
        gbc.writeMem(0x720a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6582, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0164
        gbc.setState(0xa953, 0xb0ba, 0xe040, 0xcb41, 0x674, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb0ba, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0x3c, gbc.readMem(0xa954));
        // CB 3C 0165
        gbc.setState(0x51bd, 0x62a7, 0x2650, 0x6457, 0x26f5, 0x6a7, 0x1, 0x1);
        gbc.writeMem(0x51bd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x62a7, gbc.sp());
        EXPECT(0x51bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0166
        gbc.setState(0x3c07, 0x6af1, 0x5100, 0xa9f9, 0x2803, 0x2e0f, 0x0, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6af1, gbc.sp());
        EXPECT(0x3c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0167
        gbc.setState(0xe642, 0x4375, 0x6040, 0x3000, 0xa7c8, 0x8f85, 0x0, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe642));
        EXPECT(0x3c, gbc.readMem(0xe643));
        // CB 3C 0168
        gbc.setState(0x4797, 0x9052, 0xfbb0, 0xee64, 0xbfaf, 0xc825, 0x1, 0x0);
        gbc.writeMem(0x4797, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0169
        gbc.setState(0x27c0, 0x49b7, 0x5320, 0x399f, 0x17d8, 0xd109, 0x0, 0x1);
        gbc.writeMem(0x27c0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0x27c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 016A
        gbc.setState(0x95db, 0x743b, 0x430, 0x15a4, 0xaae2, 0x4882, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x95dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95db));
        EXPECT(0x3c, gbc.readMem(0x95dc));
        // CB 3C 016B
        gbc.setState(0x67f0, 0xd7c7, 0xfa0, 0xa6a3, 0xd16d, 0x22a, 0x0, 0x0);
        gbc.writeMem(0x67f0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0x67f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 016C
        gbc.setState(0xb037, 0x9abc, 0x5f30, 0x6f4a, 0xa91b, 0x4d3, 0x0, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0x3c, gbc.readMem(0xb038));
        // CB 3C 016D
        gbc.setState(0x35cb, 0xc086, 0x2680, 0x584, 0x2243, 0x1695, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 016E
        gbc.setState(0x3919, 0xe61d, 0x45a0, 0xb284, 0x7f5f, 0x33cd, 0x0, 0x1);
        gbc.writeMem(0x3919, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe61d, gbc.sp());
        EXPECT(0x391b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 016F
        gbc.setState(0x87c3, 0x60a1, 0xdc20, 0xbc93, 0xc4cc, 0x714b, 0x1, 0x1);
        gbc.writeMem(0x87c3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x60a1, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c3));
        EXPECT(0x3c, gbc.readMem(0x87c4));
        // CB 3C 0170
        gbc.setState(0x80e7, 0xed58, 0x8070, 0xb29c, 0x9b39, 0x4d81, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0x3c, gbc.readMem(0x80e8));
        // CB 3C 0171
        gbc.setState(0xa536, 0x12c9, 0x54a0, 0xab57, 0x62c4, 0xde66, 0x1, 0x0);
        gbc.writeMem(0xa536, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x12c9, gbc.sp());
        EXPECT(0xa538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa536));
        EXPECT(0x3c, gbc.readMem(0xa537));
        // CB 3C 0172
        gbc.setState(0x4077, 0xa21b, 0x2600, 0xdf8c, 0x3b6d, 0xcc85, 0x0, 0x1);
        gbc.writeMem(0x4077, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x4079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0173
        gbc.setState(0x544f, 0xa9b7, 0x43b0, 0x6ba9, 0x2f48, 0xd7e, 0x1, 0x0);
        gbc.writeMem(0x544f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa9b7, gbc.sp());
        EXPECT(0x5451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0174
        gbc.setState(0x983a, 0x8b7a, 0x4a50, 0x776d, 0xc8dd, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0x983a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8b7a, gbc.sp());
        EXPECT(0x983c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983a));
        EXPECT(0x3c, gbc.readMem(0x983b));
        // CB 3C 0175
        gbc.setState(0xc2b4, 0x63ca, 0x9550, 0x8589, 0xa8b, 0x9bf, 0x0, 0x1);
        gbc.writeMem(0xc2b4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x63ca, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0x3c, gbc.readMem(0xc2b5));
        // CB 3C 0176
        gbc.setState(0x8a1e, 0xf778, 0xe590, 0x1be2, 0x7045, 0x5b6b, 0x0, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf778, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0x3c, gbc.readMem(0x8a1f));
        // CB 3C 0177
        gbc.setState(0x7166, 0x536, 0x9810, 0xe739, 0xc2ea, 0xc8ca, 0x1, 0x1);
        gbc.writeMem(0x7166, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x536, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0178
        gbc.setState(0x50ae, 0xc7c2, 0x5a90, 0x4f89, 0xca8e, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x50ae, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0x50b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0179
        gbc.setState(0x1554, 0x6ab5, 0xc600, 0x15de, 0xa0ff, 0xfb9a, 0x1, 0x1);
        gbc.writeMem(0x1554, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 017A
        gbc.setState(0x949e, 0x13b8, 0xcd30, 0xfb61, 0x8fb6, 0xa2df, 0x1, 0x0);
        gbc.writeMem(0x949e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x13b8, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949e));
        EXPECT(0x3c, gbc.readMem(0x949f));
        // CB 3C 017B
        gbc.setState(0x8c8d, 0x1787, 0x2d20, 0xc610, 0xa7c5, 0x711b, 0x0, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1787, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8d));
        EXPECT(0x3c, gbc.readMem(0x8c8e));
        // CB 3C 017C
        gbc.setState(0x2a2d, 0xc22b, 0x490, 0xdaae, 0x71b8, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 017E
        gbc.setState(0x834c, 0xeed5, 0xade0, 0x8514, 0xdd67, 0xf052, 0x0, 0x1);
        gbc.writeMem(0x834c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeed5, gbc.sp());
        EXPECT(0x834e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834c));
        EXPECT(0x3c, gbc.readMem(0x834d));
        // CB 3C 017F
        gbc.setState(0xadf2, 0xc5a7, 0x7350, 0x4cab, 0x3b10, 0x3713, 0x1, 0x0);
        gbc.writeMem(0xadf2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc5a7, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0x3c, gbc.readMem(0xadf3));
        // CB 3C 0181
        gbc.setState(0x2365, 0x8d0, 0x46f0, 0xec66, 0xae24, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x2365, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0x2367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0182
        gbc.setState(0xe10d, 0xac1a, 0xf3d0, 0xeef3, 0xeab9, 0xd04f, 0x1, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xac1a, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0x3c, gbc.readMem(0xe10e));
        // CB 3C 0183
        gbc.setState(0x98af, 0xa6cd, 0x51e0, 0x636e, 0x26f9, 0x62a8, 0x1, 0x1);
        gbc.writeMem(0x98af, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa6cd, gbc.sp());
        EXPECT(0x98b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98af));
        EXPECT(0x3c, gbc.readMem(0x98b0));
        // CB 3C 0184
        gbc.setState(0xe87b, 0x9c60, 0x3290, 0x5998, 0x839a, 0xeb3, 0x1, 0x1);
        gbc.writeMem(0xe87b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9c60, gbc.sp());
        EXPECT(0xe87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87b));
        EXPECT(0x3c, gbc.readMem(0xe87c));
        // CB 3C 0185
        gbc.setState(0xd92b, 0xe0c7, 0x6b40, 0xaf03, 0xa1a2, 0xba18, 0x1, 0x1);
        gbc.writeMem(0xd92b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0xd92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92b));
        EXPECT(0x3c, gbc.readMem(0xd92c));
        // CB 3C 0186
        gbc.setState(0x1fd6, 0xb681, 0xd060, 0xcae3, 0x8f09, 0x527f, 0x0, 0x0);
        gbc.writeMem(0x1fd6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb681, gbc.sp());
        EXPECT(0x1fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0187
        gbc.setState(0xda53, 0xf185, 0xe500, 0x4db2, 0x7b41, 0xfdec, 0x0, 0x1);
        gbc.writeMem(0xda53, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda53));
        EXPECT(0x3c, gbc.readMem(0xda54));
        // CB 3C 0188
        gbc.setState(0xc069, 0x76f8, 0xb050, 0xb2d2, 0xb569, 0x4611, 0x1, 0x0);
        gbc.writeMem(0xc069, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0xc06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc069));
        EXPECT(0x3c, gbc.readMem(0xc06a));
        // CB 3C 0189
        gbc.setState(0x5b6a, 0x421f, 0x6c90, 0x3a58, 0x9d7, 0xb19d, 0x1, 0x1);
        gbc.writeMem(0x5b6a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0x5b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 018A
        gbc.setState(0x33ca, 0xdec2, 0x9310, 0x6f84, 0x1a2d, 0x6eb1, 0x0, 0x0);
        gbc.writeMem(0x33ca, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdec2, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 018B
        gbc.setState(0x48b2, 0xba57, 0x340, 0xb917, 0x918a, 0x6574, 0x0, 0x0);
        gbc.writeMem(0x48b2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba57, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 018C
        gbc.setState(0x5a9, 0xc2f9, 0x7580, 0x7d72, 0x6d28, 0xafdb, 0x0, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc2f9, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 018E
        gbc.setState(0x2179, 0x39db, 0xfc20, 0x4a43, 0x1b25, 0x2f1f, 0x0, 0x0);
        gbc.writeMem(0x2179, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x39db, gbc.sp());
        EXPECT(0x217b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 018F
        gbc.setState(0x5766, 0x87ab, 0xf0, 0x8ff6, 0x2072, 0xf324, 0x1, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x87ab, gbc.sp());
        EXPECT(0x5768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0190
        gbc.setState(0xe7, 0xa550, 0xaa20, 0x6ad1, 0xda8c, 0x981d, 0x1, 0x1);
        gbc.writeMem(0xe7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa550, gbc.sp());
        EXPECT(0xe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0191
        gbc.setState(0x4f0b, 0x2bae, 0x72b0, 0x7fca, 0xd556, 0xa4be, 0x0, 0x0);
        gbc.writeMem(0x4f0b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0192
        gbc.setState(0x53da, 0x6960, 0x6850, 0x6215, 0x37e8, 0x277d, 0x1, 0x0);
        gbc.writeMem(0x53da, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0x53dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0193
        gbc.setState(0x4334, 0x66e8, 0x6ec0, 0x45ff, 0x48a2, 0x413, 0x1, 0x1);
        gbc.writeMem(0x4334, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x66e8, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0194
        gbc.setState(0x2b85, 0x8290, 0xc980, 0xf0cf, 0x10e6, 0x1057, 0x1, 0x1);
        gbc.writeMem(0x2b85, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0196
        gbc.setState(0xe4a9, 0x7b2d, 0x2340, 0x99ba, 0xb075, 0x80bd, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7b2d, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x3c, gbc.readMem(0xe4aa));
        // CB 3C 0197
        gbc.setState(0x4f77, 0xa503, 0x77a0, 0x7f65, 0x2f1a, 0xcbbc, 0x1, 0x0);
        gbc.writeMem(0x4f77, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0x4f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0198
        gbc.setState(0xbb26, 0xf0e0, 0x2f40, 0xe5e4, 0xdf42, 0x9acf, 0x1, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb26));
        EXPECT(0x3c, gbc.readMem(0xbb27));
        // CB 3C 0199
        gbc.setState(0x8717, 0xd927, 0xae90, 0x4b81, 0x40f2, 0xcb1, 0x1, 0x0);
        gbc.writeMem(0x8717, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x8719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8717));
        EXPECT(0x3c, gbc.readMem(0x8718));
        // CB 3C 019A
        gbc.setState(0x36af, 0xd93c, 0xa690, 0xaac5, 0xaf98, 0x28cf, 0x0, 0x1);
        gbc.writeMem(0x36af, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd93c, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 019B
        gbc.setState(0xf4d, 0xe761, 0xa270, 0xb0c8, 0xf0b3, 0x6bca, 0x1, 0x1);
        gbc.writeMem(0xf4d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe761, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 019C
        gbc.setState(0x3a82, 0xbc4b, 0xd1c0, 0x6c5a, 0x154c, 0x1052, 0x0, 0x1);
        gbc.writeMem(0x3a82, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0x3a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 019D
        gbc.setState(0x5c97, 0x15bc, 0x2980, 0x139, 0xba08, 0x14c5, 0x1, 0x1);
        gbc.writeMem(0x5c97, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x15bc, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 019E
        gbc.setState(0x388b, 0xd802, 0x3680, 0x7afe, 0xb3f6, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0x388b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd802, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 019F
        gbc.setState(0x5ec3, 0xfd04, 0xf400, 0xa086, 0x4697, 0x9aaa, 0x1, 0x1);
        gbc.writeMem(0x5ec3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01A0
        gbc.setState(0x80e2, 0xe2d0, 0x9b20, 0xbe64, 0xb77, 0x4de1, 0x0, 0x1);
        gbc.writeMem(0x80e2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x80e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e2));
        EXPECT(0x3c, gbc.readMem(0x80e3));
        // CB 3C 01A1
        gbc.setState(0xe86b, 0xa51, 0x3e30, 0x1d5c, 0x104a, 0xda68, 0x1, 0x0);
        gbc.writeMem(0xe86b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa51, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86b));
        EXPECT(0x3c, gbc.readMem(0xe86c));
        // CB 3C 01A2
        gbc.setState(0xefe3, 0x3179, 0xd510, 0x8ff, 0x33f4, 0x63b, 0x1, 0x1);
        gbc.writeMem(0xefe3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0xefe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe3));
        EXPECT(0x3c, gbc.readMem(0xefe4));
        // CB 3C 01A3
        gbc.setState(0xc4f0, 0x7fb6, 0x1db0, 0x5e75, 0x9200, 0x8303, 0x0, 0x0);
        gbc.writeMem(0xc4f0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f0));
        EXPECT(0x3c, gbc.readMem(0xc4f1));
        // CB 3C 01A4
        gbc.setState(0x823b, 0x1cdb, 0xbfb0, 0x358f, 0xedcc, 0x88d1, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x823d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823b));
        EXPECT(0x3c, gbc.readMem(0x823c));
        // CB 3C 01A5
        gbc.setState(0xd676, 0xfb8c, 0x3e80, 0x7388, 0x8c9c, 0x4f91, 0x0, 0x1);
        gbc.writeMem(0xd676, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfb8c, gbc.sp());
        EXPECT(0xd678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd676));
        EXPECT(0x3c, gbc.readMem(0xd677));
        // CB 3C 01A6
        gbc.setState(0x2eb2, 0xd8a1, 0x64d0, 0x41bf, 0x932a, 0x6f1a, 0x1, 0x1);
        gbc.writeMem(0x2eb2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd8a1, gbc.sp());
        EXPECT(0x2eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01A7
        gbc.setState(0xdd63, 0xeb22, 0x1370, 0x1fa8, 0x9bac, 0x28d5, 0x0, 0x0);
        gbc.writeMem(0xdd63, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xdd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd63));
        EXPECT(0x3c, gbc.readMem(0xdd64));
        // CB 3C 01A8
        gbc.setState(0xfb7, 0xa9da, 0x5c50, 0xc6a4, 0x1f7b, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0xfb7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa9da, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01A9
        gbc.setState(0xc54a, 0x9e5f, 0xc590, 0x8f22, 0x4c38, 0xe147, 0x0, 0x1);
        gbc.writeMem(0xc54a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9e5f, gbc.sp());
        EXPECT(0xc54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54a));
        EXPECT(0x3c, gbc.readMem(0xc54b));
        // CB 3C 01AA
        gbc.setState(0xa1d4, 0xb996, 0xeef0, 0xbb4a, 0xca7c, 0xb617, 0x0, 0x1);
        gbc.writeMem(0xa1d4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb996, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0x3c, gbc.readMem(0xa1d5));
        // CB 3C 01AB
        gbc.setState(0x9175, 0x19f6, 0xa6d0, 0x6289, 0xce10, 0xd32c, 0x0, 0x1);
        gbc.writeMem(0x9175, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x19f6, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9175));
        EXPECT(0x3c, gbc.readMem(0x9176));
        // CB 3C 01AC
        gbc.setState(0x5326, 0x668a, 0xeaf0, 0xf6ba, 0x345f, 0xce2b, 0x0, 0x0);
        gbc.writeMem(0x5326, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x668a, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01AD
        gbc.setState(0xc588, 0x11fd, 0xe4b0, 0x58a, 0xe4f7, 0x5617, 0x0, 0x1);
        gbc.writeMem(0xc588, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x11fd, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc588));
        EXPECT(0x3c, gbc.readMem(0xc589));
        // CB 3C 01AF
        gbc.setState(0xde13, 0x14d6, 0xa850, 0xb3b9, 0x1466, 0x4465, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde13));
        EXPECT(0x3c, gbc.readMem(0xde14));
        // CB 3C 01B0
        gbc.setState(0x863c, 0x1992, 0xe400, 0x8ad0, 0x4f0e, 0x1052, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1992, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863c));
        EXPECT(0x3c, gbc.readMem(0x863d));
        // CB 3C 01B1
        gbc.setState(0x947e, 0xcc0a, 0xedb0, 0xfd6a, 0x3155, 0x8e76, 0x1, 0x0);
        gbc.writeMem(0x947e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0x9480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947e));
        EXPECT(0x3c, gbc.readMem(0x947f));
        // CB 3C 01B3
        gbc.setState(0x5daf, 0x245d, 0xe400, 0x8828, 0xd5e5, 0xfd86, 0x1, 0x0);
        gbc.writeMem(0x5daf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01B4
        gbc.setState(0x4968, 0xcbb5, 0x22e0, 0x587e, 0x8b33, 0x160a, 0x1, 0x0);
        gbc.writeMem(0x4968, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcbb5, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01B5
        gbc.setState(0x6fb7, 0x2525, 0x9e80, 0xaeda, 0x7863, 0x82e8, 0x1, 0x1);
        gbc.writeMem(0x6fb7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0x6fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01B6
        gbc.setState(0xd136, 0x889d, 0x2430, 0x3e10, 0x59a0, 0xaf0d, 0x1, 0x1);
        gbc.writeMem(0xd136, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x889d, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd136));
        EXPECT(0x3c, gbc.readMem(0xd137));
        // CB 3C 01B7
        gbc.setState(0x6a83, 0x8807, 0xe530, 0xedb4, 0xcdb7, 0x49ce, 0x1, 0x0);
        gbc.writeMem(0x6a83, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8807, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01B8
        gbc.setState(0xe555, 0x50f8, 0xa270, 0x6d8b, 0xb600, 0x15c2, 0x0, 0x0);
        gbc.writeMem(0xe555, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe555));
        EXPECT(0x3c, gbc.readMem(0xe556));
        // CB 3C 01B9
        gbc.setState(0x3d80, 0x530e, 0xdb10, 0xeba2, 0xb4fe, 0xc11a, 0x1, 0x1);
        gbc.writeMem(0x3d80, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01BA
        gbc.setState(0x4144, 0xe7f1, 0x7120, 0xbd18, 0xc526, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0x4144, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x4146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01BB
        gbc.setState(0xac53, 0x98d8, 0xf190, 0xcc1a, 0x9bfb, 0x686b, 0x0, 0x1);
        gbc.writeMem(0xac53, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x98d8, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac53));
        EXPECT(0x3c, gbc.readMem(0xac54));
        // CB 3C 01BC
        gbc.setState(0x2d01, 0x71a2, 0x97d0, 0x2cca, 0xea7e, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x71a2, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01BD
        gbc.setState(0xa6a9, 0x845, 0xae30, 0xfea7, 0x5485, 0xe562, 0x0, 0x1);
        gbc.writeMem(0xa6a9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x845, gbc.sp());
        EXPECT(0xa6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a9));
        EXPECT(0x3c, gbc.readMem(0xa6aa));
        // CB 3C 01BE
        gbc.setState(0x4bca, 0xea22, 0x1bb0, 0xa044, 0x8eee, 0xc520, 0x0, 0x1);
        gbc.writeMem(0x4bca, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xea22, gbc.sp());
        EXPECT(0x4bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01BF
        gbc.setState(0xaef0, 0xeb2c, 0xb580, 0x111b, 0x2d3f, 0xb5b3, 0x1, 0x1);
        gbc.writeMem(0xaef0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xeb2c, gbc.sp());
        EXPECT(0xaef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef0));
        EXPECT(0x3c, gbc.readMem(0xaef1));
        // CB 3C 01C0
        gbc.setState(0x60c9, 0xe9d6, 0xff10, 0xa725, 0xff07, 0x4a66, 0x0, 0x1);
        gbc.writeMem(0x60c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01C1
        gbc.setState(0x52cb, 0x93e8, 0x4de0, 0xba2d, 0x7766, 0x76c5, 0x0, 0x0);
        gbc.writeMem(0x52cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x93e8, gbc.sp());
        EXPECT(0x52cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01C2
        gbc.setState(0xb076, 0x2eaa, 0x280, 0x161e, 0x18a1, 0xccdd, 0x0, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2eaa, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0x3c, gbc.readMem(0xb077));
        // CB 3C 01C3
        gbc.setState(0x80ef, 0x4c3b, 0xbec0, 0x8c34, 0x50b4, 0x1860, 0x1, 0x1);
        gbc.writeMem(0x80ef, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4c3b, gbc.sp());
        EXPECT(0x80f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ef));
        EXPECT(0x3c, gbc.readMem(0x80f0));
        // CB 3C 01C5
        gbc.setState(0xa4a8, 0xb7f8, 0x4320, 0x8872, 0x2be8, 0x1135, 0x0, 0x1);
        gbc.writeMem(0xa4a8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb7f8, gbc.sp());
        EXPECT(0xa4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a8));
        EXPECT(0x3c, gbc.readMem(0xa4a9));
        // CB 3C 01C6
        gbc.setState(0x5f47, 0xa433, 0x2970, 0x8dd4, 0xbd29, 0x1b9f, 0x1, 0x0);
        gbc.writeMem(0x5f47, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa433, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01C7
        gbc.setState(0xdbd9, 0xebb8, 0xd640, 0x8cd2, 0x84e2, 0x297f, 0x1, 0x0);
        gbc.writeMem(0xdbd9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xebb8, gbc.sp());
        EXPECT(0xdbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd9));
        EXPECT(0x3c, gbc.readMem(0xdbda));
        // CB 3C 01C8
        gbc.setState(0xbdfe, 0x681c, 0x3130, 0x809a, 0xab13, 0x4031, 0x0, 0x1);
        gbc.writeMem(0xbdfe, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x681c, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfe));
        EXPECT(0x3c, gbc.readMem(0xbdff));
        // CB 3C 01C9
        gbc.setState(0x64ca, 0xbbf8, 0xbcb0, 0xaec7, 0xc7d9, 0x67a9, 0x0, 0x0);
        gbc.writeMem(0x64ca, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbbf8, gbc.sp());
        EXPECT(0x64cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01CA
        gbc.setState(0x76ae, 0x740b, 0xa520, 0x6ed, 0xf69e, 0xa8a8, 0x0, 0x0);
        gbc.writeMem(0x76ae, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x740b, gbc.sp());
        EXPECT(0x76b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01CB
        gbc.setState(0xea70, 0x39b5, 0x8b00, 0xcb0c, 0x8d82, 0xe455, 0x0, 0x1);
        gbc.writeMem(0xea70, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea70));
        EXPECT(0x3c, gbc.readMem(0xea71));
        // CB 3C 01CC
        gbc.setState(0x5d5b, 0x53fb, 0x8700, 0x339f, 0x5c3c, 0xc5f4, 0x0, 0x1);
        gbc.writeMem(0x5d5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0x5d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01CD
        gbc.setState(0x1b76, 0x2192, 0xe0, 0xf13b, 0x5cb0, 0xc912, 0x1, 0x0);
        gbc.writeMem(0x1b76, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2192, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01CE
        gbc.setState(0x8e27, 0x6077, 0xb8d0, 0x92dd, 0x304a, 0xd4cb, 0x0, 0x0);
        gbc.writeMem(0x8e27, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x8e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e27));
        EXPECT(0x3c, gbc.readMem(0x8e28));
        // CB 3C 01CF
        gbc.setState(0xd568, 0x8034, 0xe640, 0xcd13, 0xd506, 0x4441, 0x0, 0x1);
        gbc.writeMem(0xd568, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0xd56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd568));
        EXPECT(0x3c, gbc.readMem(0xd569));
        // CB 3C 01D0
        gbc.setState(0x9d12, 0x56f3, 0x9f10, 0xcd0b, 0x57f3, 0x392, 0x1, 0x0);
        gbc.writeMem(0x9d12, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x56f3, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0x3c, gbc.readMem(0x9d13));
        // CB 3C 01D2
        gbc.setState(0x23bf, 0xd70c, 0xbbd0, 0x9949, 0x4085, 0xe47a, 0x0, 0x0);
        gbc.writeMem(0x23bf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01D3
        gbc.setState(0x8529, 0xe9fe, 0x64d0, 0x2903, 0xad13, 0x70ae, 0x0, 0x0);
        gbc.writeMem(0x8529, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0x852b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8529));
        EXPECT(0x3c, gbc.readMem(0x852a));
        // CB 3C 01D4
        gbc.setState(0xbcd4, 0x8ebb, 0x4de0, 0x39ec, 0x906f, 0x9c36, 0x1, 0x1);
        gbc.writeMem(0xbcd4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd4));
        EXPECT(0x3c, gbc.readMem(0xbcd5));
        // CB 3C 01D5
        gbc.setState(0xbbbb, 0x9209, 0xe3f0, 0x68ca, 0xfd7d, 0x921, 0x0, 0x1);
        gbc.writeMem(0xbbbb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9209, gbc.sp());
        EXPECT(0xbbbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbb));
        EXPECT(0x3c, gbc.readMem(0xbbbc));
        // CB 3C 01D6
        gbc.setState(0x6553, 0xd697, 0x3400, 0x8f59, 0xb994, 0xb42c, 0x0, 0x1);
        gbc.writeMem(0x6553, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd697, gbc.sp());
        EXPECT(0x6555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01D7
        gbc.setState(0x9770, 0xc13a, 0x29d0, 0xcea8, 0xe647, 0x8577, 0x1, 0x1);
        gbc.writeMem(0x9770, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9770));
        EXPECT(0x3c, gbc.readMem(0x9771));
        // CB 3C 01D8
        gbc.setState(0x9c3f, 0xecb4, 0x64e0, 0x4f21, 0x7637, 0x80c2, 0x1, 0x0);
        gbc.writeMem(0x9c3f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xecb4, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3f));
        EXPECT(0x3c, gbc.readMem(0x9c40));
        // CB 3C 01D9
        gbc.setState(0x9a80, 0xdcca, 0xcd0, 0xfd1f, 0xa36f, 0xf0c3, 0x1, 0x0);
        gbc.writeMem(0x9a80, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdcca, gbc.sp());
        EXPECT(0x9a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a80));
        EXPECT(0x3c, gbc.readMem(0x9a81));
        // CB 3C 01DA
        gbc.setState(0xb194, 0x3209, 0xe60, 0x6293, 0x6f31, 0x7c66, 0x1, 0x0);
        gbc.writeMem(0xb194, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3209, gbc.sp());
        EXPECT(0xb196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb194));
        EXPECT(0x3c, gbc.readMem(0xb195));
        // CB 3C 01DC
        gbc.setState(0x4ea3, 0xa87c, 0x7c0, 0x9447, 0x7f73, 0x569e, 0x0, 0x0);
        gbc.writeMem(0x4ea3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x4ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01DD
        gbc.setState(0x7737, 0x10e0, 0xb160, 0x5537, 0xfaf, 0x5785, 0x1, 0x0);
        gbc.writeMem(0x7737, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0x7739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01DE
        gbc.setState(0x36af, 0x3660, 0x94e0, 0xd147, 0xb2eb, 0xfba8, 0x1, 0x1);
        gbc.writeMem(0x36af, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01DF
        gbc.setState(0x9b40, 0xc5e5, 0x2b60, 0x5f96, 0x7e9f, 0x953, 0x0, 0x1);
        gbc.writeMem(0x9b40, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0x9b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b40));
        EXPECT(0x3c, gbc.readMem(0x9b41));
        // CB 3C 01E0
        gbc.setState(0xaa5b, 0x93b4, 0x4670, 0x9c85, 0xa958, 0x49df, 0x0, 0x0);
        gbc.writeMem(0xaa5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0xaa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5b));
        EXPECT(0x3c, gbc.readMem(0xaa5c));
        // CB 3C 01E2
        gbc.setState(0xe580, 0x72fc, 0xd300, 0xc0b4, 0x9711, 0x205a, 0x0, 0x1);
        gbc.writeMem(0xe580, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0x3c, gbc.readMem(0xe581));
        // CB 3C 01E3
        gbc.setState(0x6d0b, 0xa88a, 0x70d0, 0xae2b, 0x1d62, 0x9323, 0x1, 0x1);
        gbc.writeMem(0x6d0b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa88a, gbc.sp());
        EXPECT(0x6d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01E5
        gbc.setState(0x581, 0x3c09, 0x2030, 0xe6c0, 0x24ff, 0xae2c, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0x583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01E6
        gbc.setState(0x30eb, 0xea3f, 0x6500, 0x82d3, 0x7c67, 0x54a8, 0x0, 0x1);
        gbc.writeMem(0x30eb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xea3f, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01E7
        gbc.setState(0x79c7, 0x5265, 0x2290, 0x9a93, 0x4418, 0xfd8, 0x1, 0x0);
        gbc.writeMem(0x79c7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5265, gbc.sp());
        EXPECT(0x79c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01E8
        gbc.setState(0xdfe2, 0x8679, 0x21e0, 0x84a9, 0xc114, 0xd4f0, 0x1, 0x1);
        gbc.writeMem(0xdfe2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe2));
        EXPECT(0x3c, gbc.readMem(0xdfe3));
        // CB 3C 01E9
        gbc.setState(0x28da, 0xaa66, 0x2f80, 0x76f7, 0x4d7e, 0xc14, 0x1, 0x0);
        gbc.writeMem(0x28da, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaa66, gbc.sp());
        EXPECT(0x28dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01EA
        gbc.setState(0x6c02, 0x7715, 0xc9b0, 0xf7f2, 0x994f, 0x8e2e, 0x0, 0x0);
        gbc.writeMem(0x6c02, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x6c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01EB
        gbc.setState(0x528d, 0xd713, 0xae40, 0xdddf, 0xf675, 0x1a6, 0x1, 0x0);
        gbc.writeMem(0x528d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd713, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01EC
        gbc.setState(0x3570, 0xc199, 0xf550, 0xbc39, 0xe8e4, 0xf12a, 0x1, 0x0);
        gbc.writeMem(0x3570, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc199, gbc.sp());
        EXPECT(0x3572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01ED
        gbc.setState(0x8574, 0x145, 0xc0, 0xceba, 0x3c40, 0xdc62, 0x1, 0x1);
        gbc.writeMem(0x8574, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8574));
        EXPECT(0x3c, gbc.readMem(0x8575));
        // CB 3C 01EE
        gbc.setState(0x4416, 0xbafa, 0xfc10, 0xa08f, 0x7e33, 0xabfa, 0x0, 0x1);
        gbc.writeMem(0x4416, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbafa, gbc.sp());
        EXPECT(0x4418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01EF
        gbc.setState(0x6ef, 0xd0bf, 0x1d10, 0x868f, 0xb13e, 0xdcde, 0x1, 0x1);
        gbc.writeMem(0x6ef, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01F0
        gbc.setState(0x84ca, 0xe99d, 0xcd50, 0xff0c, 0xb156, 0xf3a3, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe99d, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x3c, gbc.readMem(0x84cb));
        // CB 3C 01F1
        gbc.setState(0xa15a, 0x7220, 0x2490, 0x5c6b, 0x2f5f, 0xe594, 0x0, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7220, gbc.sp());
        EXPECT(0xa15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15a));
        EXPECT(0x3c, gbc.readMem(0xa15b));
        // CB 3C 01F2
        gbc.setState(0x448a, 0xe4ba, 0x9be0, 0xec5d, 0x5ffd, 0x8375, 0x0, 0x0);
        gbc.writeMem(0x448a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe4ba, gbc.sp());
        EXPECT(0x448c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01F3
        gbc.setState(0x4a75, 0xd22f, 0x6b10, 0x71a8, 0x6862, 0xb61b, 0x0, 0x1);
        gbc.writeMem(0x4a75, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd22f, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01F4
        gbc.setState(0x3d42, 0x8861, 0xac30, 0x310b, 0xe51b, 0xd3ed, 0x1, 0x0);
        gbc.writeMem(0x3d42, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8861, gbc.sp());
        EXPECT(0x3d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01F5
        gbc.setState(0xbcbc, 0xa8c2, 0x7a00, 0xeed8, 0xc62d, 0x73c9, 0x0, 0x1);
        gbc.writeMem(0xbcbc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa8c2, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbc));
        EXPECT(0x3c, gbc.readMem(0xbcbd));
        // CB 3C 01F6
        gbc.setState(0x1122, 0x5e40, 0xd8a0, 0xb85b, 0x97a9, 0xdf42, 0x0, 0x1);
        gbc.writeMem(0x1122, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01F7
        gbc.setState(0x447b, 0xcab7, 0xeff0, 0xefa0, 0xe4, 0x755e, 0x0, 0x0);
        gbc.writeMem(0x447b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcab7, gbc.sp());
        EXPECT(0x447d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01F8
        gbc.setState(0xbdc1, 0x328c, 0x2f0, 0x2e19, 0x4b3d, 0xb057, 0x1, 0x0);
        gbc.writeMem(0xbdc1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0xbdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc1));
        EXPECT(0x3c, gbc.readMem(0xbdc2));
        // CB 3C 01F9
        gbc.setState(0x3afa, 0x84e, 0x5be0, 0xf166, 0x2977, 0xe275, 0x0, 0x0);
        gbc.writeMem(0x3afa, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x84e, gbc.sp());
        EXPECT(0x3afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01FA
        gbc.setState(0xd0b1, 0xdfee, 0xbf50, 0xc9b5, 0x4990, 0x884c, 0x0, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdfee, gbc.sp());
        EXPECT(0xd0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b1));
        EXPECT(0x3c, gbc.readMem(0xd0b2));
        // CB 3C 01FB
        gbc.setState(0x3632, 0x30cd, 0x1de0, 0x3aa0, 0xf0c4, 0xf40c, 0x1, 0x1);
        gbc.writeMem(0x3632, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 01FC
        gbc.setState(0xb042, 0xf270, 0xc8f0, 0x44db, 0xf9, 0xae14, 0x0, 0x1);
        gbc.writeMem(0xb042, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf270, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb042));
        EXPECT(0x3c, gbc.readMem(0xb043));
        // CB 3C 01FD
        gbc.setState(0xe548, 0x638e, 0x4e90, 0x3218, 0x3dda, 0x39b9, 0x0, 0x0);
        gbc.writeMem(0xe548, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0xe54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe548));
        EXPECT(0x3c, gbc.readMem(0xe549));
        // CB 3C 01FE
        gbc.setState(0x59f6, 0x946c, 0xe330, 0x4bb4, 0xb81b, 0x6ff0, 0x1, 0x0);
        gbc.writeMem(0x59f6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 01FF
        gbc.setState(0xb4a3, 0x45e, 0x69d0, 0x1af9, 0xfed3, 0x4e9c, 0x0, 0x1);
        gbc.writeMem(0xb4a3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x45e, gbc.sp());
        EXPECT(0xb4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a3));
        EXPECT(0x3c, gbc.readMem(0xb4a4));
        // CB 3C 0200
        gbc.setState(0xe95b, 0x61a1, 0xe1b0, 0x49c1, 0xe4ea, 0x611d, 0x0, 0x1);
        gbc.writeMem(0xe95b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x61a1, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95b));
        EXPECT(0x3c, gbc.readMem(0xe95c));
        // CB 3C 0201
        gbc.setState(0x3d9a, 0x9336, 0x4180, 0xe37c, 0xe11c, 0x3fa0, 0x1, 0x0);
        gbc.writeMem(0x3d9a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9336, gbc.sp());
        EXPECT(0x3d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0202
        gbc.setState(0x924c, 0xb3f0, 0x40c0, 0xc71c, 0x3043, 0xbe24, 0x1, 0x1);
        gbc.writeMem(0x924c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0x924e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924c));
        EXPECT(0x3c, gbc.readMem(0x924d));
        // CB 3C 0203
        gbc.setState(0x56bc, 0xa59, 0xd590, 0x47d1, 0x1b53, 0xbd66, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0204
        gbc.setState(0x149e, 0xca7c, 0xce50, 0xbe07, 0x3224, 0xe1c3, 0x1, 0x0);
        gbc.writeMem(0x149e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0205
        gbc.setState(0xd2ac, 0xefa3, 0xa720, 0x181d, 0xe288, 0x591a, 0x1, 0x1);
        gbc.writeMem(0xd2ac, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xefa3, gbc.sp());
        EXPECT(0xd2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ac));
        EXPECT(0x3c, gbc.readMem(0xd2ad));
        // CB 3C 0207
        gbc.setState(0xe5c9, 0x25d1, 0xe8b0, 0x7ff7, 0x46f1, 0x99c5, 0x1, 0x0);
        gbc.writeMem(0xe5c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x25d1, gbc.sp());
        EXPECT(0xe5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c9));
        EXPECT(0x3c, gbc.readMem(0xe5ca));
        // CB 3C 0208
        gbc.setState(0xc23f, 0xb2f8, 0xc9d0, 0x416d, 0x5bce, 0x98f2, 0x1, 0x1);
        gbc.writeMem(0xc23f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb2f8, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23f));
        EXPECT(0x3c, gbc.readMem(0xc240));
        // CB 3C 0209
        gbc.setState(0x8341, 0x5578, 0x1f60, 0xd1f3, 0x3964, 0xf463, 0x0, 0x1);
        gbc.writeMem(0x8341, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8341));
        EXPECT(0x3c, gbc.readMem(0x8342));
        // CB 3C 020A
        gbc.setState(0x919a, 0xdc88, 0xfc0, 0x9fb8, 0xbf52, 0x2df8, 0x0, 0x0);
        gbc.writeMem(0x919a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919a));
        EXPECT(0x3c, gbc.readMem(0x919b));
        // CB 3C 020B
        gbc.setState(0x30fd, 0x972a, 0xb7c0, 0xe3e0, 0xbbce, 0x6aae, 0x0, 0x1);
        gbc.writeMem(0x30fd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 020C
        gbc.setState(0x4761, 0xebd4, 0xc360, 0x86f9, 0x3564, 0xb512, 0x1, 0x0);
        gbc.writeMem(0x4761, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xebd4, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 020D
        gbc.setState(0x1088, 0x5461, 0x8390, 0x8b43, 0xd3d0, 0x73d4, 0x0, 0x0);
        gbc.writeMem(0x1088, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5461, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 020E
        gbc.setState(0xbe8e, 0xa856, 0xedf0, 0xdffb, 0xa465, 0x2970, 0x1, 0x0);
        gbc.writeMem(0xbe8e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa856, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8e));
        EXPECT(0x3c, gbc.readMem(0xbe8f));
        // CB 3C 020F
        gbc.setState(0x60a, 0xb8b3, 0xb650, 0xd9db, 0xe8d3, 0x36bb, 0x1, 0x1);
        gbc.writeMem(0x60a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0x60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0210
        gbc.setState(0xe2e, 0x4d6e, 0xaf10, 0x2c84, 0x9ac4, 0x5672, 0x0, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4d6e, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0211
        gbc.setState(0x3f4a, 0xab69, 0xf750, 0xf6db, 0xc81a, 0x34f8, 0x0, 0x0);
        gbc.writeMem(0x3f4a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab69, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0212
        gbc.setState(0xa227, 0x2c26, 0x1260, 0x4338, 0x1ac4, 0xc285, 0x1, 0x1);
        gbc.writeMem(0xa227, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2c26, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa227));
        EXPECT(0x3c, gbc.readMem(0xa228));
        // CB 3C 0214
        gbc.setState(0xc0, 0x953d, 0xcef0, 0xac73, 0xa296, 0x6df3, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x953d, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0215
        gbc.setState(0xb8bb, 0xb25e, 0x79c0, 0xfcbd, 0x3f8f, 0x14bd, 0x0, 0x0);
        gbc.writeMem(0xb8bb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0xb8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bb));
        EXPECT(0x3c, gbc.readMem(0xb8bc));
        // CB 3C 0216
        gbc.setState(0xcc4b, 0xac91, 0xce0, 0x214a, 0x60ee, 0x2649, 0x0, 0x0);
        gbc.writeMem(0xcc4b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4b));
        EXPECT(0x3c, gbc.readMem(0xcc4c));
        // CB 3C 0218
        gbc.setState(0xa55c, 0xcc05, 0x1990, 0x5e37, 0x2d9b, 0x7d52, 0x1, 0x1);
        gbc.writeMem(0xa55c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcc05, gbc.sp());
        EXPECT(0xa55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55c));
        EXPECT(0x3c, gbc.readMem(0xa55d));
        // CB 3C 0219
        gbc.setState(0x794d, 0x732b, 0xba00, 0x7b41, 0x2c4, 0x9b23, 0x0, 0x1);
        gbc.writeMem(0x794d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0x794f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 021B
        gbc.setState(0x51c7, 0xe2a9, 0x27a0, 0xa5eb, 0xfcfa, 0xf3ab, 0x1, 0x1);
        gbc.writeMem(0x51c7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 021C
        gbc.setState(0x5e56, 0x42fa, 0x7030, 0x4564, 0x5f5a, 0x5b46, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x42fa, gbc.sp());
        EXPECT(0x5e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 021D
        gbc.setState(0x4274, 0xdd2d, 0xec60, 0x1e43, 0xf06d, 0xe938, 0x0, 0x1);
        gbc.writeMem(0x4274, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdd2d, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 021E
        gbc.setState(0x50af, 0x4ac3, 0x9950, 0x26ff, 0x9302, 0x177d, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4ac3, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 021F
        gbc.setState(0x610, 0xf2f6, 0x86e0, 0x3323, 0x2ea1, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0x610, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf2f6, gbc.sp());
        EXPECT(0x612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0220
        gbc.setState(0x497, 0x5526, 0x97b0, 0x4755, 0xcf2f, 0x5fe2, 0x1, 0x0);
        gbc.writeMem(0x497, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5526, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0221
        gbc.setState(0x7524, 0x5060, 0xc5a0, 0xdebc, 0x75e, 0x27cb, 0x0, 0x0);
        gbc.writeMem(0x7524, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0222
        gbc.setState(0x394, 0x7f45, 0xf3a0, 0x56e3, 0x8691, 0x6840, 0x1, 0x0);
        gbc.writeMem(0x394, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7f45, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0223
        gbc.setState(0x96c1, 0x41fd, 0x9eb0, 0x1c1e, 0x1d79, 0x8ef3, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x41fd, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c1));
        EXPECT(0x3c, gbc.readMem(0x96c2));
        // CB 3C 0224
        gbc.setState(0x2530, 0xa43c, 0x5c80, 0x8550, 0x3701, 0x9c3c, 0x0, 0x1);
        gbc.writeMem(0x2530, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa43c, gbc.sp());
        EXPECT(0x2532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0225
        gbc.setState(0xbb02, 0x94bc, 0x94c0, 0xfd3d, 0xa541, 0x8b73, 0x0, 0x1);
        gbc.writeMem(0xbb02, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0xbb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb02));
        EXPECT(0x3c, gbc.readMem(0xbb03));
        // CB 3C 0226
        gbc.setState(0xee8a, 0x13b0, 0x960, 0xf53c, 0x2019, 0x4bd2, 0x0, 0x0);
        gbc.writeMem(0xee8a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x13b0, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8a));
        EXPECT(0x3c, gbc.readMem(0xee8b));
        // CB 3C 0227
        gbc.setState(0xb29f, 0x4ea6, 0x68d0, 0xe30c, 0xcf23, 0x8cf7, 0x1, 0x0);
        gbc.writeMem(0xb29f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29f));
        EXPECT(0x3c, gbc.readMem(0xb2a0));
        // CB 3C 0228
        gbc.setState(0xa610, 0x6b5f, 0xeb60, 0x260, 0x6e9a, 0xec10, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6b5f, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa610));
        EXPECT(0x3c, gbc.readMem(0xa611));
        // CB 3C 0229
        gbc.setState(0x750, 0x5523, 0xde60, 0x896f, 0xdd57, 0xf97f, 0x1, 0x1);
        gbc.writeMem(0x750, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0x752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 022A
        gbc.setState(0xc4f0, 0xd8e3, 0x49f0, 0x750c, 0xcbf4, 0x5785, 0x1, 0x0);
        gbc.writeMem(0xc4f0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f0));
        EXPECT(0x3c, gbc.readMem(0xc4f1));
        // CB 3C 022B
        gbc.setState(0xa2e4, 0x96f3, 0x74a0, 0xd61, 0x1eec, 0x46e0, 0x0, 0x1);
        gbc.writeMem(0xa2e4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x96f3, gbc.sp());
        EXPECT(0xa2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e4));
        EXPECT(0x3c, gbc.readMem(0xa2e5));
        // CB 3C 022C
        gbc.setState(0xba1c, 0x5bcb, 0xf6d0, 0xd80a, 0xc6b3, 0x6cf7, 0x0, 0x0);
        gbc.writeMem(0xba1c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1c));
        EXPECT(0x3c, gbc.readMem(0xba1d));
        // CB 3C 022D
        gbc.setState(0xaef3, 0xf46c, 0x9e30, 0x8fc6, 0xb70c, 0x914b, 0x0, 0x0);
        gbc.writeMem(0xaef3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef3));
        EXPECT(0x3c, gbc.readMem(0xaef4));
        // CB 3C 022E
        gbc.setState(0xa0d3, 0x2a9f, 0xb850, 0x417d, 0x87a4, 0x74ad, 0x0, 0x0);
        gbc.writeMem(0xa0d3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0xa0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d3));
        EXPECT(0x3c, gbc.readMem(0xa0d4));
        // CB 3C 0230
        gbc.setState(0x10f1, 0x314f, 0x7eb0, 0x4bcd, 0xc96a, 0xb542, 0x1, 0x1);
        gbc.writeMem(0x10f1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x10f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0231
        gbc.setState(0x4fff, 0x50a6, 0x7460, 0x8981, 0xcdb4, 0xac52, 0x1, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0232
        gbc.setState(0x403b, 0x4bd9, 0x59c0, 0xf24d, 0x6270, 0xbab6, 0x0, 0x1);
        gbc.writeMem(0x403b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4bd9, gbc.sp());
        EXPECT(0x403d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0233
        gbc.setState(0x1d94, 0x30b3, 0xbcd0, 0x6868, 0xf558, 0x3753, 0x1, 0x1);
        gbc.writeMem(0x1d94, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x30b3, gbc.sp());
        EXPECT(0x1d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0234
        gbc.setState(0xd11d, 0x656, 0x6710, 0x12f3, 0x9616, 0x47b1, 0x1, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0xd11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11d));
        EXPECT(0x3c, gbc.readMem(0xd11e));
        // CB 3C 0236
        gbc.setState(0xd2d9, 0x9679, 0xf870, 0xc70, 0xfd7f, 0xf343, 0x1, 0x0);
        gbc.writeMem(0xd2d9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0xd2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d9));
        EXPECT(0x3c, gbc.readMem(0xd2da));
        // CB 3C 0237
        gbc.setState(0x9d1e, 0x4ecc, 0x7e40, 0xcc35, 0x2a41, 0xff72, 0x0, 0x0);
        gbc.writeMem(0x9d1e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4ecc, gbc.sp());
        EXPECT(0x9d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1e));
        EXPECT(0x3c, gbc.readMem(0x9d1f));
        // CB 3C 0238
        gbc.setState(0x9e44, 0x1e1e, 0x2e20, 0xb4b0, 0xd726, 0x89e8, 0x1, 0x1);
        gbc.writeMem(0x9e44, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1e1e, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e44));
        EXPECT(0x3c, gbc.readMem(0x9e45));
        // CB 3C 0239
        gbc.setState(0x4da3, 0x6497, 0xa890, 0x1b1e, 0xbc65, 0xcfc, 0x0, 0x1);
        gbc.writeMem(0x4da3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x4da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 023A
        gbc.setState(0x6f0d, 0x1a91, 0xe430, 0x121b, 0x7ead, 0xc7ac, 0x1, 0x0);
        gbc.writeMem(0x6f0d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 023B
        gbc.setState(0xd44a, 0x16f0, 0x2ff0, 0x182c, 0xe2d, 0xf70e, 0x0, 0x1);
        gbc.writeMem(0xd44a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x16f0, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44a));
        EXPECT(0x3c, gbc.readMem(0xd44b));
        // CB 3C 023C
        gbc.setState(0xcfb3, 0xe2ab, 0x4d70, 0xb59d, 0x368b, 0xd1b5, 0x1, 0x0);
        gbc.writeMem(0xcfb3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe2ab, gbc.sp());
        EXPECT(0xcfb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb3));
        EXPECT(0x3c, gbc.readMem(0xcfb4));
        // CB 3C 023D
        gbc.setState(0xca39, 0xd57b, 0x6ff0, 0xb431, 0xd3f4, 0x2265, 0x0, 0x1);
        gbc.writeMem(0xca39, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd57b, gbc.sp());
        EXPECT(0xca3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca39));
        EXPECT(0x3c, gbc.readMem(0xca3a));
        // CB 3C 023E
        gbc.setState(0x2d0a, 0xf98e, 0x1c20, 0x62f5, 0x420e, 0xbfc3, 0x0, 0x0);
        gbc.writeMem(0x2d0a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf98e, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 023F
        gbc.setState(0x2fc3, 0x748f, 0xa290, 0x7a42, 0xad54, 0x232f, 0x1, 0x1);
        gbc.writeMem(0x2fc3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x748f, gbc.sp());
        EXPECT(0x2fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0240
        gbc.setState(0xb3b3, 0xf965, 0x29b0, 0xd156, 0x556, 0xa8df, 0x1, 0x1);
        gbc.writeMem(0xb3b3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf965, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b3));
        EXPECT(0x3c, gbc.readMem(0xb3b4));
        // CB 3C 0241
        gbc.setState(0x946e, 0xfe5, 0xbbc0, 0x21a6, 0xe2a8, 0xaa76, 0x1, 0x0);
        gbc.writeMem(0x946e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe5, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0x3c, gbc.readMem(0x946f));
        // CB 3C 0242
        gbc.setState(0x9065, 0x5619, 0x9520, 0x7f4d, 0x4620, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0x9065, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5619, gbc.sp());
        EXPECT(0x9067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9065));
        EXPECT(0x3c, gbc.readMem(0x9066));
        // CB 3C 0243
        gbc.setState(0x696d, 0x8b9c, 0xc0a0, 0x9098, 0xbcf7, 0xf64d, 0x0, 0x1);
        gbc.writeMem(0x696d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8b9c, gbc.sp());
        EXPECT(0x696f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0244
        gbc.setState(0x3f82, 0xeec1, 0xec40, 0x856d, 0xe216, 0x9c7a, 0x1, 0x0);
        gbc.writeMem(0x3f82, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeec1, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0245
        gbc.setState(0x2307, 0x23e1, 0xd5f0, 0xddee, 0xe3, 0x9f72, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x2309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0246
        gbc.setState(0x8d3c, 0xe90a, 0x2ea0, 0xc09b, 0xa03d, 0x72ec, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0x3c, gbc.readMem(0x8d3d));
        // CB 3C 0247
        gbc.setState(0x8b03, 0x496c, 0x8ff0, 0xf4ac, 0xe076, 0x2928, 0x1, 0x0);
        gbc.writeMem(0x8b03, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x496c, gbc.sp());
        EXPECT(0x8b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b03));
        EXPECT(0x3c, gbc.readMem(0x8b04));
        // CB 3C 0248
        gbc.setState(0xe05e, 0xeb2b, 0x5960, 0x5066, 0x5cab, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0xe05e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeb2b, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05e));
        EXPECT(0x3c, gbc.readMem(0xe05f));
        // CB 3C 0249
        gbc.setState(0x6614, 0x75c1, 0xd210, 0x6cc0, 0xb578, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0x6614, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x6616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 024A
        gbc.setState(0xcc9b, 0x5cff, 0xaa40, 0x44ae, 0xde9c, 0x4bf8, 0x0, 0x1);
        gbc.writeMem(0xcc9b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5cff, gbc.sp());
        EXPECT(0xcc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9b));
        EXPECT(0x3c, gbc.readMem(0xcc9c));
        // CB 3C 024B
        gbc.setState(0xa828, 0x4237, 0xc850, 0xff3e, 0xa356, 0xac18, 0x0, 0x0);
        gbc.writeMem(0xa828, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4237, gbc.sp());
        EXPECT(0xa82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa828));
        EXPECT(0x3c, gbc.readMem(0xa829));
        // CB 3C 024C
        gbc.setState(0x81f7, 0xba86, 0xfb40, 0x2bda, 0xb52d, 0xfffe, 0x1, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba86, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f7));
        EXPECT(0x3c, gbc.readMem(0x81f8));
        // CB 3C 024D
        gbc.setState(0xe5d9, 0xcd3b, 0x9bf0, 0xa9f4, 0x2156, 0xc5f1, 0x1, 0x0);
        gbc.writeMem(0xe5d9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        EXPECT(0x3c, gbc.readMem(0xe5da));
        // CB 3C 024E
        gbc.setState(0xc968, 0x8a7b, 0xe460, 0x741, 0xa31e, 0x3404, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8a7b, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0x3c, gbc.readMem(0xc969));
        // CB 3C 024F
        gbc.setState(0x49e1, 0x59d7, 0x4ef0, 0xc4c8, 0x9a63, 0x6a99, 0x1, 0x0);
        gbc.writeMem(0x49e1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x59d7, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0250
        gbc.setState(0x1e05, 0xc9be, 0x9bb0, 0x12d5, 0x9faf, 0x9e3, 0x0, 0x1);
        gbc.writeMem(0x1e05, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0251
        gbc.setState(0xc1ad, 0x3443, 0x63b0, 0x717, 0x327, 0xfa53, 0x0, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0x3c, gbc.readMem(0xc1ae));
        // CB 3C 0252
        gbc.setState(0x423e, 0x74f4, 0x270, 0x28bd, 0xc5e4, 0x2630, 0x0, 0x0);
        gbc.writeMem(0x423e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x74f4, gbc.sp());
        EXPECT(0x4240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0253
        gbc.setState(0x1108, 0x5cde, 0x2e0, 0x5043, 0xc302, 0x2787, 0x0, 0x1);
        gbc.writeMem(0x1108, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0x110a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0254
        gbc.setState(0xb60c, 0x8adc, 0x4810, 0x33dd, 0xb2f, 0xe775, 0x1, 0x1);
        gbc.writeMem(0xb60c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8adc, gbc.sp());
        EXPECT(0xb60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60c));
        EXPECT(0x3c, gbc.readMem(0xb60d));
        // CB 3C 0255
        gbc.setState(0x1dda, 0xc624, 0xfbc0, 0x9584, 0xefde, 0x3548, 0x1, 0x0);
        gbc.writeMem(0x1dda, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0x1ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0256
        gbc.setState(0x369c, 0xbf17, 0xe990, 0x2a4f, 0x905a, 0x7e4a, 0x0, 0x0);
        gbc.writeMem(0x369c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbf17, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0257
        gbc.setState(0xc7d6, 0x1e63, 0xe890, 0xb760, 0x8a25, 0x501b, 0x0, 0x1);
        gbc.writeMem(0xc7d6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1e63, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d6));
        EXPECT(0x3c, gbc.readMem(0xc7d7));
        // CB 3C 0258
        gbc.setState(0x22bb, 0xe20a, 0xde0, 0xe200, 0x515e, 0xbc67, 0x0, 0x1);
        gbc.writeMem(0x22bb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe20a, gbc.sp());
        EXPECT(0x22bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0259
        gbc.setState(0x70b7, 0xf217, 0xea10, 0x6ca0, 0xc46e, 0x1140, 0x1, 0x1);
        gbc.writeMem(0x70b7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 025A
        gbc.setState(0x2cbc, 0x7544, 0xfd30, 0xf0b2, 0x818f, 0x89c1, 0x0, 0x1);
        gbc.writeMem(0x2cbc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 025B
        gbc.setState(0x2fd1, 0xc483, 0x2390, 0x727f, 0x9e7e, 0xbc03, 0x1, 0x1);
        gbc.writeMem(0x2fd1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 025C
        gbc.setState(0x2800, 0xff68, 0xe870, 0x7b76, 0x9fce, 0x5a50, 0x1, 0x0);
        gbc.writeMem(0x2800, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xff68, gbc.sp());
        EXPECT(0x2802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 025D
        gbc.setState(0x51a7, 0xf085, 0x9250, 0x9bb6, 0x94f, 0xc38a, 0x0, 0x0);
        gbc.writeMem(0x51a7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0x51a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 025E
        gbc.setState(0xbcda, 0x9b52, 0xf2b0, 0xabf5, 0x21e5, 0xc540, 0x1, 0x1);
        gbc.writeMem(0xbcda, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9b52, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcda));
        EXPECT(0x3c, gbc.readMem(0xbcdb));
        // CB 3C 025F
        gbc.setState(0xce50, 0xd016, 0x1140, 0xba4d, 0xd045, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xce50, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd016, gbc.sp());
        EXPECT(0xce52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce50));
        EXPECT(0x3c, gbc.readMem(0xce51));
        // CB 3C 0260
        gbc.setState(0x3f0f, 0x6cce, 0x5330, 0x20a9, 0x1516, 0xc5d6, 0x0, 0x0);
        gbc.writeMem(0x3f0f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0x3f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0261
        gbc.setState(0xd750, 0x15d9, 0x1b20, 0xca4d, 0x1e0a, 0x9abe, 0x0, 0x0);
        gbc.writeMem(0xd750, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd750));
        EXPECT(0x3c, gbc.readMem(0xd751));
        // CB 3C 0262
        gbc.setState(0xe44b, 0x20d6, 0xded0, 0x879, 0x13b5, 0x7a9c, 0x0, 0x0);
        gbc.writeMem(0xe44b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x20d6, gbc.sp());
        EXPECT(0xe44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe44b));
        EXPECT(0x3c, gbc.readMem(0xe44c));
        // CB 3C 0263
        gbc.setState(0x562b, 0x77bd, 0x3d0, 0xb839, 0x2037, 0xef33, 0x0, 0x0);
        gbc.writeMem(0x562b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0x562d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0264
        gbc.setState(0xaf97, 0xa149, 0x5fc0, 0x2ac2, 0xf93d, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0xaf97, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa149, gbc.sp());
        EXPECT(0xaf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf97));
        EXPECT(0x3c, gbc.readMem(0xaf98));
        // CB 3C 0265
        gbc.setState(0x4fa3, 0xb2db, 0xec70, 0x5a5f, 0xbf38, 0x9dfb, 0x1, 0x1);
        gbc.writeMem(0x4fa3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0266
        gbc.setState(0x9712, 0x2b8e, 0xeea0, 0xf855, 0xc0a8, 0x4bb8, 0x0, 0x0);
        gbc.writeMem(0x9712, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2b8e, gbc.sp());
        EXPECT(0x9714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9712));
        EXPECT(0x3c, gbc.readMem(0x9713));
        // CB 3C 0267
        gbc.setState(0x853e, 0x1b32, 0x4f30, 0x2638, 0xf093, 0xb032, 0x1, 0x0);
        gbc.writeMem(0x853e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853e));
        EXPECT(0x3c, gbc.readMem(0x853f));
        // CB 3C 0268
        gbc.setState(0x3315, 0x8fa2, 0xd900, 0x1b35, 0x879e, 0x9d39, 0x1, 0x0);
        gbc.writeMem(0x3315, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8fa2, gbc.sp());
        EXPECT(0x3317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0269
        gbc.setState(0x9bc0, 0x5177, 0x9f60, 0xb500, 0xe566, 0x9626, 0x1, 0x0);
        gbc.writeMem(0x9bc0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5177, gbc.sp());
        EXPECT(0x9bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc0));
        EXPECT(0x3c, gbc.readMem(0x9bc1));
        // CB 3C 026A
        gbc.setState(0x4366, 0x45ac, 0x4990, 0x7e36, 0xd215, 0x7250, 0x0, 0x0);
        gbc.writeMem(0x4366, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x45ac, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 026B
        gbc.setState(0xcf8b, 0x1520, 0xf8a0, 0xf0d5, 0xfac2, 0x1ef2, 0x1, 0x1);
        gbc.writeMem(0xcf8b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1520, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8b));
        EXPECT(0x3c, gbc.readMem(0xcf8c));
        // CB 3C 026C
        gbc.setState(0x1c32, 0xad8, 0xb9e0, 0xdc1f, 0xd1e6, 0x40a7, 0x1, 0x0);
        gbc.writeMem(0x1c32, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad8, gbc.sp());
        EXPECT(0x1c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 026D
        gbc.setState(0x5d3f, 0x6be, 0x8560, 0xfc1c, 0xd6b7, 0x6e08, 0x0, 0x0);
        gbc.writeMem(0x5d3f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6be, gbc.sp());
        EXPECT(0x5d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 026E
        gbc.setState(0x2d11, 0xd0f8, 0x71e0, 0xa099, 0x1579, 0xbebc, 0x0, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd0f8, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0270
        gbc.setState(0x815a, 0x8c54, 0x92b0, 0x456b, 0x1d47, 0xa2a, 0x1, 0x0);
        gbc.writeMem(0x815a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815a));
        EXPECT(0x3c, gbc.readMem(0x815b));
        // CB 3C 0271
        gbc.setState(0x9b0b, 0xa6f9, 0xa8f0, 0xd36c, 0x1e54, 0xf3ff, 0x0, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0x3c, gbc.readMem(0x9b0c));
        // CB 3C 0272
        gbc.setState(0x70d3, 0xf78a, 0xa830, 0xe7fb, 0x55a1, 0x9061, 0x1, 0x1);
        gbc.writeMem(0x70d3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf78a, gbc.sp());
        EXPECT(0x70d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0273
        gbc.setState(0x5933, 0x71ea, 0x84f0, 0xaa67, 0x6ad0, 0x1063, 0x0, 0x1);
        gbc.writeMem(0x5933, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x71ea, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0274
        gbc.setState(0x49e5, 0xca6a, 0x4410, 0x7c5c, 0xd258, 0x8d09, 0x1, 0x0);
        gbc.writeMem(0x49e5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xca6a, gbc.sp());
        EXPECT(0x49e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0275
        gbc.setState(0xad35, 0x42, 0x22d0, 0x7afd, 0xed2b, 0x84ad, 0x1, 0x0);
        gbc.writeMem(0xad35, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x42, gbc.sp());
        EXPECT(0xad37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad35));
        EXPECT(0x3c, gbc.readMem(0xad36));
        // CB 3C 0276
        gbc.setState(0xc63f, 0xeba5, 0x62b0, 0xd895, 0x3d89, 0xa2eb, 0x0, 0x1);
        gbc.writeMem(0xc63f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeba5, gbc.sp());
        EXPECT(0xc641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63f));
        EXPECT(0x3c, gbc.readMem(0xc640));
        // CB 3C 0277
        gbc.setState(0x119b, 0xfdf7, 0xcac0, 0x2ecc, 0x41de, 0xdbaa, 0x1, 0x0);
        gbc.writeMem(0x119b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfdf7, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0278
        gbc.setState(0xdc36, 0x8c3d, 0xb3a0, 0xbb13, 0x2691, 0xa748, 0x1, 0x1);
        gbc.writeMem(0xdc36, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8c3d, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc36));
        EXPECT(0x3c, gbc.readMem(0xdc37));
        // CB 3C 0279
        gbc.setState(0xa520, 0xfb40, 0x5f10, 0x40fc, 0xc6c7, 0xc418, 0x0, 0x0);
        gbc.writeMem(0xa520, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa520));
        EXPECT(0x3c, gbc.readMem(0xa521));
        // CB 3C 027A
        gbc.setState(0x2c42, 0x782, 0x1760, 0xf3d9, 0xbc49, 0xa57c, 0x0, 0x0);
        gbc.writeMem(0x2c42, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 027B
        gbc.setState(0x2db5, 0x289d, 0xbd60, 0x2187, 0xac6a, 0xdb49, 0x1, 0x1);
        gbc.writeMem(0x2db5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 027D
        gbc.setState(0xa8fb, 0x24e2, 0xa220, 0x2cd5, 0x74c4, 0x5246, 0x1, 0x0);
        gbc.writeMem(0xa8fb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x24e2, gbc.sp());
        EXPECT(0xa8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fb));
        EXPECT(0x3c, gbc.readMem(0xa8fc));
        // CB 3C 027E
        gbc.setState(0x1f0c, 0xdcf4, 0x44a0, 0x4dd5, 0x7e80, 0x6a9f, 0x1, 0x1);
        gbc.writeMem(0x1f0c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdcf4, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 027F
        gbc.setState(0x84e6, 0xa4d3, 0x9e10, 0x4580, 0x2283, 0x5de5, 0x1, 0x1);
        gbc.writeMem(0x84e6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e6));
        EXPECT(0x3c, gbc.readMem(0x84e7));
        // CB 3C 0280
        gbc.setState(0x685f, 0xefba, 0x9a20, 0xf958, 0x7969, 0xe9d8, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xefba, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0281
        gbc.setState(0x26f0, 0x7f95, 0x2270, 0x7ca, 0xb9a8, 0x924c, 0x0, 0x1);
        gbc.writeMem(0x26f0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7f95, gbc.sp());
        EXPECT(0x26f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0282
        gbc.setState(0x7b1f, 0x6261, 0xfa40, 0x992b, 0x1234, 0xba3d, 0x0, 0x1);
        gbc.writeMem(0x7b1f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6261, gbc.sp());
        EXPECT(0x7b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0283
        gbc.setState(0x98b9, 0x3bd6, 0x99e0, 0xb52e, 0x3a6, 0x442e, 0x1, 0x1);
        gbc.writeMem(0x98b9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x98bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b9));
        EXPECT(0x3c, gbc.readMem(0x98ba));
        // CB 3C 0284
        gbc.setState(0x48fa, 0xf2af, 0xa350, 0xa5d5, 0x891a, 0x9635, 0x1, 0x1);
        gbc.writeMem(0x48fa, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x48fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0285
        gbc.setState(0x408d, 0xc385, 0xc7d0, 0x4811, 0xae70, 0x304b, 0x1, 0x1);
        gbc.writeMem(0x408d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc385, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0286
        gbc.setState(0x4005, 0xe34f, 0x2bb0, 0x584, 0xf73, 0x1a93, 0x0, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0287
        gbc.setState(0x2586, 0xf0a4, 0xba30, 0x6054, 0xf91b, 0x164b, 0x0, 0x1);
        gbc.writeMem(0x2586, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf0a4, gbc.sp());
        EXPECT(0x2588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0288
        gbc.setState(0xcec6, 0xfcf8, 0x8060, 0xde9a, 0x922c, 0x319, 0x1, 0x1);
        gbc.writeMem(0xcec6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfcf8, gbc.sp());
        EXPECT(0xcec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec6));
        EXPECT(0x3c, gbc.readMem(0xcec7));
        // CB 3C 0289
        gbc.setState(0x669d, 0x752, 0x5a20, 0xc6b7, 0x5a68, 0xccdd, 0x0, 0x1);
        gbc.writeMem(0x669d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x752, gbc.sp());
        EXPECT(0x669f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 028B
        gbc.setState(0x1011, 0xf5b6, 0xf9e0, 0xdea0, 0xeca2, 0x178d, 0x0, 0x0);
        gbc.writeMem(0x1011, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf5b6, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 028C
        gbc.setState(0x205e, 0x9ec, 0xbec0, 0xb8e7, 0x66b5, 0xb163, 0x1, 0x1);
        gbc.writeMem(0x205e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9ec, gbc.sp());
        EXPECT(0x2060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 028D
        gbc.setState(0x3a68, 0x2950, 0x31b0, 0xa88b, 0x62fe, 0x95b0, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0290
        gbc.setState(0xe9a5, 0xe14d, 0x5180, 0xf33c, 0x306, 0x27f9, 0x1, 0x0);
        gbc.writeMem(0xe9a5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe14d, gbc.sp());
        EXPECT(0xe9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a5));
        EXPECT(0x3c, gbc.readMem(0xe9a6));
        // CB 3C 0291
        gbc.setState(0x1968, 0x1922, 0x7810, 0xc598, 0xfacc, 0xa6e7, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1922, gbc.sp());
        EXPECT(0x196a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0293
        gbc.setState(0xbf84, 0x430a, 0x81a0, 0x8163, 0xefa0, 0xf976, 0x0, 0x1);
        gbc.writeMem(0xbf84, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x430a, gbc.sp());
        EXPECT(0xbf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf84));
        EXPECT(0x3c, gbc.readMem(0xbf85));
        // CB 3C 0294
        gbc.setState(0xa1bc, 0x5ed2, 0xf550, 0x5f05, 0xecb5, 0x2fba, 0x0, 0x1);
        gbc.writeMem(0xa1bc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5ed2, gbc.sp());
        EXPECT(0xa1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bc));
        EXPECT(0x3c, gbc.readMem(0xa1bd));
        // CB 3C 0295
        gbc.setState(0x83b5, 0xd977, 0x9cc0, 0x3178, 0x717c, 0xfce, 0x1, 0x1);
        gbc.writeMem(0x83b5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0x83b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b5));
        EXPECT(0x3c, gbc.readMem(0x83b6));
        // CB 3C 0296
        gbc.setState(0x9389, 0xd34, 0xc260, 0xa9bf, 0x85e7, 0x3599, 0x0, 0x0);
        gbc.writeMem(0x9389, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd34, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9389));
        EXPECT(0x3c, gbc.readMem(0x938a));
        // CB 3C 0297
        gbc.setState(0x9234, 0xfacd, 0x1580, 0x65be, 0x3399, 0x43b4, 0x0, 0x1);
        gbc.writeMem(0x9234, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0x9236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9234));
        EXPECT(0x3c, gbc.readMem(0x9235));
        // CB 3C 0298
        gbc.setState(0x9ecc, 0xb454, 0xf090, 0xa9a8, 0x7bfb, 0x4f97, 0x0, 0x0);
        gbc.writeMem(0x9ecc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb454, gbc.sp());
        EXPECT(0x9ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ecc));
        EXPECT(0x3c, gbc.readMem(0x9ecd));
        // CB 3C 0299
        gbc.setState(0x18cb, 0x2959, 0x42c0, 0xac5e, 0x139e, 0x353a, 0x0, 0x0);
        gbc.writeMem(0x18cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2959, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 029A
        gbc.setState(0x8695, 0x9c7b, 0x7560, 0xa4c9, 0x92c3, 0x13ec, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9c7b, gbc.sp());
        EXPECT(0x8697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8695));
        EXPECT(0x3c, gbc.readMem(0x8696));
        // CB 3C 029B
        gbc.setState(0x50e1, 0x46d6, 0xa5b0, 0xe465, 0x36e6, 0x1fe, 0x0, 0x1);
        gbc.writeMem(0x50e1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x46d6, gbc.sp());
        EXPECT(0x50e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 029C
        gbc.setState(0x7896, 0x507a, 0x4110, 0x3001, 0xb9d3, 0xf950, 0x0, 0x1);
        gbc.writeMem(0x7896, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0x7898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 029E
        gbc.setState(0x1e2d, 0xe90c, 0xa850, 0xfd56, 0x53ed, 0x3669, 0x1, 0x1);
        gbc.writeMem(0x1e2d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 029F
        gbc.setState(0xbbbb, 0x3e8, 0xdb60, 0xbbe1, 0x3c58, 0xaa68, 0x1, 0x1);
        gbc.writeMem(0xbbbb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e8, gbc.sp());
        EXPECT(0xbbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbb));
        EXPECT(0x3c, gbc.readMem(0xbbbc));
        // CB 3C 02A0
        gbc.setState(0xddc5, 0xd30b, 0x2a10, 0x66f6, 0x8ac2, 0x9123, 0x1, 0x1);
        gbc.writeMem(0xddc5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd30b, gbc.sp());
        EXPECT(0xddc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc5));
        EXPECT(0x3c, gbc.readMem(0xddc6));
        // CB 3C 02A1
        gbc.setState(0x51e1, 0x4c2b, 0xfa00, 0x4c74, 0xb7a6, 0x2f95, 0x0, 0x0);
        gbc.writeMem(0x51e1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02A2
        gbc.setState(0xbc8b, 0xe11d, 0x2180, 0x3fc8, 0x21cc, 0x7ddf, 0x1, 0x1);
        gbc.writeMem(0xbc8b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0xbc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8b));
        EXPECT(0x3c, gbc.readMem(0xbc8c));
        // CB 3C 02A3
        gbc.setState(0x537f, 0x5899, 0xbd80, 0x9606, 0xe71e, 0x9cd7, 0x0, 0x0);
        gbc.writeMem(0x537f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x5381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02A4
        gbc.setState(0xceee, 0x407, 0x1200, 0x1bad, 0x7dcc, 0x1b5c, 0x0, 0x0);
        gbc.writeMem(0xceee, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x407, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceee));
        EXPECT(0x3c, gbc.readMem(0xceef));
        // CB 3C 02A5
        gbc.setState(0x5680, 0xe88, 0xa3a0, 0x9baa, 0xe848, 0x587a, 0x1, 0x0);
        gbc.writeMem(0x5680, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe88, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02A6
        gbc.setState(0x4fed, 0xa0da, 0x2b70, 0xf384, 0x6b7f, 0x6f5f, 0x0, 0x1);
        gbc.writeMem(0x4fed, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa0da, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02A7
        gbc.setState(0xddf1, 0xbc9e, 0x3b40, 0x5157, 0xadb, 0x9049, 0x0, 0x1);
        gbc.writeMem(0xddf1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0xddf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf1));
        EXPECT(0x3c, gbc.readMem(0xddf2));
        // CB 3C 02A8
        gbc.setState(0x7fc1, 0x945f, 0x39a0, 0x194d, 0x891e, 0x9c59, 0x0, 0x1);
        gbc.writeMem(0x7fc1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02A9
        gbc.setState(0x258f, 0x9f9, 0xd0, 0xa790, 0x3b2, 0x1422, 0x1, 0x1);
        gbc.writeMem(0x258f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x2591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02AA
        gbc.setState(0xd1bd, 0x893, 0xbb40, 0x1841, 0x341e, 0xf5f6, 0x1, 0x1);
        gbc.writeMem(0xd1bd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x893, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x3c, gbc.readMem(0xd1be));
        // CB 3C 02AB
        gbc.setState(0x627b, 0xbc02, 0x8320, 0x53b0, 0xc972, 0x439f, 0x0, 0x1);
        gbc.writeMem(0x627b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbc02, gbc.sp());
        EXPECT(0x627d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02AC
        gbc.setState(0xb09d, 0x654b, 0x2f60, 0x6aa6, 0x9107, 0x5247, 0x0, 0x0);
        gbc.writeMem(0xb09d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x654b, gbc.sp());
        EXPECT(0xb09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09d));
        EXPECT(0x3c, gbc.readMem(0xb09e));
        // CB 3C 02AD
        gbc.setState(0x7e25, 0x822c, 0x5b70, 0xaeb0, 0x854, 0xd7d1, 0x0, 0x0);
        gbc.writeMem(0x7e25, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x822c, gbc.sp());
        EXPECT(0x7e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02AE
        gbc.setState(0x6a97, 0x1a0, 0x5ee0, 0x73fa, 0x4672, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02AF
        gbc.setState(0x8ed0, 0xe6da, 0x1a50, 0x728f, 0xfdcf, 0x3047, 0x1, 0x0);
        gbc.writeMem(0x8ed0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe6da, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed0));
        EXPECT(0x3c, gbc.readMem(0x8ed1));
        // CB 3C 02B0
        gbc.setState(0x2412, 0x2c47, 0xab80, 0xb1ce, 0xda6a, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0x2412, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2c47, gbc.sp());
        EXPECT(0x2414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02B2
        gbc.setState(0x4c40, 0xba7d, 0x6a80, 0xf8d, 0x5468, 0x82ab, 0x0, 0x0);
        gbc.writeMem(0x4c40, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0x4c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02B4
        gbc.setState(0x1e0d, 0xd4a0, 0x290, 0xb53c, 0xd068, 0x5ad, 0x0, 0x0);
        gbc.writeMem(0x1e0d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4a0, gbc.sp());
        EXPECT(0x1e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02B5
        gbc.setState(0x440f, 0xd5fc, 0x7040, 0xeb8, 0x5800, 0x5ed, 0x1, 0x1);
        gbc.writeMem(0x440f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02B6
        gbc.setState(0xbce0, 0xd104, 0xdd50, 0x9349, 0x236d, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xbce0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd104, gbc.sp());
        EXPECT(0xbce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce0));
        EXPECT(0x3c, gbc.readMem(0xbce1));
        // CB 3C 02B7
        gbc.setState(0x93e1, 0x617c, 0xb0e0, 0xc939, 0x39ec, 0x54bf, 0x1, 0x0);
        gbc.writeMem(0x93e1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0x93e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e1));
        EXPECT(0x3c, gbc.readMem(0x93e2));
        // CB 3C 02B8
        gbc.setState(0xbf9a, 0x7ea6, 0xdb70, 0x80e2, 0xea3, 0xfab3, 0x0, 0x1);
        gbc.writeMem(0xbf9a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7ea6, gbc.sp());
        EXPECT(0xbf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9a));
        EXPECT(0x3c, gbc.readMem(0xbf9b));
        // CB 3C 02B9
        gbc.setState(0xc99a, 0xd78c, 0x8020, 0xceac, 0x88a, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0xc99a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd78c, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99a));
        EXPECT(0x3c, gbc.readMem(0xc99b));
        // CB 3C 02BA
        gbc.setState(0x6f33, 0xb44b, 0x4390, 0xca38, 0x9b05, 0xa231, 0x1, 0x1);
        gbc.writeMem(0x6f33, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0x6f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02BB
        gbc.setState(0x91b0, 0xe6f5, 0x7dd0, 0x8b1d, 0xbaea, 0xae6f, 0x0, 0x0);
        gbc.writeMem(0x91b0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe6f5, gbc.sp());
        EXPECT(0x91b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b0));
        EXPECT(0x3c, gbc.readMem(0x91b1));
        // CB 3C 02BC
        gbc.setState(0x7533, 0x987, 0x5b10, 0xfc88, 0x6f64, 0xb4ce, 0x0, 0x1);
        gbc.writeMem(0x7533, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x987, gbc.sp());
        EXPECT(0x7535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02BD
        gbc.setState(0xb589, 0xc4f7, 0xf8d0, 0x3d0c, 0x19f4, 0x2539, 0x0, 0x1);
        gbc.writeMem(0xb589, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb589));
        EXPECT(0x3c, gbc.readMem(0xb58a));
        // CB 3C 02BE
        gbc.setState(0xcf78, 0xcbe5, 0x9130, 0xbec3, 0x8878, 0x33c2, 0x0, 0x1);
        gbc.writeMem(0xcf78, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcbe5, gbc.sp());
        EXPECT(0xcf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf78));
        EXPECT(0x3c, gbc.readMem(0xcf79));
        // CB 3C 02BF
        gbc.setState(0x47e, 0xa95d, 0x5310, 0xb8d2, 0x12d4, 0xcb51, 0x1, 0x0);
        gbc.writeMem(0x47e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02C0
        gbc.setState(0x99f5, 0x9df3, 0xad40, 0xdb1a, 0xa51f, 0x9cd3, 0x1, 0x1);
        gbc.writeMem(0x99f5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0x99f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f5));
        EXPECT(0x3c, gbc.readMem(0x99f6));
        // CB 3C 02C1
        gbc.setState(0x41b7, 0xf4b5, 0x27b0, 0xa3c0, 0x6b15, 0x3ce4, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf4b5, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02C2
        gbc.setState(0x4a40, 0x2268, 0x2b80, 0x98f6, 0x6b01, 0x9844, 0x0, 0x0);
        gbc.writeMem(0x4a40, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2268, gbc.sp());
        EXPECT(0x4a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02C3
        gbc.setState(0x935d, 0x823f, 0x5a30, 0x5604, 0xbc64, 0xe587, 0x1, 0x0);
        gbc.writeMem(0x935d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x823f, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935d));
        EXPECT(0x3c, gbc.readMem(0x935e));
        // CB 3C 02C4
        gbc.setState(0x1def, 0xf110, 0x1000, 0xf6f5, 0x7ac, 0xea8, 0x1, 0x1);
        gbc.writeMem(0x1def, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf110, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02C5
        gbc.setState(0x3289, 0xcc7e, 0x4e80, 0x2741, 0xc21b, 0x5560, 0x0, 0x0);
        gbc.writeMem(0x3289, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc7e, gbc.sp());
        EXPECT(0x328b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02C6
        gbc.setState(0x5ad0, 0xc4d1, 0x8310, 0x57d0, 0x1b18, 0xb1e0, 0x1, 0x0);
        gbc.writeMem(0x5ad0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02C7
        gbc.setState(0x6f08, 0x7a0e, 0x8740, 0xdc7b, 0xf25c, 0x1ff0, 0x0, 0x1);
        gbc.writeMem(0x6f08, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7a0e, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02C8
        gbc.setState(0x887c, 0xbe0c, 0xdd10, 0x6e40, 0xd9a9, 0x2d, 0x1, 0x1);
        gbc.writeMem(0x887c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887c));
        EXPECT(0x3c, gbc.readMem(0x887d));
        // CB 3C 02C9
        gbc.setState(0x9132, 0x594b, 0x3940, 0xa9fc, 0x378, 0x7786, 0x1, 0x0);
        gbc.writeMem(0x9132, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x594b, gbc.sp());
        EXPECT(0x9134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9132));
        EXPECT(0x3c, gbc.readMem(0x9133));
        // CB 3C 02CA
        gbc.setState(0x8576, 0xf955, 0xd460, 0xfed9, 0x74d3, 0x15e9, 0x1, 0x0);
        gbc.writeMem(0x8576, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8576));
        EXPECT(0x3c, gbc.readMem(0x8577));
        // CB 3C 02CB
        gbc.setState(0x9522, 0xcad5, 0x5e00, 0x7447, 0x204f, 0xb978, 0x0, 0x1);
        gbc.writeMem(0x9522, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9522));
        EXPECT(0x3c, gbc.readMem(0x9523));
        // CB 3C 02CC
        gbc.setState(0x7b49, 0x4ff8, 0x7150, 0x4620, 0xc934, 0xc6ff, 0x0, 0x1);
        gbc.writeMem(0x7b49, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4ff8, gbc.sp());
        EXPECT(0x7b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02CD
        gbc.setState(0x6ab5, 0x38c8, 0x19c0, 0xcd, 0xe18d, 0x3615, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x38c8, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02CE
        gbc.setState(0x4607, 0x880d, 0x8dc0, 0x4096, 0x4a05, 0x17b9, 0x1, 0x0);
        gbc.writeMem(0x4607, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02CF
        gbc.setState(0xa929, 0x2974, 0x98f0, 0xbe75, 0x6906, 0xf4c6, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0xa92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa929));
        EXPECT(0x3c, gbc.readMem(0xa92a));
        // CB 3C 02D1
        gbc.setState(0xe7c0, 0x850f, 0x9fc0, 0x62a9, 0xbffa, 0x92b1, 0x1, 0x0);
        gbc.writeMem(0xe7c0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c0));
        EXPECT(0x3c, gbc.readMem(0xe7c1));
        // CB 3C 02D2
        gbc.setState(0x6b3d, 0xb4f1, 0x5310, 0x737, 0x4df6, 0x935e, 0x0, 0x0);
        gbc.writeMem(0x6b3d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02D3
        gbc.setState(0xb18b, 0xa0a0, 0x5a50, 0xe112, 0xa43, 0x1120, 0x0, 0x1);
        gbc.writeMem(0xb18b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa0a0, gbc.sp());
        EXPECT(0xb18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18b));
        EXPECT(0x3c, gbc.readMem(0xb18c));
        // CB 3C 02D4
        gbc.setState(0x1042, 0x1ea4, 0xaa60, 0x9566, 0xa88, 0xa64c, 0x1, 0x1);
        gbc.writeMem(0x1042, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0x1044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02D5
        gbc.setState(0x7c53, 0x2284, 0x100, 0xa9ad, 0xa46e, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0x7c53, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2284, gbc.sp());
        EXPECT(0x7c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02D6
        gbc.setState(0x3747, 0x9f6c, 0x82a0, 0x74b0, 0x9c13, 0x1a9f, 0x1, 0x1);
        gbc.writeMem(0x3747, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0x3749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02D7
        gbc.setState(0x8505, 0xb029, 0xdc30, 0x221b, 0x8280, 0xc196, 0x1, 0x1);
        gbc.writeMem(0x8505, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8505));
        EXPECT(0x3c, gbc.readMem(0x8506));
        // CB 3C 02D8
        gbc.setState(0x66a8, 0xf9f, 0xf420, 0x7a3f, 0xbff2, 0x4e52, 0x1, 0x1);
        gbc.writeMem(0x66a8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0x66aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02D9
        gbc.setState(0x5599, 0x90d9, 0x32e0, 0x1bbe, 0xfad3, 0xe895, 0x1, 0x1);
        gbc.writeMem(0x5599, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x90d9, gbc.sp());
        EXPECT(0x559b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02DA
        gbc.setState(0x4ed, 0x9e6b, 0xc6c0, 0x7754, 0x5138, 0x9942, 0x0, 0x1);
        gbc.writeMem(0x4ed, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0x4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02DC
        gbc.setState(0xc2a, 0x1879, 0x3a80, 0x2128, 0x993a, 0x5258, 0x0, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1879, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02DD
        gbc.setState(0x6dd2, 0xd947, 0x60e0, 0x312e, 0x4dce, 0x4c7c, 0x0, 0x0);
        gbc.writeMem(0x6dd2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02DE
        gbc.setState(0x3bf6, 0xba94, 0x9910, 0x363f, 0x12e3, 0xc3a5, 0x1, 0x1);
        gbc.writeMem(0x3bf6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0x3bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02DF
        gbc.setState(0x3cec, 0xdd79, 0x2e80, 0x6991, 0x1394, 0x4a2c, 0x0, 0x0);
        gbc.writeMem(0x3cec, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd79, gbc.sp());
        EXPECT(0x3cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02E0
        gbc.setState(0x72f, 0x3eec, 0x120, 0x9b24, 0xa98, 0x2220, 0x1, 0x1);
        gbc.writeMem(0x72f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3eec, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02E1
        gbc.setState(0x5ab3, 0x1342, 0x8ae0, 0x585d, 0xe4f2, 0xcacf, 0x1, 0x1);
        gbc.writeMem(0x5ab3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0x5ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02E3
        gbc.setState(0x3570, 0x50, 0x6540, 0xe732, 0xd564, 0x226, 0x1, 0x0);
        gbc.writeMem(0x3570, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x50, gbc.sp());
        EXPECT(0x3572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02E4
        gbc.setState(0x5efd, 0x6d94, 0xa460, 0xa824, 0x8ad0, 0x4d31, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02E5
        gbc.setState(0xc933, 0xfe98, 0xca40, 0x2a54, 0x95c2, 0x79bc, 0x1, 0x0);
        gbc.writeMem(0xc933, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfe98, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc933));
        EXPECT(0x3c, gbc.readMem(0xc934));
        // CB 3C 02E6
        gbc.setState(0x8002, 0x292, 0x4750, 0x5a17, 0x7b4e, 0xd258, 0x0, 0x0);
        gbc.writeMem(0x8002, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0x3c, gbc.readMem(0x8003));
        // CB 3C 02E7
        gbc.setState(0xb14b, 0xbfca, 0x5fe0, 0xecb8, 0x1aa9, 0x1fc1, 0x1, 0x0);
        gbc.writeMem(0xb14b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbfca, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14b));
        EXPECT(0x3c, gbc.readMem(0xb14c));
        // CB 3C 02E8
        gbc.setState(0x25f3, 0xcd3f, 0xce50, 0xe448, 0xae1d, 0x3708, 0x0, 0x0);
        gbc.writeMem(0x25f3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd3f, gbc.sp());
        EXPECT(0x25f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02E9
        gbc.setState(0xe622, 0x7731, 0x5dd0, 0xe41e, 0x5901, 0x5277, 0x1, 0x0);
        gbc.writeMem(0xe622, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7731, gbc.sp());
        EXPECT(0xe624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe622));
        EXPECT(0x3c, gbc.readMem(0xe623));
        // CB 3C 02EA
        gbc.setState(0x64c, 0x74cb, 0x65a0, 0x5200, 0xd009, 0x5146, 0x0, 0x1);
        gbc.writeMem(0x64c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x74cb, gbc.sp());
        EXPECT(0x64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02EB
        gbc.setState(0x1296, 0xdb25, 0x5640, 0x4f0a, 0x91b5, 0x264e, 0x0, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02EC
        gbc.setState(0x136b, 0x153e, 0x2e90, 0x2cf7, 0x79bc, 0x7063, 0x1, 0x0);
        gbc.writeMem(0x136b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x153e, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02ED
        gbc.setState(0xd5d5, 0xdad2, 0x53c0, 0x5af3, 0xe798, 0x482b, 0x1, 0x0);
        gbc.writeMem(0xd5d5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdad2, gbc.sp());
        EXPECT(0xd5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d5));
        EXPECT(0x3c, gbc.readMem(0xd5d6));
        // CB 3C 02EE
        gbc.setState(0xb0d7, 0xcc85, 0xcad0, 0x8667, 0x58f3, 0xbc14, 0x1, 0x1);
        gbc.writeMem(0xb0d7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0xb0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d7));
        EXPECT(0x3c, gbc.readMem(0xb0d8));
        // CB 3C 02EF
        gbc.setState(0x8eed, 0xbcd4, 0x2170, 0x48e9, 0x29d5, 0xa652, 0x1, 0x0);
        gbc.writeMem(0x8eed, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbcd4, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eed));
        EXPECT(0x3c, gbc.readMem(0x8eee));
        // CB 3C 02F0
        gbc.setState(0x5048, 0xc026, 0xb7b0, 0x1ac9, 0x59e0, 0x3b13, 0x1, 0x1);
        gbc.writeMem(0x5048, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0x504a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02F1
        gbc.setState(0xa755, 0x8825, 0xc340, 0x3686, 0xd9dd, 0x2cbb, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8825, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa755));
        EXPECT(0x3c, gbc.readMem(0xa756));
        // CB 3C 02F2
        gbc.setState(0x3aa5, 0x4ff1, 0xe540, 0x4d43, 0x56d7, 0x9695, 0x1, 0x0);
        gbc.writeMem(0x3aa5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0x3aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02F3
        gbc.setState(0x77ce, 0xcca0, 0xbc70, 0x7b95, 0x2ce4, 0xb9e4, 0x1, 0x1);
        gbc.writeMem(0x77ce, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x77d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02F5
        gbc.setState(0x6ee0, 0xfba5, 0x5690, 0x3574, 0xb0a7, 0x79e2, 0x1, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfba5, gbc.sp());
        EXPECT(0x6ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02F6
        gbc.setState(0x3f54, 0xac62, 0xe0c0, 0xa6cb, 0xd9ba, 0x437f, 0x1, 0x0);
        gbc.writeMem(0x3f54, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02F7
        gbc.setState(0x487d, 0xa51, 0x6570, 0xc563, 0xb3bb, 0x99c9, 0x0, 0x1);
        gbc.writeMem(0x487d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa51, gbc.sp());
        EXPECT(0x487f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02F8
        gbc.setState(0xcc28, 0xf60b, 0x4b20, 0x16e0, 0xcc4d, 0xdd28, 0x0, 0x1);
        gbc.writeMem(0xcc28, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc28));
        EXPECT(0x3c, gbc.readMem(0xcc29));
        // CB 3C 02F9
        gbc.setState(0x49d1, 0x43ef, 0x2c00, 0xfb82, 0xf6c7, 0xcbb4, 0x1, 0x1);
        gbc.writeMem(0x49d1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x43ef, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02FA
        gbc.setState(0x46de, 0xa380, 0x75e0, 0x13b8, 0x805c, 0x7f37, 0x1, 0x0);
        gbc.writeMem(0x46de, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa380, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02FC
        gbc.setState(0x18e0, 0x8a37, 0xf370, 0xf2c8, 0x70fe, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0x18e0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x18e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 02FD
        gbc.setState(0x49c6, 0x62fb, 0x8520, 0xc15c, 0x8857, 0x80c5, 0x0, 0x0);
        gbc.writeMem(0x49c6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 02FE
        gbc.setState(0x9016, 0xae7, 0x370, 0x7ecc, 0xc508, 0x5cc0, 0x0, 0x1);
        gbc.writeMem(0x9016, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xae7, gbc.sp());
        EXPECT(0x9018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9016));
        EXPECT(0x3c, gbc.readMem(0x9017));
        // CB 3C 02FF
        gbc.setState(0xc448, 0xee3d, 0x3d20, 0xfb92, 0x1242, 0x82a4, 0x0, 0x1);
        gbc.writeMem(0xc448, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xee3d, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc448));
        EXPECT(0x3c, gbc.readMem(0xc449));
        // CB 3C 0300
        gbc.setState(0xc715, 0xeff9, 0xe010, 0x37ea, 0xdaf, 0x1538, 0x1, 0x0);
        gbc.writeMem(0xc715, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xeff9, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc715));
        EXPECT(0x3c, gbc.readMem(0xc716));
        // CB 3C 0301
        gbc.setState(0x36b2, 0xedcc, 0x1f10, 0xfeb, 0x51ff, 0xa5f5, 0x0, 0x1);
        gbc.writeMem(0x36b2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0x36b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0302
        gbc.setState(0x4ff0, 0x831a, 0x7850, 0x4f6a, 0x2b53, 0x6970, 0x0, 0x0);
        gbc.writeMem(0x4ff0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x831a, gbc.sp());
        EXPECT(0x4ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0303
        gbc.setState(0xcfc4, 0x23f6, 0x5e80, 0x1472, 0x77a7, 0xa7c9, 0x0, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc4));
        EXPECT(0x3c, gbc.readMem(0xcfc5));
        // CB 3C 0304
        gbc.setState(0x82cb, 0x8a3, 0x9c50, 0xb27c, 0x585e, 0x7f0a, 0x0, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8a3, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cb));
        EXPECT(0x3c, gbc.readMem(0x82cc));
        // CB 3C 0305
        gbc.setState(0x54f2, 0xc27, 0xf250, 0xef31, 0xa886, 0x39c, 0x1, 0x0);
        gbc.writeMem(0x54f2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0306
        gbc.setState(0xb71c, 0x85a6, 0xf500, 0x807e, 0x2cfc, 0xa5ef, 0x0, 0x1);
        gbc.writeMem(0xb71c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0xb71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71c));
        EXPECT(0x3c, gbc.readMem(0xb71d));
        // CB 3C 0307
        gbc.setState(0xe2d4, 0x3602, 0x3540, 0x4a28, 0xd55c, 0x5ded, 0x1, 0x0);
        gbc.writeMem(0xe2d4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3602, gbc.sp());
        EXPECT(0xe2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d4));
        EXPECT(0x3c, gbc.readMem(0xe2d5));
        // CB 3C 0308
        gbc.setState(0x518a, 0x9340, 0xfde0, 0x9082, 0xccc8, 0x3a60, 0x1, 0x1);
        gbc.writeMem(0x518a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x518c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0309
        gbc.setState(0x70aa, 0xa8a8, 0x9a90, 0x318b, 0x3831, 0x46ec, 0x1, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 030A
        gbc.setState(0xb7c2, 0x55ab, 0x7210, 0x6b6e, 0xfa09, 0x92ba, 0x0, 0x0);
        gbc.writeMem(0xb7c2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x55ab, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c2));
        EXPECT(0x3c, gbc.readMem(0xb7c3));
        // CB 3C 030B
        gbc.setState(0x467c, 0x1b46, 0xcb90, 0x5c59, 0xff4, 0xb95b, 0x1, 0x1);
        gbc.writeMem(0x467c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1b46, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 030C
        gbc.setState(0xc243, 0x5662, 0x8da0, 0x5257, 0x693, 0x449e, 0x0, 0x1);
        gbc.writeMem(0xc243, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5662, gbc.sp());
        EXPECT(0xc245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc243));
        EXPECT(0x3c, gbc.readMem(0xc244));
        // CB 3C 030D
        gbc.setState(0x236e, 0x6c46, 0x61f0, 0xdfc6, 0xd05e, 0xf82b, 0x1, 0x0);
        gbc.writeMem(0x236e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6c46, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 030E
        gbc.setState(0xb9b9, 0x73ad, 0xc960, 0xaa59, 0x166e, 0xf53f, 0x1, 0x1);
        gbc.writeMem(0xb9b9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0xb9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b9));
        EXPECT(0x3c, gbc.readMem(0xb9ba));
        // CB 3C 030F
        gbc.setState(0x69d7, 0x3609, 0x15c0, 0x3350, 0x931d, 0x5cce, 0x0, 0x1);
        gbc.writeMem(0x69d7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3609, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0310
        gbc.setState(0xb1d, 0x633e, 0xf480, 0x80fa, 0xb9a0, 0x1dad, 0x0, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0xb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0311
        gbc.setState(0x80a2, 0x8a35, 0x9040, 0x34d4, 0xa83d, 0x2fb2, 0x1, 0x1);
        gbc.writeMem(0x80a2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8a35, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a2));
        EXPECT(0x3c, gbc.readMem(0x80a3));
        // CB 3C 0312
        gbc.setState(0x9b61, 0x1054, 0x2ad0, 0x37b6, 0x84f2, 0xa84d, 0x1, 0x1);
        gbc.writeMem(0x9b61, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b61));
        EXPECT(0x3c, gbc.readMem(0x9b62));
        // CB 3C 0313
        gbc.setState(0x4c5b, 0xfede, 0x3540, 0x4895, 0x8dea, 0x5248, 0x1, 0x0);
        gbc.writeMem(0x4c5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0x4c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0314
        gbc.setState(0x6cf6, 0x1297, 0x2ad0, 0x8c15, 0xc6db, 0x8f6d, 0x1, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0315
        gbc.setState(0x362d, 0x9207, 0x2c20, 0x7900, 0xedd3, 0xcf05, 0x1, 0x1);
        gbc.writeMem(0x362d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9207, gbc.sp());
        EXPECT(0x362f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0316
        gbc.setState(0xbf84, 0x89fc, 0x1c00, 0xfba9, 0xeae4, 0x87e2, 0x0, 0x1);
        gbc.writeMem(0xbf84, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0xbf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf84));
        EXPECT(0x3c, gbc.readMem(0xbf85));
        // CB 3C 0317
        gbc.setState(0x62e9, 0xf75a, 0xc090, 0xe846, 0x9925, 0xaebb, 0x0, 0x0);
        gbc.writeMem(0x62e9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf75a, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0318
        gbc.setState(0x4928, 0x82b8, 0x2400, 0x9919, 0x4ae0, 0x6f77, 0x0, 0x0);
        gbc.writeMem(0x4928, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x492a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0319
        gbc.setState(0x9518, 0xdfb8, 0x7600, 0x37c8, 0x7ded, 0xc586, 0x1, 0x1);
        gbc.writeMem(0x9518, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdfb8, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9518));
        EXPECT(0x3c, gbc.readMem(0x9519));
        // CB 3C 031A
        gbc.setState(0x4ee3, 0xec17, 0x8d30, 0x416c, 0x6646, 0x114, 0x0, 0x1);
        gbc.writeMem(0x4ee3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xec17, gbc.sp());
        EXPECT(0x4ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 031B
        gbc.setState(0x996c, 0x32f6, 0x7e30, 0x5090, 0x6470, 0xad49, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0x996e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996c));
        EXPECT(0x3c, gbc.readMem(0x996d));
        // CB 3C 031C
        gbc.setState(0xbd9f, 0xe8bb, 0x2ef0, 0xff3a, 0x9c43, 0x3864, 0x0, 0x1);
        gbc.writeMem(0xbd9f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe8bb, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0x3c, gbc.readMem(0xbda0));
        // CB 3C 031D
        gbc.setState(0x7584, 0xc09f, 0x8d90, 0x5cfc, 0x9a1, 0x9725, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x7586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 031E
        gbc.setState(0xc3ae, 0x68d9, 0x9970, 0xbadd, 0x79ed, 0x8ace, 0x0, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ae));
        EXPECT(0x3c, gbc.readMem(0xc3af));
        // CB 3C 031F
        gbc.setState(0x5e5b, 0x138c, 0xe530, 0x9d09, 0x47a4, 0x964e, 0x0, 0x0);
        gbc.writeMem(0x5e5b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x138c, gbc.sp());
        EXPECT(0x5e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0320
        gbc.setState(0x1dbf, 0x1f23, 0x1730, 0x6f5a, 0xf7de, 0xab6f, 0x1, 0x1);
        gbc.writeMem(0x1dbf, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0x1dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0321
        gbc.setState(0x1ff0, 0x30bd, 0xda50, 0xb79, 0x80e2, 0xeef9, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0x1ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0322
        gbc.setState(0x9a81, 0x5c72, 0x5cd0, 0x7f5f, 0x910f, 0x8687, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5c72, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a81));
        EXPECT(0x3c, gbc.readMem(0x9a82));
        // CB 3C 0323
        gbc.setState(0x5412, 0xe2b1, 0xc9c0, 0xf1f6, 0x5549, 0x6cd7, 0x0, 0x0);
        gbc.writeMem(0x5412, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe2b1, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0325
        gbc.setState(0xaca9, 0x9c2b, 0x7e90, 0x4e3a, 0x8188, 0x36c7, 0x1, 0x1);
        gbc.writeMem(0xaca9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9c2b, gbc.sp());
        EXPECT(0xacab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca9));
        EXPECT(0x3c, gbc.readMem(0xacaa));
        // CB 3C 0326
        gbc.setState(0x8394, 0xcba4, 0x79a0, 0xbbe3, 0xb18f, 0x4668, 0x1, 0x0);
        gbc.writeMem(0x8394, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcba4, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8394));
        EXPECT(0x3c, gbc.readMem(0x8395));
        // CB 3C 0327
        gbc.setState(0x3cf3, 0x565d, 0xb4f0, 0x791c, 0x4bd3, 0x153d, 0x1, 0x1);
        gbc.writeMem(0x3cf3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x565d, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0328
        gbc.setState(0x25aa, 0x4023, 0x9ab0, 0x4911, 0x5c4f, 0xffbf, 0x0, 0x1);
        gbc.writeMem(0x25aa, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4023, gbc.sp());
        EXPECT(0x25ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0329
        gbc.setState(0xed64, 0xe990, 0x3d10, 0x8b79, 0x757e, 0x9dae, 0x1, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed64));
        EXPECT(0x3c, gbc.readMem(0xed65));
        // CB 3C 032A
        gbc.setState(0xbe1a, 0x2095, 0x30b0, 0x430d, 0xaf8c, 0xf274, 0x0, 0x1);
        gbc.writeMem(0xbe1a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2095, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1a));
        EXPECT(0x3c, gbc.readMem(0xbe1b));
        // CB 3C 032B
        gbc.setState(0x5702, 0xaa4a, 0x96f0, 0xce7a, 0x7d75, 0xcc5d, 0x1, 0x0);
        gbc.writeMem(0x5702, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0x5704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 032C
        gbc.setState(0xeeb4, 0x6288, 0x48f0, 0x13b8, 0xac53, 0xee7d, 0x1, 0x0);
        gbc.writeMem(0xeeb4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6288, gbc.sp());
        EXPECT(0xeeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb4));
        EXPECT(0x3c, gbc.readMem(0xeeb5));
        // CB 3C 032D
        gbc.setState(0x76c9, 0x9a2d, 0x33b0, 0x553b, 0x1cdb, 0x25fd, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 032E
        gbc.setState(0x7885, 0x8d9a, 0xf500, 0x5ec4, 0x8fbe, 0xd04c, 0x0, 0x1);
        gbc.writeMem(0x7885, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8d9a, gbc.sp());
        EXPECT(0x7887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 032F
        gbc.setState(0x4a8e, 0x112d, 0x8040, 0x12b7, 0x65c2, 0x4b5f, 0x1, 0x0);
        gbc.writeMem(0x4a8e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0x4a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0330
        gbc.setState(0x8ef5, 0x4c0a, 0x3890, 0x342c, 0x784b, 0x808a, 0x1, 0x0);
        gbc.writeMem(0x8ef5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4c0a, gbc.sp());
        EXPECT(0x8ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef5));
        EXPECT(0x3c, gbc.readMem(0x8ef6));
        // CB 3C 0331
        gbc.setState(0x4006, 0xc8cd, 0x8680, 0xf884, 0xfe22, 0xf5d9, 0x0, 0x0);
        gbc.writeMem(0x4006, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0x4008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0332
        gbc.setState(0xe1fd, 0xbc19, 0xfd00, 0x8cbf, 0x33c2, 0xf6a2, 0x0, 0x0);
        gbc.writeMem(0xe1fd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc19, gbc.sp());
        EXPECT(0xe1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1fd));
        EXPECT(0x3c, gbc.readMem(0xe1fe));
        // CB 3C 0333
        gbc.setState(0xdf3e, 0xc375, 0x5ad0, 0xd1b4, 0x735a, 0x3900, 0x0, 0x0);
        gbc.writeMem(0xdf3e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc375, gbc.sp());
        EXPECT(0xdf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3e));
        EXPECT(0x3c, gbc.readMem(0xdf3f));
        // CB 3C 0334
        gbc.setState(0x379f, 0x4f55, 0xa80, 0x4898, 0xb4f, 0xc16, 0x1, 0x0);
        gbc.writeMem(0x379f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0x37a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0335
        gbc.setState(0xcb, 0x8d26, 0x5cd0, 0x6b65, 0x92c2, 0x3760, 0x0, 0x1);
        gbc.writeMem(0xcb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0336
        gbc.setState(0xafd2, 0x4e5d, 0x5570, 0x29ea, 0x53cd, 0x7992, 0x1, 0x0);
        gbc.writeMem(0xafd2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e5d, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd2));
        EXPECT(0x3c, gbc.readMem(0xafd3));
        // CB 3C 0337
        gbc.setState(0x4f79, 0x57b8, 0xfa10, 0x1a9c, 0x1528, 0x6c08, 0x1, 0x1);
        gbc.writeMem(0x4f79, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x57b8, gbc.sp());
        EXPECT(0x4f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0338
        gbc.setState(0x6354, 0xeb77, 0xd860, 0xaa64, 0xce61, 0x78c, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0339
        gbc.setState(0x106c, 0x4b67, 0xc8a0, 0x193b, 0x8bdd, 0x509c, 0x1, 0x0);
        gbc.writeMem(0x106c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0x106e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 033B
        gbc.setState(0xbee, 0x40d8, 0xc140, 0xf115, 0x1bcb, 0x6392, 0x1, 0x1);
        gbc.writeMem(0xbee, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x40d8, gbc.sp());
        EXPECT(0xbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 033C
        gbc.setState(0x1c34, 0xdbb5, 0xef00, 0x58f1, 0x8f3d, 0x7779, 0x1, 0x1);
        gbc.writeMem(0x1c34, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdbb5, gbc.sp());
        EXPECT(0x1c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 033E
        gbc.setState(0xd063, 0x49d9, 0x6b70, 0xbc14, 0x6f3e, 0xb8f3, 0x1, 0x0);
        gbc.writeMem(0xd063, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x49d9, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd063));
        EXPECT(0x3c, gbc.readMem(0xd064));
        // CB 3C 033F
        gbc.setState(0x2782, 0x5aee, 0xb280, 0x4c25, 0x572e, 0x2178, 0x1, 0x1);
        gbc.writeMem(0x2782, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5aee, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0340
        gbc.setState(0x11f7, 0xd77e, 0x590, 0x31cb, 0xf0c, 0xba00, 0x0, 0x0);
        gbc.writeMem(0x11f7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd77e, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0341
        gbc.setState(0xeb8a, 0xb684, 0x1100, 0x9f45, 0x5aed, 0x54be, 0x1, 0x0);
        gbc.writeMem(0xeb8a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0xeb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8a));
        EXPECT(0x3c, gbc.readMem(0xeb8b));
        // CB 3C 0342
        gbc.setState(0xe3c5, 0xfc54, 0x20, 0xd790, 0xfbcf, 0xc98a, 0x1, 0x0);
        gbc.writeMem(0xe3c5, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c5));
        EXPECT(0x3c, gbc.readMem(0xe3c6));
        // CB 3C 0343
        gbc.setState(0x4f7d, 0xb3e0, 0xac00, 0x8dd2, 0x7093, 0x5d70, 0x1, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0344
        gbc.setState(0x666b, 0xaa56, 0xe170, 0xa705, 0x1f62, 0x1174, 0x1, 0x1);
        gbc.writeMem(0x666b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0345
        gbc.setState(0x50e7, 0xbf65, 0xb8d0, 0xf9e3, 0x2e1b, 0xcad5, 0x1, 0x0);
        gbc.writeMem(0x50e7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0346
        gbc.setState(0x89e4, 0xedec, 0xbbb0, 0xaf07, 0x290d, 0xb6e1, 0x0, 0x0);
        gbc.writeMem(0x89e4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e4));
        EXPECT(0x3c, gbc.readMem(0x89e5));
        // CB 3C 0347
        gbc.setState(0x1436, 0x28ea, 0xe520, 0x796a, 0x8d0f, 0xc61b, 0x1, 0x0);
        gbc.writeMem(0x1436, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0x1438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0348
        gbc.setState(0xc766, 0x1cc4, 0xfe20, 0x5bf3, 0x6909, 0xcad, 0x0, 0x0);
        gbc.writeMem(0xc766, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0xc768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc766));
        EXPECT(0x3c, gbc.readMem(0xc767));
        // CB 3C 034A
        gbc.setState(0xe7f2, 0x7d88, 0x4370, 0xf902, 0xf4cd, 0xc4aa, 0x1, 0x0);
        gbc.writeMem(0xe7f2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7d88, gbc.sp());
        EXPECT(0xe7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f2));
        EXPECT(0x3c, gbc.readMem(0xe7f3));
        // CB 3C 034B
        gbc.setState(0xc426, 0xc775, 0x5560, 0xb17d, 0xab5e, 0xe6c3, 0x0, 0x1);
        gbc.writeMem(0xc426, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0xc428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc426));
        EXPECT(0x3c, gbc.readMem(0xc427));
        // CB 3C 034C
        gbc.setState(0xeb2d, 0xed27, 0x3d0, 0xb89a, 0x914f, 0xb1ee, 0x0, 0x0);
        gbc.writeMem(0xeb2d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xed27, gbc.sp());
        EXPECT(0xeb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2d));
        EXPECT(0x3c, gbc.readMem(0xeb2e));
        // CB 3C 034D
        gbc.setState(0x88cb, 0x2af3, 0x4240, 0x7c88, 0x81f2, 0x612d, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2af3, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0x3c, gbc.readMem(0x88cc));
        // CB 3C 034E
        gbc.setState(0xb5f7, 0x1b13, 0xdcb0, 0x1ea5, 0x883f, 0xc988, 0x1, 0x1);
        gbc.writeMem(0xb5f7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1b13, gbc.sp());
        EXPECT(0xb5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f7));
        EXPECT(0x3c, gbc.readMem(0xb5f8));
        // CB 3C 034F
        gbc.setState(0x2595, 0xd318, 0x47d0, 0xe28f, 0xc85a, 0xf8b3, 0x1, 0x1);
        gbc.writeMem(0x2595, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd318, gbc.sp());
        EXPECT(0x2597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0350
        gbc.setState(0x8599, 0x3ab0, 0xf220, 0xb34b, 0x83b9, 0xad8e, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3ab0, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8599));
        EXPECT(0x3c, gbc.readMem(0x859a));
        // CB 3C 0351
        gbc.setState(0xcad6, 0xf98, 0xd820, 0xcc6a, 0x61b, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0xcad6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad6));
        EXPECT(0x3c, gbc.readMem(0xcad7));
        // CB 3C 0352
        gbc.setState(0xb33, 0x2dc5, 0x650, 0xa5c3, 0x8589, 0x55bd, 0x0, 0x1);
        gbc.writeMem(0xb33, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2dc5, gbc.sp());
        EXPECT(0xb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0353
        gbc.setState(0x64a4, 0x5651, 0x83b0, 0x9017, 0xf6ba, 0xeab8, 0x1, 0x1);
        gbc.writeMem(0x64a4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0354
        gbc.setState(0x6c8, 0xdada, 0x5d90, 0xab4a, 0x35da, 0xa4f3, 0x1, 0x1);
        gbc.writeMem(0x6c8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0x6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0355
        gbc.setState(0x11ea, 0xf455, 0x3830, 0x44c7, 0x3afa, 0xbb24, 0x1, 0x0);
        gbc.writeMem(0x11ea, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf455, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0356
        gbc.setState(0xce61, 0x60ca, 0x7460, 0xac15, 0x26e0, 0x279f, 0x0, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60ca, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce61));
        EXPECT(0x3c, gbc.readMem(0xce62));
        // CB 3C 0357
        gbc.setState(0x4c6e, 0x279c, 0x7190, 0x79d2, 0xab82, 0x5f3b, 0x1, 0x0);
        gbc.writeMem(0x4c6e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x279c, gbc.sp());
        EXPECT(0x4c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0358
        gbc.setState(0xe61d, 0xe815, 0x9de0, 0x6959, 0xdb63, 0xde1d, 0x0, 0x0);
        gbc.writeMem(0xe61d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe815, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61d));
        EXPECT(0x3c, gbc.readMem(0xe61e));
        // CB 3C 0359
        gbc.setState(0xd18d, 0xb0d5, 0x51b0, 0x2ad, 0xe775, 0x5916, 0x0, 0x0);
        gbc.writeMem(0xd18d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb0d5, gbc.sp());
        EXPECT(0xd18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18d));
        EXPECT(0x3c, gbc.readMem(0xd18e));
        // CB 3C 035A
        gbc.setState(0xae9a, 0x285c, 0x16c0, 0x83a2, 0x4b4e, 0xcff2, 0x1, 0x1);
        gbc.writeMem(0xae9a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x285c, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9a));
        EXPECT(0x3c, gbc.readMem(0xae9b));
        // CB 3C 035B
        gbc.setState(0x5815, 0x261c, 0x34b0, 0xc26e, 0xd0e1, 0x5311, 0x0, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x261c, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 035C
        gbc.setState(0xb1d, 0xe1ae, 0x830, 0x7ef2, 0xecb, 0x89f6, 0x1, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe1ae, gbc.sp());
        EXPECT(0xb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 035D
        gbc.setState(0xc531, 0xf598, 0xb8c0, 0xf3b7, 0x93b1, 0x5eb4, 0x1, 0x0);
        gbc.writeMem(0xc531, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf598, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc531));
        EXPECT(0x3c, gbc.readMem(0xc532));
        // CB 3C 035E
        gbc.setState(0x33bd, 0x9739, 0x8f30, 0x7f75, 0x8904, 0x48a8, 0x1, 0x1);
        gbc.writeMem(0x33bd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9739, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 035F
        gbc.setState(0xd90e, 0x577, 0x6b30, 0x1fb9, 0x11d, 0xe2d0, 0x1, 0x1);
        gbc.writeMem(0xd90e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0xd910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90e));
        EXPECT(0x3c, gbc.readMem(0xd90f));
        // CB 3C 0360
        gbc.setState(0x73eb, 0x80af, 0xb2f0, 0x4499, 0x91a4, 0xc011, 0x0, 0x0);
        gbc.writeMem(0x73eb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0x73ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0362
        gbc.setState(0x2070, 0x6c21, 0x6be0, 0xd8e4, 0x6e14, 0xd259, 0x0, 0x0);
        gbc.writeMem(0x2070, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x2072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0363
        gbc.setState(0xbce4, 0xf5a3, 0x8c40, 0x160c, 0x2e72, 0x3a5c, 0x1, 0x0);
        gbc.writeMem(0xbce4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0xbce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce4));
        EXPECT(0x3c, gbc.readMem(0xbce5));
        // CB 3C 0364
        gbc.setState(0x1aa6, 0xade3, 0x11f0, 0xce12, 0x2df9, 0x4f17, 0x0, 0x0);
        gbc.writeMem(0x1aa6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xade3, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0365
        gbc.setState(0x660d, 0x7856, 0xa900, 0x1f3c, 0x97dd, 0x2902, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7856, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0366
        gbc.setState(0xcdde, 0x250e, 0xaee0, 0x3ece, 0xed5b, 0x7ea2, 0x0, 0x0);
        gbc.writeMem(0xcdde, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0xcde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdde));
        EXPECT(0x3c, gbc.readMem(0xcddf));
        // CB 3C 0367
        gbc.setState(0x76d2, 0x6f2f, 0xf860, 0x487a, 0xaf4e, 0x33f4, 0x0, 0x1);
        gbc.writeMem(0x76d2, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x76d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0368
        gbc.setState(0xb7fd, 0x6ad3, 0xc890, 0xc17c, 0xeb0f, 0x6b04, 0x1, 0x1);
        gbc.writeMem(0xb7fd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6ad3, gbc.sp());
        EXPECT(0xb7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7fd));
        EXPECT(0x3c, gbc.readMem(0xb7fe));
        // CB 3C 0369
        gbc.setState(0xd9d8, 0xc003, 0xa00, 0xb9cb, 0xa285, 0xc1d0, 0x0, 0x1);
        gbc.writeMem(0xd9d8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc003, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d8));
        EXPECT(0x3c, gbc.readMem(0xd9d9));
        // CB 3C 036A
        gbc.setState(0x6c2f, 0x9f8b, 0xd250, 0xd971, 0xe9e9, 0x105a, 0x1, 0x0);
        gbc.writeMem(0x6c2f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f8b, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 036B
        gbc.setState(0x62e3, 0x2fba, 0x8ac0, 0x2e1e, 0xda5, 0x71e5, 0x1, 0x1);
        gbc.writeMem(0x62e3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2fba, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 036C
        gbc.setState(0x4f6d, 0xc509, 0x2040, 0xe6ea, 0x2918, 0xad66, 0x1, 0x1);
        gbc.writeMem(0x4f6d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x4f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 036D
        gbc.setState(0x762a, 0x7496, 0x3380, 0xbd4c, 0xac03, 0x94e8, 0x1, 0x1);
        gbc.writeMem(0x762a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7496, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 036E
        gbc.setState(0x401b, 0x762a, 0xd90, 0x25bd, 0xbbc3, 0x6daf, 0x1, 0x0);
        gbc.writeMem(0x401b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x762a, gbc.sp());
        EXPECT(0x401d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 036F
        gbc.setState(0x937e, 0xfb9a, 0x3bb0, 0x8011, 0xc0cb, 0xf6d9, 0x1, 0x0);
        gbc.writeMem(0x937e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0x9380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937e));
        EXPECT(0x3c, gbc.readMem(0x937f));
        // CB 3C 0370
        gbc.setState(0xd81a, 0x5de7, 0x17b0, 0x5708, 0xc392, 0xa582, 0x1, 0x1);
        gbc.writeMem(0xd81a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5de7, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81a));
        EXPECT(0x3c, gbc.readMem(0xd81b));
        // CB 3C 0371
        gbc.setState(0xdeba, 0x7643, 0x610, 0x62de, 0x2991, 0xf6c3, 0x0, 0x1);
        gbc.writeMem(0xdeba, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0xdebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeba));
        EXPECT(0x3c, gbc.readMem(0xdebb));
        // CB 3C 0372
        gbc.setState(0xe0ce, 0x3789, 0xf750, 0x8e53, 0xb64d, 0x5354, 0x0, 0x1);
        gbc.writeMem(0xe0ce, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0xe0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ce));
        EXPECT(0x3c, gbc.readMem(0xe0cf));
        // CB 3C 0373
        gbc.setState(0xf05, 0x2990, 0x9c40, 0xd296, 0xd587, 0x77ff, 0x0, 0x0);
        gbc.writeMem(0xf05, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2990, gbc.sp());
        EXPECT(0xf07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0374
        gbc.setState(0x4803, 0x6905, 0xfab0, 0x1035, 0xfa6f, 0x68df, 0x1, 0x0);
        gbc.writeMem(0x4803, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6905, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0375
        gbc.setState(0xcec7, 0x3ef5, 0xfb00, 0x5fa, 0xadf, 0x63b8, 0x1, 0x0);
        gbc.writeMem(0xcec7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3ef5, gbc.sp());
        EXPECT(0xcec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec7));
        EXPECT(0x3c, gbc.readMem(0xcec8));
        // CB 3C 0376
        gbc.setState(0x5972, 0x1e6f, 0xc6f0, 0x32ca, 0x4fdb, 0x181, 0x1, 0x0);
        gbc.writeMem(0x5972, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0x5974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0377
        gbc.setState(0x14c9, 0xe2aa, 0x7990, 0x31ad, 0xdfe1, 0x7b8f, 0x0, 0x0);
        gbc.writeMem(0x14c9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe2aa, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0378
        gbc.setState(0x5180, 0x7526, 0xf50, 0x53e6, 0x8cd1, 0xe8a8, 0x0, 0x1);
        gbc.writeMem(0x5180, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7526, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0379
        gbc.setState(0x331c, 0x17fe, 0x2f40, 0xb6a3, 0x7c1f, 0xd18e, 0x1, 0x1);
        gbc.writeMem(0x331c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x331e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 037A
        gbc.setState(0x4c7c, 0x127e, 0x7b30, 0x5d5, 0x244e, 0xab12, 0x0, 0x1);
        gbc.writeMem(0x4c7c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x127e, gbc.sp());
        EXPECT(0x4c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 037B
        gbc.setState(0xc31c, 0xb065, 0xc150, 0x5e08, 0xf5b3, 0x3679, 0x0, 0x1);
        gbc.writeMem(0xc31c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0xc31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31c));
        EXPECT(0x3c, gbc.readMem(0xc31d));
        // CB 3C 037C
        gbc.setState(0x8b0f, 0x744f, 0x18c0, 0x70ff, 0xd1b8, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x744f, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0f));
        EXPECT(0x3c, gbc.readMem(0x8b10));
        // CB 3C 037D
        gbc.setState(0x5be7, 0x518e, 0x9840, 0xdd0a, 0xeae1, 0x19c2, 0x1, 0x0);
        gbc.writeMem(0x5be7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x518e, gbc.sp());
        EXPECT(0x5be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 037E
        gbc.setState(0x4de1, 0x1d06, 0x1780, 0x746b, 0x7ca1, 0xe75f, 0x0, 0x1);
        gbc.writeMem(0x4de1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 037F
        gbc.setState(0x5378, 0xc5b3, 0xf140, 0x45be, 0x4081, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x5378, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x537a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0380
        gbc.setState(0x662a, 0xc010, 0xe260, 0x43d5, 0x7622, 0xdc3e, 0x0, 0x0);
        gbc.writeMem(0x662a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0381
        gbc.setState(0x3183, 0x28cd, 0xac80, 0xbab2, 0x96a5, 0x486a, 0x1, 0x1);
        gbc.writeMem(0x3183, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x28cd, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0382
        gbc.setState(0xe289, 0x325c, 0x3190, 0xad29, 0x8dc9, 0x55b6, 0x1, 0x1);
        gbc.writeMem(0xe289, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x325c, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe289));
        EXPECT(0x3c, gbc.readMem(0xe28a));
        // CB 3C 0383
        gbc.setState(0x33af, 0x8ef5, 0x20f0, 0xf3ef, 0x3b94, 0xecc, 0x0, 0x1);
        gbc.writeMem(0x33af, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x33b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0384
        gbc.setState(0x782e, 0x7db6, 0xf80, 0x3871, 0x13df, 0xf00f, 0x1, 0x0);
        gbc.writeMem(0x782e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0385
        gbc.setState(0x6023, 0xcb4e, 0x7f90, 0x6e4a, 0x6abf, 0x73f0, 0x1, 0x0);
        gbc.writeMem(0x6023, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 0386
        gbc.setState(0x58c0, 0xfd69, 0x2380, 0x3aa0, 0xb81a, 0xbac4, 0x0, 0x0);
        gbc.writeMem(0x58c0, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfd69, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0387
        gbc.setState(0xb828, 0xa941, 0xf370, 0xaa49, 0x823c, 0xe823, 0x0, 0x1);
        gbc.writeMem(0xb828, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa941, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb828));
        EXPECT(0x3c, gbc.readMem(0xb829));
        // CB 3C 0388
        gbc.setState(0x4c91, 0x8796, 0xb500, 0x846e, 0xb423, 0x5455, 0x0, 0x0);
        gbc.writeMem(0x4c91, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8796, gbc.sp());
        EXPECT(0x4c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0389
        gbc.setState(0x6b85, 0xafcc, 0x6f20, 0x9528, 0x3ec7, 0x5aea, 0x0, 0x1);
        gbc.writeMem(0x6b85, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xafcc, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 038A
        gbc.setState(0xdc92, 0x2391, 0x4350, 0xcc64, 0xad1e, 0x109e, 0x1, 0x0);
        gbc.writeMem(0xdc92, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2391, gbc.sp());
        EXPECT(0xdc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc92));
        EXPECT(0x3c, gbc.readMem(0xdc93));
        // CB 3C 038B
        gbc.setState(0x1ff1, 0xacea, 0xb8f0, 0x44bb, 0x404, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0x1ff1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0x1ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 038C
        gbc.setState(0x528a, 0xfbee, 0x5ed0, 0xd015, 0xc94c, 0xbb13, 0x1, 0x1);
        gbc.writeMem(0x528a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfbee, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 038D
        gbc.setState(0xee56, 0x5c02, 0xba90, 0x9451, 0x65f8, 0x6e6b, 0x0, 0x1);
        gbc.writeMem(0xee56, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5c02, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee56));
        EXPECT(0x3c, gbc.readMem(0xee57));
        // CB 3C 038E
        gbc.setState(0xe120, 0x882f, 0x9010, 0x4c13, 0x5855, 0xd8df, 0x0, 0x0);
        gbc.writeMem(0xe120, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0xe122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe120));
        EXPECT(0x3c, gbc.readMem(0xe121));
        // CB 3C 038F
        gbc.setState(0x390c, 0x1197, 0x9a00, 0x4fb8, 0xb85, 0x6ea4, 0x0, 0x1);
        gbc.writeMem(0x390c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1197, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0390
        gbc.setState(0xb4d1, 0x5d1f, 0xc0a0, 0xc619, 0x48ba, 0x199d, 0x1, 0x0);
        gbc.writeMem(0xb4d1, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5d1f, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d1));
        EXPECT(0x3c, gbc.readMem(0xb4d2));
        // CB 3C 0391
        gbc.setState(0x9bff, 0x74d7, 0x6170, 0x37ad, 0x8b, 0x4c63, 0x0, 0x0);
        gbc.writeMem(0x9bff, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x74d7, gbc.sp());
        EXPECT(0x9c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bff));
        EXPECT(0x3c, gbc.readMem(0x9c00));
        // CB 3C 0392
        gbc.setState(0xe4f4, 0xef29, 0x22f0, 0xa301, 0x9278, 0x64e5, 0x1, 0x0);
        gbc.writeMem(0xe4f4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f4));
        EXPECT(0x3c, gbc.readMem(0xe4f5));
        // CB 3C 0393
        gbc.setState(0xd8fc, 0xc338, 0x3820, 0xf35b, 0xbee3, 0x1958, 0x0, 0x1);
        gbc.writeMem(0xd8fc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fc));
        EXPECT(0x3c, gbc.readMem(0xd8fd));
        // CB 3C 0394
        gbc.setState(0x788e, 0x4ab5, 0x4160, 0xb8fe, 0x6df, 0x9cc8, 0x0, 0x1);
        gbc.writeMem(0x788e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0x7890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0395
        gbc.setState(0xcf90, 0xbb09, 0x3330, 0xeb84, 0xb140, 0x809a, 0x0, 0x0);
        gbc.writeMem(0xcf90, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf90));
        EXPECT(0x3c, gbc.readMem(0xcf91));
        // CB 3C 0396
        gbc.setState(0x98f4, 0x4858, 0x2e80, 0xb82b, 0xa88a, 0xd042, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x98f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f4));
        EXPECT(0x3c, gbc.readMem(0x98f5));
        // CB 3C 0397
        gbc.setState(0x38bb, 0xf21f, 0xf310, 0x5e44, 0x3b0f, 0x2cc5, 0x1, 0x1);
        gbc.writeMem(0x38bb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0398
        gbc.setState(0x5b5e, 0xb386, 0x9670, 0x2ea1, 0x8c72, 0x68dd, 0x0, 0x0);
        gbc.writeMem(0x5b5e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb386, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 0399
        gbc.setState(0x47dc, 0xcf4f, 0x32a0, 0xe3b7, 0xcc71, 0x348f, 0x0, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcf4f, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 039A
        gbc.setState(0x1227, 0x4d25, 0x640, 0xcdd9, 0xed7e, 0xcabf, 0x0, 0x0);
        gbc.writeMem(0x1227, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x1229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 039B
        gbc.setState(0xcf37, 0x9f25, 0xcb80, 0x42b5, 0xe6dc, 0xadf, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf37));
        EXPECT(0x3c, gbc.readMem(0xcf38));
        // CB 3C 039C
        gbc.setState(0xdef4, 0x7a4b, 0xe780, 0x8f90, 0xa515, 0xc6a4, 0x0, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0xdef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef4));
        EXPECT(0x3c, gbc.readMem(0xdef5));
        // CB 3C 039D
        gbc.setState(0xa6fb, 0xce9e, 0x5cb0, 0x9b6e, 0x5983, 0x119b, 0x0, 0x1);
        gbc.writeMem(0xa6fb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fb));
        EXPECT(0x3c, gbc.readMem(0xa6fc));
        // CB 3C 039E
        gbc.setState(0x7a31, 0x4262, 0x9dc0, 0xe219, 0xc38e, 0xdc0d, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0x7a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 039F
        gbc.setState(0x57f, 0x26b4, 0xc780, 0x9bc8, 0x213, 0xdc2f, 0x0, 0x0);
        gbc.writeMem(0x57f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x26b4, gbc.sp());
        EXPECT(0x581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03A0
        gbc.setState(0x515d, 0xa05, 0x2b60, 0x93ac, 0x3cf2, 0x35cc, 0x0, 0x0);
        gbc.writeMem(0x515d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x515f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03A1
        gbc.setState(0xdfc4, 0x9afb, 0xe700, 0x8da3, 0x4184, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0xdfc4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc4));
        EXPECT(0x3c, gbc.readMem(0xdfc5));
        // CB 3C 03A2
        gbc.setState(0xe18a, 0x7ea0, 0xa30, 0xbb8d, 0xa668, 0xb7d9, 0x0, 0x1);
        gbc.writeMem(0xe18a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18a));
        EXPECT(0x3c, gbc.readMem(0xe18b));
        // CB 3C 03A3
        gbc.setState(0x651e, 0x701b, 0x5660, 0x8aac, 0x383b, 0xa377, 0x0, 0x0);
        gbc.writeMem(0x651e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x6520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03A4
        gbc.setState(0x6dba, 0x8872, 0xf0e0, 0x2a2c, 0xae31, 0x7768, 0x1, 0x1);
        gbc.writeMem(0x6dba, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8872, gbc.sp());
        EXPECT(0x6dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03A5
        gbc.setState(0x3216, 0xc877, 0xba40, 0x7152, 0xc4d7, 0x580c, 0x0, 0x0);
        gbc.writeMem(0x3216, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc877, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03A6
        gbc.setState(0x16f6, 0x91f3, 0x4bd0, 0x7671, 0x83f6, 0x1c0d, 0x0, 0x0);
        gbc.writeMem(0x16f6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0x16f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03A7
        gbc.setState(0x7786, 0xb5b1, 0x73c0, 0xa48d, 0x3c38, 0x7773, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb5b1, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03A8
        gbc.setState(0xdde, 0xe832, 0xc3c0, 0xdba6, 0xb3a7, 0x25e8, 0x0, 0x1);
        gbc.writeMem(0xdde, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0xde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03A9
        gbc.setState(0xc9ea, 0xb0f1, 0xa7e0, 0xf5cf, 0xab56, 0xb242, 0x1, 0x1);
        gbc.writeMem(0xc9ea, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ea));
        EXPECT(0x3c, gbc.readMem(0xc9eb));
        // CB 3C 03AA
        gbc.setState(0x4c7d, 0x31f6, 0x6ef0, 0xb310, 0x311a, 0x5986, 0x0, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x31f6, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03AB
        gbc.setState(0x35ac, 0xd959, 0xa50, 0x8633, 0x3f30, 0xbebd, 0x1, 0x1);
        gbc.writeMem(0x35ac, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd959, gbc.sp());
        EXPECT(0x35ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03AD
        gbc.setState(0x3db6, 0xcf8f, 0x9f20, 0xe13a, 0xacc5, 0x5ba9, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcf8f, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03AF
        gbc.setState(0x319c, 0xabad, 0xdee0, 0x52d5, 0x80d6, 0x17ff, 0x1, 0x0);
        gbc.writeMem(0x319c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03B0
        gbc.setState(0x1945, 0x70af, 0x6d90, 0x7ffd, 0x9181, 0x8cda, 0x1, 0x0);
        gbc.writeMem(0x1945, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x70af, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03B1
        gbc.setState(0x7cb6, 0x352d, 0x67b0, 0x7c0e, 0x21e2, 0x46fd, 0x0, 0x1);
        gbc.writeMem(0x7cb6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x352d, gbc.sp());
        EXPECT(0x7cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03B2
        gbc.setState(0x4524, 0xe4d, 0xad30, 0x76ad, 0x94df, 0x42bf, 0x1, 0x0);
        gbc.writeMem(0x4524, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe4d, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03B3
        gbc.setState(0xb255, 0x5b74, 0x9790, 0x230e, 0x7721, 0xb7ad, 0x0, 0x1);
        gbc.writeMem(0xb255, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb255));
        EXPECT(0x3c, gbc.readMem(0xb256));
        // CB 3C 03B4
        gbc.setState(0x3d2e, 0x4ada, 0x55d0, 0x5371, 0x5034, 0x714f, 0x1, 0x0);
        gbc.writeMem(0x3d2e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0x3d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03B5
        gbc.setState(0x4ae8, 0x8b7f, 0xbea0, 0x8f13, 0x5b20, 0xcde2, 0x0, 0x0);
        gbc.writeMem(0x4ae8, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8b7f, gbc.sp());
        EXPECT(0x4aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03B6
        gbc.setState(0xd99a, 0xd46a, 0x85f0, 0x7f81, 0xf8cf, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0xd99a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0xd99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99a));
        EXPECT(0x3c, gbc.readMem(0xd99b));
        // CB 3C 03B7
        gbc.setState(0x3424, 0x970a, 0x76b0, 0x7ccc, 0xa270, 0x444c, 0x0, 0x1);
        gbc.writeMem(0x3424, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03B8
        gbc.setState(0xf27, 0xf054, 0x2e40, 0xec0, 0x3f5, 0x4910, 0x0, 0x1);
        gbc.writeMem(0xf27, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf054, gbc.sp());
        EXPECT(0xf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03B9
        gbc.setState(0x8140, 0x58a1, 0x2010, 0x87d8, 0xd02a, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0x8140, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x58a1, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8140));
        EXPECT(0x3c, gbc.readMem(0x8141));
        // CB 3C 03BA
        gbc.setState(0xd025, 0x845b, 0x4520, 0xeadd, 0xfd9b, 0x29b3, 0x1, 0x1);
        gbc.writeMem(0xd025, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x845b, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd025));
        EXPECT(0x3c, gbc.readMem(0xd026));
        // CB 3C 03BB
        gbc.setState(0x1972, 0x4910, 0x3430, 0x3572, 0xb473, 0x3eae, 0x0, 0x0);
        gbc.writeMem(0x1972, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4910, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03BC
        gbc.setState(0x1e49, 0xc338, 0x7750, 0x42d0, 0x5d78, 0x6ce0, 0x0, 0x1);
        gbc.writeMem(0x1e49, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0x1e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03BD
        gbc.setState(0x3165, 0x3cff, 0x3e70, 0x4720, 0xa526, 0xb1da, 0x0, 0x1);
        gbc.writeMem(0x3165, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0x3167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03BE
        gbc.setState(0xd50, 0xae88, 0x1740, 0x9e11, 0x4e01, 0x8c0e, 0x1, 0x0);
        gbc.writeMem(0xd50, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xae88, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03BF
        gbc.setState(0x301a, 0xcd86, 0x3ef0, 0x8c03, 0x5cb6, 0x9d92, 0x1, 0x1);
        gbc.writeMem(0x301a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcd86, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03C0
        gbc.setState(0x4306, 0x3a80, 0x8230, 0xad68, 0x961e, 0xa1b7, 0x1, 0x1);
        gbc.writeMem(0x4306, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3a80, gbc.sp());
        EXPECT(0x4308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03C1
        gbc.setState(0x27da, 0x28db, 0x6c70, 0x7183, 0xbaaa, 0xa8d4, 0x0, 0x0);
        gbc.writeMem(0x27da, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0x27dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03C2
        gbc.setState(0x7773, 0x819, 0xa460, 0xa721, 0x1cf2, 0x1d7c, 0x0, 0x1);
        gbc.writeMem(0x7773, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03C3
        gbc.setState(0x9df, 0xa7a4, 0x7af0, 0xcb93, 0x8ed2, 0xcd3f, 0x1, 0x1);
        gbc.writeMem(0x9df, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03C4
        gbc.setState(0x74f9, 0x75a5, 0x5ec0, 0xcfa5, 0x81a7, 0xc09b, 0x0, 0x0);
        gbc.writeMem(0x74f9, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03C5
        gbc.setState(0x2d74, 0x2524, 0x200, 0x102e, 0xc0d1, 0x48b9, 0x0, 0x1);
        gbc.writeMem(0x2d74, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2524, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03C7
        gbc.setState(0x1ef6, 0x6d88, 0x6840, 0xa511, 0xb829, 0xc7b, 0x0, 0x1);
        gbc.writeMem(0x1ef6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6d88, gbc.sp());
        EXPECT(0x1ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03C8
        gbc.setState(0x1633, 0x50f, 0xee10, 0xd013, 0xb1b5, 0x4366, 0x1, 0x0);
        gbc.writeMem(0x1633, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x50f, gbc.sp());
        EXPECT(0x1635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03C9
        gbc.setState(0x56bd, 0xfee6, 0x5a80, 0xe6fa, 0xbc1a, 0x7697, 0x1, 0x0);
        gbc.writeMem(0x56bd, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfee6, gbc.sp());
        EXPECT(0x56bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03CA
        gbc.setState(0x57e7, 0xece5, 0x3c00, 0xec8e, 0x8171, 0x9fd, 0x1, 0x0);
        gbc.writeMem(0x57e7, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xece5, gbc.sp());
        EXPECT(0x57e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03CB
        gbc.setState(0x6133, 0xd7c, 0x1000, 0xb6aa, 0xf353, 0x6c27, 0x1, 0x1);
        gbc.writeMem(0x6133, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0x6135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03CC
        gbc.setState(0x4831, 0x61ac, 0x6c00, 0x70cd, 0x7217, 0xb02, 0x1, 0x1);
        gbc.writeMem(0x4831, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x61ac, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03CD
        gbc.setState(0xc36e, 0x8b71, 0xfc60, 0xedf0, 0xab8, 0xee26, 0x0, 0x1);
        gbc.writeMem(0xc36e, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8b71, gbc.sp());
        EXPECT(0xc370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36e));
        EXPECT(0x3c, gbc.readMem(0xc36f));
        // CB 3C 03CE
        gbc.setState(0xc94f, 0xa756, 0x8540, 0x9b61, 0x53da, 0x886a, 0x1, 0x0);
        gbc.writeMem(0xc94f, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa756, gbc.sp());
        EXPECT(0xc951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94f));
        EXPECT(0x3c, gbc.readMem(0xc950));
        // CB 3C 03CF
        gbc.setState(0x3c8c, 0x4383, 0x76e0, 0xc620, 0xaa57, 0xa248, 0x0, 0x1);
        gbc.writeMem(0x3c8c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x3c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03D0
        gbc.setState(0xc424, 0x1e24, 0x4630, 0xd2a9, 0x76ee, 0x9e66, 0x0, 0x1);
        gbc.writeMem(0xc424, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1e24, gbc.sp());
        EXPECT(0xc426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc424));
        EXPECT(0x3c, gbc.readMem(0xc425));
        // CB 3C 03D1
        gbc.setState(0x524, 0xc25e, 0x18d0, 0x30a3, 0x473e, 0xe7b1, 0x1, 0x0);
        gbc.writeMem(0x524, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03D2
        gbc.setState(0x900a, 0xa143, 0x6e60, 0xb447, 0x19a3, 0xfefb, 0x1, 0x0);
        gbc.writeMem(0x900a, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa143, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900a));
        EXPECT(0x3c, gbc.readMem(0x900b));
        // CB 3C 03D3
        gbc.setState(0xe921, 0xfbe9, 0xe340, 0x31ec, 0x8d6a, 0x9ad1, 0x1, 0x0);
        gbc.writeMem(0xe921, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0x3c, gbc.readMem(0xe922));
        // CB 3C 03D4
        gbc.setState(0x1b92, 0xa234, 0x5530, 0x4fea, 0xcc9b, 0xab1, 0x1, 0x0);
        gbc.writeMem(0x1b92, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0x1b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03D5
        gbc.setState(0xefeb, 0x1b24, 0x8bb0, 0xd4a2, 0xaaf7, 0xd23b, 0x0, 0x1);
        gbc.writeMem(0xefeb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1b24, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0x3c, gbc.readMem(0xefec));
        // CB 3C 03D6
        gbc.setState(0xabcb, 0xb8d4, 0xe3e0, 0x872, 0xfc6c, 0xa375, 0x1, 0x1);
        gbc.writeMem(0xabcb, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb8d4, gbc.sp());
        EXPECT(0xabcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcb));
        EXPECT(0x3c, gbc.readMem(0xabcc));
        // CB 3C 03D8
        gbc.setState(0x4f40, 0x4ecc, 0x6c10, 0x9c28, 0xb3e6, 0xd508, 0x0, 0x0);
        gbc.writeMem(0x4f40, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ecc, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03D9
        gbc.setState(0xd438, 0xb6e6, 0x3e60, 0xd674, 0x6e4, 0x2bf2, 0x0, 0x0);
        gbc.writeMem(0xd438, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6e6, gbc.sp());
        EXPECT(0xd43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd438));
        EXPECT(0x3c, gbc.readMem(0xd439));
        // CB 3C 03DA
        gbc.setState(0xbc0c, 0xa6ef, 0x6100, 0xd843, 0xca5a, 0xd82e, 0x0, 0x1);
        gbc.writeMem(0xbc0c, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0xbc0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0c));
        EXPECT(0x3c, gbc.readMem(0xbc0d));
        // CB 3C 03DB
        gbc.setState(0x5d35, 0x20ef, 0xa5f0, 0x4aa7, 0xb3a0, 0x2365, 0x1, 0x1);
        gbc.writeMem(0x5d35, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x5d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03DC
        gbc.setState(0x101b, 0x1170, 0x8bd0, 0xd2b0, 0xbb61, 0x671c, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1170, gbc.sp());
        EXPECT(0x101d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03DD
        gbc.setState(0x85f6, 0xaafd, 0x1fd0, 0xc670, 0xc743, 0x36e0, 0x1, 0x0);
        gbc.writeMem(0x85f6, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaafd, gbc.sp());
        EXPECT(0x85f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f6));
        EXPECT(0x3c, gbc.readMem(0x85f7));
        // CB 3C 03DE
        gbc.setState(0x9fc4, 0xc65e, 0x4af0, 0xe667, 0xd49b, 0x5efd, 0x0, 0x0);
        gbc.writeMem(0x9fc4, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc4));
        EXPECT(0x3c, gbc.readMem(0x9fc5));
        // CB 3C 03DF
        gbc.setState(0x4d63, 0xd7b, 0xf170, 0xc13c, 0xc9dc, 0xaab9, 0x0, 0x0);
        gbc.writeMem(0x4d63, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03E0
        gbc.setState(0xc7df, 0x9d9d, 0x8ae0, 0x701b, 0xfcfc, 0xc24b, 0x0, 0x0);
        gbc.writeMem(0xc7df, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7df));
        EXPECT(0x3c, gbc.readMem(0xc7e0));
        // CB 3C 03E1
        gbc.setState(0x3cb3, 0x449a, 0x1cb0, 0x7078, 0x52c2, 0xed88, 0x0, 0x0);
        gbc.writeMem(0x3cb3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x449a, gbc.sp());
        EXPECT(0x3cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03E2
        gbc.setState(0xc623, 0x8bb4, 0x1d20, 0x6352, 0x9525, 0x1466, 0x1, 0x0);
        gbc.writeMem(0xc623, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8bb4, gbc.sp());
        EXPECT(0xc625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc623));
        EXPECT(0x3c, gbc.readMem(0xc624));
        // CB 3C 03E3
        gbc.setState(0x20d3, 0x4be5, 0xe930, 0x80dc, 0x1908, 0xc60, 0x1, 0x1);
        gbc.writeMem(0x20d3, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0x20d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03E4
        gbc.setState(0x1872, 0x101a, 0x8be0, 0xf33c, 0x893a, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x1872, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x101a, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03E5
        gbc.setState(0x6f54, 0x7f35, 0x9d10, 0xc6f1, 0xdc35, 0x5e2e, 0x1, 0x1);
        gbc.writeMem(0x6f54, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 3C 03E6
        gbc.setState(0x7cff, 0x736a, 0x89e0, 0x9a7f, 0x66f1, 0xf98d, 0x0, 0x1);
        gbc.writeMem(0x7cff, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x736a, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 3C 03E7
        gbc.setState(0xacec, 0x135c, 0x8bc0, 0x51a9, 0x8303, 0xb58f, 0x0, 0x1);
        gbc.writeMem(0xacec, { 0xcb, 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x135c, gbc.sp());
        EXPECT(0xacee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacec));
        EXPECT(0x3c, gbc.readMem(0xaced));
    }
