#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_71)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_71) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 71 0001
        gbc.setState(0x566b, 0xd566, 0x3110, 0xdf90, 0x8757, 0xb221, 0x0, 0x1);
        gbc.writeMem(0x566b, { 0x71 });
        gbc.writeMem(0xb221, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd566);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb221), 0x90);
        // 71 0002
        gbc.setState(0x88c2, 0xe0fa, 0x65e0, 0x8d57, 0x7bc0, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x88c2, { 0x71 });
        gbc.writeMem(0xad3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe0fa);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c2), 0x71);
        EXPECT(gbc.readMem(0xad3b), 0x57);
        // 71 0003
        gbc.setState(0xa92d, 0xa3e2, 0xd170, 0x9a05, 0x52ce, 0x8fac, 0x1, 0x1);
        gbc.writeMem(0x8fac, { 0x0 });
        gbc.writeMem(0xa92d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa3e2);
        EXPECT(gbc.pc(), 0xa92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fac), 0x5);
        EXPECT(gbc.readMem(0xa92d), 0x71);
        // 71 0004
        gbc.setState(0x1da4, 0xb253, 0xf640, 0xf512, 0x919, 0xecb3, 0x0, 0x1);
        gbc.writeMem(0x1da4, { 0x71 });
        gbc.writeMem(0xecb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb253);
        EXPECT(gbc.pc(), 0x1da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb3), 0x12);
        // 71 0005
        gbc.setState(0x2c4e, 0x6284, 0x4fc0, 0xf9a, 0xc406, 0xde6f, 0x1, 0x0);
        gbc.writeMem(0x2c4e, { 0x71 });
        gbc.writeMem(0xde6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6284);
        EXPECT(gbc.pc(), 0x2c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6f), 0x9a);
        // 71 0007
        gbc.setState(0xd918, 0x7576, 0x4cf0, 0x3599, 0x838a, 0xcb21, 0x0, 0x0);
        gbc.writeMem(0xcb21, { 0x0 });
        gbc.writeMem(0xd918, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7576);
        EXPECT(gbc.pc(), 0xd919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb21), 0x99);
        EXPECT(gbc.readMem(0xd918), 0x71);
        // 71 000A
        gbc.setState(0x461e, 0xaef1, 0xa930, 0x2187, 0xcde1, 0xf0ca, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0x71 });
        gbc.writeMem(0xf0ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaef1);
        EXPECT(gbc.pc(), 0x461f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0ca), 0x87);
        // 71 000B
        gbc.setState(0x5cf7, 0x6b8a, 0xa010, 0x43ff, 0x652e, 0xcf35, 0x1, 0x1);
        gbc.writeMem(0x5cf7, { 0x71 });
        gbc.writeMem(0xcf35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6b8a);
        EXPECT(gbc.pc(), 0x5cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf35), 0xff);
        // 71 000D
        gbc.setState(0xb36c, 0xf8e1, 0x4ce0, 0x1fc, 0x802a, 0x88bc, 0x1, 0x0);
        gbc.writeMem(0x88bc, { 0x0 });
        gbc.writeMem(0xb36c, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0xb36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bc), 0xfc);
        EXPECT(gbc.readMem(0xb36c), 0x71);
        // 71 0010
        gbc.setState(0xc967, 0xc52e, 0x6650, 0xa517, 0x2e84, 0xee47, 0x1, 0x0);
        gbc.writeMem(0xc967, { 0x71 });
        gbc.writeMem(0xee47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc52e);
        EXPECT(gbc.pc(), 0xc968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc967), 0x71);
        EXPECT(gbc.readMem(0xee47), 0x17);
        // 71 0011
        gbc.setState(0x1ad7, 0x123b, 0x2630, 0x7be6, 0x4c8a, 0xd410, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0x71 });
        gbc.writeMem(0xd410, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x123b);
        EXPECT(gbc.pc(), 0x1ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd410), 0xe6);
        // 71 0012
        gbc.setState(0x976b, 0x128c, 0xd4c0, 0x898a, 0x6ce3, 0x8bbc, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0x0 });
        gbc.writeMem(0x976b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x128c);
        EXPECT(gbc.pc(), 0x976c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bbc), 0x8a);
        EXPECT(gbc.readMem(0x976b), 0x71);
        // 71 0015
        gbc.setState(0x37ac, 0xb1a0, 0x40a0, 0xffd7, 0xfcf8, 0xb3d1, 0x1, 0x1);
        gbc.writeMem(0x37ac, { 0x71 });
        gbc.writeMem(0xb3d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb1a0);
        EXPECT(gbc.pc(), 0x37ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d1), 0xd7);
        // 71 0018
        gbc.setState(0x80e9, 0x2b87, 0xc7c0, 0xc214, 0x2dc, 0xb066, 0x1, 0x0);
        gbc.writeMem(0x80e9, { 0x71 });
        gbc.writeMem(0xb066, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0x80ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e9), 0x71);
        EXPECT(gbc.readMem(0xb066), 0x14);
        // 71 0019
        gbc.setState(0xbdc5, 0xf0dd, 0x1140, 0x2801, 0xe5dc, 0xde26, 0x0, 0x0);
        gbc.writeMem(0xbdc5, { 0x71 });
        gbc.writeMem(0xde26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0xbdc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc5), 0x71);
        EXPECT(gbc.readMem(0xde26), 0x1);
        // 71 001A
        gbc.setState(0x95f, 0xad4a, 0x44c0, 0xf877, 0x7f4d, 0x8754, 0x1, 0x0);
        gbc.writeMem(0x95f, { 0x71 });
        gbc.writeMem(0x8754, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xad4a);
        EXPECT(gbc.pc(), 0x960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8754), 0x77);
        // 71 001C
        gbc.setState(0x215b, 0x1418, 0x9ee0, 0xf814, 0x49ed, 0x9428, 0x1, 0x0);
        gbc.writeMem(0x215b, { 0x71 });
        gbc.writeMem(0x9428, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1418);
        EXPECT(gbc.pc(), 0x215c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9428), 0x14);
        // 71 001E
        gbc.setState(0x4e5f, 0x7c36, 0x3940, 0x7b64, 0x75ec, 0xd6fc, 0x1, 0x1);
        gbc.writeMem(0x4e5f, { 0x71 });
        gbc.writeMem(0xd6fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7c36);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fc), 0x64);
        // 71 0021
        gbc.setState(0x1861, 0xf9e7, 0xbe00, 0xb1f3, 0xa18e, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0x1861, { 0x71 });
        gbc.writeMem(0xd4a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf9e7);
        EXPECT(gbc.pc(), 0x1862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a9), 0xf3);
        // 71 0023
        gbc.setState(0xb7ce, 0x96cc, 0x2f40, 0xc27a, 0x36fc, 0xdea6, 0x0, 0x0);
        gbc.writeMem(0xb7ce, { 0x71 });
        gbc.writeMem(0xdea6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x96cc);
        EXPECT(gbc.pc(), 0xb7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ce), 0x71);
        EXPECT(gbc.readMem(0xdea6), 0x7a);
        // 71 0025
        gbc.setState(0xeaf7, 0xc0f2, 0x4980, 0x2198, 0x5c97, 0xb788, 0x1, 0x0);
        gbc.writeMem(0xb788, { 0x0 });
        gbc.writeMem(0xeaf7, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc0f2);
        EXPECT(gbc.pc(), 0xeaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb788), 0x98);
        EXPECT(gbc.readMem(0xeaf7), 0x71);
        // 71 0026
        gbc.setState(0x185d, 0xc25b, 0x9860, 0x7e6f, 0xfe33, 0x8288, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0x71 });
        gbc.writeMem(0x8288, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc25b);
        EXPECT(gbc.pc(), 0x185e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8288), 0x6f);
        // 71 0027
        gbc.setState(0x64c1, 0xa801, 0xb240, 0x3714, 0x9854, 0xacea, 0x0, 0x1);
        gbc.writeMem(0x64c1, { 0x71 });
        gbc.writeMem(0xacea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa801);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacea), 0x14);
        // 71 0028
        gbc.setState(0x7c75, 0xf32b, 0x70b0, 0xdefc, 0xbd9b, 0xfbdf, 0x0, 0x0);
        gbc.writeMem(0x7c75, { 0x71 });
        gbc.writeMem(0xfbdf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0x7c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbdf), 0xfc);
        // 71 0029
        gbc.setState(0x7642, 0xb75b, 0xa6d0, 0x129, 0xdfd8, 0xdc59, 0x1, 0x1);
        gbc.writeMem(0x7642, { 0x71 });
        gbc.writeMem(0xdc59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb75b);
        EXPECT(gbc.pc(), 0x7643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc59), 0x29);
        // 71 002A
        gbc.setState(0x259, 0x4e1c, 0xa4f0, 0x6f52, 0x78c3, 0xa6c6, 0x0, 0x1);
        gbc.writeMem(0x259, { 0x71 });
        gbc.writeMem(0xa6c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4e1c);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c6), 0x52);
        // 71 002E
        gbc.setState(0xeb95, 0xb187, 0xa900, 0xd539, 0x7dd9, 0xb105, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0x0 });
        gbc.writeMem(0xeb95, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb187);
        EXPECT(gbc.pc(), 0xeb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb105), 0x39);
        EXPECT(gbc.readMem(0xeb95), 0x71);
        // 71 002F
        gbc.setState(0x920d, 0x3b37, 0x1030, 0xf483, 0x5cdd, 0xc56e, 0x1, 0x1);
        gbc.writeMem(0x920d, { 0x71 });
        gbc.writeMem(0xc56e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3b37);
        EXPECT(gbc.pc(), 0x920e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920d), 0x71);
        EXPECT(gbc.readMem(0xc56e), 0x83);
        // 71 0033
        gbc.setState(0xb91d, 0xe66f, 0xccd0, 0xd7ff, 0xbce9, 0xabd4, 0x1, 0x0);
        gbc.writeMem(0xabd4, { 0x0 });
        gbc.writeMem(0xb91d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe66f);
        EXPECT(gbc.pc(), 0xb91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd4), 0xff);
        EXPECT(gbc.readMem(0xb91d), 0x71);
        // 71 0034
        gbc.setState(0xd8ee, 0x676, 0x9e50, 0xc28a, 0xe984, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0x9cfa, { 0x0 });
        gbc.writeMem(0xd8ee, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x676);
        EXPECT(gbc.pc(), 0xd8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cfa), 0x8a);
        EXPECT(gbc.readMem(0xd8ee), 0x71);
        // 71 0038
        gbc.setState(0x111e, 0x9278, 0x7d90, 0xeb7, 0x6b93, 0xe552, 0x0, 0x0);
        gbc.writeMem(0x111e, { 0x71 });
        gbc.writeMem(0xe552, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9278);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe552), 0xb7);
        // 71 003A
        gbc.setState(0x69d8, 0xda4e, 0xf2d0, 0xaf54, 0x4876, 0x9b75, 0x1, 0x1);
        gbc.writeMem(0x69d8, { 0x71 });
        gbc.writeMem(0x9b75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xda4e);
        EXPECT(gbc.pc(), 0x69d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b75), 0x54);
        // 71 003D
        gbc.setState(0x596c, 0x6fa5, 0x4ff0, 0xa22c, 0x8711, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0x596c, { 0x71 });
        gbc.writeMem(0xbbb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x596d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb4), 0x2c);
        // 71 003E
        gbc.setState(0x7a23, 0xe518, 0xd000, 0x22b8, 0xbb11, 0xf7b1, 0x0, 0x0);
        gbc.writeMem(0x7a23, { 0x71 });
        gbc.writeMem(0xf7b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe518);
        EXPECT(gbc.pc(), 0x7a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7b1), 0xb8);
        // 71 0040
        gbc.setState(0x7946, 0xce0b, 0xe000, 0xe52b, 0x1058, 0xc63d, 0x1, 0x1);
        gbc.writeMem(0x7946, { 0x71 });
        gbc.writeMem(0xc63d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xce0b);
        EXPECT(gbc.pc(), 0x7947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63d), 0x2b);
        // 71 0044
        gbc.setState(0x4e6f, 0x2ad9, 0x4fb0, 0x404d, 0x1a77, 0xd38c, 0x1, 0x0);
        gbc.writeMem(0x4e6f, { 0x71 });
        gbc.writeMem(0xd38c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2ad9);
        EXPECT(gbc.pc(), 0x4e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38c), 0x4d);
        // 71 0047
        gbc.setState(0xd47, 0x5cf5, 0xa400, 0xc0f2, 0x84fd, 0xe0e9, 0x0, 0x0);
        gbc.writeMem(0xd47, { 0x71 });
        gbc.writeMem(0xe0e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5cf5);
        EXPECT(gbc.pc(), 0xd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e9), 0xf2);
        // 71 004A
        gbc.setState(0x572, 0x3741, 0x5830, 0x36fb, 0x808, 0xa4d6, 0x1, 0x1);
        gbc.writeMem(0x572, { 0x71 });
        gbc.writeMem(0xa4d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3741);
        EXPECT(gbc.pc(), 0x573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xfb);
        // 71 0050
        gbc.setState(0xea98, 0x93af, 0x2b70, 0xea84, 0x3adc, 0xbacb, 0x1, 0x0);
        gbc.writeMem(0xbacb, { 0x0 });
        gbc.writeMem(0xea98, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x93af);
        EXPECT(gbc.pc(), 0xea99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbacb), 0x84);
        EXPECT(gbc.readMem(0xea98), 0x71);
        // 71 0052
        gbc.setState(0x4c5d, 0x7b74, 0x8740, 0x1453, 0xcb21, 0xa27f, 0x1, 0x1);
        gbc.writeMem(0x4c5d, { 0x71 });
        gbc.writeMem(0xa27f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7b74);
        EXPECT(gbc.pc(), 0x4c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27f), 0x53);
        // 71 0053
        gbc.setState(0x190e, 0xf879, 0x62f0, 0xc5b3, 0x6e2b, 0x85d8, 0x0, 0x0);
        gbc.writeMem(0x190e, { 0x71 });
        gbc.writeMem(0x85d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf879);
        EXPECT(gbc.pc(), 0x190f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d8), 0xb3);
        // 71 0054
        gbc.setState(0xe83a, 0xcd7b, 0x6620, 0x9ce4, 0x39c8, 0xf8bf, 0x1, 0x1);
        gbc.writeMem(0xe83a, { 0x71 });
        gbc.writeMem(0xf8bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcd7b);
        EXPECT(gbc.pc(), 0xe83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83a), 0x71);
        EXPECT(gbc.readMem(0xf8bf), 0xe4);
        // 71 0058
        gbc.setState(0xb9a, 0x55f5, 0x2490, 0x6dac, 0x5c0, 0xa807, 0x1, 0x0);
        gbc.writeMem(0xb9a, { 0x71 });
        gbc.writeMem(0xa807, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x55f5);
        EXPECT(gbc.pc(), 0xb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa807), 0xac);
        // 71 0059
        gbc.setState(0x863e, 0x5ad6, 0xf580, 0xc21c, 0xb74b, 0xdbbe, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0x71 });
        gbc.writeMem(0xdbbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0x863f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863e), 0x71);
        EXPECT(gbc.readMem(0xdbbe), 0x1c);
        // 71 005A
        gbc.setState(0xe370, 0xc653, 0xb620, 0xbbd1, 0x129c, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0xd4fd, { 0x0 });
        gbc.writeMem(0xe370, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc653);
        EXPECT(gbc.pc(), 0xe371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fd), 0xd1);
        EXPECT(gbc.readMem(0xe370), 0x71);
        // 71 0060
        gbc.setState(0x71db, 0x3959, 0x2d70, 0xa14f, 0x2a14, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x71db, { 0x71 });
        gbc.writeMem(0x9b1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3959);
        EXPECT(gbc.pc(), 0x71dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1a), 0x4f);
        // 71 0062
        gbc.setState(0x61e3, 0xccd5, 0xbe0, 0xc216, 0x2ea7, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x61e3, { 0x71 });
        gbc.writeMem(0xb96e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xccd5);
        EXPECT(gbc.pc(), 0x61e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96e), 0x16);
        // 71 0063
        gbc.setState(0x665b, 0x250e, 0x7080, 0x2f3e, 0x36f8, 0xcb0b, 0x0, 0x1);
        gbc.writeMem(0x665b, { 0x71 });
        gbc.writeMem(0xcb0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x250e);
        EXPECT(gbc.pc(), 0x665c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0b), 0x3e);
        // 71 0064
        gbc.setState(0xa10a, 0xcc6, 0xc990, 0x3ca3, 0x25d6, 0xfc08, 0x0, 0x1);
        gbc.writeMem(0xa10a, { 0x71 });
        gbc.writeMem(0xfc08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcc6);
        EXPECT(gbc.pc(), 0xa10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10a), 0x71);
        EXPECT(gbc.readMem(0xfc08), 0xa3);
        // 71 0067
        gbc.setState(0xf9e, 0x4090, 0x9800, 0x1d4d, 0x8397, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0x71 });
        gbc.writeMem(0xdea6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea6), 0x4d);
        // 71 0068
        gbc.setState(0xce3, 0x2775, 0x8950, 0x1761, 0x54bd, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0xce3, { 0x71 });
        gbc.writeMem(0xaec3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2775);
        EXPECT(gbc.pc(), 0xce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec3), 0x61);
        // 71 0069
        gbc.setState(0xc75d, 0x77d2, 0x1e30, 0x3f07, 0xfce8, 0x9a07, 0x1, 0x1);
        gbc.writeMem(0x9a07, { 0x0 });
        gbc.writeMem(0xc75d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x77d2);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a07), 0x7);
        EXPECT(gbc.readMem(0xc75d), 0x71);
        // 71 006A
        gbc.setState(0x1ff4, 0x95ac, 0x9a90, 0x5844, 0x3732, 0xc425, 0x1, 0x0);
        gbc.writeMem(0x1ff4, { 0x71 });
        gbc.writeMem(0xc425, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x95ac);
        EXPECT(gbc.pc(), 0x1ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc425), 0x44);
        // 71 006C
        gbc.setState(0x94e8, 0x2945, 0x4a60, 0x792d, 0x2ec, 0xec8d, 0x0, 0x0);
        gbc.writeMem(0x94e8, { 0x71 });
        gbc.writeMem(0xec8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2945);
        EXPECT(gbc.pc(), 0x94e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e8), 0x71);
        EXPECT(gbc.readMem(0xec8d), 0x2d);
        // 71 006F
        gbc.setState(0xa42b, 0xc682, 0xa360, 0x17f4, 0xfef, 0xdc0e, 0x0, 0x1);
        gbc.writeMem(0xa42b, { 0x71 });
        gbc.writeMem(0xdc0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc682);
        EXPECT(gbc.pc(), 0xa42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42b), 0x71);
        EXPECT(gbc.readMem(0xdc0e), 0xf4);
        // 71 0071
        gbc.setState(0x76c1, 0x4d65, 0x1900, 0x36b, 0xc150, 0x9428, 0x0, 0x0);
        gbc.writeMem(0x76c1, { 0x71 });
        gbc.writeMem(0x9428, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0x76c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9428), 0x6b);
        // 71 0073
        gbc.setState(0x9c35, 0xf3e1, 0x8740, 0x6614, 0x51d4, 0x9be0, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0x0 });
        gbc.writeMem(0x9c35, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf3e1);
        EXPECT(gbc.pc(), 0x9c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be0), 0x14);
        EXPECT(gbc.readMem(0x9c35), 0x71);
        // 71 0074
        gbc.setState(0x40c2, 0x1d11, 0xaf30, 0x9382, 0x94f9, 0xf186, 0x0, 0x1);
        gbc.writeMem(0x40c2, { 0x71 });
        gbc.writeMem(0xf186, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1d11);
        EXPECT(gbc.pc(), 0x40c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf186), 0x82);
        // 71 0076
        gbc.setState(0xcae5, 0xb151, 0x5470, 0x5876, 0xa8eb, 0xa089, 0x0, 0x1);
        gbc.writeMem(0xa089, { 0x0 });
        gbc.writeMem(0xcae5, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb151);
        EXPECT(gbc.pc(), 0xcae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa089), 0x76);
        EXPECT(gbc.readMem(0xcae5), 0x71);
        // 71 007A
        gbc.setState(0x8a9b, 0x4d96, 0xede0, 0x1ee2, 0xaaa6, 0xb390, 0x0, 0x0);
        gbc.writeMem(0x8a9b, { 0x71 });
        gbc.writeMem(0xb390, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4d96);
        EXPECT(gbc.pc(), 0x8a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9b), 0x71);
        EXPECT(gbc.readMem(0xb390), 0xe2);
        // 71 0081
        gbc.setState(0x18a5, 0xf569, 0xfcc0, 0xc9ec, 0xc695, 0xdf9b, 0x1, 0x0);
        gbc.writeMem(0x18a5, { 0x71 });
        gbc.writeMem(0xdf9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf569);
        EXPECT(gbc.pc(), 0x18a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9b), 0xec);
        // 71 0084
        gbc.setState(0x9ded, 0xa686, 0xa070, 0xd954, 0xcba8, 0xec28, 0x0, 0x0);
        gbc.writeMem(0x9ded, { 0x71 });
        gbc.writeMem(0xec28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa686);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ded), 0x71);
        EXPECT(gbc.readMem(0xec28), 0x54);
        // 71 0089
        gbc.setState(0xcb91, 0xf776, 0x85d0, 0x5ca7, 0x215c, 0xd174, 0x1, 0x1);
        gbc.writeMem(0xcb91, { 0x71 });
        gbc.writeMem(0xd174, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf776);
        EXPECT(gbc.pc(), 0xcb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb91), 0x71);
        EXPECT(gbc.readMem(0xd174), 0xa7);
        // 71 008B
        gbc.setState(0xe835, 0x9fef, 0xc9e0, 0xbdd8, 0x573e, 0x9c97, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0x0 });
        gbc.writeMem(0xe835, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0xe836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c97), 0xd8);
        EXPECT(gbc.readMem(0xe835), 0x71);
        // 71 008C
        gbc.setState(0x112f, 0x7c7c, 0xa810, 0x3a1a, 0x4027, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x112f, { 0x71 });
        gbc.writeMem(0xc4f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7c7c);
        EXPECT(gbc.pc(), 0x1130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f6), 0x1a);
        // 71 0090
        gbc.setState(0x88bb, 0x634c, 0x4d70, 0x85f, 0x4ce8, 0x9a84, 0x0, 0x1);
        gbc.writeMem(0x88bb, { 0x71 });
        gbc.writeMem(0x9a84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x634c);
        EXPECT(gbc.pc(), 0x88bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bb), 0x71);
        EXPECT(gbc.readMem(0x9a84), 0x5f);
        // 71 0094
        gbc.setState(0x2880, 0x3536, 0x23f0, 0xefa, 0x6ec7, 0xdef3, 0x1, 0x1);
        gbc.writeMem(0x2880, { 0x71 });
        gbc.writeMem(0xdef3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3536);
        EXPECT(gbc.pc(), 0x2881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef3), 0xfa);
        // 71 0095
        gbc.setState(0x6cb8, 0x189d, 0xd2c0, 0xbffc, 0x7cbf, 0xe261, 0x0, 0x1);
        gbc.writeMem(0x6cb8, { 0x71 });
        gbc.writeMem(0xe261, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x189d);
        EXPECT(gbc.pc(), 0x6cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe261), 0xfc);
        // 71 0099
        gbc.setState(0x4d68, 0x4ad, 0xf380, 0x7b7d, 0xbdd9, 0xf5b3, 0x1, 0x0);
        gbc.writeMem(0x4d68, { 0x71 });
        gbc.writeMem(0xf5b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0x4d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5b3), 0x7d);
        // 71 009A
        gbc.setState(0x4cc9, 0x9a26, 0x42e0, 0xadf9, 0xd2e4, 0xfdbb, 0x1, 0x1);
        gbc.writeMem(0x4cc9, { 0x71 });
        gbc.writeMem(0xfdbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9a26);
        EXPECT(gbc.pc(), 0x4cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdbb), 0xf9);
        // 71 009B
        gbc.setState(0xd9ec, 0x3a29, 0x7e10, 0x6894, 0x8ce7, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0x0 });
        gbc.writeMem(0xd9ec, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3a29);
        EXPECT(gbc.pc(), 0xd9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cd), 0x94);
        EXPECT(gbc.readMem(0xd9ec), 0x71);
        // 71 009D
        gbc.setState(0xcd43, 0x9b0e, 0xa000, 0xdfe9, 0x1666, 0x9d2d, 0x0, 0x1);
        gbc.writeMem(0x9d2d, { 0x0 });
        gbc.writeMem(0xcd43, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9b0e);
        EXPECT(gbc.pc(), 0xcd44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2d), 0xe9);
        EXPECT(gbc.readMem(0xcd43), 0x71);
        // 71 009E
        gbc.setState(0x3efe, 0x5d6c, 0x4ab0, 0x7d28, 0xbfcb, 0xd0a7, 0x0, 0x1);
        gbc.writeMem(0x3efe, { 0x71 });
        gbc.writeMem(0xd0a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5d6c);
        EXPECT(gbc.pc(), 0x3eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a7), 0x28);
        // 71 00A2
        gbc.setState(0x1e9c, 0xef5, 0x6060, 0xaad9, 0x1735, 0x8fb0, 0x0, 0x0);
        gbc.writeMem(0x1e9c, { 0x71 });
        gbc.writeMem(0x8fb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xef5);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb0), 0xd9);
        // 71 00A4
        gbc.setState(0xe9be, 0x4ade, 0x2ab0, 0xdbf8, 0xd33f, 0xecfc, 0x0, 0x0);
        gbc.writeMem(0xe9be, { 0x71 });
        gbc.writeMem(0xecfc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4ade);
        EXPECT(gbc.pc(), 0xe9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9be), 0x71);
        EXPECT(gbc.readMem(0xecfc), 0xf8);
        // 71 00A5
        gbc.setState(0x1ac8, 0x80f5, 0xc640, 0x7aca, 0xb1cc, 0x87eb, 0x1, 0x1);
        gbc.writeMem(0x1ac8, { 0x71 });
        gbc.writeMem(0x87eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x80f5);
        EXPECT(gbc.pc(), 0x1ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87eb), 0xca);
        // 71 00A6
        gbc.setState(0xddcd, 0x6b82, 0x3b40, 0x2eb5, 0x3b20, 0x91ca, 0x1, 0x0);
        gbc.writeMem(0x91ca, { 0x0 });
        gbc.writeMem(0xddcd, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6b82);
        EXPECT(gbc.pc(), 0xddce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ca), 0xb5);
        EXPECT(gbc.readMem(0xddcd), 0x71);
        // 71 00A9
        gbc.setState(0xd621, 0x9f0c, 0xa6c0, 0x17d4, 0x51bf, 0x9c73, 0x0, 0x1);
        gbc.writeMem(0x9c73, { 0x0 });
        gbc.writeMem(0xd621, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0xd622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c73), 0xd4);
        EXPECT(gbc.readMem(0xd621), 0x71);
        // 71 00AD
        gbc.setState(0x39b2, 0x5d9e, 0xd060, 0x9c32, 0xa56, 0x9c55, 0x0, 0x1);
        gbc.writeMem(0x39b2, { 0x71 });
        gbc.writeMem(0x9c55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5d9e);
        EXPECT(gbc.pc(), 0x39b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c55), 0x32);
        // 71 00B0
        gbc.setState(0x806, 0x4557, 0xdf80, 0x2d2, 0xbf0e, 0xfbb0, 0x0, 0x1);
        gbc.writeMem(0x806, { 0x71 });
        gbc.writeMem(0xfbb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4557);
        EXPECT(gbc.pc(), 0x807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbb0), 0xd2);
        // 71 00B1
        gbc.setState(0x49c2, 0xfb6f, 0x1000, 0x1226, 0xc02e, 0xe5ca, 0x1, 0x0);
        gbc.writeMem(0x49c2, { 0x71 });
        gbc.writeMem(0xe5ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfb6f);
        EXPECT(gbc.pc(), 0x49c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ca), 0x26);
        // 71 00B3
        gbc.setState(0x3401, 0xba64, 0x7a70, 0x383b, 0xa62c, 0xd426, 0x1, 0x0);
        gbc.writeMem(0x3401, { 0x71 });
        gbc.writeMem(0xd426, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xba64);
        EXPECT(gbc.pc(), 0x3402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd426), 0x3b);
        // 71 00B4
        gbc.setState(0x7d35, 0xded1, 0x2ef0, 0x79de, 0xf471, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0x71 });
        gbc.writeMem(0xdf3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xded1);
        EXPECT(gbc.pc(), 0x7d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3e), 0xde);
        // 71 00B5
        gbc.setState(0x8189, 0x2a2a, 0x80c0, 0xf6ac, 0x709, 0xd25d, 0x0, 0x0);
        gbc.writeMem(0x8189, { 0x71 });
        gbc.writeMem(0xd25d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0x818a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8189), 0x71);
        EXPECT(gbc.readMem(0xd25d), 0xac);
        // 71 00B7
        gbc.setState(0xb28e, 0xb5d4, 0x59a0, 0x9bdb, 0xf5e4, 0xade1, 0x1, 0x1);
        gbc.writeMem(0xade1, { 0x0 });
        gbc.writeMem(0xb28e, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb5d4);
        EXPECT(gbc.pc(), 0xb28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade1), 0xdb);
        EXPECT(gbc.readMem(0xb28e), 0x71);
        // 71 00B8
        gbc.setState(0xb02e, 0xf060, 0x53d0, 0xca93, 0x8043, 0xadaf, 0x1, 0x1);
        gbc.writeMem(0xadaf, { 0x0 });
        gbc.writeMem(0xb02e, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf060);
        EXPECT(gbc.pc(), 0xb02f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadaf), 0x93);
        EXPECT(gbc.readMem(0xb02e), 0x71);
        // 71 00BD
        gbc.setState(0xe25e, 0x2dcf, 0xb250, 0x3b53, 0x4789, 0x804b, 0x1, 0x1);
        gbc.writeMem(0x804b, { 0x0 });
        gbc.writeMem(0xe25e, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2dcf);
        EXPECT(gbc.pc(), 0xe25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804b), 0x53);
        EXPECT(gbc.readMem(0xe25e), 0x71);
        // 71 00BE
        gbc.setState(0xacfa, 0xfa77, 0xb60, 0x3f9d, 0x424, 0x8ef9, 0x1, 0x0);
        gbc.writeMem(0x8ef9, { 0x0 });
        gbc.writeMem(0xacfa, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfa77);
        EXPECT(gbc.pc(), 0xacfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef9), 0x9d);
        EXPECT(gbc.readMem(0xacfa), 0x71);
        // 71 00C2
        gbc.setState(0xa9e6, 0xbb63, 0x6140, 0xfc8e, 0x1206, 0xf7b5, 0x1, 0x1);
        gbc.writeMem(0xa9e6, { 0x71 });
        gbc.writeMem(0xf7b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbb63);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e6), 0x71);
        EXPECT(gbc.readMem(0xf7b5), 0x8e);
        // 71 00C3
        gbc.setState(0x554e, 0x16ae, 0xd4d0, 0x7300, 0x799c, 0xe950, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x71 });
        gbc.writeMem(0xe950, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x16ae);
        EXPECT(gbc.pc(), 0x554f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe950), 0x0);
        // 71 00C8
        gbc.setState(0xe65b, 0x6d87, 0x9500, 0x22a1, 0xed44, 0xbca1, 0x1, 0x1);
        gbc.writeMem(0xbca1, { 0x0 });
        gbc.writeMem(0xe65b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0xe65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca1), 0xa1);
        EXPECT(gbc.readMem(0xe65b), 0x71);
        // 71 00CA
        gbc.setState(0x91bc, 0x10c0, 0x83b0, 0x6f88, 0xe53c, 0xda79, 0x1, 0x1);
        gbc.writeMem(0x91bc, { 0x71 });
        gbc.writeMem(0xda79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x10c0);
        EXPECT(gbc.pc(), 0x91bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91bc), 0x71);
        EXPECT(gbc.readMem(0xda79), 0x88);
        // 71 00CD
        gbc.setState(0x7a8e, 0x19ca, 0x9ca0, 0x6758, 0xab4, 0xca63, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0x71 });
        gbc.writeMem(0xca63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x19ca);
        EXPECT(gbc.pc(), 0x7a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca63), 0x58);
        // 71 00CE
        gbc.setState(0x4648, 0x85d, 0x9ac0, 0x50a4, 0xe6cf, 0xe15f, 0x0, 0x0);
        gbc.writeMem(0x4648, { 0x71 });
        gbc.writeMem(0xe15f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x85d);
        EXPECT(gbc.pc(), 0x4649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15f), 0xa4);
        // 71 00CF
        gbc.setState(0x6172, 0xd0fe, 0xab10, 0x1b1a, 0x9419, 0x978e, 0x1, 0x0);
        gbc.writeMem(0x6172, { 0x71 });
        gbc.writeMem(0x978e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd0fe);
        EXPECT(gbc.pc(), 0x6173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978e), 0x1a);
        // 71 00D1
        gbc.setState(0xbb5c, 0xe546, 0x41b0, 0x552d, 0x2765, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0xbb5c, { 0x71 });
        gbc.writeMem(0xe16c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe546);
        EXPECT(gbc.pc(), 0xbb5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5c), 0x71);
        EXPECT(gbc.readMem(0xe16c), 0x2d);
        // 71 00D2
        gbc.setState(0xe3ff, 0xfa8e, 0xec90, 0x8b94, 0xb03, 0x85bf, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x0 });
        gbc.writeMem(0xe3ff, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85bf), 0x94);
        EXPECT(gbc.readMem(0xe3ff), 0x71);
        // 71 00D3
        gbc.setState(0xe366, 0x3e40, 0x9110, 0xeadf, 0xfbe4, 0xbaa3, 0x1, 0x1);
        gbc.writeMem(0xbaa3, { 0x0 });
        gbc.writeMem(0xe366, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3e40);
        EXPECT(gbc.pc(), 0xe367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa3), 0xdf);
        EXPECT(gbc.readMem(0xe366), 0x71);
        // 71 00D4
        gbc.setState(0xa827, 0x5af8, 0x5240, 0x50f, 0x6cb0, 0xf2b8, 0x1, 0x0);
        gbc.writeMem(0xa827, { 0x71 });
        gbc.writeMem(0xf2b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5af8);
        EXPECT(gbc.pc(), 0xa828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa827), 0x71);
        EXPECT(gbc.readMem(0xf2b8), 0xf);
        // 71 00D7
        gbc.setState(0xd5ea, 0xe5ca, 0x19b0, 0xa73, 0x4a5d, 0xd942, 0x1, 0x0);
        gbc.writeMem(0xd5ea, { 0x71 });
        gbc.writeMem(0xd942, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe5ca);
        EXPECT(gbc.pc(), 0xd5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ea), 0x71);
        EXPECT(gbc.readMem(0xd942), 0x73);
        // 71 00DA
        gbc.setState(0xa430, 0xfe4f, 0xb7f0, 0xb14, 0x7750, 0x8367, 0x0, 0x0);
        gbc.writeMem(0x8367, { 0x0 });
        gbc.writeMem(0xa430, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfe4f);
        EXPECT(gbc.pc(), 0xa431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8367), 0x14);
        EXPECT(gbc.readMem(0xa430), 0x71);
        // 71 00DC
        gbc.setState(0x8e3c, 0x16ad, 0x7890, 0x448c, 0x9e1c, 0xcacf, 0x0, 0x0);
        gbc.writeMem(0x8e3c, { 0x71 });
        gbc.writeMem(0xcacf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x16ad);
        EXPECT(gbc.pc(), 0x8e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3c), 0x71);
        EXPECT(gbc.readMem(0xcacf), 0x8c);
        // 71 00E1
        gbc.setState(0x8612, 0x4f27, 0x7830, 0x21ce, 0x312, 0xeda6, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0x71 });
        gbc.writeMem(0xeda6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4f27);
        EXPECT(gbc.pc(), 0x8613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8612), 0x71);
        EXPECT(gbc.readMem(0xeda6), 0xce);
        // 71 00E2
        gbc.setState(0xcb17, 0x6e8a, 0x2c00, 0x8673, 0xcc03, 0xd04a, 0x0, 0x0);
        gbc.writeMem(0xcb17, { 0x71 });
        gbc.writeMem(0xd04a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6e8a);
        EXPECT(gbc.pc(), 0xcb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb17), 0x71);
        EXPECT(gbc.readMem(0xd04a), 0x73);
        // 71 00E4
        gbc.setState(0x69a3, 0xe12b, 0x6680, 0x6d08, 0x49f8, 0xc0dd, 0x1, 0x0);
        gbc.writeMem(0x69a3, { 0x71 });
        gbc.writeMem(0xc0dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe12b);
        EXPECT(gbc.pc(), 0x69a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0dd), 0x8);
        // 71 00E5
        gbc.setState(0x5ca9, 0xf1a8, 0xab70, 0xde5b, 0x51fa, 0xf846, 0x0, 0x0);
        gbc.writeMem(0x5ca9, { 0x71 });
        gbc.writeMem(0xf846, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0x5caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf846), 0x5b);
        // 71 00E8
        gbc.setState(0x8844, 0xb30e, 0x2f10, 0x12e1, 0xc517, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0x81e9, { 0x0 });
        gbc.writeMem(0x8844, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb30e);
        EXPECT(gbc.pc(), 0x8845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e9), 0xe1);
        EXPECT(gbc.readMem(0x8844), 0x71);
        // 71 00EA
        gbc.setState(0x647b, 0x9ebd, 0x6aa0, 0x6829, 0xf036, 0xe386, 0x0, 0x1);
        gbc.writeMem(0x647b, { 0x71 });
        gbc.writeMem(0xe386, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9ebd);
        EXPECT(gbc.pc(), 0x647c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe386), 0x29);
        // 71 00EC
        gbc.setState(0x68d, 0xfb7c, 0xd930, 0x2b3c, 0x68be, 0xd0bb, 0x0, 0x0);
        gbc.writeMem(0x68d, { 0x71 });
        gbc.writeMem(0xd0bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0x68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bb), 0x3c);
        // 71 00EE
        gbc.setState(0xdc42, 0x9dda, 0x6c00, 0xb424, 0x5d40, 0x9307, 0x1, 0x0);
        gbc.writeMem(0x9307, { 0x0 });
        gbc.writeMem(0xdc42, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9dda);
        EXPECT(gbc.pc(), 0xdc43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9307), 0x24);
        EXPECT(gbc.readMem(0xdc42), 0x71);
        // 71 00F1
        gbc.setState(0xa09d, 0xd43e, 0xfd40, 0x739e, 0x8fb2, 0xbf87, 0x1, 0x0);
        gbc.writeMem(0xa09d, { 0x71 });
        gbc.writeMem(0xbf87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0x71);
        EXPECT(gbc.readMem(0xbf87), 0x9e);
        // 71 00F2
        gbc.setState(0x9caa, 0xb0f8, 0x1350, 0x5931, 0xe52c, 0xa2fa, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0x71 });
        gbc.writeMem(0xa2fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb0f8);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caa), 0x71);
        EXPECT(gbc.readMem(0xa2fa), 0x31);
        // 71 00F3
        gbc.setState(0xaf24, 0x3388, 0x4340, 0x446b, 0x7deb, 0xde23, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0x71 });
        gbc.writeMem(0xde23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3388);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf24), 0x71);
        EXPECT(gbc.readMem(0xde23), 0x6b);
        // 71 00F4
        gbc.setState(0x6cb8, 0x6cd0, 0x7b50, 0x4012, 0xb494, 0xf123, 0x1, 0x0);
        gbc.writeMem(0x6cb8, { 0x71 });
        gbc.writeMem(0xf123, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6cd0);
        EXPECT(gbc.pc(), 0x6cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf123), 0x12);
        // 71 00F5
        gbc.setState(0x327c, 0xd68a, 0x2b90, 0x5fb4, 0x3be5, 0xb77b, 0x0, 0x0);
        gbc.writeMem(0x327c, { 0x71 });
        gbc.writeMem(0xb77b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd68a);
        EXPECT(gbc.pc(), 0x327d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77b), 0xb4);
        // 71 00F6
        gbc.setState(0x44ee, 0xcd3e, 0x5290, 0xfdd3, 0xd60c, 0xf294, 0x0, 0x1);
        gbc.writeMem(0x44ee, { 0x71 });
        gbc.writeMem(0xf294, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x44ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf294), 0xd3);
        // 71 00FD
        gbc.setState(0xdf42, 0x277e, 0x5460, 0xcbb8, 0xe963, 0x996a, 0x0, 0x0);
        gbc.writeMem(0x996a, { 0x0 });
        gbc.writeMem(0xdf42, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x277e);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996a), 0xb8);
        EXPECT(gbc.readMem(0xdf42), 0x71);
        // 71 00FF
        gbc.setState(0x7694, 0x9e52, 0xe2b0, 0x7b50, 0xe833, 0xeb16, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0x71 });
        gbc.writeMem(0xeb16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb16), 0x50);
        // 71 0100
        gbc.setState(0x1203, 0x5a78, 0xc150, 0xcbbf, 0x7119, 0xad33, 0x0, 0x1);
        gbc.writeMem(0x1203, { 0x71 });
        gbc.writeMem(0xad33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5a78);
        EXPECT(gbc.pc(), 0x1204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad33), 0xbf);
        // 71 0102
        gbc.setState(0xaf0f, 0xf6a9, 0x7aa0, 0x3227, 0x1487, 0xd7e9, 0x1, 0x0);
        gbc.writeMem(0xaf0f, { 0x71 });
        gbc.writeMem(0xd7e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf6a9);
        EXPECT(gbc.pc(), 0xaf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0f), 0x71);
        EXPECT(gbc.readMem(0xd7e9), 0x27);
        // 71 0103
        gbc.setState(0x7964, 0xbc91, 0xbcc0, 0x6b30, 0xb5a6, 0xcd9b, 0x1, 0x1);
        gbc.writeMem(0x7964, { 0x71 });
        gbc.writeMem(0xcd9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbc91);
        EXPECT(gbc.pc(), 0x7965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9b), 0x30);
        // 71 010A
        gbc.setState(0x7141, 0xab9d, 0x2d0, 0xc589, 0x56fd, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x7141, { 0x71 });
        gbc.writeMem(0xf3c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xab9d);
        EXPECT(gbc.pc(), 0x7142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3c3), 0x89);
        // 71 010B
        gbc.setState(0x8741, 0xe21d, 0xb530, 0x3bc5, 0x40bc, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0x8741, { 0x71 });
        gbc.writeMem(0xa36a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe21d);
        EXPECT(gbc.pc(), 0x8742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8741), 0x71);
        EXPECT(gbc.readMem(0xa36a), 0xc5);
        // 71 010E
        gbc.setState(0x4ed7, 0xcf2b, 0x6810, 0xc38f, 0xb5d5, 0x8bec, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0x71 });
        gbc.writeMem(0x8bec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcf2b);
        EXPECT(gbc.pc(), 0x4ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bec), 0x8f);
        // 71 0112
        gbc.setState(0x9f1a, 0xe8ef, 0xd500, 0xd9a2, 0x90aa, 0xe8a3, 0x0, 0x1);
        gbc.writeMem(0x9f1a, { 0x71 });
        gbc.writeMem(0xe8a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe8ef);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1a), 0x71);
        EXPECT(gbc.readMem(0xe8a3), 0xa2);
        // 71 0113
        gbc.setState(0xef80, 0xa2c1, 0x9020, 0x477b, 0x22da, 0xabf5, 0x1, 0x1);
        gbc.writeMem(0xabf5, { 0x0 });
        gbc.writeMem(0xef80, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa2c1);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf5), 0x7b);
        EXPECT(gbc.readMem(0xef80), 0x71);
        // 71 0114
        gbc.setState(0x93a1, 0xdad9, 0xf840, 0xcf2a, 0x101d, 0xc9e4, 0x0, 0x1);
        gbc.writeMem(0x93a1, { 0x71 });
        gbc.writeMem(0xc9e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdad9);
        EXPECT(gbc.pc(), 0x93a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a1), 0x71);
        EXPECT(gbc.readMem(0xc9e4), 0x2a);
        // 71 0116
        gbc.setState(0xc562, 0xed3f, 0x7250, 0x67ee, 0x9d1d, 0xc950, 0x1, 0x1);
        gbc.writeMem(0xc562, { 0x71 });
        gbc.writeMem(0xc950, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xed3f);
        EXPECT(gbc.pc(), 0xc563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc562), 0x71);
        EXPECT(gbc.readMem(0xc950), 0xee);
        // 71 0118
        gbc.setState(0x1977, 0x6781, 0xa470, 0x70d0, 0x66e0, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x1977, { 0x71 });
        gbc.writeMem(0xa81a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6781);
        EXPECT(gbc.pc(), 0x1978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81a), 0xd0);
        // 71 0119
        gbc.setState(0x56b8, 0x5a7a, 0x6160, 0xea83, 0x538b, 0x80da, 0x0, 0x1);
        gbc.writeMem(0x56b8, { 0x71 });
        gbc.writeMem(0x80da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5a7a);
        EXPECT(gbc.pc(), 0x56b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80da), 0x83);
        // 71 011B
        gbc.setState(0x5dad, 0x1138, 0x220, 0xd89e, 0x14cb, 0xb4b4, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0x71 });
        gbc.writeMem(0xb4b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1138);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b4), 0x9e);
        // 71 011C
        gbc.setState(0x2bd3, 0xf0dd, 0xe7b0, 0xe40e, 0x3df7, 0xb1bf, 0x1, 0x1);
        gbc.writeMem(0x2bd3, { 0x71 });
        gbc.writeMem(0xb1bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x2bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1bf), 0xe);
        // 71 0122
        gbc.setState(0xbc7, 0x8d5a, 0xf9f0, 0xb02a, 0xb8d4, 0xba91, 0x0, 0x1);
        gbc.writeMem(0xbc7, { 0x71 });
        gbc.writeMem(0xba91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8d5a);
        EXPECT(gbc.pc(), 0xbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba91), 0x2a);
        // 71 0124
        gbc.setState(0xe8ef, 0xaa33, 0x61d0, 0x6019, 0x5f4b, 0xf83b, 0x0, 0x1);
        gbc.writeMem(0xe8ef, { 0x71 });
        gbc.writeMem(0xf83b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaa33);
        EXPECT(gbc.pc(), 0xe8f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ef), 0x71);
        EXPECT(gbc.readMem(0xf83b), 0x19);
        // 71 0128
        gbc.setState(0x6f42, 0x2e7c, 0x1840, 0x2406, 0xd4e6, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0x6f42, { 0x71 });
        gbc.writeMem(0x8a4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0x6f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4a), 0x6);
        // 71 012A
        gbc.setState(0xe60, 0xc8a1, 0x940, 0xddb9, 0xb89e, 0xd421, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0x71 });
        gbc.writeMem(0xd421, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc8a1);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd421), 0xb9);
        // 71 012C
        gbc.setState(0x7c6b, 0xcfc0, 0x83a0, 0x3b9a, 0x3c28, 0xf37e, 0x0, 0x1);
        gbc.writeMem(0x7c6b, { 0x71 });
        gbc.writeMem(0xf37e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcfc0);
        EXPECT(gbc.pc(), 0x7c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf37e), 0x9a);
        // 71 0134
        gbc.setState(0x1edc, 0x3a84, 0xf770, 0x25ff, 0x2b00, 0x8bfd, 0x1, 0x1);
        gbc.writeMem(0x1edc, { 0x71 });
        gbc.writeMem(0x8bfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3a84);
        EXPECT(gbc.pc(), 0x1edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfd), 0xff);
        // 71 0135
        gbc.setState(0xe057, 0xe09c, 0x6ae0, 0x4ecd, 0x56fc, 0xa21b, 0x1, 0x0);
        gbc.writeMem(0xa21b, { 0x0 });
        gbc.writeMem(0xe057, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe09c);
        EXPECT(gbc.pc(), 0xe058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa21b), 0xcd);
        EXPECT(gbc.readMem(0xe057), 0x71);
        // 71 0138
        gbc.setState(0xef67, 0x9057, 0x7930, 0x4610, 0x88d, 0xbc1b, 0x0, 0x0);
        gbc.writeMem(0xbc1b, { 0x0 });
        gbc.writeMem(0xef67, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9057);
        EXPECT(gbc.pc(), 0xef68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1b), 0x10);
        EXPECT(gbc.readMem(0xef67), 0x71);
        // 71 0139
        gbc.setState(0xaf36, 0x263c, 0x3f80, 0x739c, 0x951, 0xc2e8, 0x0, 0x1);
        gbc.writeMem(0xaf36, { 0x71 });
        gbc.writeMem(0xc2e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x263c);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf36), 0x71);
        EXPECT(gbc.readMem(0xc2e8), 0x9c);
        // 71 013A
        gbc.setState(0xe003, 0x4bd7, 0x3fe0, 0xba06, 0x4237, 0xb7f2, 0x1, 0x0);
        gbc.writeMem(0xb7f2, { 0x0 });
        gbc.writeMem(0xe003, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4bd7);
        EXPECT(gbc.pc(), 0xe004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f2), 0x6);
        EXPECT(gbc.readMem(0xe003), 0x71);
        // 71 013C
        gbc.setState(0xccaf, 0x261b, 0x8bb0, 0x348e, 0xc6e4, 0xc83a, 0x1, 0x1);
        gbc.writeMem(0xc83a, { 0x0 });
        gbc.writeMem(0xccaf, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x261b);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83a), 0x8e);
        EXPECT(gbc.readMem(0xccaf), 0x71);
        // 71 013D
        gbc.setState(0xd949, 0xd4c9, 0x5340, 0x20b0, 0xbffc, 0x9dd7, 0x1, 0x1);
        gbc.writeMem(0x9dd7, { 0x0 });
        gbc.writeMem(0xd949, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd4c9);
        EXPECT(gbc.pc(), 0xd94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd7), 0xb0);
        EXPECT(gbc.readMem(0xd949), 0x71);
        // 71 013E
        gbc.setState(0x9e3b, 0x9e8c, 0x4300, 0xf72e, 0xd5fd, 0xc982, 0x1, 0x0);
        gbc.writeMem(0x9e3b, { 0x71 });
        gbc.writeMem(0xc982, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9e8c);
        EXPECT(gbc.pc(), 0x9e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e3b), 0x71);
        EXPECT(gbc.readMem(0xc982), 0x2e);
        // 71 013F
        gbc.setState(0xc62e, 0xca1b, 0x2a90, 0xd19d, 0xba39, 0xd177, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0x71 });
        gbc.writeMem(0xd177, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xca1b);
        EXPECT(gbc.pc(), 0xc62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62e), 0x71);
        EXPECT(gbc.readMem(0xd177), 0x9d);
        // 71 0142
        gbc.setState(0xe464, 0x3b23, 0x1380, 0x42ce, 0x1b7f, 0xb582, 0x0, 0x0);
        gbc.writeMem(0xb582, { 0x0 });
        gbc.writeMem(0xe464, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3b23);
        EXPECT(gbc.pc(), 0xe465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb582), 0xce);
        EXPECT(gbc.readMem(0xe464), 0x71);
        // 71 0143
        gbc.setState(0x842, 0x4949, 0xad80, 0x9663, 0x1d3c, 0xe914, 0x0, 0x1);
        gbc.writeMem(0x842, { 0x71 });
        gbc.writeMem(0xe914, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe914), 0x63);
        // 71 0144
        gbc.setState(0x9cb9, 0x5ed3, 0x9560, 0x2c41, 0xe912, 0xb612, 0x1, 0x0);
        gbc.writeMem(0x9cb9, { 0x71 });
        gbc.writeMem(0xb612, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5ed3);
        EXPECT(gbc.pc(), 0x9cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb9), 0x71);
        EXPECT(gbc.readMem(0xb612), 0x41);
        // 71 0146
        gbc.setState(0x4887, 0xd128, 0xa0, 0x74bb, 0x8483, 0xe0f7, 0x1, 0x1);
        gbc.writeMem(0x4887, { 0x71 });
        gbc.writeMem(0xe0f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd128);
        EXPECT(gbc.pc(), 0x4888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f7), 0xbb);
        // 71 0148
        gbc.setState(0x9d, 0x9ceb, 0x2890, 0x5b81, 0x7363, 0xbd2d, 0x0, 0x1);
        gbc.writeMem(0x9d, { 0x71 });
        gbc.writeMem(0xbd2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9ceb);
        EXPECT(gbc.pc(), 0x9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2d), 0x81);
        // 71 014B
        gbc.setState(0x9e80, 0x5c47, 0x7db0, 0x1b8, 0x9a64, 0xefa5, 0x1, 0x1);
        gbc.writeMem(0x9e80, { 0x71 });
        gbc.writeMem(0xefa5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5c47);
        EXPECT(gbc.pc(), 0x9e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e80), 0x71);
        EXPECT(gbc.readMem(0xefa5), 0xb8);
        // 71 014C
        gbc.setState(0xd021, 0x7eb4, 0xa0, 0xf22d, 0xed4c, 0x8b04, 0x0, 0x1);
        gbc.writeMem(0x8b04, { 0x0 });
        gbc.writeMem(0xd021, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7eb4);
        EXPECT(gbc.pc(), 0xd022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b04), 0x2d);
        EXPECT(gbc.readMem(0xd021), 0x71);
        // 71 014E
        gbc.setState(0x8330, 0x4f9f, 0x1140, 0xe712, 0x9dd6, 0xd809, 0x0, 0x1);
        gbc.writeMem(0x8330, { 0x71 });
        gbc.writeMem(0xd809, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4f9f);
        EXPECT(gbc.pc(), 0x8331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8330), 0x71);
        EXPECT(gbc.readMem(0xd809), 0x12);
        // 71 0150
        gbc.setState(0xc971, 0x1f0c, 0x2d90, 0x9354, 0x80c0, 0xa258, 0x0, 0x0);
        gbc.writeMem(0xa258, { 0x0 });
        gbc.writeMem(0xc971, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1f0c);
        EXPECT(gbc.pc(), 0xc972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa258), 0x54);
        EXPECT(gbc.readMem(0xc971), 0x71);
        // 71 0153
        gbc.setState(0xc957, 0xa6d5, 0xcb70, 0x4d51, 0xddc0, 0x8784, 0x1, 0x0);
        gbc.writeMem(0x8784, { 0x0 });
        gbc.writeMem(0xc957, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa6d5);
        EXPECT(gbc.pc(), 0xc958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8784), 0x51);
        EXPECT(gbc.readMem(0xc957), 0x71);
        // 71 0155
        gbc.setState(0xdec2, 0x429a, 0x5850, 0xf791, 0xebbd, 0xd079, 0x0, 0x1);
        gbc.writeMem(0xd079, { 0x0 });
        gbc.writeMem(0xdec2, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x429a);
        EXPECT(gbc.pc(), 0xdec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0x91);
        EXPECT(gbc.readMem(0xdec2), 0x71);
        // 71 0156
        gbc.setState(0xbe0, 0x1a41, 0x3c0, 0x438, 0xa677, 0x8779, 0x0, 0x0);
        gbc.writeMem(0xbe0, { 0x71 });
        gbc.writeMem(0x8779, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1a41);
        EXPECT(gbc.pc(), 0xbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8779), 0x38);
        // 71 0157
        gbc.setState(0x7ee7, 0x5819, 0x220, 0xa808, 0xbfd9, 0xe5db, 0x0, 0x0);
        gbc.writeMem(0x7ee7, { 0x71 });
        gbc.writeMem(0xe5db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5819);
        EXPECT(gbc.pc(), 0x7ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5db), 0x8);
        // 71 0158
        gbc.setState(0xb72f, 0x1c0b, 0xc200, 0x75ee, 0xa3e7, 0xbc5c, 0x1, 0x1);
        gbc.writeMem(0xb72f, { 0x71 });
        gbc.writeMem(0xbc5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1c0b);
        EXPECT(gbc.pc(), 0xb730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72f), 0x71);
        EXPECT(gbc.readMem(0xbc5c), 0xee);
        // 71 0162
        gbc.setState(0x973e, 0x4fe3, 0xb080, 0xee5a, 0xd12e, 0xfb81, 0x0, 0x0);
        gbc.writeMem(0x973e, { 0x71 });
        gbc.writeMem(0xfb81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4fe3);
        EXPECT(gbc.pc(), 0x973f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973e), 0x71);
        EXPECT(gbc.readMem(0xfb81), 0x5a);
        // 71 0163
        gbc.setState(0xb83c, 0xf8c2, 0x7980, 0x6830, 0x176f, 0xb3cf, 0x1, 0x0);
        gbc.writeMem(0xb3cf, { 0x0 });
        gbc.writeMem(0xb83c, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf8c2);
        EXPECT(gbc.pc(), 0xb83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cf), 0x30);
        EXPECT(gbc.readMem(0xb83c), 0x71);
        // 71 0165
        gbc.setState(0x609e, 0xb4ac, 0xa00, 0xd66a, 0xde8e, 0xf514, 0x1, 0x1);
        gbc.writeMem(0x609e, { 0x71 });
        gbc.writeMem(0xf514, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb4ac);
        EXPECT(gbc.pc(), 0x609f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf514), 0x6a);
        // 71 016B
        gbc.setState(0x58da, 0xd5cf, 0x6ff0, 0xcb39, 0x924b, 0xa84e, 0x1, 0x0);
        gbc.writeMem(0x58da, { 0x71 });
        gbc.writeMem(0xa84e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd5cf);
        EXPECT(gbc.pc(), 0x58db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84e), 0x39);
        // 71 016D
        gbc.setState(0x997e, 0x12cb, 0xd800, 0x554b, 0x2467, 0xc293, 0x1, 0x1);
        gbc.writeMem(0x997e, { 0x71 });
        gbc.writeMem(0xc293, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x12cb);
        EXPECT(gbc.pc(), 0x997f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997e), 0x71);
        EXPECT(gbc.readMem(0xc293), 0x4b);
        // 71 0170
        gbc.setState(0x2f1d, 0xdb6e, 0x6730, 0x2759, 0x5f28, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x2f1d, { 0x71 });
        gbc.writeMem(0xaf89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdb6e);
        EXPECT(gbc.pc(), 0x2f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf89), 0x59);
        // 71 0171
        gbc.setState(0xeecb, 0x628c, 0xfdd0, 0x857b, 0xf8cf, 0xe4ee, 0x0, 0x0);
        gbc.writeMem(0xe4ee, { 0x0 });
        gbc.writeMem(0xeecb, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x628c);
        EXPECT(gbc.pc(), 0xeecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ee), 0x7b);
        EXPECT(gbc.readMem(0xeecb), 0x71);
        // 71 0173
        gbc.setState(0xe86a, 0xf5be, 0xf840, 0xdeac, 0xf167, 0xefce, 0x1, 0x0);
        gbc.writeMem(0xe86a, { 0x71 });
        gbc.writeMem(0xefce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf5be);
        EXPECT(gbc.pc(), 0xe86b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86a), 0x71);
        EXPECT(gbc.readMem(0xefce), 0xac);
        // 71 0176
        gbc.setState(0x57d9, 0x241b, 0x7920, 0x5b4, 0x523d, 0xa518, 0x0, 0x1);
        gbc.writeMem(0x57d9, { 0x71 });
        gbc.writeMem(0xa518, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x241b);
        EXPECT(gbc.pc(), 0x57da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa518), 0xb4);
        // 71 017A
        gbc.setState(0x8c1e, 0x21b1, 0x3c30, 0xfd30, 0x9ede, 0xa1c5, 0x0, 0x0);
        gbc.writeMem(0x8c1e, { 0x71 });
        gbc.writeMem(0xa1c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x21b1);
        EXPECT(gbc.pc(), 0x8c1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1e), 0x71);
        EXPECT(gbc.readMem(0xa1c5), 0x30);
        // 71 017C
        gbc.setState(0xaf28, 0x5acc, 0xc10, 0x42e4, 0x6c61, 0x99b7, 0x1, 0x1);
        gbc.writeMem(0x99b7, { 0x0 });
        gbc.writeMem(0xaf28, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5acc);
        EXPECT(gbc.pc(), 0xaf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b7), 0xe4);
        EXPECT(gbc.readMem(0xaf28), 0x71);
        // 71 017D
        gbc.setState(0xb8e7, 0x193c, 0x3a80, 0xcd9e, 0x6a99, 0x8fab, 0x0, 0x0);
        gbc.writeMem(0x8fab, { 0x0 });
        gbc.writeMem(0xb8e7, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x193c);
        EXPECT(gbc.pc(), 0xb8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fab), 0x9e);
        EXPECT(gbc.readMem(0xb8e7), 0x71);
        // 71 017E
        gbc.setState(0x7596, 0xb94b, 0x2100, 0x96fe, 0x9783, 0xee99, 0x0, 0x0);
        gbc.writeMem(0x7596, { 0x71 });
        gbc.writeMem(0xee99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb94b);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee99), 0xfe);
        // 71 0180
        gbc.setState(0xa85, 0x32d7, 0x64a0, 0x2639, 0x3025, 0xb30a, 0x0, 0x0);
        gbc.writeMem(0xa85, { 0x71 });
        gbc.writeMem(0xb30a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x32d7);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30a), 0x39);
        // 71 0182
        gbc.setState(0x6bab, 0x3f21, 0xb330, 0x9396, 0x49b6, 0x8833, 0x1, 0x0);
        gbc.writeMem(0x6bab, { 0x71 });
        gbc.writeMem(0x8833, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3f21);
        EXPECT(gbc.pc(), 0x6bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8833), 0x96);
        // 71 0184
        gbc.setState(0xc819, 0x9149, 0x3a00, 0xf70b, 0x8bfd, 0xecad, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0x71 });
        gbc.writeMem(0xecad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9149);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc819), 0x71);
        EXPECT(gbc.readMem(0xecad), 0xb);
        // 71 0190
        gbc.setState(0x702b, 0xd2b9, 0xe8a0, 0xc0a, 0x103a, 0xd272, 0x0, 0x1);
        gbc.writeMem(0x702b, { 0x71 });
        gbc.writeMem(0xd272, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd2b9);
        EXPECT(gbc.pc(), 0x702c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd272), 0xa);
        // 71 0191
        gbc.setState(0x9141, 0xbc9c, 0x4710, 0x10b, 0xc3c1, 0xa650, 0x1, 0x0);
        gbc.writeMem(0x9141, { 0x71 });
        gbc.writeMem(0xa650, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0x9142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9141), 0x71);
        EXPECT(gbc.readMem(0xa650), 0xb);
        // 71 0193
        gbc.setState(0x9931, 0xff58, 0x5e10, 0xedb0, 0xdec3, 0xd516, 0x0, 0x0);
        gbc.writeMem(0x9931, { 0x71 });
        gbc.writeMem(0xd516, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xff58);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0x71);
        EXPECT(gbc.readMem(0xd516), 0xb0);
        // 71 0195
        gbc.setState(0x9f27, 0x15f7, 0x4fa0, 0x76e6, 0x9e75, 0xb31d, 0x1, 0x1);
        gbc.writeMem(0x9f27, { 0x71 });
        gbc.writeMem(0xb31d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0x9f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f27), 0x71);
        EXPECT(gbc.readMem(0xb31d), 0xe6);
        // 71 0198
        gbc.setState(0x5965, 0x6d4d, 0x66c0, 0xc034, 0x36d0, 0xffe8, 0x0, 0x1);
        gbc.writeMem(0x5965, { 0x71 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6d4d);
        EXPECT(gbc.pc(), 0x5966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe8), 0x34);
        // 71 019C
        gbc.setState(0x6565, 0x1a4f, 0x27b0, 0xfec0, 0x8025, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x6565, { 0x71 });
        gbc.writeMem(0xc752, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1a4f);
        EXPECT(gbc.pc(), 0x6566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc752), 0xc0);
        // 71 01A1
        gbc.setState(0xc393, 0xf47a, 0xb5c0, 0xa5f9, 0xec04, 0x849d, 0x0, 0x0);
        gbc.writeMem(0x849d, { 0x0 });
        gbc.writeMem(0xc393, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf47a);
        EXPECT(gbc.pc(), 0xc394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849d), 0xf9);
        EXPECT(gbc.readMem(0xc393), 0x71);
        // 71 01A2
        gbc.setState(0x7762, 0x8e49, 0x3790, 0x3d41, 0xdd44, 0xacef, 0x0, 0x1);
        gbc.writeMem(0x7762, { 0x71 });
        gbc.writeMem(0xacef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8e49);
        EXPECT(gbc.pc(), 0x7763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacef), 0x41);
        // 71 01A4
        gbc.setState(0x54cb, 0xe8bd, 0x8db0, 0xd1a2, 0x8ed7, 0xec51, 0x1, 0x0);
        gbc.writeMem(0x54cb, { 0x71 });
        gbc.writeMem(0xec51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe8bd);
        EXPECT(gbc.pc(), 0x54cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec51), 0xa2);
        // 71 01A7
        gbc.setState(0x8d7d, 0x3a8c, 0x3c60, 0xd73d, 0xc76f, 0xcd5b, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x71 });
        gbc.writeMem(0xcd5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3a8c);
        EXPECT(gbc.pc(), 0x8d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7d), 0x71);
        EXPECT(gbc.readMem(0xcd5b), 0x3d);
        // 71 01A8
        gbc.setState(0x567e, 0x9f3e, 0xda30, 0xea0c, 0x56eb, 0xd196, 0x0, 0x1);
        gbc.writeMem(0x567e, { 0x71 });
        gbc.writeMem(0xd196, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9f3e);
        EXPECT(gbc.pc(), 0x567f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd196), 0xc);
        // 71 01AA
        gbc.setState(0xb44b, 0xf47b, 0x1440, 0xf6b0, 0xb4eb, 0xa9dc, 0x0, 0x0);
        gbc.writeMem(0xa9dc, { 0x0 });
        gbc.writeMem(0xb44b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf47b);
        EXPECT(gbc.pc(), 0xb44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9dc), 0xb0);
        EXPECT(gbc.readMem(0xb44b), 0x71);
        // 71 01AB
        gbc.setState(0x5aa9, 0x6f2b, 0x5b0, 0xed4d, 0x381, 0x92fc, 0x1, 0x0);
        gbc.writeMem(0x5aa9, { 0x71 });
        gbc.writeMem(0x92fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6f2b);
        EXPECT(gbc.pc(), 0x5aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fc), 0x4d);
        // 71 01AC
        gbc.setState(0x88a7, 0x814e, 0xe6f0, 0xa028, 0x3b20, 0xe6af, 0x0, 0x0);
        gbc.writeMem(0x88a7, { 0x71 });
        gbc.writeMem(0xe6af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x814e);
        EXPECT(gbc.pc(), 0x88a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a7), 0x71);
        EXPECT(gbc.readMem(0xe6af), 0x28);
        // 71 01AD
        gbc.setState(0x84f8, 0x15d9, 0x2e70, 0x346d, 0x89ad, 0xc1c7, 0x1, 0x0);
        gbc.writeMem(0x84f8, { 0x71 });
        gbc.writeMem(0xc1c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x15d9);
        EXPECT(gbc.pc(), 0x84f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f8), 0x71);
        EXPECT(gbc.readMem(0xc1c7), 0x6d);
        // 71 01AF
        gbc.setState(0x908a, 0xd1a5, 0xee80, 0xf109, 0xa3f9, 0x8788, 0x1, 0x1);
        gbc.writeMem(0x8788, { 0x0 });
        gbc.writeMem(0x908a, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd1a5);
        EXPECT(gbc.pc(), 0x908b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8788), 0x9);
        EXPECT(gbc.readMem(0x908a), 0x71);
        // 71 01B0
        gbc.setState(0xa0a9, 0xa0d8, 0x4300, 0xe3cc, 0x36bb, 0xc790, 0x0, 0x1);
        gbc.writeMem(0xa0a9, { 0x71 });
        gbc.writeMem(0xc790, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0xa0aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a9), 0x71);
        EXPECT(gbc.readMem(0xc790), 0xcc);
        // 71 01B4
        gbc.setState(0x875d, 0x623c, 0xa3f0, 0xedd4, 0x3ae2, 0xf87a, 0x0, 0x1);
        gbc.writeMem(0x875d, { 0x71 });
        gbc.writeMem(0xf87a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x623c);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875d), 0x71);
        EXPECT(gbc.readMem(0xf87a), 0xd4);
        // 71 01B8
        gbc.setState(0xa790, 0x51a4, 0x5070, 0x8581, 0x1e0c, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xa790, { 0x71 });
        gbc.writeMem(0xf695, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x51a4);
        EXPECT(gbc.pc(), 0xa791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa790), 0x71);
        EXPECT(gbc.readMem(0xf695), 0x81);
        // 71 01B9
        gbc.setState(0x9833, 0xcab9, 0x8f80, 0xd2af, 0x963a, 0xfa86, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0x71 });
        gbc.writeMem(0xfa86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcab9);
        EXPECT(gbc.pc(), 0x9834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9833), 0x71);
        EXPECT(gbc.readMem(0xfa86), 0xaf);
        // 71 01BA
        gbc.setState(0x5590, 0x65fe, 0xa590, 0xd2ad, 0x733b, 0xb8db, 0x1, 0x1);
        gbc.writeMem(0x5590, { 0x71 });
        gbc.writeMem(0xb8db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x65fe);
        EXPECT(gbc.pc(), 0x5591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8db), 0xad);
        // 71 01BB
        gbc.setState(0x2e97, 0x9091, 0x3d00, 0x73c0, 0x9d8f, 0xbfb7, 0x0, 0x1);
        gbc.writeMem(0x2e97, { 0x71 });
        gbc.writeMem(0xbfb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9091);
        EXPECT(gbc.pc(), 0x2e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xc0);
        // 71 01BF
        gbc.setState(0x1ed3, 0x6a99, 0x680, 0xed48, 0xc3ab, 0xc85d, 0x1, 0x0);
        gbc.writeMem(0x1ed3, { 0x71 });
        gbc.writeMem(0xc85d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6a99);
        EXPECT(gbc.pc(), 0x1ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85d), 0x48);
        // 71 01C0
        gbc.setState(0x24dc, 0xd414, 0x9670, 0x7cee, 0xa08a, 0xf3b6, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0x71 });
        gbc.writeMem(0xf3b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd414);
        EXPECT(gbc.pc(), 0x24dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3b6), 0xee);
        // 71 01C2
        gbc.setState(0xbe43, 0xb9d7, 0xb180, 0xeb2a, 0x77ae, 0xd4b9, 0x1, 0x0);
        gbc.writeMem(0xbe43, { 0x71 });
        gbc.writeMem(0xd4b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb9d7);
        EXPECT(gbc.pc(), 0xbe44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe43), 0x71);
        EXPECT(gbc.readMem(0xd4b9), 0x2a);
        // 71 01C4
        gbc.setState(0x2e92, 0x2119, 0x4730, 0x897a, 0x7b36, 0xe8df, 0x1, 0x1);
        gbc.writeMem(0x2e92, { 0x71 });
        gbc.writeMem(0xe8df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2119);
        EXPECT(gbc.pc(), 0x2e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8df), 0x7a);
        // 71 01C8
        gbc.setState(0x5160, 0x9c40, 0xbe00, 0x2ac4, 0x10f1, 0x8ebc, 0x1, 0x0);
        gbc.writeMem(0x5160, { 0x71 });
        gbc.writeMem(0x8ebc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9c40);
        EXPECT(gbc.pc(), 0x5161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebc), 0xc4);
        // 71 01D5
        gbc.setState(0xcfde, 0x8ecd, 0x2010, 0xbb6b, 0x4f9, 0xe7bf, 0x1, 0x1);
        gbc.writeMem(0xcfde, { 0x71 });
        gbc.writeMem(0xe7bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8ecd);
        EXPECT(gbc.pc(), 0xcfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfde), 0x71);
        EXPECT(gbc.readMem(0xe7bf), 0x6b);
        // 71 01DB
        gbc.setState(0xd13, 0x423d, 0x60a0, 0xefdd, 0x7b7, 0xd208, 0x1, 0x1);
        gbc.writeMem(0xd13, { 0x71 });
        gbc.writeMem(0xd208, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x423d);
        EXPECT(gbc.pc(), 0xd14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd208), 0xdd);
        // 71 01DD
        gbc.setState(0x101f, 0x9bb9, 0xaff0, 0xb89a, 0x757e, 0xb3b1, 0x0, 0x1);
        gbc.writeMem(0x101f, { 0x71 });
        gbc.writeMem(0xb3b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9bb9);
        EXPECT(gbc.pc(), 0x1020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b1), 0x9a);
        // 71 01DF
        gbc.setState(0x69f0, 0x5018, 0xe190, 0x5d4e, 0xd23a, 0xe452, 0x0, 0x0);
        gbc.writeMem(0x69f0, { 0x71 });
        gbc.writeMem(0xe452, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5018);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe452), 0x4e);
        // 71 01E1
        gbc.setState(0x4084, 0x10a4, 0xc060, 0xf318, 0x56be, 0xfa6f, 0x1, 0x1);
        gbc.writeMem(0x4084, { 0x71 });
        gbc.writeMem(0xfa6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x10a4);
        EXPECT(gbc.pc(), 0x4085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa6f), 0x18);
        // 71 01E2
        gbc.setState(0xdfdb, 0x843b, 0x87b0, 0xe375, 0x9cef, 0x9bd8, 0x0, 0x1);
        gbc.writeMem(0x9bd8, { 0x0 });
        gbc.writeMem(0xdfdb, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x843b);
        EXPECT(gbc.pc(), 0xdfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd8), 0x75);
        EXPECT(gbc.readMem(0xdfdb), 0x71);
        // 71 01E3
        gbc.setState(0xe881, 0xc81c, 0x2390, 0xc0db, 0xc34e, 0x9392, 0x1, 0x0);
        gbc.writeMem(0x9392, { 0x0 });
        gbc.writeMem(0xe881, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc81c);
        EXPECT(gbc.pc(), 0xe882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9392), 0xdb);
        EXPECT(gbc.readMem(0xe881), 0x71);
        // 71 01E4
        gbc.setState(0x3f01, 0xd79c, 0x7af0, 0x75a1, 0x9358, 0xde63, 0x1, 0x0);
        gbc.writeMem(0x3f01, { 0x71 });
        gbc.writeMem(0xde63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd79c);
        EXPECT(gbc.pc(), 0x3f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde63), 0xa1);
        // 71 01E8
        gbc.setState(0x5983, 0xd88a, 0xea80, 0x52c6, 0xc1fe, 0xd436, 0x0, 0x0);
        gbc.writeMem(0x5983, { 0x71 });
        gbc.writeMem(0xd436, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd88a);
        EXPECT(gbc.pc(), 0x5984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd436), 0xc6);
        // 71 01E9
        gbc.setState(0xaf63, 0x1492, 0xa030, 0xa44c, 0x839e, 0xf2af, 0x1, 0x0);
        gbc.writeMem(0xaf63, { 0x71 });
        gbc.writeMem(0xf2af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1492);
        EXPECT(gbc.pc(), 0xaf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf63), 0x71);
        EXPECT(gbc.readMem(0xf2af), 0x4c);
        // 71 01EA
        gbc.setState(0xc277, 0x91b5, 0xd910, 0xa302, 0x2e07, 0xb3f0, 0x0, 0x0);
        gbc.writeMem(0xb3f0, { 0x0 });
        gbc.writeMem(0xc277, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x91b5);
        EXPECT(gbc.pc(), 0xc278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f0), 0x2);
        EXPECT(gbc.readMem(0xc277), 0x71);
        // 71 01EB
        gbc.setState(0x9415, 0x55b4, 0x2180, 0xebeb, 0x8246, 0xd4d2, 0x1, 0x0);
        gbc.writeMem(0x9415, { 0x71 });
        gbc.writeMem(0xd4d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x55b4);
        EXPECT(gbc.pc(), 0x9416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9415), 0x71);
        EXPECT(gbc.readMem(0xd4d2), 0xeb);
        // 71 01ED
        gbc.setState(0x112c, 0xb26a, 0x1320, 0x5800, 0x2ff0, 0x5223, 0x1, 0x1);
        gbc.writeMem(0x112c, { 0x71 });
        gbc.writeMem(0x5223, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb26a);
        EXPECT(gbc.pc(), 0x112d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 71 01F3
        gbc.setState(0x52ee, 0x25f4, 0xb140, 0x2702, 0x4eba, 0xce60, 0x1, 0x0);
        gbc.writeMem(0x52ee, { 0x71 });
        gbc.writeMem(0xce60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x25f4);
        EXPECT(gbc.pc(), 0x52ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce60), 0x2);
        // 71 01F4
        gbc.setState(0x7881, 0x25de, 0x67a0, 0x64d9, 0x196c, 0x88f8, 0x1, 0x1);
        gbc.writeMem(0x7881, { 0x71 });
        gbc.writeMem(0x88f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x25de);
        EXPECT(gbc.pc(), 0x7882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f8), 0xd9);
        // 71 01F5
        gbc.setState(0x3345, 0x256b, 0xf980, 0xafd9, 0xef1a, 0xa86b, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0x71 });
        gbc.writeMem(0xa86b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x256b);
        EXPECT(gbc.pc(), 0x3346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86b), 0xd9);
        // 71 01F8
        gbc.setState(0x8961, 0x34df, 0x6070, 0x4cdf, 0xba6d, 0xf626, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0x71 });
        gbc.writeMem(0xf626, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x34df);
        EXPECT(gbc.pc(), 0x8962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8961), 0x71);
        EXPECT(gbc.readMem(0xf626), 0xdf);
        // 71 01F9
        gbc.setState(0x85a7, 0x7e4b, 0x0, 0xdae4, 0xb7da, 0xb3c4, 0x1, 0x1);
        gbc.writeMem(0x85a7, { 0x71 });
        gbc.writeMem(0xb3c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7e4b);
        EXPECT(gbc.pc(), 0x85a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a7), 0x71);
        EXPECT(gbc.readMem(0xb3c4), 0xe4);
        // 71 01FA
        gbc.setState(0x704, 0xde7d, 0xad50, 0xd1e5, 0x32b, 0xb07b, 0x0, 0x1);
        gbc.writeMem(0x704, { 0x71 });
        gbc.writeMem(0xb07b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0x705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07b), 0xe5);
        // 71 01FB
        gbc.setState(0x96ef, 0xbe5b, 0x57a0, 0x32e8, 0x14f1, 0xe541, 0x0, 0x0);
        gbc.writeMem(0x96ef, { 0x71 });
        gbc.writeMem(0xe541, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbe5b);
        EXPECT(gbc.pc(), 0x96f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ef), 0x71);
        EXPECT(gbc.readMem(0xe541), 0xe8);
        // 71 01FC
        gbc.setState(0x629a, 0x419a, 0x3930, 0x83a8, 0x94b7, 0xfeef, 0x0, 0x1);
        gbc.writeMem(0x629a, { 0x71 });
        gbc.writeMem(0xfeef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x419a);
        EXPECT(gbc.pc(), 0x629b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfeef), 0xa8);
        // 71 01FD
        gbc.setState(0x3cd6, 0x3412, 0xe0f0, 0x3874, 0xdd36, 0xe4b6, 0x1, 0x0);
        gbc.writeMem(0x3cd6, { 0x71 });
        gbc.writeMem(0xe4b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3412);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b6), 0x74);
        // 71 0200
        gbc.setState(0x5356, 0xc5b2, 0xacb0, 0x3949, 0xd5ad, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0x71 });
        gbc.writeMem(0xdfae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc5b2);
        EXPECT(gbc.pc(), 0x5357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfae), 0x49);
        // 71 0201
        gbc.setState(0x3d7f, 0x8905, 0xb800, 0x3c2a, 0x672, 0x9791, 0x1, 0x1);
        gbc.writeMem(0x3d7f, { 0x71 });
        gbc.writeMem(0x9791, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8905);
        EXPECT(gbc.pc(), 0x3d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9791), 0x2a);
        // 71 0202
        gbc.setState(0xb063, 0x511d, 0xdd50, 0xc3b0, 0x42f6, 0xd5c2, 0x0, 0x1);
        gbc.writeMem(0xb063, { 0x71 });
        gbc.writeMem(0xd5c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x511d);
        EXPECT(gbc.pc(), 0xb064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb063), 0x71);
        EXPECT(gbc.readMem(0xd5c2), 0xb0);
        // 71 0205
        gbc.setState(0xc43a, 0x7825, 0xda50, 0x2c60, 0x906, 0xb251, 0x0, 0x1);
        gbc.writeMem(0xb251, { 0x0 });
        gbc.writeMem(0xc43a, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7825);
        EXPECT(gbc.pc(), 0xc43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb251), 0x60);
        EXPECT(gbc.readMem(0xc43a), 0x71);
        // 71 0206
        gbc.setState(0xb587, 0xf66a, 0x6150, 0x4167, 0x5ff6, 0x88d2, 0x0, 0x0);
        gbc.writeMem(0x88d2, { 0x0 });
        gbc.writeMem(0xb587, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf66a);
        EXPECT(gbc.pc(), 0xb588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d2), 0x67);
        EXPECT(gbc.readMem(0xb587), 0x71);
        // 71 0207
        gbc.setState(0x372e, 0x541f, 0x4f50, 0x5d63, 0x138d, 0x9055, 0x1, 0x0);
        gbc.writeMem(0x372e, { 0x71 });
        gbc.writeMem(0x9055, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x541f);
        EXPECT(gbc.pc(), 0x372f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9055), 0x63);
        // 71 0209
        gbc.setState(0x4bc5, 0x473b, 0x58e0, 0x5a75, 0xe25f, 0xf3b0, 0x0, 0x0);
        gbc.writeMem(0x4bc5, { 0x71 });
        gbc.writeMem(0xf3b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x473b);
        EXPECT(gbc.pc(), 0x4bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3b0), 0x75);
        // 71 020B
        gbc.setState(0xe5dc, 0x7914, 0xc870, 0xbef1, 0x7742, 0x85c7, 0x0, 0x1);
        gbc.writeMem(0x85c7, { 0x0 });
        gbc.writeMem(0xe5dc, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7914);
        EXPECT(gbc.pc(), 0xe5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c7), 0xf1);
        EXPECT(gbc.readMem(0xe5dc), 0x71);
        // 71 020C
        gbc.setState(0x8255, 0xc0c2, 0x9270, 0x248c, 0x7e00, 0xa4af, 0x1, 0x1);
        gbc.writeMem(0x8255, { 0x71 });
        gbc.writeMem(0xa4af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc0c2);
        EXPECT(gbc.pc(), 0x8256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8255), 0x71);
        EXPECT(gbc.readMem(0xa4af), 0x8c);
        // 71 020D
        gbc.setState(0x4c66, 0xcd24, 0x33a0, 0x7cb3, 0x8678, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x4c66, { 0x71 });
        gbc.writeMem(0x94e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcd24);
        EXPECT(gbc.pc(), 0x4c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e4), 0xb3);
        // 71 020E
        gbc.setState(0x7811, 0xcb5d, 0x4f70, 0x888e, 0xe078, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x7811, { 0x71 });
        gbc.writeMem(0x935c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcb5d);
        EXPECT(gbc.pc(), 0x7812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935c), 0x8e);
        // 71 0210
        gbc.setState(0xb410, 0xe4db, 0x2d0, 0x2cc7, 0xc74, 0xa926, 0x0, 0x1);
        gbc.writeMem(0xa926, { 0x0 });
        gbc.writeMem(0xb410, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe4db);
        EXPECT(gbc.pc(), 0xb411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa926), 0xc7);
        EXPECT(gbc.readMem(0xb410), 0x71);
        // 71 0211
        gbc.setState(0xdf64, 0xef83, 0xd20, 0xa177, 0x4b5a, 0x9521, 0x1, 0x0);
        gbc.writeMem(0x9521, { 0x0 });
        gbc.writeMem(0xdf64, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0xdf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9521), 0x77);
        EXPECT(gbc.readMem(0xdf64), 0x71);
        // 71 0212
        gbc.setState(0xc116, 0x6fec, 0x27e0, 0x93f7, 0x8a19, 0xe783, 0x1, 0x0);
        gbc.writeMem(0xc116, { 0x71 });
        gbc.writeMem(0xe783, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6fec);
        EXPECT(gbc.pc(), 0xc117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc116), 0x71);
        EXPECT(gbc.readMem(0xe783), 0xf7);
        // 71 0213
        gbc.setState(0xdad, 0xe3eb, 0x6260, 0xe938, 0x316, 0x819b, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x71 });
        gbc.writeMem(0x819b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe3eb);
        EXPECT(gbc.pc(), 0xdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819b), 0x38);
        // 71 0214
        gbc.setState(0x7bd0, 0xde80, 0x7cc0, 0x4847, 0xcea2, 0xfd06, 0x1, 0x1);
        gbc.writeMem(0x7bd0, { 0x71 });
        gbc.writeMem(0xfd06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xde80);
        EXPECT(gbc.pc(), 0x7bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd06), 0x47);
        // 71 0215
        gbc.setState(0xbbb6, 0x8b9b, 0x55f0, 0x10e8, 0x1d09, 0xc348, 0x1, 0x1);
        gbc.writeMem(0xbbb6, { 0x71 });
        gbc.writeMem(0xc348, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8b9b);
        EXPECT(gbc.pc(), 0xbbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0x71);
        EXPECT(gbc.readMem(0xc348), 0xe8);
        // 71 0217
        gbc.setState(0xcdd4, 0x1a75, 0xb7c0, 0x2061, 0x7ae7, 0xe82e, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0x71 });
        gbc.writeMem(0xe82e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1a75);
        EXPECT(gbc.pc(), 0xcdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd4), 0x71);
        EXPECT(gbc.readMem(0xe82e), 0x61);
        // 71 021B
        gbc.setState(0xd78b, 0xd004, 0xacc0, 0x69d, 0x88f4, 0xae8e, 0x1, 0x1);
        gbc.writeMem(0xae8e, { 0x0 });
        gbc.writeMem(0xd78b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd004);
        EXPECT(gbc.pc(), 0xd78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8e), 0x9d);
        EXPECT(gbc.readMem(0xd78b), 0x71);
        // 71 021D
        gbc.setState(0x8839, 0xbd57, 0xec30, 0x4af1, 0xf45, 0xc6db, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0x71 });
        gbc.writeMem(0xc6db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0x883a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8839), 0x71);
        EXPECT(gbc.readMem(0xc6db), 0xf1);
        // 71 021F
        gbc.setState(0x70d7, 0xc37b, 0x1010, 0x341f, 0xcc3a, 0x95ca, 0x0, 0x1);
        gbc.writeMem(0x70d7, { 0x71 });
        gbc.writeMem(0x95ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc37b);
        EXPECT(gbc.pc(), 0x70d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ca), 0x1f);
        // 71 0220
        gbc.setState(0xb7f2, 0x6e79, 0x37f0, 0xfb0c, 0x3e2f, 0xfee2, 0x1, 0x1);
        gbc.writeMem(0xb7f2, { 0x71 });
        gbc.writeMem(0xfee2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6e79);
        EXPECT(gbc.pc(), 0xb7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f2), 0x71);
        EXPECT(gbc.readMem(0xfee2), 0xc);
        // 71 0223
        gbc.setState(0x418d, 0x1233, 0x6da0, 0xadf4, 0x4a90, 0xe7a1, 0x1, 0x0);
        gbc.writeMem(0x418d, { 0x71 });
        gbc.writeMem(0xe7a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1233);
        EXPECT(gbc.pc(), 0x418e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a1), 0xf4);
        // 71 0224
        gbc.setState(0x2f63, 0xe272, 0x8690, 0xc3a2, 0x33d1, 0xc032, 0x1, 0x0);
        gbc.writeMem(0x2f63, { 0x71 });
        gbc.writeMem(0xc032, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0x2f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc032), 0xa2);
        // 71 0225
        gbc.setState(0xe46b, 0x764b, 0xead0, 0x6628, 0x2601, 0xb139, 0x1, 0x1);
        gbc.writeMem(0xb139, { 0x0 });
        gbc.writeMem(0xe46b, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x764b);
        EXPECT(gbc.pc(), 0xe46c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb139), 0x28);
        EXPECT(gbc.readMem(0xe46b), 0x71);
        // 71 022C
        gbc.setState(0x651b, 0x21aa, 0x8ff0, 0x7779, 0x454e, 0xd09e, 0x1, 0x0);
        gbc.writeMem(0x651b, { 0x71 });
        gbc.writeMem(0xd09e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x21aa);
        EXPECT(gbc.pc(), 0x651c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd09e), 0x79);
        // 71 022D
        gbc.setState(0xc2d8, 0x9a6b, 0x4490, 0x2fc4, 0x9e78, 0xf0fd, 0x0, 0x1);
        gbc.writeMem(0xc2d8, { 0x71 });
        gbc.writeMem(0xf0fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9a6b);
        EXPECT(gbc.pc(), 0xc2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d8), 0x71);
        EXPECT(gbc.readMem(0xf0fd), 0xc4);
        // 71 022E
        gbc.setState(0xd4bc, 0xb6d9, 0x6c20, 0x9909, 0x5fe4, 0x8b87, 0x1, 0x0);
        gbc.writeMem(0x8b87, { 0x0 });
        gbc.writeMem(0xd4bc, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb6d9);
        EXPECT(gbc.pc(), 0xd4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b87), 0x9);
        EXPECT(gbc.readMem(0xd4bc), 0x71);
        // 71 0232
        gbc.setState(0x1ae8, 0xfbbe, 0xd2b0, 0xed4f, 0xeb43, 0xcc49, 0x1, 0x0);
        gbc.writeMem(0x1ae8, { 0x71 });
        gbc.writeMem(0xcc49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfbbe);
        EXPECT(gbc.pc(), 0x1ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc49), 0x4f);
        // 71 0233
        gbc.setState(0xccf5, 0x332a, 0xff40, 0x24c5, 0x9ef8, 0xb33f, 0x1, 0x0);
        gbc.writeMem(0xb33f, { 0x0 });
        gbc.writeMem(0xccf5, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x332a);
        EXPECT(gbc.pc(), 0xccf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33f), 0xc5);
        EXPECT(gbc.readMem(0xccf5), 0x71);
        // 71 0234
        gbc.setState(0x44db, 0x322d, 0x7ba0, 0x701f, 0xe4c4, 0x8ea8, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0x71 });
        gbc.writeMem(0x8ea8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0x44dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea8), 0x1f);
        // 71 0239
        gbc.setState(0xa1b6, 0x3c1b, 0x8960, 0x7ffa, 0x7d35, 0xa419, 0x1, 0x0);
        gbc.writeMem(0xa1b6, { 0x71 });
        gbc.writeMem(0xa419, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3c1b);
        EXPECT(gbc.pc(), 0xa1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b6), 0x71);
        EXPECT(gbc.readMem(0xa419), 0xfa);
        // 71 023B
        gbc.setState(0x3f05, 0x251, 0xa820, 0x79ab, 0x6b5a, 0xf1ae, 0x0, 0x1);
        gbc.writeMem(0x3f05, { 0x71 });
        gbc.writeMem(0xf1ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x251);
        EXPECT(gbc.pc(), 0x3f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1ae), 0xab);
        // 71 023C
        gbc.setState(0x18d3, 0x5bdf, 0xfc80, 0xfce6, 0xece3, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0x18d3, { 0x71 });
        gbc.writeMem(0xa2ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5bdf);
        EXPECT(gbc.pc(), 0x18d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ab), 0xe6);
        // 71 023F
        gbc.setState(0x7c8c, 0x3e06, 0xc130, 0x7f7c, 0x3dc3, 0xf21b, 0x0, 0x0);
        gbc.writeMem(0x7c8c, { 0x71 });
        gbc.writeMem(0xf21b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3e06);
        EXPECT(gbc.pc(), 0x7c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf21b), 0x7c);
        // 71 0240
        gbc.setState(0x573b, 0x6480, 0xcc00, 0x6657, 0x4556, 0xae45, 0x0, 0x0);
        gbc.writeMem(0x573b, { 0x71 });
        gbc.writeMem(0xae45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6480);
        EXPECT(gbc.pc(), 0x573c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae45), 0x57);
        // 71 0243
        gbc.setState(0x42dd, 0x536e, 0xba30, 0xb656, 0x81c1, 0xfb63, 0x1, 0x0);
        gbc.writeMem(0x42dd, { 0x71 });
        gbc.writeMem(0xfb63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x536e);
        EXPECT(gbc.pc(), 0x42de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb63), 0x56);
        // 71 0244
        gbc.setState(0x3ddf, 0x7062, 0x4fc0, 0xe003, 0x8060, 0x9523, 0x0, 0x1);
        gbc.writeMem(0x3ddf, { 0x71 });
        gbc.writeMem(0x9523, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7062);
        EXPECT(gbc.pc(), 0x3de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9523), 0x3);
        // 71 0245
        gbc.setState(0xd8fc, 0xf57a, 0xbc50, 0x9cda, 0x8751, 0xca53, 0x0, 0x0);
        gbc.writeMem(0xca53, { 0x0 });
        gbc.writeMem(0xd8fc, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf57a);
        EXPECT(gbc.pc(), 0xd8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca53), 0xda);
        EXPECT(gbc.readMem(0xd8fc), 0x71);
        // 71 0248
        gbc.setState(0xe62c, 0x1aaf, 0x38c0, 0xe3ef, 0x716b, 0x8ec9, 0x0, 0x1);
        gbc.writeMem(0x8ec9, { 0x0 });
        gbc.writeMem(0xe62c, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1aaf);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec9), 0xef);
        EXPECT(gbc.readMem(0xe62c), 0x71);
        // 71 024A
        gbc.setState(0x4bcb, 0xdec5, 0xf8e0, 0x48a7, 0x1f89, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x4bcb, { 0x71 });
        gbc.writeMem(0xa038, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdec5);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa038), 0xa7);
        // 71 024B
        gbc.setState(0x2ad5, 0xcfa9, 0xcaa0, 0x60d8, 0xc19a, 0xaa1a, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0x71 });
        gbc.writeMem(0xaa1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcfa9);
        EXPECT(gbc.pc(), 0x2ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1a), 0xd8);
        // 71 024C
        gbc.setState(0x9f94, 0x9e83, 0x4db0, 0x514f, 0x267, 0xd7a1, 0x0, 0x1);
        gbc.writeMem(0x9f94, { 0x71 });
        gbc.writeMem(0xd7a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9e83);
        EXPECT(gbc.pc(), 0x9f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f94), 0x71);
        EXPECT(gbc.readMem(0xd7a1), 0x4f);
        // 71 024E
        gbc.setState(0x29a2, 0x5477, 0x9c60, 0x728c, 0x641c, 0xd4e9, 0x1, 0x0);
        gbc.writeMem(0x29a2, { 0x71 });
        gbc.writeMem(0xd4e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5477);
        EXPECT(gbc.pc(), 0x29a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e9), 0x8c);
        // 71 0250
        gbc.setState(0xcb6e, 0xee4e, 0x1400, 0x7cd9, 0xfc05, 0xf0c8, 0x0, 0x1);
        gbc.writeMem(0xcb6e, { 0x71 });
        gbc.writeMem(0xf0c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xee4e);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6e), 0x71);
        EXPECT(gbc.readMem(0xf0c8), 0xd9);
        // 71 0252
        gbc.setState(0xd802, 0xa83, 0x9d60, 0x7f37, 0x5c17, 0x8c00, 0x0, 0x0);
        gbc.writeMem(0x8c00, { 0x0 });
        gbc.writeMem(0xd802, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa83);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c00), 0x37);
        EXPECT(gbc.readMem(0xd802), 0x71);
        // 71 0256
        gbc.setState(0xe1f7, 0xe7, 0x4420, 0x22a, 0xc2a3, 0xc8ca, 0x0, 0x1);
        gbc.writeMem(0xc8ca, { 0x0 });
        gbc.writeMem(0xe1f7, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe7);
        EXPECT(gbc.pc(), 0xe1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ca), 0x2a);
        EXPECT(gbc.readMem(0xe1f7), 0x71);
        // 71 025C
        gbc.setState(0x1f4e, 0xe6d1, 0xbf30, 0x79c0, 0x2c00, 0xe595, 0x0, 0x0);
        gbc.writeMem(0x1f4e, { 0x71 });
        gbc.writeMem(0xe595, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe6d1);
        EXPECT(gbc.pc(), 0x1f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe595), 0xc0);
        // 71 025E
        gbc.setState(0x9664, 0x51cb, 0x8e50, 0x564, 0x1a1b, 0xa88d, 0x0, 0x1);
        gbc.writeMem(0x9664, { 0x71 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x51cb);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9664), 0x71);
        EXPECT(gbc.readMem(0xa88d), 0x64);
        // 71 025F
        gbc.setState(0xa635, 0x7ca9, 0x9e10, 0xbd55, 0xc9e, 0xfb5d, 0x1, 0x0);
        gbc.writeMem(0xa635, { 0x71 });
        gbc.writeMem(0xfb5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7ca9);
        EXPECT(gbc.pc(), 0xa636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa635), 0x71);
        EXPECT(gbc.readMem(0xfb5d), 0x55);
        // 71 0262
        gbc.setState(0xc35c, 0x4782, 0xf080, 0xe04d, 0x3459, 0xcb7f, 0x1, 0x1);
        gbc.writeMem(0xc35c, { 0x71 });
        gbc.writeMem(0xcb7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0xc35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35c), 0x71);
        EXPECT(gbc.readMem(0xcb7f), 0x4d);
        // 71 0265
        gbc.setState(0x482c, 0x526d, 0xfdb0, 0xb661, 0xa4ab, 0xd367, 0x1, 0x1);
        gbc.writeMem(0x482c, { 0x71 });
        gbc.writeMem(0xd367, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x482d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd367), 0x61);
        // 71 0266
        gbc.setState(0x23ea, 0x1100, 0x2280, 0xb750, 0xba3a, 0xff9b, 0x1, 0x0);
        gbc.writeMem(0x23ea, { 0x71 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1100);
        EXPECT(gbc.pc(), 0x23eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9b), 0x50);
        // 71 0269
        gbc.setState(0xb3c1, 0xc798, 0x8580, 0x8edb, 0xfbb4, 0xd1df, 0x1, 0x0);
        gbc.writeMem(0xb3c1, { 0x71 });
        gbc.writeMem(0xd1df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc798);
        EXPECT(gbc.pc(), 0xb3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c1), 0x71);
        EXPECT(gbc.readMem(0xd1df), 0xdb);
        // 71 026A
        gbc.setState(0x4847, 0xb858, 0x3210, 0x3ac, 0xb5c2, 0xe23c, 0x0, 0x1);
        gbc.writeMem(0x4847, { 0x71 });
        gbc.writeMem(0xe23c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb858);
        EXPECT(gbc.pc(), 0x4848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23c), 0xac);
        // 71 026C
        gbc.setState(0xbb2e, 0xc0da, 0xa840, 0x78be, 0x5829, 0xd887, 0x0, 0x0);
        gbc.writeMem(0xbb2e, { 0x71 });
        gbc.writeMem(0xd887, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc0da);
        EXPECT(gbc.pc(), 0xbb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2e), 0x71);
        EXPECT(gbc.readMem(0xd887), 0xbe);
        // 71 026D
        gbc.setState(0xb6a7, 0x76b3, 0x6a80, 0x75f, 0x4c2d, 0xda34, 0x0, 0x0);
        gbc.writeMem(0xb6a7, { 0x71 });
        gbc.writeMem(0xda34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x76b3);
        EXPECT(gbc.pc(), 0xb6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a7), 0x71);
        EXPECT(gbc.readMem(0xda34), 0x5f);
        // 71 0273
        gbc.setState(0x1ffd, 0xfc41, 0x6280, 0x69e3, 0xb7e7, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0x1ffd, { 0x71 });
        gbc.writeMem(0xbe8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfc41);
        EXPECT(gbc.pc(), 0x1ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0xe3);
        // 71 0276
        gbc.setState(0xc8d2, 0x2cd5, 0x8a30, 0xd316, 0x66b6, 0xb1b0, 0x0, 0x0);
        gbc.writeMem(0xb1b0, { 0x0 });
        gbc.writeMem(0xc8d2, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0xc8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b0), 0x16);
        EXPECT(gbc.readMem(0xc8d2), 0x71);
        // 71 027C
        gbc.setState(0x41f0, 0x6f37, 0x5320, 0xe9a1, 0x4f, 0x9533, 0x1, 0x1);
        gbc.writeMem(0x41f0, { 0x71 });
        gbc.writeMem(0x9533, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6f37);
        EXPECT(gbc.pc(), 0x41f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9533), 0xa1);
        // 71 027E
        gbc.setState(0xa45a, 0x927e, 0x3140, 0xf11a, 0xb015, 0xf9f9, 0x1, 0x0);
        gbc.writeMem(0xa45a, { 0x71 });
        gbc.writeMem(0xf9f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x927e);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45a), 0x71);
        EXPECT(gbc.readMem(0xf9f9), 0x1a);
        // 71 027F
        gbc.setState(0x4647, 0xf02c, 0xf750, 0xdfdc, 0xe818, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0x4647, { 0x71 });
        gbc.writeMem(0xcb17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf02c);
        EXPECT(gbc.pc(), 0x4648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb17), 0xdc);
        // 71 0282
        gbc.setState(0xd47f, 0x77d, 0x6a90, 0x4773, 0xf869, 0xb9d7, 0x1, 0x0);
        gbc.writeMem(0xb9d7, { 0x0 });
        gbc.writeMem(0xd47f, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x77d);
        EXPECT(gbc.pc(), 0xd480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d7), 0x73);
        EXPECT(gbc.readMem(0xd47f), 0x71);
        // 71 0286
        gbc.setState(0x1b2b, 0xd065, 0xc260, 0x8f82, 0xd5e5, 0x9805, 0x1, 0x1);
        gbc.writeMem(0x1b2b, { 0x71 });
        gbc.writeMem(0x9805, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd065);
        EXPECT(gbc.pc(), 0x1b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9805), 0x82);
        // 71 028B
        gbc.setState(0x365, 0x6fcf, 0x3b00, 0x3fb, 0xefb7, 0xe081, 0x0, 0x1);
        gbc.writeMem(0x365, { 0x71 });
        gbc.writeMem(0xe081, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6fcf);
        EXPECT(gbc.pc(), 0x366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe081), 0xfb);
        // 71 028F
        gbc.setState(0x8854, 0xb245, 0x2f60, 0xc90c, 0x3573, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x8854, { 0x71 });
        gbc.writeMem(0xcbbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb245);
        EXPECT(gbc.pc(), 0x8855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8854), 0x71);
        EXPECT(gbc.readMem(0xcbbc), 0xc);
        // 71 0290
        gbc.setState(0x7b11, 0x7028, 0x1970, 0xc551, 0x4570, 0x99d9, 0x0, 0x1);
        gbc.writeMem(0x7b11, { 0x71 });
        gbc.writeMem(0x99d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7028);
        EXPECT(gbc.pc(), 0x7b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d9), 0x51);
        // 71 0293
        gbc.setState(0x8d11, 0xfa7b, 0x7100, 0x82cd, 0xe88a, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0x8d11, { 0x71 });
        gbc.writeMem(0x9f8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa7b);
        EXPECT(gbc.pc(), 0x8d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d11), 0x71);
        EXPECT(gbc.readMem(0x9f8e), 0xcd);
        // 71 0294
        gbc.setState(0x48b1, 0xd16f, 0xf820, 0x7b0b, 0x8899, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0x48b1, { 0x71 });
        gbc.writeMem(0x8ba4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd16f);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba4), 0xb);
        // 71 0295
        gbc.setState(0x773a, 0x6d34, 0x8570, 0xaeb5, 0x3d2c, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0x773a, { 0x71 });
        gbc.writeMem(0xb50d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6d34);
        EXPECT(gbc.pc(), 0x773b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50d), 0xb5);
        // 71 0297
        gbc.setState(0xe0f3, 0xb00f, 0x3d60, 0x4085, 0xceab, 0xfd2f, 0x0, 0x1);
        gbc.writeMem(0xe0f3, { 0x71 });
        gbc.writeMem(0xfd2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb00f);
        EXPECT(gbc.pc(), 0xe0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f3), 0x71);
        EXPECT(gbc.readMem(0xfd2f), 0x85);
        // 71 029A
        gbc.setState(0x6da1, 0x8fb, 0xb790, 0x2994, 0x3c57, 0x88ca, 0x1, 0x1);
        gbc.writeMem(0x6da1, { 0x71 });
        gbc.writeMem(0x88ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0x6da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ca), 0x94);
        // 71 029E
        gbc.setState(0x9777, 0xd2e6, 0x8fe0, 0xe463, 0x336, 0x97dd, 0x1, 0x0);
        gbc.writeMem(0x9777, { 0x71 });
        gbc.writeMem(0x97dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd2e6);
        EXPECT(gbc.pc(), 0x9778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9777), 0x71);
        EXPECT(gbc.readMem(0x97dd), 0x63);
        // 71 02A2
        gbc.setState(0xd81c, 0x1187, 0xd350, 0x7506, 0x5e2e, 0xbbd9, 0x0, 0x1);
        gbc.writeMem(0xbbd9, { 0x0 });
        gbc.writeMem(0xd81c, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1187);
        EXPECT(gbc.pc(), 0xd81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd9), 0x6);
        EXPECT(gbc.readMem(0xd81c), 0x71);
        // 71 02A8
        gbc.setState(0x1dfa, 0x1178, 0xa4e0, 0xcb5f, 0xe109, 0x8ffb, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0x71 });
        gbc.writeMem(0x8ffb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1178);
        EXPECT(gbc.pc(), 0x1dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffb), 0x5f);
        // 71 02A9
        gbc.setState(0x1491, 0x5a37, 0xf1f0, 0x721c, 0x8402, 0xdf76, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0x71 });
        gbc.writeMem(0xdf76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5a37);
        EXPECT(gbc.pc(), 0x1492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf76), 0x1c);
        // 71 02AA
        gbc.setState(0xdd2d, 0xe783, 0x3d00, 0x259b, 0xc184, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0x0 });
        gbc.writeMem(0xdd2d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe783);
        EXPECT(gbc.pc(), 0xdd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1c), 0x9b);
        EXPECT(gbc.readMem(0xdd2d), 0x71);
        // 71 02AB
        gbc.setState(0x2390, 0x8ee3, 0x54b0, 0xa725, 0xbcde, 0xcb12, 0x1, 0x0);
        gbc.writeMem(0x2390, { 0x71 });
        gbc.writeMem(0xcb12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8ee3);
        EXPECT(gbc.pc(), 0x2391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb12), 0x25);
        // 71 02B0
        gbc.setState(0x2abf, 0xa977, 0x6630, 0xb3e5, 0xba59, 0xd6a3, 0x1, 0x1);
        gbc.writeMem(0x2abf, { 0x71 });
        gbc.writeMem(0xd6a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa977);
        EXPECT(gbc.pc(), 0x2ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a3), 0xe5);
        // 71 02B6
        gbc.setState(0x2b89, 0x10eb, 0xccf0, 0xbe5d, 0x50ff, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0x71 });
        gbc.writeMem(0xa56e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x10eb);
        EXPECT(gbc.pc(), 0x2b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56e), 0x5d);
        // 71 02B7
        gbc.setState(0x3e4a, 0x1649, 0x240, 0x949e, 0x6a33, 0xa88d, 0x0, 0x0);
        gbc.writeMem(0x3e4a, { 0x71 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1649);
        EXPECT(gbc.pc(), 0x3e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88d), 0x9e);
        // 71 02B8
        gbc.setState(0x3023, 0x1d2c, 0x33d0, 0x9975, 0xde04, 0x9d1e, 0x1, 0x0);
        gbc.writeMem(0x3023, { 0x71 });
        gbc.writeMem(0x9d1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1d2c);
        EXPECT(gbc.pc(), 0x3024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d1e), 0x75);
        // 71 02C0
        gbc.setState(0x6605, 0xf99b, 0x4e80, 0x47f, 0x7506, 0x9345, 0x0, 0x0);
        gbc.writeMem(0x6605, { 0x71 });
        gbc.writeMem(0x9345, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0x6606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9345), 0x7f);
        // 71 02C1
        gbc.setState(0x33be, 0x534b, 0xdb80, 0x8463, 0xc33e, 0x8b55, 0x0, 0x0);
        gbc.writeMem(0x33be, { 0x71 });
        gbc.writeMem(0x8b55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x534b);
        EXPECT(gbc.pc(), 0x33bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b55), 0x63);
        // 71 02C6
        gbc.setState(0xd254, 0x95f, 0xd750, 0xe29, 0x293, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xa5d2, { 0x0 });
        gbc.writeMem(0xd254, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x95f);
        EXPECT(gbc.pc(), 0xd255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d2), 0x29);
        EXPECT(gbc.readMem(0xd254), 0x71);
        // 71 02C7
        gbc.setState(0xb99f, 0x2cd1, 0x8b40, 0x68a1, 0x8174, 0xfa5d, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0x71 });
        gbc.writeMem(0xfa5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99f), 0x71);
        EXPECT(gbc.readMem(0xfa5d), 0xa1);
        // 71 02C8
        gbc.setState(0x51b1, 0x7fb9, 0x1360, 0xf767, 0x48f6, 0x8686, 0x0, 0x1);
        gbc.writeMem(0x51b1, { 0x71 });
        gbc.writeMem(0x8686, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7fb9);
        EXPECT(gbc.pc(), 0x51b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8686), 0x67);
        // 71 02C9
        gbc.setState(0x46c9, 0x8832, 0x1a80, 0xd2bf, 0xbe3d, 0xab53, 0x0, 0x0);
        gbc.writeMem(0x46c9, { 0x71 });
        gbc.writeMem(0xab53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8832);
        EXPECT(gbc.pc(), 0x46ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab53), 0xbf);
        // 71 02CB
        gbc.setState(0x4c1, 0xe794, 0xd680, 0x7b9f, 0x9947, 0x9dfe, 0x1, 0x1);
        gbc.writeMem(0x4c1, { 0x71 });
        gbc.writeMem(0x9dfe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe794);
        EXPECT(gbc.pc(), 0x4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfe), 0x9f);
        // 71 02CE
        gbc.setState(0x8504, 0x9c19, 0x7d30, 0x9a09, 0x15cb, 0xf83c, 0x1, 0x1);
        gbc.writeMem(0x8504, { 0x71 });
        gbc.writeMem(0xf83c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9c19);
        EXPECT(gbc.pc(), 0x8505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8504), 0x71);
        EXPECT(gbc.readMem(0xf83c), 0x9);
        // 71 02CF
        gbc.setState(0xbe53, 0x2a5c, 0x9440, 0x28, 0xf337, 0xf632, 0x0, 0x1);
        gbc.writeMem(0xbe53, { 0x71 });
        gbc.writeMem(0xf632, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0xbe54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe53), 0x71);
        EXPECT(gbc.readMem(0xf632), 0x28);
        // 71 02D6
        gbc.setState(0x1ce7, 0xf4da, 0xf530, 0xd5ec, 0x3940, 0xcd9d, 0x1, 0x0);
        gbc.writeMem(0x1ce7, { 0x71 });
        gbc.writeMem(0xcd9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf4da);
        EXPECT(gbc.pc(), 0x1ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9d), 0xec);
        // 71 02DA
        gbc.setState(0x3d7c, 0x207b, 0x7720, 0xe56, 0x7487, 0x9af2, 0x1, 0x1);
        gbc.writeMem(0x3d7c, { 0x71 });
        gbc.writeMem(0x9af2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x207b);
        EXPECT(gbc.pc(), 0x3d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af2), 0x56);
        // 71 02E0
        gbc.setState(0x6263, 0xd87a, 0x6390, 0x392e, 0xa160, 0xb95e, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x71 });
        gbc.writeMem(0xb95e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd87a);
        EXPECT(gbc.pc(), 0x6264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95e), 0x2e);
        // 71 02E3
        gbc.setState(0x7d67, 0x25fe, 0x1bd0, 0xb382, 0xcc98, 0x9fbf, 0x1, 0x0);
        gbc.writeMem(0x7d67, { 0x71 });
        gbc.writeMem(0x9fbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x25fe);
        EXPECT(gbc.pc(), 0x7d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbf), 0x82);
        // 71 02E4
        gbc.setState(0xab9f, 0xd48c, 0xd940, 0x420a, 0x885b, 0x878b, 0x1, 0x1);
        gbc.writeMem(0x878b, { 0x0 });
        gbc.writeMem(0xab9f, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd48c);
        EXPECT(gbc.pc(), 0xaba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878b), 0xa);
        EXPECT(gbc.readMem(0xab9f), 0x71);
        // 71 02E5
        gbc.setState(0xb305, 0x78e1, 0xe920, 0xb384, 0xf2ea, 0xf563, 0x1, 0x0);
        gbc.writeMem(0xb305, { 0x71 });
        gbc.writeMem(0xf563, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x78e1);
        EXPECT(gbc.pc(), 0xb306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb305), 0x71);
        EXPECT(gbc.readMem(0xf563), 0x84);
        // 71 02E6
        gbc.setState(0x1f21, 0xb83, 0x8d10, 0xec86, 0x8d5b, 0xa420, 0x0, 0x0);
        gbc.writeMem(0x1f21, { 0x71 });
        gbc.writeMem(0xa420, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb83);
        EXPECT(gbc.pc(), 0x1f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa420), 0x86);
        // 71 02E7
        gbc.setState(0xc630, 0x195d, 0xe2b0, 0x6a3c, 0x91c1, 0xa8db, 0x1, 0x1);
        gbc.writeMem(0xa8db, { 0x0 });
        gbc.writeMem(0xc630, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x195d);
        EXPECT(gbc.pc(), 0xc631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8db), 0x3c);
        EXPECT(gbc.readMem(0xc630), 0x71);
        // 71 02E8
        gbc.setState(0x18ae, 0xe4ea, 0xd680, 0x95e5, 0xeb18, 0x9f6a, 0x0, 0x1);
        gbc.writeMem(0x18ae, { 0x71 });
        gbc.writeMem(0x9f6a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe4ea);
        EXPECT(gbc.pc(), 0x18af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6a), 0xe5);
        // 71 02EB
        gbc.setState(0x5567, 0x5979, 0x2b80, 0x4d6d, 0x3433, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x5567, { 0x71 });
        gbc.writeMem(0xc770, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5979);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc770), 0x6d);
        // 71 02ED
        gbc.setState(0x5723, 0x1f39, 0xea30, 0xf73a, 0x129d, 0xca99, 0x1, 0x0);
        gbc.writeMem(0x5723, { 0x71 });
        gbc.writeMem(0xca99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0x5724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca99), 0x3a);
        // 71 02EE
        gbc.setState(0x1b0, 0xf617, 0x1c20, 0x2fde, 0xbd34, 0xb2c5, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0x71 });
        gbc.writeMem(0xb2c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf617);
        EXPECT(gbc.pc(), 0x1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c5), 0xde);
        // 71 02EF
        gbc.setState(0x8cf8, 0xc5fb, 0x3a10, 0xc24, 0x3ae4, 0x9564, 0x1, 0x0);
        gbc.writeMem(0x8cf8, { 0x71 });
        gbc.writeMem(0x9564, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc5fb);
        EXPECT(gbc.pc(), 0x8cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf8), 0x71);
        EXPECT(gbc.readMem(0x9564), 0x24);
        // 71 02F7
        gbc.setState(0xe894, 0xafc8, 0xdc20, 0x8327, 0xd6c3, 0x91ea, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x0 });
        gbc.writeMem(0xe894, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xafc8);
        EXPECT(gbc.pc(), 0xe895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ea), 0x27);
        EXPECT(gbc.readMem(0xe894), 0x71);
        // 71 02FA
        gbc.setState(0xe94f, 0x8f20, 0x3a20, 0x8b10, 0x1b44, 0xe11c, 0x0, 0x0);
        gbc.writeMem(0xe11c, { 0x0 });
        gbc.writeMem(0xe94f, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8f20);
        EXPECT(gbc.pc(), 0xe950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11c), 0x10);
        EXPECT(gbc.readMem(0xe94f), 0x71);
        // 71 02FB
        gbc.setState(0xa061, 0x77e, 0x8910, 0xefb4, 0xbdb2, 0x923c, 0x0, 0x1);
        gbc.writeMem(0x923c, { 0x0 });
        gbc.writeMem(0xa061, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x77e);
        EXPECT(gbc.pc(), 0xa062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923c), 0xb4);
        EXPECT(gbc.readMem(0xa061), 0x71);
        // 71 02FE
        gbc.setState(0xebb8, 0xa190, 0x25d0, 0x6723, 0x361, 0x844c, 0x0, 0x0);
        gbc.writeMem(0x844c, { 0x0 });
        gbc.writeMem(0xebb8, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa190);
        EXPECT(gbc.pc(), 0xebb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844c), 0x23);
        EXPECT(gbc.readMem(0xebb8), 0x71);
        // 71 0300
        gbc.setState(0xbb8e, 0x79f4, 0x95e0, 0x8692, 0xd24d, 0xb783, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0x0 });
        gbc.writeMem(0xbb8e, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb783), 0x92);
        EXPECT(gbc.readMem(0xbb8e), 0x71);
        // 71 0301
        gbc.setState(0x456, 0x6dca, 0x59c0, 0xfb16, 0x794f, 0xcefb, 0x0, 0x0);
        gbc.writeMem(0x456, { 0x71 });
        gbc.writeMem(0xcefb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6dca);
        EXPECT(gbc.pc(), 0x457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefb), 0x16);
        // 71 0303
        gbc.setState(0x9ba7, 0xead4, 0xdf50, 0x7ba7, 0xe1d, 0xb567, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0x71 });
        gbc.writeMem(0xb567, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xead4);
        EXPECT(gbc.pc(), 0x9ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba7), 0x71);
        EXPECT(gbc.readMem(0xb567), 0xa7);
        // 71 0304
        gbc.setState(0x6436, 0x984, 0x4670, 0xe0bd, 0xa3b, 0x85d5, 0x1, 0x1);
        gbc.writeMem(0x6436, { 0x71 });
        gbc.writeMem(0x85d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x984);
        EXPECT(gbc.pc(), 0x6437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d5), 0xbd);
        // 71 0305
        gbc.setState(0x73f3, 0x82cf, 0xe3f0, 0x2e0c, 0x7dae, 0x90eb, 0x0, 0x0);
        gbc.writeMem(0x73f3, { 0x71 });
        gbc.writeMem(0x90eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x82cf);
        EXPECT(gbc.pc(), 0x73f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90eb), 0xc);
        // 71 0306
        gbc.setState(0xac30, 0x64ff, 0xe1e0, 0x656e, 0x2e3c, 0xf74f, 0x0, 0x1);
        gbc.writeMem(0xac30, { 0x71 });
        gbc.writeMem(0xf74f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x64ff);
        EXPECT(gbc.pc(), 0xac31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac30), 0x71);
        EXPECT(gbc.readMem(0xf74f), 0x6e);
        // 71 0307
        gbc.setState(0xa68, 0x6c36, 0x11c0, 0xbc62, 0xa0e6, 0xf6d5, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0x71 });
        gbc.writeMem(0xf6d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6c36);
        EXPECT(gbc.pc(), 0xa69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf6d5), 0x62);
        // 71 0308
        gbc.setState(0x311f, 0x9346, 0xc220, 0xcdc9, 0x6279, 0x9eae, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0x71 });
        gbc.writeMem(0x9eae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9346);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eae), 0xc9);
        // 71 0309
        gbc.setState(0x5ac9, 0x9e76, 0x67d0, 0x80d7, 0x1d31, 0xca80, 0x0, 0x1);
        gbc.writeMem(0x5ac9, { 0x71 });
        gbc.writeMem(0xca80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9e76);
        EXPECT(gbc.pc(), 0x5aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca80), 0xd7);
        // 71 030A
        gbc.setState(0xb043, 0xca3f, 0xdbf0, 0x9ab, 0x5097, 0xa305, 0x1, 0x0);
        gbc.writeMem(0xa305, { 0x0 });
        gbc.writeMem(0xb043, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xca3f);
        EXPECT(gbc.pc(), 0xb044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa305), 0xab);
        EXPECT(gbc.readMem(0xb043), 0x71);
        // 71 030B
        gbc.setState(0x14c3, 0x3201, 0x5940, 0xa84f, 0x90b7, 0x9c53, 0x1, 0x1);
        gbc.writeMem(0x14c3, { 0x71 });
        gbc.writeMem(0x9c53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3201);
        EXPECT(gbc.pc(), 0x14c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c53), 0x4f);
        // 71 030E
        gbc.setState(0x1548, 0xf217, 0xcb30, 0xb70d, 0xe04, 0x88c1, 0x1, 0x0);
        gbc.writeMem(0x1548, { 0x71 });
        gbc.writeMem(0x88c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf217);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xd);
        // 71 030F
        gbc.setState(0x26c4, 0x4128, 0x4bb0, 0x9f15, 0x9e36, 0x9735, 0x1, 0x0);
        gbc.writeMem(0x26c4, { 0x71 });
        gbc.writeMem(0x9735, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4128);
        EXPECT(gbc.pc(), 0x26c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9735), 0x15);
        // 71 0313
        gbc.setState(0x88d2, 0x6d41, 0x1370, 0xcc6b, 0x52ea, 0xe364, 0x0, 0x1);
        gbc.writeMem(0x88d2, { 0x71 });
        gbc.writeMem(0xe364, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6d41);
        EXPECT(gbc.pc(), 0x88d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d2), 0x71);
        EXPECT(gbc.readMem(0xe364), 0x6b);
        // 71 0319
        gbc.setState(0xa46e, 0xdc6, 0x2240, 0x81bf, 0xb321, 0xe04a, 0x1, 0x1);
        gbc.writeMem(0xa46e, { 0x71 });
        gbc.writeMem(0xe04a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdc6);
        EXPECT(gbc.pc(), 0xa46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46e), 0x71);
        EXPECT(gbc.readMem(0xe04a), 0xbf);
        // 71 031A
        gbc.setState(0x7f2e, 0x143b, 0x3440, 0x8f63, 0xca37, 0xdde4, 0x0, 0x1);
        gbc.writeMem(0x7f2e, { 0x71 });
        gbc.writeMem(0xdde4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x143b);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde4), 0x63);
        // 71 031B
        gbc.setState(0x9b80, 0x43e9, 0x2470, 0x7e05, 0x9eb4, 0xdedf, 0x1, 0x1);
        gbc.writeMem(0x9b80, { 0x71 });
        gbc.writeMem(0xdedf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x9b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b80), 0x71);
        EXPECT(gbc.readMem(0xdedf), 0x5);
        // 71 0320
        gbc.setState(0xaac3, 0xc473, 0xa950, 0xb6fc, 0xdd10, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xa0e5, { 0x0 });
        gbc.writeMem(0xaac3, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0xaac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e5), 0xfc);
        EXPECT(gbc.readMem(0xaac3), 0x71);
        // 71 0322
        gbc.setState(0x5d73, 0x6148, 0x3bb0, 0xd84b, 0xc20f, 0x819b, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0x71 });
        gbc.writeMem(0x819b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6148);
        EXPECT(gbc.pc(), 0x5d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819b), 0x4b);
        // 71 0323
        gbc.setState(0x1b39, 0x19b5, 0x3240, 0x59b5, 0x5019, 0xb297, 0x1, 0x1);
        gbc.writeMem(0x1b39, { 0x71 });
        gbc.writeMem(0xb297, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x19b5);
        EXPECT(gbc.pc(), 0x1b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb297), 0xb5);
        // 71 0326
        gbc.setState(0x7355, 0x2136, 0x1510, 0x7c5f, 0xc691, 0xc04e, 0x1, 0x0);
        gbc.writeMem(0x7355, { 0x71 });
        gbc.writeMem(0xc04e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2136);
        EXPECT(gbc.pc(), 0x7356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04e), 0x5f);
        // 71 0328
        gbc.setState(0xb902, 0xc794, 0x6f0, 0xe2b6, 0x23d6, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0xb902, { 0x71 });
        gbc.writeMem(0xcd2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc794);
        EXPECT(gbc.pc(), 0xb903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb902), 0x71);
        EXPECT(gbc.readMem(0xcd2d), 0xb6);
        // 71 032A
        gbc.setState(0x2961, 0x6c9f, 0x8e70, 0xc157, 0x5ca7, 0xc5b1, 0x1, 0x1);
        gbc.writeMem(0x2961, { 0x71 });
        gbc.writeMem(0xc5b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6c9f);
        EXPECT(gbc.pc(), 0x2962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b1), 0x57);
        // 71 032E
        gbc.setState(0x56d2, 0x4aa3, 0xef70, 0xa8fa, 0x4596, 0xd871, 0x1, 0x1);
        gbc.writeMem(0x56d2, { 0x71 });
        gbc.writeMem(0xd871, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4aa3);
        EXPECT(gbc.pc(), 0x56d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd871), 0xfa);
        // 71 0330
        gbc.setState(0xe446, 0x38b1, 0xdd30, 0xb0fa, 0x58, 0xf68c, 0x1, 0x0);
        gbc.writeMem(0xe446, { 0x71 });
        gbc.writeMem(0xf68c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x38b1);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe446), 0x71);
        EXPECT(gbc.readMem(0xf68c), 0xfa);
        // 71 0331
        gbc.setState(0x21e6, 0x7d05, 0x7930, 0xaed4, 0x12e3, 0xe206, 0x1, 0x1);
        gbc.writeMem(0x21e6, { 0x71 });
        gbc.writeMem(0xe206, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7d05);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe206), 0xd4);
        // 71 0334
        gbc.setState(0xaae5, 0xbb92, 0xacc0, 0xd10f, 0xd068, 0xb0a9, 0x1, 0x0);
        gbc.writeMem(0xaae5, { 0x71 });
        gbc.writeMem(0xb0a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbb92);
        EXPECT(gbc.pc(), 0xaae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae5), 0x71);
        EXPECT(gbc.readMem(0xb0a9), 0xf);
        // 71 0335
        gbc.setState(0x7ff5, 0x2472, 0xb470, 0x25a9, 0x9e14, 0xb54b, 0x0, 0x0);
        gbc.writeMem(0x7ff5, { 0x71 });
        gbc.writeMem(0xb54b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2472);
        EXPECT(gbc.pc(), 0x7ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54b), 0xa9);
        // 71 033C
        gbc.setState(0x4f20, 0x183b, 0xc950, 0xa25c, 0xb3d6, 0xa686, 0x1, 0x0);
        gbc.writeMem(0x4f20, { 0x71 });
        gbc.writeMem(0xa686, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x183b);
        EXPECT(gbc.pc(), 0x4f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa686), 0x5c);
        // 71 033D
        gbc.setState(0xc2fb, 0x95d3, 0xc840, 0x1068, 0x2870, 0xeaff, 0x0, 0x0);
        gbc.writeMem(0xc2fb, { 0x71 });
        gbc.writeMem(0xeaff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x95d3);
        EXPECT(gbc.pc(), 0xc2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fb), 0x71);
        EXPECT(gbc.readMem(0xeaff), 0x68);
        // 71 033F
        gbc.setState(0xbbc9, 0xdd25, 0xdcd0, 0x7a1d, 0xd3ba, 0x9e8d, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0x0 });
        gbc.writeMem(0xbbc9, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdd25);
        EXPECT(gbc.pc(), 0xbbca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8d), 0x1d);
        EXPECT(gbc.readMem(0xbbc9), 0x71);
        // 71 0341
        gbc.setState(0xdd37, 0x7e01, 0x7b40, 0xc64d, 0x679f, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x85bc, { 0x0 });
        gbc.writeMem(0xdd37, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7e01);
        EXPECT(gbc.pc(), 0xdd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85bc), 0x4d);
        EXPECT(gbc.readMem(0xdd37), 0x71);
        // 71 0347
        gbc.setState(0xc4fa, 0xc744, 0x2470, 0x20ad, 0x723d, 0x9a6f, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0x0 });
        gbc.writeMem(0xc4fa, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc744);
        EXPECT(gbc.pc(), 0xc4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6f), 0xad);
        EXPECT(gbc.readMem(0xc4fa), 0x71);
        // 71 034A
        gbc.setState(0x2b59, 0x4ef8, 0x8e50, 0x41c7, 0xfd3d, 0xe39c, 0x0, 0x0);
        gbc.writeMem(0x2b59, { 0x71 });
        gbc.writeMem(0xe39c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4ef8);
        EXPECT(gbc.pc(), 0x2b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39c), 0xc7);
        // 71 034F
        gbc.setState(0x5f17, 0xa2bf, 0xbcf0, 0x88aa, 0x755f, 0x9c04, 0x1, 0x1);
        gbc.writeMem(0x5f17, { 0x71 });
        gbc.writeMem(0x9c04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa2bf);
        EXPECT(gbc.pc(), 0x5f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c04), 0xaa);
        // 71 0350
        gbc.setState(0x69cb, 0x482d, 0x89d0, 0x6b30, 0x634b, 0xd07d, 0x0, 0x0);
        gbc.writeMem(0x69cb, { 0x71 });
        gbc.writeMem(0xd07d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x482d);
        EXPECT(gbc.pc(), 0x69cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07d), 0x30);
        // 71 0351
        gbc.setState(0xb690, 0x2d52, 0x61b0, 0xce54, 0xc732, 0xca50, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0x71 });
        gbc.writeMem(0xca50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2d52);
        EXPECT(gbc.pc(), 0xb691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb690), 0x71);
        EXPECT(gbc.readMem(0xca50), 0x54);
        // 71 0356
        gbc.setState(0x8eba, 0x42e0, 0x7cf0, 0x8d6d, 0xe33d, 0xb335, 0x0, 0x0);
        gbc.writeMem(0x8eba, { 0x71 });
        gbc.writeMem(0xb335, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x42e0);
        EXPECT(gbc.pc(), 0x8ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eba), 0x71);
        EXPECT(gbc.readMem(0xb335), 0x6d);
        // 71 0357
        gbc.setState(0x6e6e, 0xc301, 0x21a0, 0x1b61, 0xb97f, 0xeb5e, 0x1, 0x0);
        gbc.writeMem(0x6e6e, { 0x71 });
        gbc.writeMem(0xeb5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc301);
        EXPECT(gbc.pc(), 0x6e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5e), 0x61);
        // 71 0358
        gbc.setState(0x6222, 0x35c6, 0xbc10, 0x103f, 0xc789, 0xa8b8, 0x0, 0x0);
        gbc.writeMem(0x6222, { 0x71 });
        gbc.writeMem(0xa8b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x35c6);
        EXPECT(gbc.pc(), 0x6223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b8), 0x3f);
        // 71 0359
        gbc.setState(0xdd10, 0x779a, 0xcb00, 0xd70e, 0xf41d, 0xe4d2, 0x0, 0x1);
        gbc.writeMem(0xdd10, { 0x71 });
        gbc.writeMem(0xe4d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x779a);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd10), 0x71);
        EXPECT(gbc.readMem(0xe4d2), 0xe);
        // 71 035E
        gbc.setState(0xb35c, 0x1022, 0xf100, 0x5f6, 0x3d7a, 0xc598, 0x0, 0x0);
        gbc.writeMem(0xb35c, { 0x71 });
        gbc.writeMem(0xc598, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1022);
        EXPECT(gbc.pc(), 0xb35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35c), 0x71);
        EXPECT(gbc.readMem(0xc598), 0xf6);
        // 71 0364
        gbc.setState(0xbe88, 0xb4b7, 0xb410, 0xcb7, 0x6d4, 0x8625, 0x1, 0x1);
        gbc.writeMem(0x8625, { 0x0 });
        gbc.writeMem(0xbe88, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0xbe89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8625), 0xb7);
        EXPECT(gbc.readMem(0xbe88), 0x71);
        // 71 0365
        gbc.setState(0x8a4c, 0xc85c, 0xc1f0, 0xa7c9, 0xc, 0xa911, 0x1, 0x0);
        gbc.writeMem(0x8a4c, { 0x71 });
        gbc.writeMem(0xa911, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc85c);
        EXPECT(gbc.pc(), 0x8a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4c), 0x71);
        EXPECT(gbc.readMem(0xa911), 0xc9);
        // 71 036B
        gbc.setState(0x2add, 0xe85e, 0xa1a0, 0xc1e8, 0x4430, 0x9fe7, 0x1, 0x1);
        gbc.writeMem(0x2add, { 0x71 });
        gbc.writeMem(0x9fe7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe85e);
        EXPECT(gbc.pc(), 0x2ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe7), 0xe8);
        // 71 036C
        gbc.setState(0xe03d, 0xb991, 0x4a60, 0x4429, 0x9757, 0x9ebf, 0x1, 0x1);
        gbc.writeMem(0x9ebf, { 0x0 });
        gbc.writeMem(0xe03d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb991);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebf), 0x29);
        EXPECT(gbc.readMem(0xe03d), 0x71);
        // 71 036E
        gbc.setState(0x92a2, 0x2de8, 0x6230, 0xa2d5, 0xe86, 0xbdbc, 0x1, 0x1);
        gbc.writeMem(0x92a2, { 0x71 });
        gbc.writeMem(0xbdbc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2de8);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a2), 0x71);
        EXPECT(gbc.readMem(0xbdbc), 0xd5);
        // 71 036F
        gbc.setState(0x9e73, 0x5b40, 0xf2a0, 0x3d5b, 0xfc74, 0xdddd, 0x1, 0x1);
        gbc.writeMem(0x9e73, { 0x71 });
        gbc.writeMem(0xdddd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5b40);
        EXPECT(gbc.pc(), 0x9e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e73), 0x71);
        EXPECT(gbc.readMem(0xdddd), 0x5b);
        // 71 0372
        gbc.setState(0x34a2, 0x9f24, 0xb1f0, 0xf6eb, 0x82d8, 0xda98, 0x0, 0x1);
        gbc.writeMem(0x34a2, { 0x71 });
        gbc.writeMem(0xda98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9f24);
        EXPECT(gbc.pc(), 0x34a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda98), 0xeb);
        // 71 0376
        gbc.setState(0x13c8, 0x88c2, 0xce90, 0x8e95, 0x657b, 0xb363, 0x0, 0x1);
        gbc.writeMem(0x13c8, { 0x71 });
        gbc.writeMem(0xb363, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x88c2);
        EXPECT(gbc.pc(), 0x13c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb363), 0x95);
        // 71 0377
        gbc.setState(0x5086, 0x9e29, 0x6740, 0x4cf7, 0x1cb4, 0x9146, 0x0, 0x0);
        gbc.writeMem(0x5086, { 0x71 });
        gbc.writeMem(0x9146, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9e29);
        EXPECT(gbc.pc(), 0x5087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9146), 0xf7);
        // 71 037A
        gbc.setState(0xd480, 0x3c6c, 0xfe50, 0xd946, 0x9fdc, 0x9b7a, 0x1, 0x1);
        gbc.writeMem(0x9b7a, { 0x0 });
        gbc.writeMem(0xd480, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3c6c);
        EXPECT(gbc.pc(), 0xd481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7a), 0x46);
        EXPECT(gbc.readMem(0xd480), 0x71);
        // 71 037D
        gbc.setState(0x8a06, 0x5cda, 0xa7a0, 0x28cb, 0x5cff, 0xde1f, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x71 });
        gbc.writeMem(0xde1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5cda);
        EXPECT(gbc.pc(), 0x8a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a06), 0x71);
        EXPECT(gbc.readMem(0xde1f), 0xcb);
        // 71 037E
        gbc.setState(0x2cf3, 0x2c20, 0xe0, 0x847d, 0xca9c, 0xec48, 0x0, 0x0);
        gbc.writeMem(0x2cf3, { 0x71 });
        gbc.writeMem(0xec48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2c20);
        EXPECT(gbc.pc(), 0x2cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec48), 0x7d);
        // 71 0380
        gbc.setState(0x1892, 0x4de9, 0x8dd0, 0x6623, 0x54da, 0xc8e0, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0x71 });
        gbc.writeMem(0xc8e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4de9);
        EXPECT(gbc.pc(), 0x1893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e0), 0x23);
        // 71 0382
        gbc.setState(0x9c81, 0x934c, 0xd1c0, 0x9c6f, 0x44ba, 0xf2ae, 0x0, 0x1);
        gbc.writeMem(0x9c81, { 0x71 });
        gbc.writeMem(0xf2ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x934c);
        EXPECT(gbc.pc(), 0x9c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c81), 0x71);
        EXPECT(gbc.readMem(0xf2ae), 0x6f);
        // 71 0383
        gbc.setState(0xecbf, 0x4758, 0x540, 0x1c8c, 0xf4db, 0xcaf0, 0x0, 0x1);
        gbc.writeMem(0xcaf0, { 0x0 });
        gbc.writeMem(0xecbf, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4758);
        EXPECT(gbc.pc(), 0xecc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf0), 0x8c);
        EXPECT(gbc.readMem(0xecbf), 0x71);
        // 71 0384
        gbc.setState(0x1ec0, 0xaad8, 0x6a50, 0x2292, 0x846, 0xa266, 0x0, 0x0);
        gbc.writeMem(0x1ec0, { 0x71 });
        gbc.writeMem(0xa266, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xaad8);
        EXPECT(gbc.pc(), 0x1ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa266), 0x92);
        // 71 0388
        gbc.setState(0xdec0, 0xe0f3, 0x6b10, 0x5870, 0xae3b, 0xac68, 0x0, 0x0);
        gbc.writeMem(0xac68, { 0x0 });
        gbc.writeMem(0xdec0, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe0f3);
        EXPECT(gbc.pc(), 0xdec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac68), 0x70);
        EXPECT(gbc.readMem(0xdec0), 0x71);
        // 71 038A
        gbc.setState(0xd7a2, 0xbd91, 0x2af0, 0x3791, 0x9651, 0xf668, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0x71 });
        gbc.writeMem(0xf668, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbd91);
        EXPECT(gbc.pc(), 0xd7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a2), 0x71);
        EXPECT(gbc.readMem(0xf668), 0x91);
        // 71 038B
        gbc.setState(0x843d, 0x9496, 0xff30, 0x97a8, 0x6948, 0x9af1, 0x0, 0x0);
        gbc.writeMem(0x843d, { 0x71 });
        gbc.writeMem(0x9af1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9496);
        EXPECT(gbc.pc(), 0x843e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843d), 0x71);
        EXPECT(gbc.readMem(0x9af1), 0xa8);
        // 71 038C
        gbc.setState(0xeda, 0x2b8d, 0x690, 0xb27a, 0xf288, 0xda4a, 0x1, 0x1);
        gbc.writeMem(0xeda, { 0x71 });
        gbc.writeMem(0xda4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2b8d);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda4a), 0x7a);
        // 71 038F
        gbc.setState(0xaa9d, 0x573b, 0xa50, 0x4929, 0xc1d, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0xaa9d, { 0x71 });
        gbc.writeMem(0xf9ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x573b);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9d), 0x71);
        EXPECT(gbc.readMem(0xf9ad), 0x29);
        // 71 0392
        gbc.setState(0x23, 0x5372, 0xfbb0, 0x903c, 0x2961, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x23, { 0x71 });
        gbc.writeMem(0xdfd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5372);
        EXPECT(gbc.pc(), 0x24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd8), 0x3c);
        // 71 0393
        gbc.setState(0x7077, 0x3b41, 0xa870, 0x11c6, 0xa84e, 0xf9cc, 0x0, 0x1);
        gbc.writeMem(0x7077, { 0x71 });
        gbc.writeMem(0xf9cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0x7078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9cc), 0xc6);
        // 71 0395
        gbc.setState(0x5cb1, 0x5840, 0x7d80, 0xc9a6, 0xf29f, 0xd1de, 0x0, 0x1);
        gbc.writeMem(0x5cb1, { 0x71 });
        gbc.writeMem(0xd1de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5840);
        EXPECT(gbc.pc(), 0x5cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1de), 0xa6);
        // 71 0398
        gbc.setState(0x3e88, 0xafee, 0xc7a0, 0xbff0, 0x3d94, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x3e88, { 0x71 });
        gbc.writeMem(0xeee6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xafee);
        EXPECT(gbc.pc(), 0x3e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee6), 0xf0);
        // 71 0399
        gbc.setState(0xbba0, 0xadef, 0xf6e0, 0xd825, 0xbe88, 0xc60a, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0x71 });
        gbc.writeMem(0xc60a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xadef);
        EXPECT(gbc.pc(), 0xbba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba0), 0x71);
        EXPECT(gbc.readMem(0xc60a), 0x25);
        // 71 039D
        gbc.setState(0x2f56, 0x18ef, 0xeb60, 0xeb35, 0xeef5, 0xd75e, 0x1, 0x1);
        gbc.writeMem(0x2f56, { 0x71 });
        gbc.writeMem(0xd75e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0x2f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75e), 0x35);
        // 71 039E
        gbc.setState(0xba1d, 0x32f3, 0x6c20, 0x10e6, 0x38db, 0x9034, 0x0, 0x1);
        gbc.writeMem(0x9034, { 0x0 });
        gbc.writeMem(0xba1d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x32f3);
        EXPECT(gbc.pc(), 0xba1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9034), 0xe6);
        EXPECT(gbc.readMem(0xba1d), 0x71);
        // 71 039F
        gbc.setState(0x3434, 0x1b1f, 0xbf60, 0xa5b9, 0x45cd, 0xe493, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0x71 });
        gbc.writeMem(0xe493, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1b1f);
        EXPECT(gbc.pc(), 0x3435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe493), 0xb9);
        // 71 03A4
        gbc.setState(0x36ee, 0x4faa, 0x8d60, 0xdd5a, 0xbfde, 0xe0a1, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0x71 });
        gbc.writeMem(0xe0a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4faa);
        EXPECT(gbc.pc(), 0x36ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a1), 0x5a);
        // 71 03AA
        gbc.setState(0x4ddc, 0xd5f2, 0x25e0, 0x3293, 0x8e43, 0xe378, 0x1, 0x0);
        gbc.writeMem(0x4ddc, { 0x71 });
        gbc.writeMem(0xe378, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd5f2);
        EXPECT(gbc.pc(), 0x4ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe378), 0x93);
        // 71 03AC
        gbc.setState(0x7cc2, 0xe54a, 0x8650, 0xdfd2, 0x748a, 0xafb4, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0x71 });
        gbc.writeMem(0xafb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe54a);
        EXPECT(gbc.pc(), 0x7cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb4), 0xd2);
        // 71 03AD
        gbc.setState(0xa6f4, 0x699a, 0x87e0, 0x4b66, 0x4469, 0xcec4, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0x71 });
        gbc.writeMem(0xcec4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x699a);
        EXPECT(gbc.pc(), 0xa6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f4), 0x71);
        EXPECT(gbc.readMem(0xcec4), 0x66);
        // 71 03AE
        gbc.setState(0x37a1, 0x9ff5, 0x83c0, 0x5b8b, 0x1ad4, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0x37a1, { 0x71 });
        gbc.writeMem(0xcafe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9ff5);
        EXPECT(gbc.pc(), 0x37a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafe), 0x8b);
        // 71 03B1
        gbc.setState(0x65b5, 0xb6cc, 0x3c90, 0xb356, 0xeb6e, 0xf809, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0x71 });
        gbc.writeMem(0xf809, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb6cc);
        EXPECT(gbc.pc(), 0x65b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf809), 0x56);
        // 71 03B3
        gbc.setState(0xe92b, 0xaec3, 0x6a90, 0xdbfd, 0x445e, 0xec49, 0x0, 0x0);
        gbc.writeMem(0xe92b, { 0x71 });
        gbc.writeMem(0xec49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaec3);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92b), 0x71);
        EXPECT(gbc.readMem(0xec49), 0xfd);
        // 71 03B5
        gbc.setState(0x135c, 0x30c, 0xa670, 0x18f6, 0xafc3, 0x8071, 0x0, 0x1);
        gbc.writeMem(0x135c, { 0x71 });
        gbc.writeMem(0x8071, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x30c);
        EXPECT(gbc.pc(), 0x135d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8071), 0xf6);
        // 71 03B7
        gbc.setState(0x69c2, 0xc236, 0xf980, 0x6bd0, 0xe8b6, 0x9729, 0x0, 0x1);
        gbc.writeMem(0x69c2, { 0x71 });
        gbc.writeMem(0x9729, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0x69c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9729), 0xd0);
        // 71 03BA
        gbc.setState(0x73e7, 0x679e, 0x5d90, 0xcb3c, 0xba2f, 0xc563, 0x1, 0x0);
        gbc.writeMem(0x73e7, { 0x71 });
        gbc.writeMem(0xc563, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x679e);
        EXPECT(gbc.pc(), 0x73e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc563), 0x3c);
        // 71 03BD
        gbc.setState(0xb070, 0x97f3, 0xd00, 0xe19c, 0x77ac, 0xc32a, 0x1, 0x1);
        gbc.writeMem(0xb070, { 0x71 });
        gbc.writeMem(0xc32a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0xb071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb070), 0x71);
        EXPECT(gbc.readMem(0xc32a), 0x9c);
        // 71 03C1
        gbc.setState(0xb68c, 0x6bca, 0x82c0, 0x37f, 0xa5f9, 0xdca5, 0x1, 0x0);
        gbc.writeMem(0xb68c, { 0x71 });
        gbc.writeMem(0xdca5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6bca);
        EXPECT(gbc.pc(), 0xb68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68c), 0x71);
        EXPECT(gbc.readMem(0xdca5), 0x7f);
        // 71 03C3
        gbc.setState(0x7f1a, 0x4fce, 0xeae0, 0xd3ef, 0xbd8e, 0xa0fe, 0x0, 0x1);
        gbc.writeMem(0x7f1a, { 0x71 });
        gbc.writeMem(0xa0fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0x7f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fe), 0xef);
        // 71 03C6
        gbc.setState(0x34a, 0x3f52, 0x640, 0xc8fa, 0x9251, 0x9424, 0x1, 0x0);
        gbc.writeMem(0x34a, { 0x71 });
        gbc.writeMem(0x9424, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3f52);
        EXPECT(gbc.pc(), 0x34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9424), 0xfa);
        // 71 03CC
        gbc.setState(0x2366, 0x104d, 0x2c90, 0x743f, 0xa6a, 0xe7a0, 0x1, 0x0);
        gbc.writeMem(0x2366, { 0x71 });
        gbc.writeMem(0xe7a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x104d);
        EXPECT(gbc.pc(), 0x2367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a0), 0x3f);
        // 71 03CD
        gbc.setState(0x106e, 0x245a, 0x2c00, 0x9253, 0x622, 0xcb73, 0x0, 0x0);
        gbc.writeMem(0x106e, { 0x71 });
        gbc.writeMem(0xcb73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x245a);
        EXPECT(gbc.pc(), 0x106f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb73), 0x53);
        // 71 03CF
        gbc.setState(0x96a8, 0xbd02, 0x1ce0, 0x9fff, 0xa4a8, 0x93d1, 0x0, 0x1);
        gbc.writeMem(0x93d1, { 0x0 });
        gbc.writeMem(0x96a8, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbd02);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d1), 0xff);
        EXPECT(gbc.readMem(0x96a8), 0x71);
        // 71 03D2
        gbc.setState(0xe418, 0x2111, 0x1bd0, 0xe05f, 0xd538, 0xbbd8, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0x0 });
        gbc.writeMem(0xe418, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2111);
        EXPECT(gbc.pc(), 0xe419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd8), 0x5f);
        EXPECT(gbc.readMem(0xe418), 0x71);
        // 71 03D3
        gbc.setState(0x6ab3, 0x9a01, 0x17d0, 0x2b4d, 0xb269, 0xc169, 0x1, 0x0);
        gbc.writeMem(0x6ab3, { 0x71 });
        gbc.writeMem(0xc169, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9a01);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc169), 0x4d);
        // 71 03D5
        gbc.setState(0x650c, 0x2384, 0x3940, 0xb843, 0xc6fc, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0x650c, { 0x71 });
        gbc.writeMem(0xe4f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2384);
        EXPECT(gbc.pc(), 0x650d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f5), 0x43);
        // 71 03D7
        gbc.setState(0x3509, 0x9cef, 0x1e20, 0xd5ea, 0xe07b, 0xf104, 0x1, 0x1);
        gbc.writeMem(0x3509, { 0x71 });
        gbc.writeMem(0xf104, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9cef);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf104), 0xea);
        // 71 03D9
        gbc.setState(0x6efc, 0x4008, 0x6bf0, 0xc09, 0x3c6e, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0x6efc, { 0x71 });
        gbc.writeMem(0xf7ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4008);
        EXPECT(gbc.pc(), 0x6efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7ca), 0x9);
        // 71 03DA
        gbc.setState(0xa1a2, 0x2d21, 0x3b20, 0x86, 0x673d, 0xdee6, 0x0, 0x1);
        gbc.writeMem(0xa1a2, { 0x71 });
        gbc.writeMem(0xdee6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2d21);
        EXPECT(gbc.pc(), 0xa1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a2), 0x71);
        EXPECT(gbc.readMem(0xdee6), 0x86);
        // 71 03DD
        gbc.setState(0xb0a3, 0xc2fe, 0x6e20, 0x518d, 0x47b0, 0x86c9, 0x1, 0x0);
        gbc.writeMem(0x86c9, { 0x0 });
        gbc.writeMem(0xb0a3, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc2fe);
        EXPECT(gbc.pc(), 0xb0a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c9), 0x8d);
        EXPECT(gbc.readMem(0xb0a3), 0x71);
        // 71 03DE
        gbc.setState(0xd0a6, 0xa674, 0x9b0, 0xae31, 0x302e, 0x9408, 0x1, 0x1);
        gbc.writeMem(0x9408, { 0x0 });
        gbc.writeMem(0xd0a6, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa674);
        EXPECT(gbc.pc(), 0xd0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9408), 0x31);
        EXPECT(gbc.readMem(0xd0a6), 0x71);
        // 71 03DF
        gbc.setState(0xebfb, 0x8832, 0xf0e0, 0xd063, 0x6279, 0xcfcf, 0x0, 0x0);
        gbc.writeMem(0xcfcf, { 0x0 });
        gbc.writeMem(0xebfb, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8832);
        EXPECT(gbc.pc(), 0xebfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcf), 0x63);
        EXPECT(gbc.readMem(0xebfb), 0x71);
        // 71 03E0
        gbc.setState(0xbf76, 0x17c4, 0x9120, 0x3bdc, 0x81e2, 0xa799, 0x1, 0x1);
        gbc.writeMem(0xa799, { 0x0 });
        gbc.writeMem(0xbf76, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x17c4);
        EXPECT(gbc.pc(), 0xbf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa799), 0xdc);
        EXPECT(gbc.readMem(0xbf76), 0x71);
        // 71 03E2
        gbc.setState(0x5d4e, 0x80c9, 0x4010, 0x8354, 0x1e0f, 0xc441, 0x1, 0x0);
        gbc.writeMem(0x5d4e, { 0x71 });
        gbc.writeMem(0xc441, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x5d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc441), 0x54);
        // 71 03E3
        gbc.setState(0x9f5f, 0xe629, 0x7d20, 0x11a0, 0x562a, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0x9f5f, { 0x71 });
        gbc.writeMem(0xc06a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe629);
        EXPECT(gbc.pc(), 0x9f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5f), 0x71);
        EXPECT(gbc.readMem(0xc06a), 0xa0);
        // 71 03E5
        gbc.setState(0x1518, 0x6373, 0xa030, 0x19b5, 0x1e62, 0xfcf0, 0x1, 0x1);
        gbc.writeMem(0x1518, { 0x71 });
        gbc.writeMem(0xfcf0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6373);
        EXPECT(gbc.pc(), 0x1519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcf0), 0xb5);
    }
}
#endif
