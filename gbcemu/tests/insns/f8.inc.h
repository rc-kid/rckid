    TEST(gbcemu, opcode_f8) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // F8 0000
        gbc.setState(0x688, 0xa77b, 0xb6b0, 0x3a2, 0xa13, 0x24ae, 0x1, 0x0);
        gbc.writeMem(0x688, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0x68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0001
        gbc.setState(0xa6ce, 0x8aa7, 0x58b0, 0xbefc, 0x555d, 0xa722, 0x0, 0x1);
        gbc.writeMem(0xa6ce, { 0xf8, 0x85 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8aa7, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa6ce));
        EXPECT(0x85, gbc.readMem(0xa6cf));
        // F8 0002
        gbc.setState(0x4212, 0xc1c7, 0xdd50, 0x4540, 0x8533, 0xe161, 0x1, 0x0);
        gbc.writeMem(0x4212, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0003
        gbc.setState(0xcad, 0x559d, 0xb250, 0x8044, 0xd1b7, 0x1f6c, 0x0, 0x0);
        gbc.writeMem(0xcad, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x559d, gbc.sp());
        EXPECT(0xcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0005
        gbc.setState(0x996b, 0x23f3, 0xd9b0, 0x9153, 0x795e, 0x5a5e, 0x1, 0x1);
        gbc.writeMem(0x996b, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x23f3, gbc.sp());
        EXPECT(0x996d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x996b));
        EXPECT(0xad, gbc.readMem(0x996c));
        // F8 0006
        gbc.setState(0xda90, 0xe99b, 0xe8c0, 0x9e23, 0x1e3a, 0xf84f, 0x1, 0x1);
        gbc.writeMem(0xda90, { 0xf8, 0xa6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe99b, gbc.sp());
        EXPECT(0xda92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda90));
        EXPECT(0xa6, gbc.readMem(0xda91));
        // F8 0007
        gbc.setState(0xaaaa, 0xd7a, 0xa580, 0xe61e, 0xaa9d, 0x3b49, 0x1, 0x0);
        gbc.writeMem(0xaaaa, { 0xf8, 0x45 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd7a, gbc.sp());
        EXPECT(0xaaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaaaa));
        EXPECT(0x45, gbc.readMem(0xaaab));
        // F8 0008
        gbc.setState(0xa34b, 0x312c, 0xf4f0, 0xcef4, 0xc853, 0x416d, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0xf8, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa34b));
        EXPECT(0x0, gbc.readMem(0xa34c));
        // F8 0009
        gbc.setState(0x30d, 0x5b12, 0x3de0, 0x70ce, 0x2bc4, 0xcdf5, 0x0, 0x1);
        gbc.writeMem(0x30d, { 0xf8, 0xb1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 000A
        gbc.setState(0xdd92, 0xf8d3, 0x16f0, 0x5c14, 0x2480, 0x9dc0, 0x1, 0x0);
        gbc.writeMem(0xdd92, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0xdd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdd92));
        EXPECT(0xf0, gbc.readMem(0xdd93));
        // F8 000B
        gbc.setState(0x7bc1, 0x8726, 0x1a40, 0x69a9, 0xbf32, 0xe132, 0x0, 0x0);
        gbc.writeMem(0x7bc1, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8726, gbc.sp());
        EXPECT(0x7bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 000C
        gbc.setState(0xb007, 0xf4bf, 0x4430, 0x4f71, 0x5170, 0x91bd, 0x0, 0x1);
        gbc.writeMem(0xb007, { 0xf8, 0x80 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf4bf, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb007));
        EXPECT(0x80, gbc.readMem(0xb008));
        // F8 000D
        gbc.setState(0x4876, 0x8bec, 0xb760, 0xd80d, 0xfc20, 0x3bf5, 0x1, 0x0);
        gbc.writeMem(0x4876, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8bec, gbc.sp());
        EXPECT(0x4878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 000E
        gbc.setState(0xd723, 0xd768, 0x7bf0, 0x8ba7, 0x52e, 0xe28b, 0x1, 0x1);
        gbc.writeMem(0xd723, { 0xf8, 0xd4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd768, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd723));
        EXPECT(0xd4, gbc.readMem(0xd724));
        // F8 000F
        gbc.setState(0x3767, 0x1053, 0x8220, 0xd973, 0x9c52, 0xad82, 0x1, 0x1);
        gbc.writeMem(0x3767, { 0xf8, 0xae });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1053, gbc.sp());
        EXPECT(0x3769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0010
        gbc.setState(0x86f, 0x59bf, 0xce70, 0x99a8, 0x88ac, 0x663b, 0x0, 0x1);
        gbc.writeMem(0x86f, { 0xf8, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0011
        gbc.setState(0x220c, 0x630f, 0x2600, 0xafc, 0xaf39, 0x84f0, 0x0, 0x0);
        gbc.writeMem(0x220c, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0x220e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0012
        gbc.setState(0xd87d, 0x695, 0xd7b0, 0x612f, 0xffa3, 0xfe9e, 0x1, 0x1);
        gbc.writeMem(0xd87d, { 0xf8, 0x28 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x695, gbc.sp());
        EXPECT(0xd87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd87d));
        EXPECT(0x28, gbc.readMem(0xd87e));
        // F8 0013
        gbc.setState(0x7039, 0xbdde, 0x8550, 0xbe26, 0xac57, 0xfa0d, 0x1, 0x1);
        gbc.writeMem(0x7039, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x703b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0014
        gbc.setState(0x8eac, 0xf05a, 0xe980, 0x99a7, 0xc250, 0x98a7, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf05a, gbc.sp());
        EXPECT(0x8eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8eac));
        EXPECT(0xbb, gbc.readMem(0x8ead));
        // F8 0015
        gbc.setState(0x143, 0xc267, 0xaf70, 0x418f, 0xd898, 0xbc60, 0x1, 0x0);
        gbc.writeMem(0x143, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc267, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0017
        gbc.setState(0xd592, 0x1598, 0xd70, 0x4e12, 0x136a, 0xb35b, 0x1, 0x1);
        gbc.writeMem(0xd592, { 0xf8, 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1598, gbc.sp());
        EXPECT(0xd594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd592));
        EXPECT(0xe3, gbc.readMem(0xd593));
        // F8 0018
        gbc.setState(0xef49, 0x39dc, 0xa40, 0x73c1, 0xc4d6, 0x6bc, 0x0, 0x0);
        gbc.writeMem(0xef49, { 0xf8, 0x5f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xef49));
        EXPECT(0x5f, gbc.readMem(0xef4a));
        // F8 0019
        gbc.setState(0x8ccb, 0x25a9, 0xbfa0, 0xd66f, 0xb048, 0x6d1d, 0x1, 0x1);
        gbc.writeMem(0x8ccb, { 0xf8, 0x6f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x25a9, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8ccb));
        EXPECT(0x6f, gbc.readMem(0x8ccc));
        // F8 001A
        gbc.setState(0xad70, 0xf55f, 0x4760, 0xede8, 0xde01, 0xae92, 0x0, 0x1);
        gbc.writeMem(0xad70, { 0xf8, 0xda });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0xad72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad70));
        EXPECT(0xda, gbc.readMem(0xad71));
        // F8 001B
        gbc.setState(0x67e5, 0x93b5, 0xc7c0, 0xe6c1, 0x89ec, 0xcfff, 0x1, 0x0);
        gbc.writeMem(0x67e5, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x93b5, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 001C
        gbc.setState(0x11f2, 0xd22a, 0x1840, 0xa204, 0xa1eb, 0x1926, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0xf8, 0xe });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd22a, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 001D
        gbc.setState(0x5be0, 0x7489, 0x4750, 0x6fd0, 0xc3b2, 0x8988, 0x1, 0x1);
        gbc.writeMem(0x5be0, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7489, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 001E
        gbc.setState(0xef7f, 0x948, 0xd570, 0x3f48, 0x1625, 0x8fc1, 0x0, 0x1);
        gbc.writeMem(0xef7f, { 0xf8, 0x8c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x948, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xef7f));
        EXPECT(0x8c, gbc.readMem(0xef80));
        // F8 001F
        gbc.setState(0x4bd8, 0x39f2, 0x6240, 0x6ca1, 0x2c7, 0x9f93, 0x1, 0x1);
        gbc.writeMem(0x4bd8, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x4bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0020
        gbc.setState(0x8ed6, 0x63f3, 0xfb70, 0xc5aa, 0x4ced, 0x5101, 0x0, 0x0);
        gbc.writeMem(0x8ed6, { 0xf8, 0xf5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8ed6));
        EXPECT(0xf5, gbc.readMem(0x8ed7));
        // F8 0021
        gbc.setState(0x2224, 0xc1e1, 0x9b10, 0x69bf, 0x4e51, 0x11e, 0x1, 0x0);
        gbc.writeMem(0x2224, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc1e1, gbc.sp());
        EXPECT(0x2226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0022
        gbc.setState(0xe4e4, 0x8348, 0x84e0, 0x9434, 0xc176, 0x12de, 0x1, 0x0);
        gbc.writeMem(0xe4e4, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8348, gbc.sp());
        EXPECT(0xe4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe4e4));
        EXPECT(0xad, gbc.readMem(0xe4e5));
        // F8 0023
        gbc.setState(0x963b, 0xc6ef, 0x5740, 0x2f66, 0x6694, 0xa04, 0x0, 0x1);
        gbc.writeMem(0x963b, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc6ef, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x963b));
        EXPECT(0x30, gbc.readMem(0x963c));
        // F8 0025
        gbc.setState(0xd787, 0xdcf9, 0xefe0, 0xf29b, 0x315c, 0xcbaa, 0x0, 0x1);
        gbc.writeMem(0xd787, { 0xf8, 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdcf9, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd787));
        EXPECT(0x5b, gbc.readMem(0xd788));
        // F8 0026
        gbc.setState(0x8db0, 0x3bcd, 0x46a0, 0x34fc, 0x8235, 0xed27, 0x1, 0x0);
        gbc.writeMem(0x8db0, { 0xf8, 0xde });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3bcd, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8db0));
        EXPECT(0xde, gbc.readMem(0x8db1));
        // F8 0027
        gbc.setState(0x769b, 0x8478, 0xd060, 0x419e, 0x8949, 0x8b59, 0x0, 0x0);
        gbc.writeMem(0x769b, { 0xf8, 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8478, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0028
        gbc.setState(0x1543, 0x532d, 0x46f0, 0xd811, 0xabb0, 0xddaf, 0x1, 0x0);
        gbc.writeMem(0x1543, { 0xf8, 0x78 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x532d, gbc.sp());
        EXPECT(0x1545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0029
        gbc.setState(0x8978, 0xfefb, 0x9710, 0x5c16, 0xd27e, 0x8991, 0x0, 0x0);
        gbc.writeMem(0x8978, { 0xf8, 0x8e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x897a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8978));
        EXPECT(0x8e, gbc.readMem(0x8979));
        // F8 002A
        gbc.setState(0x801a, 0x8300, 0x1140, 0xf950, 0x3d2e, 0xdc7c, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xf8, 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8300, gbc.sp());
        EXPECT(0x801c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x801a));
        EXPECT(0x5d, gbc.readMem(0x801b));
        // F8 002B
        gbc.setState(0xdf3, 0x7051, 0xaeb0, 0xa1a1, 0xe8fb, 0xb019, 0x1, 0x0);
        gbc.writeMem(0xdf3, { 0xf8, 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7051, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 002C
        gbc.setState(0x5f8b, 0x12cb, 0xebc0, 0x39d2, 0xe8be, 0xa44d, 0x0, 0x0);
        gbc.writeMem(0x5f8b, { 0xf8, 0x2e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x12cb, gbc.sp());
        EXPECT(0x5f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 002D
        gbc.setState(0x4526, 0xf97b, 0xbcd0, 0x36a2, 0x37a, 0x89b, 0x0, 0x0);
        gbc.writeMem(0x4526, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 002E
        gbc.setState(0xbd60, 0x64d6, 0xb00, 0x69ff, 0x576b, 0xd9ec, 0x0, 0x0);
        gbc.writeMem(0xbd60, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x64d6, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbd60));
        EXPECT(0xef, gbc.readMem(0xbd61));
        // F8 002F
        gbc.setState(0x4511, 0xd0d7, 0x5130, 0xdf9f, 0xe13a, 0x989a, 0x1, 0x1);
        gbc.writeMem(0x4511, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd0d7, gbc.sp());
        EXPECT(0x4513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0031
        gbc.setState(0x31b5, 0xcad7, 0xd060, 0x97f4, 0x2ab, 0xeff8, 0x1, 0x1);
        gbc.writeMem(0x31b5, { 0xf8, 0x7e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcad7, gbc.sp());
        EXPECT(0x31b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0032
        gbc.setState(0x55e9, 0xaeec, 0x1e80, 0x671d, 0xdc03, 0x5e55, 0x1, 0x0);
        gbc.writeMem(0x55e9, { 0xf8, 0xfa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0033
        gbc.setState(0x213e, 0xfd68, 0xeb50, 0xdda9, 0x611a, 0xee30, 0x0, 0x0);
        gbc.writeMem(0x213e, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfd68, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0034
        gbc.setState(0x8644, 0x2b24, 0xdc60, 0xf555, 0xefae, 0x1d5b, 0x1, 0x0);
        gbc.writeMem(0x8644, { 0xf8, 0x45 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2b24, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8644));
        EXPECT(0x45, gbc.readMem(0x8645));
        // F8 0035
        gbc.setState(0xad2e, 0xefdc, 0x5960, 0xa186, 0xbae8, 0x5eff, 0x1, 0x1);
        gbc.writeMem(0xad2e, { 0xf8, 0x8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xefdc, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad2e));
        EXPECT(0x8, gbc.readMem(0xad2f));
        // F8 0036
        gbc.setState(0x2f17, 0x623e, 0x99f0, 0xdd33, 0xcb97, 0x6a35, 0x0, 0x0);
        gbc.writeMem(0x2f17, { 0xf8, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x623e, gbc.sp());
        EXPECT(0x2f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0037
        gbc.setState(0x405f, 0x7a53, 0x4e90, 0x31de, 0x5626, 0x72d4, 0x1, 0x0);
        gbc.writeMem(0x405f, { 0xf8, 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a53, gbc.sp());
        EXPECT(0x4061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0038
        gbc.setState(0xe74c, 0x9937, 0xd90, 0x89fc, 0xaaa4, 0x1bc7, 0x1, 0x0);
        gbc.writeMem(0xe74c, { 0xf8, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9937, gbc.sp());
        EXPECT(0xe74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe74c));
        EXPECT(0xe0, gbc.readMem(0xe74d));
        // F8 0039
        gbc.setState(0x125a, 0x866, 0x4fe0, 0x2baf, 0xd45e, 0xd95e, 0x0, 0x0);
        gbc.writeMem(0x125a, { 0xf8, 0xae });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 003A
        gbc.setState(0x25e9, 0xf4dc, 0x3e00, 0xa316, 0xc444, 0x4b82, 0x0, 0x1);
        gbc.writeMem(0x25e9, { 0xf8, 0x32 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 003B
        gbc.setState(0x47bb, 0x8137, 0x57e0, 0x7ada, 0x6d2b, 0xf377, 0x1, 0x0);
        gbc.writeMem(0x47bb, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8137, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 003C
        gbc.setState(0x24e, 0xd3bd, 0x9d90, 0x50d8, 0x94c0, 0x927, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0xf8, 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd3bd, gbc.sp());
        EXPECT(0x250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 003D
        gbc.setState(0x268a, 0x5c20, 0xb810, 0xf6b, 0x910b, 0xf9df, 0x0, 0x0);
        gbc.writeMem(0x268a, { 0xf8, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5c20, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 003E
        gbc.setState(0x108e, 0x46c3, 0x2d20, 0x982c, 0xea8a, 0xc589, 0x1, 0x0);
        gbc.writeMem(0x108e, { 0xf8, 0xcb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x46c3, gbc.sp());
        EXPECT(0x1090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 003F
        gbc.setState(0x285d, 0xd01b, 0x3b60, 0xb4fa, 0xed0f, 0xf389, 0x1, 0x0);
        gbc.writeMem(0x285d, { 0xf8, 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0x285f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0040
        gbc.setState(0x2da, 0xa7a5, 0x8590, 0xf5b0, 0x7296, 0xe2dc, 0x1, 0x1);
        gbc.writeMem(0x2da, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa7a5, gbc.sp());
        EXPECT(0x2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0041
        gbc.setState(0xca18, 0x5968, 0x5fa0, 0xf504, 0x6a8f, 0xb831, 0x0, 0x0);
        gbc.writeMem(0xca18, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0xca1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xca18));
        EXPECT(0xf8, gbc.readMem(0xca19));
        // F8 0042
        gbc.setState(0x3b25, 0x1c61, 0x9e20, 0xacfa, 0x99d0, 0x9471, 0x1, 0x0);
        gbc.writeMem(0x3b25, { 0xf8, 0x93 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x3b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0043
        gbc.setState(0x73bb, 0x6a7d, 0xd750, 0x2448, 0xe796, 0x1e0a, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xf8, 0x76 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0044
        gbc.setState(0xa762, 0x347d, 0xbf10, 0x7f72, 0x845a, 0x57a4, 0x1, 0x0);
        gbc.writeMem(0xa762, { 0xf8, 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x347d, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa762));
        EXPECT(0x1d, gbc.readMem(0xa763));
        // F8 0045
        gbc.setState(0xbeb6, 0xff, 0x5ce0, 0xb090, 0xe942, 0xfa3a, 0x0, 0x1);
        gbc.writeMem(0xbeb6, { 0xf8, 0xd5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbeb6));
        EXPECT(0xd5, gbc.readMem(0xbeb7));
        // F8 0046
        gbc.setState(0x8555, 0x9363, 0xfb30, 0x3b6a, 0x2d4e, 0xfc88, 0x1, 0x1);
        gbc.writeMem(0x8555, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9363, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8555));
        EXPECT(0x22, gbc.readMem(0x8556));
        // F8 0047
        gbc.setState(0x21e3, 0x432, 0x9240, 0x2be8, 0xc76a, 0xba5d, 0x0, 0x0);
        gbc.writeMem(0x21e3, { 0xf8, 0x7f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x432, gbc.sp());
        EXPECT(0x21e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0048
        gbc.setState(0x6ea7, 0x4693, 0x5290, 0xc805, 0xc32e, 0x84b7, 0x0, 0x0);
        gbc.writeMem(0x6ea7, { 0xf8, 0xb1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4693, gbc.sp());
        EXPECT(0x6ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0049
        gbc.setState(0x3529, 0x2ac1, 0x18e0, 0x8d69, 0x38e, 0xdaeb, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xf8, 0x72 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2ac1, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 004A
        gbc.setState(0x24ed, 0x36f9, 0x7620, 0xd00d, 0xa1e2, 0xa90f, 0x1, 0x1);
        gbc.writeMem(0x24ed, { 0xf8, 0xb1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 004B
        gbc.setState(0xe04e, 0x6c58, 0xeef0, 0x3828, 0xc0dd, 0xa6a, 0x1, 0x0);
        gbc.writeMem(0xe04e, { 0xf8, 0x3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0xe050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe04e));
        EXPECT(0x3, gbc.readMem(0xe04f));
        // F8 004C
        gbc.setState(0x8054, 0xaa54, 0x45f0, 0x3c8a, 0x3, 0xa94d, 0x1, 0x1);
        gbc.writeMem(0x8054, { 0xf8, 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8054));
        EXPECT(0x45, gbc.readMem(0x8055));
        // F8 004D
        gbc.setState(0xda68, 0x9b07, 0xbf0, 0x3941, 0x5a48, 0x5d84, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0xf8, 0x71 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0xda6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda68));
        EXPECT(0x71, gbc.readMem(0xda69));
        // F8 004E
        gbc.setState(0x2e20, 0x7936, 0x17e0, 0xb7fe, 0x1f8f, 0x798c, 0x0, 0x0);
        gbc.writeMem(0x2e20, { 0xf8, 0x74 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7936, gbc.sp());
        EXPECT(0x2e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 004F
        gbc.setState(0x6bb7, 0x1fe, 0x9250, 0xae7d, 0x223, 0x9757, 0x0, 0x0);
        gbc.writeMem(0x6bb7, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1fe, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0050
        gbc.setState(0xd62e, 0xab36, 0xc2d0, 0x1503, 0x3aa1, 0xff60, 0x0, 0x0);
        gbc.writeMem(0xd62e, { 0xf8, 0x67 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd62e));
        EXPECT(0x67, gbc.readMem(0xd62f));
        // F8 0051
        gbc.setState(0x4f7a, 0xf96, 0x5310, 0x922a, 0x7c8d, 0x687c, 0x1, 0x0);
        gbc.writeMem(0x4f7a, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf96, gbc.sp());
        EXPECT(0x4f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0052
        gbc.setState(0xd7fc, 0xa501, 0x81c0, 0x3e57, 0xb072, 0x404b, 0x1, 0x1);
        gbc.writeMem(0xd7fc, { 0xf8, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa501, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd7fc));
        EXPECT(0xfc, gbc.readMem(0xd7fd));
        // F8 0053
        gbc.setState(0x7cf4, 0xec47, 0x4e00, 0xf0a2, 0x89b5, 0x1ae3, 0x0, 0x1);
        gbc.writeMem(0x7cf4, { 0xf8, 0xa3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec47, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0054
        gbc.setState(0x9114, 0x69fb, 0x7ac0, 0x8042, 0xfd28, 0x1bd6, 0x0, 0x1);
        gbc.writeMem(0x9114, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9114));
        EXPECT(0xe5, gbc.readMem(0x9115));
        // F8 0055
        gbc.setState(0x6275, 0xdd5d, 0xaf10, 0x9171, 0x52b6, 0x5ac6, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xf8, 0x55 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd5d, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0056
        gbc.setState(0xc2ac, 0x26d, 0x6920, 0xc7ed, 0xa7b7, 0x4d51, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x26d, gbc.sp());
        EXPECT(0xc2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc2ac));
        EXPECT(0x3b, gbc.readMem(0xc2ad));
        // F8 0057
        gbc.setState(0xc93d, 0xb40d, 0x8f70, 0x9038, 0x30ce, 0x97fc, 0x1, 0x0);
        gbc.writeMem(0xc93d, { 0xf8, 0xa3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc93d));
        EXPECT(0xa3, gbc.readMem(0xc93e));
        // F8 0059
        gbc.setState(0x37e7, 0xca52, 0xdd50, 0x208c, 0xe88, 0x7e96, 0x0, 0x1);
        gbc.writeMem(0x37e7, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xca52, gbc.sp());
        EXPECT(0x37e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 005A
        gbc.setState(0xa28a, 0xc220, 0x4300, 0xaa5a, 0x2be5, 0xfe0, 0x0, 0x1);
        gbc.writeMem(0xa28a, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xa28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa28a));
        EXPECT(0x3b, gbc.readMem(0xa28b));
        // F8 005B
        gbc.setState(0xc620, 0x65b4, 0xdcf0, 0xfd8e, 0xd450, 0xd90, 0x0, 0x0);
        gbc.writeMem(0xc620, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x65b4, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc620));
        EXPECT(0x65, gbc.readMem(0xc621));
        // F8 005C
        gbc.setState(0x2d5c, 0xb9c4, 0xaa40, 0xc539, 0x1ba9, 0xa081, 0x1, 0x0);
        gbc.writeMem(0x2d5c, { 0xf8, 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb9c4, gbc.sp());
        EXPECT(0x2d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 005D
        gbc.setState(0x56e, 0xf6fe, 0x4d20, 0x62ba, 0x9518, 0xbad0, 0x0, 0x0);
        gbc.writeMem(0x56e, { 0xf8, 0x76 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 005E
        gbc.setState(0x3fc5, 0xe6c9, 0xf0d0, 0x8c5f, 0x48db, 0x4cd4, 0x0, 0x0);
        gbc.writeMem(0x3fc5, { 0xf8, 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0x3fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 005F
        gbc.setState(0x60a0, 0xde9f, 0x46e0, 0x8a3f, 0x603f, 0x3083, 0x1, 0x1);
        gbc.writeMem(0x60a0, { 0xf8, 0x28 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xde9f, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0060
        gbc.setState(0x7a2b, 0x90c5, 0xce50, 0x2a9b, 0xfc10, 0x7ac1, 0x0, 0x1);
        gbc.writeMem(0x7a2b, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x90c5, gbc.sp());
        EXPECT(0x7a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0061
        gbc.setState(0x85eb, 0x6595, 0xa80, 0x2c6a, 0xc150, 0xbb93, 0x1, 0x1);
        gbc.writeMem(0x85eb, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6595, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x85eb));
        EXPECT(0xf1, gbc.readMem(0x85ec));
        // F8 0062
        gbc.setState(0xa0dd, 0x981f, 0x150, 0xd48a, 0x563d, 0xd8ac, 0x1, 0x1);
        gbc.writeMem(0xa0dd, { 0xf8, 0x1b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x981f, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa0dd));
        EXPECT(0x1b, gbc.readMem(0xa0de));
        // F8 0063
        gbc.setState(0x334f, 0x410f, 0xfa10, 0x1a23, 0xe4ec, 0xc59d, 0x1, 0x0);
        gbc.writeMem(0x334f, { 0xf8, 0x5b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x410f, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0064
        gbc.setState(0x4259, 0x5cfc, 0xd1a0, 0xc937, 0xf89e, 0xaeed, 0x1, 0x1);
        gbc.writeMem(0x4259, { 0xf8, 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0x425b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0065
        gbc.setState(0x4df, 0x80e5, 0x9060, 0x7d2, 0xfa2e, 0x6b14, 0x1, 0x1);
        gbc.writeMem(0x4df, { 0xf8, 0xc7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x80e5, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0066
        gbc.setState(0x639e, 0x330, 0x81a0, 0xc084, 0xa019, 0xc5aa, 0x1, 0x0);
        gbc.writeMem(0x639e, { 0xf8, 0x71 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0x63a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0067
        gbc.setState(0x2a4e, 0xd408, 0x7d60, 0xe893, 0xcc19, 0x74b6, 0x0, 0x0);
        gbc.writeMem(0x2a4e, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd408, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0068
        gbc.setState(0x81f3, 0x11b7, 0x6960, 0xcb9d, 0x140d, 0xcbf0, 0x1, 0x0);
        gbc.writeMem(0x81f3, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x11b7, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x81f3));
        EXPECT(0xf8, gbc.readMem(0x81f4));
        // F8 0069
        gbc.setState(0xe929, 0xd4b0, 0x7980, 0xda57, 0xd572, 0x7478, 0x0, 0x0);
        gbc.writeMem(0xe929, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0xe92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe929));
        EXPECT(0x65, gbc.readMem(0xe92a));
        // F8 006A
        gbc.setState(0x1ebe, 0x596f, 0xb710, 0x62d9, 0x5454, 0x140f, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x596f, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 006C
        gbc.setState(0x49c6, 0x57a, 0x39b0, 0x7968, 0xa42f, 0xe419, 0x0, 0x1);
        gbc.writeMem(0x49c6, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x57a, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 006D
        gbc.setState(0xd5a3, 0x58f4, 0x5910, 0x2ff9, 0xa18f, 0x1ff0, 0x1, 0x1);
        gbc.writeMem(0xd5a3, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0xd5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd5a3));
        EXPECT(0x41, gbc.readMem(0xd5a4));
        // F8 006E
        gbc.setState(0x21e7, 0x8d02, 0x1d70, 0xdc0c, 0xa3e0, 0x5898, 0x1, 0x1);
        gbc.writeMem(0x21e7, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8d02, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 006F
        gbc.setState(0x2472, 0xff3b, 0x8040, 0xcc41, 0x7693, 0xd01a, 0x1, 0x1);
        gbc.writeMem(0x2472, { 0xf8, 0x78 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xff3b, gbc.sp());
        EXPECT(0x2474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0070
        gbc.setState(0xed14, 0xa2af, 0x9900, 0xd2d5, 0x1d7a, 0xb563, 0x1, 0x0);
        gbc.writeMem(0xed14, { 0xf8, 0x96 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xed14));
        EXPECT(0x96, gbc.readMem(0xed15));
        // F8 0071
        gbc.setState(0x96af, 0x720e, 0xcf60, 0xefef, 0xb647, 0x577a, 0x1, 0x0);
        gbc.writeMem(0x96af, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0x96b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x96af));
        EXPECT(0x2, gbc.readMem(0x96b0));
        // F8 0073
        gbc.setState(0xf9d, 0xcc4f, 0xab50, 0x2b4b, 0xbe19, 0xb22c, 0x0, 0x1);
        gbc.writeMem(0xf9d, { 0xf8, 0xbe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0074
        gbc.setState(0xbfca, 0x9a98, 0x54f0, 0x7405, 0x413a, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0xbfca, { 0xf8, 0x14 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbfca));
        EXPECT(0x14, gbc.readMem(0xbfcb));
        // F8 0075
        gbc.setState(0xa7fa, 0xdcd9, 0x7db0, 0x232a, 0xa67, 0x9967, 0x1, 0x0);
        gbc.writeMem(0xa7fa, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0xa7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7fa));
        EXPECT(0x35, gbc.readMem(0xa7fb));
        // F8 0076
        gbc.setState(0x13, 0x5ab0, 0x3d20, 0x6f56, 0x18e2, 0xc92a, 0x0, 0x1);
        gbc.writeMem(0x13, { 0xf8, 0xb4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5ab0, gbc.sp());
        EXPECT(0x15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0078
        gbc.setState(0xa2b2, 0x1f54, 0x4c0, 0xc6ce, 0xac94, 0xafc1, 0x1, 0x0);
        gbc.writeMem(0xa2b2, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1f54, gbc.sp());
        EXPECT(0xa2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa2b2));
        EXPECT(0xbb, gbc.readMem(0xa2b3));
        // F8 0079
        gbc.setState(0x4d34, 0xa622, 0xe9b0, 0x56ba, 0x1333, 0x840c, 0x0, 0x0);
        gbc.writeMem(0x4d34, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0x4d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 007A
        gbc.setState(0x7d36, 0x218f, 0x6e60, 0x22a6, 0x8460, 0x7558, 0x1, 0x1);
        gbc.writeMem(0x7d36, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 007B
        gbc.setState(0x92e9, 0xa297, 0x8bc0, 0x8766, 0x6aa7, 0xc033, 0x1, 0x0);
        gbc.writeMem(0x92e9, { 0xf8, 0xd4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0x92eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x92e9));
        EXPECT(0xd4, gbc.readMem(0x92ea));
        // F8 007C
        gbc.setState(0x36f1, 0x7a3, 0xb70, 0x1476, 0xa9fd, 0x8a3f, 0x1, 0x0);
        gbc.writeMem(0x36f1, { 0xf8, 0xf6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7a3, gbc.sp());
        EXPECT(0x36f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 007D
        gbc.setState(0x983b, 0x105f, 0xa320, 0x19a, 0x179a, 0xbc3f, 0x1, 0x0);
        gbc.writeMem(0x983b, { 0xf8, 0xd7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x105f, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x983b));
        EXPECT(0xd7, gbc.readMem(0x983c));
        // F8 007E
        gbc.setState(0xb052, 0xe5cc, 0x3490, 0x2b70, 0x597c, 0xae9, 0x0, 0x1);
        gbc.writeMem(0xb052, { 0xf8, 0x3d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0xb054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb052));
        EXPECT(0x3d, gbc.readMem(0xb053));
        // F8 007F
        gbc.setState(0x9b4d, 0x2e1, 0x7180, 0x3c10, 0xc43b, 0x86a9, 0x1, 0x0);
        gbc.writeMem(0x9b4d, { 0xf8, 0xd7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e1, gbc.sp());
        EXPECT(0x9b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9b4d));
        EXPECT(0xd7, gbc.readMem(0x9b4e));
        // F8 0080
        gbc.setState(0x7548, 0x5ea4, 0x2cb0, 0x640c, 0x67ce, 0x208c, 0x0, 0x1);
        gbc.writeMem(0x7548, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0081
        gbc.setState(0x12fa, 0x206f, 0x4b80, 0x2ba1, 0xd01f, 0x1046, 0x0, 0x1);
        gbc.writeMem(0x12fa, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x206f, gbc.sp());
        EXPECT(0x12fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0082
        gbc.setState(0xd6b1, 0xc88b, 0xa970, 0x9e00, 0xef82, 0x8cda, 0x1, 0x1);
        gbc.writeMem(0xd6b1, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0xd6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd6b1));
        EXPECT(0x9a, gbc.readMem(0xd6b2));
        // F8 0083
        gbc.setState(0x2d7e, 0x4e80, 0x690, 0xb473, 0x6c55, 0xdb73, 0x1, 0x1);
        gbc.writeMem(0x2d7e, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0x2d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0084
        gbc.setState(0x48cf, 0xebed, 0xf8e0, 0xa241, 0xeebc, 0x767d, 0x0, 0x0);
        gbc.writeMem(0x48cf, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0085
        gbc.setState(0x3af1, 0xf04, 0x5810, 0xd950, 0xa791, 0x7d5d, 0x0, 0x1);
        gbc.writeMem(0x3af1, { 0xf8, 0x11 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf04, gbc.sp());
        EXPECT(0x3af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0086
        gbc.setState(0xe9bd, 0xb78c, 0xdd50, 0xa89b, 0xc326, 0x9ae9, 0x1, 0x0);
        gbc.writeMem(0xe9bd, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb78c, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe9bd));
        EXPECT(0x3f, gbc.readMem(0xe9be));
        // F8 0087
        gbc.setState(0xf3b, 0xcc3c, 0x1390, 0xefb2, 0xe993, 0xec95, 0x1, 0x0);
        gbc.writeMem(0xf3b, { 0xf8, 0xeb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0xf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0088
        gbc.setState(0x74cf, 0x4b9e, 0xcc60, 0x6169, 0x97a1, 0xaf99, 0x1, 0x0);
        gbc.writeMem(0x74cf, { 0xf8, 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4b9e, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0089
        gbc.setState(0x39af, 0x83ef, 0x49d0, 0xca1e, 0xa550, 0xc6a1, 0x1, 0x0);
        gbc.writeMem(0x39af, { 0xf8, 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 008B
        gbc.setState(0x65c, 0xc61, 0x20a0, 0x795, 0xc2c4, 0x84aa, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0xf8, 0x1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc61, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 008C
        gbc.setState(0x12b3, 0xfce1, 0xe1c0, 0xfbe0, 0xc54a, 0xfa56, 0x1, 0x0);
        gbc.writeMem(0x12b3, { 0xf8, 0xdd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfce1, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 008D
        gbc.setState(0xc281, 0xf1ab, 0x1d00, 0xab97, 0x6575, 0x13d1, 0x0, 0x0);
        gbc.writeMem(0xc281, { 0xf8, 0x4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc281));
        EXPECT(0x4, gbc.readMem(0xc282));
        // F8 008E
        gbc.setState(0x91e2, 0xe286, 0xff60, 0xd06e, 0xcf86, 0x1d00, 0x1, 0x1);
        gbc.writeMem(0x91e2, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe286, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x91e2));
        EXPECT(0x35, gbc.readMem(0x91e3));
        // F8 008F
        gbc.setState(0x870, 0xe6ae, 0x9360, 0xa564, 0x6156, 0x16f8, 0x1, 0x0);
        gbc.writeMem(0x870, { 0xf8, 0xf4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0x872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0090
        gbc.setState(0xc440, 0x2b55, 0xf6b0, 0xd67b, 0xbde4, 0xc228, 0x0, 0x0);
        gbc.writeMem(0xc440, { 0xf8, 0xe8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0xc442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc440));
        EXPECT(0xe8, gbc.readMem(0xc441));
        // F8 0091
        gbc.setState(0xabcd, 0x7094, 0xf380, 0xeb1b, 0xe44f, 0xdf56, 0x1, 0x0);
        gbc.writeMem(0xabcd, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7094, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xabcd));
        EXPECT(0x53, gbc.readMem(0xabce));
        // F8 0092
        gbc.setState(0x150b, 0x40b4, 0x65c0, 0x968d, 0xe8dd, 0xde87, 0x0, 0x0);
        gbc.writeMem(0x150b, { 0xf8, 0x80 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x40b4, gbc.sp());
        EXPECT(0x150d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0093
        gbc.setState(0xd06d, 0xda37, 0xfdc0, 0xff25, 0x4500, 0xda30, 0x1, 0x0);
        gbc.writeMem(0xd06d, { 0xf8, 0x46 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd06d));
        EXPECT(0x46, gbc.readMem(0xd06e));
        // F8 0095
        gbc.setState(0xc009, 0x5dcb, 0x6b0, 0x5f4f, 0x2ceb, 0x1f34, 0x1, 0x1);
        gbc.writeMem(0xc009, { 0xf8, 0x9e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc009));
        EXPECT(0x9e, gbc.readMem(0xc00a));
        // F8 0096
        gbc.setState(0x2a9a, 0xecbd, 0xd6a0, 0x8f96, 0x1e50, 0xcdc2, 0x0, 0x1);
        gbc.writeMem(0x2a9a, { 0xf8, 0x2a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xecbd, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0097
        gbc.setState(0xd3fa, 0xf736, 0xb5b0, 0x2533, 0xf590, 0xf611, 0x1, 0x0);
        gbc.writeMem(0xd3fa, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf736, gbc.sp());
        EXPECT(0xd3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd3fa));
        EXPECT(0xa1, gbc.readMem(0xd3fb));
        // F8 0098
        gbc.setState(0x9cbd, 0xccbb, 0xe970, 0xf467, 0xd8f2, 0xcb4a, 0x1, 0x1);
        gbc.writeMem(0x9cbd, { 0xf8, 0xa0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9cbd));
        EXPECT(0xa0, gbc.readMem(0x9cbe));
        // F8 0099
        gbc.setState(0x504a, 0xfafa, 0x5dc0, 0x4faf, 0x1939, 0xc900, 0x1, 0x0);
        gbc.writeMem(0x504a, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 009A
        gbc.setState(0x7b36, 0x4f73, 0xc8b0, 0x7742, 0xe8fa, 0xa7a2, 0x0, 0x0);
        gbc.writeMem(0x7b36, { 0xf8, 0x16 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 009B
        gbc.setState(0x9b37, 0x30e3, 0xdb70, 0x2688, 0x2b87, 0x752f, 0x0, 0x0);
        gbc.writeMem(0x9b37, { 0xf8, 0x58 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x30e3, gbc.sp());
        EXPECT(0x9b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9b37));
        EXPECT(0x58, gbc.readMem(0x9b38));
        // F8 009C
        gbc.setState(0xa5de, 0x105b, 0x4450, 0x4387, 0x7a8c, 0x812, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0xf8, 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x105b, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa5de));
        EXPECT(0xa7, gbc.readMem(0xa5df));
        // F8 009D
        gbc.setState(0x4ff, 0xa520, 0x58d0, 0x3427, 0x823, 0xa1, 0x1, 0x0);
        gbc.writeMem(0x4ff, { 0xf8, 0x2e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa520, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 009E
        gbc.setState(0x9379, 0x23ec, 0x7800, 0x6d5, 0x6964, 0x76b9, 0x0, 0x1);
        gbc.writeMem(0x9379, { 0xf8, 0xa5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x23ec, gbc.sp());
        EXPECT(0x937b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9379));
        EXPECT(0xa5, gbc.readMem(0x937a));
        // F8 009F
        gbc.setState(0x2b74, 0xe4d5, 0xf230, 0x3edd, 0xe875, 0x4c94, 0x1, 0x0);
        gbc.writeMem(0x2b74, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe4d5, gbc.sp());
        EXPECT(0x2b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00A0
        gbc.setState(0x5de8, 0x2fc7, 0x70c0, 0xe1ca, 0x69cd, 0xd395, 0x0, 0x1);
        gbc.writeMem(0x5de8, { 0xf8, 0xee });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2fc7, gbc.sp());
        EXPECT(0x5dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00A1
        gbc.setState(0x65d3, 0x696e, 0x8010, 0xe041, 0xf769, 0xb2d6, 0x1, 0x0);
        gbc.writeMem(0x65d3, { 0xf8, 0xa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x696e, gbc.sp());
        EXPECT(0x65d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00A2
        gbc.setState(0xce6d, 0xc607, 0x25b0, 0x56c2, 0x486b, 0x1e5a, 0x1, 0x0);
        gbc.writeMem(0xce6d, { 0xf8, 0x66 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc607, gbc.sp());
        EXPECT(0xce6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xce6d));
        EXPECT(0x66, gbc.readMem(0xce6e));
        // F8 00A3
        gbc.setState(0x882d, 0x69aa, 0xea50, 0xa7d5, 0x896f, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0x882d, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x69aa, gbc.sp());
        EXPECT(0x882f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x882d));
        EXPECT(0x41, gbc.readMem(0x882e));
        // F8 00A4
        gbc.setState(0x872b, 0x97ca, 0x43c0, 0xf970, 0xf26c, 0x7660, 0x1, 0x1);
        gbc.writeMem(0x872b, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x872b));
        EXPECT(0xec, gbc.readMem(0x872c));
        // F8 00A5
        gbc.setState(0xc638, 0x9c72, 0x2910, 0x7dbc, 0xba92, 0xe75f, 0x1, 0x1);
        gbc.writeMem(0xc638, { 0xf8, 0x25 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc638));
        EXPECT(0x25, gbc.readMem(0xc639));
        // F8 00A6
        gbc.setState(0x18f7, 0x662b, 0xa020, 0x8ac9, 0xa7c4, 0xfb4d, 0x1, 0x1);
        gbc.writeMem(0x18f7, { 0xf8, 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00A7
        gbc.setState(0xe1b5, 0xd1d5, 0x1c30, 0xb7a8, 0x8d50, 0x10c3, 0x0, 0x1);
        gbc.writeMem(0xe1b5, { 0xf8, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd1d5, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe1b5));
        EXPECT(0x9b, gbc.readMem(0xe1b6));
        // F8 00A8
        gbc.setState(0x90e4, 0xa56f, 0x4940, 0xd23a, 0x53a4, 0x4636, 0x1, 0x1);
        gbc.writeMem(0x90e4, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x90e4));
        EXPECT(0x22, gbc.readMem(0x90e5));
        // F8 00AA
        gbc.setState(0xcd7, 0xa2c3, 0x9d50, 0x1eda, 0x9fc6, 0x4ae4, 0x1, 0x1);
        gbc.writeMem(0xcd7, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00AB
        gbc.setState(0xd0f8, 0xb0a8, 0x8a10, 0x7f16, 0x6e10, 0xfa3f, 0x0, 0x1);
        gbc.writeMem(0xd0f8, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb0a8, gbc.sp());
        EXPECT(0xd0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd0f8));
        EXPECT(0x3b, gbc.readMem(0xd0f9));
        // F8 00AC
        gbc.setState(0x242e, 0xd6bd, 0x2760, 0x5cfe, 0x118d, 0x191b, 0x0, 0x1);
        gbc.writeMem(0x242e, { 0xf8, 0x68 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd6bd, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00AD
        gbc.setState(0x856f, 0xd723, 0xeb0, 0x1b8a, 0x870e, 0x5cad, 0x1, 0x1);
        gbc.writeMem(0x856f, { 0xf8, 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd723, gbc.sp());
        EXPECT(0x8571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x856f));
        EXPECT(0xac, gbc.readMem(0x8570));
        // F8 00AE
        gbc.setState(0x6721, 0xf4d4, 0xfec0, 0xe14c, 0x3827, 0xc666, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0xf8, 0xdf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0x6723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00AF
        gbc.setState(0x8d2f, 0xc9d2, 0xf8e0, 0xf2ed, 0xa466, 0x352c, 0x1, 0x1);
        gbc.writeMem(0x8d2f, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x8d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8d2f));
        EXPECT(0xb9, gbc.readMem(0x8d30));
        // F8 00B0
        gbc.setState(0x7009, 0x75e7, 0xa10, 0x6744, 0x583e, 0x8992, 0x0, 0x0);
        gbc.writeMem(0x7009, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00B1
        gbc.setState(0xcd12, 0x6f25, 0xc0b0, 0x5e8a, 0x6e16, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0xcd12, { 0xf8, 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6f25, gbc.sp());
        EXPECT(0xcd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcd12));
        EXPECT(0x7a, gbc.readMem(0xcd13));
        // F8 00B2
        gbc.setState(0xaf9, 0x7f25, 0xf2e0, 0xe9fb, 0x7fe2, 0x8c5a, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xf8, 0xdc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7f25, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00B3
        gbc.setState(0x200b, 0xd78d, 0xaf30, 0xc88c, 0xeaf, 0x3008, 0x0, 0x1);
        gbc.writeMem(0x200b, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd78d, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00B5
        gbc.setState(0x6469, 0x6d82, 0x89f0, 0xecf6, 0xcb59, 0x3f99, 0x0, 0x1);
        gbc.writeMem(0x6469, { 0xf8, 0x25 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6d82, gbc.sp());
        EXPECT(0x646b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00B6
        gbc.setState(0x9a00, 0xe6c, 0xe2b0, 0xb5da, 0x67d, 0x4e04, 0x1, 0x1);
        gbc.writeMem(0x9a00, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0x9a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9a00));
        EXPECT(0xf7, gbc.readMem(0x9a01));
        // F8 00B7
        gbc.setState(0x4ed4, 0x72f, 0x4c50, 0xca9a, 0xc8d7, 0x4ff3, 0x1, 0x1);
        gbc.writeMem(0x4ed4, { 0xf8, 0x87 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x72f, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00B8
        gbc.setState(0x6f14, 0xf14d, 0xb980, 0x3ea6, 0x5503, 0x781f, 0x1, 0x0);
        gbc.writeMem(0x6f14, { 0xf8, 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf14d, gbc.sp());
        EXPECT(0x6f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00B9
        gbc.setState(0x7b2b, 0x7989, 0x27a0, 0xc671, 0x704a, 0x1e66, 0x1, 0x0);
        gbc.writeMem(0x7b2b, { 0xf8, 0xde });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7989, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00BA
        gbc.setState(0x9596, 0xc287, 0x7fd0, 0xdcbe, 0x652c, 0x6408, 0x0, 0x1);
        gbc.writeMem(0x9596, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0x9598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9596));
        EXPECT(0x95, gbc.readMem(0x9597));
        // F8 00BB
        gbc.setState(0x21c9, 0xf39d, 0xc070, 0x577d, 0x281c, 0x6877, 0x1, 0x1);
        gbc.writeMem(0x21c9, { 0xf8, 0xdc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00BC
        gbc.setState(0x950c, 0xe367, 0x3500, 0x1b85, 0x34cd, 0xc081, 0x0, 0x0);
        gbc.writeMem(0x950c, { 0xf8, 0xd3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x950c));
        EXPECT(0xd3, gbc.readMem(0x950d));
        // F8 00BD
        gbc.setState(0xa2aa, 0x9fa1, 0x6200, 0xee9, 0x6788, 0xeb9f, 0x1, 0x1);
        gbc.writeMem(0xa2aa, { 0xf8, 0x2b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9fa1, gbc.sp());
        EXPECT(0xa2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa2aa));
        EXPECT(0x2b, gbc.readMem(0xa2ab));
        // F8 00BE
        gbc.setState(0x29f4, 0x28b3, 0xef60, 0xa8e8, 0xdddb, 0xfd51, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0xf8, 0xee });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28b3, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00C0
        gbc.setState(0xc6e, 0xea69, 0x9980, 0xca7f, 0x2234, 0xae0e, 0x1, 0x0);
        gbc.writeMem(0xc6e, { 0xf8, 0x68 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00C2
        gbc.setState(0xdde, 0x56f3, 0x1500, 0xa395, 0x6dfd, 0x5303, 0x1, 0x1);
        gbc.writeMem(0xdde, { 0xf8, 0x56 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x56f3, gbc.sp());
        EXPECT(0xde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00C4
        gbc.setState(0x2a21, 0xfe76, 0xb710, 0x31e0, 0x641f, 0xf4c4, 0x1, 0x1);
        gbc.writeMem(0x2a21, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0x2a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00C5
        gbc.setState(0x2626, 0xed63, 0x9ed0, 0xe658, 0x695, 0x507f, 0x0, 0x1);
        gbc.writeMem(0x2626, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xed63, gbc.sp());
        EXPECT(0x2628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00C6
        gbc.setState(0xa7ac, 0xdc77, 0xb510, 0xd93b, 0x6e3, 0x526, 0x0, 0x0);
        gbc.writeMem(0xa7ac, { 0xf8, 0x60 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdc77, gbc.sp());
        EXPECT(0xa7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7ac));
        EXPECT(0x60, gbc.readMem(0xa7ad));
        // F8 00C7
        gbc.setState(0x31db, 0xa3e3, 0xadd0, 0xcf3b, 0xa520, 0x289b, 0x0, 0x0);
        gbc.writeMem(0x31db, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00C8
        gbc.setState(0xa09f, 0xe2b3, 0x7b10, 0x3229, 0x1f0e, 0x61e3, 0x0, 0x1);
        gbc.writeMem(0xa09f, { 0xf8, 0xbc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe2b3, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa09f));
        EXPECT(0xbc, gbc.readMem(0xa0a0));
        // F8 00C9
        gbc.setState(0xccf7, 0x1ea, 0x30e0, 0x27cf, 0x7f65, 0xd6a0, 0x1, 0x0);
        gbc.writeMem(0xccf7, { 0xf8, 0x4a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1ea, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xccf7));
        EXPECT(0x4a, gbc.readMem(0xccf8));
        // F8 00CA
        gbc.setState(0xbd98, 0xf307, 0x46b0, 0x73b0, 0x1cf5, 0x9bd0, 0x1, 0x0);
        gbc.writeMem(0xbd98, { 0xf8, 0x9e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbd98));
        EXPECT(0x9e, gbc.readMem(0xbd99));
        // F8 00CB
        gbc.setState(0x550a, 0xdd64, 0x4220, 0x5dcb, 0x7024, 0x929d, 0x0, 0x1);
        gbc.writeMem(0x550a, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0x550c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00CC
        gbc.setState(0xa0b, 0xcbd9, 0x6690, 0xccbc, 0x2c15, 0xb629, 0x1, 0x1);
        gbc.writeMem(0xa0b, { 0xf8, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0xa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00CD
        gbc.setState(0x448f, 0x4556, 0x50e0, 0x34cf, 0x2115, 0x780a, 0x0, 0x0);
        gbc.writeMem(0x448f, { 0xf8, 0x32 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00CE
        gbc.setState(0x74a, 0x74c0, 0x7a80, 0x2730, 0x36e8, 0x742e, 0x1, 0x1);
        gbc.writeMem(0x74a, { 0xf8, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x74c0, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00CF
        gbc.setState(0x5389, 0x4b06, 0x3cb0, 0x4db4, 0x9f6d, 0x6fc1, 0x0, 0x1);
        gbc.writeMem(0x5389, { 0xf8, 0x27 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00D0
        gbc.setState(0x7b02, 0xadd9, 0xeae0, 0x8f1f, 0xfcd8, 0x8c8b, 0x0, 0x0);
        gbc.writeMem(0x7b02, { 0xf8, 0xa9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xadd9, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00D1
        gbc.setState(0xe3b7, 0x8403, 0x6000, 0x9619, 0x270, 0x459e, 0x1, 0x0);
        gbc.writeMem(0xe3b7, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe3b7));
        EXPECT(0x90, gbc.readMem(0xe3b8));
        // F8 00D2
        gbc.setState(0xde59, 0x2a5f, 0x1140, 0xbe11, 0x2640, 0x1e4e, 0x0, 0x0);
        gbc.writeMem(0xde59, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde59));
        EXPECT(0xc1, gbc.readMem(0xde5a));
        // F8 00D4
        gbc.setState(0x537c, 0xc842, 0x3dd0, 0x8556, 0x4998, 0x7260, 0x1, 0x0);
        gbc.writeMem(0x537c, { 0xf8, 0x21 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0x537e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00D5
        gbc.setState(0xee7e, 0x78a6, 0xa50, 0x962d, 0xb4c7, 0xc671, 0x1, 0x0);
        gbc.writeMem(0xee7e, { 0xf8, 0x15 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xee7e));
        EXPECT(0x15, gbc.readMem(0xee7f));
        // F8 00D7
        gbc.setState(0xd3b0, 0x30f7, 0xe7f0, 0x1f4b, 0x1808, 0xd94a, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x30f7, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd3b0));
        EXPECT(0x90, gbc.readMem(0xd3b1));
        // F8 00D8
        gbc.setState(0xc9a2, 0x1ef, 0x7b80, 0x183e, 0xab5, 0xf9dd, 0x0, 0x0);
        gbc.writeMem(0xc9a2, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1ef, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc9a2));
        EXPECT(0x35, gbc.readMem(0xc9a3));
        // F8 00D9
        gbc.setState(0x1af, 0xf28d, 0xce0, 0xf469, 0x831, 0xf174, 0x0, 0x0);
        gbc.writeMem(0x1af, { 0xf8, 0x5f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf28d, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00DA
        gbc.setState(0x6467, 0xa6e2, 0x9af0, 0x3208, 0x932c, 0x4c06, 0x0, 0x1);
        gbc.writeMem(0x6467, { 0xf8, 0xc6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa6e2, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00DB
        gbc.setState(0xdf8c, 0xbf46, 0xced0, 0x90fa, 0x6fcf, 0x37ca, 0x1, 0x1);
        gbc.writeMem(0xdf8c, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbf46, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdf8c));
        EXPECT(0x3f, gbc.readMem(0xdf8d));
        // F8 00DC
        gbc.setState(0x8a03, 0xc012, 0x44f0, 0x1f91, 0xfa0e, 0xe8aa, 0x1, 0x1);
        gbc.writeMem(0x8a03, { 0xf8, 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc012, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8a03));
        EXPECT(0x99, gbc.readMem(0x8a04));
        // F8 00DD
        gbc.setState(0x51a2, 0xb1f0, 0x2720, 0xde2e, 0xe46a, 0xc7d1, 0x1, 0x0);
        gbc.writeMem(0x51a2, { 0xf8, 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb1f0, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00DE
        gbc.setState(0xeb79, 0xb6d9, 0x930, 0x3e6e, 0xd95a, 0xc89a, 0x1, 0x1);
        gbc.writeMem(0xeb79, { 0xf8, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0xeb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb79));
        EXPECT(0x7, gbc.readMem(0xeb7a));
        // F8 00DF
        gbc.setState(0x4e50, 0x79f3, 0x82d0, 0x22cc, 0x378c, 0x5b92, 0x1, 0x0);
        gbc.writeMem(0x4e50, { 0xf8, 0x1e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x79f3, gbc.sp());
        EXPECT(0x4e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00E0
        gbc.setState(0x28af, 0xf2c6, 0x1e40, 0x4bc3, 0xeba0, 0x6b73, 0x1, 0x1);
        gbc.writeMem(0x28af, { 0xf8, 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf2c6, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00E1
        gbc.setState(0xd1be, 0x5182, 0x1090, 0x67cd, 0x65b2, 0x62a4, 0x0, 0x0);
        gbc.writeMem(0xd1be, { 0xf8, 0xfe });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0xd1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd1be));
        EXPECT(0xfe, gbc.readMem(0xd1bf));
        // F8 00E2
        gbc.setState(0xc6c3, 0x77e0, 0x8050, 0xebfd, 0xb7dd, 0xd2d3, 0x0, 0x1);
        gbc.writeMem(0xc6c3, { 0xf8, 0xcf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc6c3));
        EXPECT(0xcf, gbc.readMem(0xc6c4));
        // F8 00E4
        gbc.setState(0xc4b8, 0x5fc, 0x2320, 0x54b3, 0x2f5f, 0x576a, 0x1, 0x0);
        gbc.writeMem(0xc4b8, { 0xf8, 0x3a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5fc, gbc.sp());
        EXPECT(0xc4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc4b8));
        EXPECT(0x3a, gbc.readMem(0xc4b9));
        // F8 00E5
        gbc.setState(0x9a4, 0x386b, 0xa2d0, 0x4976, 0xd7a4, 0xc77, 0x1, 0x1);
        gbc.writeMem(0x9a4, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00E6
        gbc.setState(0xc616, 0x4807, 0x4c0, 0x97d3, 0x2681, 0x1e9e, 0x0, 0x1);
        gbc.writeMem(0xc616, { 0xf8, 0xdb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4807, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc616));
        EXPECT(0xdb, gbc.readMem(0xc617));
        // F8 00E7
        gbc.setState(0xd7e8, 0x6c4, 0xfae0, 0xf1e3, 0x1cc0, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0xd7e8, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6c4, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd7e8));
        EXPECT(0x8d, gbc.readMem(0xd7e9));
        // F8 00E8
        gbc.setState(0x3ceb, 0xe735, 0xe4e0, 0xb2f8, 0x7bbe, 0xcb1b, 0x1, 0x0);
        gbc.writeMem(0x3ceb, { 0xf8, 0x29 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe735, gbc.sp());
        EXPECT(0x3ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00E9
        gbc.setState(0x4a75, 0xdb83, 0x9530, 0x24b0, 0x4322, 0x9e4c, 0x0, 0x0);
        gbc.writeMem(0x4a75, { 0xf8, 0x67 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00EA
        gbc.setState(0x5f08, 0xe9b5, 0xf900, 0xe7f1, 0x901e, 0x87e, 0x0, 0x1);
        gbc.writeMem(0x5f08, { 0xf8, 0x27 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00EB
        gbc.setState(0x807d, 0x64f0, 0x4e70, 0xd8cf, 0xa9ee, 0x8f96, 0x1, 0x0);
        gbc.writeMem(0x807d, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x807d));
        EXPECT(0x31, gbc.readMem(0x807e));
        // F8 00EC
        gbc.setState(0x478f, 0xdbaf, 0x6f90, 0x5d1c, 0xf854, 0xf501, 0x1, 0x1);
        gbc.writeMem(0x478f, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdbaf, gbc.sp());
        EXPECT(0x4791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00ED
        gbc.setState(0xb659, 0x8c10, 0x93b0, 0x5f4d, 0xe4d0, 0xb7a9, 0x0, 0x1);
        gbc.writeMem(0xb659, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8c10, gbc.sp());
        EXPECT(0xb65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb659));
        EXPECT(0x6e, gbc.readMem(0xb65a));
        // F8 00EE
        gbc.setState(0xda45, 0x595, 0x7300, 0xdaf7, 0xe276, 0x92ca, 0x0, 0x1);
        gbc.writeMem(0xda45, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0xda47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda45));
        EXPECT(0xcd, gbc.readMem(0xda46));
        // F8 00EF
        gbc.setState(0xb1c, 0x7835, 0x5230, 0x3c4a, 0x5cd6, 0x7750, 0x0, 0x1);
        gbc.writeMem(0xb1c, { 0xf8, 0xdf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7835, gbc.sp());
        EXPECT(0xb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00F0
        gbc.setState(0xa914, 0x5b, 0x41e0, 0x29d9, 0xfa63, 0xf89b, 0x0, 0x1);
        gbc.writeMem(0xa914, { 0xf8, 0xc3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5b, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa914));
        EXPECT(0xc3, gbc.readMem(0xa915));
        // F8 00F1
        gbc.setState(0xb2f8, 0x2b, 0xce0, 0x8f70, 0xe7dc, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0xb2f8, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb2f8));
        EXPECT(0xf7, gbc.readMem(0xb2f9));
        // F8 00F2
        gbc.setState(0x766c, 0xe3fe, 0xac50, 0xa55a, 0x2324, 0x55f6, 0x0, 0x0);
        gbc.writeMem(0x766c, { 0xf8, 0xf4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00F3
        gbc.setState(0xe922, 0x23bf, 0x5aa0, 0x5bc, 0x8d0f, 0x2ebc, 0x1, 0x0);
        gbc.writeMem(0xe922, { 0xf8, 0xc7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0xe924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe922));
        EXPECT(0xc7, gbc.readMem(0xe923));
        // F8 00F4
        gbc.setState(0xb779, 0xa854, 0xcc60, 0xaecb, 0xd561, 0x6aa0, 0x0, 0x0);
        gbc.writeMem(0xb779, { 0xf8, 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0xb77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb779));
        EXPECT(0x15, gbc.readMem(0xb77a));
        // F8 00F5
        gbc.setState(0x2434, 0x8586, 0xfc70, 0xcf21, 0xf67d, 0x7409, 0x0, 0x1);
        gbc.writeMem(0x2434, { 0xf8, 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8586, gbc.sp());
        EXPECT(0x2436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00F6
        gbc.setState(0x3fce, 0x903b, 0x3980, 0xb5d3, 0x479f, 0xc6a6, 0x0, 0x1);
        gbc.writeMem(0x3fce, { 0xf8, 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x3fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00F7
        gbc.setState(0xeb6e, 0x78c9, 0x13a0, 0x553a, 0x306, 0x1a42, 0x0, 0x1);
        gbc.writeMem(0xeb6e, { 0xf8, 0x8b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb6e));
        EXPECT(0x8b, gbc.readMem(0xeb6f));
        // F8 00F8
        gbc.setState(0x5f1b, 0x914a, 0x1ca0, 0x30fd, 0xba05, 0x9d11, 0x0, 0x0);
        gbc.writeMem(0x5f1b, { 0xf8, 0xb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0x5f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00F9
        gbc.setState(0x2195, 0x7a76, 0x3400, 0x666a, 0xf046, 0xf6c8, 0x1, 0x0);
        gbc.writeMem(0x2195, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7a76, gbc.sp());
        EXPECT(0x2197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00FA
        gbc.setState(0x3b47, 0x9bfe, 0x5190, 0xb937, 0x4e90, 0x2bf1, 0x1, 0x0);
        gbc.writeMem(0x3b47, { 0xf8, 0xfe });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9bfe, gbc.sp());
        EXPECT(0x3b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 00FB
        gbc.setState(0x5215, 0x2014, 0xb0a0, 0xcd00, 0x3b6a, 0xce26, 0x0, 0x0);
        gbc.writeMem(0x5215, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0x5217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00FC
        gbc.setState(0x6da1, 0x306c, 0xc600, 0xfef4, 0x339b, 0xf8ca, 0x0, 0x1);
        gbc.writeMem(0x6da1, { 0xf8, 0x54 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x306c, gbc.sp());
        EXPECT(0x6da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00FD
        gbc.setState(0xa810, 0x9242, 0xcc40, 0x1bf5, 0xb2a2, 0x400b, 0x0, 0x0);
        gbc.writeMem(0xa810, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9242, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa810));
        EXPECT(0xcd, gbc.readMem(0xa811));
        // F8 00FE
        gbc.setState(0x1130, 0xf320, 0x5420, 0x168a, 0x10af, 0x3c27, 0x1, 0x0);
        gbc.writeMem(0x1130, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0x1132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 00FF
        gbc.setState(0x96cd, 0x13ce, 0xf3e0, 0x8d0a, 0x4639, 0x6477, 0x0, 0x0);
        gbc.writeMem(0x96cd, { 0xf8, 0x27 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0x96cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x96cd));
        EXPECT(0x27, gbc.readMem(0x96ce));
        // F8 0100
        gbc.setState(0xe284, 0x4c7f, 0x9490, 0x924b, 0x17f8, 0x27e, 0x0, 0x0);
        gbc.writeMem(0xe284, { 0xf8, 0x8b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0xe286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe284));
        EXPECT(0x8b, gbc.readMem(0xe285));
        // F8 0101
        gbc.setState(0x5045, 0xebfb, 0x1060, 0xfaa7, 0xd4f2, 0xc007, 0x0, 0x1);
        gbc.writeMem(0x5045, { 0xf8, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0102
        gbc.setState(0x50f2, 0x7543, 0x7dd0, 0xf233, 0x29ad, 0xc9c7, 0x1, 0x0);
        gbc.writeMem(0x50f2, { 0xf8, 0xda });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0x50f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0103
        gbc.setState(0xa376, 0xa104, 0xecf0, 0x5b06, 0x68f3, 0xee3b, 0x0, 0x0);
        gbc.writeMem(0xa376, { 0xf8, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa104, gbc.sp());
        EXPECT(0xa378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa376));
        EXPECT(0xba, gbc.readMem(0xa377));
        // F8 0104
        gbc.setState(0x25e8, 0xc68c, 0x8ef0, 0x3577, 0xc016, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xf8, 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc68c, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0105
        gbc.setState(0x4c2e, 0xb0a3, 0x9e40, 0xe6a5, 0x1798, 0x46e9, 0x1, 0x1);
        gbc.writeMem(0x4c2e, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x4c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0106
        gbc.setState(0xcf8b, 0x80f8, 0xab10, 0xc981, 0x8187, 0x933, 0x0, 0x0);
        gbc.writeMem(0xcf8b, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcf8b));
        EXPECT(0x95, gbc.readMem(0xcf8c));
        // F8 0107
        gbc.setState(0x567e, 0x80e1, 0x5fb0, 0xdbe8, 0xe713, 0xa193, 0x0, 0x1);
        gbc.writeMem(0x567e, { 0xf8, 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x80e1, gbc.sp());
        EXPECT(0x5680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0108
        gbc.setState(0x12a6, 0xd2e8, 0xdad0, 0xc7f, 0x968, 0xd3b5, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0109
        gbc.setState(0x10a2, 0xa977, 0x72f0, 0xea66, 0xe2ca, 0xe747, 0x1, 0x1);
        gbc.writeMem(0x10a2, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 010A
        gbc.setState(0x4cbe, 0x1554, 0x8470, 0x351a, 0x7699, 0x756c, 0x1, 0x0);
        gbc.writeMem(0x4cbe, { 0xf8, 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1554, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 010B
        gbc.setState(0xafe8, 0x8ecd, 0x9d0, 0xa1d6, 0xdfec, 0x286e, 0x1, 0x0);
        gbc.writeMem(0xafe8, { 0xf8, 0xfe });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8ecd, gbc.sp());
        EXPECT(0xafea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xafe8));
        EXPECT(0xfe, gbc.readMem(0xafe9));
        // F8 010C
        gbc.setState(0x851f, 0x7286, 0xe160, 0xa17c, 0x4498, 0x2493, 0x0, 0x1);
        gbc.writeMem(0x851f, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7286, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x851f));
        EXPECT(0xec, gbc.readMem(0x8520));
        // F8 010D
        gbc.setState(0x8453, 0xb70d, 0xf8a0, 0x1b85, 0xb24f, 0x57bb, 0x1, 0x0);
        gbc.writeMem(0x8453, { 0xf8, 0x3e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8453));
        EXPECT(0x3e, gbc.readMem(0x8454));
        // F8 010E
        gbc.setState(0x21c0, 0x7a5, 0x4480, 0x4248, 0x22da, 0xd41c, 0x0, 0x1);
        gbc.writeMem(0x21c0, { 0xf8, 0x4f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7a5, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 010F
        gbc.setState(0xa03, 0xf2a0, 0x43d0, 0xeca8, 0x7a91, 0xfc1a, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0xf8, 0x75 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf2a0, gbc.sp());
        EXPECT(0xa05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0110
        gbc.setState(0x4b11, 0xd3b3, 0xafb0, 0x29b8, 0x98a4, 0x801e, 0x0, 0x1);
        gbc.writeMem(0x4b11, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0x4b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0112
        gbc.setState(0x60c9, 0xdfce, 0xf250, 0x681f, 0x296, 0x7bb0, 0x1, 0x0);
        gbc.writeMem(0x60c9, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdfce, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0113
        gbc.setState(0x857b, 0x8b57, 0x2d80, 0x7e2f, 0xaa, 0xce35, 0x0, 0x0);
        gbc.writeMem(0x857b, { 0xf8, 0xde });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x857d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x857b));
        EXPECT(0xde, gbc.readMem(0x857c));
        // F8 0114
        gbc.setState(0x5093, 0xfbd5, 0xf650, 0x3afc, 0x11a9, 0x1956, 0x1, 0x0);
        gbc.writeMem(0x5093, { 0xf8, 0x71 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfbd5, gbc.sp());
        EXPECT(0x5095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0115
        gbc.setState(0x457, 0x24f4, 0x8660, 0x834a, 0xca6, 0x3e45, 0x0, 0x1);
        gbc.writeMem(0x457, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x24f4, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0116
        gbc.setState(0x9ae, 0x50d7, 0x8170, 0x4c12, 0x8d10, 0x6e07, 0x0, 0x0);
        gbc.writeMem(0x9ae, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x50d7, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0118
        gbc.setState(0x93f6, 0xfd6, 0x7290, 0xdb9a, 0x72a0, 0xb92c, 0x0, 0x1);
        gbc.writeMem(0x93f6, { 0xf8, 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x93f6));
        EXPECT(0xac, gbc.readMem(0x93f7));
        // F8 0119
        gbc.setState(0x1f4e, 0x85c6, 0x9cf0, 0xaa65, 0xfccf, 0xe0bf, 0x0, 0x0);
        gbc.writeMem(0x1f4e, { 0xf8, 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 011A
        gbc.setState(0xb727, 0xc41f, 0xf0d0, 0x15e0, 0x40fe, 0x8772, 0x0, 0x0);
        gbc.writeMem(0xb727, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc41f, gbc.sp());
        EXPECT(0xb729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb727));
        EXPECT(0xe6, gbc.readMem(0xb728));
        // F8 011B
        gbc.setState(0x4c2e, 0xda73, 0x6100, 0x24b0, 0x1b27, 0x9b78, 0x0, 0x0);
        gbc.writeMem(0x4c2e, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0x4c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 011C
        gbc.setState(0xd448, 0xc8, 0x3080, 0x459a, 0x4dcf, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0xd448, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xd44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd448));
        EXPECT(0xbb, gbc.readMem(0xd449));
        // F8 011D
        gbc.setState(0x1051, 0x8512, 0x6be0, 0x34b1, 0x46c8, 0x2dca, 0x0, 0x0);
        gbc.writeMem(0x1051, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0x1053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 011E
        gbc.setState(0x8674, 0xeb6e, 0xd140, 0xf8b2, 0xa4c6, 0xda35, 0x0, 0x1);
        gbc.writeMem(0x8674, { 0xf8, 0xc5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeb6e, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8674));
        EXPECT(0xc5, gbc.readMem(0x8675));
        // F8 011F
        gbc.setState(0xb989, 0xc353, 0x8fe0, 0x9d54, 0xde24, 0xb52, 0x0, 0x0);
        gbc.writeMem(0xb989, { 0xf8, 0xd6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc353, gbc.sp());
        EXPECT(0xb98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb989));
        EXPECT(0xd6, gbc.readMem(0xb98a));
        // F8 0120
        gbc.setState(0xb178, 0xf727, 0xac10, 0x2b91, 0x5ce3, 0xbfbb, 0x0, 0x0);
        gbc.writeMem(0xb178, { 0xf8, 0xd5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb178));
        EXPECT(0xd5, gbc.readMem(0xb179));
        // F8 0121
        gbc.setState(0x580b, 0xe6de, 0x7a70, 0x5634, 0x9817, 0x4cb9, 0x0, 0x1);
        gbc.writeMem(0x580b, { 0xf8, 0x59 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe6de, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0122
        gbc.setState(0xd5ac, 0x4210, 0x4640, 0x5e2f, 0xdfdb, 0x5738, 0x1, 0x0);
        gbc.writeMem(0xd5ac, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4210, gbc.sp());
        EXPECT(0xd5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd5ac));
        EXPECT(0xf8, gbc.readMem(0xd5ad));
        // F8 0123
        gbc.setState(0x8473, 0x90d4, 0x99b0, 0xc213, 0x6359, 0x9ec6, 0x0, 0x0);
        gbc.writeMem(0x8473, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0x8475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8473));
        EXPECT(0x5c, gbc.readMem(0x8474));
        // F8 0124
        gbc.setState(0xd543, 0x4bb3, 0x3630, 0x2246, 0x9fc6, 0x14f0, 0x0, 0x0);
        gbc.writeMem(0xd543, { 0xf8, 0x25 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0xd545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd543));
        EXPECT(0x25, gbc.readMem(0xd544));
        // F8 0125
        gbc.setState(0xe6f2, 0xcef0, 0x5f70, 0x5a3b, 0x84, 0xe14a, 0x1, 0x1);
        gbc.writeMem(0xe6f2, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe6f2));
        EXPECT(0xf7, gbc.readMem(0xe6f3));
        // F8 0126
        gbc.setState(0xa1f3, 0x633, 0x520, 0x825f, 0x1f9e, 0x700f, 0x1, 0x1);
        gbc.writeMem(0xa1f3, { 0xf8, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0xa1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa1f3));
        EXPECT(0xcb, gbc.readMem(0xa1f4));
        // F8 0127
        gbc.setState(0xccee, 0xb4ea, 0x65a0, 0xcf0d, 0xe2b0, 0xdff9, 0x0, 0x0);
        gbc.writeMem(0xccee, { 0xf8, 0xdd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0xccf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xccee));
        EXPECT(0xdd, gbc.readMem(0xccef));
        // F8 0129
        gbc.setState(0x8929, 0xb676, 0xc3d0, 0x6833, 0xc603, 0x795b, 0x0, 0x1);
        gbc.writeMem(0x8929, { 0xf8, 0x42 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0x892b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8929));
        EXPECT(0x42, gbc.readMem(0x892a));
        // F8 012A
        gbc.setState(0x4c23, 0x59bb, 0x19c0, 0x4817, 0xe486, 0x3291, 0x0, 0x1);
        gbc.writeMem(0x4c23, { 0xf8, 0x4a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x4c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 012C
        gbc.setState(0xd92f, 0xc119, 0xc860, 0x5461, 0xf298, 0x4554, 0x0, 0x1);
        gbc.writeMem(0xd92f, { 0xf8, 0x48 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc119, gbc.sp());
        EXPECT(0xd931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd92f));
        EXPECT(0x48, gbc.readMem(0xd930));
        // F8 012D
        gbc.setState(0x7f51, 0x6ecf, 0x86e0, 0xbdf5, 0xbadd, 0x3b84, 0x0, 0x0);
        gbc.writeMem(0x7f51, { 0xf8, 0x34 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 012E
        gbc.setState(0x259, 0x7490, 0x53d0, 0xc396, 0x1a38, 0x14d4, 0x1, 0x0);
        gbc.writeMem(0x259, { 0xf8, 0xfe });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0x25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 012F
        gbc.setState(0x6e14, 0x17a, 0x170, 0x4217, 0x68e2, 0x1005, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0xf8, 0xea });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0x6e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0130
        gbc.setState(0xa4e2, 0xf630, 0xac20, 0x243, 0x36d2, 0xe24f, 0x1, 0x0);
        gbc.writeMem(0xa4e2, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa4e2));
        EXPECT(0x22, gbc.readMem(0xa4e3));
        // F8 0131
        gbc.setState(0x1e40, 0xecc8, 0x5420, 0x4cc7, 0x8822, 0x62d4, 0x0, 0x1);
        gbc.writeMem(0x1e40, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xecc8, gbc.sp());
        EXPECT(0x1e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0132
        gbc.setState(0x7319, 0xc293, 0x36e0, 0xa886, 0xcbdd, 0x1e30, 0x0, 0x1);
        gbc.writeMem(0x7319, { 0xf8, 0xa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc293, gbc.sp());
        EXPECT(0x731b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0133
        gbc.setState(0x310e, 0x735e, 0x4f40, 0x96c0, 0xb4cd, 0x5eb9, 0x1, 0x1);
        gbc.writeMem(0x310e, { 0xf8, 0x52 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x735e, gbc.sp());
        EXPECT(0x3110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0134
        gbc.setState(0xd126, 0x565c, 0x62c0, 0x821d, 0xd145, 0x472b, 0x1, 0x0);
        gbc.writeMem(0xd126, { 0xf8, 0x4a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd126));
        EXPECT(0x4a, gbc.readMem(0xd127));
        // F8 0135
        gbc.setState(0x85fa, 0x80f5, 0xf4f0, 0xb543, 0xe023, 0x8a3d, 0x1, 0x1);
        gbc.writeMem(0x85fa, { 0xf8, 0xf3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x85fa));
        EXPECT(0xf3, gbc.readMem(0x85fb));
        // F8 0136
        gbc.setState(0x2b6b, 0xe9cc, 0xf360, 0xeea1, 0xfb50, 0xefe9, 0x1, 0x1);
        gbc.writeMem(0x2b6b, { 0xf8, 0x1f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0137
        gbc.setState(0xaea7, 0xf3ca, 0xef0, 0x8243, 0xad07, 0x5ede, 0x1, 0x1);
        gbc.writeMem(0xaea7, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0xaea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaea7));
        EXPECT(0x95, gbc.readMem(0xaea8));
        // F8 0138
        gbc.setState(0xb431, 0xe59f, 0x980, 0x1f7, 0x2586, 0x6dac, 0x0, 0x1);
        gbc.writeMem(0xb431, { 0xf8, 0xb4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0xb433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb431));
        EXPECT(0xb4, gbc.readMem(0xb432));
        // F8 0139
        gbc.setState(0xa3f3, 0xd860, 0x6d50, 0x51b0, 0x3b11, 0x5945, 0x0, 0x1);
        gbc.writeMem(0xa3f3, { 0xf8, 0x8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd860, gbc.sp());
        EXPECT(0xa3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa3f3));
        EXPECT(0x8, gbc.readMem(0xa3f4));
        // F8 013A
        gbc.setState(0x3883, 0xc651, 0x3390, 0x92ce, 0x3cd3, 0x389, 0x1, 0x1);
        gbc.writeMem(0x3883, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc651, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 013B
        gbc.setState(0xd695, 0x7c3f, 0x1970, 0x6e4a, 0x513d, 0x9ef4, 0x1, 0x0);
        gbc.writeMem(0xd695, { 0xf8, 0x6f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0xd697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd695));
        EXPECT(0x6f, gbc.readMem(0xd696));
        // F8 013C
        gbc.setState(0xdd54, 0x519f, 0xc2c0, 0x68e, 0x499, 0xb660, 0x1, 0x1);
        gbc.writeMem(0xdd54, { 0xf8, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x519f, gbc.sp());
        EXPECT(0xdd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdd54));
        EXPECT(0xd9, gbc.readMem(0xdd55));
        // F8 013D
        gbc.setState(0xb73f, 0xeea8, 0x7060, 0x5561, 0x78eb, 0x7756, 0x0, 0x0);
        gbc.writeMem(0xb73f, { 0xf8, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeea8, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb73f));
        EXPECT(0xe9, gbc.readMem(0xb740));
        // F8 013E
        gbc.setState(0x9e95, 0xefe7, 0x5100, 0xfee, 0xb940, 0x9403, 0x1, 0x0);
        gbc.writeMem(0x9e95, { 0xf8, 0x17 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xefe7, gbc.sp());
        EXPECT(0x9e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9e95));
        EXPECT(0x17, gbc.readMem(0x9e96));
        // F8 013F
        gbc.setState(0x28df, 0xb6fd, 0x7b70, 0x67a5, 0xbb84, 0xfbb5, 0x0, 0x0);
        gbc.writeMem(0x28df, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb6fd, gbc.sp());
        EXPECT(0x28e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0140
        gbc.setState(0x3482, 0xc782, 0xa3f0, 0x1fa6, 0xc899, 0xa1f7, 0x0, 0x1);
        gbc.writeMem(0x3482, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc782, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0141
        gbc.setState(0xe750, 0xb4a8, 0xcc30, 0xc718, 0x353d, 0xbb64, 0x0, 0x1);
        gbc.writeMem(0xe750, { 0xf8, 0xfd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb4a8, gbc.sp());
        EXPECT(0xe752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe750));
        EXPECT(0xfd, gbc.readMem(0xe751));
        // F8 0142
        gbc.setState(0xa69b, 0x8b9c, 0x2e80, 0xeec9, 0xf2d6, 0x3e0, 0x1, 0x1);
        gbc.writeMem(0xa69b, { 0xf8, 0x88 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8b9c, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa69b));
        EXPECT(0x88, gbc.readMem(0xa69c));
        // F8 0143
        gbc.setState(0x87be, 0x303b, 0xde80, 0x481e, 0xf41e, 0x4e1f, 0x1, 0x0);
        gbc.writeMem(0x87be, { 0xf8, 0x46 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x87be));
        EXPECT(0x46, gbc.readMem(0x87bf));
        // F8 0144
        gbc.setState(0x938c, 0x2967, 0x5520, 0xee90, 0x99aa, 0x192e, 0x1, 0x1);
        gbc.writeMem(0x938c, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2967, gbc.sp());
        EXPECT(0x938e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x938c));
        EXPECT(0x3b, gbc.readMem(0x938d));
        // F8 0145
        gbc.setState(0x4c8, 0xa407, 0xe870, 0x78d9, 0xba2f, 0x8c19, 0x1, 0x1);
        gbc.writeMem(0x4c8, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa407, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0146
        gbc.setState(0xe15f, 0x877d, 0x6930, 0x95f0, 0x7a77, 0x6652, 0x0, 0x1);
        gbc.writeMem(0xe15f, { 0xf8, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x877d, gbc.sp());
        EXPECT(0xe161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe15f));
        EXPECT(0x7b, gbc.readMem(0xe160));
        // F8 0147
        gbc.setState(0x3633, 0x89b9, 0x2a50, 0x2505, 0x9a85, 0x5750, 0x0, 0x1);
        gbc.writeMem(0x3633, { 0xf8, 0x48 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x3635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0149
        gbc.setState(0x9f3d, 0x22f, 0xf5b0, 0x2efc, 0x95, 0x739c, 0x0, 0x0);
        gbc.writeMem(0x9f3d, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0x9f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9f3d));
        EXPECT(0x90, gbc.readMem(0x9f3e));
        // F8 014A
        gbc.setState(0xe532, 0x18fd, 0xf390, 0x142e, 0x276b, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0xe532, { 0xf8, 0x50 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0xe534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe532));
        EXPECT(0x50, gbc.readMem(0xe533));
        // F8 014B
        gbc.setState(0x3b28, 0x6d88, 0xe2c0, 0x1ca9, 0x33e, 0x44f9, 0x0, 0x1);
        gbc.writeMem(0x3b28, { 0xf8, 0x91 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6d88, gbc.sp());
        EXPECT(0x3b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 014C
        gbc.setState(0x998c, 0xfc8e, 0x9bf0, 0x1389, 0x211f, 0x6156, 0x1, 0x1);
        gbc.writeMem(0x998c, { 0xf8, 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x998c));
        EXPECT(0x5d, gbc.readMem(0x998d));
        // F8 014D
        gbc.setState(0xa0f6, 0x6641, 0x3710, 0x9400, 0xf38d, 0xd9c7, 0x0, 0x0);
        gbc.writeMem(0xa0f6, { 0xf8, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6641, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa0f6));
        EXPECT(0x34, gbc.readMem(0xa0f7));
        // F8 014E
        gbc.setState(0x9c69, 0x4b8e, 0xb40, 0x4c8, 0xd942, 0x4b5, 0x0, 0x1);
        gbc.writeMem(0x9c69, { 0xf8, 0xa2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4b8e, gbc.sp());
        EXPECT(0x9c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9c69));
        EXPECT(0xa2, gbc.readMem(0x9c6a));
        // F8 014F
        gbc.setState(0x405, 0xdeae, 0x7a60, 0x971, 0xcfe4, 0xa30b, 0x0, 0x0);
        gbc.writeMem(0x405, { 0xf8, 0x77 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdeae, gbc.sp());
        EXPECT(0x407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0150
        gbc.setState(0xac53, 0xa8e9, 0xc9b0, 0x7bcb, 0xdde8, 0xe3b7, 0x1, 0x0);
        gbc.writeMem(0xac53, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xac55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xac53));
        EXPECT(0x86, gbc.readMem(0xac54));
        // F8 0151
        gbc.setState(0x60b8, 0x5e3f, 0xc00, 0xa6ef, 0x86bd, 0xe600, 0x0, 0x0);
        gbc.writeMem(0x60b8, { 0xf8, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x60ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0152
        gbc.setState(0x18d1, 0x30d0, 0x7120, 0x39f4, 0xd071, 0x50f3, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0xf8, 0x56 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0153
        gbc.setState(0x72b2, 0xdb3, 0xe180, 0x4588, 0x5d33, 0x5e7b, 0x1, 0x1);
        gbc.writeMem(0x72b2, { 0xf8, 0x96 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdb3, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0154
        gbc.setState(0xca88, 0x992c, 0x8350, 0x23fa, 0xed28, 0x37bc, 0x1, 0x1);
        gbc.writeMem(0xca88, { 0xf8, 0x40 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x992c, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xca88));
        EXPECT(0x40, gbc.readMem(0xca89));
        // F8 0155
        gbc.setState(0xe9ac, 0xca0, 0xc7c0, 0x351a, 0x2170, 0x7227, 0x1, 0x0);
        gbc.writeMem(0xe9ac, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xca0, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe9ac));
        EXPECT(0x90, gbc.readMem(0xe9ad));
        // F8 0156
        gbc.setState(0x324e, 0xd56e, 0x18f0, 0x782c, 0xd37f, 0x9318, 0x0, 0x1);
        gbc.writeMem(0x324e, { 0xf8, 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd56e, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0157
        gbc.setState(0xb061, 0xce52, 0x2710, 0xcbd1, 0xa47, 0x6f83, 0x1, 0x0);
        gbc.writeMem(0xb061, { 0xf8, 0x14 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xce52, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb061));
        EXPECT(0x14, gbc.readMem(0xb062));
        // F8 0158
        gbc.setState(0x88b5, 0xc1e, 0x46b0, 0x65bb, 0xfc02, 0x56af, 0x1, 0x1);
        gbc.writeMem(0x88b5, { 0xf8, 0xbe });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc1e, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x88b5));
        EXPECT(0xbe, gbc.readMem(0x88b6));
        // F8 0159
        gbc.setState(0x2474, 0xb08d, 0x19c0, 0xd4b6, 0x9f5b, 0x5f90, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x2476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 015A
        gbc.setState(0xad54, 0x6cd8, 0xe8c0, 0xb9e1, 0xcd08, 0xa347, 0x0, 0x0);
        gbc.writeMem(0xad54, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6cd8, gbc.sp());
        EXPECT(0xad56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad54));
        EXPECT(0xa1, gbc.readMem(0xad55));
        // F8 015B
        gbc.setState(0x29d9, 0x39a4, 0xe40, 0x12a, 0x63fe, 0xee97, 0x0, 0x0);
        gbc.writeMem(0x29d9, { 0xf8, 0xe3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x39a4, gbc.sp());
        EXPECT(0x29db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 015C
        gbc.setState(0x86c5, 0x8b52, 0x9c00, 0xbb74, 0x498d, 0xcd75, 0x1, 0x1);
        gbc.writeMem(0x86c5, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8b52, gbc.sp());
        EXPECT(0x86c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x86c5));
        EXPECT(0x8d, gbc.readMem(0x86c6));
        // F8 015D
        gbc.setState(0x16d0, 0x19fa, 0x5b60, 0xc88e, 0x46b, 0x32eb, 0x1, 0x1);
        gbc.writeMem(0x16d0, { 0xf8, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x19fa, gbc.sp());
        EXPECT(0x16d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 015E
        gbc.setState(0xeb18, 0x8898, 0x9f00, 0x7ba3, 0x632, 0xf7ee, 0x0, 0x0);
        gbc.writeMem(0xeb18, { 0xf8, 0xb4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8898, gbc.sp());
        EXPECT(0xeb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb18));
        EXPECT(0xb4, gbc.readMem(0xeb19));
        // F8 015F
        gbc.setState(0xb1c8, 0xb5ce, 0xf380, 0xea20, 0x8e57, 0x6596, 0x0, 0x0);
        gbc.writeMem(0xb1c8, { 0xf8, 0x40 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb5ce, gbc.sp());
        EXPECT(0xb1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb1c8));
        EXPECT(0x40, gbc.readMem(0xb1c9));
        // F8 0160
        gbc.setState(0x1b49, 0xf891, 0x6be0, 0x11a0, 0x1811, 0xa645, 0x1, 0x1);
        gbc.writeMem(0x1b49, { 0xf8, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0x1b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0161
        gbc.setState(0x5be5, 0xc5e9, 0x57c0, 0xd608, 0xb8f8, 0x238b, 0x0, 0x0);
        gbc.writeMem(0x5be5, { 0xf8, 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc5e9, gbc.sp());
        EXPECT(0x5be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0162
        gbc.setState(0xe9ce, 0xa071, 0x4bc0, 0xcfb9, 0xe6c0, 0x4ef8, 0x0, 0x1);
        gbc.writeMem(0xe9ce, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa071, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe9ce));
        EXPECT(0xb8, gbc.readMem(0xe9cf));
        // F8 0163
        gbc.setState(0xcb21, 0x2947, 0x51b0, 0xb147, 0x3dc2, 0x49c2, 0x0, 0x0);
        gbc.writeMem(0xcb21, { 0xf8, 0x7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2947, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcb21));
        EXPECT(0x7, gbc.readMem(0xcb22));
        // F8 0164
        gbc.setState(0xb280, 0xf325, 0xda10, 0xff64, 0x5a1, 0xe2, 0x0, 0x1);
        gbc.writeMem(0xb280, { 0xf8, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb280));
        EXPECT(0x7, gbc.readMem(0xb281));
        // F8 0165
        gbc.setState(0xbf37, 0xb17f, 0x6730, 0xf141, 0xe63f, 0x976b, 0x1, 0x1);
        gbc.writeMem(0xbf37, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0xbf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbf37));
        EXPECT(0x4b, gbc.readMem(0xbf38));
        // F8 0166
        gbc.setState(0xaa2f, 0x9817, 0x65f0, 0x3f6a, 0x54dd, 0x7821, 0x1, 0x0);
        gbc.writeMem(0xaa2f, { 0xf8, 0x79 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0xaa31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaa2f));
        EXPECT(0x79, gbc.readMem(0xaa30));
        // F8 0167
        gbc.setState(0x2bab, 0x41f1, 0xab70, 0xa5e0, 0xcc82, 0x562c, 0x1, 0x1);
        gbc.writeMem(0x2bab, { 0xf8, 0xda });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x41f1, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0168
        gbc.setState(0x6c5f, 0x14d1, 0x74e0, 0x104f, 0x87fc, 0xc414, 0x1, 0x0);
        gbc.writeMem(0x6c5f, { 0xf8, 0xa8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0169
        gbc.setState(0x9a5c, 0xe130, 0xbd00, 0x63af, 0xea6a, 0x95bb, 0x0, 0x0);
        gbc.writeMem(0x9a5c, { 0xf8, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe130, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9a5c));
        EXPECT(0xed, gbc.readMem(0x9a5d));
        // F8 016A
        gbc.setState(0x6a80, 0xa41c, 0x4e50, 0xcf69, 0x5f70, 0x6326, 0x1, 0x1);
        gbc.writeMem(0x6a80, { 0xf8, 0xf3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 016B
        gbc.setState(0xc068, 0x31ef, 0x5720, 0xe829, 0x1840, 0xe30f, 0x1, 0x0);
        gbc.writeMem(0xc068, { 0xf8, 0xd2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0xc06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc068));
        EXPECT(0xd2, gbc.readMem(0xc069));
        // F8 016C
        gbc.setState(0xad45, 0x14b2, 0xe610, 0xa057, 0xd001, 0xa27b, 0x1, 0x1);
        gbc.writeMem(0xad45, { 0xf8, 0xfe });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0xad47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad45));
        EXPECT(0xfe, gbc.readMem(0xad46));
        // F8 016D
        gbc.setState(0xe712, 0xbea9, 0x1ba0, 0x480c, 0xc07d, 0xcace, 0x1, 0x0);
        gbc.writeMem(0xe712, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe712));
        EXPECT(0x47, gbc.readMem(0xe713));
        // F8 016E
        gbc.setState(0x2074, 0xd059, 0x3630, 0xe0d4, 0x3a4c, 0xd2d1, 0x1, 0x0);
        gbc.writeMem(0x2074, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0x2076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 016F
        gbc.setState(0x26c, 0x7a23, 0x6650, 0x293d, 0x8d62, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x26c, { 0xf8, 0xa4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0x26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0170
        gbc.setState(0x72b7, 0x8e2d, 0xde00, 0xf187, 0x654c, 0x1e78, 0x0, 0x0);
        gbc.writeMem(0x72b7, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0171
        gbc.setState(0x496f, 0x277d, 0xc990, 0x3cab, 0x4d02, 0x53aa, 0x0, 0x0);
        gbc.writeMem(0x496f, { 0xf8, 0xa2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x277d, gbc.sp());
        EXPECT(0x4971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0172
        gbc.setState(0xb6a1, 0x5533, 0xfd80, 0x30ee, 0x8dea, 0x19d9, 0x1, 0x0);
        gbc.writeMem(0xb6a1, { 0xf8, 0x3a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5533, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb6a1));
        EXPECT(0x3a, gbc.readMem(0xb6a2));
        // F8 0173
        gbc.setState(0xdc09, 0x7435, 0x2a00, 0xc277, 0x1bc4, 0xef83, 0x0, 0x0);
        gbc.writeMem(0xdc09, { 0xf8, 0x6d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7435, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdc09));
        EXPECT(0x6d, gbc.readMem(0xdc0a));
        // F8 0174
        gbc.setState(0x6d9a, 0xa7ba, 0x7260, 0x725f, 0x192b, 0xfaca, 0x1, 0x0);
        gbc.writeMem(0x6d9a, { 0xf8, 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa7ba, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0175
        gbc.setState(0x57cc, 0xb46, 0x98f0, 0x2944, 0x4d3a, 0x3a30, 0x0, 0x1);
        gbc.writeMem(0x57cc, { 0xf8, 0xa8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb46, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0176
        gbc.setState(0x5039, 0x3183, 0x7a90, 0xc82a, 0xb309, 0x42f, 0x1, 0x0);
        gbc.writeMem(0x5039, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3183, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0177
        gbc.setState(0x867c, 0xbda9, 0xa8c0, 0x14d8, 0x17ce, 0x81d0, 0x0, 0x0);
        gbc.writeMem(0x867c, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x867c));
        EXPECT(0x9a, gbc.readMem(0x867d));
        // F8 0178
        gbc.setState(0x8744, 0x7376, 0x6db0, 0xe0be, 0x4164, 0xdb6, 0x1, 0x0);
        gbc.writeMem(0x8744, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7376, gbc.sp());
        EXPECT(0x8746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8744));
        EXPECT(0x43, gbc.readMem(0x8745));
        // F8 0179
        gbc.setState(0xc150, 0xd0d2, 0xad50, 0x88c7, 0xbc62, 0x132f, 0x1, 0x0);
        gbc.writeMem(0xc150, { 0xf8, 0x2e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0xc152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc150));
        EXPECT(0x2e, gbc.readMem(0xc151));
        // F8 017A
        gbc.setState(0xdda2, 0xeb23, 0xdaf0, 0x6222, 0xcf26, 0xca21, 0x1, 0x1);
        gbc.writeMem(0xdda2, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdda2));
        EXPECT(0xef, gbc.readMem(0xdda3));
        // F8 017B
        gbc.setState(0xb94, 0x79d6, 0xdee0, 0xacdc, 0x1dff, 0x588c, 0x0, 0x1);
        gbc.writeMem(0xb94, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x79d6, gbc.sp());
        EXPECT(0xb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 017C
        gbc.setState(0x5cc, 0xab8f, 0xf650, 0xda85, 0x4daa, 0x6545, 0x1, 0x0);
        gbc.writeMem(0x5cc, { 0xf8, 0x16 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xab8f, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 017D
        gbc.setState(0x9810, 0x1574, 0x61c0, 0xaf74, 0xdd35, 0xc662, 0x0, 0x0);
        gbc.writeMem(0x9810, { 0xf8, 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0x9812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9810));
        EXPECT(0x13, gbc.readMem(0x9811));
        // F8 017E
        gbc.setState(0x53c9, 0x80c9, 0xcf90, 0x661b, 0x8bbe, 0x68ec, 0x1, 0x1);
        gbc.writeMem(0x53c9, { 0xf8, 0x55 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0x53cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 017F
        gbc.setState(0xb14d, 0x4bfe, 0xd20, 0x3ec9, 0x5b90, 0x18a3, 0x1, 0x0);
        gbc.writeMem(0xb14d, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4bfe, gbc.sp());
        EXPECT(0xb14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb14d));
        EXPECT(0x84, gbc.readMem(0xb14e));
        // F8 0180
        gbc.setState(0x3689, 0x24b2, 0x6600, 0xa2e2, 0x2b31, 0xc5d3, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0xf8, 0xf6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0181
        gbc.setState(0x780b, 0x5a28, 0x5420, 0x4017, 0x13ad, 0xda01, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5a28, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0182
        gbc.setState(0xdd33, 0x8382, 0x8450, 0x8d79, 0x77e9, 0x9105, 0x1, 0x0);
        gbc.writeMem(0xdd33, { 0xf8, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8382, gbc.sp());
        EXPECT(0xdd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdd33));
        EXPECT(0x37, gbc.readMem(0xdd34));
        // F8 0183
        gbc.setState(0xd2e1, 0x5ac2, 0xd540, 0x9f33, 0x8262, 0xe2fa, 0x0, 0x0);
        gbc.writeMem(0xd2e1, { 0xf8, 0xcb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ac2, gbc.sp());
        EXPECT(0xd2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd2e1));
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        // F8 0184
        gbc.setState(0xe61f, 0x9e3d, 0x2b20, 0x6d2e, 0xea49, 0x3a93, 0x1, 0x0);
        gbc.writeMem(0xe61f, { 0xf8, 0x6b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9e3d, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe61f));
        EXPECT(0x6b, gbc.readMem(0xe620));
        // F8 0185
        gbc.setState(0xa2f6, 0x8fbd, 0x31c0, 0x4555, 0x78d1, 0x9cf2, 0x1, 0x1);
        gbc.writeMem(0xa2f6, { 0xf8, 0xd7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8fbd, gbc.sp());
        EXPECT(0xa2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa2f6));
        EXPECT(0xd7, gbc.readMem(0xa2f7));
        // F8 0186
        gbc.setState(0x3bdd, 0xca06, 0x7780, 0x4bd4, 0xa9b, 0x8d48, 0x1, 0x1);
        gbc.writeMem(0x3bdd, { 0xf8, 0xc6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca06, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0187
        gbc.setState(0xe7ce, 0x6ab0, 0x1620, 0xf03, 0xec2c, 0x4a27, 0x1, 0x0);
        gbc.writeMem(0xe7ce, { 0xf8, 0xd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ab0, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe7ce));
        EXPECT(0xd, gbc.readMem(0xe7cf));
        // F8 0188
        gbc.setState(0xd46b, 0xb338, 0x7b60, 0x4bf7, 0x5b4c, 0xcccb, 0x1, 0x1);
        gbc.writeMem(0xd46b, { 0xf8, 0xf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb338, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd46b));
        EXPECT(0xf, gbc.readMem(0xd46c));
        // F8 0189
        gbc.setState(0x8a84, 0xc31, 0x830, 0x8f1e, 0x1feb, 0x2c35, 0x1, 0x1);
        gbc.writeMem(0x8a84, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc31, gbc.sp());
        EXPECT(0x8a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8a84));
        EXPECT(0xb9, gbc.readMem(0x8a85));
        // F8 018A
        gbc.setState(0xe634, 0x5b54, 0x3690, 0xf1e7, 0x96e, 0xd177, 0x0, 0x0);
        gbc.writeMem(0xe634, { 0xf8, 0x80 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe634));
        EXPECT(0x80, gbc.readMem(0xe635));
        // F8 018B
        gbc.setState(0xbfdd, 0xaa95, 0xa0a0, 0x2909, 0x18d, 0xc5ed, 0x0, 0x1);
        gbc.writeMem(0xbfdd, { 0xf8, 0xaa });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0xbfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbfdd));
        EXPECT(0xaa, gbc.readMem(0xbfde));
        // F8 018C
        gbc.setState(0xd22a, 0x6720, 0x9e00, 0xb620, 0x1b84, 0xf9b, 0x1, 0x0);
        gbc.writeMem(0xd22a, { 0xf8, 0x78 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6720, gbc.sp());
        EXPECT(0xd22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd22a));
        EXPECT(0x78, gbc.readMem(0xd22b));
        // F8 018D
        gbc.setState(0xa567, 0x74e6, 0xfa00, 0xffef, 0xf8ff, 0x250a, 0x0, 0x0);
        gbc.writeMem(0xa567, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x74e6, gbc.sp());
        EXPECT(0xa569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa567));
        EXPECT(0xcd, gbc.readMem(0xa568));
        // F8 018E
        gbc.setState(0xda88, 0x3521, 0x2400, 0x35a4, 0xad5d, 0xac23, 0x0, 0x1);
        gbc.writeMem(0xda88, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3521, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda88));
        EXPECT(0x22, gbc.readMem(0xda89));
        // F8 018F
        gbc.setState(0x642, 0x5d78, 0x9a00, 0x55da, 0x99b6, 0x646f, 0x1, 0x0);
        gbc.writeMem(0x642, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5d78, gbc.sp());
        EXPECT(0x644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0190
        gbc.setState(0xb0db, 0xa864, 0x8190, 0x62b6, 0x389f, 0x1d14, 0x1, 0x0);
        gbc.writeMem(0xb0db, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa864, gbc.sp());
        EXPECT(0xb0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb0db));
        EXPECT(0x90, gbc.readMem(0xb0dc));
        // F8 0191
        gbc.setState(0xe5d0, 0xfc10, 0x6280, 0xb991, 0x6a0, 0xa4e3, 0x0, 0x0);
        gbc.writeMem(0xe5d0, { 0xf8, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc10, gbc.sp());
        EXPECT(0xe5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe5d0));
        EXPECT(0x77, gbc.readMem(0xe5d1));
        // F8 0192
        gbc.setState(0x174d, 0xef09, 0xde20, 0xb0a9, 0x420f, 0x13a3, 0x0, 0x0);
        gbc.writeMem(0x174d, { 0xf8, 0x4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xef09, gbc.sp());
        EXPECT(0x174f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0193
        gbc.setState(0x5c48, 0x3f08, 0x57c0, 0x2232, 0x587, 0xf42c, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0194
        gbc.setState(0x249b, 0xadb4, 0xa270, 0x9a4b, 0xae21, 0xe800, 0x0, 0x0);
        gbc.writeMem(0x249b, { 0xf8, 0xc0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xadb4, gbc.sp());
        EXPECT(0x249d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0195
        gbc.setState(0xde88, 0xa103, 0x19e0, 0x7000, 0x6de3, 0xf76d, 0x0, 0x1);
        gbc.writeMem(0xde88, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa103, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde88));
        EXPECT(0x44, gbc.readMem(0xde89));
        // F8 0196
        gbc.setState(0x8d17, 0x1678, 0xd780, 0x175a, 0x2dcd, 0x7d3, 0x1, 0x0);
        gbc.writeMem(0x8d17, { 0xf8, 0x73 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1678, gbc.sp());
        EXPECT(0x8d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8d17));
        EXPECT(0x73, gbc.readMem(0x8d18));
        // F8 0197
        gbc.setState(0x80a0, 0x84dd, 0x8d80, 0x9d74, 0x13df, 0x914e, 0x1, 0x0);
        gbc.writeMem(0x80a0, { 0xf8, 0x94 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0x80a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x80a0));
        EXPECT(0x94, gbc.readMem(0x80a1));
        // F8 0198
        gbc.setState(0x2677, 0xb19c, 0x3590, 0x22e6, 0x5da5, 0xd669, 0x1, 0x1);
        gbc.writeMem(0x2677, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb19c, gbc.sp());
        EXPECT(0x2679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0199
        gbc.setState(0x99d1, 0xe97b, 0xaa00, 0xfbe3, 0xa5dd, 0x824d, 0x1, 0x0);
        gbc.writeMem(0x99d1, { 0xf8, 0x77 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe97b, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x99d1));
        EXPECT(0x77, gbc.readMem(0x99d2));
        // F8 019A
        gbc.setState(0x5bf9, 0xb712, 0xa5a0, 0x948b, 0x2531, 0x1911, 0x1, 0x0);
        gbc.writeMem(0x5bf9, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb712, gbc.sp());
        EXPECT(0x5bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 019B
        gbc.setState(0xc057, 0x470e, 0x31f0, 0xf5c8, 0xda6c, 0xe288, 0x1, 0x0);
        gbc.writeMem(0xc057, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x470e, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc057));
        EXPECT(0x98, gbc.readMem(0xc058));
        // F8 019C
        gbc.setState(0x3fbc, 0x3453, 0x6290, 0xae2e, 0x8e7d, 0x291, 0x0, 0x0);
        gbc.writeMem(0x3fbc, { 0xf8, 0x24 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3453, gbc.sp());
        EXPECT(0x3fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 019D
        gbc.setState(0xc577, 0xb755, 0x6700, 0xd049, 0xaef3, 0x5236, 0x0, 0x0);
        gbc.writeMem(0xc577, { 0xf8, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0xc579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc577));
        EXPECT(0x62, gbc.readMem(0xc578));
        // F8 019E
        gbc.setState(0x155a, 0x386e, 0x9c50, 0x4e04, 0x117, 0x430e, 0x0, 0x1);
        gbc.writeMem(0x155a, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x386e, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 019F
        gbc.setState(0x668, 0x57fa, 0x1030, 0x6682, 0x8075, 0xe066, 0x0, 0x0);
        gbc.writeMem(0x668, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01A1
        gbc.setState(0xc350, 0x1b74, 0xfc40, 0x4177, 0x1590, 0xc590, 0x1, 0x0);
        gbc.writeMem(0xc350, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1b74, gbc.sp());
        EXPECT(0xc352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc350));
        EXPECT(0x30, gbc.readMem(0xc351));
        // F8 01A2
        gbc.setState(0x81cf, 0xd871, 0xce10, 0x8341, 0xd9cb, 0xeef, 0x1, 0x0);
        gbc.writeMem(0x81cf, { 0xf8, 0x1e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd871, gbc.sp());
        EXPECT(0x81d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x81cf));
        EXPECT(0x1e, gbc.readMem(0x81d0));
        // F8 01A3
        gbc.setState(0x6c48, 0xc187, 0x2080, 0x6766, 0x541c, 0x8915, 0x0, 0x1);
        gbc.writeMem(0x6c48, { 0xf8, 0x60 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc187, gbc.sp());
        EXPECT(0x6c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01A4
        gbc.setState(0x96c0, 0xe549, 0x1e0, 0x1331, 0x2a7f, 0x794, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0xf8, 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe549, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x96c0));
        EXPECT(0x9d, gbc.readMem(0x96c1));
        // F8 01A5
        gbc.setState(0xb397, 0x8213, 0x2ee0, 0xcfe8, 0x4537, 0xa11c, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0xf8, 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8213, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb397));
        EXPECT(0xb5, gbc.readMem(0xb398));
        // F8 01A6
        gbc.setState(0x7ee2, 0x5741, 0xc3e0, 0x2ca1, 0x7495, 0x67db, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xf8, 0x82 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01A7
        gbc.setState(0x64ba, 0xbc0a, 0xf630, 0xc603, 0xe3a7, 0xf4a0, 0x1, 0x1);
        gbc.writeMem(0x64ba, { 0xf8, 0x6b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01A8
        gbc.setState(0xb8ed, 0x30de, 0x87e0, 0x8c1b, 0xb46f, 0x17d2, 0x0, 0x0);
        gbc.writeMem(0xb8ed, { 0xf8, 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0xb8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb8ed));
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // F8 01A9
        gbc.setState(0x3e4d, 0x6cd2, 0x5760, 0x68e, 0xccea, 0x7182, 0x1, 0x0);
        gbc.writeMem(0x3e4d, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6cd2, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01AA
        gbc.setState(0x631b, 0x7771, 0x9420, 0x7185, 0xa6ef, 0xc165, 0x1, 0x0);
        gbc.writeMem(0x631b, { 0xf8, 0x83 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7771, gbc.sp());
        EXPECT(0x631d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01AB
        gbc.setState(0xe12f, 0x64b2, 0x64e0, 0xd6db, 0x31b9, 0x25ed, 0x1, 0x1);
        gbc.writeMem(0xe12f, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0xe131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe12f));
        EXPECT(0x3f, gbc.readMem(0xe130));
        // F8 01AC
        gbc.setState(0xa7d0, 0xf3d, 0x2ab0, 0x2ad9, 0xdfa, 0xbf93, 0x0, 0x0);
        gbc.writeMem(0xa7d0, { 0xf8, 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3d, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7d0));
        EXPECT(0x2a, gbc.readMem(0xa7d1));
        // F8 01AD
        gbc.setState(0x6d70, 0xa36, 0x11a0, 0x1ff2, 0x3848, 0x64f8, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0xf8, 0xb1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01AE
        gbc.setState(0x1c72, 0x383b, 0x6220, 0x6a20, 0x7a0e, 0x278c, 0x0, 0x0);
        gbc.writeMem(0x1c72, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0x1c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01AF
        gbc.setState(0x63b4, 0x4e66, 0x3440, 0x7e34, 0xa320, 0xf388, 0x1, 0x1);
        gbc.writeMem(0x63b4, { 0xf8, 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4e66, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01B0
        gbc.setState(0x6088, 0x4886, 0x13a0, 0xb1ce, 0xd220, 0x94b7, 0x0, 0x0);
        gbc.writeMem(0x6088, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4886, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01B1
        gbc.setState(0x1da2, 0x72cf, 0xecb0, 0x5f38, 0xea41, 0x17e5, 0x0, 0x1);
        gbc.writeMem(0x1da2, { 0xf8, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01B2
        gbc.setState(0xadb8, 0x3c5a, 0x5dc0, 0x88cc, 0x47d1, 0xfafc, 0x0, 0x1);
        gbc.writeMem(0xadb8, { 0xf8, 0x4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3c5a, gbc.sp());
        EXPECT(0xadba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xadb8));
        EXPECT(0x4, gbc.readMem(0xadb9));
        // F8 01B3
        gbc.setState(0xb0c, 0xbfb5, 0x5000, 0x463a, 0x9285, 0x225, 0x1, 0x1);
        gbc.writeMem(0xb0c, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbfb5, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01B4
        gbc.setState(0xc7ea, 0xb410, 0x9550, 0x6fa9, 0xe8bf, 0x416c, 0x1, 0x1);
        gbc.writeMem(0xc7ea, { 0xf8, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb410, gbc.sp());
        EXPECT(0xc7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc7ea));
        EXPECT(0x39, gbc.readMem(0xc7eb));
        // F8 01B5
        gbc.setState(0x211d, 0x2335, 0xf060, 0x3401, 0x85e5, 0x28b2, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2335, gbc.sp());
        EXPECT(0x211f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01B6
        gbc.setState(0x5e25, 0x9ae6, 0xe2c0, 0x6c61, 0x1f2f, 0x3d09, 0x0, 0x0);
        gbc.writeMem(0x5e25, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0x5e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01B7
        gbc.setState(0x1424, 0x8fc2, 0x42b0, 0x7839, 0x6b71, 0x4611, 0x0, 0x1);
        gbc.writeMem(0x1424, { 0xf8, 0xee });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8fc2, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01B8
        gbc.setState(0xe5c7, 0x8453, 0xc280, 0xfeb5, 0xcb91, 0x253b, 0x1, 0x0);
        gbc.writeMem(0xe5c7, { 0xf8, 0xbc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0xe5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe5c7));
        EXPECT(0xbc, gbc.readMem(0xe5c8));
        // F8 01B9
        gbc.setState(0xc421, 0xf6ae, 0xf3e0, 0xdf5f, 0xef5b, 0x206d, 0x0, 0x0);
        gbc.writeMem(0xc421, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf6ae, gbc.sp());
        EXPECT(0xc423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc421));
        EXPECT(0x86, gbc.readMem(0xc422));
        // F8 01BA
        gbc.setState(0x72da, 0x58c3, 0x830, 0x5544, 0xfa9e, 0x9b6a, 0x1, 0x0);
        gbc.writeMem(0x72da, { 0xf8, 0x75 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0x72dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01BB
        gbc.setState(0xbcdf, 0x91e9, 0x51d0, 0xa12f, 0x279e, 0x8c2, 0x1, 0x0);
        gbc.writeMem(0xbcdf, { 0xf8, 0xab });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0xbce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbcdf));
        EXPECT(0xab, gbc.readMem(0xbce0));
        // F8 01BD
        gbc.setState(0xb3c6, 0x2f68, 0x4540, 0x12f5, 0xe250, 0x8fd6, 0x0, 0x1);
        gbc.writeMem(0xb3c6, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0xb3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb3c6));
        EXPECT(0x9a, gbc.readMem(0xb3c7));
        // F8 01BE
        gbc.setState(0xd155, 0x5dc7, 0xe930, 0xda66, 0x1885, 0xc438, 0x0, 0x0);
        gbc.writeMem(0xd155, { 0xf8, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0xd157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd155));
        EXPECT(0x97, gbc.readMem(0xd156));
        // F8 01BF
        gbc.setState(0x4c94, 0x78c1, 0x6ed0, 0xea7a, 0x2eae, 0x40e1, 0x1, 0x0);
        gbc.writeMem(0x4c94, { 0xf8, 0xe1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x78c1, gbc.sp());
        EXPECT(0x4c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01C0
        gbc.setState(0xbd47, 0xce34, 0x5c20, 0x739e, 0x314d, 0xc6ee, 0x1, 0x0);
        gbc.writeMem(0xbd47, { 0xf8, 0x79 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xce34, gbc.sp());
        EXPECT(0xbd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbd47));
        EXPECT(0x79, gbc.readMem(0xbd48));
        // F8 01C1
        gbc.setState(0x635a, 0x232, 0x9670, 0xf74c, 0x252b, 0xdae1, 0x1, 0x1);
        gbc.writeMem(0x635a, { 0xf8, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0x635c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01C2
        gbc.setState(0x4f81, 0xe892, 0x9900, 0xde9e, 0x66f6, 0x5ec3, 0x1, 0x1);
        gbc.writeMem(0x4f81, { 0xf8, 0x57 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe892, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01C3
        gbc.setState(0xec8a, 0xc4c8, 0x7890, 0xfa98, 0xf5cd, 0x86ce, 0x1, 0x0);
        gbc.writeMem(0xec8a, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc4c8, gbc.sp());
        EXPECT(0xec8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xec8a));
        EXPECT(0xb9, gbc.readMem(0xec8b));
        // F8 01C4
        gbc.setState(0xdac4, 0x850, 0x140, 0x581a, 0xea6a, 0xaf51, 0x0, 0x1);
        gbc.writeMem(0xdac4, { 0xf8, 0x6d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x850, gbc.sp());
        EXPECT(0xdac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdac4));
        EXPECT(0x6d, gbc.readMem(0xdac5));
        // F8 01C5
        gbc.setState(0x1e39, 0x2d87, 0x21b0, 0x6054, 0x652c, 0xb3d, 0x1, 0x1);
        gbc.writeMem(0x1e39, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2d87, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01C6
        gbc.setState(0x38d9, 0x26a7, 0x6dc0, 0x127b, 0xd10a, 0xf3f8, 0x1, 0x0);
        gbc.writeMem(0x38d9, { 0xf8, 0xe2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x26a7, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01C7
        gbc.setState(0xd0ad, 0x9d7, 0x6650, 0xc6c6, 0x255e, 0x10df, 0x1, 0x1);
        gbc.writeMem(0xd0ad, { 0xf8, 0xf9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd0ad));
        EXPECT(0xf9, gbc.readMem(0xd0ae));
        // F8 01C8
        gbc.setState(0xb245, 0xc7ff, 0xc090, 0xb582, 0x7fc1, 0x6c97, 0x0, 0x0);
        gbc.writeMem(0xb245, { 0xf8, 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc7ff, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb245));
        EXPECT(0xfc, gbc.readMem(0xb246));
        // F8 01C9
        gbc.setState(0x5ae3, 0x554e, 0xde70, 0xbdf7, 0x551f, 0xdd05, 0x0, 0x0);
        gbc.writeMem(0x5ae3, { 0xf8, 0xee });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x554e, gbc.sp());
        EXPECT(0x5ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01CA
        gbc.setState(0x76f2, 0xd995, 0x2360, 0x1335, 0xf07d, 0x54a7, 0x1, 0x0);
        gbc.writeMem(0x76f2, { 0xf8, 0x9e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd995, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01CB
        gbc.setState(0x348b, 0xcf4, 0xfb80, 0x2fe7, 0x8d75, 0x7fc6, 0x0, 0x0);
        gbc.writeMem(0x348b, { 0xf8, 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01CC
        gbc.setState(0x17e8, 0x3815, 0x4430, 0xa2bc, 0x5d6, 0x569f, 0x1, 0x1);
        gbc.writeMem(0x17e8, { 0xf8, 0x36 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3815, gbc.sp());
        EXPECT(0x17ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01CD
        gbc.setState(0x2bb3, 0xc1ed, 0x5f30, 0x9e3f, 0xe9ac, 0xa167, 0x1, 0x1);
        gbc.writeMem(0x2bb3, { 0xf8, 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01CE
        gbc.setState(0x7e22, 0x808f, 0xa280, 0xf62, 0x9c9d, 0x7b1d, 0x1, 0x1);
        gbc.writeMem(0x7e22, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01CF
        gbc.setState(0x5419, 0x31fd, 0x7330, 0x5d7b, 0x8cf2, 0xcc8e, 0x0, 0x1);
        gbc.writeMem(0x5419, { 0xf8, 0xe3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01D0
        gbc.setState(0xd9b0, 0x28f5, 0xe550, 0x2ea2, 0x4b63, 0xd701, 0x1, 0x0);
        gbc.writeMem(0xd9b0, { 0xf8, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd9b0));
        EXPECT(0xd0, gbc.readMem(0xd9b1));
        // F8 01D1
        gbc.setState(0x88a5, 0xbc7a, 0xdc30, 0xacd5, 0x6fc7, 0xf91b, 0x0, 0x1);
        gbc.writeMem(0x88a5, { 0xf8, 0xa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0x88a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x88a5));
        EXPECT(0xa, gbc.readMem(0x88a6));
        // F8 01D3
        gbc.setState(0x77e6, 0x8d80, 0x3530, 0x6ec2, 0x4214, 0x61a0, 0x1, 0x1);
        gbc.writeMem(0x77e6, { 0xf8, 0xd2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d80, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01D4
        gbc.setState(0xe2ba, 0xc611, 0x5ba0, 0x5020, 0x5102, 0xd9b7, 0x1, 0x0);
        gbc.writeMem(0xe2ba, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc611, gbc.sp());
        EXPECT(0xe2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe2ba));
        EXPECT(0x5c, gbc.readMem(0xe2bb));
        // F8 01D5
        gbc.setState(0x2923, 0x4f69, 0xa170, 0x51dc, 0xd90d, 0x4ce0, 0x0, 0x0);
        gbc.writeMem(0x2923, { 0xf8, 0x71 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x2925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01D6
        gbc.setState(0xaeeb, 0x1243, 0x97c0, 0x3e74, 0xa016, 0x1472, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaeeb));
        EXPECT(0x41, gbc.readMem(0xaeec));
        // F8 01D7
        gbc.setState(0xc078, 0xe4ff, 0x3720, 0x3d75, 0xdab4, 0x94d2, 0x0, 0x1);
        gbc.writeMem(0xc078, { 0xf8, 0x8f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc078));
        EXPECT(0x8f, gbc.readMem(0xc079));
        // F8 01D8
        gbc.setState(0x2bcf, 0x687f, 0x9b40, 0x9371, 0x7928, 0x61af, 0x0, 0x1);
        gbc.writeMem(0x2bcf, { 0xf8, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x687f, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01D9
        gbc.setState(0x25cc, 0x6d60, 0x730, 0x638c, 0x347d, 0xebac, 0x1, 0x1);
        gbc.writeMem(0x25cc, { 0xf8, 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0x25ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01DA
        gbc.setState(0x5698, 0xb65e, 0x4790, 0xcae9, 0x999c, 0xa190, 0x1, 0x0);
        gbc.writeMem(0x5698, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb65e, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01DB
        gbc.setState(0x18d, 0xad5f, 0x15f0, 0xc885, 0xc762, 0x4840, 0x1, 0x0);
        gbc.writeMem(0x18d, { 0xf8, 0xa7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01DC
        gbc.setState(0x5dba, 0x45e7, 0x9a40, 0xeddf, 0xd356, 0x614b, 0x0, 0x0);
        gbc.writeMem(0x5dba, { 0xf8, 0xfb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01DD
        gbc.setState(0xd757, 0xf5d5, 0xd880, 0x150f, 0x305f, 0x78f9, 0x1, 0x1);
        gbc.writeMem(0xd757, { 0xf8, 0xbe });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf5d5, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd757));
        EXPECT(0xbe, gbc.readMem(0xd758));
        // F8 01DE
        gbc.setState(0xa41f, 0x9e88, 0x8ad0, 0x93e8, 0x6332, 0x86e6, 0x1, 0x1);
        gbc.writeMem(0xa41f, { 0xf8, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0xa421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa41f));
        EXPECT(0xf5, gbc.readMem(0xa420));
        // F8 01DF
        gbc.setState(0xabe3, 0x876a, 0xd7c0, 0xfcd, 0xf9b4, 0xb3c6, 0x1, 0x0);
        gbc.writeMem(0xabe3, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x876a, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xabe3));
        EXPECT(0xc8, gbc.readMem(0xabe4));
        // F8 01E0
        gbc.setState(0xf0f, 0x3fa0, 0x4330, 0xf28c, 0x7e64, 0xb996, 0x0, 0x1);
        gbc.writeMem(0xf0f, { 0xf8, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0xf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01E2
        gbc.setState(0x4f06, 0x5598, 0x3900, 0xff23, 0x159e, 0xb3f3, 0x1, 0x0);
        gbc.writeMem(0x4f06, { 0xf8, 0xc6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01E3
        gbc.setState(0x7c48, 0xc5b2, 0xc340, 0x3778, 0xdeb9, 0x86b0, 0x0, 0x0);
        gbc.writeMem(0x7c48, { 0xf8, 0x8f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01E4
        gbc.setState(0x963d, 0x32d3, 0xce00, 0x6f76, 0xff95, 0x9e45, 0x0, 0x0);
        gbc.writeMem(0x963d, { 0xf8, 0xe });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0x963f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x963d));
        EXPECT(0xe, gbc.readMem(0x963e));
        // F8 01E5
        gbc.setState(0xe9b4, 0xb226, 0xe30, 0x16f5, 0x3c1c, 0x14a2, 0x0, 0x0);
        gbc.writeMem(0xe9b4, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb226, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe9b4));
        EXPECT(0xb9, gbc.readMem(0xe9b5));
        // F8 01E6
        gbc.setState(0xdb6e, 0x2f0e, 0x6d00, 0x20c1, 0x24b8, 0x20a4, 0x0, 0x0);
        gbc.writeMem(0xdb6e, { 0xf8, 0xf6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0xdb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdb6e));
        EXPECT(0xf6, gbc.readMem(0xdb6f));
        // F8 01E7
        gbc.setState(0xbf69, 0x571f, 0xcd60, 0xffa2, 0x30b1, 0xf856, 0x0, 0x1);
        gbc.writeMem(0xbf69, { 0xf8, 0x2a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0xbf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbf69));
        EXPECT(0x2a, gbc.readMem(0xbf6a));
        // F8 01E8
        gbc.setState(0xcf25, 0x9f28, 0xeb00, 0x8529, 0x5a27, 0x94c2, 0x1, 0x0);
        gbc.writeMem(0xcf25, { 0xf8, 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0xcf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcf25));
        EXPECT(0x1a, gbc.readMem(0xcf26));
        // F8 01E9
        gbc.setState(0x2713, 0x1d29, 0x3440, 0x1096, 0xedb5, 0xaff6, 0x0, 0x0);
        gbc.writeMem(0x2713, { 0xf8, 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1d29, gbc.sp());
        EXPECT(0x2715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01EA
        gbc.setState(0xd26c, 0x40df, 0xfae0, 0xef23, 0xb4f2, 0xe788, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd26c));
        EXPECT(0xe7, gbc.readMem(0xd26d));
        // F8 01EC
        gbc.setState(0x1ef7, 0x8a60, 0x93f0, 0xb288, 0xa820, 0x992d, 0x1, 0x0);
        gbc.writeMem(0x1ef7, { 0xf8, 0x11 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8a60, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01ED
        gbc.setState(0xef2b, 0xa4e3, 0xf770, 0xa24b, 0x98f3, 0xe6ff, 0x1, 0x1);
        gbc.writeMem(0xef2b, { 0xf8, 0x1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa4e3, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xef2b));
        EXPECT(0x1, gbc.readMem(0xef2c));
        // F8 01EE
        gbc.setState(0xc0ba, 0xced3, 0x7c20, 0xd361, 0x570, 0x4ee1, 0x1, 0x1);
        gbc.writeMem(0xc0ba, { 0xf8, 0x8e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xced3, gbc.sp());
        EXPECT(0xc0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc0ba));
        EXPECT(0x8e, gbc.readMem(0xc0bb));
        // F8 01EF
        gbc.setState(0x35d6, 0x8dd6, 0x1b20, 0x6506, 0x84, 0x1ff7, 0x1, 0x1);
        gbc.writeMem(0x35d6, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8dd6, gbc.sp());
        EXPECT(0x35d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F0
        gbc.setState(0x6b9e, 0x58a4, 0xfff0, 0x92d, 0x48c7, 0xb9b8, 0x1, 0x0);
        gbc.writeMem(0x6b9e, { 0xf8, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x58a4, gbc.sp());
        EXPECT(0x6ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01F1
        gbc.setState(0x7af0, 0x9119, 0xc2c0, 0x22c8, 0x3a7f, 0x39bd, 0x0, 0x1);
        gbc.writeMem(0x7af0, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9119, gbc.sp());
        EXPECT(0x7af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01F2
        gbc.setState(0xd9c4, 0xa951, 0xd0d0, 0x9e7b, 0xfe83, 0xe3de, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0xf8, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd9c4));
        EXPECT(0x9, gbc.readMem(0xd9c5));
        // F8 01F3
        gbc.setState(0xa47, 0xef6d, 0x1b40, 0x1065, 0x4f86, 0x4416, 0x1, 0x1);
        gbc.writeMem(0xa47, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F4
        gbc.setState(0x7166, 0x8df6, 0xa450, 0xbec7, 0x95e5, 0x8fec, 0x0, 0x1);
        gbc.writeMem(0x7166, { 0xf8, 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F5
        gbc.setState(0x5e3f, 0x5486, 0xb3b0, 0x3f52, 0xfd27, 0xbcab, 0x0, 0x1);
        gbc.writeMem(0x5e3f, { 0xf8, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5486, gbc.sp());
        EXPECT(0x5e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F6
        gbc.setState(0x1b3b, 0xa966, 0xc550, 0x3d3e, 0x71b9, 0x70a6, 0x1, 0x0);
        gbc.writeMem(0x1b3b, { 0xf8, 0xc3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa966, gbc.sp());
        EXPECT(0x1b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F7
        gbc.setState(0xa755, 0x8fb6, 0x91d0, 0xf7a8, 0x3438, 0xff6d, 0x0, 0x0);
        gbc.writeMem(0xa755, { 0xf8, 0xb4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8fb6, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa755));
        EXPECT(0xb4, gbc.readMem(0xa756));
        // F8 01F8
        gbc.setState(0x25f9, 0xbb4b, 0xe660, 0x8013, 0xd555, 0xe37c, 0x1, 0x1);
        gbc.writeMem(0x25f9, { 0xf8, 0xc7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0x25fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 01F9
        gbc.setState(0xeb62, 0xc735, 0xb580, 0x27b5, 0x4828, 0xaaff, 0x1, 0x0);
        gbc.writeMem(0xeb62, { 0xf8, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc735, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb62));
        EXPECT(0xb0, gbc.readMem(0xeb63));
        // F8 01FA
        gbc.setState(0x8c21, 0xf566, 0x57e0, 0x2d22, 0x55fc, 0x6b7b, 0x1, 0x1);
        gbc.writeMem(0x8c21, { 0xf8, 0xa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0x8c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8c21));
        EXPECT(0xa, gbc.readMem(0x8c22));
        // F8 01FB
        gbc.setState(0x75ff, 0xe762, 0x4e30, 0xb17c, 0xe7f5, 0xef26, 0x0, 0x0);
        gbc.writeMem(0x75ff, { 0xf8, 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe762, gbc.sp());
        EXPECT(0x7601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01FC
        gbc.setState(0xea13, 0x1c6c, 0xdb60, 0x64b4, 0xa107, 0xe1c5, 0x1, 0x0);
        gbc.writeMem(0xea13, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xea13));
        EXPECT(0x43, gbc.readMem(0xea14));
        // F8 01FD
        gbc.setState(0x1a0, 0x6485, 0x3030, 0x7e23, 0xc1fb, 0x77c2, 0x1, 0x0);
        gbc.writeMem(0x1a0, { 0xf8, 0x28 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 01FE
        gbc.setState(0xa684, 0x418a, 0x4580, 0xcbb7, 0x462d, 0x75f4, 0x0, 0x0);
        gbc.writeMem(0xa684, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x418a, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa684));
        EXPECT(0xe5, gbc.readMem(0xa685));
        // F8 01FF
        gbc.setState(0x3f4, 0x2887, 0x6b30, 0x4c66, 0xefc7, 0x525f, 0x1, 0x0);
        gbc.writeMem(0x3f4, { 0xf8, 0xfa });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2887, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0200
        gbc.setState(0x5049, 0x65a3, 0x2c70, 0xadaa, 0x99e4, 0xbe58, 0x0, 0x0);
        gbc.writeMem(0x5049, { 0xf8, 0x79 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x65a3, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0201
        gbc.setState(0x464a, 0x616f, 0x2110, 0x7815, 0x7a82, 0x69a4, 0x0, 0x1);
        gbc.writeMem(0x464a, { 0xf8, 0xbb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0202
        gbc.setState(0x598d, 0x335, 0x37e0, 0xd33f, 0xa890, 0xb0a9, 0x0, 0x0);
        gbc.writeMem(0x598d, { 0xf8, 0x6c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0x598f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0204
        gbc.setState(0x47e5, 0x4460, 0x38a0, 0x7317, 0x4261, 0x12f9, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0x47e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0205
        gbc.setState(0x8385, 0x5e12, 0x4b60, 0x7cc3, 0x9408, 0x12fc, 0x0, 0x0);
        gbc.writeMem(0x8385, { 0xf8, 0x61 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5e12, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8385));
        EXPECT(0x61, gbc.readMem(0x8386));
        // F8 0206
        gbc.setState(0xdc0e, 0xa665, 0xe5a0, 0x8582, 0x4f83, 0xa2cc, 0x1, 0x0);
        gbc.writeMem(0xdc0e, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa665, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdc0e));
        EXPECT(0x53, gbc.readMem(0xdc0f));
        // F8 0207
        gbc.setState(0x38a8, 0x7139, 0x7430, 0x914f, 0x3d2a, 0x406a, 0x0, 0x0);
        gbc.writeMem(0x38a8, { 0xf8, 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0208
        gbc.setState(0x4c41, 0xf115, 0x4670, 0x1987, 0x63de, 0x440a, 0x0, 0x1);
        gbc.writeMem(0x4c41, { 0xf8, 0x6f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf115, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0209
        gbc.setState(0x738f, 0x1156, 0x2f30, 0x3c0c, 0x18ae, 0x3a35, 0x1, 0x0);
        gbc.writeMem(0x738f, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x7391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 020A
        gbc.setState(0x9619, 0xf898, 0xb7d0, 0x976c, 0xe9ad, 0xee86, 0x0, 0x0);
        gbc.writeMem(0x9619, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf898, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9619));
        EXPECT(0xe7, gbc.readMem(0x961a));
        // F8 020B
        gbc.setState(0x55c7, 0x7ef9, 0x9d40, 0x424c, 0xb4c8, 0x28f6, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xf8, 0x68 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7ef9, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 020C
        gbc.setState(0x3759, 0x77be, 0x4f40, 0x416d, 0xc3b6, 0x5de, 0x0, 0x0);
        gbc.writeMem(0x3759, { 0xf8, 0x4c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x77be, gbc.sp());
        EXPECT(0x375b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 020D
        gbc.setState(0x5579, 0x6633, 0x48d0, 0xadc9, 0x3ad1, 0x3dd3, 0x1, 0x0);
        gbc.writeMem(0x5579, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 020E
        gbc.setState(0x9aee, 0x681d, 0x6290, 0x602f, 0xffd6, 0x79ae, 0x0, 0x1);
        gbc.writeMem(0x9aee, { 0xf8, 0xfb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x681d, gbc.sp());
        EXPECT(0x9af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9aee));
        EXPECT(0xfb, gbc.readMem(0x9aef));
        // F8 020F
        gbc.setState(0x1860, 0x593f, 0xc5c0, 0x1b6b, 0x7437, 0x7e12, 0x0, 0x0);
        gbc.writeMem(0x1860, { 0xf8, 0x4a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x593f, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0210
        gbc.setState(0x68c8, 0xb332, 0x8520, 0x5fc7, 0xfb1a, 0xbbc0, 0x0, 0x0);
        gbc.writeMem(0x68c8, { 0xf8, 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x68ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0211
        gbc.setState(0xa1c4, 0x56c9, 0xc170, 0x8db3, 0xcdac, 0x4786, 0x0, 0x1);
        gbc.writeMem(0xa1c4, { 0xf8, 0x91 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x56c9, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa1c4));
        EXPECT(0x91, gbc.readMem(0xa1c5));
        // F8 0212
        gbc.setState(0xa181, 0xc68a, 0xf340, 0x2af3, 0x2306, 0x5ac3, 0x1, 0x1);
        gbc.writeMem(0xa181, { 0xf8, 0x7e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc68a, gbc.sp());
        EXPECT(0xa183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa181));
        EXPECT(0x7e, gbc.readMem(0xa182));
        // F8 0213
        gbc.setState(0x8144, 0xb09b, 0x6b90, 0xa0ca, 0xfac0, 0xab30, 0x1, 0x1);
        gbc.writeMem(0x8144, { 0xf8, 0x7f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8144));
        EXPECT(0x7f, gbc.readMem(0x8145));
        // F8 0214
        gbc.setState(0xdfe, 0x24a9, 0xe960, 0xd65b, 0x84b4, 0x75a9, 0x0, 0x0);
        gbc.writeMem(0xdfe, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0xe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0215
        gbc.setState(0xb4db, 0x6c2e, 0x73a0, 0x5e41, 0xe585, 0xeef9, 0x0, 0x0);
        gbc.writeMem(0xb4db, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c2e, gbc.sp());
        EXPECT(0xb4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb4db));
        EXPECT(0xad, gbc.readMem(0xb4dc));
        // F8 0216
        gbc.setState(0x5e2a, 0x1de0, 0x9040, 0x4eec, 0x37be, 0x5666, 0x0, 0x0);
        gbc.writeMem(0x5e2a, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1de0, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0217
        gbc.setState(0x4bed, 0x8447, 0xc80, 0xe0e6, 0xeeee, 0x30eb, 0x1, 0x0);
        gbc.writeMem(0x4bed, { 0xf8, 0xbe });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8447, gbc.sp());
        EXPECT(0x4bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0218
        gbc.setState(0xae19, 0x4e18, 0xdf30, 0x78fc, 0x4bac, 0xf379, 0x1, 0x0);
        gbc.writeMem(0xae19, { 0xf8, 0x7a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0xae1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xae19));
        EXPECT(0x7a, gbc.readMem(0xae1a));
        // F8 021A
        gbc.setState(0x8135, 0x39a0, 0x9e50, 0xf2ef, 0x7de3, 0x53ab, 0x1, 0x1);
        gbc.writeMem(0x8135, { 0xf8, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39a0, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8135));
        EXPECT(0x9d, gbc.readMem(0x8136));
        // F8 021B
        gbc.setState(0xc74c, 0xac6b, 0x5960, 0x5524, 0x5880, 0xf2a0, 0x1, 0x0);
        gbc.writeMem(0xc74c, { 0xf8, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xac6b, gbc.sp());
        EXPECT(0xc74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc74c));
        EXPECT(0xc2, gbc.readMem(0xc74d));
        // F8 021D
        gbc.setState(0xcd69, 0x69ba, 0xc990, 0xeeb, 0x89a6, 0x5aaa, 0x1, 0x1);
        gbc.writeMem(0xcd69, { 0xf8, 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x69ba, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcd69));
        EXPECT(0x88, gbc.readMem(0xcd6a));
        // F8 021E
        gbc.setState(0xf6d, 0x1057, 0x11f0, 0x506c, 0xd643, 0x59bf, 0x1, 0x0);
        gbc.writeMem(0xf6d, { 0xf8, 0xa9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0xf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 021F
        gbc.setState(0x2a80, 0x2d2, 0xa6e0, 0xc269, 0x1c36, 0xfe2c, 0x1, 0x0);
        gbc.writeMem(0x2a80, { 0xf8, 0x80 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2d2, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0220
        gbc.setState(0x3f3d, 0x328e, 0x2420, 0xa568, 0x4262, 0x2b03, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0221
        gbc.setState(0x1197, 0xb3b1, 0xe340, 0x3360, 0x6c71, 0x673a, 0x1, 0x1);
        gbc.writeMem(0x1197, { 0xf8, 0xcf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb3b1, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0222
        gbc.setState(0xc117, 0xa78f, 0x1e30, 0x53ca, 0x8a4c, 0x767a, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0xf8, 0xbd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc117));
        EXPECT(0xbd, gbc.readMem(0xc118));
        // F8 0223
        gbc.setState(0x364d, 0x9379, 0xfd20, 0xbab7, 0xb3df, 0xeb13, 0x1, 0x0);
        gbc.writeMem(0x364d, { 0xf8, 0xb3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0224
        gbc.setState(0x61b, 0x5153, 0x5a70, 0x77e4, 0x5b6f, 0xf4e4, 0x0, 0x1);
        gbc.writeMem(0x61b, { 0xf8, 0xa6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0225
        gbc.setState(0x191f, 0xcdb5, 0x6b70, 0x1c4c, 0xcb05, 0xaab8, 0x1, 0x0);
        gbc.writeMem(0x191f, { 0xf8, 0x1e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x1921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0226
        gbc.setState(0xc74, 0x6245, 0xb230, 0x6147, 0x152, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xc74, { 0xf8, 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6245, gbc.sp());
        EXPECT(0xc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0228
        gbc.setState(0xa13a, 0x1bec, 0xa590, 0xf176, 0x3b87, 0x9dba, 0x1, 0x1);
        gbc.writeMem(0xa13a, { 0xf8, 0x27 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1bec, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa13a));
        EXPECT(0x27, gbc.readMem(0xa13b));
        // F8 0229
        gbc.setState(0x8aeb, 0xd92f, 0xd200, 0x54fa, 0xf96d, 0x90e7, 0x1, 0x1);
        gbc.writeMem(0x8aeb, { 0xf8, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd92f, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8aeb));
        EXPECT(0x97, gbc.readMem(0x8aec));
        // F8 022A
        gbc.setState(0x667b, 0x961c, 0x4470, 0x6394, 0xd1c7, 0xa961, 0x0, 0x0);
        gbc.writeMem(0x667b, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 022B
        gbc.setState(0xd72a, 0x645f, 0x7690, 0xc800, 0xce70, 0xcd, 0x1, 0x0);
        gbc.writeMem(0xd72a, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x645f, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd72a));
        EXPECT(0x2, gbc.readMem(0xd72b));
        // F8 022C
        gbc.setState(0x682a, 0x97e9, 0x76e0, 0xcf76, 0xca8a, 0xa04b, 0x1, 0x0);
        gbc.writeMem(0x682a, { 0xf8, 0x19 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 022D
        gbc.setState(0x95c9, 0x6759, 0x6b0, 0x9853, 0x67d9, 0xf625, 0x0, 0x0);
        gbc.writeMem(0x95c9, { 0xf8, 0xed });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x95c9));
        EXPECT(0xed, gbc.readMem(0x95ca));
        // F8 022E
        gbc.setState(0x5de3, 0x2dfb, 0xed80, 0xf6cc, 0x45c0, 0xa0a6, 0x0, 0x1);
        gbc.writeMem(0x5de3, { 0xf8, 0xe8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2dfb, gbc.sp());
        EXPECT(0x5de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 022F
        gbc.setState(0xe896, 0x1f67, 0xd70, 0x8b3e, 0x7dc2, 0x47dd, 0x0, 0x0);
        gbc.writeMem(0xe896, { 0xf8, 0xdf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe896));
        EXPECT(0xdf, gbc.readMem(0xe897));
        // F8 0230
        gbc.setState(0x8c2a, 0xea51, 0x8c90, 0xbddd, 0x7816, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0x8c2a, { 0xf8, 0xd4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea51, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8c2a));
        EXPECT(0xd4, gbc.readMem(0x8c2b));
        // F8 0231
        gbc.setState(0x53a4, 0x41b8, 0x33e0, 0x7a50, 0x8a82, 0x44a3, 0x0, 0x1);
        gbc.writeMem(0x53a4, { 0xf8, 0x7c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0232
        gbc.setState(0x20be, 0xa6aa, 0xd80, 0xee1e, 0x1754, 0xc567, 0x0, 0x0);
        gbc.writeMem(0x20be, { 0xf8, 0x55 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0x20c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0233
        gbc.setState(0x3953, 0x13a7, 0x8070, 0x98ad, 0xe88b, 0x34b2, 0x1, 0x1);
        gbc.writeMem(0x3953, { 0xf8, 0x1b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x13a7, gbc.sp());
        EXPECT(0x3955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0234
        gbc.setState(0x2797, 0x368f, 0xe150, 0x7ec3, 0x26c2, 0xd33a, 0x1, 0x0);
        gbc.writeMem(0x2797, { 0xf8, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x368f, gbc.sp());
        EXPECT(0x2799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0235
        gbc.setState(0xa838, 0xac69, 0x4e40, 0x62fe, 0xf2f7, 0xe993, 0x1, 0x1);
        gbc.writeMem(0xa838, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa838));
        EXPECT(0xe6, gbc.readMem(0xa839));
        // F8 0236
        gbc.setState(0xb4cb, 0xd5d2, 0x2310, 0x6c35, 0xa322, 0xec1d, 0x1, 0x1);
        gbc.writeMem(0xb4cb, { 0xf8, 0x26 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd5d2, gbc.sp());
        EXPECT(0xb4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb4cb));
        EXPECT(0x26, gbc.readMem(0xb4cc));
        // F8 0237
        gbc.setState(0x6565, 0xb7e5, 0x8d0, 0xbb33, 0x11d, 0x7ef9, 0x1, 0x1);
        gbc.writeMem(0x6565, { 0xf8, 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb7e5, gbc.sp());
        EXPECT(0x6567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0238
        gbc.setState(0xb6f7, 0x3e33, 0xc70, 0x9377, 0x56fe, 0x4487, 0x0, 0x1);
        gbc.writeMem(0xb6f7, { 0xf8, 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3e33, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb6f7));
        EXPECT(0x8a, gbc.readMem(0xb6f8));
        // F8 0239
        gbc.setState(0x20e2, 0x8338, 0x69c0, 0x3b77, 0xc4ef, 0x1b8c, 0x1, 0x1);
        gbc.writeMem(0x20e2, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8338, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 023A
        gbc.setState(0x5dfe, 0x69bc, 0x8170, 0xfbc, 0xc8aa, 0x71ce, 0x1, 0x1);
        gbc.writeMem(0x5dfe, { 0xf8, 0x17 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x69bc, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 023B
        gbc.setState(0x77b1, 0xeba9, 0x80e0, 0x4b37, 0xfbad, 0xc1c6, 0x1, 0x1);
        gbc.writeMem(0x77b1, { 0xf8, 0xfd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeba9, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 023C
        gbc.setState(0x99b4, 0xcf21, 0xa860, 0xb024, 0xb837, 0xbd7d, 0x1, 0x0);
        gbc.writeMem(0x99b4, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcf21, gbc.sp());
        EXPECT(0x99b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x99b4));
        EXPECT(0x4b, gbc.readMem(0x99b5));
        // F8 023D
        gbc.setState(0xc8a, 0x803b, 0x1d00, 0x71f7, 0x896e, 0x8e67, 0x1, 0x0);
        gbc.writeMem(0xc8a, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0xc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 023F
        gbc.setState(0xa38e, 0x4bdf, 0xbc20, 0xe496, 0xa4db, 0xd8ed, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4bdf, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa38e));
        EXPECT(0xa1, gbc.readMem(0xa38f));
        // F8 0240
        gbc.setState(0xe1a1, 0x536d, 0x8b30, 0xf70e, 0x6483, 0xd5b2, 0x0, 0x1);
        gbc.writeMem(0xe1a1, { 0xf8, 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x536d, gbc.sp());
        EXPECT(0xe1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe1a1));
        EXPECT(0x5, gbc.readMem(0xe1a2));
        // F8 0241
        gbc.setState(0xebbd, 0xde34, 0x8010, 0xf26f, 0x5fa4, 0x623c, 0x0, 0x0);
        gbc.writeMem(0xebbd, { 0xf8, 0x16 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xde34, gbc.sp());
        EXPECT(0xebbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xebbd));
        EXPECT(0x16, gbc.readMem(0xebbe));
        // F8 0242
        gbc.setState(0x3369, 0xd6ea, 0xd2d0, 0xb195, 0x489f, 0xa55e, 0x1, 0x1);
        gbc.writeMem(0x3369, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd6ea, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0243
        gbc.setState(0xafcd, 0xa4b1, 0x1980, 0xedb3, 0x8a90, 0x1fa, 0x0, 0x0);
        gbc.writeMem(0xafcd, { 0xf8, 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xafcd));
        EXPECT(0x7d, gbc.readMem(0xafce));
        // F8 0244
        gbc.setState(0x11c1, 0x929c, 0x17e0, 0x98c7, 0xa4af, 0xf0, 0x1, 0x1);
        gbc.writeMem(0x11c1, { 0xf8, 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x11c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0245
        gbc.setState(0xbb1a, 0x54f2, 0x8de0, 0x9d45, 0x656b, 0xf740, 0x1, 0x1);
        gbc.writeMem(0xbb1a, { 0xf8, 0x93 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x54f2, gbc.sp());
        EXPECT(0xbb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbb1a));
        EXPECT(0x93, gbc.readMem(0xbb1b));
        // F8 0246
        gbc.setState(0x4171, 0x2074, 0xe460, 0x6dc1, 0x5d61, 0xabf, 0x1, 0x1);
        gbc.writeMem(0x4171, { 0xf8, 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2074, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0247
        gbc.setState(0xb798, 0x896b, 0x7970, 0xfd10, 0x229, 0xddb3, 0x0, 0x1);
        gbc.writeMem(0xb798, { 0xf8, 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x896b, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb798));
        EXPECT(0xc, gbc.readMem(0xb799));
        // F8 0248
        gbc.setState(0xeb43, 0x993f, 0xbe10, 0x5c29, 0x924b, 0xc963, 0x1, 0x1);
        gbc.writeMem(0xeb43, { 0xf8, 0x97 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb43));
        EXPECT(0x97, gbc.readMem(0xeb44));
        // F8 0249
        gbc.setState(0xb318, 0x1e9c, 0xce30, 0x1494, 0x5f05, 0x89b1, 0x1, 0x1);
        gbc.writeMem(0xb318, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e9c, gbc.sp());
        EXPECT(0xb31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb318));
        EXPECT(0x43, gbc.readMem(0xb319));
        // F8 024A
        gbc.setState(0x66c8, 0x560d, 0x4650, 0xe215, 0x220c, 0xf60b, 0x0, 0x0);
        gbc.writeMem(0x66c8, { 0xf8, 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 024B
        gbc.setState(0x838e, 0x970a, 0xacb0, 0x71ca, 0xe2d9, 0xff10, 0x1, 0x0);
        gbc.writeMem(0x838e, { 0xf8, 0xc7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x838e));
        EXPECT(0xc7, gbc.readMem(0x838f));
        // F8 024C
        gbc.setState(0x8688, 0x429c, 0x3160, 0x10f2, 0xbe54, 0xacaa, 0x0, 0x0);
        gbc.writeMem(0x8688, { 0xf8, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x429c, gbc.sp());
        EXPECT(0x868a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8688));
        EXPECT(0xc0, gbc.readMem(0x8689));
        // F8 024D
        gbc.setState(0xc12f, 0x37d8, 0x4cc0, 0xbb42, 0x9088, 0x300b, 0x1, 0x1);
        gbc.writeMem(0xc12f, { 0xf8, 0x90 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x37d8, gbc.sp());
        EXPECT(0xc131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc12f));
        EXPECT(0x90, gbc.readMem(0xc130));
        // F8 024E
        gbc.setState(0x6829, 0xa4b5, 0xb690, 0xd1e5, 0x4ec9, 0xcc69, 0x1, 0x0);
        gbc.writeMem(0x6829, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa4b5, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 024F
        gbc.setState(0xa639, 0x789b, 0xb990, 0x9d00, 0xba12, 0xa144, 0x1, 0x1);
        gbc.writeMem(0xa639, { 0xf8, 0x78 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0xa63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa639));
        EXPECT(0x78, gbc.readMem(0xa63a));
        // F8 0250
        gbc.setState(0xf4b, 0x65f1, 0x3a00, 0xc8a8, 0x716f, 0x5938, 0x1, 0x1);
        gbc.writeMem(0xf4b, { 0xf8, 0xab });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0251
        gbc.setState(0x5ec3, 0x8342, 0x39d0, 0x50e9, 0x75d5, 0x8382, 0x0, 0x0);
        gbc.writeMem(0x5ec3, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0252
        gbc.setState(0x8a7, 0x2fe3, 0xdbe0, 0x776f, 0xad4f, 0xb06a, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0xf8, 0x46 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0253
        gbc.setState(0x52c6, 0x48d8, 0x7e00, 0x2737, 0x59df, 0x170f, 0x0, 0x1);
        gbc.writeMem(0x52c6, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0x52c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0254
        gbc.setState(0x4a8a, 0x8617, 0x8c60, 0xa894, 0x5562, 0xeca3, 0x1, 0x0);
        gbc.writeMem(0x4a8a, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x4a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0256
        gbc.setState(0x2116, 0x4f93, 0xfeb0, 0x596f, 0xa875, 0x3b5f, 0x1, 0x1);
        gbc.writeMem(0x2116, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4f93, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0257
        gbc.setState(0x8996, 0x1b97, 0x46a0, 0xe197, 0x21e5, 0x546f, 0x0, 0x0);
        gbc.writeMem(0x8996, { 0xf8, 0xda });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0x8998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8996));
        EXPECT(0xda, gbc.readMem(0x8997));
        // F8 0259
        gbc.setState(0x18bb, 0xadfe, 0xa10, 0x26cd, 0x368d, 0xc4f7, 0x1, 0x0);
        gbc.writeMem(0x18bb, { 0xf8, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xadfe, gbc.sp());
        EXPECT(0x18bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 025A
        gbc.setState(0x8bdf, 0xf7bb, 0xbca0, 0x32dc, 0xb423, 0x823f, 0x1, 0x1);
        gbc.writeMem(0x8bdf, { 0xf8, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8bdf));
        EXPECT(0xac, gbc.readMem(0x8be0));
        // F8 025B
        gbc.setState(0x1f1d, 0xb7e9, 0xc530, 0xdefc, 0xb00, 0x69ed, 0x0, 0x1);
        gbc.writeMem(0x1f1d, { 0xf8, 0xa6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb7e9, gbc.sp());
        EXPECT(0x1f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 025C
        gbc.setState(0xa88e, 0xf273, 0x4430, 0x9ab4, 0xf200, 0xe4c9, 0x1, 0x0);
        gbc.writeMem(0xa88e, { 0xf8, 0x6c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf273, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa88e));
        EXPECT(0x6c, gbc.readMem(0xa88f));
        // F8 025D
        gbc.setState(0xe759, 0xc1b4, 0x5bd0, 0x94f2, 0xb481, 0x17f8, 0x0, 0x0);
        gbc.writeMem(0xe759, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0xe75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe759));
        EXPECT(0x43, gbc.readMem(0xe75a));
        // F8 025E
        gbc.setState(0xbe10, 0xfe68, 0xd290, 0xc9f2, 0x36dd, 0xcafd, 0x1, 0x1);
        gbc.writeMem(0xbe10, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0xbe12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbe10));
        EXPECT(0x95, gbc.readMem(0xbe11));
        // F8 025F
        gbc.setState(0x2097, 0x68a7, 0xa9a0, 0xfbe7, 0x9f3c, 0xfaa4, 0x1, 0x1);
        gbc.writeMem(0x2097, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x68a7, gbc.sp());
        EXPECT(0x2099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0260
        gbc.setState(0x673, 0x3240, 0x3780, 0xac81, 0xd947, 0x33dd, 0x0, 0x0);
        gbc.writeMem(0x673, { 0xf8, 0x26 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3240, gbc.sp());
        EXPECT(0x675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0261
        gbc.setState(0xd315, 0x19ee, 0xbf10, 0x45a2, 0xc8a0, 0xe7c2, 0x0, 0x0);
        gbc.writeMem(0xd315, { 0xf8, 0xfb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x19ee, gbc.sp());
        EXPECT(0xd317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd315));
        EXPECT(0xfb, gbc.readMem(0xd316));
        // F8 0262
        gbc.setState(0xca5d, 0x9314, 0x3c20, 0x8401, 0xfc0a, 0xe052, 0x1, 0x0);
        gbc.writeMem(0xca5d, { 0xf8, 0x29 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9314, gbc.sp());
        EXPECT(0xca5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xca5d));
        EXPECT(0x29, gbc.readMem(0xca5e));
        // F8 0263
        gbc.setState(0x8883, 0x7754, 0xd7c0, 0xbb5c, 0xe02b, 0x248e, 0x0, 0x1);
        gbc.writeMem(0x8883, { 0xf8, 0x57 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7754, gbc.sp());
        EXPECT(0x8885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8883));
        EXPECT(0x57, gbc.readMem(0x8884));
        // F8 0264
        gbc.setState(0x911, 0x86a1, 0x1f50, 0xf48a, 0xa7ea, 0x392b, 0x1, 0x0);
        gbc.writeMem(0x911, { 0xf8, 0x46 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x86a1, gbc.sp());
        EXPECT(0x913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0265
        gbc.setState(0x673c, 0x4a0, 0x7650, 0xe0a9, 0x276, 0x6649, 0x0, 0x1);
        gbc.writeMem(0x673c, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0266
        gbc.setState(0xdd8e, 0x90e2, 0xb250, 0x894a, 0xcc57, 0xc5e, 0x0, 0x1);
        gbc.writeMem(0xdd8e, { 0xf8, 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x90e2, gbc.sp());
        EXPECT(0xdd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdd8e));
        EXPECT(0x29, gbc.readMem(0xdd8f));
        // F8 0267
        gbc.setState(0x3e4, 0x54f4, 0xf1f0, 0xe649, 0x5ce0, 0x8dcb, 0x1, 0x1);
        gbc.writeMem(0x3e4, { 0xf8, 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x54f4, gbc.sp());
        EXPECT(0x3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0268
        gbc.setState(0x52a, 0xcf2f, 0xa2d0, 0xa06f, 0xe37, 0xfc5f, 0x1, 0x0);
        gbc.writeMem(0x52a, { 0xf8, 0x1c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0269
        gbc.setState(0x980a, 0x9f24, 0x9f60, 0x3c13, 0x2857, 0xd67b, 0x1, 0x1);
        gbc.writeMem(0x980a, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0x980c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x980a));
        EXPECT(0xc1, gbc.readMem(0x980b));
        // F8 026A
        gbc.setState(0xddb8, 0x2590, 0x9ff0, 0x469f, 0xbdb3, 0x5952, 0x1, 0x0);
        gbc.writeMem(0xddb8, { 0xf8, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2590, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xddb8));
        EXPECT(0xd9, gbc.readMem(0xddb9));
        // F8 026B
        gbc.setState(0x7668, 0x4b95, 0x8ff0, 0xd909, 0x3506, 0x13be, 0x1, 0x1);
        gbc.writeMem(0x7668, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 026C
        gbc.setState(0x29dd, 0x5f6f, 0x3540, 0xf1e7, 0xa62c, 0x44bd, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0xf8, 0xe0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x29df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 026D
        gbc.setState(0xbee3, 0xd629, 0x87b0, 0x5c54, 0xd871, 0x2cbd, 0x0, 0x1);
        gbc.writeMem(0xbee3, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd629, gbc.sp());
        EXPECT(0xbee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbee3));
        EXPECT(0x44, gbc.readMem(0xbee4));
        // F8 026E
        gbc.setState(0x7d3c, 0x51d4, 0x5870, 0x81e4, 0xc29e, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0x7d3c, { 0xf8, 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x51d4, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0270
        gbc.setState(0xb10c, 0xba93, 0xc2a0, 0xc06f, 0xaf17, 0xe590, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xba93, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb10c));
        EXPECT(0x47, gbc.readMem(0xb10d));
        // F8 0271
        gbc.setState(0x92cf, 0xa54d, 0x2d30, 0x4cca, 0xbb5a, 0x43f, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa54d, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x92cf));
        EXPECT(0xf7, gbc.readMem(0x92d0));
        // F8 0272
        gbc.setState(0xd284, 0x2a37, 0xe000, 0x1ebc, 0x6d59, 0xdef5, 0x0, 0x0);
        gbc.writeMem(0xd284, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0xd286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd284));
        EXPECT(0x6e, gbc.readMem(0xd285));
        // F8 0273
        gbc.setState(0x379a, 0x8da7, 0x53c0, 0x88f5, 0x5bf0, 0x227e, 0x1, 0x1);
        gbc.writeMem(0x379a, { 0xf8, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x379c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0274
        gbc.setState(0x9853, 0x8747, 0xc6f0, 0xdc54, 0xeb33, 0x8a49, 0x1, 0x1);
        gbc.writeMem(0x9853, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8747, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9853));
        EXPECT(0x38, gbc.readMem(0x9854));
        // F8 0275
        gbc.setState(0x29f4, 0xf5ac, 0xb6c0, 0xec64, 0x1b5e, 0xe75c, 0x0, 0x0);
        gbc.writeMem(0x29f4, { 0xf8, 0xee });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf5ac, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0278
        gbc.setState(0x248, 0x8377, 0x63a0, 0xd322, 0xd0dd, 0x31d0, 0x0, 0x1);
        gbc.writeMem(0x248, { 0xf8, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0x24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0279
        gbc.setState(0x75b3, 0xac8d, 0xae10, 0x9b10, 0xf1df, 0x16fb, 0x1, 0x1);
        gbc.writeMem(0x75b3, { 0xf8, 0x81 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac8d, gbc.sp());
        EXPECT(0x75b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 027A
        gbc.setState(0x6d85, 0x2600, 0xfeb0, 0x39e, 0xa4f, 0x7623, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2600, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 027B
        gbc.setState(0x352c, 0xce04, 0x2a0, 0xc3b8, 0x754a, 0x87ee, 0x0, 0x0);
        gbc.writeMem(0x352c, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 027C
        gbc.setState(0xdf00, 0x4992, 0x7130, 0xdfc6, 0x6f46, 0xd5a2, 0x1, 0x1);
        gbc.writeMem(0xdf00, { 0xf8, 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0xdf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdf00));
        EXPECT(0xb0, gbc.readMem(0xdf01));
        // F8 027D
        gbc.setState(0x13a1, 0x3f18, 0xd670, 0x5073, 0x4a8a, 0x90c6, 0x0, 0x1);
        gbc.writeMem(0x13a1, { 0xf8, 0xf2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0x13a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 027E
        gbc.setState(0x6351, 0x3063, 0x5cf0, 0x8098, 0x733b, 0x77d5, 0x0, 0x1);
        gbc.writeMem(0x6351, { 0xf8, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 027F
        gbc.setState(0x4fe7, 0x99e8, 0x4fb0, 0xef0c, 0xab99, 0xc90e, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0280
        gbc.setState(0x5b13, 0xfbb9, 0x7330, 0x7d3a, 0x934a, 0xb481, 0x1, 0x1);
        gbc.writeMem(0x5b13, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfbb9, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0281
        gbc.setState(0x6, 0xe5b2, 0xe50, 0xd784, 0x5da0, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0x6, { 0xf8, 0x6c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe5b2, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0283
        gbc.setState(0x14ef, 0xc6d6, 0x7b30, 0x72dc, 0xc671, 0x64a, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0xf8, 0x33 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0x14f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0284
        gbc.setState(0x48b3, 0xa509, 0x8120, 0xf768, 0xfb11, 0x69f0, 0x0, 0x0);
        gbc.writeMem(0x48b3, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa509, gbc.sp());
        EXPECT(0x48b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0285
        gbc.setState(0xce5e, 0xba8b, 0xa890, 0xd897, 0x16aa, 0xe5c6, 0x0, 0x0);
        gbc.writeMem(0xce5e, { 0xf8, 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0xce60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xce5e));
        EXPECT(0x25, gbc.readMem(0xce5f));
        // F8 0287
        gbc.setState(0xd1b3, 0x39df, 0x5a20, 0xb28b, 0xf74, 0xb9d8, 0x1, 0x0);
        gbc.writeMem(0xd1b3, { 0xf8, 0xca });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0xd1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd1b3));
        EXPECT(0xca, gbc.readMem(0xd1b4));
        // F8 0288
        gbc.setState(0x63f2, 0x65cc, 0xf460, 0x966, 0xb03b, 0x144b, 0x0, 0x1);
        gbc.writeMem(0x63f2, { 0xf8, 0x73 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x65cc, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0289
        gbc.setState(0xd619, 0x595d, 0xd810, 0xe6d6, 0xba89, 0x7e7e, 0x0, 0x1);
        gbc.writeMem(0xd619, { 0xf8, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x595d, gbc.sp());
        EXPECT(0xd61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd619));
        EXPECT(0x7a, gbc.readMem(0xd61a));
        // F8 028A
        gbc.setState(0x4eed, 0xb065, 0x8050, 0xc1fd, 0xbe0b, 0x1e7c, 0x1, 0x1);
        gbc.writeMem(0x4eed, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x4eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 028B
        gbc.setState(0x25bc, 0xf42f, 0x6140, 0xce88, 0xb538, 0xd362, 0x0, 0x1);
        gbc.writeMem(0x25bc, { 0xf8, 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 028C
        gbc.setState(0xedb8, 0x33ba, 0xdd90, 0x6b12, 0x41ef, 0x98fb, 0x0, 0x1);
        gbc.writeMem(0xedb8, { 0xf8, 0x59 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x33ba, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xedb8));
        EXPECT(0x59, gbc.readMem(0xedb9));
        // F8 028D
        gbc.setState(0xe6e4, 0x8f73, 0xc020, 0x3f9f, 0xf3d9, 0x723e, 0x0, 0x0);
        gbc.writeMem(0xe6e4, { 0xf8, 0x20 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f73, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe6e4));
        EXPECT(0x20, gbc.readMem(0xe6e5));
        // F8 028E
        gbc.setState(0x8341, 0x461d, 0xbe0, 0xc0a8, 0x4b24, 0x7896, 0x1, 0x1);
        gbc.writeMem(0x8341, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x8343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8341));
        EXPECT(0x98, gbc.readMem(0x8342));
        // F8 028F
        gbc.setState(0xdfde, 0x1c63, 0x7e60, 0x64d7, 0x14a5, 0x7f9, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0xf8, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdfde));
        EXPECT(0x2d, gbc.readMem(0xdfdf));
        // F8 0291
        gbc.setState(0x8a93, 0x86e0, 0xd9b0, 0x8ae9, 0x136e, 0x755f, 0x1, 0x1);
        gbc.writeMem(0x8a93, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x8a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8a93));
        EXPECT(0x12, gbc.readMem(0x8a94));
        // F8 0292
        gbc.setState(0x62d5, 0x9396, 0xf300, 0x6f56, 0x1b7d, 0xe0ee, 0x0, 0x1);
        gbc.writeMem(0x62d5, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0293
        gbc.setState(0x3132, 0x31f3, 0x4390, 0x4408, 0x72b2, 0xe079, 0x1, 0x0);
        gbc.writeMem(0x3132, { 0xf8, 0x17 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x3134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0294
        gbc.setState(0xb588, 0x80bb, 0x6140, 0x653b, 0xf740, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0xb588, { 0xf8, 0x7c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x80bb, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb588));
        EXPECT(0x7c, gbc.readMem(0xb589));
        // F8 0295
        gbc.setState(0xb499, 0x2e83, 0x8af0, 0x399d, 0x7a6d, 0x6569, 0x1, 0x0);
        gbc.writeMem(0xb499, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2e83, gbc.sp());
        EXPECT(0xb49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb499));
        EXPECT(0xef, gbc.readMem(0xb49a));
        // F8 0296
        gbc.setState(0xc461, 0xcd76, 0x5350, 0x6277, 0x500f, 0x1a45, 0x0, 0x1);
        gbc.writeMem(0xc461, { 0xf8, 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcd76, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc461));
        EXPECT(0xe0, gbc.readMem(0xc462));
        // F8 0297
        gbc.setState(0xa5a5, 0x61b5, 0x2630, 0xae12, 0x6950, 0xc15e, 0x0, 0x1);
        gbc.writeMem(0xa5a5, { 0xf8, 0x57 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x61b5, gbc.sp());
        EXPECT(0xa5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa5a5));
        EXPECT(0x57, gbc.readMem(0xa5a6));
        // F8 0298
        gbc.setState(0x6c28, 0xcd6d, 0x2220, 0x94ef, 0xfbce, 0xc868, 0x1, 0x0);
        gbc.writeMem(0x6c28, { 0xf8, 0xb2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcd6d, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0299
        gbc.setState(0xf7a, 0x135b, 0x8a50, 0x9eb, 0x4c34, 0x6151, 0x0, 0x0);
        gbc.writeMem(0xf7a, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 029A
        gbc.setState(0xa7e3, 0x34f0, 0x3ce0, 0x6022, 0x786b, 0x7b2, 0x1, 0x1);
        gbc.writeMem(0xa7e3, { 0xf8, 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0xa7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7e3));
        EXPECT(0x7, gbc.readMem(0xa7e4));
        // F8 029B
        gbc.setState(0x1bb0, 0x589c, 0x8630, 0x3388, 0xc87d, 0x172f, 0x1, 0x0);
        gbc.writeMem(0x1bb0, { 0xf8, 0x36 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x589c, gbc.sp());
        EXPECT(0x1bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 029C
        gbc.setState(0x9ab5, 0xec70, 0x4520, 0xdf68, 0xf366, 0x6489, 0x1, 0x1);
        gbc.writeMem(0x9ab5, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec70, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9ab5));
        EXPECT(0xc1, gbc.readMem(0x9ab6));
        // F8 029D
        gbc.setState(0xd6f2, 0x915e, 0xa610, 0x71be, 0x7183, 0x8584, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0xf8, 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd6f2));
        EXPECT(0xa2, gbc.readMem(0xd6f3));
        // F8 029E
        gbc.setState(0x7d4b, 0xe648, 0x7750, 0xea4d, 0x8389, 0x505c, 0x0, 0x0);
        gbc.writeMem(0x7d4b, { 0xf8, 0xae });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe648, gbc.sp());
        EXPECT(0x7d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 029F
        gbc.setState(0x4e84, 0x5db2, 0x2510, 0xf86e, 0x83b4, 0xe904, 0x0, 0x0);
        gbc.writeMem(0x4e84, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02A0
        gbc.setState(0x718, 0xf5eb, 0x3b90, 0x7be7, 0xbc85, 0x429d, 0x0, 0x0);
        gbc.writeMem(0x718, { 0xf8, 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf5eb, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02A1
        gbc.setState(0x38e8, 0xb002, 0x4590, 0xa3a2, 0x9495, 0xe92, 0x1, 0x1);
        gbc.writeMem(0x38e8, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb002, gbc.sp());
        EXPECT(0x38ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02A2
        gbc.setState(0x5e2a, 0x1b4c, 0x7730, 0x4ec3, 0xd8f2, 0xf3f3, 0x1, 0x1);
        gbc.writeMem(0x5e2a, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1b4c, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02A3
        gbc.setState(0x28ed, 0x14f1, 0x2dc0, 0x8c54, 0xcfe8, 0x41de, 0x1, 0x0);
        gbc.writeMem(0x28ed, { 0xf8, 0x4f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x14f1, gbc.sp());
        EXPECT(0x28ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02A4
        gbc.setState(0xb74a, 0xb63e, 0xfd90, 0x383d, 0xd0cd, 0x1563, 0x1, 0x1);
        gbc.writeMem(0xb74a, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb63e, gbc.sp());
        EXPECT(0xb74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb74a));
        EXPECT(0xec, gbc.readMem(0xb74b));
        // F8 02A5
        gbc.setState(0x70fc, 0xfe42, 0x210, 0x4b36, 0x8cf8, 0x23be, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0xf8, 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfe42, gbc.sp());
        EXPECT(0x70fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02A6
        gbc.setState(0x5383, 0x79ce, 0x29a0, 0x3f6c, 0x3d3, 0x68ae, 0x1, 0x1);
        gbc.writeMem(0x5383, { 0xf8, 0x87 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x79ce, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02A7
        gbc.setState(0xe265, 0x4e9a, 0x2c70, 0xd591, 0x8437, 0xf671, 0x1, 0x0);
        gbc.writeMem(0xe265, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e9a, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe265));
        EXPECT(0xcd, gbc.readMem(0xe266));
        // F8 02A8
        gbc.setState(0xccff, 0xde24, 0xdf40, 0xbfe6, 0x3aec, 0x104c, 0x0, 0x0);
        gbc.writeMem(0xccff, { 0xf8, 0xbe });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xccff));
        EXPECT(0xbe, gbc.readMem(0xcd00));
        // F8 02A9
        gbc.setState(0x2aee, 0x8308, 0x3920, 0x7d8e, 0xfa3b, 0x34f2, 0x1, 0x1);
        gbc.writeMem(0x2aee, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0x2af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02AA
        gbc.setState(0xef4f, 0x8b22, 0xa080, 0x9aad, 0xd4f6, 0xc4ab, 0x1, 0x0);
        gbc.writeMem(0xef4f, { 0xf8, 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xef4f));
        EXPECT(0x8f, gbc.readMem(0xef50));
        // F8 02AB
        gbc.setState(0x61fa, 0xe12f, 0xd780, 0xdfaf, 0x4ce5, 0x559d, 0x1, 0x0);
        gbc.writeMem(0x61fa, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe12f, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02AC
        gbc.setState(0xaca1, 0x4710, 0xdf0, 0x6cad, 0xea22, 0x85fe, 0x0, 0x0);
        gbc.writeMem(0xaca1, { 0xf8, 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0xaca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaca1));
        EXPECT(0xbd, gbc.readMem(0xaca2));
        // F8 02AD
        gbc.setState(0xb899, 0xbc9d, 0x19a0, 0x399d, 0x9183, 0x5152, 0x0, 0x1);
        gbc.writeMem(0xb899, { 0xf8, 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb899));
        EXPECT(0x92, gbc.readMem(0xb89a));
        // F8 02AE
        gbc.setState(0x7cf6, 0x2343, 0x7fd0, 0x6907, 0xec76, 0x20b5, 0x1, 0x0);
        gbc.writeMem(0x7cf6, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2343, gbc.sp());
        EXPECT(0x7cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02AF
        gbc.setState(0x2515, 0x2960, 0xa250, 0x8cc8, 0xfe1f, 0x7d92, 0x1, 0x0);
        gbc.writeMem(0x2515, { 0xf8, 0x17 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2960, gbc.sp());
        EXPECT(0x2517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02B0
        gbc.setState(0x43a0, 0xe9bc, 0xe460, 0x2d12, 0x13cb, 0xf007, 0x0, 0x0);
        gbc.writeMem(0x43a0, { 0xf8, 0x66 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe9bc, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02B1
        gbc.setState(0x65de, 0x798c, 0x50, 0x663f, 0xb004, 0x9e71, 0x0, 0x1);
        gbc.writeMem(0x65de, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x798c, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02B2
        gbc.setState(0x3acf, 0xdcf1, 0xd430, 0xa012, 0x5805, 0x5ff5, 0x0, 0x1);
        gbc.writeMem(0x3acf, { 0xf8, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0x3ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02B3
        gbc.setState(0x3449, 0x4334, 0xf8a0, 0xc3cd, 0x90c8, 0x544, 0x0, 0x1);
        gbc.writeMem(0x3449, { 0xf8, 0xce });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0x344b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02B4
        gbc.setState(0xe891, 0x7a6b, 0xf20, 0x29cd, 0x4d39, 0x2f0b, 0x1, 0x1);
        gbc.writeMem(0xe891, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7a6b, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe891));
        EXPECT(0x65, gbc.readMem(0xe892));
        // F8 02B5
        gbc.setState(0x37a, 0xe9d8, 0xe9b0, 0xecc3, 0xaabc, 0xa934, 0x0, 0x1);
        gbc.writeMem(0x37a, { 0xf8, 0x16 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02B6
        gbc.setState(0xbb0, 0xc792, 0xfa10, 0x8112, 0x706c, 0xb7a0, 0x1, 0x0);
        gbc.writeMem(0xbb0, { 0xf8, 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc792, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02B7
        gbc.setState(0x69bf, 0xd373, 0xa6b0, 0x6131, 0x8167, 0x50f3, 0x0, 0x0);
        gbc.writeMem(0x69bf, { 0xf8, 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02B8
        gbc.setState(0x802e, 0xb959, 0xbaa0, 0xaebe, 0x2c21, 0x58c9, 0x1, 0x0);
        gbc.writeMem(0x802e, { 0xf8, 0x28 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb959, gbc.sp());
        EXPECT(0x8030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x802e));
        EXPECT(0x28, gbc.readMem(0x802f));
        // F8 02B9
        gbc.setState(0x5622, 0xa6d0, 0x5e0, 0xf0cc, 0x3db3, 0xd605, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0xf8, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa6d0, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02BA
        gbc.setState(0xc456, 0xa3df, 0x9a80, 0x15ae, 0xd888, 0xa270, 0x0, 0x1);
        gbc.writeMem(0xc456, { 0xf8, 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc456));
        EXPECT(0x10, gbc.readMem(0xc457));
        // F8 02BB
        gbc.setState(0x7390, 0x9ccd, 0x7430, 0xbff, 0xaf9, 0x1138, 0x0, 0x0);
        gbc.writeMem(0x7390, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ccd, gbc.sp());
        EXPECT(0x7392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02BC
        gbc.setState(0xa7da, 0x8f55, 0x6dd0, 0x5fd0, 0x4196, 0x9e76, 0x0, 0x1);
        gbc.writeMem(0xa7da, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f55, gbc.sp());
        EXPECT(0xa7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7da));
        EXPECT(0x31, gbc.readMem(0xa7db));
        // F8 02BD
        gbc.setState(0x379a, 0x97e, 0xe750, 0xf6e2, 0x43b, 0x4431, 0x0, 0x1);
        gbc.writeMem(0x379a, { 0xf8, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x97e, gbc.sp());
        EXPECT(0x379c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02BE
        gbc.setState(0x26a, 0x44b6, 0xb0a0, 0xe3b3, 0xb830, 0xaff6, 0x1, 0x1);
        gbc.writeMem(0x26a, { 0xf8, 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02BF
        gbc.setState(0x2469, 0xe11f, 0xc990, 0x25f2, 0x578e, 0x8b3f, 0x0, 0x0);
        gbc.writeMem(0x2469, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe11f, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02C0
        gbc.setState(0x7a6, 0x3e80, 0x89c0, 0xf4ae, 0x5b54, 0x9, 0x0, 0x1);
        gbc.writeMem(0x7a6, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e80, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02C1
        gbc.setState(0xab3c, 0x1c30, 0xdac0, 0x11fa, 0x5799, 0x97ed, 0x0, 0x0);
        gbc.writeMem(0xab3c, { 0xf8, 0x33 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xab3c));
        EXPECT(0x33, gbc.readMem(0xab3d));
        // F8 02C2
        gbc.setState(0xc359, 0x54e2, 0x53a0, 0xda74, 0x7512, 0xc07f, 0x1, 0x0);
        gbc.writeMem(0xc359, { 0xf8, 0x4f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x54e2, gbc.sp());
        EXPECT(0xc35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc359));
        EXPECT(0x4f, gbc.readMem(0xc35a));
        // F8 02C3
        gbc.setState(0x8042, 0xd69d, 0x6550, 0xc07, 0xda76, 0xcbfa, 0x1, 0x1);
        gbc.writeMem(0x8042, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8042));
        EXPECT(0xb8, gbc.readMem(0x8043));
        // F8 02C4
        gbc.setState(0x9902, 0x457b, 0x9240, 0x79bf, 0x470f, 0x655f, 0x1, 0x0);
        gbc.writeMem(0x9902, { 0xf8, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9902));
        EXPECT(0xd2, gbc.readMem(0x9903));
        // F8 02C5
        gbc.setState(0x714b, 0x7657, 0xd90, 0x5863, 0xe0b3, 0x2164, 0x0, 0x1);
        gbc.writeMem(0x714b, { 0xf8, 0xe2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7657, gbc.sp());
        EXPECT(0x714d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02C6
        gbc.setState(0x9905, 0x431b, 0x6c70, 0x69c0, 0x938c, 0x6cc6, 0x0, 0x1);
        gbc.writeMem(0x9905, { 0xf8, 0xf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0x9907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9905));
        EXPECT(0xf, gbc.readMem(0x9906));
        // F8 02C7
        gbc.setState(0xcf99, 0xc089, 0x640, 0x9bbe, 0x180f, 0x5ac2, 0x1, 0x0);
        gbc.writeMem(0xcf99, { 0xf8, 0xb3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcf99));
        EXPECT(0xb3, gbc.readMem(0xcf9a));
        // F8 02C8
        gbc.setState(0x15e, 0x6847, 0x61d0, 0x7028, 0x6ffc, 0x31ad, 0x1, 0x1);
        gbc.writeMem(0x15e, { 0xf8, 0x71 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6847, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02C9
        gbc.setState(0xbfc9, 0xe6c0, 0x20b0, 0xf979, 0x54c4, 0x5d7c, 0x0, 0x1);
        gbc.writeMem(0xbfc9, { 0xf8, 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe6c0, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbfc9));
        EXPECT(0x8f, gbc.readMem(0xbfca));
        // F8 02CA
        gbc.setState(0xafc9, 0xe293, 0xe350, 0xa561, 0xab67, 0x7834, 0x1, 0x1);
        gbc.writeMem(0xafc9, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xafc9));
        EXPECT(0x47, gbc.readMem(0xafca));
        // F8 02CB
        gbc.setState(0xa4eb, 0xd6c1, 0xc110, 0x71a6, 0x74b7, 0x9a63, 0x1, 0x0);
        gbc.writeMem(0xa4eb, { 0xf8, 0xd6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0xa4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa4eb));
        EXPECT(0xd6, gbc.readMem(0xa4ec));
        // F8 02CC
        gbc.setState(0x6273, 0xc593, 0xdc30, 0x5b04, 0x904c, 0xb85d, 0x0, 0x1);
        gbc.writeMem(0x6273, { 0xf8, 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0x6275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02CD
        gbc.setState(0x9736, 0xbf17, 0x8230, 0xc42a, 0x816e, 0xb76c, 0x1, 0x0);
        gbc.writeMem(0x9736, { 0xf8, 0x9a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbf17, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9736));
        EXPECT(0x9a, gbc.readMem(0x9737));
        // F8 02CE
        gbc.setState(0xaf29, 0x358b, 0x48e0, 0xb81b, 0x95ed, 0x3a57, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0xf8, 0x92 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x358b, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaf29));
        EXPECT(0x92, gbc.readMem(0xaf2a));
        // F8 02CF
        gbc.setState(0x6868, 0x56c, 0x56d0, 0xf8b9, 0x64b6, 0x6bf3, 0x1, 0x1);
        gbc.writeMem(0x6868, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0x686a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02D0
        gbc.setState(0x81e6, 0xb36e, 0x5e60, 0xcd62, 0xfabd, 0x96bf, 0x0, 0x0);
        gbc.writeMem(0x81e6, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb36e, gbc.sp());
        EXPECT(0x81e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x81e6));
        EXPECT(0x98, gbc.readMem(0x81e7));
        // F8 02D1
        gbc.setState(0x8638, 0x45fa, 0x4410, 0x4df3, 0x5d18, 0x3a29, 0x1, 0x1);
        gbc.writeMem(0x8638, { 0xf8, 0x87 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8638));
        EXPECT(0x87, gbc.readMem(0x8639));
        // F8 02D2
        gbc.setState(0x2cbc, 0x2c70, 0x5cd0, 0x5669, 0x31a9, 0x35c, 0x0, 0x1);
        gbc.writeMem(0x2cbc, { 0xf8, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02D3
        gbc.setState(0x2d5c, 0x425d, 0xdde0, 0x6999, 0x56e6, 0x75a9, 0x0, 0x1);
        gbc.writeMem(0x2d5c, { 0xf8, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x425d, gbc.sp());
        EXPECT(0x2d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02D4
        gbc.setState(0x6bc6, 0xaed0, 0xc90, 0xec4, 0xc5db, 0x407b, 0x1, 0x1);
        gbc.writeMem(0x6bc6, { 0xf8, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaed0, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02D5
        gbc.setState(0xdae5, 0x3306, 0x5050, 0xc859, 0x4e5b, 0x3d93, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0xf8, 0xef });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3306, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdae5));
        EXPECT(0xef, gbc.readMem(0xdae6));
        // F8 02D6
        gbc.setState(0x6c00, 0x84fd, 0x5a00, 0x5dcc, 0x246b, 0x2f1e, 0x0, 0x1);
        gbc.writeMem(0x6c00, { 0xf8, 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x84fd, gbc.sp());
        EXPECT(0x6c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02D7
        gbc.setState(0x31c7, 0xd813, 0x1be0, 0xfffa, 0x920, 0x611c, 0x1, 0x1);
        gbc.writeMem(0x31c7, { 0xf8, 0xc6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd813, gbc.sp());
        EXPECT(0x31c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02D8
        gbc.setState(0xde48, 0x3c7a, 0xfc0, 0x20ec, 0xf664, 0x8906, 0x1, 0x0);
        gbc.writeMem(0xde48, { 0xf8, 0x3d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c7a, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde48));
        EXPECT(0x3d, gbc.readMem(0xde49));
        // F8 02D9
        gbc.setState(0x4330, 0x3e44, 0xa530, 0x24a9, 0x8350, 0xc553, 0x1, 0x0);
        gbc.writeMem(0x4330, { 0xf8, 0xba });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3e44, gbc.sp());
        EXPECT(0x4332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02DA
        gbc.setState(0xe41f, 0xbd15, 0xd970, 0x6fea, 0x4ff2, 0x37d4, 0x1, 0x0);
        gbc.writeMem(0xe41f, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0xe421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe41f));
        EXPECT(0x22, gbc.readMem(0xe420));
        // F8 02DB
        gbc.setState(0xcf87, 0x1719, 0xe9a0, 0x9639, 0xd377, 0x31a2, 0x1, 0x1);
        gbc.writeMem(0xcf87, { 0xf8, 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1719, gbc.sp());
        EXPECT(0xcf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcf87));
        EXPECT(0x1d, gbc.readMem(0xcf88));
        // F8 02DC
        gbc.setState(0x8626, 0x4887, 0x1a90, 0x6dfc, 0x6693, 0xec77, 0x0, 0x0);
        gbc.writeMem(0x8626, { 0xf8, 0x92 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x8628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8626));
        EXPECT(0x92, gbc.readMem(0x8627));
        // F8 02DD
        gbc.setState(0xdac5, 0xef5, 0x4200, 0xffb5, 0xa187, 0x3a76, 0x0, 0x0);
        gbc.writeMem(0xdac5, { 0xf8, 0xa6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdac5));
        EXPECT(0xa6, gbc.readMem(0xdac6));
        // F8 02DE
        gbc.setState(0x47da, 0x3c7, 0xd600, 0x49e8, 0x176, 0x867e, 0x0, 0x0);
        gbc.writeMem(0x47da, { 0xf8, 0x5f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0x47dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02DF
        gbc.setState(0x49b8, 0x239, 0xb5d0, 0x33d4, 0x6b60, 0x9786, 0x1, 0x0);
        gbc.writeMem(0x49b8, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x239, gbc.sp());
        EXPECT(0x49ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02E0
        gbc.setState(0x5d79, 0x734a, 0xbd50, 0x64e8, 0xc8d1, 0x1161, 0x0, 0x1);
        gbc.writeMem(0x5d79, { 0xf8, 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x5d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02E1
        gbc.setState(0xeb1e, 0x5844, 0x28c0, 0x5c04, 0x880, 0xc1ac, 0x0, 0x0);
        gbc.writeMem(0xeb1e, { 0xf8, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5844, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeb1e));
        EXPECT(0x31, gbc.readMem(0xeb1f));
        // F8 02E2
        gbc.setState(0xdab1, 0xecd6, 0x3de0, 0x7491, 0xd9dd, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0xdab1, { 0xf8, 0x34 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0xdab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdab1));
        EXPECT(0x34, gbc.readMem(0xdab2));
        // F8 02E3
        gbc.setState(0xd05e, 0x79d5, 0x9960, 0x2e8d, 0x2d3b, 0x485d, 0x1, 0x0);
        gbc.writeMem(0xd05e, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x79d5, gbc.sp());
        EXPECT(0xd060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd05e));
        EXPECT(0x84, gbc.readMem(0xd05f));
        // F8 02E4
        gbc.setState(0xacca, 0xbaf6, 0x9e50, 0x52c9, 0xd9cb, 0xfe4d, 0x0, 0x1);
        gbc.writeMem(0xacca, { 0xf8, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbaf6, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xacca));
        EXPECT(0xfb, gbc.readMem(0xaccb));
        // F8 02E5
        gbc.setState(0x7a51, 0x8c2d, 0x31f0, 0x156, 0x5adf, 0x9409, 0x0, 0x1);
        gbc.writeMem(0x7a51, { 0xf8, 0x7c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8c2d, gbc.sp());
        EXPECT(0x7a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02E6
        gbc.setState(0x83da, 0xc5eb, 0x8fa0, 0x2f8b, 0x4e02, 0x18eb, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0xf8, 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0x83dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x83da));
        EXPECT(0x3c, gbc.readMem(0x83db));
        // F8 02E7
        gbc.setState(0xde31, 0x3cbe, 0x9130, 0x2654, 0xe318, 0x1f66, 0x1, 0x1);
        gbc.writeMem(0xde31, { 0xf8, 0x4c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3cbe, gbc.sp());
        EXPECT(0xde33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde31));
        EXPECT(0x4c, gbc.readMem(0xde32));
        // F8 02E8
        gbc.setState(0x90f6, 0x3da9, 0xd470, 0xcc73, 0x1780, 0xdc62, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x90f6));
        EXPECT(0xb9, gbc.readMem(0x90f7));
        // F8 02E9
        gbc.setState(0x5d91, 0x5d50, 0x2550, 0x73a4, 0xf356, 0x3701, 0x0, 0x0);
        gbc.writeMem(0x5d91, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02EA
        gbc.setState(0x469e, 0x3c70, 0xdda0, 0xa6dd, 0x8140, 0x781b, 0x1, 0x1);
        gbc.writeMem(0x469e, { 0xf8, 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3c70, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02EB
        gbc.setState(0x41cb, 0x47cc, 0x2210, 0x89eb, 0x9c34, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x41cb, { 0xf8, 0xdc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x47cc, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02EC
        gbc.setState(0xdbb, 0x1583, 0xc5c0, 0x7fca, 0xa00b, 0xc7d2, 0x1, 0x1);
        gbc.writeMem(0xdbb, { 0xf8, 0x75 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02ED
        gbc.setState(0x812e, 0xea9a, 0x58b0, 0x7254, 0x3915, 0x731, 0x1, 0x0);
        gbc.writeMem(0x812e, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xea9a, gbc.sp());
        EXPECT(0x8130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x812e));
        EXPECT(0xf0, gbc.readMem(0x812f));
        // F8 02EE
        gbc.setState(0x6f0b, 0x49c8, 0x90d0, 0x1213, 0xe18c, 0x2ec1, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xf8, 0x62 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x49c8, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02EF
        gbc.setState(0x2c83, 0x12a3, 0x350, 0x3c9b, 0xe8e8, 0xb8ab, 0x0, 0x1);
        gbc.writeMem(0x2c83, { 0xf8, 0x81 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x12a3, gbc.sp());
        EXPECT(0x2c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02F0
        gbc.setState(0x9f23, 0xe5da, 0xfbf0, 0x717b, 0xd46a, 0x1fb6, 0x0, 0x0);
        gbc.writeMem(0x9f23, { 0xf8, 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x9f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9f23));
        EXPECT(0x2c, gbc.readMem(0x9f24));
        // F8 02F1
        gbc.setState(0x5d04, 0x8f62, 0x9760, 0x1b16, 0xa5af, 0x952a, 0x0, 0x1);
        gbc.writeMem(0x5d04, { 0xf8, 0x7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8f62, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02F2
        gbc.setState(0x1dcf, 0xb9f1, 0x9870, 0xd331, 0x5c6d, 0xf17f, 0x0, 0x0);
        gbc.writeMem(0x1dcf, { 0xf8, 0x26 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02F3
        gbc.setState(0xd839, 0x1113, 0xa740, 0x58db, 0x3066, 0x3a64, 0x1, 0x0);
        gbc.writeMem(0xd839, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1113, gbc.sp());
        EXPECT(0xd83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd839));
        EXPECT(0x5c, gbc.readMem(0xd83a));
        // F8 02F4
        gbc.setState(0xd34e, 0x615d, 0xd5f0, 0x5ab6, 0xeeb8, 0x284b, 0x0, 0x0);
        gbc.writeMem(0xd34e, { 0xf8, 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd34e));
        EXPECT(0x3c, gbc.readMem(0xd34f));
        // F8 02F5
        gbc.setState(0xd613, 0x9658, 0x2350, 0xa727, 0x4790, 0x4010, 0x1, 0x1);
        gbc.writeMem(0xd613, { 0xf8, 0x7e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9658, gbc.sp());
        EXPECT(0xd615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd613));
        EXPECT(0x7e, gbc.readMem(0xd614));
        // F8 02F6
        gbc.setState(0xc95b, 0x9f0e, 0x6060, 0x8cd6, 0x12b5, 0x1fc9, 0x1, 0x0);
        gbc.writeMem(0xc95b, { 0xf8, 0x58 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9f0e, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc95b));
        EXPECT(0x58, gbc.readMem(0xc95c));
        // F8 02F7
        gbc.setState(0x3310, 0x71fa, 0x6ec0, 0x5b6, 0x9dce, 0xf9cf, 0x0, 0x0);
        gbc.writeMem(0x3310, { 0xf8, 0x26 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0x3312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02F8
        gbc.setState(0x6dbc, 0x3ffe, 0xaa70, 0x1cf9, 0x4dec, 0x3cae, 0x0, 0x0);
        gbc.writeMem(0x6dbc, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3ffe, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02F9
        gbc.setState(0x67f1, 0xcd50, 0xa700, 0x672c, 0x74a9, 0xc211, 0x1, 0x0);
        gbc.writeMem(0x67f1, { 0xf8, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x67f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 02FA
        gbc.setState(0xeca7, 0xc8ab, 0x840, 0x7306, 0xfb2a, 0x472d, 0x1, 0x0);
        gbc.writeMem(0xeca7, { 0xf8, 0xf4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeca7));
        EXPECT(0xf4, gbc.readMem(0xeca8));
        // F8 02FB
        gbc.setState(0xd75c, 0x3931, 0x1950, 0xabaa, 0xe59a, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0xd75c, { 0xf8, 0xc5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd75c));
        EXPECT(0xc5, gbc.readMem(0xd75d));
        // F8 02FD
        gbc.setState(0xb69a, 0x7522, 0xf200, 0xe569, 0x917b, 0x27ee, 0x0, 0x0);
        gbc.writeMem(0xb69a, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7522, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb69a));
        EXPECT(0x3f, gbc.readMem(0xb69b));
        // F8 02FE
        gbc.setState(0x71cf, 0x4bb1, 0xfa90, 0xbae5, 0x776, 0xc312, 0x1, 0x0);
        gbc.writeMem(0x71cf, { 0xf8, 0xf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4bb1, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 02FF
        gbc.setState(0x9096, 0x85e, 0xf8c0, 0x7e3c, 0xe8d2, 0x9b12, 0x0, 0x1);
        gbc.writeMem(0x9096, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x85e, gbc.sp());
        EXPECT(0x9098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9096));
        EXPECT(0x63, gbc.readMem(0x9097));
        // F8 0300
        gbc.setState(0x8189, 0x23b5, 0x1b20, 0x9ac4, 0xb0c2, 0x28b2, 0x1, 0x1);
        gbc.writeMem(0x8189, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0x818b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8189));
        EXPECT(0x53, gbc.readMem(0x818a));
        // F8 0301
        gbc.setState(0x698a, 0x161b, 0x7dd0, 0x2c6, 0x3921, 0xd0dc, 0x0, 0x1);
        gbc.writeMem(0x698a, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x161b, gbc.sp());
        EXPECT(0x698c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0302
        gbc.setState(0x5ac8, 0x6a3a, 0x4fe0, 0xa0ad, 0x7449, 0x2108, 0x0, 0x1);
        gbc.writeMem(0x5ac8, { 0xf8, 0xf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0303
        gbc.setState(0xc66c, 0x7b5, 0xe350, 0x42b7, 0xd1e1, 0x12d8, 0x0, 0x1);
        gbc.writeMem(0xc66c, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc66c));
        EXPECT(0xc8, gbc.readMem(0xc66d));
        // F8 0304
        gbc.setState(0xa7cf, 0x9d4, 0x17d0, 0x73c9, 0x76bb, 0x3adc, 0x0, 0x1);
        gbc.writeMem(0xa7cf, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9d4, gbc.sp());
        EXPECT(0xa7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7cf));
        EXPECT(0xe6, gbc.readMem(0xa7d0));
        // F8 0305
        gbc.setState(0xa6c4, 0xbf6e, 0xd4a0, 0x4b72, 0xfc02, 0x9869, 0x1, 0x1);
        gbc.writeMem(0xa6c4, { 0xf8, 0x30 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa6c4));
        EXPECT(0x30, gbc.readMem(0xa6c5));
        // F8 0306
        gbc.setState(0xb2c3, 0xd6a1, 0x7970, 0xb207, 0x108e, 0xc2b7, 0x0, 0x1);
        gbc.writeMem(0xb2c3, { 0xf8, 0xd6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd6a1, gbc.sp());
        EXPECT(0xb2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb2c3));
        EXPECT(0xd6, gbc.readMem(0xb2c4));
        // F8 0307
        gbc.setState(0x1506, 0x6576, 0x1440, 0xb828, 0x7e7c, 0x6c51, 0x0, 0x0);
        gbc.writeMem(0x1506, { 0xf8, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6576, gbc.sp());
        EXPECT(0x1508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0308
        gbc.setState(0x2481, 0x9376, 0x4dd0, 0xb5a7, 0x8909, 0x520d, 0x0, 0x1);
        gbc.writeMem(0x2481, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9376, gbc.sp());
        EXPECT(0x2483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0309
        gbc.setState(0x8729, 0x21bb, 0xace0, 0xf3c1, 0x1b70, 0x46ea, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0xf8, 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8729));
        EXPECT(0xb7, gbc.readMem(0x872a));
        // F8 030A
        gbc.setState(0xe2f6, 0xaaa2, 0xcc0, 0x4768, 0xb63d, 0x7491, 0x0, 0x1);
        gbc.writeMem(0xe2f6, { 0xf8, 0xfa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe2f6));
        EXPECT(0xfa, gbc.readMem(0xe2f7));
        // F8 030B
        gbc.setState(0xa4c1, 0x4897, 0x7e40, 0x8715, 0xeff7, 0xbfcf, 0x0, 0x0);
        gbc.writeMem(0xa4c1, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa4c1));
        EXPECT(0xe5, gbc.readMem(0xa4c2));
        // F8 030C
        gbc.setState(0x2f17, 0x3c3b, 0xb240, 0xa5f1, 0xb83f, 0x8646, 0x1, 0x0);
        gbc.writeMem(0x2f17, { 0xf8, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3c3b, gbc.sp());
        EXPECT(0x2f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 030D
        gbc.setState(0x3123, 0xb752, 0xb40, 0x32f4, 0xc16, 0xd487, 0x0, 0x0);
        gbc.writeMem(0x3123, { 0xf8, 0xe7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x3125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 030E
        gbc.setState(0x22b4, 0xf954, 0x390, 0xffef, 0xd0c9, 0xed52, 0x1, 0x0);
        gbc.writeMem(0x22b4, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0x22b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 030F
        gbc.setState(0x37e3, 0x7e25, 0xa2a0, 0x8d5a, 0x48a0, 0x6a48, 0x1, 0x1);
        gbc.writeMem(0x37e3, { 0xf8, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0310
        gbc.setState(0xde0f, 0xf7a3, 0xdcb0, 0xad08, 0xac7e, 0x9d2f, 0x0, 0x0);
        gbc.writeMem(0xde0f, { 0xf8, 0x41 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0xde11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde0f));
        EXPECT(0x41, gbc.readMem(0xde10));
        // F8 0311
        gbc.setState(0xdd3b, 0xf017, 0x9340, 0x3495, 0x2ec0, 0x8416, 0x1, 0x0);
        gbc.writeMem(0xdd3b, { 0xf8, 0xd1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf017, gbc.sp());
        EXPECT(0xdd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdd3b));
        EXPECT(0xd1, gbc.readMem(0xdd3c));
        // F8 0312
        gbc.setState(0xde69, 0xd61a, 0x9f60, 0x78ed, 0x6634, 0x59bf, 0x0, 0x1);
        gbc.writeMem(0xde69, { 0xf8, 0x2b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0xde6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xde69));
        EXPECT(0x2b, gbc.readMem(0xde6a));
        // F8 0313
        gbc.setState(0xed4d, 0x49eb, 0xa790, 0x45d4, 0x4f24, 0xa998, 0x0, 0x1);
        gbc.writeMem(0xed4d, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x49eb, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xed4d));
        EXPECT(0x44, gbc.readMem(0xed4e));
        // F8 0314
        gbc.setState(0xbe41, 0xe2c6, 0x1750, 0xae45, 0x6c95, 0x3678, 0x0, 0x1);
        gbc.writeMem(0xbe41, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbe41));
        EXPECT(0xf7, gbc.readMem(0xbe42));
        // F8 0315
        gbc.setState(0xdd4, 0x8e90, 0x1850, 0x398a, 0xc97e, 0x5dcc, 0x0, 0x1);
        gbc.writeMem(0xdd4, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0xdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0316
        gbc.setState(0xa5f8, 0xff0b, 0x9c30, 0x7c49, 0xe5e5, 0xfbb8, 0x0, 0x0);
        gbc.writeMem(0xa5f8, { 0xf8, 0x4b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xff0b, gbc.sp());
        EXPECT(0xa5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa5f8));
        EXPECT(0x4b, gbc.readMem(0xa5f9));
        // F8 0318
        gbc.setState(0x9fb2, 0x1dc7, 0x8860, 0x173d, 0x9cc8, 0xe9e4, 0x0, 0x0);
        gbc.writeMem(0x9fb2, { 0xf8, 0x24 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0x9fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9fb2));
        EXPECT(0x24, gbc.readMem(0x9fb3));
        // F8 0319
        gbc.setState(0xe249, 0xc0e, 0x8b30, 0xea6, 0x764d, 0x8524, 0x1, 0x0);
        gbc.writeMem(0xe249, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0xe24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe249));
        EXPECT(0xcd, gbc.readMem(0xe24a));
        // F8 031A
        gbc.setState(0x31db, 0xd8f7, 0xe4d0, 0x1ae0, 0xa615, 0xa08b, 0x1, 0x0);
        gbc.writeMem(0x31db, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd8f7, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 031B
        gbc.setState(0x3d9e, 0x2ff9, 0xdc70, 0xa917, 0x8e90, 0xfee, 0x0, 0x0);
        gbc.writeMem(0x3d9e, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2ff9, gbc.sp());
        EXPECT(0x3da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 031C
        gbc.setState(0x471e, 0x6dd9, 0x2740, 0x4b6d, 0x265b, 0x422e, 0x1, 0x0);
        gbc.writeMem(0x471e, { 0xf8, 0x4e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 031D
        gbc.setState(0x8bfc, 0x7f1b, 0x1250, 0x1696, 0xf527, 0x91c0, 0x1, 0x0);
        gbc.writeMem(0x8bfc, { 0xf8, 0x19 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7f1b, gbc.sp());
        EXPECT(0x8bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8bfc));
        EXPECT(0x19, gbc.readMem(0x8bfd));
        // F8 031E
        gbc.setState(0x8537, 0x6b7d, 0xe320, 0xec79, 0xfd62, 0xc91e, 0x1, 0x1);
        gbc.writeMem(0x8537, { 0xf8, 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6b7d, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8537));
        EXPECT(0xdb, gbc.readMem(0x8538));
        // F8 031F
        gbc.setState(0x467e, 0xe2af, 0xc4a0, 0x78f3, 0x8c94, 0x168c, 0x0, 0x0);
        gbc.writeMem(0x467e, { 0xf8, 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe2af, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0320
        gbc.setState(0x2801, 0xc3a3, 0xa870, 0x4a71, 0xf3e0, 0xba78, 0x1, 0x0);
        gbc.writeMem(0x2801, { 0xf8, 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0x2803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0321
        gbc.setState(0x70ea, 0x45d1, 0xc070, 0x92f3, 0x6347, 0x3857, 0x1, 0x1);
        gbc.writeMem(0x70ea, { 0xf8, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x45d1, gbc.sp());
        EXPECT(0x70ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0323
        gbc.setState(0x2220, 0xd96b, 0x510, 0x8afd, 0xb437, 0x8903, 0x0, 0x0);
        gbc.writeMem(0x2220, { 0xf8, 0x35 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd96b, gbc.sp());
        EXPECT(0x2222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0324
        gbc.setState(0x734c, 0xeae7, 0x5be0, 0x1dd, 0xb13b, 0x429c, 0x0, 0x1);
        gbc.writeMem(0x734c, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0x734e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0325
        gbc.setState(0xe30b, 0x1ab3, 0x1fe0, 0x5d29, 0xdefc, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0xe30b, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0xe30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe30b));
        EXPECT(0xe6, gbc.readMem(0xe30c));
        // F8 0326
        gbc.setState(0xb98e, 0xeb53, 0xf480, 0x8e66, 0x1c63, 0x165b, 0x0, 0x0);
        gbc.writeMem(0xb98e, { 0xf8, 0xe2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb98e));
        EXPECT(0xe2, gbc.readMem(0xb98f));
        // F8 0327
        gbc.setState(0xd511, 0x4150, 0xdad0, 0xc81e, 0x76e5, 0x564, 0x0, 0x1);
        gbc.writeMem(0xd511, { 0xf8, 0x4c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd511));
        EXPECT(0x4c, gbc.readMem(0xd512));
        // F8 0328
        gbc.setState(0x54fd, 0x38f5, 0x8e20, 0x5a46, 0xee1c, 0x917a, 0x1, 0x1);
        gbc.writeMem(0x54fd, { 0xf8, 0x3a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x38f5, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0329
        gbc.setState(0xafb7, 0x3869, 0x7a30, 0x26f, 0x9f4f, 0x2310, 0x1, 0x1);
        gbc.writeMem(0xafb7, { 0xf8, 0xd8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3869, gbc.sp());
        EXPECT(0xafb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xafb7));
        EXPECT(0xd8, gbc.readMem(0xafb8));
        // F8 032B
        gbc.setState(0xcef9, 0x2bd4, 0xf350, 0x6d96, 0x6f22, 0xf7d5, 0x1, 0x1);
        gbc.writeMem(0xcef9, { 0xf8, 0x1e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2bd4, gbc.sp());
        EXPECT(0xcefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcef9));
        EXPECT(0x1e, gbc.readMem(0xcefa));
        // F8 032C
        gbc.setState(0x21b3, 0xb7a7, 0x4b60, 0x25c8, 0x4d4e, 0x7a5e, 0x0, 0x1);
        gbc.writeMem(0x21b3, { 0xf8, 0x28 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb7a7, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 032D
        gbc.setState(0x47c, 0x2b81, 0x3580, 0xae59, 0x4a8a, 0x31c2, 0x1, 0x0);
        gbc.writeMem(0x47c, { 0xf8, 0x3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b81, gbc.sp());
        EXPECT(0x47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 032E
        gbc.setState(0xd22b, 0x6033, 0x1000, 0x9c69, 0x59f9, 0xdd5b, 0x0, 0x0);
        gbc.writeMem(0xd22b, { 0xf8, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd22b));
        EXPECT(0x8, gbc.readMem(0xd22c));
        // F8 032F
        gbc.setState(0x51cf, 0x5445, 0xbd40, 0x77dd, 0x382, 0xb350, 0x1, 0x1);
        gbc.writeMem(0x51cf, { 0xf8, 0x80 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x51d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0330
        gbc.setState(0x6d27, 0x8f72, 0x3ed0, 0xe4d5, 0x133d, 0xc899, 0x0, 0x1);
        gbc.writeMem(0x6d27, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0331
        gbc.setState(0x9bba, 0xaca8, 0x5c50, 0xad53, 0x7a54, 0xd50d, 0x1, 0x1);
        gbc.writeMem(0x9bba, { 0xf8, 0x6d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaca8, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9bba));
        EXPECT(0x6d, gbc.readMem(0x9bbb));
        // F8 0332
        gbc.setState(0xe745, 0xa458, 0xbd00, 0x5b0d, 0xf3b7, 0x87d, 0x0, 0x0);
        gbc.writeMem(0xe745, { 0xf8, 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa458, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe745));
        EXPECT(0x5d, gbc.readMem(0xe746));
        // F8 0333
        gbc.setState(0x8c1f, 0xca28, 0xd030, 0x54d9, 0x426f, 0x8fa3, 0x1, 0x1);
        gbc.writeMem(0x8c1f, { 0xf8, 0x92 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x8c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8c1f));
        EXPECT(0x92, gbc.readMem(0x8c20));
        // F8 0334
        gbc.setState(0x934e, 0x434c, 0x2080, 0x160a, 0xe3e9, 0xf9a9, 0x0, 0x1);
        gbc.writeMem(0x934e, { 0xf8, 0x19 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0x9350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x934e));
        EXPECT(0x19, gbc.readMem(0x934f));
        // F8 0335
        gbc.setState(0x35ca, 0x10ed, 0xd710, 0x724, 0x6224, 0x14, 0x0, 0x1);
        gbc.writeMem(0x35ca, { 0xf8, 0x82 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0336
        gbc.setState(0x673c, 0xe974, 0x230, 0x5314, 0xa3fc, 0xd332, 0x1, 0x1);
        gbc.writeMem(0x673c, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe974, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0337
        gbc.setState(0xbf36, 0x2d52, 0x9a50, 0x74cf, 0xc474, 0x110c, 0x0, 0x0);
        gbc.writeMem(0xbf36, { 0xf8, 0xca });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0xbf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbf36));
        EXPECT(0xca, gbc.readMem(0xbf37));
        // F8 0338
        gbc.setState(0xb1f2, 0x2342, 0xe0b0, 0x6ce2, 0x3214, 0xdaf9, 0x0, 0x1);
        gbc.writeMem(0xb1f2, { 0xf8, 0x75 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2342, gbc.sp());
        EXPECT(0xb1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb1f2));
        EXPECT(0x75, gbc.readMem(0xb1f3));
        // F8 0339
        gbc.setState(0xad7a, 0x5f6f, 0x6c40, 0xa16e, 0x4132, 0x7c52, 0x0, 0x0);
        gbc.writeMem(0xad7a, { 0xf8, 0x1c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xad7a));
        EXPECT(0x1c, gbc.readMem(0xad7b));
        // F8 033A
        gbc.setState(0xafdd, 0x4041, 0x3330, 0x5e88, 0x26f0, 0x5752, 0x0, 0x0);
        gbc.writeMem(0xafdd, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4041, gbc.sp());
        EXPECT(0xafdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xafdd));
        EXPECT(0x12, gbc.readMem(0xafde));
        // F8 033C
        gbc.setState(0x16e1, 0x9959, 0xd190, 0xb5b2, 0x6d2b, 0xf04d, 0x1, 0x0);
        gbc.writeMem(0x16e1, { 0xf8, 0xa8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 033D
        gbc.setState(0xeaf, 0x69cd, 0x8da0, 0x91f1, 0xd68, 0xfff6, 0x0, 0x0);
        gbc.writeMem(0xeaf, { 0xf8, 0x46 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 033E
        gbc.setState(0xa36b, 0xceeb, 0xa880, 0x3c3e, 0xb0c9, 0x6f87, 0x1, 0x1);
        gbc.writeMem(0xa36b, { 0xf8, 0x33 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa36b));
        EXPECT(0x33, gbc.readMem(0xa36c));
        // F8 033F
        gbc.setState(0x7b2e, 0x536d, 0xbd00, 0xb7e0, 0x567c, 0xa828, 0x0, 0x0);
        gbc.writeMem(0x7b2e, { 0xf8, 0xf2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x536d, gbc.sp());
        EXPECT(0x7b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0340
        gbc.setState(0x4a19, 0xd458, 0xb010, 0xb26b, 0x790, 0x8898, 0x1, 0x0);
        gbc.writeMem(0x4a19, { 0xf8, 0x17 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd458, gbc.sp());
        EXPECT(0x4a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0341
        gbc.setState(0x952d, 0x1e6f, 0xe720, 0x73ae, 0x333b, 0x70f9, 0x1, 0x0);
        gbc.writeMem(0x952d, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0x952f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x952d));
        EXPECT(0x65, gbc.readMem(0x952e));
        // F8 0342
        gbc.setState(0x4118, 0x592d, 0x4dc0, 0xe191, 0x6d06, 0x40a8, 0x0, 0x1);
        gbc.writeMem(0x4118, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x592d, gbc.sp());
        EXPECT(0x411a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0343
        gbc.setState(0x69ea, 0x8df9, 0x6000, 0xf075, 0x1685, 0x9cca, 0x0, 0x1);
        gbc.writeMem(0x69ea, { 0xf8, 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8df9, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0344
        gbc.setState(0x9e6, 0xea01, 0x5780, 0x525b, 0x613c, 0x7035, 0x0, 0x0);
        gbc.writeMem(0x9e6, { 0xf8, 0x4c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xea01, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0345
        gbc.setState(0x17c7, 0x5252, 0xcd0, 0xba21, 0xe9af, 0xee97, 0x0, 0x0);
        gbc.writeMem(0x17c7, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5252, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0346
        gbc.setState(0xdc0e, 0xb367, 0xa7a0, 0xe4ae, 0xbff5, 0x7ed5, 0x0, 0x1);
        gbc.writeMem(0xdc0e, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdc0e));
        EXPECT(0x53, gbc.readMem(0xdc0f));
        // F8 0347
        gbc.setState(0x8547, 0x8990, 0xc0c0, 0x1bbf, 0x6652, 0x5789, 0x0, 0x1);
        gbc.writeMem(0x8547, { 0xf8, 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8990, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8547));
        EXPECT(0x79, gbc.readMem(0x8548));
        // F8 0348
        gbc.setState(0x46a4, 0xd52, 0xd6f0, 0xe78d, 0xac9d, 0x6091, 0x0, 0x1);
        gbc.writeMem(0x46a4, { 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0349
        gbc.setState(0x19db, 0x880b, 0x76c0, 0x4ace, 0xda70, 0xe148, 0x1, 0x0);
        gbc.writeMem(0x19db, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0x19dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 034A
        gbc.setState(0xa650, 0xed7b, 0x4370, 0xe9b7, 0xb8c, 0x730, 0x0, 0x1);
        gbc.writeMem(0xa650, { 0xf8, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa650));
        EXPECT(0x0, gbc.readMem(0xa651));
        // F8 034B
        gbc.setState(0x4ff, 0x4b18, 0xf920, 0x305f, 0xe6c3, 0x6c24, 0x0, 0x1);
        gbc.writeMem(0x4ff, { 0xf8, 0x2e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 034C
        gbc.setState(0x1687, 0xbb12, 0xdb00, 0xcae9, 0xd037, 0xa1c8, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0xf8, 0xff });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 034D
        gbc.setState(0xa6ca, 0x6b1d, 0x6e0, 0x7251, 0x1bf6, 0x75, 0x1, 0x0);
        gbc.writeMem(0xa6ca, { 0xf8, 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0xa6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa6ca));
        EXPECT(0xa0, gbc.readMem(0xa6cb));
        // F8 034E
        gbc.setState(0x63f2, 0xcd06, 0x1d90, 0x79ce, 0xc1f7, 0x1454, 0x0, 0x0);
        gbc.writeMem(0x63f2, { 0xf8, 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 034F
        gbc.setState(0x2133, 0x5b11, 0x140, 0xb4b3, 0x5a56, 0x3fe9, 0x0, 0x1);
        gbc.writeMem(0x2133, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0351
        gbc.setState(0xc32, 0x50b5, 0xe9d0, 0x4b1d, 0xac17, 0x9cc6, 0x0, 0x0);
        gbc.writeMem(0xc32, { 0xf8, 0xc8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x50b5, gbc.sp());
        EXPECT(0xc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0352
        gbc.setState(0x34f2, 0x3d3c, 0x7b00, 0x601e, 0xba43, 0xba46, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0xf8, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0353
        gbc.setState(0xa30, 0xa890, 0x5f50, 0x9bcf, 0xde7b, 0x53b4, 0x1, 0x0);
        gbc.writeMem(0xa30, { 0xf8, 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0354
        gbc.setState(0x29c0, 0x26d2, 0xd00, 0xaffd, 0xcdd0, 0x6b4a, 0x1, 0x1);
        gbc.writeMem(0x29c0, { 0xf8, 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x26d2, gbc.sp());
        EXPECT(0x29c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0355
        gbc.setState(0x496f, 0x1096, 0x3120, 0x13d5, 0x74f9, 0x53fd, 0x0, 0x1);
        gbc.writeMem(0x496f, { 0xf8, 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1096, gbc.sp());
        EXPECT(0x4971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0356
        gbc.setState(0x155f, 0x6e50, 0xdbe0, 0x71b5, 0x300, 0x1019, 0x1, 0x1);
        gbc.writeMem(0x155f, { 0xf8, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x1561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0357
        gbc.setState(0x7e92, 0x8672, 0xa8b0, 0xc6e5, 0x93c3, 0x19e, 0x1, 0x1);
        gbc.writeMem(0x7e92, { 0xf8, 0xd2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8672, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0358
        gbc.setState(0xbf42, 0xc43b, 0x55e0, 0x24ae, 0x6a03, 0x387e, 0x1, 0x1);
        gbc.writeMem(0xbf42, { 0xf8, 0x3d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbf42));
        EXPECT(0x3d, gbc.readMem(0xbf43));
        // F8 0359
        gbc.setState(0xe4d7, 0x99ec, 0x230, 0x4ccf, 0x8260, 0xbda7, 0x1, 0x0);
        gbc.writeMem(0xe4d7, { 0xf8, 0xa });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe4d7));
        EXPECT(0xa, gbc.readMem(0xe4d8));
        // F8 035A
        gbc.setState(0xb703, 0xca05, 0x8470, 0xee9e, 0x6ce0, 0x5b64, 0x1, 0x0);
        gbc.writeMem(0xb703, { 0xf8, 0xf3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb703));
        EXPECT(0xf3, gbc.readMem(0xb704));
        // F8 035B
        gbc.setState(0x5101, 0x3181, 0xe340, 0x9ea3, 0x7469, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x5101, { 0xf8, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 035D
        gbc.setState(0x6fd5, 0xbcbc, 0xc1e0, 0x3a7d, 0xa18e, 0x5d6d, 0x1, 0x1);
        gbc.writeMem(0x6fd5, { 0xf8, 0x1f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 035F
        gbc.setState(0x1a24, 0xa733, 0xe210, 0xa718, 0x1095, 0xa2ec, 0x0, 0x1);
        gbc.writeMem(0x1a24, { 0xf8, 0x42 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0360
        gbc.setState(0xc4e0, 0xbb54, 0x6250, 0xd174, 0xf038, 0x217a, 0x1, 0x1);
        gbc.writeMem(0xc4e0, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb54, gbc.sp());
        EXPECT(0xc4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc4e0));
        EXPECT(0x38, gbc.readMem(0xc4e1));
        // F8 0361
        gbc.setState(0x80f, 0x6673, 0xf320, 0xd343, 0xb60e, 0xa51c, 0x1, 0x0);
        gbc.writeMem(0x80f, { 0xf8, 0x23 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0362
        gbc.setState(0xb01d, 0xfc6a, 0x8690, 0xa281, 0x7b72, 0x622, 0x1, 0x0);
        gbc.writeMem(0xb01d, { 0xf8, 0x9c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0xb01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb01d));
        EXPECT(0x9c, gbc.readMem(0xb01e));
        // F8 0363
        gbc.setState(0x94b, 0xf92, 0x5f10, 0x57bc, 0xb6b9, 0x7b0f, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0xf8, 0xdf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf92, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0364
        gbc.setState(0x5883, 0x9aad, 0x82f0, 0xd926, 0x7ed6, 0xf1d7, 0x0, 0x1);
        gbc.writeMem(0x5883, { 0xf8, 0xca });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9aad, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0365
        gbc.setState(0xbe5, 0x101b, 0xd6a0, 0x5da9, 0xf791, 0x95ac, 0x0, 0x1);
        gbc.writeMem(0xbe5, { 0xf8, 0x24 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0xbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0366
        gbc.setState(0x8fe7, 0xade8, 0xc330, 0x5687, 0x3226, 0x9dfe, 0x1, 0x1);
        gbc.writeMem(0x8fe7, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xade8, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8fe7));
        EXPECT(0xad, gbc.readMem(0x8fe8));
        // F8 0367
        gbc.setState(0x23b3, 0xe026, 0xe530, 0xef4a, 0xa391, 0xa36b, 0x1, 0x1);
        gbc.writeMem(0x23b3, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe026, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0368
        gbc.setState(0x2c9d, 0xda7e, 0x3bb0, 0xdcba, 0x8ba9, 0x13b, 0x0, 0x1);
        gbc.writeMem(0x2c9d, { 0xf8, 0xea });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda7e, gbc.sp());
        EXPECT(0x2c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0369
        gbc.setState(0xc5e4, 0x7a6b, 0xc110, 0xd71, 0x950b, 0x6bb3, 0x0, 0x1);
        gbc.writeMem(0xc5e4, { 0xf8, 0xe6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7a6b, gbc.sp());
        EXPECT(0xc5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc5e4));
        EXPECT(0xe6, gbc.readMem(0xc5e5));
        // F8 036A
        gbc.setState(0x1032, 0xb1ad, 0x62c0, 0xcbdf, 0xc8c6, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x1032, { 0xf8, 0x94 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb1ad, gbc.sp());
        EXPECT(0x1034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 036B
        gbc.setState(0x2655, 0xba21, 0xf430, 0xe44, 0xf3fa, 0xe2b8, 0x0, 0x1);
        gbc.writeMem(0x2655, { 0xf8, 0x56 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 036C
        gbc.setState(0x665, 0x3b7, 0x7710, 0x435c, 0x96c7, 0xccbe, 0x0, 0x1);
        gbc.writeMem(0x665, { 0xf8, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 036D
        gbc.setState(0x4c3e, 0xe5a7, 0x1730, 0x75ab, 0xb551, 0xccf6, 0x1, 0x1);
        gbc.writeMem(0x4c3e, { 0xf8, 0xd1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe5a7, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 036E
        gbc.setState(0x20f9, 0xcc26, 0x15d0, 0x7d0a, 0x8cc0, 0x7dea, 0x0, 0x0);
        gbc.writeMem(0x20f9, { 0xf8, 0x18 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 036F
        gbc.setState(0x1979, 0xacbb, 0xc640, 0xc713, 0xbba5, 0xf719, 0x1, 0x1);
        gbc.writeMem(0x1979, { 0xf8, 0xf0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0x197b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0370
        gbc.setState(0xbac4, 0xc9af, 0xd1b0, 0x907e, 0x6db1, 0xa997, 0x1, 0x1);
        gbc.writeMem(0xbac4, { 0xf8, 0x32 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc9af, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbac4));
        EXPECT(0x32, gbc.readMem(0xbac5));
        // F8 0371
        gbc.setState(0xc61f, 0x983e, 0xdd60, 0x6898, 0xb4f3, 0xb689, 0x1, 0x1);
        gbc.writeMem(0xc61f, { 0xf8, 0x4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc61f));
        EXPECT(0x4, gbc.readMem(0xc620));
        // F8 0372
        gbc.setState(0x2495, 0x2eac, 0xc7b0, 0x8606, 0x21cf, 0x8562, 0x1, 0x0);
        gbc.writeMem(0x2495, { 0xf8, 0x95 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x2497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0373
        gbc.setState(0x3c6f, 0xf30e, 0x5700, 0xbeba, 0x9af9, 0x7b3f, 0x0, 0x0);
        gbc.writeMem(0x3c6f, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0x3c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0374
        gbc.setState(0xe388, 0xa72, 0x6460, 0x2881, 0xd269, 0xed69, 0x0, 0x0);
        gbc.writeMem(0xe388, { 0xf8, 0x84 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0xe38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe388));
        EXPECT(0x84, gbc.readMem(0xe389));
        // F8 0375
        gbc.setState(0xc438, 0x272b, 0x2680, 0x395b, 0x397b, 0x2513, 0x0, 0x1);
        gbc.writeMem(0xc438, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0xc43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc438));
        EXPECT(0x63, gbc.readMem(0xc439));
        // F8 0376
        gbc.setState(0x8974, 0x6e38, 0xc100, 0x77fe, 0x34d5, 0xb55b, 0x1, 0x1);
        gbc.writeMem(0x8974, { 0xf8, 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6e38, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8974));
        EXPECT(0xc9, gbc.readMem(0x8975));
        // F8 0377
        gbc.setState(0x5ca5, 0x1b18, 0x9fb0, 0x8b2e, 0x6d08, 0x9924, 0x1, 0x1);
        gbc.writeMem(0x5ca5, { 0xf8, 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1b18, gbc.sp());
        EXPECT(0x5ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0378
        gbc.setState(0xc50b, 0x7dca, 0xac60, 0xb3cb, 0xc91d, 0x245d, 0x0, 0x0);
        gbc.writeMem(0xc50b, { 0xf8, 0xbc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc50b));
        EXPECT(0xbc, gbc.readMem(0xc50c));
        // F8 0379
        gbc.setState(0x938d, 0x7145, 0xa2b0, 0xa71, 0xf608, 0x5b14, 0x0, 0x1);
        gbc.writeMem(0x938d, { 0xf8, 0x59 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7145, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x938d));
        EXPECT(0x59, gbc.readMem(0x938e));
        // F8 037A
        gbc.setState(0xd140, 0x35c6, 0x4be0, 0xa5aa, 0x3a64, 0x221, 0x1, 0x0);
        gbc.writeMem(0xd140, { 0xf8, 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x35c6, gbc.sp());
        EXPECT(0xd142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd140));
        EXPECT(0x43, gbc.readMem(0xd141));
        // F8 037B
        gbc.setState(0xb41a, 0x9571, 0xe4e0, 0xb60f, 0x126f, 0x609a, 0x1, 0x1);
        gbc.writeMem(0xb41a, { 0xf8, 0x36 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9571, gbc.sp());
        EXPECT(0xb41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb41a));
        EXPECT(0x36, gbc.readMem(0xb41b));
        // F8 037C
        gbc.setState(0x44e0, 0x1164, 0xddd0, 0x7868, 0xbbda, 0xf462, 0x1, 0x0);
        gbc.writeMem(0x44e0, { 0xf8, 0xe4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1164, gbc.sp());
        EXPECT(0x44e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 037D
        gbc.setState(0x12f6, 0x78a7, 0x76d0, 0x498c, 0xdfbe, 0x5b1a, 0x0, 0x0);
        gbc.writeMem(0x12f6, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 037E
        gbc.setState(0xc51e, 0x5275, 0x5e10, 0x6587, 0x80b, 0x1e75, 0x0, 0x1);
        gbc.writeMem(0xc51e, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc51e));
        EXPECT(0x47, gbc.readMem(0xc51f));
        // F8 037F
        gbc.setState(0x6676, 0xcd24, 0x7810, 0x105f, 0x5969, 0xcc72, 0x1, 0x1);
        gbc.writeMem(0x6676, { 0xf8, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x6678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0380
        gbc.setState(0x9d86, 0x1257, 0xef90, 0x54ab, 0x814d, 0x187, 0x0, 0x1);
        gbc.writeMem(0x9d86, { 0xf8, 0x98 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0x9d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9d86));
        EXPECT(0x98, gbc.readMem(0x9d87));
        // F8 0381
        gbc.setState(0x763c, 0xa0ed, 0xe6f0, 0x8348, 0x225, 0xb7ee, 0x0, 0x0);
        gbc.writeMem(0x763c, { 0xf8, 0x52 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0382
        gbc.setState(0x75a5, 0x147b, 0x4d50, 0x639d, 0x60d1, 0x98e7, 0x1, 0x0);
        gbc.writeMem(0x75a5, { 0xf8, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0383
        gbc.setState(0xa15b, 0x85cd, 0x6c90, 0xc917, 0x885d, 0xec7e, 0x0, 0x0);
        gbc.writeMem(0xa15b, { 0xf8, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x85cd, gbc.sp());
        EXPECT(0xa15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa15b));
        EXPECT(0xe2, gbc.readMem(0xa15c));
        // F8 0384
        gbc.setState(0xeac5, 0xca25, 0xa810, 0x25c, 0x62cf, 0x3065, 0x1, 0x1);
        gbc.writeMem(0xeac5, { 0xf8, 0xc6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeac5));
        EXPECT(0xc6, gbc.readMem(0xeac6));
        // F8 0385
        gbc.setState(0xd6ee, 0x7cdb, 0xb00, 0xa4e4, 0x5222, 0x7209, 0x1, 0x1);
        gbc.writeMem(0xd6ee, { 0xf8, 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7cdb, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd6ee));
        EXPECT(0xc, gbc.readMem(0xd6ef));
        // F8 0386
        gbc.setState(0x116d, 0x148e, 0x6090, 0xab96, 0xb91b, 0xb3ed, 0x1, 0x1);
        gbc.writeMem(0x116d, { 0xf8, 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0x116f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0387
        gbc.setState(0x76fa, 0xcc18, 0x9d10, 0xda0e, 0x5d51, 0x8177, 0x0, 0x0);
        gbc.writeMem(0x76fa, { 0xf8, 0xfd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcc18, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0388
        gbc.setState(0x8d09, 0xe6b9, 0x6260, 0x3b7c, 0x38f2, 0x76f8, 0x1, 0x0);
        gbc.writeMem(0x8d09, { 0xf8, 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe6b9, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8d09));
        EXPECT(0xc1, gbc.readMem(0x8d0a));
        // F8 0389
        gbc.setState(0x3bd, 0x70e9, 0x5b00, 0xd18a, 0x8759, 0x9b38, 0x1, 0x0);
        gbc.writeMem(0x3bd, { 0xf8, 0x58 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x70e9, gbc.sp());
        EXPECT(0x3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 038A
        gbc.setState(0x581b, 0x1fae, 0xe7c0, 0x9d4, 0x2ace, 0x141e, 0x0, 0x1);
        gbc.writeMem(0x581b, { 0xf8, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1fae, gbc.sp());
        EXPECT(0x581d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 038B
        gbc.setState(0xc7db, 0x87d, 0xb2e0, 0x1afe, 0x82a9, 0x2d1d, 0x0, 0x0);
        gbc.writeMem(0xc7db, { 0xf8, 0x1f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x87d, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc7db));
        EXPECT(0x1f, gbc.readMem(0xc7dc));
        // F8 038C
        gbc.setState(0x190f, 0x6824, 0xea70, 0x154b, 0x62d6, 0x5af8, 0x0, 0x0);
        gbc.writeMem(0x190f, { 0xf8, 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6824, gbc.sp());
        EXPECT(0x1911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 038D
        gbc.setState(0x8d70, 0x23c1, 0x23d0, 0x7d4b, 0x911b, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x8d70, { 0xf8, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x23c1, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8d70));
        EXPECT(0xba, gbc.readMem(0x8d71));
        // F8 038E
        gbc.setState(0xb705, 0x8815, 0x7500, 0x2ba3, 0x78bb, 0xd5d5, 0x0, 0x1);
        gbc.writeMem(0xb705, { 0xf8, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8815, gbc.sp());
        EXPECT(0xb707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb705));
        EXPECT(0x67, gbc.readMem(0xb706));
        // F8 038F
        gbc.setState(0x3a99, 0x961d, 0x2f00, 0x6407, 0x1d69, 0x2ff8, 0x0, 0x1);
        gbc.writeMem(0x3a99, { 0xf8, 0xc4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0390
        gbc.setState(0x33e4, 0xc8bd, 0x2790, 0x2d7a, 0xb8d8, 0xc7a2, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xf8, 0xa5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc8bd, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0391
        gbc.setState(0x33, 0xa776, 0x5e30, 0xbac7, 0x1f34, 0xdb, 0x1, 0x0);
        gbc.writeMem(0x33, { 0xf8, 0x32 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0392
        gbc.setState(0x2a92, 0x39dd, 0xa30, 0x6a96, 0xe4a0, 0x8861, 0x0, 0x0);
        gbc.writeMem(0x2a92, { 0xf8, 0x3b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0393
        gbc.setState(0xeaf2, 0xe547, 0x7f20, 0xab8f, 0x2ba4, 0xe168, 0x0, 0x0);
        gbc.writeMem(0xeaf2, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe547, gbc.sp());
        EXPECT(0xeaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xeaf2));
        EXPECT(0x9f, gbc.readMem(0xeaf3));
        // F8 0394
        gbc.setState(0x1713, 0xc05, 0xf100, 0x5ab9, 0x9b92, 0xfeec, 0x1, 0x0);
        gbc.writeMem(0x1713, { 0xf8, 0x65 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc05, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0395
        gbc.setState(0x7618, 0xf584, 0xab90, 0xf973, 0xf0a2, 0xce81, 0x0, 0x1);
        gbc.writeMem(0x7618, { 0xf8, 0xe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf584, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 0396
        gbc.setState(0x244e, 0xfde6, 0xdbb0, 0xb97d, 0xeae3, 0x6ede, 0x0, 0x1);
        gbc.writeMem(0x244e, { 0xf8, 0x92 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0397
        gbc.setState(0x8601, 0xf7aa, 0xdcf0, 0x643c, 0xba7f, 0xb13a, 0x0, 0x0);
        gbc.writeMem(0x8601, { 0xf8, 0xa1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8601));
        EXPECT(0xa1, gbc.readMem(0x8602));
        // F8 0398
        gbc.setState(0x48d2, 0x1193, 0x6c70, 0x5222, 0x4e6, 0x3533, 0x1, 0x1);
        gbc.writeMem(0x48d2, { 0xf8, 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1193, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 0399
        gbc.setState(0x5f59, 0xd903, 0xe950, 0x6dc0, 0xb3ba, 0x88b3, 0x0, 0x0);
        gbc.writeMem(0x5f59, { 0xf8, 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd903, gbc.sp());
        EXPECT(0x5f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 039A
        gbc.setState(0x6ed0, 0x5c65, 0x910, 0x6244, 0x8597, 0xb2a, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0xf8, 0x3f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c65, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 039C
        gbc.setState(0x193f, 0xddd9, 0x38a0, 0xf208, 0x731f, 0xff7, 0x1, 0x0);
        gbc.writeMem(0x193f, { 0xf8, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xddd9, gbc.sp());
        EXPECT(0x1941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 039D
        gbc.setState(0xd9cb, 0xc520, 0xcec0, 0xaf84, 0x830e, 0x2adf, 0x0, 0x0);
        gbc.writeMem(0xd9cb, { 0xf8, 0xa9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc520, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd9cb));
        EXPECT(0xa9, gbc.readMem(0xd9cc));
        // F8 039E
        gbc.setState(0xe703, 0x7b30, 0x12d0, 0xa50e, 0xbafa, 0x5a65, 0x0, 0x0);
        gbc.writeMem(0xe703, { 0xf8, 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe703));
        EXPECT(0x38, gbc.readMem(0xe704));
        // F8 03A0
        gbc.setState(0x8c82, 0x4f7f, 0x1300, 0xc263, 0xdcb0, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0x8c82, { 0xf8, 0x4f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4f7f, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8c82));
        EXPECT(0x4f, gbc.readMem(0x8c83));
        // F8 03A1
        gbc.setState(0xdf1, 0x7cbc, 0x14c0, 0x346e, 0x33b6, 0xb42e, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0xf8, 0xba });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7cbc, gbc.sp());
        EXPECT(0xdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03A2
        gbc.setState(0x68ad, 0xf4c7, 0x5dd0, 0xea01, 0x27ce, 0xd986, 0x1, 0x1);
        gbc.writeMem(0x68ad, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf4c7, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03A3
        gbc.setState(0x3c18, 0x495b, 0xee20, 0x8e67, 0x2436, 0x7c5f, 0x0, 0x0);
        gbc.writeMem(0x3c18, { 0xf8, 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0x3c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03A4
        gbc.setState(0xa664, 0xfc76, 0x2820, 0x2efb, 0x5647, 0xc43e, 0x0, 0x1);
        gbc.writeMem(0xa664, { 0xf8, 0x86 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfc76, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa664));
        EXPECT(0x86, gbc.readMem(0xa665));
        // F8 03A5
        gbc.setState(0x2736, 0x3a2d, 0xbbc0, 0x753a, 0xf577, 0x56ca, 0x1, 0x1);
        gbc.writeMem(0x2736, { 0xf8, 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3a2d, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03A6
        gbc.setState(0x21a7, 0xa7f8, 0xbc90, 0xe928, 0xea00, 0xc554, 0x0, 0x1);
        gbc.writeMem(0x21a7, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03A7
        gbc.setState(0x717c, 0x7c0c, 0x6cb0, 0x7b34, 0xb543, 0xf6a8, 0x0, 0x1);
        gbc.writeMem(0x717c, { 0xf8, 0x14 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03A8
        gbc.setState(0xda3c, 0xf217, 0x6e60, 0x8afd, 0x185e, 0x9ab5, 0x0, 0x0);
        gbc.writeMem(0xda3c, { 0xf8, 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda3c));
        EXPECT(0x1a, gbc.readMem(0xda3d));
        // F8 03A9
        gbc.setState(0x431c, 0xa2bf, 0x5a40, 0x6cba, 0x130d, 0x5241, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0xf8, 0x69 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa2bf, gbc.sp());
        EXPECT(0x431e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03AA
        gbc.setState(0x5d52, 0xc946, 0x2b0, 0xf735, 0xb8a4, 0x6097, 0x0, 0x1);
        gbc.writeMem(0x5d52, { 0xf8, 0x3a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc946, gbc.sp());
        EXPECT(0x5d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03AB
        gbc.setState(0x5d59, 0xd158, 0xd4b0, 0xb23b, 0xe12c, 0xfc15, 0x0, 0x1);
        gbc.writeMem(0x5d59, { 0xf8, 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0x5d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03AC
        gbc.setState(0x3aa4, 0x7012, 0xcc50, 0xfb3c, 0x6ad2, 0x75b9, 0x1, 0x0);
        gbc.writeMem(0x3aa4, { 0xf8, 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7012, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03AD
        gbc.setState(0x935d, 0x4060, 0x4670, 0xe119, 0x84d6, 0xfbe5, 0x0, 0x0);
        gbc.writeMem(0x935d, { 0xf8, 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x935d));
        EXPECT(0x6e, gbc.readMem(0x935e));
        // F8 03AE
        gbc.setState(0x365e, 0xc81d, 0xc830, 0xfb7d, 0xe815, 0xea0f, 0x1, 0x0);
        gbc.writeMem(0x365e, { 0xf8, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc81d, gbc.sp());
        EXPECT(0x3660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03AF
        gbc.setState(0x6d1, 0x7e57, 0x52f0, 0x7bb5, 0xa928, 0x6953, 0x1, 0x1);
        gbc.writeMem(0x6d1, { 0xf8, 0xae });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0x6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B0
        gbc.setState(0x28e6, 0x31b6, 0x1110, 0xb332, 0x6cfb, 0xa403, 0x0, 0x1);
        gbc.writeMem(0x28e6, { 0xf8, 0xc9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x31b6, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B1
        gbc.setState(0x251d, 0x122, 0x3450, 0x67df, 0x2061, 0x3ff5, 0x0, 0x0);
        gbc.writeMem(0x251d, { 0xf8, 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0x251f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B2
        gbc.setState(0x3cc3, 0x8e87, 0xdad0, 0xd1d2, 0xa59b, 0xac0a, 0x0, 0x0);
        gbc.writeMem(0x3cc3, { 0xf8, 0x1e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03B3
        gbc.setState(0x95c5, 0x7fc, 0xaee0, 0x5a2f, 0xed21, 0xc59d, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xf8, 0xcd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x95c5));
        EXPECT(0xcd, gbc.readMem(0x95c6));
        // F8 03B4
        gbc.setState(0x3f9d, 0x557f, 0x77f0, 0xa22, 0xd21b, 0x18d3, 0x1, 0x0);
        gbc.writeMem(0x3f9d, { 0xf8, 0xe5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B5
        gbc.setState(0x1832, 0x3e39, 0xdef0, 0x4f9, 0x42df, 0x71b2, 0x0, 0x0);
        gbc.writeMem(0x1832, { 0xf8, 0xd8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0x1834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B6
        gbc.setState(0x1a24, 0xfc45, 0x6cc0, 0x93a6, 0xdea0, 0xf983, 0x1, 0x1);
        gbc.writeMem(0x1a24, { 0xf8, 0x42 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03B7
        gbc.setState(0x5f4e, 0x3d53, 0x33a0, 0x8d36, 0x5e1d, 0x8b14, 0x0, 0x0);
        gbc.writeMem(0x5f4e, { 0xf8, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0x5f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03B8
        gbc.setState(0x2fc, 0x68ce, 0xdc70, 0x3f41, 0x77e6, 0x9d1d, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0xf8, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03B9
        gbc.setState(0xe887, 0x4674, 0xade0, 0xdb3f, 0x2d3f, 0x2872, 0x0, 0x1);
        gbc.writeMem(0xe887, { 0xf8, 0xbd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0xe889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe887));
        EXPECT(0xbd, gbc.readMem(0xe888));
        // F8 03BA
        gbc.setState(0xcd4d, 0x1d43, 0x4a60, 0x380b, 0x9aa, 0xa542, 0x1, 0x0);
        gbc.writeMem(0xcd4d, { 0xf8, 0x2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0xcd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xcd4d));
        EXPECT(0x2, gbc.readMem(0xcd4e));
        // F8 03BB
        gbc.setState(0xaae2, 0xc13d, 0xb310, 0x1d8b, 0x74c0, 0xcedc, 0x0, 0x1);
        gbc.writeMem(0xaae2, { 0xf8, 0x16 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc13d, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaae2));
        EXPECT(0x16, gbc.readMem(0xaae3));
        // F8 03BC
        gbc.setState(0x4e41, 0xa331, 0xabb0, 0xbb09, 0xf880, 0x9830, 0x1, 0x0);
        gbc.writeMem(0x4e41, { 0xf8, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa331, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03BD
        gbc.setState(0xc132, 0x15d4, 0xb240, 0xeb6c, 0x461c, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0xc132, { 0xf8, 0x29 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0xc134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc132));
        EXPECT(0x29, gbc.readMem(0xc133));
        // F8 03BE
        gbc.setState(0x6ee7, 0x9c0f, 0xa1a0, 0x77b0, 0xacbb, 0xf7cf, 0x1, 0x0);
        gbc.writeMem(0x6ee7, { 0xf8, 0xd4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9c0f, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03C0
        gbc.setState(0x22d1, 0x4ccb, 0x2e60, 0x80f1, 0x7514, 0xb391, 0x1, 0x1);
        gbc.writeMem(0x22d1, { 0xf8, 0x20 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0x22d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03C1
        gbc.setState(0x8054, 0x626e, 0x7f00, 0xfb1f, 0x760e, 0x4f2c, 0x0, 0x0);
        gbc.writeMem(0x8054, { 0xf8, 0x45 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8054));
        EXPECT(0x45, gbc.readMem(0x8055));
        // F8 03C2
        gbc.setState(0xe588, 0xf7c3, 0xfeb0, 0xb328, 0x2b4c, 0x1ab2, 0x1, 0x0);
        gbc.writeMem(0xe588, { 0xf8, 0x60 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf7c3, gbc.sp());
        EXPECT(0xe58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe588));
        EXPECT(0x60, gbc.readMem(0xe589));
        // F8 03C3
        gbc.setState(0xa3d5, 0xa978, 0x7b0, 0xd591, 0xf743, 0x6625, 0x0, 0x0);
        gbc.writeMem(0xa3d5, { 0xf8, 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0xa3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa3d5));
        EXPECT(0x4d, gbc.readMem(0xa3d6));
        // F8 03C5
        gbc.setState(0x7f69, 0x919e, 0x8780, 0xf331, 0x7b0c, 0xbe93, 0x1, 0x1);
        gbc.writeMem(0x7f69, { 0xf8, 0xb6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x7f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03C6
        gbc.setState(0x867f, 0x6433, 0xef60, 0x42f9, 0xc6fc, 0x5a30, 0x0, 0x0);
        gbc.writeMem(0x867f, { 0xf8, 0xf7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6433, gbc.sp());
        EXPECT(0x8681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x867f));
        EXPECT(0xf7, gbc.readMem(0x8680));
        // F8 03C7
        gbc.setState(0x2462, 0x42c6, 0x3ad0, 0xc026, 0x126e, 0x3cdb, 0x1, 0x1);
        gbc.writeMem(0x2462, { 0xf8, 0xc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x42c6, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03C8
        gbc.setState(0x7322, 0xbd01, 0x83a0, 0x1202, 0xb04b, 0x4eff, 0x0, 0x1);
        gbc.writeMem(0x7322, { 0xf8, 0x52 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbd01, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03C9
        gbc.setState(0xca5, 0xf35f, 0xa1c0, 0x72a9, 0xd6ee, 0x75ab, 0x0, 0x1);
        gbc.writeMem(0xca5, { 0xf8, 0x68 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0xca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03CA
        gbc.setState(0xda6f, 0x19dc, 0x7140, 0x5f92, 0xc9f5, 0x199a, 0x1, 0x0);
        gbc.writeMem(0xda6f, { 0xf8, 0x8d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x19dc, gbc.sp());
        EXPECT(0xda71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xda6f));
        EXPECT(0x8d, gbc.readMem(0xda70));
        // F8 03CB
        gbc.setState(0x52dd, 0xa3d9, 0x8b90, 0xce02, 0xece0, 0x925a, 0x0, 0x0);
        gbc.writeMem(0x52dd, { 0xf8, 0xc0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa3d9, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03CD
        gbc.setState(0x494, 0xbdcc, 0x2800, 0xfc3, 0x59c0, 0x5556, 0x1, 0x0);
        gbc.writeMem(0x494, { 0xf8, 0xfa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbdcc, gbc.sp());
        EXPECT(0x496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03CE
        gbc.setState(0xb487, 0xc337, 0x5530, 0x8e03, 0xe7ee, 0x7f57, 0x0, 0x0);
        gbc.writeMem(0xb487, { 0xf8, 0xde });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc337, gbc.sp());
        EXPECT(0xb489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb487));
        EXPECT(0xde, gbc.readMem(0xb488));
        // F8 03CF
        gbc.setState(0xa9ac, 0xee73, 0xd6d0, 0xe136, 0x11eb, 0xdc63, 0x1, 0x0);
        gbc.writeMem(0xa9ac, { 0xf8, 0x9e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xee73, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa9ac));
        EXPECT(0x9e, gbc.readMem(0xa9ad));
        // F8 03D0
        gbc.setState(0x3526, 0x603d, 0x64a0, 0x84aa, 0x5471, 0x2f28, 0x0, 0x1);
        gbc.writeMem(0x3526, { 0xf8, 0xce });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x3528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03D1
        gbc.setState(0xd5df, 0xb869, 0x4250, 0xf66f, 0xd07e, 0xad4, 0x1, 0x1);
        gbc.writeMem(0xd5df, { 0xf8, 0x63 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0xd5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd5df));
        EXPECT(0x63, gbc.readMem(0xd5e0));
        // F8 03D2
        gbc.setState(0x51e2, 0x6169, 0x7840, 0x2b82, 0xd998, 0xf370, 0x0, 0x1);
        gbc.writeMem(0x51e2, { 0xf8, 0x40 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6169, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03D3
        gbc.setState(0x6f55, 0x1870, 0x71a0, 0x4052, 0xf7, 0x60f8, 0x1, 0x0);
        gbc.writeMem(0x6f55, { 0xf8, 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0x6f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03D4
        gbc.setState(0xd570, 0xb2ad, 0x8d50, 0x4e3f, 0xe57, 0xe244, 0x0, 0x1);
        gbc.writeMem(0xd570, { 0xf8, 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0xd572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd570));
        EXPECT(0xb5, gbc.readMem(0xd571));
        // F8 03D5
        gbc.setState(0xa429, 0x2f64, 0xf470, 0x97fa, 0x50de, 0x8e7a, 0x1, 0x0);
        gbc.writeMem(0xa429, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa429));
        EXPECT(0x9f, gbc.readMem(0xa42a));
        // F8 03D6
        gbc.setState(0x33e4, 0x8ae3, 0xb1a0, 0x95d, 0x586f, 0x2a4c, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xf8, 0xa5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8ae3, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03D7
        gbc.setState(0x8681, 0x5905, 0x92e0, 0x6489, 0xe28a, 0x30fd, 0x0, 0x1);
        gbc.writeMem(0x8681, { 0xf8, 0x73 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0x8683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8681));
        EXPECT(0x73, gbc.readMem(0x8682));
        // F8 03D8
        gbc.setState(0x4537, 0xe63c, 0x4550, 0x7046, 0x3b0e, 0xff05, 0x0, 0x1);
        gbc.writeMem(0x4537, { 0xf8, 0x8b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe63c, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03D9
        gbc.setState(0x7b6b, 0xd591, 0x15e0, 0x241c, 0x16e1, 0x555b, 0x1, 0x0);
        gbc.writeMem(0x7b6b, { 0xf8, 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0x7b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03DA
        gbc.setState(0x911b, 0x1a76, 0x5e60, 0xef0e, 0x8070, 0x6b0f, 0x0, 0x0);
        gbc.writeMem(0x911b, { 0xf8, 0x34 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0x911d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x911b));
        EXPECT(0x34, gbc.readMem(0x911c));
        // F8 03DB
        gbc.setState(0x124b, 0x61a9, 0x46b0, 0x7904, 0x6fed, 0xe0d5, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0xf8, 0xcf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x61a9, gbc.sp());
        EXPECT(0x124d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03DC
        gbc.setState(0xbe43, 0x79a9, 0xc6d0, 0xbabc, 0xb3e3, 0xcada, 0x1, 0x0);
        gbc.writeMem(0xbe43, { 0xf8, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x79a9, gbc.sp());
        EXPECT(0xbe45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbe43));
        EXPECT(0x7b, gbc.readMem(0xbe44));
        // F8 03DD
        gbc.setState(0x53ce, 0xdd1, 0x9060, 0xb68a, 0x9831, 0x93d, 0x1, 0x1);
        gbc.writeMem(0x53ce, { 0xf8, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x53d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03DE
        gbc.setState(0x13c7, 0xccd, 0xdd10, 0x47ce, 0xdb86, 0xd8d9, 0x0, 0x1);
        gbc.writeMem(0x13c7, { 0xf8, 0x5c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xccd, gbc.sp());
        EXPECT(0x13c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03DF
        gbc.setState(0xe91f, 0xf426, 0xcb40, 0x4607, 0x9702, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0xe91f, { 0xf8, 0x51 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf426, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xe91f));
        EXPECT(0x51, gbc.readMem(0xe920));
        // F8 03E0
        gbc.setState(0x2c99, 0xd60e, 0x31f0, 0x59db, 0xdc16, 0x2e27, 0x0, 0x0);
        gbc.writeMem(0x2c99, { 0xf8, 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd60e, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03E1
        gbc.setState(0xb4f6, 0xc8ed, 0x370, 0x993f, 0x9220, 0xb36a, 0x0, 0x0);
        gbc.writeMem(0xb4f6, { 0xf8, 0x19 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb4f6));
        EXPECT(0x19, gbc.readMem(0xb4f7));
        // F8 03E2
        gbc.setState(0xbc81, 0x1621, 0x2830, 0x2555, 0x719e, 0x7799, 0x0, 0x1);
        gbc.writeMem(0xbc81, { 0xf8, 0x42 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1621, gbc.sp());
        EXPECT(0xbc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbc81));
        EXPECT(0x42, gbc.readMem(0xbc82));
        // F8 03E3
        gbc.setState(0x126e, 0x4ca2, 0x69e0, 0x826a, 0x50bf, 0xe3d5, 0x0, 0x1);
        gbc.writeMem(0x126e, { 0xf8, 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ca2, gbc.sp());
        EXPECT(0x1270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03E4
        gbc.setState(0x6d87, 0x4c49, 0xfbe0, 0x6c51, 0x30e5, 0x6f40, 0x0, 0x1);
        gbc.writeMem(0x6d87, { 0xf8, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4c49, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03E5
        gbc.setState(0x6cbb, 0x272f, 0x45c0, 0xaf79, 0x90bc, 0x74f2, 0x1, 0x1);
        gbc.writeMem(0x6cbb, { 0xf8, 0xe2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0x6cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F8 03E6
        gbc.setState(0xc26, 0xa2d, 0xe4b0, 0xe23a, 0xecf1, 0x6c61, 0x0, 0x1);
        gbc.writeMem(0xc26, { 0xf8, 0x97 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F8 03E7
        gbc.setState(0xccca, 0x4c4a, 0x1430, 0xb6f4, 0x66f7, 0x85ac, 0x1, 0x0);
        gbc.writeMem(0xccca, { 0xf8, 0x69 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4c4a, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xccca));
        EXPECT(0x69, gbc.readMem(0xcccb));
    }
